
{'epsilon': 0.1, 'batch_size': 1, 'normalization_bounds': [0, 1], 'cost_samples': 1000, 'h_ind': [[0, 1], [2, 3, 4], [5, 6]], 'obj_funcs': ['branin2', 'hartmann3', 'beale2'], 'cost_types': [2, 1, 3], 'decay_factor': 0.005, 'warmup_eta': 0.01, 'n_trials': 10, 'n_iters': 50, 'n_init_data': 10, 'prefix_thresh': 10000000, 'warmup_iters': 10, 'use_pref_pool': 1, 'verbose': 1, 'rand_seed': 42, 'acqf': 'EIPU'}
Traceback (most recent call last):
  File "/home/abdelmajid/workdir/cost-aware-bo/main.py", line 64, in <module>
    trial_logs = bo_trial(trial_number=trial, acqf=args.acqf, wandb=wandb, params=params)
  File "/home/abdelmajid/workdir/cost-aware-bo/single_trial.py", line 37, in bo_trial
    input_bounds = get_gen_bounds(h_ind, bound_list, funcs=chosen_functions)
  File "/home/abdelmajid/workdir/cost-aware-bo/functions.py", line 114, in get_gen_bounds
    bounds = torch.tensor([lo_bounds, hi_bounds], device=DEVICE, dtype=torch.double)
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.