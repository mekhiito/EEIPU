COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[33.0775],
         [55.8106],
         [25.2581],
         ...,
         [70.6147],
         [16.0922],
         [41.8635]],
        [[13.0476],
         [42.2385],
         [17.1123],
         ...,
         [57.8135],
         [12.1526],
         [38.0955]],
        [[11.6284],
         [40.8065],
         [16.3071],
         ...,
         [56.3996],
         [11.7374],
         [37.6533]],
        ...,
        [[10.0796],
         [39.0964],
         [15.3602],
         ...,
         [54.6927],
         [11.2418],
         [37.1116]],
        [[14.5111],
         [43.6052],
         [17.8910],
         ...,
         [59.1503],
         [12.5489],
         [38.5084]],
        [[18.3480],
         [46.7795],
         [19.7368],
         ...,
         [62.2105],
         [13.4697],
         [39.4353]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.2131, 1.5135, 1.1098,  ..., 1.7092, 0.9886, 1.3292],
        [0.9484, 1.3342, 1.0021,  ..., 1.5400, 0.9366, 1.2794],
        [0.9296, 1.3153, 0.9915,  ..., 1.5213, 0.9311, 1.2736],
        ...,
        [0.9092, 1.2927, 0.9790,  ..., 1.4988, 0.9245, 1.2664],
        [0.9677, 1.3522, 1.0124,  ..., 1.5577, 0.9418, 1.2849],
        [1.0185, 1.3942, 1.0368,  ..., 1.5981, 0.9540, 1.2971]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[ 75.7954],
         [ 39.6977],
         [ 23.4486],
         ...,
         [102.1811],
         [ 13.1206],
         [121.2755]],
        [[ 19.0343],
         [ 30.1410],
         [ 10.7295],
         ...,
         [ 32.4906],
         [ 11.1672],
         [ 49.0875]],
        [[ 16.0417],
         [ 29.1307],
         [  9.7398],
         ...,
         [ 28.1942],
         [ 10.9466],
         [ 43.8881]],
        ...,
        [[ 12.9731],
         [ 27.9237],
         [  8.6373],
         ...,
         [ 23.6430],
         [ 10.6788],
         [ 38.1939]],
        [[ 22.2905],
         [ 31.1048],
         [ 11.7323],
         ...,
         [ 37.0364],
         [ 11.3749],
         [ 54.4331]],
        [[ 31.5836],
         [ 33.3419],
         [ 14.2893],
         ...,
         [ 49.4450],
         [ 11.8468],
         [ 68.3793]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[2.2847, 1.5106, 1.1622,  ..., 2.8505, 0.9407, 3.2600],
        [1.0675, 1.3057, 0.8894,  ..., 1.3561, 0.8988, 1.7120],
        [1.0034, 1.2840, 0.8682,  ..., 1.2640, 0.8941, 1.6005],
        ...,
        [0.9376, 1.2582, 0.8446,  ..., 1.1664, 0.8884, 1.4784],
        [1.1374, 1.3264, 0.9110,  ..., 1.4536, 0.9033, 1.8266],
        [1.3366, 1.3743, 0.9658,  ..., 1.7197, 0.9134, 2.1257]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[16.5362],
         [41.5371],
         [53.8410],
         ...,
         [23.0597],
         [27.8584],
         [72.9179]],
        [[10.7561],
         [25.0476],
         [33.9849],
         ...,
         [12.7067],
         [15.2660],
         [58.3668]],
        [[10.1984],
         [23.5274],
         [32.1033],
         ...,
         [11.8031],
         [14.1706],
         [56.7806]],
        ...,
        [[ 9.5463],
         [21.7682],
         [29.9121],
         ...,
         [10.7703],
         [12.9197],
         [54.8715]],
        [[11.2980],
         [26.5382],
         [35.8199],
         ...,
         [13.6023],
         [16.3524],
         [59.8707]],
        [[12.5923],
         [30.1488],
         [40.2271],
         ...,
         [15.8083],
         [19.0310],
         [63.3276]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.9205, 1.3271, 1.5272,  ..., 1.0266, 1.1046, 1.8375],
        [0.8265, 1.0589, 1.2043,  ..., 0.8582, 0.8998, 1.6008],
        [0.8174, 1.0342, 1.1737,  ..., 0.8435, 0.8820, 1.5750],
        ...,
        [0.8068, 1.0056, 1.1380,  ..., 0.8267, 0.8616, 1.5440],
        [0.8353, 1.0831, 1.2341,  ..., 0.8727, 0.9175, 1.6253],
        [0.8563, 1.1419, 1.3058,  ..., 0.9086, 0.9610, 1.6815]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[23.4094],
         [18.6325],
         [33.0775],
         ...,
         [94.8023],
         [77.4461],
         [28.6297]],
        [[12.9854],
         [12.9063],
         [13.0476],
         ...,
         [69.9709],
         [60.6749],
         [22.4240]],
        [[12.0719],
         [12.3328],
         [11.6284],
         ...,
         [67.3891],
         [58.8693],
         [21.7560]],
        ...,
        [[11.0268],
         [11.6563],
         [10.0796],
         ...,
         [64.3166],
         [56.7027],
         [20.9545]],
        [[13.8901],
         [13.4595],
         [14.5111],
         ...,
         [72.4423],
         [62.3911],
         [23.0590]],
        [[16.1157],
         [14.7654],
         [18.3480],
         ...,
         [78.2090],
         [66.3518],
         [24.5244]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1035, 1.0403, 1.2312,  ..., 2.0470, 1.8176, 1.1725],
        [0.9657, 0.9647, 0.9665,  ..., 1.7188, 1.5960, 1.0904],
        [0.9536, 0.9571, 0.9478,  ..., 1.6847, 1.5721, 1.0816],
        ...,
        [0.9398, 0.9481, 0.9273,  ..., 1.6441, 1.5435, 1.0710],
        [0.9777, 0.9720, 0.9859,  ..., 1.7515, 1.6186, 1.0988],
        [1.0071, 0.9892, 1.0366,  ..., 1.8277, 1.6710, 1.1182]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 14.3042],
         [ 29.3989],
         [ 75.7954],
         ...,
         [ 49.4221],
         [105.9097],
         [ 42.5935]],
        [[ 13.1646],
         [ 20.8682],
         [ 19.0343],
         ...,
         [ 12.9829],
         [ 37.4339],
         [ 34.9446]],
        [[ 13.0300],
         [ 20.0014],
         [ 16.0417],
         ...,
         [ 11.0028],
         [ 32.9119],
         [ 34.0988]],
        ...,
        [[ 12.8648],
         [ 18.9754],
         [ 12.9731],
         ...,
         [  8.9599],
         [ 28.0514],
         [ 33.0773]],
        [[ 13.2901],
         [ 21.7018],
         [ 22.2905],
         ...,
         [ 15.1258],
         [ 42.1585],
         [ 35.7441]],
        [[ 13.5713],
         [ 23.6611],
         [ 31.5836],
         ...,
         [ 21.1899],
         [ 54.8015],
         [ 37.5736]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9975, 1.3212, 2.3161,  ..., 1.7506, 2.9619, 1.6042],
        [0.9731, 1.1383, 1.0990,  ..., 0.9692, 1.4935, 1.4401],
        [0.9702, 1.1197, 1.0348,  ..., 0.9267, 1.3966, 1.4220],
        ...,
        [0.9667, 1.0977, 0.9690,  ..., 0.8829, 1.2923, 1.4001],
        [0.9758, 1.1562, 1.1688,  ..., 1.0152, 1.5948, 1.4573],
        [0.9818, 1.1982, 1.3681,  ..., 1.1452, 1.8659, 1.4965]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.2482],
         [30.9035],
         [16.5362],
         ...,
         [26.0977],
         [61.6160],
         [25.7097]],
        [[14.9394],
         [27.1604],
         [10.7561],
         ...,
         [20.0787],
         [28.0500],
         [21.2642]],
        [[14.7849],
         [26.7298],
         [10.1984],
         ...,
         [19.4375],
         [25.4464],
         [20.7703]],
        ...,
        [[14.5954],
         [26.2048],
         [ 9.5463],
         ...,
         [18.6700],
         [22.5484],
         [20.1732]],
        [[15.0835],
         [27.5642],
         [11.2980],
         ...,
         [20.6895],
         [30.6896],
         [21.7306]],
        [[15.4064],
         [28.4764],
         [12.5923],
         ...,
         [22.1037],
         [37.4266],
         [22.7963]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9627, 1.2011, 0.9674,  ..., 1.1229, 1.7006, 1.1166],
        [0.9414, 1.1402, 0.8734,  ..., 1.0250, 1.1547, 1.0443],
        [0.9389, 1.1332, 0.8643,  ..., 1.0146, 1.1123, 1.0363],
        ...,
        [0.9358, 1.1247, 0.8537,  ..., 1.0021, 1.0652, 1.0266],
        [0.9438, 1.1468, 0.8822,  ..., 1.0350, 1.1976, 1.0519],
        [0.9490, 1.1616, 0.9033,  ..., 1.0580, 1.3072, 1.0692]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.4946],
         [17.1564],
         [32.9977],
         ...,
         [93.5162],
         [77.1962],
         [28.4442]],
        [[12.4596],
         [12.3958],
         [13.0763],
         ...,
         [69.3738],
         [60.4314],
         [22.0111]],
        [[11.6463],
         [11.9070],
         [11.6607],
         ...,
         [66.8561],
         [58.6273],
         [21.3234]],
        ...,
        [[10.7103],
         [11.3270],
         [10.1148],
         ...,
         [63.8578],
         [56.4628],
         [20.4997]],
        [[13.2608],
         [12.8649],
         [14.5355],
         ...,
         [71.7823],
         [62.1463],
         [22.6656]],
        [[15.2158],
         [13.9638],
         [18.3573],
         ...,
         [77.3971],
         [66.1046],
         [24.1796]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0786, 1.0213, 1.2307,  ..., 2.0305, 1.8148, 1.1705],
        [0.9592, 0.9584, 0.9674,  ..., 1.7114, 1.5932, 1.0855],
        [0.9485, 0.9519, 0.9487,  ..., 1.6781, 1.5694, 1.0764],
        ...,
        [0.9361, 0.9443, 0.9283,  ..., 1.6385, 1.5408, 1.0655],
        [0.9698, 0.9646, 0.9867,  ..., 1.7432, 1.6159, 1.0941],
        [0.9957, 0.9791, 1.0372,  ..., 1.8174, 1.6682, 1.1141]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.8506],
         [ 24.6375],
         [ 74.2323],
         ...,
         [ 48.6130],
         [105.9126],
         [ 41.0218]],
        [[ 12.0471],
         [ 17.9881],
         [ 18.7546],
         ...,
         [ 12.8381],
         [ 37.2722],
         [ 34.4216]],
        [[ 11.8408],
         [ 17.3011],
         [ 15.8178],
         ...,
         [ 10.8873],
         [ 32.7521],
         [ 33.6822]],
        ...,
        [[ 11.5897],
         [ 16.4848],
         [ 12.8040],
         ...,
         [  8.8731],
         [ 27.8966],
         [ 32.7865]],
        [[ 12.2407],
         [ 18.6466],
         [ 21.9479],
         ...,
         [ 14.9482],
         [ 41.9973],
         [ 35.1187]],
        [[ 12.6790],
         [ 20.1860],
         [ 31.0508],
         ...,
         [ 20.9131],
         [ 54.6520],
         [ 36.7072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9872, 1.2185, 2.2820,  ..., 1.7326, 2.9613, 1.5698],
        [0.9485, 1.0759, 1.0923,  ..., 0.9654, 1.4894, 1.4283],
        [0.9441, 1.0611, 1.0293,  ..., 0.9236, 1.3925, 1.4124],
        ...,
        [0.9387, 1.0436, 0.9647,  ..., 0.8804, 1.2883, 1.3932],
        [0.9526, 1.0900, 1.1608,  ..., 1.0107, 1.5907, 1.4432],
        [0.9620, 1.1230, 1.3560,  ..., 1.1386, 1.8621, 1.4773]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1074],
         [27.8645],
         [16.5093],
         ...,
         [25.9764],
         [62.1297],
         [25.4014]],
        [[14.9457],
         [25.8608],
         [10.7687],
         ...,
         [19.9477],
         [27.8720],
         [21.2047]],
        [[14.8079],
         [25.6230],
         [10.2139],
         ...,
         [19.3062],
         [25.2390],
         [20.7360]],
        ...,
        [[14.6386],
         [25.3309],
         [ 9.5649],
         ...,
         [18.5385],
         [22.3143],
         [20.1686]],
        [[15.0741],
         [26.0823],
         [11.3076],
         ...,
         [20.5589],
         [30.5460],
         [21.6469]],
        [[15.3614],
         [26.5778],
         [12.5941],
         ...,
         [21.9747],
         [37.3895],
         [22.6555]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9608, 1.1521, 0.9674,  ..., 1.1214, 1.7094, 1.1120],
        [0.9420, 1.1195, 0.8740,  ..., 1.0233, 1.1522, 1.0438],
        [0.9397, 1.1156, 0.8650,  ..., 1.0129, 1.1094, 1.0361],
        ...,
        [0.9370, 1.1109, 0.8544,  ..., 1.0004, 1.0618, 1.0269],
        [0.9440, 1.1231, 0.8828,  ..., 1.0333, 1.1957, 1.0509],
        [0.9487, 1.1311, 0.9037,  ..., 1.0563, 1.3070, 1.0674]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3399],
         [15.6903],
         [32.9132],
         ...,
         [92.1851],
         [76.9412],
         [28.2783]],
        [[11.9647],
         [11.9381],
         [13.1071],
         ...,
         [68.7633],
         [60.1837],
         [21.6096]],
        [[11.2742],
         [11.5409],
         [11.6953],
         ...,
         [66.3129],
         [58.3812],
         [20.9019]],
        ...,
        [[10.4723],
         [11.0663],
         [10.1525],
         ...,
         [63.3925],
         [56.2189],
         [20.0558]],
        [[12.6397],
         [12.3169],
         [14.5615],
         ...,
         [71.1059],
         [61.8972],
         [22.2841]],
        [[14.2670],
         [13.1958],
         [18.3675],
         ...,
         [76.5616],
         [65.8529],
         [23.8481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0507, 1.0025, 1.2301,  ..., 2.0134, 1.8119, 1.1688],
        [0.9532, 0.9529, 0.9683,  ..., 1.7038, 1.5905, 1.0807],
        [0.9441, 0.9476, 0.9497,  ..., 1.6715, 1.5666, 1.0713],
        ...,
        [0.9335, 0.9413, 0.9293,  ..., 1.6329, 1.5381, 1.0602],
        [0.9621, 0.9579, 0.9875,  ..., 1.7348, 1.6131, 1.0896],
        [0.9836, 0.9695, 1.0378,  ..., 1.8069, 1.6654, 1.1103]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.5117],
         [ 20.0402],
         [ 72.6540],
         ...,
         [ 47.7977],
         [105.9034],
         [ 39.4848]],
        [[ 11.1273],
         [ 15.3951],
         [ 18.4794],
         ...,
         [ 12.6999],
         [ 37.1119],
         [ 33.8737]],
        [[ 10.8631],
         [ 14.9007],
         [ 15.5986],
         ...,
         [ 10.7782],
         [ 32.5943],
         [ 33.2371]],
        ...,
        [[ 10.5438],
         [ 14.3091],
         [ 12.6396],
         ...,
         [  8.7923],
         [ 27.7441],
         [ 32.4634]],
        [[ 11.3770],
         [ 15.8661],
         [ 21.6092],
         ...,
         [ 14.7769],
         [ 41.8369],
         [ 34.4723]],
        [[ 11.9479],
         [ 16.9571],
         [ 30.5201],
         ...,
         [ 20.6418],
         [ 54.5012],
         [ 35.8309]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1193, 2.2476,  ..., 1.7145, 2.9605, 1.5363],
        [0.9282, 1.0197, 1.0859,  ..., 0.9619, 1.4854, 1.4160],
        [0.9225, 1.0091, 1.0241,  ..., 0.9207, 1.3885, 1.4023],
        ...,
        [0.9157, 0.9964, 0.9606,  ..., 0.8781, 1.2845, 1.3857],
        [0.9336, 1.0298, 1.1530,  ..., 1.0065, 1.5867, 1.4288],
        [0.9458, 1.0532, 1.3441,  ..., 1.1322, 1.8583, 1.4579]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0423],
         [25.8343],
         [16.4826],
         ...,
         [25.8666],
         [62.6379],
         [25.1156]],
        [[15.0129],
         [24.1592],
         [10.7818],
         ...,
         [19.8152],
         [27.6975],
         [21.1474]],
        [[14.8902],
         [23.9596],
         [10.2300],
         ...,
         [19.1721],
         [25.0363],
         [20.7020]],
        ...,
        [[14.7393],
         [23.7141],
         [ 9.5841],
         ...,
         [18.4029],
         [22.0861],
         [20.1622]],
        [[15.1272],
         [24.3450],
         [11.3177],
         ...,
         [20.4280],
         [30.4049],
         [21.5672]],
        [[15.3823],
         [24.7601],
         [12.5964],
         ...,
         [21.8481],
         [37.3525],
         [22.5231]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9602, 1.1195, 0.9674,  ..., 1.1200, 1.7181, 1.1078],
        [0.9435, 1.0922, 0.8747,  ..., 1.0216, 1.1498, 1.0433],
        [0.9415, 1.0890, 0.8657,  ..., 1.0111, 1.1065, 1.0360],
        ...,
        [0.9390, 1.0850, 0.8552,  ..., 0.9986, 1.0585, 1.0272],
        [0.9453, 1.0953, 0.8834,  ..., 1.0316, 1.1938, 1.0501],
        [0.9495, 1.1020, 0.9042,  ..., 1.0547, 1.3068, 1.0656]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3097],
         [12.0608],
         [32.6696],
         ...,
         [88.2425],
         [76.1962],
         [27.8890]],
        [[10.8946],
         [10.9554],
         [13.1981],
         ...,
         [66.9691],
         [59.4634],
         [20.4790]],
        [[10.6279],
         [10.8258],
         [11.7973],
         ...,
         [64.7208],
         [57.6660],
         [19.7108]],
        ...,
        [[10.3059],
         [10.6671],
         [10.2637],
         ...,
         [62.0350],
         [55.5104],
         [18.7973]],
        [[11.1468],
         [11.0764],
         [14.6385],
         ...,
         [69.1140],
         [61.1725],
         [21.2147]],
        [[11.7241],
         [11.3482],
         [18.3979],
         ...,
         [74.0934],
         [65.1198],
         [22.9330]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9725, 0.9560, 1.2284,  ..., 1.9628, 1.8036, 1.1652],
        [0.9406, 0.9414, 0.9711,  ..., 1.6817, 1.5825, 1.0673],
        [0.9371, 0.9397, 0.9525,  ..., 1.6520, 1.5587, 1.0571],
        ...,
        [0.9328, 0.9376, 0.9323,  ..., 1.6165, 1.5302, 1.0451],
        [0.9440, 0.9430, 0.9901,  ..., 1.7100, 1.6051, 1.0770],
        [0.9516, 0.9466, 1.0398,  ..., 1.7758, 1.6572, 1.0997]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 12.3816],
         [ 12.5894],
         [ 68.0572],
         ...,
         [ 45.4728],
         [105.8879],
         [ 35.6212]],
        [[  9.2498],
         [ 10.1726],
         [ 17.6913],
         ...,
         [ 12.3220],
         [ 36.6446],
         [ 32.1747]],
        [[  8.9219],
         [  9.9077],
         [ 14.9737],
         ...,
         [ 10.4830],
         [ 32.1339],
         [ 31.7720]],
        ...,
        [[  8.5309],
         [  9.5884],
         [ 12.1739],
         ...,
         [  8.5774],
         [ 27.2997],
         [ 31.2791]],
        [[  9.5633],
         [ 10.4234],
         [ 20.6363],
         ...,
         [ 14.3051],
         [ 41.3692],
         [ 32.5511]],
        [[ 10.2931],
         [ 10.9991],
         [ 28.9862],
         ...,
         [ 19.8838],
         [ 54.0625],
         [ 33.3973]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9538, 0.9582, 2.1477,  ..., 1.6634, 2.9589, 1.4521],
        [0.8866, 0.9064, 1.0676,  ..., 0.9525, 1.4741, 1.3782],
        [0.8796, 0.9007, 1.0094,  ..., 0.9131, 1.3773, 1.3696],
        ...,
        [0.8712, 0.8939, 0.9493,  ..., 0.8722, 1.2737, 1.3590],
        [0.8933, 0.9118, 1.1308,  ..., 0.9950, 1.5754, 1.3863],
        [0.9090, 0.9241, 1.3098,  ..., 1.1146, 1.8476, 1.4044]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9734],
         [23.1424],
         [16.4032],
         ...,
         [25.5932],
         [64.1611],
         [24.3094]],
        [[15.1989],
         [19.1740],
         [10.8211],
         ...,
         [19.4413],
         [27.2029],
         [20.9859]],
        [[15.1056],
         [18.7326],
         [10.2780],
         ...,
         [18.7907],
         [24.4616],
         [20.6074]],
        ...,
        [[14.9907],
         [18.1990],
         [ 9.6417],
         ...,
         [18.0135],
         [21.4401],
         [20.1472]],
        [[15.2854],
         [19.5906],
         [11.3480],
         ...,
         [20.0618],
         [30.0058],
         [21.3415]],
        [[15.4783],
         [20.5424],
         [12.6032],
         ...,
         [21.5022],
         [37.2551],
         [22.1475]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9604, 1.0770, 0.9674,  ..., 1.1169, 1.7442, 1.0960],
        [0.9478, 1.0125, 0.8766,  ..., 1.0168, 1.1431, 1.0419],
        [0.9463, 1.0053, 0.8678,  ..., 1.0062, 1.0985, 1.0358],
        ...,
        [0.9444, 0.9966, 0.8574,  ..., 0.9936, 1.0493, 1.0283],
        [0.9492, 1.0193, 0.8852,  ..., 1.0269, 1.1887, 1.0477],
        [0.9524, 1.0347, 0.9056,  ..., 1.0503, 1.3066, 1.0608]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5293],
         [11.5180],
         [32.2467],
         ...,
         [81.7787],
         [74.9847],
         [27.4359]],
        [[10.8635],
         [10.7155],
         [13.3638],
         ...,
         [64.0252],
         [58.3058],
         [18.8911]],
        [[10.6734],
         [10.6201],
         [11.9832],
         ...,
         [62.1146],
         [56.5180],
         [18.0383]],
        ...,
        [[10.4419],
         [10.5030],
         [10.4664],
         ...,
         [59.8222],
         [54.3750],
         [17.0332]],
        [[11.0421],
         [10.8043],
         [14.7792],
         ...,
         [65.8413],
         [60.0066],
         [19.7142]],
        [[11.4466],
         [11.0029],
         [18.4556],
         ...,
         [70.0332],
         [63.9372],
         [21.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9650, 0.9517, 1.2256,  ..., 1.8802, 1.7904, 1.1620],
        [0.9430, 0.9411, 0.9761,  ..., 1.6456, 1.5700, 1.0491],
        [0.9405, 0.9398, 0.9578,  ..., 1.6203, 1.5464, 1.0378],
        ...,
        [0.9375, 0.9383, 0.9378,  ..., 1.5900, 1.5181, 1.0246],
        [0.9454, 0.9422, 0.9948,  ..., 1.6696, 1.5925, 1.0600],
        [0.9507, 0.9449, 1.0434,  ..., 1.7250, 1.6444, 1.0857]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.4386],
         [ 12.8711],
         [ 60.9241],
         ...,
         [ 41.8943],
         [105.7690],
         [ 32.3724]],
        [[  7.4752],
         [  7.8960],
         [ 16.5315],
         ...,
         [ 11.8206],
         [ 35.9313],
         [ 28.9079]],
        [[  6.9517],
         [  7.4326],
         [ 14.0666],
         ...,
         [ 10.1068],
         [ 31.4362],
         [ 28.5056]],
        ...,
        [[  6.3526],
         [  6.8950],
         [ 11.5120],
         ...,
         [  8.3211],
         [ 26.6310],
         [ 28.0141]],
        [[  7.9935],
         [  8.3495],
         [ 19.1890],
         ...,
         [ 13.6597],
         [ 40.6500],
         [ 29.2843]],
        [[  9.2678],
         [  9.4445],
         [ 26.6633],
         ...,
         [ 18.7942],
         [ 53.3715],
         [ 30.1323]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9756, 0.9634, 1.9939,  ..., 1.5858, 2.9555, 1.3816],
        [0.8477, 0.8568, 1.0419,  ..., 0.9409, 1.4579, 1.3073],
        [0.8365, 0.8468, 0.9891,  ..., 0.9042, 1.3616, 1.2987],
        ...,
        [0.8237, 0.8353, 0.9343,  ..., 0.8659, 1.2585, 1.2882],
        [0.8589, 0.8665, 1.0989,  ..., 0.9804, 1.5591, 1.3154],
        [0.8862, 0.8900, 1.2592,  ..., 1.0905, 1.8319, 1.3336]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.4337],
         [18.0228],
         [16.2803],
         ...,
         [25.3347],
         [66.5147],
         [23.3202]],
        [[13.1108],
         [15.5625],
         [10.8893],
         ...,
         [18.8636],
         [26.4833],
         [20.7535]],
        [[12.9557],
         [15.2823],
         [10.3605],
         ...,
         [18.1873],
         [23.6300],
         [20.4560]],
        ...,
        [[12.7657],
         [14.9415],
         [ 9.7397],
         ...,
         [17.3815],
         [20.5122],
         [20.0928]],
        [[13.2556],
         [15.8258],
         [11.4015],
         ...,
         [19.5103],
         [29.4225],
         [21.0319]],
        [[13.5809],
         [16.4225],
         [12.6186],
         ...,
         [21.0168],
         [37.1144],
         [21.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9376, 0.9960, 0.9676,  ..., 1.1149, 1.7847, 1.0821],
        [0.9161, 0.9559, 0.8799,  ..., 1.0096, 1.1336, 1.0404],
        [0.9135, 0.9514, 0.8713,  ..., 0.9986, 1.0872, 1.0355],
        ...,
        [0.9105, 0.9458, 0.8612,  ..., 0.9855, 1.0365, 1.0296],
        [0.9184, 0.9602, 0.8883,  ..., 1.0202, 1.1814, 1.0449],
        [0.9237, 0.9699, 0.9081,  ..., 1.0447, 1.3065, 1.0551]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1720],
         [11.5063],
         [32.0351],
         ...,
         [78.9333],
         [74.4428],
         [27.2622]],
        [[10.8494],
         [10.7246],
         [13.4509],
         ...,
         [62.7029],
         [57.7944],
         [18.3012]],
        [[10.6960],
         [10.6316],
         [12.0809],
         ...,
         [60.9413],
         [56.0115],
         [17.4202]],
        ...,
        [[10.5087],
         [10.5173],
         [10.5729],
         ...,
         [58.8236],
         [53.8748],
         [16.3855]],
        [[10.9930],
         [10.8112],
         [14.8533],
         ...,
         [64.3744],
         [59.4909],
         [19.1540]],
        [[11.3166],
         [11.0047],
         [18.4871],
         ...,
         [68.2221],
         [63.4126],
         [21.1792]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9618, 0.9530, 1.2243,  ..., 1.8441, 1.7848, 1.1612],
        [0.9443, 0.9427, 0.9787,  ..., 1.6296, 1.5647, 1.0428],
        [0.9423, 0.9415, 0.9606,  ..., 1.6063, 1.5412, 1.0312],
        ...,
        [0.9398, 0.9399, 0.9407,  ..., 1.5783, 1.5129, 1.0175],
        [0.9462, 0.9438, 0.9972,  ..., 1.6517, 1.5872, 1.0541],
        [0.9505, 0.9464, 1.0453,  ..., 1.7025, 1.6390, 1.0808]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.1746],
         [ 12.9886],
         [ 57.9570],
         ...,
         [ 40.3872],
         [105.6421],
         [ 31.7276]],
        [[  7.5826],
         [  7.7511],
         [ 16.0780],
         ...,
         [ 11.6440],
         [ 35.6411],
         [ 27.3217]],
        [[  7.0814],
         [  7.2713],
         [ 13.7183],
         ...,
         [  9.9825],
         [ 31.1557],
         [ 26.8207]],
        ...,
        [[  6.5051],
         [  6.7168],
         [ 11.2651],
         ...,
         [  8.2461],
         [ 26.3653],
         [ 26.2116]],
        [[  8.0767],
         [  8.2222],
         [ 18.6156],
         ...,
         [ 13.4225],
         [ 40.3535],
         [ 27.7925]],
        [[  9.2842],
         [  9.3655],
         [ 25.7226],
         ...,
         [ 18.3676],
         [ 53.0746],
         [ 28.8604]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9702, 0.9662, 1.9305,  ..., 1.5537, 2.9530, 1.3680],
        [0.8503, 0.8539, 1.0324,  ..., 0.9374, 1.4519, 1.2735],
        [0.8395, 0.8436, 0.9818,  ..., 0.9017, 1.3558, 1.2628],
        ...,
        [0.8272, 0.8317, 0.9292,  ..., 0.8645, 1.2530, 1.2497],
        [0.8609, 0.8640, 1.0868,  ..., 0.9755, 1.5530, 1.2836],
        [0.8867, 0.8885, 1.2392,  ..., 1.0815, 1.8258, 1.3065]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.4926],
         [16.8000],
         [16.2305],
         ...,
         [25.2980],
         [67.4504],
         [23.0543]],
        [[13.3867],
         [14.9616],
         [10.9222],
         ...,
         [18.6140],
         [26.2010],
         [20.6626]],
        [[13.2558],
         [14.7485],
         [10.3996],
         ...,
         [17.9204],
         [23.3067],
         [20.3843]],
        ...,
        [[13.0952],
         [14.4882],
         [ 9.7855],
         ...,
         [17.0952],
         [20.1550],
         [20.0441]],
        [[13.5087],
         [15.1611],
         [11.4280],
         ...,
         [19.2783],
         [29.1911],
         [20.9229]],
        [[13.7818],
         [15.6107],
         [12.6285],
         ...,
         [20.8292],
         [37.0525],
         [21.5088]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9396, 0.9771, 0.9678,  ..., 1.1153, 1.8009, 1.0788],
        [0.9216, 0.9472, 0.8815,  ..., 1.0066, 1.1300, 1.0399],
        [0.9194, 0.9437, 0.8730,  ..., 0.9953, 1.0829, 1.0354],
        ...,
        [0.9168, 0.9395, 0.8630,  ..., 0.9819, 1.0317, 1.0299],
        [0.9236, 0.9504, 0.8897,  ..., 1.0174, 1.1786, 1.0441],
        [0.9280, 0.9577, 0.9092,  ..., 1.0426, 1.3065, 1.0537]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7120],
         [11.5893],
         [30.5628],
         ...,
         [60.9246],
         [70.6250],
         [26.0219]],
        [[10.6273],
         [10.8388],
         [14.1445],
         ...,
         [53.1885],
         [54.2960],
         [14.9692]],
        [[10.5003],
         [10.7493],
         [12.8579],
         ...,
         [52.3019],
         [52.5572],
         [13.9789]],
        ...,
        [[10.3446],
         [10.6393],
         [11.4224],
         ...,
         [51.2219],
         [50.4763],
         [12.8403]],
        [[10.7460],
         [10.9221],
         [15.4465],
         ...,
         [54.0204],
         [55.9524],
         [15.9457]],
        [[11.0127],
         [11.1080],
         [18.7592],
         ...,
         [55.9024],
         [59.7883],
         [18.3318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9679, 0.9662, 1.2170,  ..., 1.6182, 1.7464, 1.1570],
        [0.9535, 0.9563, 1.0000,  ..., 1.5160, 1.5306, 1.0109],
        [0.9519, 0.9551, 0.9830,  ..., 1.5043, 1.5077, 0.9978],
        ...,
        [0.9498, 0.9537, 0.9640,  ..., 1.4900, 1.4802, 0.9828],
        [0.9551, 0.9574, 1.0172,  ..., 1.5270, 1.5525, 1.0238],
        [0.9586, 0.9599, 1.0610,  ..., 1.5519, 1.6032, 1.0554]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 12.0209],
         [ 12.9261],
         [ 40.1204],
         ...,
         [ 31.1123],
         [100.8667],
         [ 24.4076]],
        [[  9.5532],
         [  7.8249],
         [ 13.3474],
         ...,
         [ 10.7555],
         [ 33.8992],
         [ 17.9274]],
        [[  9.2853],
         [  7.3536],
         [ 11.6474],
         ...,
         [  9.4303],
         [ 29.6189],
         [ 17.2555]],
        ...,
        [[  8.9633],
         [  6.8078],
         [  9.8353],
         ...,
         [  8.0103],
         [ 25.0500],
         [ 16.4565]],
        [[  9.8074],
         [  8.2869],
         [ 15.1363],
         ...,
         [ 12.1437],
         [ 38.3982],
         [ 18.5709]],
        [[ 10.3925],
         [  9.4052],
         [ 19.9784],
         ...,
         [ 15.8741],
         [ 50.5520],
         [ 20.0737]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9518, 0.9712, 1.5543,  ..., 1.3612, 2.8570, 1.2174],
        [0.8989, 0.8618, 0.9802,  ..., 0.9247, 1.4209, 1.0784],
        [0.8931, 0.8517, 0.9438,  ..., 0.8962, 1.3292, 1.0640],
        ...,
        [0.8862, 0.8400, 0.9049,  ..., 0.8658, 1.2312, 1.0469],
        [0.9043, 0.8717, 1.0186,  ..., 0.9544, 1.5174, 1.0922],
        [0.9169, 0.8957, 1.1224,  ..., 1.0344, 1.7780, 1.1245]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.6466],
         [16.3916],
         [15.9017],
         ...,
         [25.6741],
         [74.0209],
         [22.0447]],
        [[14.9118],
         [12.7055],
         [11.1726],
         ...,
         [17.1356],
         [24.4946],
         [20.0537]],
        [[14.8233],
         [12.3111],
         [10.6950],
         ...,
         [16.2990],
         [21.3608],
         [19.8200]],
        ...,
        [[14.7141],
         [11.8385],
         [10.1304],
         ...,
         [15.3173],
         [18.0228],
         [19.5339]],
        [[14.9940],
         [13.0808],
         [11.6325],
         ...,
         [17.9460],
         [27.7946],
         [20.2718]],
        [[15.1770],
         [13.9487],
         [12.7155],
         ...,
         [19.8724],
         [36.7353],
         [20.7616]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9660, 0.9781, 0.9701,  ..., 1.1291, 1.9154, 1.0700],
        [0.9540, 0.9181, 0.8932,  ..., 0.9902, 1.1099, 1.0376],
        [0.9526, 0.9117, 0.8854,  ..., 0.9766, 1.0589, 1.0338],
        ...,
        [0.9508, 0.9040, 0.8762,  ..., 0.9606, 1.0046, 1.0292],
        [0.9554, 0.9242, 0.9007,  ..., 1.0034, 1.1635, 1.0412],
        [0.9583, 0.9384, 0.9183,  ..., 1.0347, 1.3090, 1.0492]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1854],
         [11.5909],
         [29.9502],
         ...,
         [54.3515],
         [68.9421],
         [25.3395]],
        [[10.1996],
         [10.8081],
         [14.4888],
         ...,
         [48.9855],
         [52.8150],
         [13.8445]],
        [[ 9.8806],
         [10.7150],
         [13.2432],
         ...,
         [48.3592],
         [51.1013],
         [12.8464]],
        ...,
        [[ 9.4984],
         [10.6005],
         [11.8450],
         ...,
         [47.5929],
         [49.0513],
         [11.7070]],
        [[10.5034],
         [10.8948],
         [15.7425],
         ...,
         [49.5709],
         [54.4482],
         [14.8348]],
        [[11.2060],
         [11.0887],
         [18.9063],
         ...,
         [50.8875],
         [58.2329],
         [17.2777]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9935, 0.9725, 1.2151,  ..., 1.5376, 1.7304, 1.1541],
        [0.9541, 0.9621, 1.0107,  ..., 1.4666, 1.5172, 1.0022],
        [0.9498, 0.9609, 0.9943,  ..., 1.4584, 1.4946, 0.9890],
        ...,
        [0.9448, 0.9594, 0.9758,  ..., 1.4482, 1.4675, 0.9740],
        [0.9581, 0.9633, 1.0273,  ..., 1.4744, 1.5388, 1.0153],
        [0.9674, 0.9658, 1.0691,  ..., 1.4918, 1.5889, 1.0476]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3346],
         [13.0930],
         [34.1129],
         ...,
         [27.7546],
         [98.4559],
         [19.9461]],
        [[ 8.8114],
         [ 7.6466],
         [12.3941],
         ...,
         [10.5234],
         [33.1665],
         [15.1179]],
        [[ 8.4520],
         [ 7.1541],
         [10.9341],
         ...,
         [ 9.3329],
         [28.9871],
         [14.6080]],
        ...,
        [[ 8.0263],
         [ 6.5867],
         [ 9.3589],
         ...,
         [ 8.0409],
         [24.5244],
         [13.9990]],
        [[ 9.1567],
         [ 8.1314],
         [13.9145],
         ...,
         [11.7568],
         [37.5582],
         [15.6044]],
        [[ 9.9673],
         [ 9.3125],
         [17.9621],
         ...,
         [15.0144],
         [49.4169],
         [16.7341]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9638, 0.9801, 1.4308,  ..., 1.2945, 2.8106, 1.1270],
        [0.8883, 0.8633, 0.9651,  ..., 0.9250, 1.4105, 1.0235],
        [0.8806, 0.8527, 0.9338,  ..., 0.8995, 1.3209, 1.0126],
        ...,
        [0.8714, 0.8406, 0.9000,  ..., 0.8717, 1.2252, 0.9995],
        [0.8957, 0.8737, 0.9977,  ..., 0.9514, 1.5047, 1.0339],
        [0.9131, 0.8990, 1.0845,  ..., 1.0213, 1.7590, 1.0582]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5585],
         [16.8670],
         [15.7673],
         ...,
         [26.0455],
         [75.4427],
         [21.9000]],
        [[13.5712],
         [11.8328],
         [11.2929],
         ...,
         [16.6402],
         [24.1192],
         [19.7890]],
        [[13.4537],
         [11.3248],
         [10.8358],
         ...,
         [15.7425],
         [20.9438],
         [19.5422]],
        ...,
        [[13.3093],
         [10.7245],
         [10.2941],
         ...,
         [14.6953],
         [17.5776],
         [19.2402]],
        [[13.6805],
         [12.3220],
         [11.7320],
         ...,
         [17.5144],
         [27.4766],
         [20.0195]],
        [[13.9250],
         [13.4743],
         [12.7622],
         ...,
         [19.6095],
         [36.6321],
         [20.5379]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9519, 0.9894, 0.9716,  ..., 1.1387, 1.9422, 1.0713],
        [0.9358, 0.9076, 0.8988,  ..., 0.9858, 1.1074, 1.0370],
        [0.9339, 0.8993, 0.8913,  ..., 0.9712, 1.0558, 1.0330],
        ...,
        [0.9316, 0.8895, 0.8825,  ..., 0.9541, 1.0010, 1.0280],
        [0.9376, 0.9155, 0.9059,  ..., 1.0000, 1.1620, 1.0407],
        [0.9416, 0.9343, 0.9227,  ..., 1.0340, 1.3109, 1.0492]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7984],
         [11.5982],
         [29.5207],
         ...,
         [51.2601],
         [68.0127],
         [24.9241]],
        [[10.0738],
         [10.8094],
         [14.7561],
         ...,
         [46.8326],
         [52.0157],
         [13.4439]],
        [[ 9.6891],
         [10.7155],
         [13.5423],
         ...,
         [46.3118],
         [50.3175],
         [12.4549]],
        ...,
        [[ 9.2318],
         [10.6002],
         [12.1736],
         ...,
         [45.6734],
         [48.2865],
         [11.3278]],
        [[10.4426],
         [10.8967],
         [15.9731],
         ...,
         [47.3186],
         [53.6344],
         [14.4267]],
        [[11.3049],
         [11.0920],
         [19.0256],
         ...,
         [48.4089],
         [57.3869],
         [16.8568]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9984, 0.9693, 1.2061,  ..., 1.4934, 1.7148, 1.1454],
        [0.9491, 0.9589, 1.0110,  ..., 1.4349, 1.5034, 0.9937],
        [0.9440, 0.9576, 0.9950,  ..., 1.4280, 1.4810, 0.9806],
        ...,
        [0.9380, 0.9561, 0.9769,  ..., 1.4196, 1.4541, 0.9657],
        [0.9540, 0.9600, 1.0271,  ..., 1.4413, 1.5248, 1.0067],
        [0.9654, 0.9626, 1.0674,  ..., 1.4558, 1.5744, 1.0388]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4135],
         [12.7321],
         [31.5581],
         ...,
         [26.2196],
         [97.3571],
         [17.6099]],
        [[ 8.6540],
         [ 8.0978],
         [12.0432],
         ...,
         [10.4588],
         [32.8103],
         [13.9262]],
        [[ 8.2761],
         [ 7.6567],
         [10.6894],
         ...,
         [ 9.3341],
         [28.6772],
         [13.5274]],
        ...,
        [[ 7.8298],
         [ 7.1424],
         [ 9.2187],
         ...,
         [ 8.1048],
         [24.2639],
         [13.0483]],
        [[ 9.0183],
         [ 8.5277],
         [13.4448],
         ...,
         [11.6171],
         [37.1530],
         [14.3048]],
        [[ 9.8773],
         [ 9.5586],
         [17.1421],
         ...,
         [14.6473],
         [48.8786],
         [15.1770]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9692, 0.9760, 1.3797,  ..., 1.2652, 2.7907, 1.0806],
        [0.8885, 0.8766, 0.9612,  ..., 0.9272, 1.4065, 1.0016],
        [0.8804, 0.8672, 0.9322,  ..., 0.9031, 1.3179, 0.9930],
        ...,
        [0.8709, 0.8561, 0.9007,  ..., 0.8768, 1.2233, 0.9828],
        [0.8964, 0.8858, 0.9913,  ..., 0.9521, 1.4997, 1.0097],
        [0.9148, 0.9079, 1.0706,  ..., 1.0171, 1.7511, 1.0284]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.4545],
         [15.6325],
         [15.7295],
         ...,
         [26.3595],
         [75.4427],
         [22.0078]],
        [[13.1067],
         [12.4853],
         [11.3709],
         ...,
         [16.3854],
         [24.1192],
         [19.7119]],
        [[12.9488],
         [12.1427],
         [10.9233],
         ...,
         [15.4489],
         [20.9438],
         [19.4449]],
        ...,
        [[12.7556],
         [11.7304],
         [10.3920],
         ...,
         [14.3606],
         [17.5776],
         [19.1185]],
        [[13.2541],
         [12.8103],
         [11.8005],
         ...,
         [17.3004],
         [27.4766],
         [19.9616]],
        [[13.5854],
         [13.5575],
         [12.8068],
         ...,
         [19.5042],
         [36.6321],
         [20.5241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9522, 0.9714, 0.9730,  ..., 1.1459, 1.9442, 1.0751],
        [0.9303, 0.9202, 0.9021,  ..., 0.9836, 1.1094, 1.0377],
        [0.9277, 0.9146, 0.8948,  ..., 0.9684, 1.0578, 1.0334],
        ...,
        [0.9246, 0.9079, 0.8862,  ..., 0.9507, 1.0030, 1.0281],
        [0.9327, 0.9255, 0.9091,  ..., 0.9985, 1.1640, 1.0418],
        [0.9381, 0.9376, 0.9254,  ..., 1.0344, 1.3130, 1.0510]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5826],
         [11.6827],
         [28.3283],
         ...,
         [42.9650],
         [65.0738],
         [23.4815]],
        [[ 9.9388],
         [10.8202],
         [15.6446],
         ...,
         [40.1680],
         [49.5677],
         [12.2762]],
        [[ 9.4781],
         [10.7179],
         [14.5360],
         ...,
         [39.8347],
         [47.9254],
         [11.3291]],
        ...,
        [[ 8.9359],
         [10.5924],
         [13.2686],
         ...,
         [39.4248],
         [45.9625],
         [10.2546]],
        [[10.3839],
         [10.9155],
         [16.7430],
         ...,
         [40.4782],
         [51.1338],
         [13.2207]],
        [[11.4381],
         [11.1286],
         [19.4474],
         ...,
         [41.1712],
         [54.7670],
         [15.5699]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0016, 0.9632, 1.1832,  ..., 1.3766, 1.6688, 1.1192],
        [0.9402, 0.9518, 1.0156,  ..., 1.3397, 1.4639, 0.9711],
        [0.9341, 0.9505, 1.0009,  ..., 1.3353, 1.4422, 0.9586],
        ...,
        [0.9269, 0.9488, 0.9842,  ..., 1.3299, 1.4163, 0.9444],
        [0.9461, 0.9531, 1.0301,  ..., 1.3438, 1.4846, 0.9836],
        [0.9600, 0.9559, 1.0658,  ..., 1.3529, 1.5326, 1.0146]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3944],
         [12.3664],
         [25.0194],
         ...,
         [21.9693],
         [94.1479],
         [12.2494]],
        [[ 8.6914],
         [ 8.7470],
         [11.0681],
         ...,
         [10.3181],
         [31.6599],
         [11.3827]],
        [[ 8.3179],
         [ 8.3800],
         [10.0053],
         ...,
         [ 9.3966],
         [27.6644],
         [11.2798]],
        ...,
        [[ 7.8764],
         [ 7.9458],
         [ 8.8269],
         ...,
         [ 8.3665],
         [23.3991],
         [11.1533]],
        [[ 9.0512],
         [ 9.1001],
         [12.1494],
         ...,
         [11.2489],
         [35.8593],
         [11.4786]],
        [[ 9.8987],
         [ 9.9305],
         [14.9239],
         ...,
         [13.6108],
         [47.2024],
         [11.6930]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9812, 0.9806, 1.2519,  ..., 1.1865, 2.7342, 0.9780],
        [0.9017, 0.9029, 0.9527,  ..., 0.9366, 1.3943, 0.9595],
        [0.8937, 0.8951, 0.9299,  ..., 0.9169, 1.3086, 0.9573],
        ...,
        [0.8843, 0.8858, 0.9047,  ..., 0.8948, 1.2171, 0.9545],
        [0.9095, 0.9105, 0.9759,  ..., 0.9566, 1.4843, 0.9615],
        [0.9276, 0.9283, 1.0354,  ..., 1.0072, 1.7276, 0.9661]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.4714],
         [15.1891],
         [15.6584],
         ...,
         [27.3211],
         [75.4427],
         [22.3515]],
        [[12.8085],
         [12.8475],
         [11.6210],
         ...,
         [15.7675],
         [24.1192],
         [19.4431]],
        [[12.6164],
         [12.5840],
         [11.1999],
         ...,
         [14.7303],
         [20.9438],
         [19.1105]],
        ...,
        [[12.3820],
         [12.2644],
         [10.6983],
         ...,
         [13.5372],
         [17.5776],
         [18.7055]],
        [[12.9885],
         [13.0957],
         [12.0239],
         ...,
         [16.7899],
         [27.4766],
         [19.7553]],
        [[13.3945],
         [13.6605],
         [12.9630],
         ...,
         [19.2865],
         [36.6321],
         [20.4622]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9588, 0.9704, 0.9781,  ..., 1.1678, 1.9504, 1.0869],
        [0.9317, 0.9324, 0.9124,  ..., 0.9798, 1.1157, 1.0396],
        [0.9286, 0.9281, 0.9056,  ..., 0.9630, 1.0640, 1.0342],
        ...,
        [0.9248, 0.9229, 0.8974,  ..., 0.9436, 1.0093, 1.0276],
        [0.9346, 0.9364, 0.9190,  ..., 0.9965, 1.1703, 1.0447],
        [0.9412, 0.9456, 0.9342,  ..., 1.0371, 1.3192, 1.0562]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.4544],
         [11.9543],
         [26.3235],
         ...,
         [32.9504],
         [58.7831],
         [20.1874]],
        [[ 9.9591],
         [10.8394],
         [18.2022],
         ...,
         [30.4347],
         [44.7494],
         [10.7099]],
        [[ 9.5103],
         [10.7088],
         [17.3897],
         ...,
         [30.1370],
         [43.2636],
         [ 9.9016]],
        ...,
        [[ 8.9813],
         [10.5489],
         [16.4314],
         ...,
         [29.7715],
         [41.4879],
         [ 8.9827]],
        [[10.3923],
         [10.9613],
         [18.9861],
         ...,
         [30.7122],
         [46.1664],
         [11.5146]],
        [[11.4159],
         [11.2354],
         [20.8373],
         ...,
         [31.3336],
         [49.4541],
         [13.5106]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9886, 0.9556, 1.1455,  ..., 1.2330, 1.5744, 1.0644],
        [0.9292, 0.9408, 1.0381,  ..., 1.1998, 1.3890, 0.9391],
        [0.9233, 0.9391, 1.0274,  ..., 1.1959, 1.3693, 0.9284],
        ...,
        [0.9163, 0.9370, 1.0147,  ..., 1.1910, 1.3459, 0.9163],
        [0.9349, 0.9424, 1.0485,  ..., 1.2035, 1.4077, 0.9497],
        [0.9484, 0.9461, 1.0730,  ..., 1.2117, 1.4511, 0.9761]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5725],
         [11.8687],
         [18.0457],
         ...,
         [16.6454],
         [88.7007],
         [12.5920]],
        [[ 8.3614],
         [10.0702],
         [10.0684],
         ...,
         [10.3255],
         [29.3454],
         [ 8.3275]],
        [[ 7.9497],
         [ 9.8675],
         [ 9.3668],
         ...,
         [ 9.7328],
         [25.5903],
         [ 7.9119]],
        ...,
        [[ 7.4667],
         [ 9.6215],
         [ 8.5636],
         ...,
         [ 9.0443],
         [21.5906],
         [ 7.4249]],
        [[ 8.7604],
         [10.2611],
         [10.7627],
         ...,
         [10.9047],
         [33.2999],
         [ 8.7305]],
        [[ 9.7095],
         [10.6953],
         [12.4690],
         ...,
         [12.3002],
         [44.0141],
         [ 9.6900]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9689, 0.9538, 1.0863,  ..., 1.0563, 2.6014, 0.9693],
        [0.8786, 0.9153, 0.9152,  ..., 0.9207, 1.3286, 0.8779],
        [0.8698, 0.9109, 0.9002,  ..., 0.9080, 1.2481, 0.8690],
        ...,
        [0.8594, 0.9056, 0.8830,  ..., 0.8933, 1.1623, 0.8585],
        [0.8872, 0.9194, 0.9301,  ..., 0.9332, 1.4134, 0.8865],
        [0.9075, 0.9287, 0.9667,  ..., 0.9631, 1.6431, 0.9071]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5569],
         [14.6896],
         [16.1194],
         ...,
         [28.8959],
         [75.4427],
         [24.0765]],
        [[12.5266],
         [13.4111],
         [12.1961],
         ...,
         [15.2014],
         [24.1192],
         [19.0073]],
        [[12.2958],
         [13.2608],
         [11.7822],
         ...,
         [14.0396],
         [20.9438],
         [18.4591]],
        ...,
        [[12.0153],
         [13.0766],
         [11.2879],
         ...,
         [12.7202],
         [17.5776],
         [17.8006]],
        [[12.7435],
         [13.5514],
         [12.5911],
         ...,
         [16.3593],
         [27.4766],
         [19.5278]],
        [[13.2355],
         [13.8662],
         [13.5086],
         ...,
         [19.2360],
         [36.6321],
         [20.7275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9588, 0.9609, 0.9842,  ..., 1.1920, 1.9491, 1.1136],
        [0.9258, 0.9402, 0.9204,  ..., 0.9693, 1.1143, 1.0312],
        [0.9220, 0.9377, 0.9137,  ..., 0.9504, 1.0627, 1.0223],
        ...,
        [0.9174, 0.9347, 0.9056,  ..., 0.9289, 1.0079, 1.0115],
        [0.9293, 0.9424, 0.9268,  ..., 0.9881, 1.1689, 1.0396],
        [0.9373, 0.9476, 0.9417,  ..., 1.0349, 1.3178, 1.0592]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5594],
         [14.0579],
         [46.7043],
         ...,
         [31.6927],
         [30.8288],
         [12.8691]],
        [[10.8020],
         [10.9293],
         [43.4254],
         ...,
         [13.5705],
         [28.4282],
         [10.2731]],
        [[10.7118],
         [10.5939],
         [43.0358],
         ...,
         [12.2179],
         [28.1443],
         [ 9.9906]],
        ...,
        [[10.6008],
         [10.1920],
         [42.5572],
         ...,
         [10.7250],
         [27.7959],
         [ 9.6506]],
        [[10.8860],
         [11.2483],
         [43.7881],
         ...,
         [14.9518],
         [28.6928],
         [10.5411]],
        [[11.0737],
         [11.9856],
         [44.5994],
         ...,
         [18.5179],
         [29.2855],
         [11.1573]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9559, 0.9889, 1.4204,  ..., 1.2220, 1.2106, 0.9732],
        [0.9459, 0.9476, 1.3770,  ..., 0.9825, 1.1789, 0.9389],
        [0.9447, 0.9432, 1.3719,  ..., 0.9646, 1.1751, 0.9352],
        ...,
        [0.9433, 0.9378, 1.3656,  ..., 0.9449, 1.1705, 0.9307],
        [0.9470, 0.9518, 1.3818,  ..., 1.0008, 1.1823, 0.9425],
        [0.9495, 0.9616, 1.3926,  ..., 1.0479, 1.1902, 0.9506]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.9306],
         [36.7799],
         [30.5744],
         ...,
         [16.7336],
         [80.9452],
         [31.4213]],
        [[ 7.5201],
         [21.3554],
         [14.8207],
         ...,
         [12.8973],
         [25.1434],
         [14.9518]],
        [[ 6.9675],
         [19.9656],
         [13.5499],
         ...,
         [12.4882],
         [21.7555],
         [13.6385]],
        ...,
        [[ 6.3378],
         [18.3656],
         [12.1232],
         ...,
         [11.9984],
         [18.1782],
         [12.1678]],
        [[ 8.0690],
         [22.7244],
         [16.0994],
         ...,
         [13.2869],
         [28.7379],
         [16.2762]],
        [[ 9.4264],
         [26.0636],
         [19.3251],
         ...,
         [14.1887],
         [38.5931],
         [19.6288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9929, 1.4829, 1.3498,  ..., 1.0530, 2.4300, 1.3680],
        [0.8555, 1.1521, 1.0120,  ..., 0.9708, 1.2334, 1.0148],
        [0.8436, 1.1223, 0.9848,  ..., 0.9620, 1.1607, 0.9867],
        ...,
        [0.8301, 1.0880, 0.9542,  ..., 0.9515, 1.0840, 0.9551],
        [0.8672, 1.1815, 1.0394,  ..., 0.9791, 1.3105, 1.0432],
        [0.8963, 1.2531, 1.1086,  ..., 0.9985, 1.5218, 1.1151]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.2542],
         [30.4971],
         [23.1211],
         ...,
         [28.1656],
         [72.5683],
         [32.3908]],
        [[11.5927],
         [16.8207],
         [15.6122],
         ...,
         [18.2096],
         [23.7717],
         [17.7506]],
        [[11.2055],
         [15.6263],
         [14.8714],
         ...,
         [17.2526],
         [20.7044],
         [16.4770]],
        ...,
        [[10.7427],
         [14.2610],
         [14.0007],
         ...,
         [16.1343],
         [17.4418],
         [15.0226]],
        [[11.9622],
         [18.0044],
         [16.3289],
         ...,
         [19.1403],
         [27.0056],
         [19.0137]],
        [[12.8195],
         [20.9193],
         [18.0287],
         ...,
         [21.3658],
         [35.7839],
         [22.1279]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9351, 1.1830, 1.0630,  ..., 1.1451, 1.8673, 1.2138],
        [0.8755, 0.9606, 0.9409,  ..., 0.9832, 1.0736, 0.9757],
        [0.8692, 0.9411, 0.9289,  ..., 0.9676, 1.0237, 0.9550],
        ...,
        [0.8617, 0.9189, 0.9147,  ..., 0.9494, 0.9707, 0.9313],
        [0.8815, 0.9798, 0.9526,  ..., 0.9983, 1.1262, 0.9962],
        [0.8955, 1.0272, 0.9802,  ..., 1.0345, 1.2690, 1.0469]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.9757],
         [12.1462],
         [25.7969],
         ...,
         [29.3991],
         [55.6226],
         [19.2770]],
        [[10.0410],
         [10.8483],
         [19.8537],
         ...,
         [27.4941],
         [42.5401],
         [10.6197]],
        [[ 9.6383],
         [10.6976],
         [19.2204],
         ...,
         [27.2671],
         [41.1512],
         [ 9.8641]],
        ...,
        [[ 9.1608],
         [10.5135],
         [18.4624],
         ...,
         [26.9878],
         [39.4903],
         [ 9.0007]],
        [[10.4277],
         [10.9893],
         [20.4568],
         ...,
         [27.7054],
         [43.8639],
         [11.3685]],
        [[11.3345],
         [11.3070],
         [21.8534],
         ...,
         [28.1775],
         [46.9327],
         [13.2131]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9842, 0.9600, 1.1404,  ..., 1.1880, 1.5345, 1.0542],
        [0.9322, 0.9428, 1.0618,  ..., 1.1628, 1.3616, 0.9398],
        [0.9268, 0.9408, 1.0535,  ..., 1.1598, 1.3433, 0.9298],
        ...,
        [0.9205, 0.9384, 1.0435,  ..., 1.1561, 1.3213, 0.9184],
        [0.9373, 0.9447, 1.0698,  ..., 1.1656, 1.3791, 0.9497],
        [0.9493, 0.9489, 1.0883,  ..., 1.1718, 1.4197, 0.9741]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7092],
         [11.9086],
         [16.8426],
         ...,
         [15.8488],
         [87.4693],
         [13.0201]],
        [[ 8.1336],
         [11.0345],
         [10.0157],
         ...,
         [10.3689],
         [28.8862],
         [ 7.7171]],
        [[ 7.6964],
         [10.9309],
         [ 9.3916],
         ...,
         [ 9.8383],
         [25.1842],
         [ 7.2333]],
        ...,
        [[ 7.1863],
         [10.8036],
         [ 8.6707],
         ...,
         [ 9.2174],
         [21.2422],
         [ 6.6747]],
        [[ 8.5592],
         [11.1311],
         [10.6287],
         ...,
         [10.8840],
         [32.7855],
         [ 8.1925]],
        [[ 9.5790],
         [11.3471],
         [12.1173],
         ...,
         [12.1132],
         [43.3538],
         [ 9.3477]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9772, 0.9600, 1.0658,  ..., 1.0445, 2.5803, 0.9839],
        [0.8791, 0.9413, 0.9194,  ..., 0.9270, 1.3241, 0.8701],
        [0.8697, 0.9391, 0.9061,  ..., 0.9156, 1.2447, 0.8598],
        ...,
        [0.8588, 0.9363, 0.8906,  ..., 0.9023, 1.1602, 0.8478],
        [0.8882, 0.9434, 0.9326,  ..., 0.9381, 1.4077, 0.8803],
        [0.9101, 0.9480, 0.9645,  ..., 0.9644, 1.6343, 0.9051]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6101],
         [16.2269],
         [16.7243],
         ...,
         [29.0450],
         [75.1257],
         [25.3471]],
        [[12.4155],
         [13.7294],
         [12.4958],
         ...,
         [15.2438],
         [24.0813],
         [18.8367]],
        [[12.1679],
         [13.4482],
         [12.0530],
         ...,
         [14.0746],
         [20.9177],
         [18.1571]],
        ...,
        [[11.8674],
         [13.1073],
         [11.5251],
         ...,
         [12.7473],
         [17.5629],
         [17.3475]],
        [[12.6486],
         [13.9941],
         [12.9191],
         ...,
         [16.4094],
         [27.4252],
         [19.4868]],
        [[13.1786],
         [14.5966],
         [13.9045],
         ...,
         [19.3063],
         [36.5392],
         [21.0016]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9598, 0.9861, 0.9942,  ..., 1.1946, 1.9441, 1.1344],
        [0.9241, 0.9455, 0.9254,  ..., 0.9701, 1.1138, 1.0285],
        [0.9201, 0.9409, 0.9182,  ..., 0.9511, 1.0624, 1.0175],
        ...,
        [0.9152, 0.9353, 0.9096,  ..., 0.9295, 1.0078, 1.0043],
        [0.9279, 0.9498, 0.9323,  ..., 0.9890, 1.1682, 1.0391],
        [0.9365, 0.9596, 0.9483,  ..., 1.0362, 1.3165, 1.0637]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4724],
         [12.0505],
         [26.0247],
         ...,
         [26.3218],
         [50.7508],
         [16.6179]],
        [[10.3754],
         [10.8441],
         [23.1038],
         ...,
         [24.4356],
         [39.3861],
         [ 9.6855]],
        [[10.1416],
         [10.7034],
         [22.7658],
         ...,
         [24.2117],
         [38.1693],
         [ 9.0594]],
        ...,
        [[ 9.8588],
         [10.5313],
         [22.3531],
         ...,
         [23.9366],
         [36.7111],
         [ 8.3382]],
        [[10.5960],
         [10.9756],
         [23.4202],
         ...,
         [24.6441],
         [40.5440],
         [10.3019]],
        [[11.0995],
         [11.2715],
         [24.1341],
         ...,
         [25.1106],
         [43.2207],
         [11.8044]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9603, 0.9548, 1.1394,  ..., 1.1434, 1.4662, 1.0151],
        [0.9326, 0.9388, 1.1008,  ..., 1.1184, 1.3160, 0.9235],
        [0.9295, 0.9370, 1.0964,  ..., 1.1155, 1.2999, 0.9152],
        ...,
        [0.9258, 0.9347, 1.0909,  ..., 1.1118, 1.2807, 0.9057],
        [0.9355, 0.9406, 1.1050,  ..., 1.1212, 1.3313, 0.9317],
        [0.9422, 0.9445, 1.1145,  ..., 1.1274, 1.3667, 0.9515]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8560],
         [14.7179],
         [14.6895],
         ...,
         [16.6407],
         [83.9054],
         [14.1075]],
        [[ 7.9166],
         [12.4539],
         [10.1466],
         ...,
         [10.2540],
         [25.9700],
         [ 7.5714]],
        [[ 7.4554],
         [12.1991],
         [ 9.6924],
         ...,
         [ 9.6574],
         [22.4608],
         [ 7.0100]],
        ...,
        [[ 6.9202],
         [11.8900],
         [ 9.1567],
         ...,
         [ 8.9651],
         [18.7573],
         [ 6.3708]],
        [[ 8.3676],
         [12.6940],
         [10.5849],
         ...,
         [10.8374],
         [29.6948],
         [ 8.1295]],
        [[ 9.4560],
         [13.2401],
         [11.6201],
         ...,
         [12.2449],
         [39.9141],
         [ 9.5110]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9701, 1.0100, 1.0094,  ..., 1.0513, 2.4937, 0.9969],
        [0.8642, 0.9615, 0.9120,  ..., 0.9143, 1.2513, 0.8568],
        [0.8543, 0.9560, 0.9023,  ..., 0.9015, 1.1761, 0.8447],
        ...,
        [0.8428, 0.9494, 0.8908,  ..., 0.8867, 1.0966, 0.8310],
        [0.8738, 0.9666, 0.9214,  ..., 0.9268, 1.3312, 0.8687],
        [0.8972, 0.9783, 0.9436,  ..., 0.9570, 1.5503, 0.8984]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6266],
         [20.4737],
         [18.3214],
         ...,
         [28.0989],
         [74.1670],
         [28.2296]],
        [[12.5106],
         [16.5492],
         [13.0472],
         ...,
         [15.6330],
         [23.9660],
         [18.7377]],
        [[12.2709],
         [16.1190],
         [12.5102],
         ...,
         [14.5385],
         [20.8383],
         [17.8108]],
        ...,
        [[11.9798],
         [15.6005],
         [11.8744],
         ...,
         [13.2860],
         [17.5178],
         [16.7238]],
        [[12.7360],
         [16.9566],
         [13.5634],
         ...,
         [16.7165],
         [27.2688],
         [19.6362]],
        [[13.2480],
         [17.8915],
         [14.7758],
         ...,
         [19.3805],
         [36.2573],
         [21.7743]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9693, 1.0644, 1.0294,  ..., 1.1884, 1.9377, 1.1905],
        [0.9349, 1.0006, 0.9436,  ..., 0.9857, 1.1212, 1.0362],
        [0.9310, 0.9936, 0.9349,  ..., 0.9679, 1.0703, 1.0211],
        ...,
        [0.9263, 0.9851, 0.9245,  ..., 0.9475, 1.0163, 1.0034],
        [0.9386, 1.0072, 0.9520,  ..., 1.0033, 1.1749, 1.0508],
        [0.9469, 1.0224, 0.9717,  ..., 1.0466, 1.3211, 1.0856]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5348],
         [11.5669],
         [25.6636],
         ...,
         [30.0716],
         [53.6512],
         [16.7806]],
        [[10.7043],
         [10.8036],
         [21.6378],
         ...,
         [28.0504],
         [41.2292],
         [ 9.6699]],
        [[10.6057],
         [10.7127],
         [21.1855],
         ...,
         [27.8098],
         [39.9067],
         [ 9.0321]],
        ...,
        [[10.4847],
         [10.6009],
         [20.6373],
         ...,
         [27.5141],
         [38.3242],
         [ 8.2986]],
        [[10.7961],
         [10.8883],
         [22.0639],
         ...,
         [28.2743],
         [42.4889],
         [10.2986]],
        [[11.0015],
         [11.0773],
         [23.0341],
         ...,
         [28.7748],
         [45.4068],
         [11.8345]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9471, 0.9475, 1.1338,  ..., 1.1920, 1.5037, 1.0164],
        [0.9361, 0.9374, 1.0806,  ..., 1.1653, 1.3395, 0.9224],
        [0.9348, 0.9362, 1.0746,  ..., 1.1621, 1.3220, 0.9140],
        ...,
        [0.9332, 0.9347, 1.0674,  ..., 1.1582, 1.3011, 0.9043],
        [0.9373, 0.9385, 1.0862,  ..., 1.1683, 1.3561, 0.9307],
        [0.9400, 0.9410, 1.0990,  ..., 1.1749, 1.3947, 0.9510]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9252],
         [11.8175],
         [13.1749],
         ...,
         [18.1364],
         [83.1857],
         [13.6898]],
        [[ 7.8261],
         [10.7635],
         [ 9.5523],
         ...,
         [10.0821],
         [25.1667],
         [ 7.4733]],
        [[ 7.3548],
         [10.6398],
         [ 9.1795],
         ...,
         [ 9.3753],
         [21.7046],
         [ 6.9338]],
        ...,
        [[ 6.8091],
         [10.4881],
         [ 8.7371],
         ...,
         [ 8.5665],
         [18.0624],
         [ 6.3180]],
        [[ 8.2879],
         [10.8790],
         [ 9.9098],
         ...,
         [10.7818],
         [28.8513],
         [ 8.0086]],
        [[ 9.4058],
         [11.1384],
         [10.7469],
         ...,
         [12.5026],
         [39.0040],
         [ 9.3294]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9717, 0.9479, 0.9770,  ..., 1.0834, 2.4783, 0.9880],
        [0.8623, 0.9253, 0.8993,  ..., 0.9107, 1.2342, 0.8547],
        [0.8522, 0.9226, 0.8913,  ..., 0.8955, 1.1599, 0.8432],
        ...,
        [0.8405, 0.9194, 0.8818,  ..., 0.8782, 1.0818, 0.8300],
        [0.8722, 0.9278, 0.9070,  ..., 0.9257, 1.3132, 0.8662],
        [0.8962, 0.9333, 0.9249,  ..., 0.9626, 1.5309, 0.8945]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5898],
         [19.9870],
         [18.1971],
         ...,
         [28.7732],
         [73.8786],
         [29.4049]],
        [[13.4046],
         [16.7600],
         [12.9157],
         ...,
         [15.3068],
         [23.9311],
         [19.1285]],
        [[13.2647],
         [16.3986],
         [12.3791],
         ...,
         [14.1565],
         [20.8143],
         [18.1370]],
        ...,
        [[13.0932],
         [15.9609],
         [11.7439],
         ...,
         [12.8481],
         [17.5042],
         [16.9775]],
        [[13.5350],
         [17.1007],
         [13.4318],
         ...,
         [16.4517],
         [27.2215],
         [20.0920]],
        [[13.8273],
         [17.8772],
         [14.6447],
         ...,
         [19.2903],
         [36.1722],
         [22.3932]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9617, 1.0495, 1.0204,  ..., 1.1924, 1.9260, 1.2026],
        [0.9424, 0.9970, 0.9345,  ..., 0.9733, 1.1136, 1.0355],
        [0.9401, 0.9911, 0.9257,  ..., 0.9546, 1.0629, 1.0194],
        ...,
        [0.9373, 0.9840, 0.9154,  ..., 0.9334, 1.0091, 1.0005],
        [0.9445, 1.0025, 0.9429,  ..., 0.9920, 1.1671, 1.0512],
        [0.9493, 1.0152, 0.9626,  ..., 1.0381, 1.3127, 1.0886]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9176],
         [11.7691],
         [25.7982],
         ...,
         [27.8984],
         [52.2183],
         [16.6999]],
        [[10.5442],
         [10.8278],
         [22.3478],
         ...,
         [26.1912],
         [40.3062],
         [ 9.6775]],
        [[10.3856],
         [10.7167],
         [21.9541],
         ...,
         [25.9873],
         [39.0348],
         [ 9.0455]],
        ...,
        [[10.1920],
         [10.5803],
         [21.4751],
         ...,
         [25.7364],
         [37.5123],
         [ 8.3182]],
        [[10.6928],
         [10.9315],
         [22.7176],
         ...,
         [26.3809],
         [41.5168],
         [10.3002]],
        [[11.0281],
         [11.1637],
         [23.5552],
         ...,
         [26.8044],
         [44.3183],
         [11.8196]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9526, 0.9506, 1.1360,  ..., 1.1638, 1.4852, 1.0158],
        [0.9344, 0.9382, 1.0904,  ..., 1.1412, 1.3277, 0.9230],
        [0.9323, 0.9367, 1.0852,  ..., 1.1385, 1.3109, 0.9146],
        ...,
        [0.9298, 0.9349, 1.0789,  ..., 1.1352, 1.2908, 0.9050],
        [0.9364, 0.9395, 1.0953,  ..., 1.1437, 1.3437, 0.9312],
        [0.9408, 0.9426, 1.1064,  ..., 1.1493, 1.3808, 0.9513]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8911],
         [12.6555],
         [13.9539],
         ...,
         [17.3231],
         [83.5098],
         [13.8802]],
        [[ 7.8696],
         [11.6142],
         [ 9.7433],
         ...,
         [10.0945],
         [25.5621],
         [ 7.5077]],
        [[ 7.4032],
         [11.4914],
         [ 9.3196],
         ...,
         [ 9.4417],
         [22.0776],
         [ 6.9577]],
        ...,
        [[ 6.8625],
         [11.3408],
         [ 8.8192],
         ...,
         [ 8.6899],
         [18.4058],
         [ 6.3308]],
        [[ 8.3262],
         [11.7287],
         [10.1515],
         ...,
         [10.7372],
         [29.2655],
         [ 8.0539]],
        [[ 9.4298],
         [11.9855],
         [11.1140],
         ...,
         [12.3038],
         [39.4473],
         [ 9.4040]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9706, 0.9656, 0.9934,  ..., 1.0657, 2.4850, 0.9918],
        [0.8630, 0.9433, 0.9031,  ..., 0.9107, 1.2423, 0.8552],
        [0.8530, 0.9406, 0.8941,  ..., 0.8967, 1.1676, 0.8434],
        ...,
        [0.8414, 0.9374, 0.8833,  ..., 0.8805, 1.0889, 0.8300],
        [0.8727, 0.9457, 0.9119,  ..., 0.9245, 1.3218, 0.8669],
        [0.8964, 0.9512, 0.9325,  ..., 0.9580, 1.5401, 0.8959]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5554],
         [20.2696],
         [18.2570],
         ...,
         [28.4885],
         [74.0212],
         [28.8115]],
        [[12.9488],
         [16.6477],
         [12.9802],
         ...,
         [15.4501],
         [23.9484],
         [18.9309]],
        [[12.7627],
         [16.2469],
         [12.4435],
         ...,
         [14.3231],
         [20.8262],
         [17.9719]],
        ...,
        [[12.5354],
         [15.7628],
         [11.8081],
         ...,
         [13.0379],
         [17.5110],
         [16.8488]],
        [[13.1230],
         [17.0264],
         [13.4963],
         ...,
         [16.5692],
         [27.2449],
         [19.8617]],
        [[13.5159],
         [17.8931],
         [14.7087],
         ...,
         [19.3339],
         [36.2142],
         [22.0808]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9649, 1.0578, 1.0251,  ..., 1.1915, 1.9321, 1.1968],
        [0.9388, 0.9989, 0.9393,  ..., 0.9794, 1.1177, 1.0361],
        [0.9357, 0.9924, 0.9305,  ..., 0.9611, 1.0669, 1.0205],
        ...,
        [0.9320, 0.9845, 0.9202,  ..., 0.9402, 1.0130, 1.0022],
        [0.9416, 1.0051, 0.9477,  ..., 0.9976, 1.1713, 1.0512],
        [0.9480, 1.0192, 0.9674,  ..., 1.0426, 1.3172, 1.0873]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5319],
         [11.5470],
         [31.8372],
         ...,
         [27.1624],
         [44.1250],
         [16.1913]],
        [[10.9539],
         [10.7991],
         [29.7831],
         ...,
         [24.9736],
         [35.5105],
         [11.0800]],
        [[10.5773],
         [10.7099],
         [29.5382],
         ...,
         [24.7152],
         [34.5685],
         [10.5717]],
        ...,
        [[10.1278],
         [10.6003],
         [29.2370],
         ...,
         [24.3982],
         [33.4339],
         [ 9.9731]],
        [[11.3135],
         [10.8821],
         [30.0109],
         ...,
         [25.2145],
         [36.4030],
         [11.5709]],
        [[12.1494],
         [11.0674],
         [30.5200],
         ...,
         [25.7545],
         [38.4526],
         [12.7325]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0110, 0.9716, 1.2397,  ..., 1.1779, 1.4021, 1.0330],
        [0.9637, 0.9617, 1.2126,  ..., 1.1490, 1.2883, 0.9654],
        [0.9588, 0.9605, 1.2093,  ..., 1.1456, 1.2758, 0.9587],
        ...,
        [0.9528, 0.9591, 1.2054,  ..., 1.1414, 1.2608, 0.9508],
        [0.9685, 0.9628, 1.2156,  ..., 1.1522, 1.3001, 0.9719],
        [0.9795, 0.9652, 1.2223,  ..., 1.1593, 1.3272, 0.9872]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3437],
         [14.9420],
         [10.5782],
         ...,
         [11.8289],
         [79.7567],
         [16.2613]],
        [[ 7.4981],
         [12.5385],
         [ 8.8183],
         ...,
         [ 9.4902],
         [25.1283],
         [ 8.5714]],
        [[ 6.9817],
         [12.2693],
         [ 8.6219],
         ...,
         [ 9.2349],
         [21.7806],
         [ 7.9182]],
        ...,
        [[ 6.3900],
         [11.9431],
         [ 8.3841],
         ...,
         [ 8.9276],
         [18.2389],
         [ 7.1763]],
        [[ 8.0086],
         [12.7924],
         [ 9.0036],
         ...,
         [ 9.7322],
         [28.6741],
         [ 9.2223]],
        [[ 9.2616],
         [13.3708],
         [ 9.4264],
         ...,
         [10.2881],
         [38.3698],
         [10.8386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9833, 1.0176, 0.9240,  ..., 0.9508, 2.4074, 1.0458],
        [0.8579, 0.9660, 0.8862,  ..., 0.9006, 1.2360, 0.8809],
        [0.8469, 0.9602, 0.8820,  ..., 0.8952, 1.1642, 0.8669],
        ...,
        [0.8342, 0.9532, 0.8769,  ..., 0.8886, 1.0883, 0.8510],
        [0.8689, 0.9715, 0.8902,  ..., 0.9058, 1.3120, 0.8949],
        [0.8957, 0.9839, 0.8993,  ..., 0.9178, 1.5199, 0.9296]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9622],
         [26.5398],
         [22.0762],
         ...,
         [24.4388],
         [71.8799],
         [34.1555]],
        [[14.0514],
         [23.5239],
         [14.3706],
         ...,
         [16.5671],
         [23.6873],
         [19.2861]],
        [[13.9426],
         [23.1752],
         [13.6268],
         ...,
         [15.7887],
         [20.6461],
         [17.9687]],
        ...,
        [[13.8087],
         [22.7496],
         [12.7569],
         ...,
         [14.8732],
         [17.4087],
         [16.4581]],
        [[14.1526],
         [23.8504],
         [15.0932],
         ...,
         [17.3197],
         [26.8913],
         [20.5879]],
        [[14.3785],
         [24.5871],
         [16.8192],
         ...,
         [19.1038],
         [35.5788],
         [23.7799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 1.1496, 1.0770,  ..., 1.1154, 1.8870, 1.2734],
        [0.9465, 1.1005, 0.9516,  ..., 0.9874, 1.1032, 1.0316],
        [0.9447, 1.0948, 0.9395,  ..., 0.9747, 1.0537, 1.0102],
        ...,
        [0.9425, 1.0879, 0.9254,  ..., 0.9598, 1.0011, 0.9856],
        [0.9481, 1.1058, 0.9634,  ..., 0.9996, 1.1553, 1.0528],
        [0.9518, 1.1178, 0.9915,  ..., 1.0286, 1.2966, 1.1047]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7642],
         [11.6661],
         [26.9533],
         ...,
         [27.3514],
         [49.0057],
         [16.0733]],
        [[10.8275],
         [10.8184],
         [25.0251],
         ...,
         [25.7227],
         [38.3237],
         [10.1682]],
        [[10.7168],
         [10.7178],
         [24.7962],
         ...,
         [25.5279],
         [37.1749],
         [ 9.6079]],
        ...,
        [[10.5810],
         [10.5943],
         [24.5150],
         ...,
         [25.2883],
         [35.7967],
         [ 8.9552]],
        [[10.9306],
         [10.9121],
         [25.2383],
         ...,
         [25.9038],
         [39.4159],
         [10.7145]],
        [[11.1618],
         [11.1217],
         [25.7152],
         ...,
         [26.3080],
         [41.9372],
         [12.0260]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9611, 0.9598, 1.1618,  ..., 1.1670, 1.4532, 1.0180],
        [0.9487, 0.9486, 1.1363,  ..., 1.1455, 1.3121, 0.9400],
        [0.9472, 0.9472, 1.1333,  ..., 1.1429, 1.2969, 0.9326],
        ...,
        [0.9454, 0.9456, 1.1296,  ..., 1.1398, 1.2787, 0.9239],
        [0.9500, 0.9498, 1.1391,  ..., 1.1479, 1.3265, 0.9472],
        [0.9531, 0.9526, 1.1454,  ..., 1.1533, 1.3598, 0.9645]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0643],
         [13.4673],
         [12.0302],
         ...,
         [16.2348],
         [81.9977],
         [14.5962]],
        [[ 7.6729],
         [11.9695],
         [ 9.4515],
         ...,
         [ 9.8782],
         [25.3941],
         [ 7.7537]],
        [[ 7.1837],
         [11.7961],
         [ 9.1735],
         ...,
         [ 9.2890],
         [21.9642],
         [ 7.1696]],
        ...,
        [[ 6.6196],
         [11.5843],
         [ 8.8397],
         ...,
         [ 8.6063],
         [18.3442],
         [ 6.5056]],
        [[ 8.1541],
         [12.1319],
         [ 9.7158],
         ...,
         [10.4553],
         [29.0343],
         [ 8.3350]],
        [[ 9.3253],
         [12.4981],
         [10.3252],
         ...,
         [11.8509],
         [39.0207],
         [ 9.7766]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9761, 0.9847, 0.9539,  ..., 1.0441, 2.4543, 1.0089],
        [0.8605, 0.9526, 0.8986,  ..., 0.9078, 1.2405, 0.8622],
        [0.8500, 0.9489, 0.8927,  ..., 0.8951, 1.1669, 0.8497],
        ...,
        [0.8379, 0.9444, 0.8855,  ..., 0.8805, 1.0893, 0.8355],
        [0.8708, 0.9561, 0.9043,  ..., 0.9202, 1.3186, 0.8747],
        [0.8959, 0.9640, 0.9174,  ..., 0.9501, 1.5327, 0.9056]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6215],
         [22.7729],
         [19.8392],
         ...,
         [27.2566],
         [73.1680],
         [31.6152]],
        [[13.3715],
         [19.0989],
         [13.4901],
         ...,
         [15.8094],
         [23.8449],
         [19.0553]],
        [[13.2244],
         [18.6874],
         [12.8611],
         ...,
         [14.7786],
         [20.7549],
         [17.8977]],
        ...,
        [[13.0440],
         [18.1890],
         [12.1211],
         ...,
         [13.5921],
         [17.4705],
         [16.5582]],
        [[13.5088],
         [19.4868],
         [14.0980],
         ...,
         [16.8249],
         [27.1047],
         [20.1904]],
        [[13.8167],
         [20.3709],
         [15.5383],
         ...,
         [19.3023],
         [35.9619],
         [22.9402]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9695, 1.1021, 1.0544,  ..., 1.1750, 1.9217, 1.2459],
        [0.9492, 1.0423, 0.9511,  ..., 0.9888, 1.1195, 1.0416],
        [0.9468, 1.0356, 0.9409,  ..., 0.9721, 1.0693, 1.0228],
        ...,
        [0.9438, 1.0275, 0.9288,  ..., 0.9528, 1.0158, 1.0010],
        [0.9514, 1.0486, 0.9610,  ..., 1.0053, 1.1725, 1.0601],
        [0.9564, 1.0630, 0.9844,  ..., 1.0456, 1.3166, 1.1048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9267],
         [11.5759],
         [29.1502],
         ...,
         [27.0035],
         [45.9406],
         [15.9239]],
        [[10.8379],
         [10.8054],
         [27.4386],
         ...,
         [25.3514],
         [36.5313],
         [10.6584]],
        [[10.7102],
         [10.7137],
         [27.2338],
         ...,
         [25.1540],
         [35.5095],
         [10.1416]],
        ...,
        [[10.5538],
         [10.6009],
         [26.9818],
         ...,
         [24.9112],
         [34.2809],
         [ 9.5349]],
        [[10.9571],
         [10.8908],
         [27.6290],
         ...,
         [25.5350],
         [37.5008],
         [11.1588]],
        [[11.2249],
         [11.0816],
         [28.0538],
         ...,
         [25.9448],
         [39.7321],
         [12.3478]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9719, 0.9673, 1.1996,  ..., 1.1712, 1.4215, 1.0248],
        [0.9576, 0.9571, 1.1769,  ..., 1.1494, 1.2971, 0.9552],
        [0.9559, 0.9559, 1.1742,  ..., 1.1468, 1.2836, 0.9484],
        ...,
        [0.9538, 0.9544, 1.1709,  ..., 1.1435, 1.2674, 0.9403],
        [0.9591, 0.9583, 1.1795,  ..., 1.1518, 1.3099, 0.9618],
        [0.9627, 0.9608, 1.1851,  ..., 1.1572, 1.3394, 0.9775]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7830],
         [11.8817],
         [10.2463],
         ...,
         [13.6318],
         [80.1828],
         [14.9901]],
        [[ 8.0206],
         [10.9812],
         [ 9.0535],
         ...,
         [ 9.7148],
         [25.1339],
         [ 7.9261]],
        [[ 7.5710],
         [10.8746],
         [ 8.9159],
         ...,
         [ 9.3158],
         [21.7718],
         [ 7.3249]],
        ...,
        [[ 7.0477],
         [10.7438],
         [ 8.7479],
         ...,
         [ 8.8433],
         [18.2172],
         [ 6.6417]],
        [[ 8.4595],
         [11.0806],
         [ 9.1825],
         ...,
         [10.0983],
         [28.6973],
         [ 8.5249]],
        [[ 9.5146],
         [11.3030],
         [ 9.4736],
         ...,
         [10.9989],
         [38.4503],
         [10.0111]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9719, 0.9526, 0.9175,  ..., 0.9901, 2.4172, 1.0192],
        [0.8698, 0.9333, 0.8919,  ..., 0.9061, 1.2368, 0.8678],
        [0.8601, 0.9310, 0.8890,  ..., 0.8976, 1.1647, 0.8549],
        ...,
        [0.8489, 0.9282, 0.8854,  ..., 0.8874, 1.0884, 0.8402],
        [0.8792, 0.9354, 0.8947,  ..., 0.9143, 1.3132, 0.8806],
        [0.9018, 0.9402, 0.9009,  ..., 0.9336, 1.5223, 0.9125]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1106],
         [21.6942],
         [21.4843],
         ...,
         [25.7777],
         [74.0969],
         [33.6862]],
        [[14.3144],
         [17.7931],
         [14.1957],
         ...,
         [16.2320],
         [23.9575],
         [19.2664]],
        [[14.2188],
         [17.3617],
         [13.4859],
         ...,
         [15.3287],
         [20.8325],
         [17.9789]],
        ...,
        [[14.1010],
         [16.8409],
         [12.6540],
         ...,
         [14.2772],
         [17.5145],
         [16.4998]],
        [[14.4032],
         [18.2008],
         [14.8842],
         ...,
         [17.1131],
         [27.2573],
         [20.5368]],
        [[14.6012],
         [19.1338],
         [16.5238],
         ...,
         [19.2303],
         [36.2366],
         [23.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9645, 1.0716, 1.0681,  ..., 1.1380, 1.9239, 1.2666],
        [0.9515, 1.0081, 0.9496,  ..., 0.9827, 1.1084, 1.0321],
        [0.9500, 1.0011, 0.9381,  ..., 0.9680, 1.0575, 1.0111],
        ...,
        [0.9481, 0.9926, 0.9245,  ..., 0.9509, 1.0036, 0.9871],
        [0.9530, 1.0147, 0.9608,  ..., 0.9971, 1.1620, 1.0527],
        [0.9562, 1.0299, 0.9875,  ..., 1.0315, 1.3081, 1.1033]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6168],
         [11.5298],
         [29.7862],
         ...,
         [29.0288],
         [44.3390],
         [14.1414]],
        [[10.8122],
         [10.7075],
         [28.0522],
         ...,
         [27.1837],
         [35.6278],
         [10.2109]],
        [[10.7165],
         [10.6099],
         [27.8447],
         ...,
         [26.9636],
         [34.6760],
         [ 9.8075]],
        ...,
        [[10.5990],
         [10.4899],
         [27.5892],
         ...,
         [26.6929],
         [33.5300],
         [ 9.3288]],
        [[10.9012],
         [10.7984],
         [28.2451],
         ...,
         [27.3885],
         [36.5297],
         [10.5981]],
        [[11.1004],
         [11.0018],
         [28.6756],
         ...,
         [27.8459],
         [38.6014],
         [11.5052]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9700, 0.9688, 1.2101,  ..., 1.2001, 1.4024, 1.0034],
        [0.9594, 0.9580, 1.1872,  ..., 1.1757, 1.2873, 0.9514],
        [0.9581, 0.9567, 1.1845,  ..., 1.1728, 1.2747, 0.9461],
        ...,
        [0.9565, 0.9551, 1.1811,  ..., 1.1692, 1.2596, 0.9398],
        [0.9605, 0.9592, 1.1898,  ..., 1.1784, 1.2992, 0.9565],
        [0.9632, 0.9619, 1.1954,  ..., 1.1845, 1.3266, 0.9685]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3517],
         [12.3864],
         [11.2492],
         ...,
         [11.7642],
         [77.2560],
         [13.8391]],
        [[ 8.7764],
         [ 8.7071],
         [ 8.8730],
         ...,
         [10.4325],
         [25.0895],
         [ 7.8434]],
        [[ 8.4129],
         [ 8.3353],
         [ 8.6162],
         ...,
         [10.2785],
         [21.8288],
         [ 7.3110]],
        ...,
        [[ 7.9826],
         [ 7.8959],
         [ 8.3077],
         ...,
         [10.0905],
         [18.3646],
         [ 6.7001]],
        [[ 9.1260],
         [ 9.0650],
         [ 9.1169],
         ...,
         [10.5767],
         [28.5308],
         [ 8.3692]],
        [[ 9.9473],
         [ 9.9076],
         [ 9.6791],
         ...,
         [10.9020],
         [37.8874],
         [ 9.6578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9646, 0.9654, 0.9410,  ..., 0.9520, 2.3564, 0.9965],
        [0.8880, 0.8865, 0.8901,  ..., 0.9235, 1.2378, 0.8680],
        [0.8802, 0.8785, 0.8845,  ..., 0.9202, 1.1679, 0.8566],
        ...,
        [0.8710, 0.8691, 0.8779,  ..., 0.9162, 1.0936, 0.8435],
        [0.8955, 0.8942, 0.8953,  ..., 0.9266, 1.3116, 0.8793],
        [0.9131, 0.9122, 0.9073,  ..., 0.9336, 1.5122, 0.9069]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.2062],
         [19.8829],
         [22.8108],
         ...,
         [25.3487],
         [74.6376],
         [34.9035]],
        [[15.4096],
         [16.5398],
         [14.9375],
         ...,
         [16.2217],
         [24.0227],
         [19.8713]],
        [[15.3137],
         [16.1671],
         [14.1748],
         ...,
         [15.3497],
         [20.8774],
         [18.5329]],
        ...,
        [[15.1956],
         [15.7162],
         [13.2821],
         ...,
         [14.3322],
         [17.5400],
         [16.9963]],
        [[15.4986],
         [16.8914],
         [15.6780],
         ...,
         [17.0707],
         [27.3457],
         [21.1927]],
        [[15.6968],
         [17.6941],
         [17.4445],
         ...,
         [19.1048],
         [36.3958],
         [24.4277]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9753, 1.0351, 1.0828,  ..., 1.1240, 1.9257, 1.2794],
        [0.9624, 0.9808, 0.9547,  ..., 0.9756, 1.1025, 1.0349],
        [0.9608, 0.9747, 0.9423,  ..., 0.9614, 1.0513, 1.0132],
        ...,
        [0.9589, 0.9674, 0.9278,  ..., 0.9449, 0.9970, 0.9882],
        [0.9638, 0.9865, 0.9667,  ..., 0.9894, 1.1565, 1.0564],
        [0.9671, 0.9995, 0.9955,  ..., 1.0225, 1.3037, 1.1091]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8030],
         [12.0994],
         [33.5496],
         ...,
         [29.5247],
         [38.6584],
         [12.9136]],
        [[10.8740],
         [10.4846],
         [31.0945],
         ...,
         [27.5986],
         [32.5698],
         [10.8456]],
        [[10.6564],
         [10.3003],
         [30.8034],
         ...,
         [27.3691],
         [31.8861],
         [10.6138]],
        ...,
        [[10.3924],
         [10.0760],
         [30.4458],
         ...,
         [27.0868],
         [31.0574],
         [10.3329]],
        [[11.0789],
         [10.6576],
         [31.3657],
         ...,
         [27.8122],
         [33.2140],
         [11.0641]],
        [[11.5447],
         [11.0497],
         [31.9727],
         ...,
         [28.2894],
         [34.6810],
         [11.5619]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9692, 1.2526,  ..., 1.1995, 1.3202, 0.9799],
        [0.9530, 0.9478, 1.2202,  ..., 1.1740, 1.2397, 0.9526],
        [0.9501, 0.9454, 1.2163,  ..., 1.1710, 1.2307, 0.9495],
        ...,
        [0.9466, 0.9424, 1.2116,  ..., 1.1672, 1.2197, 0.9458],
        [0.9557, 0.9501, 1.2238,  ..., 1.1768, 1.2482, 0.9555],
        [0.9618, 0.9553, 1.2318,  ..., 1.1831, 1.2676, 0.9621]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4985],
         [13.4101],
         [12.6401],
         ...,
         [13.3717],
         [71.5146],
         [12.6344]],
        [[ 8.4939],
         [ 7.4805],
         [ 9.7270],
         ...,
         [11.1117],
         [24.9608],
         [ 7.9377]],
        [[ 8.0973],
         [ 6.9590],
         [ 9.4166],
         ...,
         [10.8600],
         [21.9114],
         [ 7.4938]],
        ...,
        [[ 7.6307],
         [ 6.3621],
         [ 9.0451],
         ...,
         [10.5554],
         [18.6394],
         [ 6.9773]],
        [[ 8.8772],
         [ 7.9965],
         [10.0226],
         ...,
         [11.3494],
         [28.1516],
         [ 8.3707]],
        [[ 9.7855],
         [ 9.2647],
         [10.7072],
         ...,
         [11.8918],
         [36.7104],
         [ 9.4117]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9643, 0.9839, 0.9674,  ..., 0.9831, 2.2298, 0.9672],
        [0.8785, 0.8567, 0.9049,  ..., 0.9346, 1.2316, 0.8665],
        [0.8699, 0.8455, 0.8982,  ..., 0.9292, 1.1662, 0.8570],
        ...,
        [0.8599, 0.8327, 0.8903,  ..., 0.9227, 1.0960, 0.8459],
        [0.8867, 0.8678, 0.9112,  ..., 0.9397, 1.3000, 0.8758],
        [0.9061, 0.8950, 0.9259,  ..., 0.9513, 1.4835, 0.8981]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.8724],
         [19.0709],
         [24.4267],
         ...,
         [23.4345],
         [74.5411],
         [29.1202]],
        [[17.0197],
         [16.2183],
         [16.4153],
         ...,
         [16.2770],
         [24.0111],
         [20.2737]],
        [[16.9170],
         [15.8962],
         [15.6272],
         ...,
         [15.5590],
         [20.8694],
         [19.3850]],
        ...,
        [[16.7904],
         [15.5054],
         [14.7014],
         ...,
         [14.7116],
         [17.5355],
         [18.3359]],
        [[17.1151],
         [16.5214],
         [17.1781],
         ...,
         [16.9693],
         [27.3299],
         [21.1303]],
        [[17.3274],
         [17.2105],
         [18.9893],
         ...,
         [18.6029],
         [36.3674],
         [23.1508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9954, 1.0149, 1.1020,  ..., 1.0859, 1.9171, 1.1784],
        [0.9815, 0.9685, 0.9717,  ..., 0.9695, 1.0953, 1.0345],
        [0.9799, 0.9633, 0.9589,  ..., 0.9578, 1.0442, 1.0200],
        ...,
        [0.9778, 0.9569, 0.9438,  ..., 0.9440, 0.9899, 1.0030],
        [0.9831, 0.9734, 0.9841,  ..., 0.9807, 1.1492, 1.0484],
        [0.9866, 0.9846, 1.0136,  ..., 1.0073, 1.2962, 1.0813]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8344],
         [11.9130],
         [35.0723],
         ...,
         [25.6961],
         [35.4217],
         [12.5488]],
        [[10.9707],
         [10.5458],
         [32.2393],
         ...,
         [23.3268],
         [30.8880],
         [11.0118]],
        [[10.5685],
         [10.3879],
         [31.9049],
         ...,
         [23.0492],
         [30.3688],
         [10.8351]],
        ...,
        [[10.0898],
         [10.1951],
         [31.4947],
         ...,
         [22.7091],
         [29.7364],
         [10.6197]],
        [[11.3556],
         [10.6937],
         [32.5511],
         ...,
         [23.5861],
         [31.3753],
         [11.1774]],
        [[12.2534],
         [11.0276],
         [33.2499],
         ...,
         [24.1686],
         [32.4779],
         [11.5519]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0060, 0.9674, 1.2734,  ..., 1.1495, 1.2781, 0.9758],
        [0.9549, 0.9493, 1.2360,  ..., 1.1182, 1.2181, 0.9555],
        [0.9496, 0.9472, 1.2316,  ..., 1.1145, 1.2113, 0.9531],
        ...,
        [0.9433, 0.9447, 1.2262,  ..., 1.1101, 1.2029, 0.9503],
        [0.9600, 0.9513, 1.2401,  ..., 1.1216, 1.2246, 0.9577],
        [0.9719, 0.9557, 1.2494,  ..., 1.1293, 1.2392, 0.9626]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2665],
         [12.9911],
         [12.4506],
         ...,
         [12.6421],
         [69.8815],
         [12.7098]],
        [[ 7.5290],
         [ 7.7484],
         [ 8.6027],
         ...,
         [ 9.3756],
         [24.9126],
         [ 7.9765]],
        [[ 7.0191],
         [ 7.2682],
         [ 8.2179],
         ...,
         [ 9.0350],
         [21.9265],
         [ 7.5295]],
        ...,
        [[ 6.4340],
         [ 6.7135],
         [ 7.7641],
         ...,
         [ 8.6294],
         [18.7130],
         [ 7.0094]],
        [[ 8.0325],
         [ 8.2198],
         [ 8.9740],
         ...,
         [ 9.7014],
         [28.0294],
         [ 8.4127]],
        [[ 9.2661],
         [ 9.3640],
         [ 9.8509],
         ...,
         [10.4611],
         [36.3564],
         [ 9.4615]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9829, 0.9769, 0.9654,  ..., 0.9695, 2.1969, 0.9709],
        [0.8598, 0.8645, 0.8828,  ..., 0.8994, 1.2326, 0.8694],
        [0.8489, 0.8542, 0.8746,  ..., 0.8921, 1.1686, 0.8598],
        ...,
        [0.8363, 0.8423, 0.8649,  ..., 0.8834, 1.0996, 0.8487],
        [0.8706, 0.8746, 0.8908,  ..., 0.9064, 1.2994, 0.8788],
        [0.8971, 0.8992, 0.9096,  ..., 0.9227, 1.4780, 0.9013]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.5401],
         [20.5984],
         [25.1116],
         ...,
         [22.5822],
         [73.1839],
         [25.6589]],
        [[16.7159],
         [17.1550],
         [16.4747],
         ...,
         [15.8260],
         [23.8468],
         [19.7575]],
        [[16.6166],
         [16.7709],
         [15.6371],
         ...,
         [15.1446],
         [20.7562],
         [19.1285]],
        ...,
        [[16.4942],
         [16.3061],
         [14.6565],
         ...,
         [14.3395],
         [17.4712],
         [18.3756]],
        [[16.8081],
         [17.5174],
         [17.2877],
         ...,
         [16.4822],
         [27.1073],
         [20.3565]],
        [[17.0134],
         [18.3444],
         [19.2266],
         ...,
         [18.0282],
         [35.9666],
         [21.7435]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9899, 1.0397, 1.1131,  ..., 1.0719, 1.8950, 1.1220],
        [0.9765, 0.9837, 0.9726,  ..., 0.9620, 1.0925, 1.0260],
        [0.9749, 0.9774, 0.9590,  ..., 0.9510, 1.0422, 1.0158],
        ...,
        [0.9729, 0.9699, 0.9430,  ..., 0.9379, 0.9888, 1.0035],
        [0.9780, 0.9896, 0.9858,  ..., 0.9727, 1.1455, 1.0357],
        [0.9814, 1.0030, 1.0174,  ..., 0.9979, 1.2896, 1.0583]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.4146],
         [11.5579],
         [31.1090],
         ...,
         [25.2486],
         [36.5138],
         [12.4001]],
        [[10.9003],
         [10.7028],
         [28.9034],
         ...,
         [21.8415],
         [31.4526],
         [10.8042]],
        [[10.6238],
         [10.6015],
         [28.6415],
         ...,
         [21.4531],
         [30.8770],
         [10.6215]],
        ...,
        [[10.2904],
         [10.4770],
         [28.3197],
         ...,
         [20.9805],
         [30.1771],
         [10.3990]],
        [[11.1620],
         [10.7973],
         [29.1474],
         ...,
         [22.2063],
         [31.9935],
         [10.9756]],
        [[11.7618],
         [11.0086],
         [29.6930],
         ...,
         [23.0332],
         [33.2203],
         [11.3637]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0034, 0.9789, 1.2373,  ..., 1.1598, 1.3087, 0.9900],
        [0.9702, 0.9676, 1.2081,  ..., 1.1148, 1.2418, 0.9689],
        [0.9666, 0.9663, 1.2047,  ..., 1.1097, 1.2342, 0.9665],
        ...,
        [0.9621, 0.9646, 1.2004,  ..., 1.1034, 1.2250, 0.9636],
        [0.9737, 0.9688, 1.2114,  ..., 1.1196, 1.2490, 0.9712],
        [0.9816, 0.9716, 1.2186,  ..., 1.1305, 1.2652, 0.9763]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2881],
         [12.5567],
         [13.0546],
         ...,
         [11.5069],
         [70.2840],
         [12.7079]],
        [[ 7.5191],
         [ 8.3890],
         [ 7.6823],
         ...,
         [ 8.6844],
         [24.9250],
         [ 7.6718]],
        [[ 7.0073],
         [ 7.9805],
         [ 7.1942],
         ...,
         [ 8.3871],
         [21.9232],
         [ 7.2071]],
        ...,
        [[ 6.4203],
         [ 7.5009],
         [ 6.6314],
         ...,
         [ 8.0321],
         [18.6951],
         [ 6.6694]],
        [[ 8.0247],
         [ 8.7848],
         [ 8.1622],
         ...,
         [ 8.9682],
         [28.0601],
         [ 8.1273]],
        [[ 9.2639],
         [ 9.7254],
         [ 9.3299],
         ...,
         [ 9.6279],
         [36.4445],
         [ 9.2304]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9829, 0.9673, 0.9779,  ..., 0.9447, 2.2051, 0.9705],
        [0.8592, 0.8779, 0.8627,  ..., 0.8842, 1.2325, 0.8625],
        [0.8483, 0.8691, 0.8523,  ..., 0.8778, 1.1681, 0.8525],
        ...,
        [0.8357, 0.8588, 0.8402,  ..., 0.8702, 1.0989, 0.8410],
        [0.8701, 0.8864, 0.8730,  ..., 0.8903, 1.2997, 0.8723],
        [0.8966, 0.9065, 0.8981,  ..., 0.9045, 1.4795, 0.8959]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9773],
         [19.3776],
         [25.0699],
         ...,
         [23.8815],
         [72.5229],
         [25.5944]],
        [[15.2131],
         [16.2702],
         [15.6290],
         ...,
         [15.3334],
         [23.7662],
         [19.9545]],
        [[15.1211],
         [15.9219],
         [14.7410],
         ...,
         [14.5151],
         [20.7006],
         [19.3490]],
        ...,
        [[15.0077],
         [15.5000],
         [13.7087],
         ...,
         [13.5598],
         [17.4396],
         [18.6229]],
        [[15.2986],
         [16.5984],
         [16.4962],
         ...,
         [16.1299],
         [26.9981],
         [20.5303]],
        [[15.4889],
         [17.3465],
         [18.5840],
         ...,
         [18.0367],
         [35.7704],
         [21.8604]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9720, 1.0273, 1.1199,  ..., 1.1006, 1.8917, 1.1284],
        [0.9596, 0.9768, 0.9663,  ..., 0.9615, 1.0987, 1.0367],
        [0.9581, 0.9711, 0.9519,  ..., 0.9482, 1.0488, 1.0268],
        ...,
        [0.9562, 0.9642, 0.9351,  ..., 0.9327, 0.9958, 1.0150],
        [0.9610, 0.9821, 0.9804,  ..., 0.9745, 1.1512, 1.0460],
        [0.9641, 0.9943, 1.0144,  ..., 1.0055, 1.2939, 1.0677]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6075],
         [11.8870],
         [25.5436],
         ...,
         [25.3642],
         [38.5285],
         [12.8913]],
        [[10.8201],
         [10.8461],
         [22.9508],
         ...,
         [19.8625],
         [32.4967],
         [10.7525]],
        [[10.7264],
         [10.7238],
         [22.6487],
         ...,
         [19.2704],
         [31.8189],
         [10.5137]],
        ...,
        [[10.6113],
         [10.5739],
         [22.2792],
         ...,
         [18.5599],
         [30.9973],
         [10.2247]],
        [[10.9073],
         [10.9603],
         [23.2332],
         ...,
         [20.4254],
         [33.1352],
         [10.9778]],
        [[11.1023],
         [11.2166],
         [23.8689],
         ...,
         [21.7245],
         [34.5890],
         [11.4917]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9889, 0.9926, 1.1730,  ..., 1.1707, 1.3446, 1.0058],
        [0.9785, 0.9788, 1.1388,  ..., 1.0980, 1.2649, 0.9776],
        [0.9772, 0.9772, 1.1348,  ..., 1.0901, 1.2560, 0.9744],
        ...,
        [0.9757, 0.9752, 1.1299,  ..., 1.0808, 1.2451, 0.9706],
        [0.9796, 0.9803, 1.1425,  ..., 1.1054, 1.2734, 0.9805],
        [0.9822, 0.9837, 1.1509,  ..., 1.1226, 1.2926, 0.9873]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1778],
         [12.0015],
         [14.2696],
         ...,
         [11.3943],
         [69.8419],
         [11.8353]],
        [[ 7.5804],
         [ 9.6091],
         [ 7.9032],
         ...,
         [ 9.3510],
         [24.9114],
         [10.2372]],
        [[ 7.0789],
         [ 9.3482],
         [ 7.3457],
         ...,
         [ 9.1250],
         [21.9268],
         [10.0550]],
        ...,
        [[ 6.5023],
         [ 9.0343],
         [ 6.7082],
         ...,
         [ 8.8521],
         [18.7148],
         [ 9.8334]],
        [[ 8.0749],
         [ 9.8564],
         [ 8.4553],
         ...,
         [ 9.5646],
         [28.0263],
         [10.4084]],
        [[ 9.2833],
         [10.4248],
         [ 9.8139],
         ...,
         [10.0534],
         [36.3477],
         [10.7962]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9769, 0.9516, 1.0003,  ..., 0.9386, 2.1920, 0.9481],
        [0.8568, 0.9003, 0.8638,  ..., 0.8948, 1.2285, 0.9138],
        [0.8461, 0.8948, 0.8518,  ..., 0.8900, 1.1645, 0.9099],
        ...,
        [0.8337, 0.8880, 0.8381,  ..., 0.8841, 1.0956, 0.9052],
        [0.8674, 0.9056, 0.8756,  ..., 0.8994, 1.2953, 0.9175],
        [0.8934, 0.9178, 0.9047,  ..., 0.9099, 1.4737, 0.9258]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.4948],
         [17.3830],
         [24.0751],
         ...,
         [26.7136],
         [70.9320],
         [23.0836]],
        [[13.2989],
         [14.5344],
         [14.1306],
         ...,
         [14.5030],
         [23.5703],
         [19.6196]],
        [[13.1579],
         [14.2159],
         [13.2287],
         ...,
         [13.4468],
         [20.5653],
         [19.2286]],
        ...,
        [[12.9850],
         [13.8303],
         [12.1888],
         ...,
         [12.2422],
         [17.3627],
         [18.7542]],
        [[13.4304],
         [14.8347],
         [15.0179],
         ...,
         [15.5516],
         [26.7330],
         [19.9875]],
        [[13.7253],
         [15.5197],
         [17.1778],
         ...,
         [18.1416],
         [35.2952],
         [20.8242]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9546, 1.0016, 1.1105,  ..., 1.1534, 1.8726, 1.0943],
        [0.9352, 0.9553, 0.9487,  ..., 0.9548, 1.1022, 1.0380],
        [0.9329, 0.9501, 0.9340,  ..., 0.9376, 1.0534, 1.0316],
        ...,
        [0.9301, 0.9438, 0.9171,  ..., 0.9180, 1.0013, 1.0239],
        [0.9373, 0.9602, 0.9631,  ..., 0.9718, 1.1537, 1.0440],
        [0.9421, 0.9713, 0.9983,  ..., 1.0139, 1.2929, 1.0576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6255],
         [11.4992],
         [28.2091],
         ...,
         [25.2033],
         [37.2649],
         [12.5790]],
        [[10.8722],
         [10.7824],
         [26.4741],
         ...,
         [21.0639],
         [31.8407],
         [10.7844]],
        [[10.6728],
         [10.6968],
         [26.2669],
         ...,
         [20.6012],
         [31.2267],
         [10.5808]],
        ...,
        [[10.4304],
         [10.5915],
         [26.0120],
         ...,
         [20.0411],
         [30.4810],
         [10.3335]],
        [[11.0595],
         [10.8620],
         [26.6669],
         ...,
         [21.5002],
         [32.4183],
         [10.9758]],
        [[11.4845],
         [11.0397],
         [27.0972],
         ...,
         [22.4954],
         [33.7303],
         [11.4103]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0014, 0.9865, 1.2073,  ..., 1.1676, 1.3270, 1.0007],
        [0.9782, 0.9770, 1.1844,  ..., 1.1129, 1.2553, 0.9770],
        [0.9755, 0.9759, 1.1816,  ..., 1.1068, 1.2472, 0.9743],
        ...,
        [0.9723, 0.9745, 1.1783,  ..., 1.0994, 1.2373, 0.9711],
        [0.9807, 0.9780, 1.1869,  ..., 1.1186, 1.2629, 0.9795],
        [0.9863, 0.9804, 1.1926,  ..., 1.1318, 1.2803, 0.9853]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2457],
         [12.3475],
         [13.3526],
         ...,
         [10.4273],
         [70.1173],
         [12.6754]],
        [[ 7.5395],
         [ 8.7850],
         [ 7.4980],
         ...,
         [ 8.6896],
         [24.9199],
         [ 8.0697]],
        [[ 7.0315],
         [ 8.4225],
         [ 6.9811],
         ...,
         [ 8.4958],
         [21.9246],
         [ 7.6310]],
        ...,
        [[ 6.4483],
         [ 7.9933],
         [ 6.3887],
         ...,
         [ 8.2611],
         [18.7026],
         [ 7.1195]],
        [[ 8.0410],
         [ 9.1335],
         [ 8.0092],
         ...,
         [ 8.8726],
         [28.0475],
         [ 8.4970]],
        [[ 9.2689],
         [ 9.9522],
         [ 9.2639],
         ...,
         [ 9.2900],
         [36.4081],
         [ 9.5219]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9811, 0.9619, 0.9834,  ..., 0.9207, 2.2007, 0.9689],
        [0.8588, 0.8855, 0.8579,  ..., 0.8834, 1.2315, 0.8701],
        [0.8479, 0.8777, 0.8468,  ..., 0.8793, 1.1672, 0.8607],
        ...,
        [0.8354, 0.8685, 0.8341,  ..., 0.8742, 1.0981, 0.8498],
        [0.8695, 0.8929, 0.8688,  ..., 0.8873, 1.2985, 0.8793],
        [0.8958, 0.9105, 0.8957,  ..., 0.8963, 1.4778, 0.9013]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1732],
         [18.5409],
         [24.8627],
         ...,
         [25.0069],
         [71.9206],
         [24.3499]],
        [[14.4556],
         [15.5758],
         [15.0268],
         ...,
         [14.9513],
         [23.6923],
         [19.9282]],
        [[14.3692],
         [15.2434],
         [14.1187],
         ...,
         [14.0290],
         [20.6496],
         [19.4400]],
        ...,
        [[14.2627],
         [14.8407],
         [13.0676],
         ...,
         [12.9629],
         [17.4107],
         [18.8505]],
        [[14.5359],
         [15.8891],
         [15.9169],
         ...,
         [15.8565],
         [26.8981],
         [20.3899]],
        [[14.7146],
         [16.6030],
         [18.0721],
         ...,
         [18.0527],
         [35.5910],
         [21.4468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9718, 1.0265, 1.1293,  ..., 1.1317, 1.8947, 1.1210],
        [0.9601, 0.9783, 0.9694,  ..., 0.9681, 1.1103, 1.0491],
        [0.9587, 0.9729, 0.9546,  ..., 0.9531, 1.0608, 1.0411],
        ...,
        [0.9569, 0.9663, 0.9375,  ..., 0.9358, 1.0081, 1.0316],
        [0.9614, 0.9834, 0.9838,  ..., 0.9829, 1.1625, 1.0566],
        [0.9643, 0.9950, 1.0189,  ..., 1.0186, 1.3038, 1.0738]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7693],
         [11.7117],
         [26.0553],
         ...,
         [25.6107],
         [32.9180],
         [11.7640]],
        [[10.8396],
         [10.8230],
         [24.0212],
         ...,
         [18.6641],
         [29.5557],
         [10.8529]],
        [[10.7297],
         [10.7178],
         [23.7807],
         ...,
         [17.9472],
         [29.1641],
         [10.7452]],
        ...,
        [[10.5949],
         [10.5886],
         [23.4855],
         ...,
         [17.0955],
         [28.6853],
         [10.6129]],
        [[10.9420],
         [10.9211],
         [24.2454],
         ...,
         [19.3513],
         [29.9219],
         [10.9534]],
        [[11.1715],
         [11.1406],
         [24.7475],
         ...,
         [20.9588],
         [30.7461],
         [11.1783]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9950, 0.9943, 1.1838,  ..., 1.1780, 1.2745, 0.9950],
        [0.9828, 0.9825, 1.1570,  ..., 1.0862, 1.2301, 0.9829],
        [0.9813, 0.9811, 1.1538,  ..., 1.0767, 1.2249, 0.9815],
        ...,
        [0.9795, 0.9794, 1.1499,  ..., 1.0654, 1.2186, 0.9798],
        [0.9841, 0.9838, 1.1599,  ..., 1.0952, 1.2349, 0.9843],
        [0.9871, 0.9867, 1.1666,  ..., 1.1165, 1.2458, 0.9872]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9763],
         [12.5944],
         [13.5646],
         ...,
         [11.4973],
         [63.4902],
         [17.2382]],
        [[ 7.7651],
         [ 8.3233],
         [ 7.4656],
         ...,
         [ 8.1815],
         [24.6641],
         [13.4428]],
        [[ 7.2868],
         [ 7.9073],
         [ 6.9336],
         ...,
         [ 7.8440],
         [21.9398],
         [13.0353]],
        ...,
        [[ 6.7340],
         [ 7.4197],
         [ 6.3257],
         ...,
         [ 7.4445],
         [18.9731],
         [12.5466]],
        [[ 8.2344],
         [ 8.7268],
         [ 7.9929],
         ...,
         [ 8.5059],
         [27.4787],
         [13.8304]],
        [[ 9.3729],
         [ 9.6876],
         [ 9.2919],
         ...,
         [ 9.2680],
         [34.8784],
         [14.7255]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9726, 0.9644, 0.9852,  ..., 0.9409, 2.0558, 1.0640],
        [0.8609, 0.8728, 0.8544,  ..., 0.8698, 1.2232, 0.9826],
        [0.8506, 0.8639, 0.8430,  ..., 0.8625, 1.1648, 0.9739],
        ...,
        [0.8387, 0.8534, 0.8300,  ..., 0.8540, 1.1012, 0.9634],
        [0.8709, 0.8815, 0.8657,  ..., 0.8767, 1.2836, 0.9909],
        [0.8953, 0.9021, 0.8936,  ..., 0.8931, 1.4423, 1.0101]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8369],
         [15.7093],
         [26.0281],
         ...,
         [25.2312],
         [70.0576],
         [16.6561]],
        [[14.0617],
         [13.7752],
         [14.8507],
         ...,
         [14.0334],
         [23.4616],
         [15.6569]],
        [[13.9686],
         [13.5530],
         [13.8542],
         ...,
         [13.0504],
         [20.4902],
         [15.5374]],
        ...,
        [[13.8539],
         [13.2821],
         [12.7097],
         ...,
         [11.9255],
         [17.3200],
         [15.3905]],
        [[14.1482],
         [13.9836],
         [15.8343],
         ...,
         [15.0065],
         [26.5861],
         [15.7680]],
        [[14.3410],
         [14.4547],
         [18.2413],
         ...,
         [17.3993],
         [35.0324],
         [16.0159]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9583, 0.9725, 1.1403,  ..., 1.1273, 1.8564, 0.9879],
        [0.9457, 0.9410, 0.9585,  ..., 0.9452, 1.0986, 0.9716],
        [0.9442, 0.9374, 0.9423,  ..., 0.9292, 1.0502, 0.9697],
        ...,
        [0.9423, 0.9330, 0.9237,  ..., 0.9109, 0.9987, 0.9673],
        [0.9471, 0.9444, 0.9745,  ..., 0.9610, 1.1494, 0.9734],
        [0.9502, 0.9521, 1.0136,  ..., 1.0000, 1.2868, 0.9775]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4006],
         [11.5221],
         [27.5647],
         ...,
         [25.2100],
         [36.1968],
         [12.1783]],
        [[10.8653],
         [10.7958],
         [25.8738],
         ...,
         [20.4561],
         [31.2843],
         [10.8239]],
        [[10.6890],
         [10.7092],
         [25.6719],
         ...,
         [19.9338],
         [30.7246],
         [10.6670]],
        ...,
        [[10.4741],
         [10.6026],
         [25.4234],
         ...,
         [19.3039],
         [30.0437],
         [10.4755]],
        [[11.0307],
         [10.8765],
         [26.0617],
         ...,
         [20.9505],
         [31.8102],
         [10.9707]],
        [[11.4045],
         [11.0565],
         [26.4811],
         ...,
         [22.0842],
         [33.0020],
         [11.3018]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9996, 0.9880, 1.2000,  ..., 1.1689, 1.3140, 0.9966],
        [0.9793, 0.9784, 1.1776,  ..., 1.1060, 1.2491, 0.9787],
        [0.9769, 0.9772, 1.1750,  ..., 1.0991, 1.2417, 0.9767],
        ...,
        [0.9741, 0.9758, 1.1717,  ..., 1.0908, 1.2327, 0.9741],
        [0.9815, 0.9794, 1.1801,  ..., 1.1126, 1.2561, 0.9807],
        [0.9864, 0.9818, 1.1856,  ..., 1.1275, 1.2718, 0.9850]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1798],
         [12.4071],
         [13.4004],
         ...,
         [10.5980],
         [68.5086],
         [12.4076]],
        [[ 7.5790],
         [ 8.6666],
         [ 7.4893],
         ...,
         [ 8.5373],
         [24.8677],
         [ 8.8493]],
        [[ 7.0773],
         [ 8.2901],
         [ 6.9689],
         ...,
         [ 8.3118],
         [21.9359],
         [ 8.4867]],
        ...,
        [[ 6.5005],
         [ 7.8454],
         [ 6.3730],
         ...,
         [ 8.0402],
         [18.7730],
         [ 8.0572]],
        [[ 8.0738],
         [ 9.0293],
         [ 8.0043],
         ...,
         [ 8.7509],
         [27.9212],
         [ 9.1978]],
        [[ 9.2828],
         [ 9.8844],
         [ 9.2692],
         ...,
         [ 9.2413],
         [36.0517],
         [10.0161]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 0.9626, 0.9839,  ..., 0.9238, 2.1657, 0.9626],
        [0.8591, 0.8824, 0.8572,  ..., 0.8797, 1.2298, 0.8863],
        [0.8483, 0.8744, 0.8460,  ..., 0.8748, 1.1670, 0.8786],
        ...,
        [0.8360, 0.8648, 0.8332,  ..., 0.8690, 1.0991, 0.8694],
        [0.8697, 0.8902, 0.8682,  ..., 0.8842, 1.2953, 0.8938],
        [0.8956, 0.9085, 0.8954,  ..., 0.8948, 1.4697, 0.9114]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0828],
         [17.8010],
         [25.1452],
         ...,
         [25.0996],
         [71.4777],
         [22.5437]],
        [[14.3618],
         [15.0990],
         [14.9814],
         ...,
         [14.7050],
         [23.6378],
         [18.8835]],
        [[14.2750],
         [14.7944],
         [14.0512],
         ...,
         [13.7632],
         [20.6119],
         [18.4739]],
        ...,
        [[14.1680],
         [14.4249],
         [12.9765],
         ...,
         [12.6778],
         [17.3892],
         [17.9778]],
        [[14.4425],
         [15.3858],
         [15.8949],
         ...,
         [15.6315],
         [26.8243],
         [19.2698]],
        [[14.6220],
         [16.0380],
         [18.1123],
         ...,
         [17.8880],
         [35.4587],
         [20.1503]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9755, 1.0197, 1.1391,  ..., 1.1384, 1.8927, 1.0968],
        [0.9637, 0.9757, 0.9738,  ..., 0.9693, 1.1146, 1.0373],
        [0.9623, 0.9708, 0.9587,  ..., 0.9540, 1.0654, 1.0306],
        ...,
        [0.9606, 0.9648, 0.9412,  ..., 0.9363, 1.0130, 1.0225],
        [0.9650, 0.9804, 0.9887,  ..., 0.9844, 1.1664, 1.0436],
        [0.9680, 0.9910, 1.0247,  ..., 1.0211, 1.3069, 1.0579]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6852],
         [11.6255],
         [26.1411],
         ...,
         [25.1680],
         [32.9288],
         [11.6524]],
        [[10.8225],
         [10.8134],
         [24.1616],
         ...,
         [20.7840],
         [29.5563],
         [10.8168]],
        [[10.7203],
         [10.7169],
         [23.9272],
         ...,
         [20.2974],
         [29.1636],
         [10.7177]],
        ...,
        [[10.5947],
         [10.5983],
         [23.6395],
         ...,
         [19.7093],
         [28.6834],
         [10.5958]],
        [[10.9178],
         [10.9033],
         [24.3800],
         ...,
         [21.2437],
         [29.9235],
         [10.9092]],
        [[11.1310],
         [11.1042],
         [24.8690],
         ...,
         [22.2942],
         [30.7501],
         [11.1158]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9944, 0.9936, 1.1854,  ..., 1.1726, 1.2751, 0.9939],
        [0.9830, 0.9829, 1.1593,  ..., 1.1146, 1.2306, 0.9829],
        [0.9816, 0.9816, 1.1562,  ..., 1.1082, 1.2254, 0.9816],
        ...,
        [0.9800, 0.9800, 1.1524,  ..., 1.1004, 1.2190, 0.9800],
        [0.9842, 0.9840, 1.1621,  ..., 1.1207, 1.2354, 0.9841],
        [0.9871, 0.9867, 1.1686,  ..., 1.1346, 1.2463, 0.9869]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9882],
         [13.0057],
         [12.5498],
         ...,
         [11.2890],
         [61.8780],
         [13.2660]],
        [[ 7.7516],
         [ 7.7324],
         [ 7.8999],
         ...,
         [ 8.3040],
         [24.5837],
         [11.8870]],
        [[ 7.2718],
         [ 7.2504],
         [ 7.4600],
         ...,
         [ 7.9942],
         [21.9292],
         [11.7266]],
        ...,
        [[ 6.7174],
         [ 6.6937],
         [ 6.9479],
         ...,
         [ 7.6258],
         [19.0295],
         [11.5305]],
        [[ 8.2226],
         [ 8.2058],
         [ 8.3290],
         ...,
         [ 8.6006],
         [27.3190],
         [12.0371]],
        [[ 9.3657],
         [ 9.3556],
         [ 9.3603],
         ...,
         [ 9.2932],
         [34.4798],
         [12.3749]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9837, 0.9840, 0.9743,  ..., 0.9472, 2.0320, 0.9896],
        [0.8714, 0.8710, 0.8746,  ..., 0.8832, 1.2323, 0.9601],
        [0.8611, 0.8606, 0.8651,  ..., 0.8766, 1.1754, 0.9566],
        ...,
        [0.8492, 0.8487, 0.8541,  ..., 0.8687, 1.1132, 0.9524],
        [0.8815, 0.8811, 0.8838,  ..., 0.8896, 1.2910, 0.9633],
        [0.9060, 0.9058, 0.9059,  ..., 0.9044, 1.4445, 0.9705]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0544],
         [14.4732],
         [25.9356],
         ...,
         [25.4056],
         [70.4218],
         [16.7210]],
        [[14.3231],
         [13.0646],
         [15.0723],
         ...,
         [14.1477],
         [23.5069],
         [15.1170]],
        [[14.2351],
         [12.9001],
         [14.0929],
         ...,
         [13.1587],
         [20.5215],
         [14.9295]],
        ...,
        [[14.1266],
         [12.6987],
         [12.9653],
         ...,
         [12.0268],
         [17.3378],
         [14.6999]],
        [[14.4049],
         [13.2184],
         [16.0368],
         ...,
         [15.1267],
         [26.6474],
         [15.2922]],
        [[14.5869],
         [13.5642],
         [18.3893],
         ...,
         [17.5332],
         [35.1420],
         [15.6861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9631, 0.9537, 1.1401,  ..., 1.1315, 1.8636, 0.9902],
        [0.9512, 0.9308, 0.9634,  ..., 0.9484, 1.1006, 0.9641],
        [0.9498, 0.9281, 0.9475,  ..., 0.9323, 1.0520, 0.9611],
        ...,
        [0.9480, 0.9248, 0.9291,  ..., 0.9139, 1.0003, 0.9573],
        [0.9525, 0.9333, 0.9791,  ..., 0.9643, 1.1517, 0.9670],
        [0.9555, 0.9389, 1.0174,  ..., 1.0034, 1.2898, 0.9734]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2572],
         [11.5349],
         [27.2579],
         ...,
         [25.2011],
         [35.6001],
         [11.9748]],
        [[10.8589],
         [10.7997],
         [25.5647],
         ...,
         [20.5133],
         [30.9729],
         [10.8364]],
        [[10.6972],
         [10.7120],
         [25.3625],
         ...,
         [19.9972],
         [30.4436],
         [10.7033]],
        ...,
        [[10.5000],
         [10.6042],
         [25.1138],
         ...,
         [19.3747],
         [29.7992],
         [10.5402]],
        [[11.0102],
         [10.8813],
         [25.7527],
         ...,
         [21.0015],
         [31.4697],
         [10.9609]],
        [[11.3518],
         [11.0635],
         [26.1726],
         ...,
         [22.1203],
         [32.5944],
         [11.2405]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9984, 0.9889, 1.1967,  ..., 1.1695, 1.3069, 0.9947],
        [0.9800, 0.9792, 1.1743,  ..., 1.1075, 1.2458, 0.9797],
        [0.9778, 0.9780, 1.1716,  ..., 1.1007, 1.2388, 0.9779],
        ...,
        [0.9752, 0.9766, 1.1683,  ..., 1.0925, 1.2303, 0.9757],
        [0.9820, 0.9802, 1.1768,  ..., 1.1140, 1.2523, 0.9813],
        [0.9865, 0.9827, 1.1823,  ..., 1.1288, 1.2672, 0.9850]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1454],
         [12.5216],
         [13.1916],
         ...,
         [10.7111],
         [67.3042],
         [12.2482]],
        [[ 7.6037],
         [ 8.4517],
         [ 7.5344],
         ...,
         [ 8.4884],
         [24.8247],
         [ 9.2672]],
        [[ 7.1055],
         [ 8.0503],
         [ 7.0297],
         ...,
         [ 8.2475],
         [21.9414],
         [ 8.9527]],
        ...,
        [[ 6.5323],
         [ 7.5785],
         [ 6.4500],
         ...,
         [ 7.9579],
         [18.8239],
         [ 8.5772]],
        [[ 8.0946],
         [ 8.8400],
         [ 8.0325],
         ...,
         [ 8.7170],
         [27.8220],
         [ 9.5673]],
        [[ 9.2930],
         [ 9.7613],
         [ 9.2511],
         ...,
         [ 9.2436],
         [35.7789],
         [10.2645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9809, 0.9675, 0.9819,  ..., 0.9287, 2.1422, 0.9616],
        [0.8620, 0.8802, 0.8605,  ..., 0.8810, 1.2313, 0.8977],
        [0.8513, 0.8716, 0.8497,  ..., 0.8758, 1.1695, 0.8910],
        ...,
        [0.8391, 0.8615, 0.8373,  ..., 0.8696, 1.1026, 0.8829],
        [0.8726, 0.8885, 0.8712,  ..., 0.8859, 1.2956, 0.9041],
        [0.8982, 0.9083, 0.8974,  ..., 0.8972, 1.4662, 0.9191]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0764],
         [17.0294],
         [25.2891],
         ...,
         [25.1648],
         [71.2911],
         [21.8825]],
        [[14.3552],
         [14.6824],
         [14.9982],
         ...,
         [14.5962],
         [23.6147],
         [17.9945]],
        [[14.2684],
         [14.4153],
         [14.0590],
         ...,
         [13.6444],
         [20.5960],
         [17.5639]],
        ...,
        [[14.1613],
         [14.0906],
         [12.9745],
         ...,
         [12.5490],
         [17.3802],
         [17.0439]],
        [[14.4358],
         [14.9334],
         [15.9210],
         ...,
         [15.5337],
         [26.7931],
         [18.4013]],
        [[14.6154],
         [15.5024],
         [18.1632],
         ...,
         [17.8210],
         [35.4029],
         [19.3319]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9730, 1.0047, 1.1391,  ..., 1.1371, 1.8873, 1.0837],
        [0.9612, 0.9666, 0.9717,  ..., 0.9652, 1.1118, 1.0204],
        [0.9598, 0.9622, 0.9564,  ..., 0.9497, 1.0627, 1.0134],
        ...,
        [0.9581, 0.9569, 0.9388,  ..., 0.9319, 1.0104, 1.0050],
        [0.9625, 0.9706, 0.9867,  ..., 0.9804, 1.1635, 1.0270],
        [0.9655, 0.9799, 1.0232,  ..., 1.0176, 1.3036, 1.0422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0212],
         [11.5985],
         [26.8407],
         ...,
         [25.2446],
         [34.3571],
         [11.7027]],
        [[10.8462],
         [10.8094],
         [25.1343],
         ...,
         [21.7045],
         [30.3182],
         [10.8031]],
        [[10.7089],
         [10.7155],
         [24.9307],
         ...,
         [21.3023],
         [29.8525],
         [10.6967]],
        ...,
        [[10.5410],
         [10.6002],
         [24.6804],
         ...,
         [20.8135],
         [29.2843],
         [10.5661]],
        [[10.9744],
         [10.8968],
         [25.3236],
         ...,
         [22.0825],
         [30.7547],
         [10.9024]],
        [[11.2628],
         [11.0922],
         [25.7466],
         ...,
         [22.9402],
         [31.7401],
         [11.1245]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9973, 0.9917, 1.1931,  ..., 1.1720, 1.2924, 0.9931],
        [0.9817, 0.9813, 1.1706,  ..., 1.1252, 1.2391, 0.9812],
        [0.9799, 0.9800, 1.1679,  ..., 1.1199, 1.2329, 0.9798],
        ...,
        [0.9777, 0.9785, 1.1646,  ..., 1.1135, 1.2254, 0.9780],
        [0.9834, 0.9824, 1.1731,  ..., 1.1302, 1.2448, 0.9825],
        [0.9872, 0.9850, 1.1787,  ..., 1.1416, 1.2579, 0.9854]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9430],
         [12.8054],
         [12.2542],
         ...,
         [10.8306],
         [64.1511],
         [12.2492]],
        [[ 7.8042],
         [ 7.9878],
         [ 7.9526],
         ...,
         [ 8.6077],
         [24.6948],
         [ 8.9920]],
        [[ 7.3305],
         [ 7.5345],
         [ 7.5381],
         ...,
         [ 8.3664],
         [21.9423],
         [ 8.6544]],
        ...,
        [[ 6.7822],
         [ 7.0075],
         [ 7.0536],
         ...,
         [ 8.0763],
         [18.9487],
         [ 8.2530]],
        [[ 8.2687],
         [ 8.4305],
         [ 8.3554],
         ...,
         [ 8.8367],
         [27.5415],
         [ 9.3154]],
        [[ 9.3939],
         [ 9.4961],
         [ 9.3180],
         ...,
         [ 9.3638],
         [35.0386],
         [10.0706]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9850, 0.9820, 0.9702,  ..., 0.9397, 2.0831, 0.9701],
        [0.8748, 0.8787, 0.8780,  ..., 0.8920, 1.2370, 0.9002],
        [0.8646, 0.8690, 0.8691,  ..., 0.8868, 1.1779, 0.8930],
        ...,
        [0.8529, 0.8577, 0.8587,  ..., 0.8806, 1.1137, 0.8844],
        [0.8847, 0.8882, 0.8866,  ..., 0.8969, 1.2980, 0.9072],
        [0.9089, 0.9110, 0.9072,  ..., 0.9082, 1.4588, 0.9234]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.2641],
         [15.4880],
         [25.3005],
         ...,
         [25.3020],
         [70.7356],
         [19.7399]],
        [[14.5498],
         [13.8000],
         [15.0708],
         ...,
         [14.5540],
         [23.5459],
         [16.2813]],
        [[14.4637],
         [13.6043],
         [14.1346],
         ...,
         [13.5910],
         [20.5485],
         [15.8976]],
        ...,
        [[14.3576],
         [13.3652],
         [13.0531],
         ...,
         [12.4838],
         [17.3532],
         [15.4340]],
        [[14.6297],
         [13.9832],
         [15.9900],
         ...,
         [15.5035],
         [26.7001],
         [16.6437]],
        [[14.8076],
         [14.3961],
         [18.2218],
         ...,
         [17.8238],
         [35.2363],
         [17.4722]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9746, 0.9782, 1.1378,  ..., 1.1378, 1.8768, 1.0474],
        [0.9629, 0.9507, 0.9714,  ..., 0.9630, 1.1093, 0.9911],
        [0.9615, 0.9476, 0.9562,  ..., 0.9473, 1.0605, 0.9849],
        ...,
        [0.9598, 0.9437, 0.9386,  ..., 0.9293, 1.0085, 0.9773],
        [0.9642, 0.9537, 0.9864,  ..., 0.9784, 1.1606, 0.9970],
        [0.9671, 0.9604, 1.0227,  ..., 1.0162, 1.2994, 1.0105]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9641],
         [11.6318],
         [26.7830],
         ...,
         [25.5936],
         [33.5622],
         [11.6553]],
        [[10.8420],
         [10.8143],
         [25.0783],
         ...,
         [22.9666],
         [29.8935],
         [10.7981]],
        [[10.7106],
         [10.7171],
         [24.8750],
         ...,
         [22.6608],
         [29.4682],
         [10.6965]],
        ...,
        [[10.5498],
         [10.5978],
         [24.6249],
         ...,
         [22.2869],
         [28.9487],
         [10.5717]],
        [[10.9647],
         [10.9047],
         [25.2675],
         ...,
         [23.2527],
         [30.2916],
         [10.8928]],
        [[11.2404],
         [11.1070],
         [25.6901],
         ...,
         [23.8965],
         [31.1890],
         [11.1047]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9984, 0.9940, 1.1943,  ..., 1.1786, 1.2839, 0.9944],
        [0.9836, 0.9832, 1.1718,  ..., 1.1438, 1.2354, 0.9830],
        [0.9819, 0.9820, 1.1691,  ..., 1.1398, 1.2298, 0.9817],
        ...,
        [0.9797, 0.9804, 1.1658,  ..., 1.1349, 1.2229, 0.9800],
        [0.9852, 0.9844, 1.1743,  ..., 1.1476, 1.2406, 0.9843],
        [0.9889, 0.9871, 1.1798,  ..., 1.1561, 1.2525, 0.9871]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8729],
         [12.7718],
         [11.8162],
         ...,
         [10.8614],
         [62.2331],
         [12.5686]],
        [[ 7.8936],
         [ 8.0373],
         [ 8.2621],
         ...,
         [ 8.8047],
         [24.6021],
         [ 8.3681]],
        [[ 7.4299],
         [ 7.5894],
         [ 7.9041],
         ...,
         [ 8.5789],
         [21.9321],
         [ 7.9572]],
        ...,
        [[ 6.8921],
         [ 7.0681],
         [ 7.4813],
         ...,
         [ 8.3066],
         [19.0174],
         [ 7.4751]],
        [[ 8.3474],
         [ 8.4741],
         [ 8.6069],
         ...,
         [ 9.0185],
         [27.3549],
         [ 8.7663]],
        [[ 9.4432],
         [ 9.5241],
         [ 9.4197],
         ...,
         [ 9.5089],
         [34.5685],
         [ 9.7134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9841, 0.9636,  ..., 0.9431, 2.0447, 0.9797],
        [0.8795, 0.8826, 0.8874,  ..., 0.8990, 1.2378, 0.8897],
        [0.8696, 0.8730, 0.8797,  ..., 0.8942, 1.1805, 0.8809],
        ...,
        [0.8580, 0.8618, 0.8707,  ..., 0.8884, 1.1180, 0.8705],
        [0.8892, 0.8919, 0.8948,  ..., 0.9036, 1.2968, 0.8982],
        [0.9127, 0.9145, 0.9122,  ..., 0.9141, 1.4515, 0.9185]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.2203],
         [15.4592],
         [25.1693],
         ...,
         [25.2088],
         [70.1417],
         [18.4202]],
        [[14.5044],
         [13.8547],
         [15.1057],
         ...,
         [14.7204],
         [23.4721],
         [15.2903]],
        [[14.4181],
         [13.6681],
         [14.1805],
         ...,
         [13.7720],
         [20.4974],
         [14.9418]],
        ...,
        [[14.3118],
         [13.4399],
         [13.1106],
         ...,
         [12.6795],
         [17.3241],
         [14.5203]],
        [[14.5845],
         [14.0293],
         [16.0133],
         ...,
         [15.6538],
         [26.6003],
         [15.6192]],
        [[14.7628],
         [14.4224],
         [18.2138],
         ...,
         [17.9284],
         [35.0578],
         [16.3702]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9774, 0.9813, 1.1393,  ..., 1.1399, 1.8707, 1.0295],
        [0.9658, 0.9552, 0.9756,  ..., 0.9693, 1.1117, 0.9786],
        [0.9644, 0.9522, 0.9605,  ..., 0.9539, 1.0633, 0.9729],
        ...,
        [0.9627, 0.9485, 0.9431,  ..., 0.9361, 1.0117, 0.9661],
        [0.9671, 0.9581, 0.9903,  ..., 0.9845, 1.1625, 0.9839],
        [0.9700, 0.9645, 1.0261,  ..., 1.0215, 1.3001, 0.9962]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8731],
         [11.6626],
         [26.2514],
         ...,
         [26.2932],
         [32.1775],
         [11.5312]],
        [[10.8348],
         [10.8180],
         [24.3386],
         ...,
         [24.3668],
         [29.1311],
         [10.7825]],
        [[10.7128],
         [10.7178],
         [24.1118],
         ...,
         [24.1384],
         [28.7747],
         [10.6933]],
        ...,
        [[10.5632],
         [10.5947],
         [23.8331],
         ...,
         [23.8579],
         [28.3383],
         [10.5836]],
        [[10.9488],
         [10.9114],
         [24.5500],
         ...,
         [24.5797],
         [29.4641],
         [10.8656]],
        [[11.2044],
         [11.1202],
         [25.0229],
         ...,
         [25.0558],
         [30.2125],
         [11.0511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0009, 0.9981, 1.1909,  ..., 1.1915, 1.2692, 0.9964],
        [0.9872, 0.9870, 1.1656,  ..., 1.1660, 1.2290, 0.9865],
        [0.9856, 0.9856, 1.1626,  ..., 1.1630, 1.2243, 0.9853],
        ...,
        [0.9836, 0.9840, 1.1590,  ..., 1.1593, 1.2185, 0.9839],
        [0.9887, 0.9882, 1.1684,  ..., 1.1688, 1.2334, 0.9876],
        [0.9921, 0.9909, 1.1747,  ..., 1.1751, 1.2433, 0.9900]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8924],
         [12.7145],
         [11.3995],
         ...,
         [10.8716],
         [58.8200],
         [12.7340]],
        [[ 7.8679],
         [ 8.1252],
         [ 8.5066],
         ...,
         [ 8.9956],
         [24.4078],
         [ 8.0948]],
        [[ 7.4014],
         [ 7.6871],
         [ 8.2039],
         ...,
         [ 8.7871],
         [21.8898],
         [ 7.6533]],
        ...,
        [[ 6.8606],
         [ 7.1760],
         [ 7.8431],
         ...,
         [ 8.5351],
         [19.1226],
         [ 7.1387]],
        [[ 8.3248],
         [ 8.5519],
         [ 8.7960],
         ...,
         [ 9.1924],
         [26.9889],
         [ 8.5250]],
        [[ 9.4289],
         [ 9.5742],
         [ 9.4700],
         ...,
         [ 9.6422],
         [33.6916],
         [ 9.5568]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9821, 0.9539,  ..., 0.9426, 1.9707, 0.9825],
        [0.8781, 0.8837, 0.8918,  ..., 0.9023, 1.2328, 0.8830],
        [0.8681, 0.8743, 0.8853,  ..., 0.8979, 1.1788, 0.8735],
        ...,
        [0.8565, 0.8633, 0.8776,  ..., 0.8924, 1.1195, 0.8625],
        [0.8879, 0.8928, 0.8980,  ..., 0.9065, 1.2882, 0.8922],
        [0.9116, 0.9147, 0.9125,  ..., 0.9162, 1.4319, 0.9144]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9708],
         [15.2087],
         [25.1597],
         ...,
         [25.1928],
         [68.9693],
         [16.5162]],
        [[14.2260],
         [13.9834],
         [15.0414],
         ...,
         [14.8488],
         [23.3251],
         [14.3461]],
        [[14.1364],
         [13.8388],
         [14.1134],
         ...,
         [13.9082],
         [20.3958],
         [14.0981]],
        ...,
        [[14.0260],
         [13.6613],
         [13.0408],
         ...,
         [12.8232],
         [17.2663],
         [13.7963]],
        [[14.3092],
         [14.1183],
         [15.9522],
         ...,
         [15.7736],
         [26.4018],
         [14.5789]],
        [[14.4945],
         [14.4206],
         [18.1621],
         ...,
         [18.0231],
         [34.7035],
         [15.1062]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9759, 0.9798, 1.1416,  ..., 1.1422, 1.8542, 1.0011],
        [0.9638, 0.9599, 0.9771,  ..., 0.9739, 1.1118, 0.9658],
        [0.9624, 0.9575, 0.9620,  ..., 0.9586, 1.0642, 0.9617],
        ...,
        [0.9606, 0.9546, 0.9445,  ..., 0.9410, 1.0133, 0.9568],
        [0.9652, 0.9621, 0.9919,  ..., 0.9890, 1.1618, 0.9696],
        [0.9682, 0.9670, 1.0278,  ..., 1.0256, 1.2969, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7752],
         [11.6766],
         [25.7934],
         ...,
         [26.6499],
         [30.5699],
         [11.4958]],
        [[10.8283],
         [10.8195],
         [23.5285],
         ...,
         [24.9083],
         [28.1658],
         [10.7785]],
        [[10.7165],
         [10.7179],
         [23.2623],
         ...,
         [24.7008],
         [27.8817],
         [10.6929]],
        ...,
        [[10.5793],
         [10.5931],
         [22.9361],
         ...,
         [24.4456],
         [27.5330],
         [10.5876]],
        [[10.9325],
         [10.9142],
         [23.7769],
         ...,
         [25.1014],
         [28.4307],
         [10.8582]],
        [[11.1661],
         [11.1261],
         [24.3344],
         ...,
         [25.5329],
         [29.0241],
         [11.0360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0016, 1.0003, 1.1868,  ..., 1.1982, 1.2500, 0.9979],
        [0.9891, 0.9890, 1.1569,  ..., 1.1752, 1.2182, 0.9884],
        [0.9876, 0.9876, 1.1534,  ..., 1.1724, 1.2144, 0.9873],
        ...,
        [0.9858, 0.9860, 1.1491,  ..., 1.1690, 1.2098, 0.9859],
        [0.9905, 0.9902, 1.1602,  ..., 1.1777, 1.2217, 0.9895],
        [0.9935, 0.9930, 1.1676,  ..., 1.1834, 1.2295, 0.9918]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8772],
         [12.8052],
         [11.1171],
         ...,
         [10.8415],
         [54.6896],
         [12.8476]],
        [[ 7.8879],
         [ 7.9881],
         [ 8.6642],
         ...,
         [ 9.0063],
         [24.1120],
         [ 7.9281]],
        [[ 7.4235],
         [ 7.5348],
         [ 8.4009],
         ...,
         [ 8.8019],
         [21.7874],
         [ 7.4683]],
        ...,
        [[ 6.8850],
         [ 7.0078],
         [ 8.0852],
         ...,
         [ 8.5546],
         [19.2113],
         [ 6.9344]],
        [[ 8.3423],
         [ 8.4307],
         [ 8.9146],
         ...,
         [ 9.1992],
         [26.4778],
         [ 8.3778]],
        [[ 9.4400],
         [ 9.4962],
         [ 9.4930],
         ...,
         [ 9.6397],
         [32.5521],
         [ 9.4624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9862, 0.9846, 0.9484,  ..., 0.9425, 1.8828, 0.9855],
        [0.8792, 0.8813, 0.8958,  ..., 0.9032, 1.2271, 0.8801],
        [0.8692, 0.8716, 0.8902,  ..., 0.8988, 1.1773, 0.8702],
        ...,
        [0.8577, 0.8603, 0.8834,  ..., 0.8935, 1.1220, 0.8587],
        [0.8889, 0.8908, 0.9012,  ..., 0.9073, 1.2778, 0.8897],
        [0.9125, 0.9137, 0.9136,  ..., 0.9168, 1.4081, 0.9130]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8678],
         [14.8024],
         [25.2589],
         ...,
         [25.2417],
         [67.6588],
         [15.2731]],
        [[14.0861],
         [13.8987],
         [14.9891],
         ...,
         [14.8334],
         [23.1593],
         [13.7832]],
        [[13.9923],
         [13.7907],
         [14.0514],
         ...,
         [13.8887],
         [20.2810],
         [13.6092]],
        ...,
        [[13.8766],
         [13.6579],
         [12.9687],
         ...,
         [12.7994],
         [17.2009],
         [13.3962]],
        [[14.1734],
         [13.9991],
         [15.9103],
         ...,
         [15.7626],
         [26.1781],
         [13.9458]],
        [[14.3677],
         [14.2233],
         [18.1482],
         ...,
         [18.0241],
         [34.3050],
         [14.3115]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9737, 0.9726, 1.1427,  ..., 1.1424, 1.8323, 0.9803],
        [0.9610, 0.9579, 0.9757,  ..., 0.9731, 1.1086, 0.9561],
        [0.9595, 0.9562, 0.9604,  ..., 0.9578, 1.0618, 0.9532],
        ...,
        [0.9576, 0.9540, 0.9428,  ..., 0.9401, 1.0117, 0.9498],
        [0.9624, 0.9596, 0.9907,  ..., 0.9883, 1.1577, 0.9587],
        [0.9656, 0.9632, 1.0271,  ..., 1.0250, 1.2898, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6128],
         [11.7409],
         [25.4162],
         ...,
         [26.6132],
         [28.9754],
         [11.5420]],
        [[10.8116],
         [10.8256],
         [22.5669],
         ...,
         [24.8623],
         [26.9316],
         [10.7978]],
        [[10.7164],
         [10.7174],
         [22.2372],
         ...,
         [24.6538],
         [26.6888],
         [10.7090]],
        ...,
        [[10.5993],
         [10.5845],
         [21.8346],
         ...,
         [24.3973],
         [26.3905],
         [10.5999]],
        [[10.9003],
         [10.9265],
         [22.8756],
         ...,
         [25.0564],
         [27.1576],
         [10.8803]],
        [[11.0986],
         [11.1524],
         [23.5720],
         ...,
         [25.4902],
         [27.6633],
         [11.0648]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0002, 1.0019, 1.1826,  ..., 1.1984, 1.2296, 0.9993],
        [0.9896, 0.9898, 1.1450,  ..., 1.1753, 1.2026, 0.9894],
        [0.9883, 0.9884, 1.1406,  ..., 1.1725, 1.1994, 0.9882],
        ...,
        [0.9868, 0.9866, 1.1353,  ..., 1.1691, 1.1955, 0.9868],
        [0.9908, 0.9911, 1.1490,  ..., 1.1779, 1.2056, 0.9905],
        [0.9934, 0.9941, 1.1582,  ..., 1.1836, 1.2123, 0.9929]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8617],
         [12.8846],
         [10.5728],
         ...,
         [10.4108],
         [49.4341],
         [12.7870]],
        [[ 7.9087],
         [ 7.8781],
         [ 8.8358],
         ...,
         [ 8.9419],
         [23.6101],
         [ 8.0147]],
        [[ 7.4467],
         [ 7.4127],
         [ 8.6417],
         ...,
         [ 8.7751],
         [21.5462],
         [ 7.5644]],
        ...,
        [[ 6.9106],
         [ 6.8731],
         [ 8.4066],
         ...,
         [ 8.5724],
         [19.2336],
         [ 7.0405]],
        [[ 8.3607],
         [ 8.3338],
         [ 9.0189],
         ...,
         [ 9.0987],
         [25.6907],
         [ 8.4542]],
        [[ 9.4516],
         [ 9.4345],
         [ 9.4365],
         ...,
         [ 9.4544],
         [30.9536],
         [ 9.5113]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9845, 0.9850, 0.9354,  ..., 0.9319, 1.7687, 0.9829],
        [0.8783, 0.8776, 0.8982,  ..., 0.9004, 1.2150, 0.8805],
        [0.8684, 0.8676, 0.8940,  ..., 0.8969, 1.1707, 0.8709],
        ...,
        [0.8569, 0.8561, 0.8890,  ..., 0.8925, 1.1211, 0.8597],
        [0.8880, 0.8874, 0.9021,  ..., 0.9038, 1.2596, 0.8900],
        [0.9114, 0.9110, 0.9110,  ..., 0.9114, 1.3724, 0.9126]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7239],
         [14.6367],
         [25.2437],
         ...,
         [25.5672],
         [65.7663],
         [14.5954]],
        [[13.8338],
         [13.6863],
         [14.8459],
         ...,
         [14.7061],
         [22.9168],
         [13.5688]],
        [[13.7274],
         [13.5730],
         [13.9017],
         ...,
         [13.7330],
         [20.1130],
         [13.4468]],
        ...,
        [[13.5965],
         [13.4337],
         [12.8129],
         ...,
         [12.6143],
         [17.1052],
         [13.2970]],
        [[13.9328],
         [13.7917],
         [15.7745],
         ...,
         [15.6656],
         [25.8511],
         [13.6824]],
        [[14.1536],
         [14.0272],
         [18.0342],
         ...,
         [18.0103],
         [33.7245],
         [13.9364]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9673, 0.9659, 1.1385,  ..., 1.1437, 1.7975, 0.9653],
        [0.9529, 0.9505, 0.9693,  ..., 0.9671, 1.1006, 0.9486],
        [0.9511, 0.9486, 0.9540,  ..., 0.9512, 1.0550, 0.9466],
        ...,
        [0.9490, 0.9464, 0.9363,  ..., 0.9330, 1.0061, 0.9441],
        [0.9545, 0.9522, 0.9844,  ..., 0.9827, 1.1483, 0.9504],
        [0.9581, 0.9560, 1.0212,  ..., 1.0208, 1.2764, 0.9545]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6133],
         [11.7014],
         [25.4977],
         ...,
         [26.2317],
         [27.9460],
         [11.6396]],
        [[10.8117],
         [10.8220],
         [22.8204],
         ...,
         [24.3078],
         [25.6225],
         [10.8153]],
        [[10.7164],
         [10.7179],
         [22.5091],
         ...,
         [24.0796],
         [25.3486],
         [10.7174]],
        ...,
        [[10.5993],
         [10.5900],
         [22.1287],
         ...,
         [23.7995],
         [25.0128],
         [10.5971]],
        [[10.9004],
         [10.9191],
         [23.1115],
         ...,
         [24.5203],
         [25.8779],
         [10.9064]],
        [[11.0988],
         [11.1363],
         [23.7672],
         ...,
         [24.9959],
         [26.4506],
         [11.1104]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0005, 1.0016, 1.1840,  ..., 1.1937, 1.2163, 1.0008],
        [0.9899, 0.9900, 1.1486,  ..., 1.1682, 1.1856, 0.9899],
        [0.9886, 0.9887, 1.1445,  ..., 1.1652, 1.1820, 0.9886],
        ...,
        [0.9871, 0.9870, 1.1395,  ..., 1.1615, 1.1776, 0.9871],
        [0.9911, 0.9913, 1.1524,  ..., 1.1711, 1.1890, 0.9911],
        [0.9937, 0.9942, 1.1611,  ..., 1.1773, 1.1966, 0.9938]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8116],
         [12.8251],
         [10.4302],
         ...,
         [10.3421],
         [45.1077],
         [12.7633]],
        [[ 7.9789],
         [ 7.9595],
         [ 8.9107],
         ...,
         [ 8.8045],
         [23.0506],
         [ 8.0501]],
        [[ 7.5246],
         [ 7.5031],
         [ 8.7388],
         ...,
         [ 8.6308],
         [21.2124],
         [ 7.6037]],
        ...,
        [[ 6.9966],
         [ 6.9728],
         [ 8.5299],
         ...,
         [ 8.4199],
         [19.1334],
         [ 7.0839]],
        [[ 8.4226],
         [ 8.4055],
         [ 9.0725],
         ...,
         [ 8.9679],
         [24.8889],
         [ 8.4855]],
        [[ 9.4910],
         [ 9.4801],
         [ 9.4400],
         ...,
         [ 9.3394],
         [29.4806],
         [ 9.5314]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9851, 0.9854, 0.9341,  ..., 0.9322, 1.6777, 0.9841],
        [0.8815, 0.8811, 0.9015,  ..., 0.8992, 1.2047, 0.8830],
        [0.8718, 0.8713, 0.8978,  ..., 0.8955, 1.1653, 0.8735],
        ...,
        [0.8604, 0.8599, 0.8933,  ..., 0.8910, 1.1207, 0.8623],
        [0.8910, 0.8906, 0.9050,  ..., 0.9027, 1.2441, 0.8924],
        [0.9139, 0.9137, 0.9128,  ..., 0.9107, 1.3426, 0.9148]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7691],
         [14.8618],
         [25.2841],
         ...,
         [25.4802],
         [64.1056],
         [14.5973]],
        [[13.8846],
         [13.9193],
         [14.9222],
         ...,
         [14.6560],
         [22.7009],
         [13.6243]],
        [[13.7788],
         [13.8069],
         [13.9792],
         ...,
         [13.6862],
         [19.9633],
         [13.5085]],
        ...,
        [[13.6487],
         [13.6686],
         [12.8912],
         ...,
         [12.5712],
         [17.0200],
         [13.3660]],
        [[13.9829],
         [14.0239],
         [15.8491],
         ...,
         [15.6122],
         [25.5605],
         [13.7321]],
        [[14.2024],
         [14.2575],
         [18.1034],
         ...,
         [17.9489],
         [33.2102],
         [13.9731]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9676, 0.9691, 1.1386,  ..., 1.1418, 1.7700, 0.9648],
        [0.9532, 0.9537, 0.9701,  ..., 0.9657, 1.0966, 0.9489],
        [0.9515, 0.9519, 0.9547,  ..., 0.9499, 1.0520, 0.9471],
        ...,
        [0.9493, 0.9497, 0.9370,  ..., 0.9318, 1.0042, 0.9447],
        [0.9548, 0.9554, 0.9851,  ..., 0.9813, 1.1431, 0.9507],
        [0.9583, 0.9592, 1.0218,  ..., 1.0193, 1.2675, 0.9546]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6024],
         [11.7125],
         [25.5539],
         ...,
         [26.3061],
         [27.6355],
         [11.6865]],
        [[10.8100],
         [10.8231],
         [22.9614],
         ...,
         [24.4158],
         [25.0026],
         [10.8206]],
        [[10.7158],
         [10.7178],
         [22.6593],
         ...,
         [24.1914],
         [24.6946],
         [10.7179]],
        ...,
        [[10.5999],
         [10.5885],
         [22.2899],
         ...,
         [23.9158],
         [24.3176],
         [10.5919]],
        [[10.8978],
         [10.9212],
         [23.2438],
         ...,
         [24.6247],
         [25.2903],
         [10.9162]],
        [[11.0939],
         [11.1409],
         [23.8795],
         ...,
         [25.0922],
         [25.9370],
         [11.1302]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.0017, 1.1846,  ..., 1.1946, 1.2121, 1.0014],
        [0.9898, 0.9900, 1.1504,  ..., 1.1696, 1.1774, 0.9899],
        [0.9885, 0.9886, 1.1464,  ..., 1.1666, 1.1733, 0.9886],
        ...,
        [0.9870, 0.9869, 1.1415,  ..., 1.1630, 1.1683, 0.9869],
        [0.9909, 0.9913, 1.1541,  ..., 1.1724, 1.1812, 0.9912],
        [0.9935, 0.9942, 1.1625,  ..., 1.1785, 1.1897, 0.9940]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7971],
         [12.8567],
         [10.3110],
         ...,
         [10.3053],
         [43.0132],
         [12.8142]],
        [[ 7.9998],
         [ 7.9156],
         [ 9.0373],
         ...,
         [ 8.8180],
         [22.7155],
         [ 7.9751]],
        [[ 7.5479],
         [ 7.4543],
         [ 8.8910],
         ...,
         [ 8.6495],
         [20.9893],
         [ 7.5204]],
        ...,
        [[ 7.0222],
         [ 6.9190],
         [ 8.7127],
         ...,
         [ 8.4449],
         [19.0281],
         [ 6.9919]],
        [[ 8.4411],
         [ 8.3668],
         [ 9.1745],
         ...,
         [ 8.9765],
         [24.4350],
         [ 8.4193]],
        [[ 9.5029],
         [ 9.4554],
         [ 9.4847],
         ...,
         [ 9.3364],
         [28.7038],
         [ 9.4889]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9849, 0.9862, 0.9316,  ..., 0.9315, 1.6329, 0.9853],
        [0.8820, 0.8802, 0.9043,  ..., 0.8996, 1.1976, 0.8815],
        [0.8724, 0.8703, 0.9012,  ..., 0.8960, 1.1606, 0.8718],
        ...,
        [0.8611, 0.8589, 0.8973,  ..., 0.8916, 1.1185, 0.8604],
        [0.8915, 0.8899, 0.9072,  ..., 0.9030, 1.2345, 0.8910],
        [0.9143, 0.9133, 0.9139,  ..., 0.9107, 1.3260, 0.9140]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7717],
         [14.8603],
         [25.2396],
         ...,
         [25.4553],
         [63.2538],
         [14.6249]],
        [[13.8701],
         [13.8619],
         [14.9508],
         ...,
         [14.6809],
         [22.5891],
         [13.4831]],
        [[13.7624],
         [13.7431],
         [14.0124],
         ...,
         [13.7140],
         [19.8857],
         [13.3481]],
        ...,
        [[13.6298],
         [13.5970],
         [12.9291],
         ...,
         [12.6019],
         [16.9759],
         [13.1824]],
        [[13.9703],
         [13.9725],
         [15.8728],
         ...,
         [15.6340],
         [25.4101],
         [13.6090]],
        [[14.1939],
         [14.2198],
         [18.1137],
         ...,
         [17.9618],
         [32.9445],
         [13.8908]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9682, 0.9696, 1.1384,  ..., 1.1420, 1.7567, 0.9658],
        [0.9535, 0.9534, 0.9711,  ..., 0.9667, 1.0953, 0.9472],
        [0.9518, 0.9515, 0.9558,  ..., 0.9510, 1.0514, 0.9450],
        ...,
        [0.9496, 0.9491, 0.9382,  ..., 0.9329, 1.0040, 0.9423],
        [0.9552, 0.9552, 0.9861,  ..., 0.9822, 1.1412, 0.9493],
        [0.9588, 0.9592, 1.0225,  ..., 1.0201, 1.2638, 0.9539]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6056],
         [11.7104],
         [25.8150],
         ...,
         [26.3195],
         [27.0771],
         [11.7770]],
        [[10.8105],
         [10.8229],
         [23.5562],
         ...,
         [24.4321],
         [23.4024],
         [10.8284]],
        [[10.7160],
         [10.7178],
         [23.2907],
         ...,
         [24.2081],
         [22.9837],
         [10.7165]],
        ...,
        [[10.5998],
         [10.5888],
         [22.9653],
         ...,
         [23.9330],
         [22.4744],
         [10.5791]],
        [[10.8986],
         [10.9208],
         [23.8040],
         ...,
         [24.6408],
         [23.7958],
         [10.9328]],
        [[11.0954],
         [11.1401],
         [24.3601],
         ...,
         [25.1076],
         [24.6873],
         [11.1668]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9998, 1.0012, 1.1876,  ..., 1.1943, 1.2043, 1.0021],
        [0.9893, 0.9895, 1.1578,  ..., 1.1693, 1.1557, 0.9896],
        [0.9881, 0.9881, 1.1543,  ..., 1.1664, 1.1502, 0.9881],
        ...,
        [0.9865, 0.9864, 1.1500,  ..., 1.1627, 1.1435, 0.9863],
        [0.9905, 0.9908, 1.1610,  ..., 1.1721, 1.1609, 0.9909],
        [0.9931, 0.9937, 1.1684,  ..., 1.1783, 1.1727, 0.9940]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8019],
         [12.9107],
         [10.1457],
         ...,
         [10.2354],
         [38.0316],
         [12.8486]],
        [[ 7.9928],
         [ 7.8444],
         [ 9.2255],
         ...,
         [ 8.8179],
         [21.6822],
         [ 7.9267]],
        [[ 7.5401],
         [ 7.3752],
         [ 9.1175],
         ...,
         [ 8.6567],
         [20.2252],
         [ 7.4667]],
        ...,
        [[ 7.0137],
         [ 6.8316],
         [ 8.9853],
         ...,
         [ 8.4606],
         [18.5523],
         [ 6.9326]],
        [[ 8.4349],
         [ 8.3040],
         [ 9.3263],
         ...,
         [ 8.9694],
         [23.1203],
         [ 8.3766]],
        [[ 9.4989],
         [ 9.4159],
         [ 9.5526],
         ...,
         [ 9.3130],
         [26.6403],
         [ 9.4616]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9828, 0.9851, 0.9258,  ..., 0.9277, 1.5238, 0.9838],
        [0.8796, 0.8764, 0.9061,  ..., 0.8973, 1.1732, 0.8782],
        [0.8699, 0.8664, 0.9037,  ..., 0.8939, 1.1419, 0.8683],
        ...,
        [0.8586, 0.8547, 0.9009,  ..., 0.8897, 1.1061, 0.8569],
        [0.8891, 0.8863, 0.9082,  ..., 0.9006, 1.2040, 0.8879],
        [0.9119, 0.9101, 0.9131,  ..., 0.9079, 1.2795, 0.9111]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7841],
         [14.8306],
         [25.1412],
         ...,
         [25.3377],
         [60.9975],
         [14.7917]],
        [[13.8360],
         [13.8244],
         [15.0375],
         ...,
         [14.7438],
         [22.2892],
         [13.5206]],
        [[13.7229],
         [13.7046],
         [14.1106],
         ...,
         [13.7879],
         [19.6776],
         [13.3710]],
        ...,
        [[13.5839],
         [13.5575],
         [13.0391],
         ...,
         [12.6872],
         [16.8576],
         [13.1877]],
        [[13.9412],
         [13.9358],
         [15.9472],
         ...,
         [15.6850],
         [25.0071],
         [13.6601]],
        [[14.1762],
         [14.1849],
         [18.1542],
         ...,
         [17.9800],
         [32.2348],
         [13.9732]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9702, 0.9709, 1.1386,  ..., 1.1418, 1.7218, 0.9703],
        [0.9547, 0.9545, 0.9743,  ..., 0.9695, 1.0922, 0.9496],
        [0.9529, 0.9526, 0.9592,  ..., 0.9540, 1.0498, 0.9472],
        ...,
        [0.9506, 0.9502, 0.9418,  ..., 0.9361, 1.0039, 0.9442],
        [0.9565, 0.9564, 0.9891,  ..., 0.9848, 1.1364, 0.9519],
        [0.9603, 0.9604, 1.0250,  ..., 1.0221, 1.2540, 0.9570]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6085],
         [11.6824],
         [26.0855],
         ...,
         [26.3386],
         [26.5036],
         [11.9318]],
        [[10.8110],
         [10.8201],
         [24.0685],
         ...,
         [24.4598],
         [21.0929],
         [10.8382]],
        [[10.7161],
         [10.7179],
         [23.8299],
         ...,
         [24.2367],
         [20.5051],
         [10.7100]],
        ...,
        [[10.5996],
         [10.5924],
         [23.5371],
         ...,
         [23.9627],
         [19.7981],
         [10.5529]],
        [[10.8993],
         [10.9154],
         [24.2909],
         ...,
         [24.6675],
         [21.6506],
         [10.9579]],
        [[11.0967],
         [11.1285],
         [24.7889],
         ...,
         [25.1322],
         [22.9340],
         [11.2268]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9987, 0.9997, 1.1900,  ..., 1.1933, 1.1955, 1.0030],
        [0.9881, 0.9883, 1.1633,  ..., 1.1685, 1.1240, 0.9885],
        [0.9869, 0.9869, 1.1602,  ..., 1.1656, 1.1163, 0.9868],
        ...,
        [0.9853, 0.9853, 1.1563,  ..., 1.1619, 1.1069, 0.9847],
        [0.9893, 0.9895, 1.1663,  ..., 1.1713, 1.1314, 0.9901],
        [0.9919, 0.9923, 1.1729,  ..., 1.1774, 1.1484, 0.9936]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7896],
         [12.9354],
         [10.0423],
         ...,
         [10.1716],
         [31.8442],
         [12.8929]],
        [[ 8.0108],
         [ 7.8135],
         [ 9.3563],
         ...,
         [ 8.8221],
         [19.7202],
         [ 7.8673]],
        [[ 7.5601],
         [ 7.3408],
         [ 9.2747],
         ...,
         [ 8.6680],
         [18.5845],
         [ 7.4006]],
        ...,
        [[ 7.0357],
         [ 6.7936],
         [ 9.1744],
         ...,
         [ 8.4804],
         [17.2653],
         [ 6.8597]],
        [[ 8.4508],
         [ 8.2769],
         [ 9.4323],
         ...,
         [ 8.9667],
         [20.8304],
         [ 8.3242]],
        [[ 9.5091],
         [ 9.3990],
         [ 9.6021],
         ...,
         [ 9.2945],
         [23.5062],
         [ 9.4285]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9812, 0.9844, 0.9223,  ..., 0.9251, 1.3898, 0.9834],
        [0.8788, 0.8745, 0.9076,  ..., 0.8962, 1.1299, 0.8757],
        [0.8691, 0.8644, 0.9059,  ..., 0.8928, 1.1055, 0.8657],
        ...,
        [0.8578, 0.8527, 0.9037,  ..., 0.8888, 1.0772, 0.8541],
        [0.8882, 0.8845, 0.9092,  ..., 0.8993, 1.1537, 0.8855],
        [0.9109, 0.9085, 0.9129,  ..., 0.9063, 1.2110, 0.9092]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8276],
         [14.8511],
         [25.0878],
         ...,
         [25.1456],
         [57.5060],
         [15.1162]],
        [[13.8253],
         [13.9044],
         [15.0948],
         ...,
         [14.8445],
         [21.8144],
         [13.5440]],
        [[13.7060],
         [13.7915],
         [14.1747],
         ...,
         [13.9069],
         [19.3478],
         [13.3611]],
        ...,
        [[13.5594],
         [13.6527],
         [13.1103],
         ...,
         [12.8251],
         [16.6706],
         [13.1376]],
        [[13.9363],
         [14.0095],
         [15.9971],
         ...,
         [15.7661],
         [24.3699],
         [13.7151]],
        [[14.1845],
         [14.2442],
         [18.1838],
         ...,
         [18.0074],
         [31.1186],
         [14.1002]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9738, 0.9741, 1.1406,  ..., 1.1416, 1.6679, 0.9784],
        [0.9574, 0.9587, 0.9781,  ..., 0.9740, 1.0874, 0.9529],
        [0.9555, 0.9569, 0.9631,  ..., 0.9588, 1.0473, 0.9499],
        ...,
        [0.9531, 0.9546, 0.9458,  ..., 0.9412, 1.0037, 0.9463],
        [0.9593, 0.9604, 0.9928,  ..., 0.9890, 1.1290, 0.9557],
        [0.9633, 0.9643, 1.0283,  ..., 1.0255, 1.2387, 0.9619]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6824],
         [11.5690],
         [27.9516],
         ...,
         [26.3766],
         [23.5595],
         [12.4192]],
        [[10.8201],
         [10.8041],
         [26.2446],
         ...,
         [24.5136],
         [13.7764],
         [10.8593]],
        [[10.7179],
         [10.7130],
         [26.0407],
         ...,
         [24.2924],
         [12.8911],
         [10.6804]],
        ...,
        [[10.5924],
         [10.6010],
         [25.7898],
         ...,
         [24.0205],
         [11.8710],
         [10.4623]],
        [[10.9154],
         [10.8889],
         [26.4343],
         ...,
         [24.7197],
         [14.6477],
         [11.0272]],
        [[11.1285],
         [11.0783],
         [26.8577],
         ...,
         [25.1806],
         [16.7702],
         [11.4068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9837, 1.2002,  ..., 1.1794, 1.1421, 0.9949],
        [0.9738, 0.9736, 1.1776,  ..., 1.1547, 1.0129, 0.9743],
        [0.9724, 0.9724, 1.1749,  ..., 1.1518, 1.0012, 0.9719],
        ...,
        [0.9708, 0.9709, 1.1716,  ..., 1.1482, 0.9877, 0.9691],
        [0.9750, 0.9747, 1.1801,  ..., 1.1575, 1.0244, 0.9765],
        [0.9779, 0.9772, 1.1857,  ..., 1.1636, 1.0524, 0.9815]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8088],
         [12.9998],
         [11.9127],
         ...,
         [10.1221],
         [12.0649],
         [12.9573]],
        [[ 7.9829],
         [ 7.7388],
         [ 9.4684],
         ...,
         [ 8.9084],
         [11.2342],
         [ 7.7871]],
        [[ 7.5291],
         [ 7.2575],
         [ 9.2030],
         ...,
         [ 8.7687],
         [11.1354],
         [ 7.3114]],
        ...,
        [[ 7.0015],
         [ 6.7016],
         [ 8.8840],
         ...,
         [ 8.5983],
         [11.0140],
         [ 6.7612]],
        [[ 8.4261],
         [ 8.2114],
         [ 9.7202],
         ...,
         [ 9.0394],
         [11.3261],
         [ 8.2537]],
        [[ 9.4933],
         [ 9.3590],
         [10.2998],
         ...,
         [ 9.3353],
         [11.5317],
         [ 9.3847]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9800, 0.9841, 0.9608,  ..., 0.9224, 0.9641, 0.9832],
        [0.8765, 0.8713, 0.9084,  ..., 0.8964, 0.9463, 0.8723],
        [0.8668, 0.8610, 0.9027,  ..., 0.8934, 0.9441, 0.8621],
        ...,
        [0.8555, 0.8491, 0.8959,  ..., 0.8897, 0.9415, 0.8503],
        [0.8860, 0.8814, 0.9138,  ..., 0.8992, 0.9482, 0.8823],
        [0.9089, 0.9060, 0.9262,  ..., 0.9055, 0.9526, 0.9066]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0703],
         [14.9890],
         [24.9855],
         ...,
         [24.1786],
         [43.4488],
         [16.3897]],
        [[13.8388],
         [14.2096],
         [15.2325],
         ...,
         [15.4192],
         [19.7494],
         [14.0738]],
        [[13.6936],
         [14.1160],
         [14.3274],
         ...,
         [14.5840],
         [17.9129],
         [13.8109]],
        ...,
        [[13.5154],
         [14.0007],
         [13.2784],
         ...,
         [13.6100],
         [15.8691],
         [13.4914]],
        [[13.9743],
         [14.2966],
         [16.1189],
         ...,
         [16.2326],
         [21.6116],
         [14.3210]],
        [[14.2780],
         [14.4904],
         [18.2614],
         ...,
         [18.1828],
         [26.3660],
         [14.8819]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9693, 0.9679, 1.1305,  ..., 1.1174, 1.4308, 0.9907],
        [0.9492, 0.9553, 0.9719,  ..., 0.9749, 1.0454, 0.9531],
        [0.9469, 0.9537, 0.9572,  ..., 0.9614, 1.0155, 0.9488],
        ...,
        [0.9440, 0.9519, 0.9401,  ..., 0.9455, 0.9823, 0.9436],
        [0.9514, 0.9567, 0.9863,  ..., 0.9882, 1.0757, 0.9571],
        [0.9564, 0.9598, 1.0212,  ..., 1.0199, 1.1530, 0.9662]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7473],
         [11.5881],
         [28.3352],
         ...,
         [26.0003],
         [22.9085],
         [12.0693]],
        [[10.8261],
         [10.8076],
         [26.5862],
         ...,
         [23.9269],
         [13.2931],
         [10.8449]],
        [[10.7172],
         [10.7148],
         [26.3773],
         ...,
         [23.6820],
         [12.4270],
         [10.7023]],
        ...,
        [[10.5836],
         [10.6006],
         [26.1204],
         ...,
         [23.3815],
         [11.4301],
         [10.5278]],
        [[10.9276],
         [10.8941],
         [26.7805],
         ...,
         [24.1552],
         [14.1462],
         [10.9783]],
        [[11.1550],
         [11.0874],
         [27.2142],
         ...,
         [24.6668],
         [16.2275],
         [11.2785]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9812, 0.9791, 1.2004,  ..., 1.1695, 1.1287, 0.9854],
        [0.9690, 0.9688, 1.1773,  ..., 1.1421, 1.0016, 0.9693],
        [0.9676, 0.9675, 1.1745,  ..., 1.1389, 0.9902, 0.9674],
        ...,
        [0.9658, 0.9660, 1.1711,  ..., 1.1349, 0.9770, 0.9651],
        [0.9704, 0.9699, 1.1799,  ..., 1.1452, 1.0129, 0.9710],
        [0.9734, 0.9725, 1.1856,  ..., 1.1519, 1.0404, 0.9750]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8255],
         [12.8964],
         [10.7624],
         ...,
         [10.0855],
         [11.9236],
         [12.9360]],
        [[ 7.9590],
         [ 7.8627],
         [ 9.3124],
         ...,
         [ 8.8905],
         [ 9.8568],
         [ 7.8127]],
        [[ 7.5025],
         [ 7.3956],
         [ 9.1470],
         ...,
         [ 8.7528],
         [ 9.6273],
         [ 7.3400]],
        ...,
        [[ 6.9722],
         [ 6.8542],
         [ 8.9459],
         ...,
         [ 8.5848],
         [ 9.3498],
         [ 6.7927]],
        [[ 8.4050],
         [ 8.3202],
         [ 9.4677],
         ...,
         [ 9.0196],
         [10.0736],
         [ 8.2762]],
        [[ 9.4798],
         [ 9.4260],
         [ 9.8196],
         ...,
         [ 9.3111],
         [10.5690],
         [ 9.3986]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 0.9842, 0.9385,  ..., 0.9240, 0.9634, 0.9851],
        [0.8784, 0.8763, 0.9074,  ..., 0.8983, 0.9191, 0.8752],
        [0.8686, 0.8663, 0.9038,  ..., 0.8954, 0.9141, 0.8651],
        ...,
        [0.8572, 0.8547, 0.8995,  ..., 0.8918, 0.9082, 0.8533],
        [0.8879, 0.8861, 0.9107,  ..., 0.9011, 0.9237, 0.8852],
        [0.9110, 0.9098, 0.9183,  ..., 0.9074, 0.9343, 0.9092]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0843],
         [15.0589],
         [25.1516],
         ...,
         [24.1832],
         [39.4204],
         [15.5098]],
        [[14.0933],
         [14.0081],
         [15.1465],
         ...,
         [15.3612],
         [19.4476],
         [14.2056]],
        [[13.9752],
         [13.8832],
         [14.2249],
         ...,
         [14.5220],
         [17.8189],
         [14.0520]],
        ...,
        [[13.8300],
         [13.7297],
         [13.1585],
         ...,
         [13.5439],
         [15.9858],
         [13.8637]],
        [[14.2031],
         [14.1243],
         [16.0504],
         ...,
         [16.1789],
         [21.0831],
         [14.3489]],
        [[14.4487],
         [14.3844],
         [18.2403],
         ...,
         [18.1406],
         [25.1954],
         [14.6703]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9713, 0.9709, 1.1350,  ..., 1.1193, 1.3671, 0.9782],
        [0.9552, 0.9538, 0.9723,  ..., 0.9758, 1.0423, 0.9570],
        [0.9533, 0.9518, 0.9573,  ..., 0.9621, 1.0158, 0.9545],
        ...,
        [0.9509, 0.9493, 0.9400,  ..., 0.9462, 0.9860, 0.9514],
        [0.9570, 0.9557, 0.9870,  ..., 0.9891, 1.0689, 0.9593],
        [0.9610, 0.9599, 1.0226,  ..., 1.0210, 1.1357, 0.9646]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7321],
         [11.5719],
         [28.7878],
         ...,
         [26.1150],
         [22.2904],
         [12.3375]],
        [[10.8248],
         [10.8047],
         [26.9791],
         ...,
         [24.1196],
         [12.5643],
         [10.8561]],
        [[10.7175],
         [10.7133],
         [26.7633],
         ...,
         [23.8835],
         [11.7036],
         [10.6856]],
        ...,
        [[10.5858],
         [10.6009],
         [26.4977],
         ...,
         [23.5936],
         [10.7168],
         [10.4776]],
        [[10.9249],
         [10.8897],
         [27.1799],
         ...,
         [24.3397],
         [13.4151],
         [11.0160]],
        [[11.1489],
         [11.0798],
         [27.6284],
         ...,
         [24.8325],
         [15.5019],
         [11.3771]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9723, 0.9702, 1.1977,  ..., 1.1624, 1.1118, 0.9803],
        [0.9603, 0.9600, 1.1738,  ..., 1.1360, 0.9833, 0.9607],
        [0.9589, 0.9588, 1.1709,  ..., 1.1329, 0.9719, 0.9585],
        ...,
        [0.9572, 0.9574, 1.1674,  ..., 1.1291, 0.9589, 0.9557],
        [0.9616, 0.9612, 1.1765,  ..., 1.1389, 0.9945, 0.9628],
        [0.9646, 0.9637, 1.1824,  ..., 1.1454, 1.0221, 0.9676]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7995],
         [12.9912],
         [11.5956],
         ...,
         [10.0896],
         [12.1616],
         [13.0044]],
        [[ 7.9963],
         [ 7.7483],
         [ 9.4169],
         ...,
         [ 8.8982],
         [ 9.1913],
         [ 7.7338]],
        [[ 7.5440],
         [ 7.2682],
         [ 9.1774],
         ...,
         [ 8.7609],
         [ 8.8782],
         [ 7.2519]],
        ...,
        [[ 7.0179],
         [ 6.7134],
         [ 8.8885],
         ...,
         [ 8.5933],
         [ 8.5043],
         [ 6.6954]],
        [[ 8.4380],
         [ 8.2198],
         [ 9.6435],
         ...,
         [ 9.0269],
         [ 9.4903],
         [ 8.2071]],
        [[ 9.5009],
         [ 9.3640],
         [10.1632],
         ...,
         [ 9.3176],
         [10.1847],
         [ 9.3563]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9797, 0.9838, 0.9538,  ..., 0.9216, 0.9660, 0.9841],
        [0.8767, 0.8713, 0.9071,  ..., 0.8960, 0.9023, 0.8710],
        [0.8670, 0.8611, 0.9020,  ..., 0.8931, 0.8956, 0.8607],
        ...,
        [0.8557, 0.8492, 0.8958,  ..., 0.8895, 0.8876, 0.8488],
        [0.8861, 0.8815, 0.9120,  ..., 0.8988, 0.9087, 0.8812],
        [0.9089, 0.9060, 0.9231,  ..., 0.9050, 0.9236, 0.9058]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1320],
         [15.0177],
         [25.0684],
         ...,
         [23.9997],
         [38.5895],
         [16.1235]],
        [[14.0429],
         [14.0274],
         [15.2305],
         ...,
         [15.4807],
         [19.2045],
         [14.0943]],
        [[13.9136],
         [13.9095],
         [14.3194],
         ...,
         [14.6629],
         [17.6152],
         [13.8615]],
        ...,
        [[13.7548],
         [13.7644],
         [13.2640],
         ...,
         [13.7077],
         [15.8242],
         [13.5780]],
        [[14.1633],
         [14.1372],
         [16.1230],
         ...,
         [16.2762],
         [20.7989],
         [14.3126]],
        [[14.4326],
         [14.3825],
         [18.2820],
         ...,
         [18.1792],
         [24.8011],
         [14.8065]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9700, 0.9681, 1.1316,  ..., 1.1142, 1.3515, 0.9861],
        [0.9522, 0.9520, 0.9716,  ..., 0.9756, 1.0362, 0.9531],
        [0.9501, 0.9501, 0.9567,  ..., 0.9623, 1.0103, 0.9493],
        ...,
        [0.9476, 0.9477, 0.9396,  ..., 0.9468, 0.9812, 0.9447],
        [0.9542, 0.9538, 0.9861,  ..., 0.9886, 1.0621, 0.9566],
        [0.9586, 0.9578, 1.0212,  ..., 1.0195, 1.1272, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7303],
         [11.5701],
         [28.8439],
         ...,
         [26.1295],
         [22.2177],
         [12.3712]],
        [[10.8247],
         [10.8043],
         [27.0270],
         ...,
         [24.1430],
         [12.4824],
         [10.8574]],
        [[10.7175],
         [10.7131],
         [26.8102],
         ...,
         [23.9078],
         [11.6226],
         [10.6834]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5435],
         ...,
         [23.6191],
         [10.6372],
         [10.4713]],
        [[10.9245],
         [10.8892],
         [27.2287],
         ...,
         [24.3621],
         [13.3326],
         [11.0206]],
        [[11.1481],
         [11.0789],
         [27.6792],
         ...,
         [24.8528],
         [15.4193],
         [11.3894]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9713, 0.9692, 1.1975,  ..., 1.1616, 1.1099, 0.9798],
        [0.9594, 0.9591, 1.1735,  ..., 1.1354, 0.9813, 0.9598],
        [0.9579, 0.9579, 1.1706,  ..., 1.1323, 0.9699, 0.9575],
        ...,
        [0.9562, 0.9564, 1.1671,  ..., 1.1284, 0.9569, 0.9547],
        [0.9607, 0.9602, 1.1761,  ..., 1.1383, 0.9925, 0.9619],
        [0.9636, 0.9627, 1.1821,  ..., 1.1447, 1.0201, 0.9668]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7964],
         [13.0025],
         [11.7033],
         ...,
         [10.0940],
         [12.1926],
         [13.0126]],
        [[ 8.0009],
         [ 7.7359],
         [ 9.4290],
         ...,
         [ 8.8999],
         [ 9.1190],
         [ 7.7250]],
        [[ 7.5491],
         [ 7.2542],
         [ 9.1802],
         ...,
         [ 8.7623],
         [ 8.7970],
         [ 7.2421]],
        ...,
        [[ 7.0236],
         [ 6.6980],
         [ 8.8804],
         ...,
         [ 8.5944],
         [ 8.4130],
         [ 6.6845]],
        [[ 8.4421],
         [ 8.2089],
         [ 9.6648],
         ...,
         [ 9.0289],
         [ 9.4268],
         [ 8.1994]],
        [[ 9.5035],
         [ 9.3574],
         [10.2061],
         ...,
         [ 9.3202],
         [10.1433],
         [ 9.3517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9559,  ..., 0.9214, 0.9664, 0.9840],
        [0.8765, 0.8708, 0.9071,  ..., 0.8958, 0.9005, 0.8706],
        [0.8668, 0.8605, 0.9018,  ..., 0.8928, 0.8936, 0.8602],
        ...,
        [0.8555, 0.8485, 0.8953,  ..., 0.8892, 0.8853, 0.8483],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9071, 0.8807],
        [0.9087, 0.9056, 0.9238,  ..., 0.9048, 0.9224, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1383],
         [15.0130],
         [25.0582],
         ...,
         [23.9774],
         [38.4928],
         [16.2067]],
        [[14.0368],
         [14.0297],
         [15.2408],
         ...,
         [15.4954],
         [19.1758],
         [14.0810]],
        [[13.9061],
         [13.9126],
         [14.3310],
         ...,
         [14.6802],
         [17.5911],
         [13.8380]],
        ...,
        [[13.7456],
         [13.7685],
         [13.2769],
         ...,
         [13.7278],
         [15.8050],
         [13.5423]],
        [[14.1585],
         [14.1388],
         [16.1319],
         ...,
         [16.2882],
         [20.7654],
         [14.3090]],
        [[14.4308],
         [14.3824],
         [18.2871],
         ...,
         [18.1839],
         [24.7548],
         [14.8255]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9678, 1.1312,  ..., 1.1136, 1.3497, 0.9872],
        [0.9519, 0.9518, 0.9715,  ..., 0.9756, 1.0355, 0.9526],
        [0.9498, 0.9499, 0.9567,  ..., 0.9624, 1.0097, 0.9487],
        ...,
        [0.9472, 0.9475, 0.9395,  ..., 0.9469, 0.9807, 0.9439],
        [0.9539, 0.9536, 0.9860,  ..., 0.9885, 1.0613, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0194, 1.1262, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8521],
         ...,
         [26.1316],
         [22.2072],
         [12.3761]],
        [[10.8247],
         [10.8042],
         [27.0339],
         ...,
         [24.1463],
         [12.4706],
         [10.8576]],
        [[10.7176],
         [10.7131],
         [26.8170],
         ...,
         [23.9113],
         [11.6109],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5501],
         ...,
         [23.6228],
         [10.6258],
         [10.4704]],
        [[10.9245],
         [10.8891],
         [27.2358],
         ...,
         [24.3654],
         [13.3208],
         [11.0213]],
        [[11.1480],
         [11.0787],
         [27.6865],
         ...,
         [24.8557],
         [15.4074],
         [11.3912]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9691, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9810, 0.9597],
        [0.9578, 0.9577, 1.1706,  ..., 1.1322, 0.9696, 0.9573],
        ...,
        [0.9561, 0.9563, 1.1670,  ..., 1.1284, 0.9566, 0.9545],
        [0.9605, 0.9601, 1.1761,  ..., 1.1382, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1821,  ..., 1.1446, 1.0198, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7959],
         [13.0042],
         [11.7190],
         ...,
         [10.0947],
         [12.1971],
         [13.0138]],
        [[ 8.0016],
         [ 7.7341],
         [ 9.4308],
         ...,
         [ 8.9001],
         [ 9.1087],
         [ 7.7237]],
        [[ 7.5498],
         [ 7.2523],
         [ 9.1806],
         ...,
         [ 8.7625],
         [ 8.7854],
         [ 7.2407]],
        ...,
        [[ 7.0244],
         [ 6.6957],
         [ 8.8792],
         ...,
         [ 8.5945],
         [ 8.4000],
         [ 6.6829]],
        [[ 8.4426],
         [ 8.2073],
         [ 9.6679],
         ...,
         [ 9.0292],
         [ 9.4178],
         [ 8.1983]],
        [[ 9.5038],
         [ 9.3565],
         [10.2123],
         ...,
         [ 9.3206],
         [10.1374],
         [ 9.3511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8933, 0.8601],
        ...,
        [0.8555, 0.8485, 0.8953,  ..., 0.8892, 0.8850, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9223, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1392],
         [15.0124],
         [25.0567],
         ...,
         [23.9742],
         [38.4789],
         [16.2189]],
        [[14.0359],
         [14.0301],
         [15.2423],
         ...,
         [15.4975],
         [19.1716],
         [14.0790]],
        [[13.9050],
         [13.9130],
         [14.3326],
         ...,
         [14.6827],
         [17.5876],
         [13.8346]],
        ...,
        [[13.7443],
         [13.7691],
         [13.2788],
         ...,
         [13.7307],
         [15.8022],
         [13.5371]],
        [[14.1578],
         [14.1390],
         [16.1332],
         ...,
         [16.2899],
         [20.7605],
         [14.3086]],
        [[14.4306],
         [14.3824],
         [18.2878],
         ...,
         [18.1846],
         [24.7481],
         [14.8283]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9519, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9526],
        [0.9497, 0.9499, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8533],
         ...,
         [26.1319],
         [22.2056],
         [12.3769]],
        [[10.8246],
         [10.8042],
         [27.0349],
         ...,
         [24.1468],
         [12.4689],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8180],
         ...,
         [23.9119],
         [11.6092],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5511],
         ...,
         [23.6234],
         [10.6241],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2368],
         ...,
         [24.3659],
         [13.3190],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6876],
         ...,
         [24.8562],
         [15.4057],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1322, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1382, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7959],
         [13.0044],
         [11.7213],
         ...,
         [10.0948],
         [12.1977],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1072],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2520],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7837],
         [ 7.2405]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8791],
         ...,
         [ 8.5946],
         [ 8.3980],
         [ 6.6827]],
        [[ 8.4427],
         [ 8.2071],
         [ 9.6683],
         ...,
         [ 9.0292],
         [ 9.4164],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3564],
         [10.2132],
         ...,
         [ 9.3206],
         [10.1365],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8850, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1393],
         [15.0123],
         [25.0565],
         ...,
         [23.9737],
         [38.4769],
         [16.2207]],
        [[14.0358],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1710],
         [14.0788]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6831],
         [17.5870],
         [13.8341]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2790],
         ...,
         [13.7312],
         [15.8018],
         [13.5363]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2901],
         [20.7598],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7471],
         [14.8287]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8534],
         ...,
         [26.1319],
         [22.2054],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6239],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3188],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8562],
         [15.4054],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3978],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2133],
         ...,
         [ 9.3206],
         [10.1364],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0358],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4054],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7300],
         [11.5698],
         [28.8535],
         ...,
         [26.1319],
         [22.2053],
         [12.3770]],
        [[10.8246],
         [10.8042],
         [27.0351],
         ...,
         [24.1469],
         [12.4686],
         [10.8577]],
        [[10.7176],
         [10.7131],
         [26.8181],
         ...,
         [23.9119],
         [11.6089],
         [10.6831]],
        ...,
        [[10.5861],
         [10.6010],
         [26.5512],
         ...,
         [23.6234],
         [10.6238],
         [10.4702]],
        [[10.9245],
         [10.8891],
         [27.2370],
         ...,
         [24.3659],
         [13.3187],
         [11.0214]],
        [[11.1480],
         [11.0787],
         [27.6878],
         ...,
         [24.8563],
         [15.4053],
         [11.3915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9690, 1.1975,  ..., 1.1615, 1.1096, 0.9797],
        [0.9592, 0.9589, 1.1734,  ..., 1.1353, 0.9809, 0.9596],
        [0.9578, 0.9577, 1.1706,  ..., 1.1321, 0.9696, 0.9573],
        ...,
        [0.9560, 0.9562, 1.1670,  ..., 1.1283, 0.9565, 0.9545],
        [0.9605, 0.9600, 1.1761,  ..., 1.1381, 0.9922, 0.9618],
        [0.9635, 0.9626, 1.1820,  ..., 1.1446, 1.0197, 0.9667]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7958],
         [13.0044],
         [11.7217],
         ...,
         [10.0948],
         [12.1978],
         [13.0140]],
        [[ 8.0017],
         [ 7.7338],
         [ 9.4311],
         ...,
         [ 8.9002],
         [ 9.1069],
         [ 7.7235]],
        [[ 7.5499],
         [ 7.2519],
         [ 9.1807],
         ...,
         [ 8.7625],
         [ 8.7834],
         [ 7.2404]],
        ...,
        [[ 7.0245],
         [ 6.6954],
         [ 8.8790],
         ...,
         [ 8.5946],
         [ 8.3977],
         [ 6.6826]],
        [[ 8.4427],
         [ 8.2070],
         [ 9.6684],
         ...,
         [ 9.0292],
         [ 9.4162],
         [ 8.1981]],
        [[ 9.5039],
         [ 9.3563],
         [10.2134],
         ...,
         [ 9.3206],
         [10.1363],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9837, 0.9562,  ..., 0.9213, 0.9664, 0.9839],
        [0.8765, 0.8707, 0.9071,  ..., 0.8957, 0.9002, 0.8705],
        [0.8668, 0.8604, 0.9017,  ..., 0.8928, 0.8932, 0.8601],
        ...,
        [0.8555, 0.8484, 0.8953,  ..., 0.8892, 0.8849, 0.8482],
        [0.8859, 0.8809, 0.9122,  ..., 0.8985, 0.9068, 0.8807],
        [0.9087, 0.9055, 0.9239,  ..., 0.9047, 0.9222, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1394],
         [15.0122],
         [25.0565],
         ...,
         [23.9737],
         [38.4765],
         [16.2210]],
        [[14.0357],
         [14.0301],
         [15.2425],
         ...,
         [15.4979],
         [19.1709],
         [14.0787]],
        [[13.9049],
         [13.9131],
         [14.3329],
         ...,
         [14.6832],
         [17.5870],
         [13.8340]],
        ...,
        [[13.7441],
         [13.7692],
         [13.2791],
         ...,
         [13.7312],
         [15.8017],
         [13.5362]],
        [[14.1577],
         [14.1390],
         [16.1334],
         ...,
         [16.2902],
         [20.7597],
         [14.3085]],
        [[14.4305],
         [14.3824],
         [18.2880],
         ...,
         [18.1847],
         [24.7470],
         [14.8288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9698, 0.9677, 1.1311,  ..., 1.1135, 1.3494, 0.9874],
        [0.9518, 0.9518, 0.9715,  ..., 0.9756, 1.0354, 0.9525],
        [0.9497, 0.9498, 0.9567,  ..., 0.9624, 1.0096, 0.9486],
        ...,
        [0.9471, 0.9475, 0.9395,  ..., 0.9469, 0.9806, 0.9437],
        [0.9538, 0.9535, 0.9860,  ..., 0.9885, 1.0612, 0.9563],
        [0.9583, 0.9575, 1.0210,  ..., 1.0193, 1.1261, 0.9647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7265],
         [11.5697],
         [28.5874],
         ...,
         [26.1190],
         [22.1480],
         [12.2808]],
        [[10.8243],
         [10.8056],
         [26.8067],
         ...,
         [24.1261],
         [12.4656],
         [10.8539]],
        [[10.7176],
         [10.7146],
         [26.5941],
         ...,
         [23.8902],
         [11.6094],
         [10.6892]],
        ...,
        [[10.5866],
         [10.6027],
         [26.3326],
         ...,
         [23.6006],
         [10.6281],
         [10.4882]],
        [[10.9238],
         [10.8903],
         [27.0045],
         ...,
         [24.3459],
         [13.3119],
         [11.0082]],
        [[11.1466],
         [11.0796],
         [27.4460],
         ...,
         [24.8381],
         [15.3884],
         [11.3565]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9713, 0.9692, 1.1941,  ..., 1.1615, 1.1090, 0.9786],
        [0.9594, 0.9591, 1.1706,  ..., 1.1351, 0.9810, 0.9597],
        [0.9579, 0.9579, 1.1678,  ..., 1.1320, 0.9697, 0.9576],
        ...,
        [0.9562, 0.9564, 1.1643,  ..., 1.1282, 0.9568, 0.9549],
        [0.9607, 0.9602, 1.1732,  ..., 1.1381, 0.9922, 0.9618],
        [0.9636, 0.9627, 1.1790,  ..., 1.1446, 1.0197, 0.9664]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8082],
         [12.8854],
         [11.6574],
         ...,
         [10.0860],
         [12.2379],
         [12.9577]],
        [[ 7.9837],
         [ 7.8771],
         [ 9.4174],
         ...,
         [ 8.9009],
         [ 9.0169],
         [ 7.7867]],
        [[ 7.5300],
         [ 7.4116],
         [ 9.1719],
         ...,
         [ 8.7643],
         [ 8.6824],
         [ 7.3109]],
        ...,
        [[ 7.0025],
         [ 6.8718],
         [ 8.8761],
         ...,
         [ 8.5976],
         [ 8.2843],
         [ 6.7607]],
        [[ 8.4269],
         [ 8.3329],
         [ 9.6499],
         ...,
         [ 9.0290],
         [ 9.3372],
         [ 8.2533]],
        [[ 9.4937],
         [ 9.4340],
         [10.1834],
         ...,
         [ 9.3181],
         [10.0849],
         [ 9.3844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9815, 0.9832, 0.9568,  ..., 0.9231, 0.9693, 0.9847],
        [0.8781, 0.8758, 0.9088,  ..., 0.8977, 0.9002, 0.8738],
        [0.8683, 0.8658, 0.9035,  ..., 0.8948, 0.8930, 0.8636],
        ...,
        [0.8570, 0.8542, 0.8972,  ..., 0.8912, 0.8845, 0.8518],
        [0.8876, 0.8856, 0.9138,  ..., 0.9005, 0.9071, 0.8838],
        [0.9104, 0.9092, 0.9252,  ..., 0.9067, 0.9231, 0.9081]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1104],
         [15.1123],
         [25.1079],
         ...,
         [24.0369],
         [37.8794],
         [16.0935]],
        [[14.0153],
         [14.1953],
         [15.1918],
         ...,
         [15.4534],
         [19.1899],
         [14.1222]],
        [[13.8854],
         [14.0857],
         [14.2757],
         ...,
         [14.6311],
         [17.6407],
         [13.8956]],
        ...,
        [[13.7258],
         [13.9509],
         [13.2152],
         ...,
         [13.6709],
         [15.8905],
         [13.6194]],
        [[14.1364],
         [14.2972],
         [16.0897],
         ...,
         [16.2537],
         [20.7408],
         [14.3347]],
        [[14.4071],
         [14.5247],
         [18.2631],
         ...,
         [18.1692],
         [24.6210],
         [14.8149]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9701, 0.9701, 1.1327,  ..., 1.1152, 1.3404, 0.9860],
        [0.9522, 0.9552, 0.9714,  ..., 0.9756, 1.0364, 0.9540],
        [0.9501, 0.9534, 0.9565,  ..., 0.9623, 1.0112, 0.9503],
        ...,
        [0.9475, 0.9512, 0.9392,  ..., 0.9466, 0.9827, 0.9458],
        [0.9542, 0.9568, 0.9860,  ..., 0.9887, 1.0616, 0.9574],
        [0.9586, 0.9605, 1.0213,  ..., 1.0198, 1.1247, 0.9653]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7179],
         [11.5733],
         [28.2131],
         ...,
         [26.0999],
         [22.0502],
         [12.1846]],
        [[10.8236],
         [10.8049],
         [26.4777],
         ...,
         [24.0951],
         [12.4608],
         [10.8500]],
        [[10.7177],
         [10.7134],
         [26.2704],
         ...,
         [23.8579],
         [11.6108],
         [10.6953]],
        ...,
        [[10.5878],
         [10.6009],
         [26.0154],
         ...,
         [23.5667],
         [10.6360],
         [10.5063]],
        [[10.9222],
         [10.8901],
         [26.6705],
         ...,
         [24.3162],
         [13.3007],
         [10.9948]],
        [[11.1431],
         [11.0804],
         [27.1009],
         ...,
         [24.8113],
         [15.3597],
         [11.3212]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9715, 0.9696, 1.1895,  ..., 1.1615, 1.1080, 0.9776],
        [0.9596, 0.9594, 1.1665,  ..., 1.1350, 0.9813, 0.9600],
        [0.9582, 0.9582, 1.1638,  ..., 1.1319, 0.9701, 0.9580],
        ...,
        [0.9565, 0.9567, 1.1604,  ..., 1.1281, 0.9572, 0.9555],
        [0.9610, 0.9605, 1.1691,  ..., 1.1380, 0.9924, 0.9619],
        [0.9639, 0.9630, 1.1748,  ..., 1.1445, 1.0196, 0.9662]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8138],
         [12.8477],
         [11.5253],
         ...,
         [10.0747],
         [12.3055],
         [12.9435]],
        [[ 7.9757],
         [ 7.9280],
         [ 9.3971],
         ...,
         [ 8.9030],
         [ 8.8716],
         [ 7.8036]],
        [[ 7.5211],
         [ 7.4681],
         [ 9.1626],
         ...,
         [ 8.7677],
         [ 8.5194],
         [ 7.3298]],
        ...,
        [[ 6.9927],
         [ 6.9342],
         [ 8.8797],
         ...,
         [ 8.6027],
         [ 8.1017],
         [ 6.7815]],
        [[ 8.4198],
         [ 8.3777],
         [ 9.6190],
         ...,
         [ 9.0297],
         [ 9.2096],
         [ 8.2682]],
        [[ 9.4892],
         [ 9.4623],
         [10.1271],
         ...,
         [ 9.3157],
         [10.0018],
         [ 9.3936]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9822, 0.9829, 0.9545,  ..., 0.9234, 0.9713, 0.9850],
        [0.8784, 0.8774, 0.9089,  ..., 0.8983, 0.8976, 0.8747],
        [0.8687, 0.8675, 0.9039,  ..., 0.8954, 0.8901, 0.8646],
        ...,
        [0.8573, 0.8561, 0.8978,  ..., 0.8919, 0.8811, 0.8528],
        [0.8880, 0.8870, 0.9137,  ..., 0.9010, 0.9049, 0.8847],
        [0.9109, 0.9103, 0.9246,  ..., 0.9072, 0.9219, 0.9088]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0790],
         [15.1117],
         [25.1765],
         ...,
         [24.1390],
         [36.8739],
         [15.8595]],
        [[14.0084],
         [14.2144],
         [15.1230],
         ...,
         [15.3828],
         [19.2252],
         [14.0765]],
        [[13.8812],
         [14.1071],
         [14.1983],
         ...,
         [14.5483],
         [17.7361],
         [13.8702]],
        ...,
        [[13.7250],
         [13.9751],
         [13.1288],
         ...,
         [13.5752],
         [16.0472],
         [13.6184]],
        [[14.1268],
         [14.3142],
         [16.0301],
         ...,
         [16.1957],
         [20.7108],
         [14.2697]],
        [[14.3916],
         [14.5369],
         [18.2289],
         ...,
         [18.1447],
         [24.4078],
         [14.7054]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9707, 0.9712, 1.1349,  ..., 1.1180, 1.3252, 0.9834],
        [0.9533, 0.9566, 0.9714,  ..., 0.9756, 1.0381, 0.9544],
        [0.9512, 0.9549, 0.9563,  ..., 0.9620, 1.0139, 0.9510],
        ...,
        [0.9487, 0.9527, 0.9390,  ..., 0.9462, 0.9864, 0.9469],
        [0.9552, 0.9582, 0.9861,  ..., 0.9888, 1.0623, 0.9575],
        [0.9595, 0.9619, 1.0219,  ..., 1.0205, 1.1224, 0.9646]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6898],
         [11.5972],
         [27.1823],
         ...,
         [26.0428],
         [21.7119],
         [11.8945]],
        [[10.8209],
         [10.8092],
         [25.4853],
         ...,
         [24.0000],
         [12.4456],
         [10.8361]],
        [[10.7179],
         [10.7154],
         [25.2827],
         ...,
         [23.7586],
         [11.6172],
         [10.7118]],
        ...,
        [[10.5915],
         [10.6002],
         [25.0335],
         ...,
         [23.4622],
         [10.6651],
         [10.5595]],
        [[10.9169],
         [10.8965],
         [25.6737],
         ...,
         [24.2251],
         [13.2629],
         [10.9521]],
        [[11.1316],
         [11.0916],
         [26.0945],
         ...,
         [24.7294],
         [15.2612],
         [11.2126]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9722, 0.9709, 1.1769,  ..., 1.1619, 1.1046, 0.9749],
        [0.9607, 0.9605, 1.1545,  ..., 1.1349, 0.9822, 0.9609],
        [0.9593, 0.9593, 1.1518,  ..., 1.1317, 0.9712, 0.9592],
        ...,
        [0.9577, 0.9578, 1.1485,  ..., 1.1277, 0.9586, 0.9572],
        [0.9620, 0.9617, 1.1570,  ..., 1.1378, 0.9930, 0.9624],
        [0.9648, 0.9643, 1.1625,  ..., 1.1445, 1.0194, 0.9659]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8291],
         [12.7902],
         [11.0400],
         ...,
         [10.0670],
         [12.5359],
         [12.9027]],
        [[ 7.9539],
         [ 8.0100],
         [ 9.3306],
         ...,
         [ 8.9174],
         [ 8.4260],
         [ 7.8546]],
        [[ 7.4969],
         [ 7.5592],
         [ 9.1383],
         ...,
         [ 8.7845],
         [ 8.0216],
         [ 7.3865]],
        ...,
        [[ 6.9659],
         [ 7.0347],
         [ 8.9051],
         ...,
         [ 8.6224],
         [ 7.5466],
         [ 6.8442]],
        [[ 8.4006],
         [ 8.4501],
         [ 9.5117],
         ...,
         [ 9.0418],
         [ 8.8174],
         [ 8.3130]],
        [[ 9.4769],
         [ 9.5086],
         [ 9.9239],
         ...,
         [ 9.3226],
         [ 9.7466],
         [ 9.4215]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9841, 0.9833, 0.9457,  ..., 0.9249, 0.9778, 0.9857],
        [0.8796, 0.8808, 0.9091,  ..., 0.9002, 0.8897, 0.8774],
        [0.8698, 0.8711, 0.9050,  ..., 0.8974, 0.8810, 0.8674],
        ...,
        [0.8584, 0.8599, 0.9000,  ..., 0.8939, 0.8708, 0.8558],
        [0.8891, 0.8902, 0.9130,  ..., 0.9029, 0.8981, 0.8873],
        [0.9122, 0.9129, 0.9218,  ..., 0.9089, 0.9180, 0.9110]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9833],
         [15.0299],
         [25.3661],
         ...,
         [24.4753],
         [33.5210],
         [15.1604]],
        [[13.9899],
         [14.1634],
         [14.9277],
         ...,
         [15.1582],
         [19.3670],
         [13.9205]],
        [[13.8716],
         [14.0597],
         [13.9794],
         ...,
         [14.2853],
         [18.0955],
         [13.7742]],
        ...,
        [[13.7262],
         [13.9320],
         [12.8858],
         ...,
         [13.2715],
         [16.6327],
         [13.5948]],
        [[14.1000],
         [14.2598],
         [15.8602],
         ...,
         [16.0114],
         [20.6202],
         [14.0569]],
        [[14.3461],
         [14.4750],
         [18.1292],
         ...,
         [18.0678],
         [23.6798],
         [14.3627]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9724, 0.9731, 1.1412,  ..., 1.1267, 1.2739, 0.9752],
        [0.9562, 0.9590, 0.9714,  ..., 0.9752, 1.0437, 0.9551],
        [0.9543, 0.9573, 0.9560,  ..., 0.9610, 1.0230, 0.9527],
        ...,
        [0.9519, 0.9553, 0.9382,  ..., 0.9445, 0.9992, 0.9498],
        [0.9580, 0.9606, 0.9866,  ..., 0.9891, 1.0640, 0.9573],
        [0.9620, 0.9641, 1.0235,  ..., 1.0225, 1.1138, 0.9623]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7106],
         [11.5791],
         [27.9318],
         ...,
         [26.0852],
         [21.9634],
         [12.1075]],
        [[10.8229],
         [10.8060],
         [26.2221],
         ...,
         [24.0710],
         [12.4568],
         [10.8467]],
        [[10.7178],
         [10.7140],
         [26.0179],
         ...,
         [23.8327],
         [11.6123],
         [10.7000]],
        ...,
        [[10.5888],
         [10.6009],
         [25.7667],
         ...,
         [23.5402],
         [10.6433],
         [10.5207]],
        [[10.9209],
         [10.8917],
         [26.4121],
         ...,
         [24.2931],
         [13.2909],
         [10.9838]],
        [[11.1402],
         [11.0832],
         [26.8362],
         ...,
         [24.7904],
         [15.3344],
         [11.2927]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9716, 0.9699, 1.1860,  ..., 1.1616, 1.1071, 0.9769],
        [0.9599, 0.9597, 1.1634,  ..., 1.1350, 0.9815, 0.9602],
        [0.9585, 0.9585, 1.1607,  ..., 1.1318, 0.9703, 0.9583],
        ...,
        [0.9568, 0.9570, 1.1574,  ..., 1.1280, 0.9575, 0.9559],
        [0.9612, 0.9608, 1.1659,  ..., 1.1379, 0.9925, 0.9620],
        [0.9641, 0.9634, 1.1715,  ..., 1.1445, 1.0195, 0.9661]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8177],
         [12.8332],
         [11.3985],
         ...,
         [10.0684],
         [12.3648],
         [12.9332]],
        [[ 7.9701],
         [ 7.9481],
         [ 9.3805],
         ...,
         [ 8.9055],
         [ 8.7501],
         [ 7.8162]],
        [[ 7.5149],
         [ 7.4904],
         [ 9.1570],
         ...,
         [ 8.7712],
         [ 8.3834],
         [ 7.3438]],
        ...,
        [[ 6.9859],
         [ 6.9589],
         [ 8.8869],
         ...,
         [ 8.6074],
         [ 7.9497],
         [ 6.7970]],
        [[ 8.4149],
         [ 8.3955],
         [ 9.5918],
         ...,
         [ 9.0313],
         [ 9.1028],
         [ 8.2793]],
        [[ 9.4861],
         [ 9.4737],
         [10.0749],
         ...,
         [ 9.3152],
         [ 9.9323],
         [ 9.4004]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 0.9830, 0.9522,  ..., 0.9237, 0.9729, 0.9851],
        [0.8787, 0.8782, 0.9089,  ..., 0.8988, 0.8954, 0.8754],
        [0.8689, 0.8684, 0.9042,  ..., 0.8959, 0.8876, 0.8653],
        ...,
        [0.8576, 0.8570, 0.8984,  ..., 0.8924, 0.8783, 0.8535],
        [0.8882, 0.8878, 0.9135,  ..., 0.9015, 0.9030, 0.8853],
        [0.9112, 0.9109, 0.9238,  ..., 0.9075, 0.9208, 0.9094]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0539],
         [15.0903],
         [25.2260],
         ...,
         [24.2252],
         [35.9939],
         [15.6677]],
        [[14.0037],
         [14.2015],
         [15.0722],
         ...,
         [15.3243],
         [19.2593],
         [14.0372]],
        [[13.8790],
         [14.0952],
         [14.1413],
         ...,
         [14.4798],
         [17.8246],
         [13.8475]],
        ...,
        [[13.7256],
         [13.9643],
         [13.0653],
         ...,
         [13.4959],
         [16.1917],
         [13.6157]],
        [[14.1200],
         [14.3004],
         [15.9860],
         ...,
         [16.1477],
         [20.6861],
         [14.2146]],
        [[14.3798],
         [14.5210],
         [18.2032],
         ...,
         [18.1246],
         [24.2198],
         [14.6140]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9712, 0.9718, 1.1366,  ..., 1.1204, 1.3118, 0.9812],
        [0.9541, 0.9573, 0.9715,  ..., 0.9756, 1.0396, 0.9547],
        [0.9521, 0.9556, 0.9563,  ..., 0.9618, 1.0163, 0.9516],
        ...,
        [0.9496, 0.9535, 0.9388,  ..., 0.9458, 0.9897, 0.9478],
        [0.9560, 0.9589, 0.9863,  ..., 0.9890, 1.0628, 0.9575],
        [0.9602, 0.9625, 1.0224,  ..., 1.0211, 1.1203, 0.9640]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6431],
         [11.6576],
         [26.0652],
         ...,
         [25.9685],
         [21.0373],
         [11.5363]],
        [[10.8157],
         [10.8174],
         [24.0377],
         ...,
         [23.8708],
         [12.4228],
         [10.7962]],
        [[10.7175],
         [10.7177],
         [23.7980],
         ...,
         [23.6232],
         [11.6386],
         [10.7079]],
        ...,
        [[10.5968],
         [10.5953],
         [23.5037],
         ...,
         [23.3194],
         [10.7337],
         [10.5994]],
        [[10.9072],
         [10.9103],
         [24.2612],
         ...,
         [24.1017],
         [13.1936],
         [10.8783]],
        [[11.1119],
         [11.1181],
         [24.7618],
         ...,
         [24.6191],
         [15.0681],
         [11.0617]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9739, 0.9741, 1.1645,  ..., 1.1632, 1.0981, 0.9725],
        [0.9630, 0.9630, 1.1377,  ..., 1.1355, 0.9842, 0.9627],
        [0.9617, 0.9617, 1.1345,  ..., 1.1322, 0.9738, 0.9615],
        ...,
        [0.9601, 0.9601, 1.1306,  ..., 1.1282, 0.9619, 0.9601],
        [0.9642, 0.9642, 1.1407,  ..., 1.1386, 0.9944, 0.9638],
        [0.9669, 0.9670, 1.1473,  ..., 1.1454, 1.0192, 0.9662]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8481],
         [12.7497],
         [10.1470],
         ...,
         [10.1734],
         [12.9502],
         [12.8346]],
        [[ 7.9274],
         [ 8.0707],
         [ 9.2067],
         ...,
         [ 8.9740],
         [ 7.7956],
         [ 7.9462]],
        [[ 7.4675],
         [ 7.6265],
         [ 9.0966],
         ...,
         [ 8.8357],
         [ 7.3209],
         [ 7.4883]],
        ...,
        [[ 6.9335],
         [ 7.1091],
         [ 8.9616],
         ...,
         [ 8.6670],
         [ 6.7717],
         [ 6.9565]],
        [[ 8.3772],
         [ 8.5037],
         [ 9.3096],
         ...,
         [ 9.1036],
         [ 8.2612],
         [ 8.3937]],
        [[ 9.4620],
         [ 9.5431],
         [ 9.5408],
         ...,
         [ 9.3962],
         [ 9.3893],
         [ 9.4726]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 0.9805, 0.9247,  ..., 0.9253, 0.9848, 0.9824],
        [0.8771, 0.8802, 0.9046,  ..., 0.8996, 0.8743, 0.8775],
        [0.8673, 0.8707, 0.9022,  ..., 0.8966, 0.8641, 0.8677],
        ...,
        [0.8558, 0.8596, 0.8993,  ..., 0.8930, 0.8524, 0.8563],
        [0.8868, 0.8895, 0.9068,  ..., 0.9024, 0.8843, 0.8871],
        [0.9100, 0.9118, 0.9117,  ..., 0.9086, 0.9085, 0.9103]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8482],
         [14.8295],
         [25.5794],
         ...,
         [25.0590],
         [27.4971],
         [14.5934]],
        [[13.9677],
         [13.9590],
         [14.6841],
         ...,
         [14.8006],
         [19.7573],
         [13.5989]],
        [[13.8623],
         [13.8549],
         [13.7091],
         ...,
         [13.8666],
         [18.9652],
         [13.4806]],
        ...,
        [[13.7327],
         [13.7267],
         [12.5884],
         ...,
         [12.7889],
         [18.0260],
         [13.3352]],
        [[14.0656],
         [14.0559],
         [15.6457],
         ...,
         [15.7186],
         [20.5180],
         [13.7090]],
        [[14.2841],
         [14.2719],
         [17.9963],
         ...,
         [17.9509],
         [22.3017],
         [13.9553]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9689, 0.9686, 1.1434,  ..., 1.1350, 1.1746, 0.9648],
        [0.9546, 0.9544, 0.9662,  ..., 0.9681, 1.0487, 0.9486],
        [0.9529, 0.9527, 0.9504,  ..., 0.9529, 1.0359, 0.9467],
        ...,
        [0.9508, 0.9507, 0.9321,  ..., 0.9354, 1.0206, 0.9443],
        [0.9562, 0.9560, 0.9819,  ..., 0.9831, 1.0611, 0.9504],
        [0.9597, 0.9595, 1.0201,  ..., 1.0194, 1.0901, 0.9544]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6022],
         [11.7630],
         [25.6274],
         ...,
         [25.9907],
         [20.1396],
         [11.5276]],
        [[10.8100],
         [10.8274],
         [23.1659],
         ...,
         [23.9100],
         [12.4064],
         [10.7089]],
        [[10.7158],
         [10.7168],
         [22.8782],
         ...,
         [23.6643],
         [11.6842],
         [10.6117]],
        ...,
        [[10.6000],
         [10.5812],
         [22.5259],
         ...,
         [23.3628],
         [10.8461],
         [10.4923]],
        [[10.8977],
         [10.9304],
         [23.4348],
         ...,
         [24.1391],
         [13.1127],
         [10.7995]],
        [[11.0939],
         [11.1613],
         [24.0393],
         ...,
         [24.6524],
         [14.8168],
         [11.0020]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9769, 0.9791, 1.1623,  ..., 1.1671, 1.0898, 0.9760],
        [0.9665, 0.9667, 1.1298,  ..., 1.1396, 0.9876, 0.9651],
        [0.9652, 0.9652, 1.1260,  ..., 1.1364, 0.9780, 0.9639],
        ...,
        [0.9637, 0.9635, 1.1213,  ..., 1.1324, 0.9670, 0.9623],
        [0.9676, 0.9681, 1.1333,  ..., 1.1426, 0.9969, 0.9663],
        [0.9702, 0.9711, 1.1413,  ..., 1.1494, 1.0194, 0.9690]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8539],
         [12.8095],
         [10.1436],
         ...,
         [10.4343],
         [13.4684],
         [12.3988]],
        [[ 7.9194],
         [ 7.9819],
         [ 9.0235],
         ...,
         [ 9.0824],
         [ 7.4710],
         [ 8.6827]],
        [[ 7.4585],
         [ 7.5280],
         [ 8.8937],
         ...,
         [ 8.9278],
         [ 6.9454],
         [ 8.3081]],
        ...,
        [[ 6.9236],
         [ 7.0003],
         [ 8.7352],
         ...,
         [ 8.7395],
         [ 6.3441],
         [ 7.8655]],
        [[ 8.3701],
         [ 8.4253],
         [ 9.1449],
         ...,
         [ 9.2276],
         [ 7.9915],
         [ 9.0435]],
        [[ 9.4575],
         [ 9.4927],
         [ 9.4188],
         ...,
         [ 9.5562],
         [ 9.2720],
         [ 9.8937]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9714, 0.9704, 0.9132,  ..., 0.9195, 0.9845, 0.9616],
        [0.8656, 0.8669, 0.8892,  ..., 0.8905, 0.8559, 0.8819],
        [0.8557, 0.8572, 0.8864,  ..., 0.8872, 0.8447, 0.8739],
        ...,
        [0.8442, 0.8458, 0.8830,  ..., 0.8831, 0.8318, 0.8644],
        [0.8752, 0.8764, 0.8918,  ..., 0.8936, 0.8671, 0.8897],
        [0.8985, 0.8993, 0.8977,  ..., 0.9007, 0.8946, 0.9079]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7708],
         [14.5900],
         [25.5929],
         ...,
         [25.5704],
         [21.8143],
         [15.4258]],
        [[13.9557],
         [13.5601],
         [14.5932],
         ...,
         [14.5486],
         [20.4321],
         [13.9375]],
        [[13.8579],
         [13.4378],
         [13.6129],
         ...,
         [13.5676],
         [20.2672],
         [13.7635]],
        ...,
        [[13.7376],
         [13.2875],
         [12.4872],
         ...,
         [12.4415],
         [20.0644],
         [13.5507]],
        [[14.0465],
         [13.6741],
         [15.5609],
         ...,
         [15.5172],
         [20.5855],
         [14.1000]],
        [[14.2490],
         [13.9289],
         [17.9292],
         ...,
         [17.8887],
         [20.9282],
         [14.4655]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9651, 0.9622, 1.1412,  ..., 1.1408, 1.0797, 0.9758],
        [0.9519, 0.9455, 0.9623,  ..., 0.9615, 1.0572, 0.9516],
        [0.9503, 0.9435, 0.9463,  ..., 0.9456, 1.0545, 0.9488],
        ...,
        [0.9483, 0.9410, 0.9280,  ..., 0.9273, 1.0512, 0.9453],
        [0.9534, 0.9473, 0.9780,  ..., 0.9773, 1.0597, 0.9542],
        [0.9567, 0.9515, 1.0165,  ..., 1.0159, 1.0653, 0.9602]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5917],
         [11.7806],
         [25.5402],
         ...,
         [25.9932],
         [19.8496],
         [11.6045]],
        [[10.8083],
         [10.8287],
         [22.9313],
         ...,
         [23.9145],
         [12.4033],
         [10.6669]],
        [[10.7151],
         [10.7163],
         [22.6275],
         ...,
         [23.6690],
         [11.7020],
         [10.5562]],
        ...,
        [[10.6005],
         [10.5785],
         [22.2560],
         ...,
         [23.3678],
         [10.8863],
         [10.4204]],
        [[10.8951],
         [10.9335],
         [23.2155],
         ...,
         [24.1434],
         [13.0881],
         [10.7701]],
        [[11.0890],
         [11.1683],
         [23.8550],
         ...,
         [24.6563],
         [14.7359],
         [11.0014]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9781, 0.9806, 1.1624,  ..., 1.1684, 1.0872, 0.9782],
        [0.9677, 0.9680, 1.1279,  ..., 1.1409, 0.9888, 0.9658],
        [0.9665, 0.9665, 1.1239,  ..., 1.1377, 0.9795, 0.9644],
        ...,
        [0.9650, 0.9647, 1.1190,  ..., 1.1337, 0.9687, 0.9626],
        [0.9689, 0.9694, 1.1317,  ..., 1.1439, 0.9978, 0.9672],
        [0.9714, 0.9725, 1.1401,  ..., 1.1507, 1.0196, 0.9703]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8619],
         [12.7695],
         [10.3626],
         ...,
         [10.5279],
         [13.6777],
         [12.4840]],
        [[ 7.9085],
         [ 8.0407],
         [ 8.9567],
         ...,
         [ 9.1202],
         [ 7.4740],
         [ 8.5206]],
        [[ 7.4465],
         [ 7.5932],
         [ 8.7965],
         ...,
         [ 8.9596],
         [ 6.9352],
         [ 8.1271]],
        ...,
        [[ 6.9103],
         [ 7.0723],
         [ 8.6016],
         ...,
         [ 8.7641],
         [ 6.3203],
         [ 7.6639]],
        [[ 8.3605],
         [ 8.4772],
         [ 9.1072],
         ...,
         [ 9.2710],
         [ 8.0084],
         [ 8.9008]],
        [[ 9.4515],
         [ 9.5260],
         [ 9.4483],
         ...,
         [ 9.6128],
         [ 9.3269],
         [ 9.8008]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9704, 0.9684, 0.9168,  ..., 0.9203, 0.9879, 0.9623],
        [0.8642, 0.8670, 0.8866,  ..., 0.8901, 0.8548, 0.8773],
        [0.8543, 0.8574, 0.8832,  ..., 0.8867, 0.8433, 0.8688],
        ...,
        [0.8428, 0.8462, 0.8790,  ..., 0.8825, 0.8301, 0.8589],
        [0.8739, 0.8764, 0.8899,  ..., 0.8934, 0.8663, 0.8854],
        [0.8972, 0.8988, 0.8972,  ..., 0.9007, 0.8946, 0.9047]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7512],
         [14.5839],
         [25.5890],
         ...,
         [25.7172],
         [22.6861],
         [15.5732]],
        [[13.9389],
         [13.5691],
         [14.5709],
         ...,
         [14.4827],
         [20.3080],
         [13.5962]],
        [[13.8415],
         [13.4485],
         [13.5897],
         ...,
         [13.4890],
         [20.0315],
         [13.3696]],
        ...,
        [[13.7216],
         [13.3002],
         [12.4633],
         ...,
         [12.3499],
         [19.6935],
         [13.0936]],
        [[14.0294],
         [13.6814],
         [15.5395],
         ...,
         [15.4650],
         [20.5666],
         [13.8088]],
        [[14.2313],
         [13.9325],
         [17.9108],
         ...,
         [17.8747],
         [21.1491],
         [14.2897]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9629, 0.9602, 1.1392,  ..., 1.1413, 1.0920, 0.9763],
        [0.9497, 0.9437, 0.9600,  ..., 0.9585, 1.0533, 0.9441],
        [0.9481, 0.9417, 0.9440,  ..., 0.9424, 1.0488, 0.9404],
        ...,
        [0.9462, 0.9393, 0.9257,  ..., 0.9239, 1.0433, 0.9360],
        [0.9512, 0.9455, 0.9757,  ..., 0.9745, 1.0575, 0.9476],
        [0.9545, 0.9496, 1.0143,  ..., 1.0137, 1.0670, 0.9554]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6167],
         [11.7217],
         [26.0164],
         ...,
         [26.0650],
         [19.9971],
         [11.4925]],
        [[10.8122],
         [10.8239],
         [23.9545],
         ...,
         [24.0373],
         [12.4066],
         [10.7383]],
        [[10.7165],
         [10.7177],
         [23.7109],
         ...,
         [23.7975],
         [11.6947],
         [10.6484]],
        ...,
        [[10.5990],
         [10.5873],
         [23.4120],
         ...,
         [23.5032],
         [10.8677],
         [10.5379]],
        [[10.9012],
         [10.9229],
         [24.1817],
         ...,
         [24.2608],
         [13.1023],
         [10.8219]],
        [[11.1003],
         [11.1447],
         [24.6905],
         ...,
         [24.7614],
         [14.7785],
         [11.0088]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9792, 1.1681,  ..., 1.1687, 1.0885, 0.9761],
        [0.9671, 0.9673, 1.1408,  ..., 1.1419, 0.9882, 0.9662],
        [0.9659, 0.9659, 1.1376,  ..., 1.1388, 0.9788, 0.9650],
        ...,
        [0.9643, 0.9642, 1.1337,  ..., 1.1349, 0.9679, 0.9635],
        [0.9683, 0.9686, 1.1438,  ..., 1.1449, 0.9974, 0.9673],
        [0.9710, 0.9715, 1.1506,  ..., 1.1515, 1.0196, 0.9697]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8524],
         [12.7624],
         [10.1613],
         ...,
         [10.3408],
         [13.4104],
         [12.6994]],
        [[ 7.9215],
         [ 8.0514],
         [ 9.1042],
         ...,
         [ 9.0363],
         [ 7.4809],
         [ 8.1492]],
        [[ 7.4609],
         [ 7.6051],
         [ 8.9812],
         ...,
         [ 8.8867],
         [ 6.9595],
         [ 7.7137]],
        ...,
        [[ 6.9262],
         [ 7.0855],
         [ 8.8309],
         ...,
         [ 8.7045],
         [ 6.3625],
         [ 7.2054]],
        [[ 8.3719],
         [ 8.4867],
         [ 9.2192],
         ...,
         [ 9.1766],
         [ 7.9970],
         [ 8.5730]],
        [[ 9.4587],
         [ 9.5321],
         [ 9.4782],
         ...,
         [ 9.4941],
         [ 9.2652],
         [ 9.5879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9719, 0.9700, 0.9142,  ..., 0.9181, 0.9839, 0.9686],
        [0.8662, 0.8690, 0.8915,  ..., 0.8901, 0.8567, 0.8711],
        [0.8563, 0.8594, 0.8889,  ..., 0.8869, 0.8456, 0.8617],
        ...,
        [0.8448, 0.8483, 0.8857,  ..., 0.8830, 0.8328, 0.8508],
        [0.8758, 0.8783, 0.8940,  ..., 0.8931, 0.8678, 0.8802],
        [0.8991, 0.9007, 0.8996,  ..., 0.8999, 0.8950, 0.9019]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7833],
         [14.7056],
         [25.3847],
         ...,
         [25.3861],
         [22.0331],
         [15.1612]],
        [[13.9503],
         [13.7919],
         [14.7737],
         ...,
         [14.6745],
         [20.4929],
         [13.5888]],
        [[13.8505],
         [13.6828],
         [13.8162],
         ...,
         [13.7119],
         [20.3099],
         [13.4059]],
        ...,
        [[13.7276],
         [13.5486],
         [12.7136],
         ...,
         [12.6045],
         [20.0850],
         [13.1823]],
        [[14.0431],
         [13.8934],
         [15.7165],
         ...,
         [15.6231],
         [20.6633],
         [13.7599]],
        [[14.2500],
         [14.1200],
         [18.0153],
         ...,
         [17.9390],
         [21.0444],
         [14.1452]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9686, 0.9673, 1.1410,  ..., 1.1410, 1.0865, 0.9747],
        [0.9550, 0.9525, 0.9684,  ..., 0.9668, 1.0615, 0.9492],
        [0.9534, 0.9507, 0.9529,  ..., 0.9512, 1.0585, 0.9462],
        ...,
        [0.9514, 0.9485, 0.9349,  ..., 0.9332, 1.0548, 0.9426],
        [0.9566, 0.9541, 0.9838,  ..., 0.9823, 1.0642, 0.9520],
        [0.9599, 0.9578, 1.0212,  ..., 1.0199, 1.0704, 0.9582]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5959],
         [11.7699],
         [25.6075],
         ...,
         [26.0056],
         [19.8754],
         [11.5772]],
        [[10.8090],
         [10.8279],
         [23.1082],
         ...,
         [23.9361],
         [12.4039],
         [10.6804]],
        [[10.7154],
         [10.7167],
         [22.8163],
         ...,
         [23.6917],
         [11.7007],
         [10.5743]],
        ...,
        [[10.6003],
         [10.5802],
         [22.4591],
         ...,
         [23.3917],
         [10.8830],
         [10.4442]],
        [[10.8962],
         [10.9316],
         [23.3811],
         ...,
         [24.1640],
         [13.0906],
         [10.7793]],
        [[11.0910],
         [11.1640],
         [23.9945],
         ...,
         [24.6747],
         [14.7434],
         [11.0007]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9780, 0.9803, 1.1632,  ..., 1.1684, 1.0874, 0.9778],
        [0.9676, 0.9679, 1.1301,  ..., 1.1411, 0.9887, 0.9659],
        [0.9664, 0.9664, 1.1263,  ..., 1.1379, 0.9794, 0.9645],
        ...,
        [0.9648, 0.9646, 1.1216,  ..., 1.1339, 0.9686, 0.9628],
        [0.9688, 0.9692, 1.1338,  ..., 1.1441, 0.9978, 0.9672],
        [0.9713, 0.9723, 1.1419,  ..., 1.1509, 1.0196, 0.9701]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8602],
         [12.7683],
         [10.3243],
         ...,
         [10.4921],
         [13.6256],
         [12.5232]],
        [[ 7.9108],
         [ 8.0426],
         [ 8.9826],
         ...,
         [ 9.1039],
         [ 7.4697],
         [ 8.4489]],
        [[ 7.4490],
         [ 7.5953],
         [ 8.8292],
         ...,
         [ 8.9453],
         [ 6.9341],
         [ 8.0472]],
        ...,
        [[ 6.9131],
         [ 7.0746],
         [ 8.6423],
         ...,
         [ 8.7524],
         [ 6.3223],
         [ 7.5750]],
        [[ 8.3625],
         [ 8.4788],
         [ 9.1267],
         ...,
         [ 9.2528],
         [ 8.0009],
         [ 8.8376]],
        [[ 9.4527],
         [ 9.5271],
         [ 9.4528],
         ...,
         [ 9.5899],
         [ 9.3105],
         [ 9.7597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9705, 0.9686, 0.9162,  ..., 0.9198, 0.9870, 0.9633],
        [0.8644, 0.8672, 0.8874,  ..., 0.8900, 0.8550, 0.8759],
        [0.8545, 0.8576, 0.8841,  ..., 0.8866, 0.8435, 0.8673],
        ...,
        [0.8430, 0.8465, 0.8801,  ..., 0.8825, 0.8303, 0.8572],
        [0.8741, 0.8766, 0.8905,  ..., 0.8932, 0.8663, 0.8843],
        [0.8975, 0.8991, 0.8975,  ..., 0.9004, 0.8944, 0.9041]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7552],
         [14.6025],
         [25.5543],
         ...,
         [25.6603],
         [22.5545],
         [15.4983]],
        [[13.9411],
         [13.6082],
         [14.6052],
         ...,
         [14.5147],
         [20.3424],
         [13.5944]],
        [[13.8435],
         [13.4899],
         [13.6280],
         ...,
         [13.5262],
         [20.0841],
         [13.3757]],
        ...,
        [[13.7234],
         [13.3445],
         [12.5055],
         ...,
         [12.3924],
         [19.7681],
         [13.1090]],
        [[14.0319],
         [13.7183],
         [15.5695],
         ...,
         [15.4913],
         [20.5838],
         [13.7996]],
        [[14.2341],
         [13.9644],
         [17.9286],
         ...,
         [17.8852],
         [21.1267],
         [14.2634]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9638, 0.9614, 1.1395,  ..., 1.1412, 1.0907, 0.9759],
        [0.9506, 0.9452, 0.9614,  ..., 0.9599, 1.0547, 0.9450],
        [0.9490, 0.9433, 0.9455,  ..., 0.9438, 1.0505, 0.9414],
        ...,
        [0.9471, 0.9409, 0.9272,  ..., 0.9254, 1.0454, 0.9371],
        [0.9521, 0.9470, 0.9771,  ..., 0.9758, 1.0586, 0.9483],
        [0.9554, 0.9510, 1.0155,  ..., 1.0147, 1.0675, 0.9558]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6139],
         [11.7463],
         [26.0437],
         ...,
         [26.1253],
         [19.2335],
         [11.4940]],
        [[10.8118],
         [10.8260],
         [24.0017],
         ...,
         [24.1363],
         [12.4005],
         [10.7365]],
        [[10.7164],
         [10.7172],
         [23.7603],
         ...,
         [23.9008],
         [11.7447],
         [10.6462]],
        ...,
        [[10.5992],
         [10.5837],
         [23.4641],
         ...,
         [23.6118],
         [10.9788],
         [10.5353]],
        [[10.9006],
         [10.9274],
         [24.2267],
         ...,
         [24.3557],
         [13.0384],
         [10.8205]],
        [[11.0991],
         [11.1546],
         [24.7308],
         ...,
         [24.8470],
         [14.5645],
         [11.0081]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9812, 0.9829, 1.1719,  ..., 1.1730, 1.0819, 0.9796],
        [0.9706, 0.9708, 1.1449,  ..., 1.1467, 0.9916, 0.9696],
        [0.9693, 0.9693, 1.1417,  ..., 1.1436, 0.9829, 0.9684],
        ...,
        [0.9678, 0.9676, 1.1378,  ..., 1.1398, 0.9728, 0.9669],
        [0.9718, 0.9721, 1.1479,  ..., 1.1496, 1.0000, 0.9707],
        [0.9744, 0.9751, 1.1545,  ..., 1.1561, 1.0202, 0.9732]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8573],
         [12.7727],
         [10.5254],
         ...,
         [10.3668],
         [13.7238],
         [12.6994]],
        [[ 7.9148],
         [ 8.0360],
         [ 9.0226],
         ...,
         [ 9.0284],
         [ 7.4988],
         [ 8.1493]],
        [[ 7.4535],
         [ 7.5880],
         [ 8.8522],
         ...,
         [ 8.8752],
         [ 6.9583],
         [ 7.7138]],
        ...,
        [[ 6.9180],
         [ 7.0665],
         [ 8.6451],
         ...,
         [ 8.6887],
         [ 6.3412],
         [ 7.2055]],
        [[ 8.3661],
         [ 8.4730],
         [ 9.1829],
         ...,
         [ 9.1722],
         [ 8.0351],
         [ 8.5731]],
        [[ 9.4550],
         [ 9.5233],
         [ 9.5467],
         ...,
         [ 9.4976],
         [ 9.3581],
         [ 9.5879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9706, 0.9688, 0.9206,  ..., 0.9172, 0.9892, 0.9672],
        [0.8646, 0.8672, 0.8884,  ..., 0.8885, 0.8557, 0.8696],
        [0.8547, 0.8576, 0.8847,  ..., 0.8852, 0.8441, 0.8603],
        ...,
        [0.8432, 0.8464, 0.8803,  ..., 0.8812, 0.8309, 0.8494],
        [0.8743, 0.8766, 0.8918,  ..., 0.8916, 0.8672, 0.8787],
        [0.8976, 0.8991, 0.8996,  ..., 0.8986, 0.8956, 0.9005]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7617],
         [14.6918],
         [25.2050],
         ...,
         [25.4646],
         [26.9454],
         [15.4705]],
        [[13.9289],
         [13.7758],
         [14.8768],
         ...,
         [14.6768],
         [20.0509],
         [13.7032]],
        [[13.8291],
         [13.6665],
         [13.9368],
         ...,
         [13.7091],
         [19.3306],
         [13.4989]],
        ...,
        [[13.7063],
         [13.5320],
         [12.8523],
         ...,
         [12.5962],
         [18.4724],
         [13.2497]],
        [[14.0216],
         [13.8776],
         [15.8007],
         ...,
         [15.6308],
         [20.7397],
         [13.8945]],
        [[14.2285],
         [14.1047],
         [18.0478],
         ...,
         [17.9610],
         [22.3445],
         [14.3261]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9679, 0.9668, 1.1378,  ..., 1.1420, 1.1661, 0.9794],
        [0.9544, 0.9519, 0.9698,  ..., 0.9665, 1.0539, 0.9507],
        [0.9527, 0.9501, 0.9545,  ..., 0.9508, 1.0422, 0.9474],
        ...,
        [0.9507, 0.9479, 0.9369,  ..., 0.9327, 1.0283, 0.9433],
        [0.9559, 0.9535, 0.9848,  ..., 0.9820, 1.0651, 0.9538],
        [0.9592, 0.9572, 1.0214,  ..., 1.0199, 1.0912, 0.9608]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6367],
         [11.7324],
         [26.8764],
         ...,
         [26.4023],
         [17.5170],
         [11.5304]],
        [[10.8149],
         [10.8249],
         [25.1472],
         ...,
         [24.5495],
         [12.4335],
         [10.7944]],
        [[10.7173],
         [10.7175],
         [24.9410],
         ...,
         [24.3294],
         [11.9170],
         [10.7066]],
        ...,
        [[10.5974],
         [10.5858],
         [24.6875],
         ...,
         [24.0589],
         [11.3056],
         [10.5987]],
        [[10.9058],
         [10.9249],
         [25.3390],
         ...,
         [24.7545],
         [12.9303],
         [10.8761]],
        [[11.1091],
         [11.1490],
         [25.7676],
         ...,
         [25.2129],
         [14.0977],
         [11.0585]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9911, 0.9924, 1.1925,  ..., 1.1862, 1.0688, 0.9897],
        [0.9803, 0.9804, 1.1697,  ..., 1.1618, 1.0016, 0.9800],
        [0.9790, 0.9790, 1.1669,  ..., 1.1589, 0.9948, 0.9788],
        ...,
        [0.9774, 0.9772, 1.1636,  ..., 1.1553, 0.9867, 0.9774],
        [0.9815, 0.9817, 1.1722,  ..., 1.1645, 1.0082, 0.9811],
        [0.9841, 0.9847, 1.1779,  ..., 1.1705, 1.0236, 0.9835]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8370],
         [12.7846],
         [11.3352],
         ...,
         [10.2496],
         [14.6097],
         [12.9272]],
        [[ 7.9429],
         [ 8.0182],
         [ 8.9562],
         ...,
         [ 8.9141],
         [ 7.9415],
         [ 7.8236]],
        [[ 7.4846],
         [ 7.5683],
         [ 8.6988],
         ...,
         [ 8.7614],
         [ 7.3643],
         [ 7.3520]],
        ...,
        [[ 6.9524],
         [ 7.0448],
         [ 8.3896],
         ...,
         [ 8.5754],
         [ 6.7058],
         [ 6.8061]],
        [[ 8.3908],
         [ 8.4573],
         [ 9.2006],
         ...,
         [ 9.0574],
         [ 8.5145],
         [ 8.2857]],
        [[ 9.4707],
         [ 9.5133],
         [ 9.7637],
         ...,
         [ 9.3820],
         [ 9.9294],
         [ 9.4045]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9756, 0.9744, 0.9434,  ..., 0.9201, 1.0136, 0.9775],
        [0.8706, 0.8722, 0.8923,  ..., 0.8914, 0.8706, 0.8681],
        [0.8608, 0.8626, 0.8868,  ..., 0.8882, 0.8582, 0.8579],
        ...,
        [0.8494, 0.8514, 0.8802,  ..., 0.8842, 0.8441, 0.8462],
        [0.8802, 0.8816, 0.8976,  ..., 0.8945, 0.8829, 0.8780],
        [0.9034, 0.9043, 0.9097,  ..., 0.9015, 0.9132, 0.9020]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7778],
         [14.8916],
         [24.4185],
         ...,
         [25.2555],
         [34.1341],
         [15.8842]],
        [[13.9206],
         [14.0678],
         [15.4355],
         ...,
         [14.9520],
         [19.4986],
         [14.0316]],
        [[13.8180],
         [13.9690],
         [14.5835],
         ...,
         [14.0125],
         [18.1928],
         [13.8178]],
        ...,
        [[13.6917],
         [13.8474],
         [13.5911],
         ...,
         [12.9282],
         [16.6930],
         [13.5570]],
        [[14.0159],
         [14.1596],
         [16.2662],
         ...,
         [15.8751],
         [20.7872],
         [14.2319]],
        [[14.2288],
         [14.3642],
         [18.2609],
         ...,
         [18.1188],
         [23.9400],
         [14.6840]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9744, 0.9763, 1.1313,  ..., 1.1449, 1.2893, 0.9924],
        [0.9605, 0.9629, 0.9851,  ..., 0.9773, 1.0512, 0.9623],
        [0.9588, 0.9613, 0.9713,  ..., 0.9620, 1.0300, 0.9588],
        ...,
        [0.9568, 0.9593, 0.9551,  ..., 0.9444, 1.0056, 0.9546],
        [0.9621, 0.9644, 0.9987,  ..., 0.9923, 1.0722, 0.9656],
        [0.9655, 0.9677, 1.0311,  ..., 1.0288, 1.1235, 0.9729]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6463],
         [11.7435],
         [27.0195],
         ...,
         [26.6202],
         [16.9018],
         [11.5662]],
        [[10.8161],
         [10.8258],
         [25.3090],
         ...,
         [24.8380],
         [12.4172],
         [10.8035]],
        [[10.7175],
         [10.7173],
         [25.1049],
         ...,
         [24.6258],
         [11.9522],
         [10.7126]],
        ...,
        [[10.5964],
         [10.5841],
         [24.8539],
         ...,
         [24.3650],
         [11.3992],
         [10.6009]],
        [[10.9079],
         [10.9269],
         [25.4988],
         ...,
         [25.0355],
         [12.8626],
         [10.8880]],
        [[11.1132],
         [11.1535],
         [25.9229],
         ...,
         [25.4769],
         [13.9027],
         [11.0770]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9946, 0.9959, 1.1977,  ..., 1.1925, 1.0640, 0.9935],
        [0.9836, 0.9837, 1.1751,  ..., 1.1689, 1.0048, 0.9834],
        [0.9823, 0.9823, 1.1724,  ..., 1.1661, 0.9986, 0.9822],
        ...,
        [0.9807, 0.9805, 1.1691,  ..., 1.1627, 0.9913, 0.9808],
        [0.9848, 0.9851, 1.1777,  ..., 1.1715, 1.0107, 0.9846],
        [0.9875, 0.9881, 1.1833,  ..., 1.1774, 1.0244, 0.9871]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8487],
         [12.8064],
         [11.9936],
         ...,
         [10.2391],
         [15.5975],
         [12.9764]],
        [[ 7.9266],
         [ 7.9864],
         [ 8.7944],
         ...,
         [ 8.8516],
         [ 8.6492],
         [ 7.7649]],
        [[ 7.4666],
         [ 7.5329],
         [ 8.4631],
         ...,
         [ 8.6935],
         [ 8.0404],
         [ 7.2867]],
        ...,
        [[ 6.9325],
         [ 7.0058],
         [ 8.0691],
         ...,
         [ 8.5011],
         [ 7.3440],
         [ 6.7338]],
        [[ 8.3765],
         [ 8.4292],
         [ 9.1119],
         ...,
         [ 9.0001],
         [ 9.2522],
         [ 8.2343]],
        [[ 9.4616],
         [ 9.4952],
         [ 9.8534],
         ...,
         [ 9.3368],
         [10.7355],
         [ 9.3728]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9817, 0.9808, 0.9634,  ..., 0.9257, 1.0406, 0.9844],
        [0.8762, 0.8774, 0.8948,  ..., 0.8960, 0.8916, 0.8727],
        [0.8663, 0.8677, 0.8877,  ..., 0.8926, 0.8786, 0.8624],
        ...,
        [0.8548, 0.8564, 0.8792,  ..., 0.8885, 0.8637, 0.8506],
        [0.8858, 0.8869, 0.9016,  ..., 0.8992, 0.9046, 0.8828],
        [0.9091, 0.9098, 0.9175,  ..., 0.9064, 0.9364, 0.9072]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7461],
         [15.0260],
         [23.8552],
         ...,
         [25.2348],
         [23.0430],
         [16.3924]],
        [[13.8673],
         [14.2289],
         [15.7646],
         ...,
         [15.0954],
         [16.9553],
         [14.2580]],
        [[13.7622],
         [14.1332],
         [14.9766],
         ...,
         [14.1652],
         [16.3235],
         [14.0139]],
        ...,
        [[13.6329],
         [14.0153],
         [14.0531],
         ...,
         [13.0899],
         [15.5719],
         [13.7167]],
        [[13.9650],
         [14.3178],
         [16.5289],
         ...,
         [16.0085],
         [17.5603],
         [14.4871]],
        [[14.1831],
         [14.5160],
         [18.3490],
         ...,
         [18.2233],
         [18.9729],
         [15.0059]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9745, 0.9790, 1.1226,  ..., 1.1451, 1.1094, 1.0013],
        [0.9602, 0.9661, 0.9910,  ..., 0.9802, 1.0104, 0.9665],
        [0.9585, 0.9645, 0.9782,  ..., 0.9650, 1.0001, 0.9626],
        ...,
        [0.9564, 0.9626, 0.9632,  ..., 0.9475, 0.9879, 0.9577],
        [0.9618, 0.9675, 1.0035,  ..., 0.9950, 1.0203, 0.9703],
        [0.9653, 0.9707, 1.0331,  ..., 1.0310, 1.0432, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6700],
         [11.7471],
         [26.9462],
         ...,
         [26.9224],
         [18.9072],
         [11.7071]],
        [[10.8188],
         [10.8261],
         [25.2270],
         ...,
         [25.2000],
         [12.0940],
         [10.8272]],
        [[10.7179],
         [10.7172],
         [25.0219],
         ...,
         [24.9946],
         [11.4433],
         [10.7230]],
        ...,
        [[10.5939],
         [10.5836],
         [24.7697],
         ...,
         [24.7420],
         [10.6840],
         [10.5950]],
        [[10.9129],
         [10.9276],
         [25.4178],
         ...,
         [25.3911],
         [12.7277],
         [10.9243]],
        [[11.1233],
         [11.1549],
         [25.8439],
         ...,
         [25.8180],
         [14.2459],
         [11.1417]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9794, 1.1803,  ..., 1.1800, 1.0740, 0.9789],
        [0.9671, 0.9672, 1.1575,  ..., 1.1572, 0.9840, 0.9672],
        [0.9658, 0.9658, 1.1548,  ..., 1.1545, 0.9754, 0.9659],
        ...,
        [0.9642, 0.9640, 1.1515,  ..., 1.1511, 0.9654, 0.9642],
        [0.9684, 0.9686, 1.1601,  ..., 1.1597, 0.9924, 0.9685],
        [0.9712, 0.9716, 1.1657,  ..., 1.1654, 1.0124, 0.9714]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8556],
         [12.8872],
         [12.4736],
         ...,
         [10.2467],
         [16.1384],
         [12.9814]],
        [[ 7.9172],
         [ 7.8747],
         [ 8.4784],
         ...,
         [ 8.7553],
         [ 9.3776],
         [ 7.7593]],
        [[ 7.4561],
         [ 7.4089],
         [ 8.0827],
         ...,
         [ 8.5865],
         [ 8.7681],
         [ 7.2804]],
        ...,
        [[ 6.9209],
         [ 6.8688],
         [ 7.6172],
         ...,
         [ 8.3815],
         [ 8.0664],
         [ 6.7269]],
        [[ 8.3681],
         [ 8.3307],
         [ 8.8609],
         ...,
         [ 8.9142],
         [ 9.9779],
         [ 8.2293]],
        [[ 9.4563],
         [ 9.4326],
         [ 9.7671],
         ...,
         [ 9.2749],
         [11.4418],
         [ 9.3698]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9815, 0.9822, 0.9733,  ..., 0.9256, 1.0519, 0.9842],
        [0.8756, 0.8747, 0.8877,  ..., 0.8936, 0.9070, 0.8723],
        [0.8658, 0.8647, 0.8792,  ..., 0.8900, 0.8939, 0.8620],
        ...,
        [0.8543, 0.8532, 0.8692,  ..., 0.8856, 0.8788, 0.8501],
        [0.8853, 0.8845, 0.8959,  ..., 0.8970, 0.9198, 0.8823],
        [0.9086, 0.9081, 0.9153,  ..., 0.9048, 0.9512, 0.9068]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7307],
         [15.2652],
         [23.0788],
         ...,
         [25.0928],
         [17.1467],
         [17.0498]],
        [[13.8094],
         [14.4588],
         [16.2007],
         ...,
         [15.3716],
         [11.5538],
         [14.7842]],
        [[13.6995],
         [14.3619],
         [15.5063],
         ...,
         [14.4668],
         [11.0028],
         [14.5256]],
        ...,
        [[13.5642],
         [14.2427],
         [14.6858],
         ...,
         [13.4175],
         [10.3552],
         [14.2108]],
        [[13.9117],
         [14.5487],
         [16.8693],
         ...,
         [16.2571],
         [12.0870],
         [15.0271]],
        [[14.1402],
         [14.7492],
         [18.4439],
         ...,
         [18.3957],
         [13.3524],
         [15.5773]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9510, 0.9597, 1.0868,  ..., 1.1196, 0.9903, 0.9888],
        [0.9361, 0.9466, 0.9749,  ..., 0.9615, 0.8994, 0.9519],
        [0.9343, 0.9450, 0.9637,  ..., 0.9467, 0.8904, 0.9477],
        ...,
        [0.9321, 0.9431, 0.9503,  ..., 0.9297, 0.8799, 0.9426],
        [0.9377, 0.9481, 0.9858,  ..., 0.9759, 0.9080, 0.9559],
        [0.9414, 0.9513, 1.0114,  ..., 1.0107, 0.9286, 0.9648]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6570],
         [11.7452],
         [26.9855],
         ...,
         [26.7549],
         [17.3326],
         [11.6244]],
        [[10.8174],
         [10.8259],
         [25.2712],
         ...,
         [25.0040],
         [12.2973],
         [10.8153]],
        [[10.7177],
         [10.7173],
         [25.0667],
         ...,
         [24.7954],
         [11.7858],
         [10.7191]],
        ...,
        [[10.5953],
         [10.5839],
         [24.8152],
         ...,
         [24.5389],
         [11.1803],
         [10.6009]],
        [[10.9102],
         [10.9272],
         [25.4615],
         ...,
         [25.1982],
         [12.7892],
         [10.9048]],
        [[11.1178],
         [11.1541],
         [25.8864],
         ...,
         [25.6320],
         [13.9455],
         [11.1050]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9900, 0.9911, 1.1925,  ..., 1.1895, 1.0650, 0.9895],
        [0.9789, 0.9790, 1.1699,  ..., 1.1664, 0.9984, 0.9788],
        [0.9776, 0.9776, 1.1672,  ..., 1.1636, 0.9917, 0.9776],
        ...,
        [0.9759, 0.9758, 1.1639,  ..., 1.1602, 0.9837, 0.9760],
        [0.9801, 0.9803, 1.1724,  ..., 1.1689, 1.0049, 0.9800],
        [0.9828, 0.9833, 1.1780,  ..., 1.1747, 1.0202, 0.9827]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8518],
         [12.8439],
         [12.2631],
         ...,
         [10.2306],
         [15.8436],
         [12.9787]],
        [[ 7.9222],
         [ 7.9333],
         [ 8.6306],
         ...,
         [ 8.8027],
         [ 8.9635],
         [ 7.7623]],
        [[ 7.4617],
         [ 7.4739],
         [ 8.2634],
         ...,
         [ 8.6404],
         [ 8.3533],
         [ 7.2838]],
        ...,
        [[ 6.9271],
         [ 6.9407],
         [ 7.8292],
         ...,
         [ 8.4431],
         [ 7.6533],
         [ 6.7306]],
        [[ 8.3726],
         [ 8.3823],
         [ 8.9842],
         ...,
         [ 8.9552],
         [ 9.5664],
         [ 8.2320]],
        [[ 9.4591],
         [ 9.4653],
         [ 9.8164],
         ...,
         [ 9.3012],
         [11.0443],
         [ 9.3714]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9817, 0.9815, 0.9691,  ..., 0.9255, 1.0458, 0.9844],
        [0.8760, 0.8762, 0.8912,  ..., 0.8949, 0.8983, 0.8725],
        [0.8661, 0.8664, 0.8833,  ..., 0.8914, 0.8852, 0.8623],
        ...,
        [0.8546, 0.8549, 0.8740,  ..., 0.8871, 0.8702, 0.8504],
        [0.8856, 0.8858, 0.8988,  ..., 0.8981, 0.9112, 0.8826],
        [0.9089, 0.9091, 0.9166,  ..., 0.9055, 0.9429, 0.9071]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7384],
         [15.1312],
         [23.4945],
         ...,
         [25.1734],
         [17.3332],
         [16.6815]],
        [[13.8407],
         [14.3343],
         [15.9604],
         ...,
         [15.2202],
         [13.8242],
         [14.4958]],
        [[13.7334],
         [14.2386],
         [15.2144],
         ...,
         [14.3011],
         [13.4424],
         [14.2460]],
        ...,
        [[13.6014],
         [14.1207],
         [14.3369],
         ...,
         [13.2372],
         [12.9833],
         [13.9418]],
        [[13.9404],
         [14.4232],
         [16.6815],
         ...,
         [16.1211],
         [14.1862],
         [14.7303]],
        [[14.1631],
         [14.6213],
         [18.3900],
         ...,
         [18.3022],
         [15.0190],
         [15.2614]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9731, 0.9795, 1.1155,  ..., 1.1428, 1.0153, 1.0047],
        [0.9585, 0.9665, 0.9930,  ..., 0.9810, 0.9583, 0.9692],
        [0.9568, 0.9650, 0.9809,  ..., 0.9660, 0.9520, 0.9651],
        ...,
        [0.9546, 0.9631, 0.9666,  ..., 0.9487, 0.9446, 0.9602],
        [0.9601, 0.9680, 1.0047,  ..., 0.9956, 0.9641, 0.9730],
        [0.9638, 0.9712, 1.0325,  ..., 1.0311, 0.9777, 0.9816]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7900],
         [11.5832],
         [26.5587],
         ...,
         [25.6714],
         [15.9285],
         [12.7977]],
        [[10.8294],
         [10.8068],
         [17.0837],
         ...,
         [23.2702],
         [11.2054],
         [10.8738]],
        [[10.7161],
         [10.7144],
         [16.1756],
         ...,
         [22.9890],
         [10.7281],
         [10.6567]],
        ...,
        [[10.5770],
         [10.6008],
         [15.1153],
         ...,
         [22.6448],
         [10.1637],
         [10.3933]],
        [[10.9351],
         [10.8928],
         [17.9672],
         ...,
         [23.5328],
         [11.6650],
         [11.0782]],
        [[11.1720],
         [11.0851],
         [20.0820],
         ...,
         [24.1229],
         [12.7470],
         [11.5428]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9800, 0.9773, 1.1752,  ..., 1.1635, 1.0347, 0.9933],
        [0.9673, 0.9670, 1.0500,  ..., 1.1317, 0.9723, 0.9679],
        [0.9658, 0.9658, 1.0380,  ..., 1.1280, 0.9660, 0.9650],
        ...,
        [0.9640, 0.9643, 1.0240,  ..., 1.1235, 0.9585, 0.9616],
        [0.9687, 0.9682, 1.0617,  ..., 1.1352, 0.9784, 0.9706],
        [0.9719, 0.9707, 1.0896,  ..., 1.1430, 0.9927, 0.9768]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8948],
         [14.3528],
         [18.6023],
         ...,
         [11.0219],
         [20.1559],
         [23.6717]],
        [[ 7.8647],
         [ 7.6572],
         [10.8196],
         ...,
         [ 8.9862],
         [15.2234],
         [16.0750]],
        [[ 7.3978],
         [ 7.0842],
         [10.1176],
         ...,
         [ 8.7620],
         [14.7036],
         [15.3230]],
        ...,
        [[ 6.8566],
         [ 6.4323],
         [ 9.3092],
         ...,
         [ 8.4913],
         [14.0830],
         [14.4384]],
        [[ 8.3219],
         [ 8.2272],
         [11.5109],
         ...,
         [ 9.1984],
         [15.7196],
         [16.8019]],
        [[ 9.4271],
         [ 9.6398],
         [13.1966],
         ...,
         [ 9.6845],
         [16.8726],
         [18.5245]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9716, 1.0028, 1.0940,  ..., 0.9314, 1.1273, 1.2027],
        [0.8637, 0.8593, 0.9271,  ..., 0.8878, 1.0215, 1.0398],
        [0.8537, 0.8470, 0.9120,  ..., 0.8829, 1.0104, 1.0236],
        ...,
        [0.8421, 0.8330, 0.8947,  ..., 0.8771, 0.9970, 1.0047],
        [0.8735, 0.8715, 0.9419,  ..., 0.8923, 1.0321, 1.0553],
        [0.8972, 0.9018, 0.9780,  ..., 0.9027, 1.0569, 1.0923]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0871],
         [14.9131],
         [25.4155],
         ...,
         [24.1991],
         [16.5518],
         [22.2247]],
        [[13.8402],
         [13.3010],
         [13.5132],
         ...,
         [15.6211],
         [12.2949],
         [19.8482]],
        [[13.6932],
         [13.1140],
         [12.4967],
         ...,
         [14.7973],
         [11.8506],
         [19.5723]],
        ...,
        [[13.5130],
         [12.8855],
         [11.3408],
         ...,
         [13.8349],
         [11.3214],
         [19.2351]],
        [[13.9774],
         [13.4761],
         [14.5248],
         ...,
         [16.4224],
         [12.7198],
         [20.1064]],
        [[14.2848],
         [13.8705],
         [17.0332],
         ...,
         [18.3390],
         [13.7102],
         [20.6881]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9510, 0.9482, 1.1190,  ..., 1.0992, 0.9749, 1.0671],
        [0.9308, 0.9220, 0.9254,  ..., 0.9597, 0.9056, 1.0285],
        [0.9284, 0.9190, 0.9089,  ..., 0.9463, 0.8984, 1.0240],
        ...,
        [0.9254, 0.9152, 0.8901,  ..., 0.9307, 0.8898, 1.0185],
        [0.9330, 0.9248, 0.9419,  ..., 0.9728, 0.9125, 1.0327],
        [0.9380, 0.9313, 0.9827,  ..., 1.0039, 0.9286, 1.0421]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7020],
         [11.6798],
         [25.2369],
         ...,
         [26.2719],
         [16.5902],
         [11.9727]],
        [[10.8221],
         [10.8199],
         [21.7691],
         ...,
         [24.3626],
         [11.8817],
         [10.8417]],
        [[10.7179],
         [10.7179],
         [21.3744],
         ...,
         [24.1361],
         [11.4007],
         [10.7094]],
        ...,
        [[10.5899],
         [10.5927],
         [20.8944],
         ...,
         [23.8579],
         [10.8307],
         [10.5474]],
        [[10.9192],
         [10.9149],
         [22.1400],
         ...,
         [24.5736],
         [12.3437],
         [10.9654]],
        [[11.1366],
         [11.1274],
         [22.9809],
         ...,
         [25.0457],
         [13.4279],
         [11.2433]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9873, 0.9870, 1.1662,  ..., 1.1799, 1.0519, 0.9909],
        [0.9757, 0.9757, 1.1204,  ..., 1.1546, 0.9897, 0.9759],
        [0.9743, 0.9743, 1.1151,  ..., 1.1516, 0.9833, 0.9742],
        ...,
        [0.9726, 0.9726, 1.1088,  ..., 1.1480, 0.9758, 0.9720],
        [0.9770, 0.9769, 1.1253,  ..., 1.1574, 0.9958, 0.9776],
        [0.9798, 0.9797, 1.1364,  ..., 1.1637, 1.0101, 0.9812]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8675],
         [13.2367],
         [12.2396],
         ...,
         [10.2845],
         [12.7342],
         [11.9872]],
        [[ 7.9010],
         [ 7.5443],
         [ 7.8820],
         ...,
         [ 8.7676],
         [ 7.7080],
         [ 9.6516]],
        [[ 7.4381],
         [ 7.0371],
         [ 7.4641],
         ...,
         [ 8.5961],
         [ 7.2436],
         [ 9.3961]],
        ...,
        [[ 6.9011],
         [ 6.4547],
         [ 6.9761],
         ...,
         [ 8.3879],
         [ 6.7059],
         [ 9.0884]],
        [[ 8.3539],
         [ 8.0449],
         [ 8.2886],
         ...,
         [ 8.9289],
         [ 8.1632],
         [ 9.8936]],
        [[ 9.4473],
         [ 9.2704],
         [ 9.2615],
         ...,
         [ 9.2956],
         [ 9.2650],
         [10.4494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9749, 0.9828, 0.9614,  ..., 0.9195, 0.9720, 0.9560],
        [0.8684, 0.8607, 0.8680,  ..., 0.8869, 0.8642, 0.9059],
        [0.8584, 0.8498, 0.8590,  ..., 0.8833, 0.8543, 0.9004],
        ...,
        [0.8469, 0.8373, 0.8485,  ..., 0.8788, 0.8427, 0.8938],
        [0.8781, 0.8714, 0.8767,  ..., 0.8904, 0.8740, 0.9111],
        [0.9015, 0.8977, 0.8975,  ..., 0.8983, 0.8976, 0.9230]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8378],
         [14.9538],
         [24.4855],
         ...,
         [24.8256],
         [15.0812],
         [18.2182]],
        [[13.8431],
         [13.9530],
         [14.7398],
         ...,
         [15.3576],
         [13.3100],
         [16.1691]],
        [[13.7247],
         [13.8339],
         [13.8423],
         ...,
         [14.4712],
         [13.1057],
         [15.9321]],
        ...,
        [[13.5791],
         [13.6874],
         [12.8039],
         ...,
         [13.4418],
         [12.8566],
         [15.6427]],
        [[13.9533],
         [14.0639],
         [15.6201],
         ...,
         [16.2241],
         [13.5014],
         [16.3911]],
        [[14.1996],
         [14.3118],
         [17.7529],
         ...,
         [18.3131],
         [13.9336],
         [16.8919]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9592, 0.9611, 1.1161,  ..., 1.1216, 0.9632, 1.0142],
        [0.9430, 0.9448, 0.9576,  ..., 0.9677, 0.9343, 0.9809],
        [0.9411, 0.9429, 0.9430,  ..., 0.9532, 0.9310, 0.9770],
        ...,
        [0.9387, 0.9405, 0.9261,  ..., 0.9365, 0.9270, 0.9723],
        [0.9448, 0.9466, 0.9719,  ..., 0.9817, 0.9375, 0.9845],
        [0.9488, 0.9506, 1.0066,  ..., 1.0157, 0.9445, 0.9926]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7250],
         [11.6267],
         [25.4134],
         ...,
         [26.3224],
         [16.0200],
         [13.0646]],
        [[10.8242],
         [10.8136],
         [22.5574],
         ...,
         [24.4364],
         [11.6963],
         [10.8844]],
        [[10.7176],
         [10.7170],
         [22.2270],
         ...,
         [24.2125],
         [11.2496],
         [10.6412]],
        ...,
        [[10.5868],
         [10.5982],
         [21.8236],
         ...,
         [23.9375],
         [10.7188],
         [10.3468]],
        [[10.9236],
         [10.9036],
         [22.8669],
         ...,
         [24.6449],
         [12.1244],
         [11.1139]],
        [[11.1460],
         [11.1048],
         [23.5648],
         ...,
         [25.1113],
         [13.1255],
         [11.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9876, 0.9863, 1.1685,  ..., 1.1805, 1.0444, 1.0053],
        [0.9757, 0.9755, 1.1307,  ..., 1.1556, 0.9872, 0.9765],
        [0.9743, 0.9743, 1.1264,  ..., 1.1526, 0.9813, 0.9733],
        ...,
        [0.9725, 0.9727, 1.1210,  ..., 1.1490, 0.9743, 0.9694],
        [0.9770, 0.9767, 1.1348,  ..., 1.1583, 0.9929, 0.9795],
        [0.9799, 0.9794, 1.1441,  ..., 1.1645, 1.0061, 0.9864]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8266],
         [13.0977],
         [11.8953],
         ...,
         [10.3697],
         [12.7163],
         [12.5828]],
        [[ 7.9574],
         [ 7.6425],
         [ 8.0037],
         ...,
         [ 8.7860],
         [ 7.8683],
         [ 8.3435]],
        [[ 7.5008],
         [ 7.1495],
         [ 7.6206],
         ...,
         [ 8.6075],
         [ 7.4143],
         [ 7.9297]],
        ...,
        [[ 6.9702],
         [ 6.5815],
         [ 7.1705],
         ...,
         [ 8.3911],
         [ 6.8871],
         [ 7.4446]],
        [[ 8.4037],
         [ 8.1278],
         [ 8.3745],
         ...,
         [ 8.9540],
         [ 8.3120],
         [ 8.7446]],
        [[ 9.4789],
         [ 9.3106],
         [ 9.2546],
         ...,
         [ 9.3361],
         [ 9.3817],
         [ 9.6992]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9773, 0.9831, 0.9573,  ..., 0.9246, 0.9750, 0.9721],
        [0.8729, 0.8661, 0.8739,  ..., 0.8907, 0.8710, 0.8812],
        [0.8631, 0.8556, 0.8657,  ..., 0.8868, 0.8613, 0.8723],
        ...,
        [0.8517, 0.8434, 0.8560,  ..., 0.8822, 0.8500, 0.8619],
        [0.8825, 0.8766, 0.8818,  ..., 0.8943, 0.8805, 0.8898],
        [0.9055, 0.9019, 0.9007,  ..., 0.9025, 0.9034, 0.9103]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9437],
         [15.2079],
         [24.3514],
         ...,
         [24.5051],
         [14.6384],
         [18.1311]],
        [[13.9070],
         [14.2633],
         [14.9229],
         ...,
         [15.5765],
         [13.4984],
         [15.8547]],
        [[13.7838],
         [14.1505],
         [14.0452],
         ...,
         [14.7269],
         [13.3636],
         [15.5935]],
        ...,
        [[13.6324],
         [14.0118],
         [13.0272],
         ...,
         [13.7365],
         [13.1981],
         [15.2754]],
        [[14.0218],
         [14.3682],
         [15.7819],
         ...,
         [16.4044],
         [13.6240],
         [16.0996]],
        [[14.2783],
         [14.6024],
         [17.8563],
         ...,
         [18.3903],
         [13.9055],
         [16.6537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9591, 0.9634, 1.1121,  ..., 1.1146, 0.9541, 1.0109],
        [0.9422, 0.9480, 0.9587,  ..., 0.9694, 0.9356, 0.9739],
        [0.9402, 0.9462, 0.9445,  ..., 0.9556, 0.9334, 0.9697],
        ...,
        [0.9378, 0.9439, 0.9279,  ..., 0.9395, 0.9307, 0.9645],
        [0.9441, 0.9497, 0.9727,  ..., 0.9828, 0.9376, 0.9779],
        [0.9483, 0.9535, 1.0065,  ..., 1.0151, 0.9422, 0.9869]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7608],
         [11.5637],
         [25.9610],
         ...,
         [26.3369],
         [14.0692],
         [14.4652]],
        [[10.8272],
         [10.8042],
         [23.8561],
         ...,
         [24.4573],
         [11.4210],
         [10.9503]],
        [[10.7169],
         [10.7138],
         [23.6077],
         ...,
         [24.2342],
         [11.1300],
         [10.5794]],
        ...,
        [[10.5816],
         [10.6025],
         [23.3030],
         ...,
         [23.9600],
         [10.7790],
         [10.1365]],
        [[10.9300],
         [10.8884],
         [24.0878],
         ...,
         [24.6651],
         [11.6965],
         [11.3043]],
        [[11.1604],
         [11.0766],
         [24.6069],
         ...,
         [25.1300],
         [12.3281],
         [12.1264]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9837, 0.9811, 1.1714,  ..., 1.1764, 1.0143, 1.0195],
        [0.9714, 0.9711, 1.1436,  ..., 1.1515, 0.9793, 0.9730],
        [0.9699, 0.9699, 1.1403,  ..., 1.1486, 0.9754, 0.9681],
        ...,
        [0.9682, 0.9684, 1.1363,  ..., 1.1450, 0.9708, 0.9623],
        [0.9728, 0.9722, 1.1467,  ..., 1.1543, 0.9829, 0.9777],
        [0.9758, 0.9747, 1.1535,  ..., 1.1604, 0.9912, 0.9886]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7775],
         [12.9179],
         [11.0729],
         ...,
         [10.4862],
         [12.4405],
         [13.1122]],
        [[ 8.0288],
         [ 7.8352],
         [ 8.3848],
         ...,
         [ 8.8383],
         [ 8.7051],
         [ 7.6302]],
        [[ 7.5800],
         [ 7.3650],
         [ 8.1011],
         ...,
         [ 8.6533],
         [ 8.3287],
         [ 7.1355]],
        ...,
        [[ 7.0577],
         [ 6.8204],
         [ 7.7623],
         ...,
         [ 8.4289],
         [ 7.8841],
         [ 6.5659]],
        [[ 8.4666],
         [ 8.2960],
         [ 8.6556],
         ...,
         [ 9.0127],
         [ 9.0677],
         [ 8.1172]],
        [[ 9.5192],
         [ 9.4108],
         [ 9.2844],
         ...,
         [ 9.4098],
         [ 9.9221],
         [ 9.3048]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9759, 0.9789, 0.9393,  ..., 0.9267, 0.9686, 0.9830],
        [0.8740, 0.8699, 0.8817,  ..., 0.8914, 0.8885, 0.8655],
        [0.8644, 0.8598, 0.8756,  ..., 0.8874, 0.8805, 0.8549],
        ...,
        [0.8532, 0.8481, 0.8683,  ..., 0.8826, 0.8709, 0.8427],
        [0.8834, 0.8798, 0.8875,  ..., 0.8951, 0.8963, 0.8759],
        [0.9060, 0.9037, 0.9010,  ..., 0.9036, 0.9146, 0.9014]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1280],
         [15.5468],
         [24.3482],
         ...,
         [24.0042],
         [17.2506],
         [17.4639]],
        [[13.9959],
         [14.6012],
         [15.1019],
         ...,
         [15.8761],
         [14.9938],
         [15.7307]],
        [[13.8618],
         [14.4882],
         [14.2349],
         ...,
         [15.0841],
         [14.7358],
         [15.5285]],
        ...,
        [[13.6971],
         [14.3492],
         [13.2277],
         ...,
         [14.1557],
         [14.4218],
         [15.2811]],
        [[14.1209],
         [14.7063],
         [15.9492],
         ...,
         [16.6442],
         [15.2360],
         [15.9198]],
        [[14.4006],
         [14.9409],
         [17.9909],
         ...,
         [18.4732],
         [15.7844],
         [16.3450]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9594, 0.9662, 1.1094,  ..., 1.1038, 0.9939, 0.9974],
        [0.9410, 0.9508, 0.9590,  ..., 0.9716, 0.9572, 0.9692],
        [0.9388, 0.9490, 0.9449,  ..., 0.9587, 0.9530, 0.9659],
        ...,
        [0.9361, 0.9467, 0.9285,  ..., 0.9436, 0.9479, 0.9619],
        [0.9430, 0.9525, 0.9727,  ..., 0.9841, 0.9611, 0.9723],
        [0.9476, 0.9563, 1.0060,  ..., 1.0138, 0.9701, 0.9792]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6971],
         [11.6223],
         [26.0360],
         ...,
         [26.3598],
         [13.6213],
         [13.1193]],
        [[10.8216],
         [10.8147],
         [23.9832],
         ...,
         [24.4898],
         [11.4051],
         [10.8889]],
        [[10.7179],
         [10.7187],
         [23.7406],
         ...,
         [24.2678],
         [11.1571],
         [10.6406]],
        ...,
        [[10.5906],
         [10.6007],
         [23.4429],
         ...,
         [23.9950],
         [10.8568],
         [10.3403]],
        [[10.9183],
         [10.9041],
         [24.2093],
         ...,
         [24.6967],
         [11.6389],
         [11.1233]],
        [[11.1346],
         [11.1039],
         [24.7160],
         ...,
         [25.1592],
         [12.1720],
         [11.6585]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9911, 0.9901, 1.1806,  ..., 1.1849, 1.0165, 1.0099],
        [0.9796, 0.9795, 1.1535,  ..., 1.1602, 0.9873, 0.9804],
        [0.9782, 0.9782, 1.1503,  ..., 1.1572, 0.9840, 0.9772],
        ...,
        [0.9765, 0.9766, 1.1463,  ..., 1.1536, 0.9800, 0.9732],
        [0.9808, 0.9806, 1.1565,  ..., 1.1629, 0.9904, 0.9835],
        [0.9837, 0.9833, 1.1632,  ..., 1.1690, 0.9974, 0.9906]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7894],
         [12.7729],
         [11.0704],
         ...,
         [10.1887],
         [12.8769],
         [12.9393]],
        [[ 8.0112],
         [ 8.0357],
         [ 8.3234],
         ...,
         [ 8.8015],
         [ 7.8734],
         [ 7.8087]],
        [[ 7.5605],
         [ 7.5876],
         [ 8.0346],
         ...,
         [ 8.6435],
         [ 7.4082],
         [ 7.3355]],
        ...,
        [[ 7.0362],
         [ 7.0662],
         [ 7.6901],
         ...,
         [ 8.4513],
         [ 6.8689],
         [ 6.7878]],
        [[ 8.4511],
         [ 8.4727],
         [ 8.5991],
         ...,
         [ 8.9500],
         [ 8.3287],
         [ 8.2727]],
        [[ 9.5093],
         [ 9.5232],
         [ 9.2404],
         ...,
         [ 9.2865],
         [ 9.4289],
         [ 9.3964]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9818, 0.9815, 0.9450,  ..., 0.9260, 0.9837, 0.9850],
        [0.8794, 0.8799, 0.8860,  ..., 0.8963, 0.8764, 0.8750],
        [0.8697, 0.8703, 0.8799,  ..., 0.8929, 0.8664, 0.8649],
        ...,
        [0.8584, 0.8591, 0.8725,  ..., 0.8888, 0.8549, 0.8531],
        [0.8888, 0.8892, 0.8920,  ..., 0.8995, 0.8862, 0.8850],
        [0.9115, 0.9118, 0.9057,  ..., 0.9067, 0.9097, 0.9091]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9634],
         [15.2422],
         [24.4238],
         ...,
         [24.6745],
         [18.7311],
         [17.0006]],
        [[14.0003],
         [14.4038],
         [15.1280],
         ...,
         [15.4102],
         [15.5128],
         [15.0353]],
        [[13.8855],
         [14.3033],
         [14.2570],
         ...,
         [14.5378],
         [15.1550],
         [14.8084]],
        ...,
        [[13.7443],
         [14.1795],
         [13.2454],
         ...,
         [13.5235],
         [14.7223],
         [14.5315]],
        [[14.1072],
         [14.4972],
         [15.9793],
         ...,
         [16.2619],
         [15.8507],
         [15.2479]],
        [[14.3459],
         [14.7055],
         [18.0310],
         ...,
         [18.3118],
         [16.6225],
         [15.7277]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9670, 0.9716, 1.1209,  ..., 1.1250, 1.0283, 1.0002],
        [0.9514, 0.9579, 0.9697,  ..., 0.9743, 0.9760, 0.9682],
        [0.9495, 0.9563, 0.9556,  ..., 0.9601, 0.9702, 0.9645],
        ...,
        [0.9472, 0.9543, 0.9391,  ..., 0.9436, 0.9631, 0.9600],
        [0.9531, 0.9595, 0.9836,  ..., 0.9882, 0.9815, 0.9717],
        [0.9570, 0.9628, 1.0169,  ..., 1.0215, 0.9940, 0.9795]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7469],
         [11.5749],
         [25.9764],
         ...,
         [26.3417],
         [13.9646],
         [14.1710]],
        [[10.8261],
         [10.8066],
         [23.8828],
         ...,
         [24.4641],
         [11.4184],
         [10.9354]],
        [[10.7172],
         [10.7151],
         [23.6357],
         ...,
         [24.2412],
         [11.1373],
         [10.5902]],
        ...,
        [[10.5836],
         [10.6026],
         [23.3325],
         ...,
         [23.9674],
         [10.7981],
         [10.1767]],
        [[10.9275],
         [10.8917],
         [24.1133],
         ...,
         [24.6718],
         [11.6841],
         [11.2642]],
        [[11.1548],
         [11.0820],
         [24.6297],
         ...,
         [25.1362],
         [12.2926],
         [12.0251]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9829, 1.1733,  ..., 1.1781, 1.0145, 1.0172],
        [0.9730, 0.9728, 1.1456,  ..., 1.1533, 0.9809, 0.9745],
        [0.9716, 0.9716, 1.1423,  ..., 1.1503, 0.9771, 0.9699],
        ...,
        [0.9698, 0.9701, 1.1383,  ..., 1.1467, 0.9727, 0.9645],
        [0.9744, 0.9739, 1.1486,  ..., 1.1560, 0.9844, 0.9788],
        [0.9774, 0.9764, 1.1555,  ..., 1.1622, 0.9924, 0.9889]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7800],
         [12.8879],
         [11.0251],
         ...,
         [10.3990],
         [12.5214],
         [13.0756]],
        [[ 8.0250],
         [ 7.8738],
         [ 8.3487],
         ...,
         [ 8.8196],
         [ 8.4934],
         [ 7.6623]],
        [[ 7.5758],
         [ 7.4078],
         [ 8.0662],
         ...,
         [ 8.6415],
         [ 8.0950],
         [ 7.1718]],
        ...,
        [[ 7.0531],
         [ 6.8677],
         [ 7.7289],
         ...,
         [ 8.4256],
         [ 7.6263],
         [ 6.6064]],
        [[ 8.4634],
         [ 8.3299],
         [ 8.6183],
         ...,
         [ 8.9872],
         [ 8.8787],
         [ 8.1449]],
        [[ 9.5171],
         [ 9.4321],
         [ 9.2443],
         ...,
         [ 9.3684],
         [ 9.7917],
         [ 9.3201]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9770, 0.9793, 0.9393,  ..., 0.9259, 0.9714, 0.9833],
        [0.8750, 0.8718, 0.8819,  ..., 0.8920, 0.8850, 0.8672],
        [0.8654, 0.8618, 0.8759,  ..., 0.8882, 0.8765, 0.8567],
        ...,
        [0.8542, 0.8502, 0.8686,  ..., 0.8836, 0.8664, 0.8446],
        [0.8844, 0.8815, 0.8877,  ..., 0.8956, 0.8933, 0.8776],
        [0.9070, 0.9052, 0.9011,  ..., 0.9038, 0.9129, 0.9028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0908],
         [15.4791],
         [24.3642],
         ...,
         [24.1490],
         [17.5748],
         [17.3600]],
        [[13.9970],
         [14.5594],
         [15.1074],
         ...,
         [15.7731],
         [15.0922],
         [15.5798]],
        [[13.8672],
         [14.4495],
         [14.2396],
         ...,
         [14.9630],
         [14.8104],
         [15.3725]],
        ...,
        [[13.7078],
         [14.3141],
         [13.2314],
         ...,
         [14.0151],
         [14.4679],
         [15.1190]],
        [[14.1179],
         [14.6617],
         [15.9556],
         ...,
         [16.5599],
         [15.3572],
         [15.7736]],
        [[14.3884],
         [14.8900],
         [17.9994],
         ...,
         [18.4378],
         [15.9585],
         [16.2099]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9606, 0.9669, 1.1114,  ..., 1.1079, 1.0010, 0.9975],
        [0.9428, 0.9520, 0.9609,  ..., 0.9717, 0.9606, 0.9686],
        [0.9407, 0.9502, 0.9468,  ..., 0.9585, 0.9560, 0.9652],
        ...,
        [0.9381, 0.9480, 0.9304,  ..., 0.9431, 0.9505, 0.9611],
        [0.9448, 0.9536, 0.9747,  ..., 0.9845, 0.9649, 0.9717],
        [0.9492, 0.9573, 1.0079,  ..., 1.0150, 0.9747, 0.9788]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6908],
         [11.6440],
         [26.0385],
         ...,
         [26.3727],
         [13.1873],
         [12.6411]],
        [[10.8210],
         [10.8158],
         [23.9784],
         ...,
         [24.5081],
         [11.1409],
         [10.8815]],
        [[10.7179],
         [10.7175],
         [23.7349],
         ...,
         [24.2866],
         [10.9107],
         [10.6815]],
        ...,
        [[10.5914],
         [10.5967],
         [23.4362],
         ...,
         [24.0146],
         [10.6317],
         [10.4383]],
        [[10.9171],
         [10.9074],
         [24.2053],
         ...,
         [24.7143],
         [11.3577],
         [11.0695]],
        [[11.1320],
         [11.1123],
         [24.7137],
         ...,
         [25.1756],
         [11.8511],
         [11.4960]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9946, 0.9940, 1.1843,  ..., 1.1887, 1.0144, 1.0072],
        [0.9832, 0.9831, 1.1570,  ..., 1.1640, 0.9874, 0.9840],
        [0.9818, 0.9818, 1.1538,  ..., 1.1611, 0.9843, 0.9813],
        ...,
        [0.9801, 0.9802, 1.1499,  ..., 1.1575, 0.9807, 0.9781],
        [0.9844, 0.9843, 1.1600,  ..., 1.1668, 0.9902, 0.9864],
        [0.9873, 0.9870, 1.1668,  ..., 1.1729, 0.9968, 0.9921]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8264],
         [12.8728],
         [11.3036],
         ...,
         [10.1760],
         [12.8964],
         [12.7397]],
        [[ 7.9578],
         [ 7.8938],
         [ 8.2811],
         ...,
         [ 8.8042],
         [ 7.8627],
         [ 8.0861]],
        [[ 7.5012],
         [ 7.4301],
         [ 7.9682],
         ...,
         [ 8.6478],
         [ 7.3955],
         [ 7.6436]],
        ...,
        [[ 6.9707],
         [ 6.8923],
         [ 7.5962],
         ...,
         [ 8.4576],
         [ 6.8541],
         [ 7.1280]],
        [[ 8.4040],
         [ 8.3476],
         [ 8.5809],
         ...,
         [ 8.9512],
         [ 8.3202],
         [ 8.5173]],
        [[ 9.4791],
         [ 9.4432],
         [ 9.2813],
         ...,
         [ 9.2841],
         [ 9.4260],
         [ 9.5519]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9843, 0.9853, 0.9516,  ..., 0.9275, 0.9858, 0.9824],
        [0.8799, 0.8785, 0.8868,  ..., 0.8981, 0.8779, 0.8827],
        [0.8701, 0.8686, 0.8801,  ..., 0.8947, 0.8678, 0.8732],
        ...,
        [0.8587, 0.8571, 0.8721,  ..., 0.8906, 0.8562, 0.8621],
        [0.8895, 0.8883, 0.8933,  ..., 0.9012, 0.8877, 0.8919],
        [0.9125, 0.9118, 0.9083,  ..., 0.9083, 0.9114, 0.9141]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8953],
         [15.0547],
         [24.3642],
         ...,
         [24.8437],
         [15.2736],
         [17.0389]],
        [[13.9383],
         [14.1889],
         [15.1556],
         ...,
         [15.3238],
         [14.4963],
         [15.0149]],
        [[13.8242],
         [14.0852],
         [14.2906],
         ...,
         [14.4341],
         [14.4029],
         [14.7817]],
        ...,
        [[13.6838],
         [13.9576],
         [13.2854],
         ...,
         [13.4013],
         [14.2878],
         [14.4973]],
        [[14.0445],
         [14.2852],
         [16.0007],
         ...,
         [16.1939],
         [14.5831],
         [15.2335]],
        [[14.2817],
         [14.5002],
         [18.0357],
         ...,
         [18.2925],
         [14.7765],
         [15.7271]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9697, 0.9723, 1.1237,  ..., 1.1315, 0.9758, 1.0046],
        [0.9541, 0.9582, 0.9739,  ..., 0.9767, 0.9632, 0.9716],
        [0.9523, 0.9565, 0.9599,  ..., 0.9622, 0.9617, 0.9678],
        ...,
        [0.9500, 0.9544, 0.9435,  ..., 0.9454, 0.9598, 0.9632],
        [0.9558, 0.9598, 0.9877,  ..., 0.9908, 0.9646, 0.9752],
        [0.9597, 0.9633, 1.0208,  ..., 1.0249, 0.9678, 0.9832]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7368],
         [11.5856],
         [25.9867],
         ...,
         [26.3470],
         [13.8172],
         [13.8903]],
        [[10.8252],
         [10.8084],
         [23.8995],
         ...,
         [24.4718],
         [11.3688],
         [10.9239]],
        [[10.7174],
         [10.7159],
         [23.6530],
         ...,
         [24.2491],
         [11.0976],
         [10.6039]],
        ...,
        [[10.5851],
         [10.6021],
         [23.3507],
         ...,
         [23.9756],
         [10.7700],
         [10.2196]],
        [[10.9257],
         [10.8945],
         [24.1293],
         ...,
         [24.6791],
         [11.6251],
         [11.2280]],
        [[11.1508],
         [11.0870],
         [24.6442],
         ...,
         [25.1430],
         [12.2112],
         [11.9293]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 0.9848, 1.1751,  ..., 1.1798, 1.0142, 1.0152],
        [0.9747, 0.9745, 1.1475,  ..., 1.1551, 0.9819, 0.9760],
        [0.9733, 0.9733, 1.1442,  ..., 1.1521, 0.9783, 0.9718],
        ...,
        [0.9715, 0.9718, 1.1402,  ..., 1.1485, 0.9740, 0.9667],
        [0.9760, 0.9756, 1.1505,  ..., 1.1578, 0.9853, 0.9800],
        [0.9790, 0.9782, 1.1573,  ..., 1.1639, 0.9930, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7881],
         [12.8853],
         [11.0327],
         ...,
         [10.3373],
         [12.5781],
         [13.0184]],
        [[ 8.0130],
         [ 7.8772],
         [ 8.3139],
         ...,
         [ 8.8078],
         [ 8.3641],
         [ 7.7188]],
        [[ 7.5625],
         [ 7.4117],
         [ 8.0278],
         ...,
         [ 8.6350],
         [ 7.9522],
         [ 7.2352]],
        ...,
        [[ 7.0384],
         [ 6.8719],
         [ 7.6862],
         ...,
         [ 8.4251],
         [ 7.4689],
         [ 6.6768]],
        [[ 8.4528],
         [ 8.3329],
         [ 8.5871],
         ...,
         [ 8.9705],
         [ 8.7634],
         [ 8.1940]],
        [[ 9.5103],
         [ 9.4340],
         [ 9.2222],
         ...,
         [ 9.3401],
         [ 9.7131],
         [ 9.3486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9789, 0.9810, 0.9413,  ..., 0.9264, 0.9744, 0.9839],
        [0.8765, 0.8736, 0.8830,  ..., 0.8936, 0.8841, 0.8702],
        [0.8669, 0.8637, 0.8769,  ..., 0.8899, 0.8752, 0.8599],
        ...,
        [0.8556, 0.8521, 0.8695,  ..., 0.8854, 0.8649, 0.8479],
        [0.8860, 0.8834, 0.8889,  ..., 0.8971, 0.8926, 0.8804],
        [0.9087, 0.9070, 0.9025,  ..., 0.9050, 0.9130, 0.9052]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0542],
         [15.3984],
         [24.3643],
         ...,
         [24.2729],
         [17.1528],
         [17.2999]],
        [[13.9870],
         [14.4942],
         [15.1158],
         ...,
         [15.6907],
         [14.9705],
         [15.4790]],
        [[13.8602],
         [14.3861],
         [14.2484],
         ...,
         [14.8658],
         [14.7204],
         [15.2674]],
        ...,
        [[13.7045],
         [14.2530],
         [13.2407],
         ...,
         [13.9019],
         [14.4158],
         [15.0087]],
        [[14.1050],
         [14.5948],
         [15.9634],
         ...,
         [16.4929],
         [15.2051],
         [15.6770]],
        [[14.3690],
         [14.8193],
         [18.0057],
         ...,
         [18.4112],
         [15.7360],
         [16.1229]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9618, 0.9674, 1.1132,  ..., 1.1117, 0.9959, 0.9983],
        [0.9444, 0.9527, 0.9628,  ..., 0.9721, 0.9604, 0.9687],
        [0.9424, 0.9509, 0.9487,  ..., 0.9587, 0.9564, 0.9652],
        ...,
        [0.9398, 0.9487, 0.9323,  ..., 0.9430, 0.9514, 0.9610],
        [0.9463, 0.9543, 0.9766,  ..., 0.9852, 0.9642, 0.9719],
        [0.9506, 0.9580, 1.0098,  ..., 1.0164, 0.9729, 0.9792]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7448],
         [11.5770],
         [25.9785],
         ...,
         [26.3428],
         [13.9340],
         [14.1129]],
        [[10.8259],
         [10.8070],
         [23.8862],
         ...,
         [24.4657],
         [11.4081],
         [10.9330]],
        [[10.7173],
         [10.7153],
         [23.6393],
         ...,
         [24.2428],
         [11.1292],
         [10.5929]],
        ...,
        [[10.5839],
         [10.6025],
         [23.3362],
         ...,
         [23.9691],
         [10.7924],
         [10.1854]],
        [[10.9272],
         [10.8923],
         [24.1166],
         ...,
         [24.6733],
         [11.6719],
         [11.2567]],
        [[11.1540],
         [11.0830],
         [24.6327],
         ...,
         [25.1376],
         [12.2757],
         [12.0053]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 0.9833, 1.1736,  ..., 1.1784, 1.0145, 1.0168],
        [0.9734, 0.9731, 1.1460,  ..., 1.1536, 0.9811, 0.9748],
        [0.9719, 0.9719, 1.1427,  ..., 1.1507, 0.9774, 0.9703],
        ...,
        [0.9702, 0.9704, 1.1387,  ..., 1.1471, 0.9729, 0.9649],
        [0.9747, 0.9743, 1.1490,  ..., 1.1564, 0.9846, 0.9791],
        [0.9777, 0.9768, 1.1558,  ..., 1.1625, 0.9925, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7817],
         [12.8874],
         [11.0250],
         ...,
         [10.3856],
         [12.5328],
         [13.0639]],
        [[ 8.0226],
         [ 7.8745],
         [ 8.3408],
         ...,
         [ 8.8168],
         [ 8.4662],
         [ 7.6733]],
        [[ 7.5731],
         [ 7.4086],
         [ 8.0576],
         ...,
         [ 8.6399],
         [ 8.0649],
         [ 7.1842]],
        ...,
        [[ 7.0501],
         [ 6.8686],
         [ 7.7195],
         ...,
         [ 8.4252],
         [ 7.5932],
         [ 6.6202]],
        [[ 8.4612],
         [ 8.3305],
         [ 8.6110],
         ...,
         [ 8.9834],
         [ 8.8544],
         [ 8.1545]],
        [[ 9.5157],
         [ 9.4325],
         [ 9.2388],
         ...,
         [ 9.3622],
         [ 9.7751],
         [ 9.3255]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9773, 0.9796, 0.9397,  ..., 0.9260, 0.9720, 0.9834],
        [0.8753, 0.8721, 0.8821,  ..., 0.8923, 0.8848, 0.8678],
        [0.8657, 0.8621, 0.8760,  ..., 0.8885, 0.8762, 0.8573],
        ...,
        [0.8544, 0.8506, 0.8688,  ..., 0.8839, 0.8661, 0.8452],
        [0.8847, 0.8819, 0.8879,  ..., 0.8959, 0.8931, 0.8781],
        [0.9073, 0.9055, 0.9014,  ..., 0.9040, 0.9129, 0.9032]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0833],
         [15.4623],
         [24.3642],
         ...,
         [24.1746],
         [17.4889],
         [17.3476]],
        [[13.9950],
         [14.5460],
         [15.1091],
         ...,
         [15.7560],
         [15.0665],
         [15.5590]],
        [[13.8658],
         [14.4364],
         [14.2414],
         ...,
         [14.9429],
         [14.7909],
         [15.3508]],
        ...,
        [[13.7072],
         [14.3016],
         [13.2333],
         ...,
         [13.9916],
         [14.4560],
         [15.0963]],
        [[14.1152],
         [14.6479],
         [15.9572],
         ...,
         [16.5461],
         [15.3254],
         [15.7537]],
        [[14.3844],
         [14.8754],
         [18.0007],
         ...,
         [18.4323],
         [15.9126],
         [16.1920]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9608, 0.9670, 1.1118,  ..., 1.1087, 1.0000, 0.9977],
        [0.9431, 0.9521, 0.9613,  ..., 0.9718, 0.9606, 0.9686],
        [0.9410, 0.9503, 0.9471,  ..., 0.9586, 0.9561, 0.9652],
        ...,
        [0.9385, 0.9481, 0.9307,  ..., 0.9431, 0.9506, 0.9610],
        [0.9451, 0.9538, 0.9751,  ..., 0.9846, 0.9648, 0.9717],
        [0.9495, 0.9575, 1.0083,  ..., 1.0153, 0.9743, 0.9789]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7395],
         [11.5827],
         [25.9839],
         ...,
         [26.3456],
         [13.8566],
         [13.9656]],
        [[10.8255],
         [10.8079],
         [23.8950],
         ...,
         [24.4697],
         [11.3821],
         [10.9270]],
        [[10.7174],
         [10.7157],
         [23.6484],
         ...,
         [24.2470],
         [11.1083],
         [10.6001]],
        ...,
        [[10.5847],
         [10.6023],
         [23.3458],
         ...,
         [23.9734],
         [10.7776],
         [10.2079]],
        [[10.9262],
         [10.8937],
         [24.1249],
         ...,
         [24.6772],
         [11.6409],
         [11.2377]],
        [[11.1519],
         [11.0856],
         [24.6403],
         ...,
         [25.1412],
         [12.2330],
         [11.9550]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9843, 1.1746,  ..., 1.1794, 1.0143, 1.0157],
        [0.9743, 0.9740, 1.1470,  ..., 1.1546, 0.9816, 0.9756],
        [0.9728, 0.9728, 1.1437,  ..., 1.1516, 0.9780, 0.9713],
        ...,
        [0.9711, 0.9713, 1.1397,  ..., 1.1480, 0.9736, 0.9661],
        [0.9756, 0.9752, 1.1500,  ..., 1.1573, 0.9850, 0.9797],
        [0.9786, 0.9777, 1.1568,  ..., 1.1634, 0.9929, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7859],
         [12.8860],
         [11.0287],
         ...,
         [10.3531],
         [12.5624],
         [13.0339]],
        [[ 8.0163],
         [ 7.8763],
         [ 8.3224],
         ...,
         [ 8.8106],
         [ 8.3982],
         [ 7.7029]],
        [[ 7.5661],
         [ 7.4106],
         [ 8.0373],
         ...,
         [ 8.6364],
         [ 7.9898],
         [ 7.2173]],
        ...,
        [[ 7.0424],
         [ 6.8708],
         [ 7.6970],
         ...,
         [ 8.4249],
         [ 7.5105],
         [ 6.6570]],
        [[ 8.4556],
         [ 8.3321],
         [ 8.5945],
         ...,
         [ 8.9746],
         [ 8.7937],
         [ 8.1801]],
        [[ 9.5122],
         [ 9.4335],
         [ 9.2270],
         ...,
         [ 9.3472],
         [ 9.7337],
         [ 9.3404]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9805, 0.9407,  ..., 0.9262, 0.9736, 0.9837],
        [0.8761, 0.8731, 0.8827,  ..., 0.8931, 0.8843, 0.8694],
        [0.8665, 0.8631, 0.8766,  ..., 0.8894, 0.8755, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8693,  ..., 0.8849, 0.8653, 0.8470],
        [0.8855, 0.8829, 0.8885,  ..., 0.8967, 0.8928, 0.8796],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9129, 0.9045]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0640],
         [15.4199],
         [24.3643],
         ...,
         [24.2396],
         [17.2676],
         [17.3160]],
        [[13.9897],
         [14.5118],
         [15.1135],
         ...,
         [15.7128],
         [15.0024],
         [15.5061]],
        [[13.8621],
         [14.4032],
         [14.2460],
         ...,
         [14.8918],
         [14.7435],
         [15.2957]],
        ...,
        [[13.7055],
         [14.2695],
         [13.2382],
         ...,
         [13.9322],
         [14.4284],
         [15.0384]],
        [[14.1085],
         [14.6128],
         [15.9613],
         ...,
         [16.5109],
         [15.2455],
         [15.7030]],
        [[14.3742],
         [14.8382],
         [18.0040],
         ...,
         [18.4184],
         [15.7958],
         [16.1463]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9614, 0.9672, 1.1127,  ..., 1.1107, 0.9973, 0.9981],
        [0.9440, 0.9525, 0.9623,  ..., 0.9720, 0.9604, 0.9686],
        [0.9419, 0.9507, 0.9481,  ..., 0.9586, 0.9562, 0.9652],
        ...,
        [0.9394, 0.9485, 0.9318,  ..., 0.9430, 0.9511, 0.9610],
        [0.9459, 0.9541, 0.9760,  ..., 0.9850, 0.9644, 0.9718],
        [0.9502, 0.9578, 1.0093,  ..., 1.0160, 0.9734, 0.9791]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7438],
         [11.5781],
         [25.9796],
         ...,
         [26.3434],
         [13.9184],
         [14.0834]],
        [[10.8258],
         [10.8071],
         [23.8880],
         ...,
         [24.4665],
         [11.4029],
         [10.9318]],
        [[10.7173],
         [10.7154],
         [23.6411],
         ...,
         [24.2437],
         [11.1250],
         [10.5943]],
        ...,
        [[10.5841],
         [10.6025],
         [23.3381],
         ...,
         [23.9699],
         [10.7894],
         [10.1899]],
        [[10.9270],
         [10.8926],
         [24.1182],
         ...,
         [24.6741],
         [11.6657],
         [11.2529]],
        [[11.1536],
         [11.0836],
         [24.6342],
         ...,
         [25.1383],
         [12.2672],
         [11.9953]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9857, 0.9835, 1.1738,  ..., 1.1786, 1.0144, 1.0166],
        [0.9735, 0.9733, 1.1462,  ..., 1.1538, 0.9812, 0.9749],
        [0.9721, 0.9721, 1.1429,  ..., 1.1509, 0.9775, 0.9705],
        ...,
        [0.9704, 0.9706, 1.1389,  ..., 1.1473, 0.9731, 0.9651],
        [0.9749, 0.9744, 1.1492,  ..., 1.1566, 0.9846, 0.9792],
        [0.9779, 0.9770, 1.1560,  ..., 1.1627, 0.9926, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7825],
         [12.8871],
         [11.0253],
         ...,
         [10.3790],
         [12.5386],
         [13.0579]],
        [[ 8.0213],
         [ 7.8748],
         [ 8.3369],
         ...,
         [ 8.8155],
         [ 8.4524],
         [ 7.6791]],
        [[ 7.5717],
         [ 7.4090],
         [ 8.0534],
         ...,
         [ 8.6391],
         [ 8.0497],
         [ 7.1906]],
        ...,
        [[ 7.0486],
         [ 6.8690],
         [ 7.7148],
         ...,
         [ 8.4251],
         [ 7.5764],
         [ 6.6274]],
        [[ 8.4601],
         [ 8.3308],
         [ 8.6075],
         ...,
         [ 8.9815],
         [ 8.8421],
         [ 8.1594]],
        [[ 9.5150],
         [ 9.4327],
         [ 9.2361],
         ...,
         [ 9.3591],
         [ 9.7667],
         [ 9.3284]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9798, 0.9399,  ..., 0.9260, 0.9723, 0.9835],
        [0.8755, 0.8723, 0.8822,  ..., 0.8925, 0.8847, 0.8681],
        [0.8658, 0.8623, 0.8761,  ..., 0.8887, 0.8761, 0.8576],
        ...,
        [0.8546, 0.8507, 0.8689,  ..., 0.8841, 0.8659, 0.8456],
        [0.8849, 0.8821, 0.8880,  ..., 0.8960, 0.8931, 0.8784],
        [0.9075, 0.9057, 0.9015,  ..., 0.9041, 0.9129, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0794],
         [15.4538],
         [24.3642],
         ...,
         [24.1876],
         [17.4449],
         [17.3413]],
        [[13.9939],
         [14.5392],
         [15.1100],
         ...,
         [15.7474],
         [15.0535],
         [15.5484]],
        [[13.8651],
         [14.4298],
         [14.2423],
         ...,
         [14.9326],
         [14.7812],
         [15.3398]],
        ...,
        [[13.7068],
         [14.2952],
         [13.2343],
         ...,
         [13.9797],
         [14.4501],
         [15.0847]],
        [[14.1139],
         [14.6409],
         [15.9580],
         ...,
         [16.5390],
         [15.3093],
         [15.7436]],
        [[14.3823],
         [14.8679],
         [18.0013],
         ...,
         [18.4295],
         [15.8892],
         [16.1829]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9610, 0.9670, 1.1120,  ..., 1.1091, 0.9994, 0.9977],
        [0.9433, 0.9522, 0.9615,  ..., 0.9718, 0.9605, 0.9686],
        [0.9412, 0.9504, 0.9473,  ..., 0.9586, 0.9561, 0.9652],
        ...,
        [0.9386, 0.9482, 0.9309,  ..., 0.9431, 0.9507, 0.9610],
        [0.9453, 0.9538, 0.9752,  ..., 0.9847, 0.9647, 0.9718],
        [0.9496, 0.9575, 1.0085,  ..., 1.0154, 0.9741, 0.9789]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7446],
         [11.5773],
         [25.9787],
         ...,
         [26.3429],
         [13.9307],
         [14.1068]],
        [[10.8259],
         [10.8070],
         [23.8866],
         ...,
         [24.4659],
         [11.4070],
         [10.9328]],
        [[10.7173],
         [10.7153],
         [23.6396],
         ...,
         [24.2430],
         [11.1283],
         [10.5932]],
        ...,
        [[10.5840],
         [10.6025],
         [23.3366],
         ...,
         [23.9692],
         [10.7917],
         [10.1863]],
        [[10.9271],
         [10.8924],
         [24.1169],
         ...,
         [24.6734],
         [11.6706],
         [11.2559]],
        [[11.1539],
         [11.0831],
         [24.6330],
         ...,
         [25.1377],
         [12.2739],
         [12.0032]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9856, 0.9833, 1.1737,  ..., 1.1785, 1.0144, 1.0168],
        [0.9734, 0.9732, 1.1460,  ..., 1.1537, 0.9811, 0.9748],
        [0.9720, 0.9720, 1.1428,  ..., 1.1507, 0.9774, 0.9703],
        ...,
        [0.9702, 0.9705, 1.1387,  ..., 1.1471, 0.9730, 0.9650],
        [0.9747, 0.9743, 1.1491,  ..., 1.1564, 0.9846, 0.9791],
        [0.9777, 0.9768, 1.1559,  ..., 1.1626, 0.9925, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7818],
         [12.8873],
         [11.0250],
         ...,
         [10.3842],
         [12.5340],
         [13.0626]],
        [[ 8.0223],
         [ 7.8745],
         [ 8.3400],
         ...,
         [ 8.8166],
         [ 8.4633],
         [ 7.6745]],
        [[ 7.5728],
         [ 7.4087],
         [ 8.0567],
         ...,
         [ 8.6397],
         [ 8.0617],
         [ 7.1855]],
        ...,
        [[ 7.0498],
         [ 6.8687],
         [ 7.7185],
         ...,
         [ 8.4252],
         [ 7.5897],
         [ 6.6217]],
        [[ 8.4609],
         [ 8.3306],
         [ 8.6103],
         ...,
         [ 8.9830],
         [ 8.8518],
         [ 8.1555]],
        [[ 9.5156],
         [ 9.4325],
         [ 9.2382],
         ...,
         [ 9.3615],
         [ 9.7733],
         [ 9.3261]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9774, 0.9797, 0.9397,  ..., 0.9260, 0.9721, 0.9834],
        [0.8753, 0.8722, 0.8821,  ..., 0.8924, 0.8848, 0.8679],
        [0.8657, 0.8622, 0.8761,  ..., 0.8886, 0.8762, 0.8574],
        ...,
        [0.8545, 0.8506, 0.8688,  ..., 0.8840, 0.8661, 0.8453],
        [0.8847, 0.8819, 0.8879,  ..., 0.8959, 0.8931, 0.8782],
        [0.9074, 0.9056, 0.9014,  ..., 0.9040, 0.9129, 0.9033]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0824],
         [15.4606],
         [24.3642],
         ...,
         [24.1773],
         [17.4797],
         [17.3463]],
        [[13.9947],
         [14.5446],
         [15.1093],
         ...,
         [15.7542],
         [15.0637],
         [15.5568]],
        [[13.8657],
         [14.4351],
         [14.2416],
         ...,
         [14.9407],
         [14.7889],
         [15.3485]],
        ...,
        [[13.7071],
         [14.3002],
         [13.2335],
         ...,
         [13.9892],
         [14.4547],
         [15.0939]],
        [[14.1150],
         [14.6465],
         [15.9573],
         ...,
         [16.5446],
         [15.3220],
         [15.7516]],
        [[14.3839],
         [14.8738],
         [18.0008],
         ...,
         [18.4317],
         [15.9077],
         [16.1901]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9609, 0.9670, 1.1118,  ..., 1.1088, 0.9999, 0.9977],
        [0.9432, 0.9521, 0.9613,  ..., 0.9718, 0.9606, 0.9686],
        [0.9411, 0.9503, 0.9472,  ..., 0.9586, 0.9561, 0.9652],
        ...,
        [0.9385, 0.9481, 0.9308,  ..., 0.9431, 0.9507, 0.9610],
        [0.9451, 0.9538, 0.9751,  ..., 0.9846, 0.9648, 0.9717],
        [0.9495, 0.9575, 1.0083,  ..., 1.0153, 0.9743, 0.9789]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7448],
         [11.5770],
         [25.9785],
         ...,
         [26.3428],
         [13.9340],
         [14.1129]],
        [[10.8259],
         [10.8070],
         [23.8862],
         ...,
         [24.4657],
         [11.4081],
         [10.9330]],
        [[10.7173],
         [10.7153],
         [23.6393],
         ...,
         [24.2428],
         [11.1292],
         [10.5929]],
        ...,
        [[10.5839],
         [10.6025],
         [23.3362],
         ...,
         [23.9691],
         [10.7924],
         [10.1854]],
        [[10.9272],
         [10.8923],
         [24.1166],
         ...,
         [24.6733],
         [11.6719],
         [11.2567]],
        [[11.1540],
         [11.0830],
         [24.6327],
         ...,
         [25.1376],
         [12.2757],
         [12.0053]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 0.9833, 1.1736,  ..., 1.1784, 1.0145, 1.0168],
        [0.9734, 0.9731, 1.1460,  ..., 1.1536, 0.9811, 0.9748],
        [0.9719, 0.9719, 1.1427,  ..., 1.1507, 0.9774, 0.9703],
        ...,
        [0.9702, 0.9704, 1.1387,  ..., 1.1471, 0.9729, 0.9649],
        [0.9747, 0.9743, 1.1490,  ..., 1.1564, 0.9846, 0.9791],
        [0.9777, 0.9768, 1.1558,  ..., 1.1625, 0.9925, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7817],
         [12.8874],
         [11.0250],
         ...,
         [10.3856],
         [12.5328],
         [13.0639]],
        [[ 8.0226],
         [ 7.8745],
         [ 8.3408],
         ...,
         [ 8.8168],
         [ 8.4662],
         [ 7.6733]],
        [[ 7.5731],
         [ 7.4086],
         [ 8.0576],
         ...,
         [ 8.6399],
         [ 8.0649],
         [ 7.1842]],
        ...,
        [[ 7.0501],
         [ 6.8686],
         [ 7.7195],
         ...,
         [ 8.4252],
         [ 7.5932],
         [ 6.6202]],
        [[ 8.4612],
         [ 8.3305],
         [ 8.6110],
         ...,
         [ 8.9834],
         [ 8.8544],
         [ 8.1545]],
        [[ 9.5157],
         [ 9.4325],
         [ 9.2388],
         ...,
         [ 9.3622],
         [ 9.7751],
         [ 9.3255]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9773, 0.9796, 0.9397,  ..., 0.9260, 0.9720, 0.9834],
        [0.8753, 0.8721, 0.8821,  ..., 0.8923, 0.8848, 0.8678],
        [0.8657, 0.8621, 0.8760,  ..., 0.8885, 0.8762, 0.8573],
        ...,
        [0.8544, 0.8506, 0.8688,  ..., 0.8839, 0.8661, 0.8452],
        [0.8847, 0.8819, 0.8879,  ..., 0.8959, 0.8931, 0.8781],
        [0.9073, 0.9055, 0.9014,  ..., 0.9040, 0.9129, 0.9032]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0833],
         [15.4623],
         [24.3642],
         ...,
         [24.1746],
         [17.4889],
         [17.3476]],
        [[13.9950],
         [14.5460],
         [15.1091],
         ...,
         [15.7560],
         [15.0665],
         [15.5590]],
        [[13.8658],
         [14.4364],
         [14.2414],
         ...,
         [14.9429],
         [14.7909],
         [15.3508]],
        ...,
        [[13.7072],
         [14.3016],
         [13.2333],
         ...,
         [13.9916],
         [14.4560],
         [15.0963]],
        [[14.1152],
         [14.6479],
         [15.9572],
         ...,
         [16.5461],
         [15.3254],
         [15.7537]],
        [[14.3844],
         [14.8754],
         [18.0007],
         ...,
         [18.4323],
         [15.9126],
         [16.1920]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9608, 0.9670, 1.1118,  ..., 1.1087, 1.0000, 0.9977],
        [0.9431, 0.9521, 0.9613,  ..., 0.9718, 0.9606, 0.9686],
        [0.9410, 0.9503, 0.9471,  ..., 0.9586, 0.9561, 0.9652],
        ...,
        [0.9385, 0.9481, 0.9307,  ..., 0.9431, 0.9506, 0.9610],
        [0.9451, 0.9538, 0.9751,  ..., 0.9846, 0.9648, 0.9717],
        [0.9495, 0.9575, 1.0083,  ..., 1.0153, 0.9743, 0.9789]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6832],
         [11.6527],
         [26.3889],
         ...,
         [26.3203],
         [12.8467],
         [12.4595]],
        [[10.8202],
         [10.8169],
         [24.5468],
         ...,
         [24.4333],
         [11.1520],
         [10.8833]],
        [[10.7179],
         [10.7177],
         [24.3279],
         ...,
         [24.2094],
         [10.9584],
         [10.7026]],
        ...,
        [[10.5923],
         [10.5958],
         [24.0589],
         ...,
         [23.9342],
         [10.7228],
         [10.4825]],
        [[10.9155],
         [10.9093],
         [24.7506],
         ...,
         [24.6420],
         [11.3338],
         [11.0529]],
        [[11.1288],
         [11.1160],
         [25.2065],
         ...,
         [25.1086],
         [11.7455],
         [11.4364]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9961, 0.9957, 1.1904,  ..., 1.1895, 1.0115, 1.0063],
        [0.9847, 0.9846, 1.1661,  ..., 1.1646, 0.9891, 0.9855],
        [0.9833, 0.9833, 1.1632,  ..., 1.1616, 0.9865, 0.9831],
        ...,
        [0.9817, 0.9817, 1.1596,  ..., 1.1580, 0.9834, 0.9802],
        [0.9859, 0.9859, 1.1688,  ..., 1.1673, 0.9915, 0.9878],
        [0.9888, 0.9886, 1.1748,  ..., 1.1735, 0.9969, 0.9928]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8283],
         [12.8917],
         [11.1761],
         ...,
         [10.1614],
         [13.0282],
         [12.8626]],
        [[ 7.9550],
         [ 7.8689],
         [ 8.4727],
         ...,
         [ 8.8219],
         [ 7.7087],
         [ 7.9075]],
        [[ 7.4981],
         [ 7.4024],
         [ 8.1871],
         ...,
         [ 8.6688],
         [ 7.2239],
         [ 7.4454]],
        ...,
        [[ 6.9673],
         [ 6.8617],
         [ 7.8461],
         ...,
         [ 8.4826],
         [ 6.6643],
         [ 6.9091]],
        [[ 8.4015],
         [ 8.3256],
         [ 8.7451],
         ...,
         [ 8.9655],
         [ 8.1852],
         [ 8.3597]],
        [[ 9.4775],
         [ 9.4294],
         [ 9.3777],
         ...,
         [ 9.2909],
         [ 9.3433],
         [ 9.4509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9795, 0.9808, 0.9441,  ..., 0.9223, 0.9838, 0.9802],
        [0.8750, 0.8731, 0.8861,  ..., 0.8936, 0.8697, 0.8740],
        [0.8652, 0.8631, 0.8800,  ..., 0.8903, 0.8593, 0.8641],
        ...,
        [0.8538, 0.8515, 0.8726,  ..., 0.8863, 0.8473, 0.8526],
        [0.8846, 0.8829, 0.8919,  ..., 0.8966, 0.8799, 0.8837],
        [0.9076, 0.9066, 0.9055,  ..., 0.9036, 0.9048, 0.9071]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8909],
         [14.9617],
         [24.3428],
         ...,
         [24.9197],
         [16.2236],
         [16.2055]],
        [[13.9486],
         [14.0782],
         [15.2761],
         ...,
         [15.2417],
         [14.6163],
         [14.6717]],
        [[13.8361],
         [13.9725],
         [14.4199],
         ...,
         [14.3418],
         [14.4287],
         [14.4922]],
        ...,
        [[13.6978],
         [13.8425],
         [13.4237],
         ...,
         [13.2983],
         [14.1993],
         [14.2725]],
        [[14.0532],
         [14.1765],
         [16.1116],
         ...,
         [16.1226],
         [14.7916],
         [14.8394]],
        [[14.2868],
         [14.3958],
         [18.1206],
         ...,
         [18.2507],
         [15.1860],
         [15.2162]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9721, 0.9732, 1.1258,  ..., 1.1352, 0.9938, 0.9935],
        [0.9568, 0.9589, 0.9784,  ..., 0.9778, 0.9676, 0.9685],
        [0.9549, 0.9572, 0.9644,  ..., 0.9632, 0.9646, 0.9656],
        ...,
        [0.9527, 0.9550, 0.9482,  ..., 0.9462, 0.9608, 0.9620],
        [0.9585, 0.9605, 0.9919,  ..., 0.9921, 0.9705, 0.9712],
        [0.9623, 0.9640, 1.0246,  ..., 1.0267, 0.9769, 0.9774]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7329],
         [11.5896],
         [26.0482],
         ...,
         [26.3386],
         [13.7227],
         [13.7836]],
        [[10.8249],
         [10.8090],
         [24.0083],
         ...,
         [24.4597],
         [11.3575],
         [10.9212]],
        [[10.7175],
         [10.7161],
         [23.7671],
         ...,
         [24.2366],
         [11.0946],
         [10.6110]],
        ...,
        [[10.5857],
         [10.6019],
         [23.4712],
         ...,
         [23.9626],
         [10.7768],
         [10.2382]],
        [[10.9250],
         [10.8955],
         [24.2331],
         ...,
         [24.6674],
         [11.6057],
         [11.2156]],
        [[11.1492],
         [11.0888],
         [24.7366],
         ...,
         [25.1321],
         [12.1728],
         [11.8937]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9874, 0.9855, 1.1766,  ..., 1.1804, 1.0137, 1.0145],
        [0.9754, 0.9752, 1.1496,  ..., 1.1556, 0.9824, 0.9767],
        [0.9740, 0.9740, 1.1464,  ..., 1.1526, 0.9790, 0.9726],
        ...,
        [0.9722, 0.9724, 1.1425,  ..., 1.1490, 0.9748, 0.9676],
        [0.9767, 0.9763, 1.1526,  ..., 1.1583, 0.9857, 0.9806],
        [0.9797, 0.9789, 1.1592,  ..., 1.1645, 0.9932, 0.9895]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7905],
         [12.8882],
         [10.9821],
         ...,
         [10.3134],
         [12.6151],
         [13.0265]],
        [[ 8.0096],
         [ 7.8734],
         [ 8.3289],
         ...,
         [ 8.8058],
         [ 8.2875],
         [ 7.7104]],
        [[ 7.5587],
         [ 7.4075],
         [ 8.0486],
         ...,
         [ 8.6352],
         [ 7.8675],
         [ 7.2258]],
        ...,
        [[ 7.0342],
         [ 6.8673],
         [ 7.7138],
         ...,
         [ 8.4281],
         [ 7.3756],
         [ 6.6664]],
        [[ 8.4497],
         [ 8.3296],
         [ 8.5964],
         ...,
         [ 8.9663],
         [ 8.6951],
         [ 8.1867]],
        [[ 9.5084],
         [ 9.4319],
         [ 9.2173],
         ...,
         [ 9.3309],
         [ 9.6670],
         [ 9.3442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9399,  ..., 0.9256, 0.9750, 0.9838],
        [0.8762, 0.8733, 0.8831,  ..., 0.8933, 0.8822, 0.8698],
        [0.8665, 0.8633, 0.8770,  ..., 0.8896, 0.8732, 0.8594],
        ...,
        [0.8553, 0.8517, 0.8699,  ..., 0.8852, 0.8626, 0.8474],
        [0.8856, 0.8831, 0.8888,  ..., 0.8967, 0.8909, 0.8800],
        [0.9083, 0.9067, 0.9021,  ..., 0.9045, 0.9117, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0443],
         [15.3569],
         [24.3612],
         ...,
         [24.3188],
         [17.2521],
         [17.1200]],
        [[13.9865],
         [14.4573],
         [15.1399],
         ...,
         [15.6539],
         [14.9760],
         [15.3854]],
        [[13.8608],
         [14.3497],
         [14.2742],
         ...,
         [14.8231],
         [14.7160],
         [15.1833]],
        ...,
        [[13.7064],
         [14.2172],
         [13.2682],
         ...,
         [13.8530],
         [14.3995],
         [14.9361]],
        [[14.1035],
         [14.5574],
         [15.9857],
         ...,
         [16.4622],
         [15.2201],
         [15.5744]],
        [[14.3652],
         [14.7807],
         [18.0231],
         ...,
         [18.3965],
         [15.7730],
         [15.9997]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9627, 0.9678, 1.1143,  ..., 1.1136, 0.9986, 0.9965],
        [0.9455, 0.9532, 0.9643,  ..., 0.9726, 0.9616, 0.9683],
        [0.9435, 0.9514, 0.9502,  ..., 0.9591, 0.9574, 0.9650],
        ...,
        [0.9410, 0.9493, 0.9338,  ..., 0.9434, 0.9522, 0.9610],
        [0.9474, 0.9548, 0.9780,  ..., 0.9858, 0.9656, 0.9714],
        [0.9517, 0.9584, 1.0112,  ..., 1.0173, 0.9746, 0.9783]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5862],
         [26.0290],
         ...,
         [26.3397],
         [13.7795],
         [13.8720]],
        [[10.8252],
         [10.8085],
         [23.9752],
         ...,
         [24.4613],
         [11.3711],
         [10.9243]],
        [[10.7174],
         [10.7159],
         [23.7325],
         ...,
         [24.2383],
         [11.1038],
         [10.6059]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4346],
         ...,
         [23.9643],
         [10.7809],
         [10.2237]],
        [[10.9256],
         [10.8946],
         [24.2014],
         ...,
         [24.6690],
         [11.6235],
         [11.2266]],
        [[11.1505],
         [11.0872],
         [24.7083],
         ...,
         [25.1336],
         [12.2005],
         [11.9237]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9869, 0.9849, 1.1758,  ..., 1.1799, 1.0139, 1.0151],
        [0.9748, 0.9746, 1.1486,  ..., 1.1550, 0.9821, 0.9761],
        [0.9734, 0.9734, 1.1454,  ..., 1.1521, 0.9785, 0.9719],
        ...,
        [0.9717, 0.9719, 1.1415,  ..., 1.1485, 0.9743, 0.9669],
        [0.9762, 0.9758, 1.1516,  ..., 1.1578, 0.9854, 0.9801],
        [0.9791, 0.9783, 1.1583,  ..., 1.1639, 0.9930, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7881],
         [12.8880],
         [10.9903],
         ...,
         [10.3318],
         [12.5924],
         [13.0366]],
        [[ 8.0131],
         [ 7.8737],
         [ 8.3305],
         ...,
         [ 8.8082],
         [ 8.3341],
         [ 7.7001]],
        [[ 7.5626],
         [ 7.4078],
         [ 8.0496],
         ...,
         [ 8.6360],
         [ 7.9190],
         [ 7.2142]],
        ...,
        [[ 7.0385],
         [ 6.8676],
         [ 7.7141],
         ...,
         [ 8.4269],
         [ 7.4324],
         [ 6.6536]],
        [[ 8.4528],
         [ 8.3298],
         [ 8.5985],
         ...,
         [ 8.9703],
         [ 8.7367],
         [ 8.1777]],
        [[ 9.5104],
         [ 9.4321],
         [ 9.2209],
         ...,
         [ 9.3386],
         [ 9.6951],
         [ 9.3389]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9783, 0.9805, 0.9398,  ..., 0.9257, 0.9741, 0.9837],
        [0.8760, 0.8730, 0.8828,  ..., 0.8930, 0.8828, 0.8692],
        [0.8663, 0.8630, 0.8767,  ..., 0.8893, 0.8739, 0.8588],
        ...,
        [0.8551, 0.8514, 0.8695,  ..., 0.8848, 0.8635, 0.8468],
        [0.8854, 0.8827, 0.8885,  ..., 0.8965, 0.8915, 0.8795],
        [0.9081, 0.9064, 0.9019,  ..., 0.9044, 0.9120, 0.9044]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0547],
         [15.3850],
         [24.3620],
         ...,
         [24.2799],
         [17.3163],
         [17.1811]],
        [[13.9888],
         [14.4812],
         [15.1316],
         ...,
         [15.6813],
         [15.0002],
         [15.4320]],
        [[13.8622],
         [14.3731],
         [14.2653],
         ...,
         [14.8552],
         [14.7359],
         [15.2283]],
        ...,
        [[13.7067],
         [14.2401],
         [13.2587],
         ...,
         [13.8901],
         [14.4144],
         [14.9791]],
        [[14.1067],
         [14.5818],
         [15.9780],
         ...,
         [16.4847],
         [15.2484],
         [15.6225]],
        [[14.3704],
         [14.8061],
         [18.0170],
         ...,
         [18.4061],
         [15.8106],
         [16.0513]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9622, 0.9676, 1.1136,  ..., 1.1122, 0.9990, 0.9968],
        [0.9449, 0.9529, 0.9634,  ..., 0.9724, 0.9613, 0.9683],
        [0.9428, 0.9511, 0.9494,  ..., 0.9589, 0.9570, 0.9650],
        ...,
        [0.9403, 0.9489, 0.9330,  ..., 0.9432, 0.9518, 0.9610],
        [0.9468, 0.9545, 0.9772,  ..., 0.9854, 0.9653, 0.9714],
        [0.9511, 0.9581, 1.0104,  ..., 1.0167, 0.9745, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7411],
         [11.5808],
         [25.9996],
         ...,
         [26.3415],
         [13.8686],
         [14.0107]],
        [[10.8256],
         [10.8076],
         [23.9238],
         ...,
         [24.4638],
         [11.3924],
         [10.9292]],
        [[10.7173],
         [10.7156],
         [23.6786],
         ...,
         [24.2409],
         [11.1184],
         [10.5983]],
        ...,
        [[10.5845],
         [10.6024],
         [23.3778],
         ...,
         [23.9671],
         [10.7874],
         [10.2015]],
        [[10.9265],
         [10.8933],
         [24.1523],
         ...,
         [24.6715],
         [11.6514],
         [11.2439]],
        [[11.1525],
         [11.0848],
         [24.6645],
         ...,
         [25.1359],
         [12.2439],
         [11.9708]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9861, 0.9840, 1.1745,  ..., 1.1790, 1.0142, 1.0161],
        [0.9740, 0.9738, 1.1471,  ..., 1.1542, 0.9815, 0.9754],
        [0.9726, 0.9725, 1.1438,  ..., 1.1513, 0.9779, 0.9710],
        ...,
        [0.9708, 0.9710, 1.1399,  ..., 1.1477, 0.9735, 0.9657],
        [0.9753, 0.9749, 1.1501,  ..., 1.1570, 0.9849, 0.9795],
        [0.9783, 0.9774, 1.1569,  ..., 1.1631, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7844],
         [12.8876],
         [11.0081],
         ...,
         [10.3621],
         [12.5577],
         [13.0523]],
        [[ 8.0186],
         [ 7.8741],
         [ 8.3354],
         ...,
         [ 8.8128],
         [ 8.4093],
         [ 7.6844]],
        [[ 7.5687],
         [ 7.4083],
         [ 8.0533],
         ...,
         [ 8.6379],
         [ 8.0020],
         [ 7.1967]],
        ...,
        [[ 7.0452],
         [ 6.8682],
         [ 7.7164],
         ...,
         [ 8.4256],
         [ 7.5239],
         [ 6.6341]],
        [[ 8.4576],
         [ 8.3302],
         [ 8.6046],
         ...,
         [ 8.9775],
         [ 8.8036],
         [ 8.1641]],
        [[ 9.5135],
         [ 9.4323],
         [ 9.2298],
         ...,
         [ 9.3517],
         [ 9.7405],
         [ 9.3310]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9258, 0.9729, 0.9835],
        [0.8756, 0.8725, 0.8824,  ..., 0.8926, 0.8839, 0.8684],
        [0.8659, 0.8625, 0.8763,  ..., 0.8888, 0.8752, 0.8579],
        ...,
        [0.8547, 0.8509, 0.8691,  ..., 0.8843, 0.8650, 0.8459],
        [0.8850, 0.8823, 0.8881,  ..., 0.8961, 0.8924, 0.8787],
        [0.9076, 0.9059, 0.9015,  ..., 0.9042, 0.9125, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0711],
         [15.4294],
         [24.3633],
         ...,
         [24.2192],
         [17.4161],
         [17.2769]],
        [[13.9924],
         [14.5186],
         [15.1186],
         ...,
         [15.7243],
         [15.0383],
         [15.5051]],
        [[13.8643],
         [14.4097],
         [14.2515],
         ...,
         [14.9056],
         [14.7675],
         [15.2988]],
        ...,
        [[13.7070],
         [14.2756],
         [13.2440],
         ...,
         [13.9485],
         [14.4381],
         [15.0466]],
        [[14.1116],
         [14.6199],
         [15.9659],
         ...,
         [16.5200],
         [15.2927],
         [15.6981]],
        [[14.3784],
         [14.8460],
         [18.0076],
         ...,
         [18.4212],
         [15.8695],
         [16.1323]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9614, 0.9672, 1.1125,  ..., 1.1102, 0.9995, 0.9973],
        [0.9438, 0.9524, 0.9622,  ..., 0.9720, 0.9609, 0.9684],
        [0.9418, 0.9506, 0.9481,  ..., 0.9587, 0.9564, 0.9651],
        ...,
        [0.9392, 0.9484, 0.9317,  ..., 0.9431, 0.9511, 0.9610],
        [0.9458, 0.9540, 0.9759,  ..., 0.9850, 0.9650, 0.9716],
        [0.9501, 0.9577, 1.0091,  ..., 1.0159, 0.9744, 0.9786]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7421],
         [11.5798],
         [25.9939],
         ...,
         [26.3418],
         [13.8861],
         [14.0380]],
        [[10.8257],
         [10.8074],
         [23.9137],
         ...,
         [24.4643],
         [11.3966],
         [10.9302]],
        [[10.7173],
         [10.7155],
         [23.6680],
         ...,
         [24.2414],
         [11.1213],
         [10.5968]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3667],
         ...,
         [23.9676],
         [10.7887],
         [10.1971]],
        [[10.9267],
         [10.8930],
         [24.1428],
         ...,
         [24.6720],
         [11.6569],
         [11.2473]],
        [[11.1529],
         [11.0843],
         [24.6560],
         ...,
         [25.1363],
         [12.2524],
         [11.9800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1566,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7837],
         [12.8876],
         [11.0123],
         ...,
         [10.3683],
         [12.5510],
         [13.0554]],
        [[ 8.0196],
         [ 7.8742],
         [ 8.3367],
         ...,
         [ 8.8139],
         [ 8.4244],
         [ 7.6814]],
        [[ 7.5698],
         [ 7.4084],
         [ 8.0543],
         ...,
         [ 8.6384],
         [ 8.0187],
         [ 7.1933]],
        ...,
        [[ 7.0465],
         [ 6.8683],
         [ 7.7171],
         ...,
         [ 8.4255],
         [ 7.5423],
         [ 6.6303]],
        [[ 8.4586],
         [ 8.3303],
         [ 8.6061],
         ...,
         [ 8.9790],
         [ 8.8171],
         [ 8.1615]],
        [[ 9.5141],
         [ 9.4324],
         [ 9.2320],
         ...,
         [ 9.3544],
         [ 9.7496],
         [ 9.3295]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8888, 0.8755, 0.8578],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8822, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0744],
         [15.4382],
         [24.3636],
         ...,
         [24.2073],
         [17.4356],
         [17.2958]],
        [[13.9931],
         [14.5260],
         [15.1161],
         ...,
         [15.7328],
         [15.0458],
         [15.5195]],
        [[13.8647],
         [14.4169],
         [14.2488],
         ...,
         [14.9156],
         [14.7737],
         [15.3127]],
        ...,
        [[13.7071],
         [14.2826],
         [13.2412],
         ...,
         [13.9600],
         [14.4429],
         [15.0599]],
        [[14.1126],
         [14.6274],
         [15.9636],
         ...,
         [16.5270],
         [15.3014],
         [15.7129]],
        [[14.3800],
         [14.8538],
         [18.0057],
         ...,
         [18.4242],
         [15.8810],
         [16.1483]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9672, 1.1123,  ..., 1.1098, 0.9996, 0.9974],
        [0.9437, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9416, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9484, 0.9314,  ..., 0.9431, 0.9510, 0.9610],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9577, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6705],
         [11.6555],
         [25.9766],
         ...,
         [26.1873],
         [12.3981],
         [12.3967]],
        [[10.8189],
         [10.8172],
         [23.8757],
         ...,
         [24.2343],
         [11.0154],
         [10.8802]],
        [[10.7179],
         [10.7177],
         [23.6278],
         ...,
         [24.0029],
         [10.8553],,
         [10.7059]],
        ...,
        [[10.5938],
         [10.5955],
         [23.3236],
         ...,
         [23.7188],
         [10.6599],
         [10.4934]],
        [[10.9130],
         [10.9099],
         [24.1069],
         ...,
         [24.4500],
         [11.1653],
         [11.0437]],
        [[11.1235],
         [11.1172],
         [24.6251],
         ...,
         [24.9326],
         [11.5032],
         [11.4131]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9964, 0.9962, 1.1854,  ..., 1.1882, 1.0060, 1.0060],
        [0.9851, 0.9851, 1.1577,  ..., 1.1624, 0.9877, 0.9859],
        [0.9838, 0.9838, 1.1544,  ..., 1.1594, 0.9856, 0.9836],
        ...,
        [0.9821, 0.9822, 1.1504,  ..., 1.1556, 0.9830, 0.9808],
        [0.9864, 0.9863, 1.1607,  ..., 1.1653, 0.9897, 0.9881],
        [0.9891, 0.9891, 1.1676,  ..., 1.1716, 0.9942, 0.9930]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8292],
         [12.8179],
         [11.0425],
         ...,
         [10.1595],
         [12.9245],
         [12.7915]],
        [[ 7.9538],
         [ 7.9698],
         [ 8.4190],
         ...,
         [ 8.8329],
         [ 7.8270],
         [ 8.0081]],
        [[ 7.4967],
         [ 7.5145],
         [ 8.1410],
         ...,
         [ 8.6812],
         [ 7.3558],
         [ 7.5570]],
        ...,
        [[ 6.9658],
         [ 6.9854],
         [ 7.8086],
         ...,
         [ 8.4965],
         [ 6.8103],
         [ 7.0323]],
        [[ 8.4004],
         [ 8.4145],
         [ 8.6841],
         ...,
         [ 8.9752],
         [ 8.2887],
         [ 8.4484]],
        [[ 9.4768],
         [ 9.4858],
         [ 9.2989],
         ...,
         [ 9.2976],
         [ 9.4063],
         [ 9.5075]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9832, 0.9830, 0.9449,  ..., 0.9260, 0.9853, 0.9824],
        [0.8787, 0.8790, 0.8887,  ..., 0.8975, 0.8760, 0.8799],
        [0.8689, 0.8693, 0.8827,  ..., 0.8943, 0.8659, 0.8702],
        ...,
        [0.8575, 0.8579, 0.8756,  ..., 0.8903, 0.8542, 0.8589],
        [0.8883, 0.8886, 0.8944,  ..., 0.9006, 0.8859, 0.8893],
        [0.9114, 0.9115, 0.9075,  ..., 0.9075, 0.9098, 0.9120]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8816],
         [14.9332],
         [24.5822],
         ...,
         [25.0770],
         [15.3514],
         [16.1918]],
        [[13.9668],
         [14.0706],
         [15.0655],
         ...,
         [15.1048],
         [14.3832],
         [14.6066]],
        [[13.8576],
         [13.9673],
         [14.1796],
         ...,
         [14.1860],
         [14.2676],
         [14.4215]],
        ...,
        [[13.7231],
         [13.8402],
         [13.1520],
         ...,
         [13.1230],
         [14.1255],
         [14.1950]],
        [[14.0685],
         [14.1666],
         [15.9326],
         ...,
         [16.0057],
         [14.4907],
         [14.7796]],
        [[14.2954],
         [14.3807],
         [18.0265],
         ...,
         [18.1885],
         [14.7307],
         [15.1687]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 0.9744, 1.1313,  ..., 1.1394, 0.9812, 0.9948],
        [0.9587, 0.9603, 0.9765,  ..., 0.9772, 0.9654, 0.9691],
        [0.9569, 0.9587, 0.9621,  ..., 0.9622, 0.9636, 0.9661],
        ...,
        [0.9547, 0.9566, 0.9454,  ..., 0.9449, 0.9612, 0.9624],
        [0.9603, 0.9619, 0.9906,  ..., 0.9918, 0.9672, 0.9719],
        [0.9640, 0.9654, 1.0247,  ..., 1.0273, 0.9711, 0.9782]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7301],
         [11.5906],
         [25.9897],
         ...,
         [26.3158],
         [13.6282],
         [13.7579]],
        [[10.8247],
         [10.8092],
         [23.9053],
         ...,
         [24.4269],
         [11.3306],
         [10.9200]],
        [[10.7176],
         [10.7162],
         [23.6592],
         ...,
         [24.2027],
         [11.0746],
         [10.6122]],
        ...,
        [[10.5861],
         [10.6019],
         [23.3573],
         ...,
         [23.9273],
         [10.7648],
         [10.2421]],
        [[10.9245],
         [10.8957],
         [24.1348],
         ...,
         [24.6357],
         [11.5722],
         [11.2122]],
        [[11.1481],
         [11.0892],
         [24.6490],
         ...,
         [25.1028],
         [12.1238],
         [11.8848]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9875, 0.9857, 1.1760,  ..., 1.1803, 1.0126, 1.0143],
        [0.9755, 0.9753, 1.1484,  ..., 1.1553, 0.9822, 0.9768],
        [0.9741, 0.9741, 1.1452,  ..., 1.1523, 0.9788, 0.9727],
        ...,
        [0.9724, 0.9726, 1.1412,  ..., 1.1487, 0.9748, 0.9678],
        [0.9769, 0.9765, 1.1514,  ..., 1.1581, 0.9854, 0.9807],
        [0.9798, 0.9790, 1.1582,  ..., 1.1642, 0.9927, 0.9896]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7910],
         [12.8763],
         [10.9809],
         ...,
         [10.3050],
         [12.6030],
         [13.0138]],
        [[ 8.0088],
         [ 7.8891],
         [ 8.3321],
         ...,
         [ 8.8053],
         [ 8.3120],
         [ 7.7238]],
        [[ 7.5579],
         [ 7.4249],
         [ 8.0522],
         ...,
         [ 8.6355],
         [ 7.8946],
         [ 7.2407]],
        ...,
        [[ 7.0333],
         [ 6.8865],
         [ 7.7178],
         ...,
         [ 8.4293],
         [ 7.4055],
         [ 6.6830]],
        [[ 8.4491],
         [ 8.3434],
         [ 8.5992],
         ...,
         [ 8.9650],
         [ 8.7170],
         [ 8.1983]],
        [[ 9.5080],
         [ 9.4406],
         [ 9.2191],
         ...,
         [ 9.3277],
         [ 9.6818],
         [ 9.3511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 0.9810, 0.9403,  ..., 0.9259, 0.9751, 0.9839],
        [0.8766, 0.8740, 0.8835,  ..., 0.8937, 0.8831, 0.8705],
        [0.8669, 0.8641, 0.8775,  ..., 0.8901, 0.8742, 0.8601],
        ...,
        [0.8557, 0.8525, 0.8704,  ..., 0.8856, 0.8637, 0.8482],
        [0.8861, 0.8838, 0.8893,  ..., 0.8971, 0.8918, 0.8807],
        [0.9088, 0.9073, 0.9026,  ..., 0.9049, 0.9125, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0403],
         [15.3467],
         [24.3993],
         ...,
         [24.3536],
         [17.0886],
         [17.1059]],
        [[13.9892],
         [14.4523],
         [15.1072],
         ...,
         [15.6239],
         [14.9248],
         [15.3668]],
        [[13.8643],
         [14.3453],
         [14.2368],
         ...,
         [14.7886],
         [14.6768],
         [15.1642]],
        ...,
        [[13.7108],
         [14.2136],
         [13.2258],
         ...,
         [13.8136],
         [14.3746],
         [14.9165]],
        [[14.1055],
         [14.5519],
         [15.9579],
         ...,
         [16.4370],
         [15.1575],
         [15.5563]],
        [[14.3656],
         [14.7739],
         [18.0087],
         ...,
         [18.3839],
         [15.6840],
         [15.9826]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9627, 0.9677, 1.1150,  ..., 1.1142, 0.9961, 0.9963],
        [0.9456, 0.9532, 0.9638,  ..., 0.9722, 0.9609, 0.9681],
        [0.9436, 0.9514, 0.9497,  ..., 0.9586, 0.9568, 0.9648],
        ...,
        [0.9411, 0.9493, 0.9332,  ..., 0.9428, 0.9519, 0.9607],
        [0.9475, 0.9548, 0.9777,  ..., 0.9855, 0.9646, 0.9711],
        [0.9518, 0.9584, 1.0110,  ..., 1.0171, 0.9732, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7400],
         [11.5816],
         [25.9919],
         ...,
         [26.3369],
         [13.8401],
         [13.9899]],
        [[10.8255],
         [10.8077],
         [23.9100],
         ...,
         [24.4573],
         [11.3847],
         [10.9284]],
        [[10.7174],
         [10.7156],
         [23.6641],
         ...,
         [24.2341],
         [11.1128],
         [10.5994]],
        ...,
        [[10.5847],
         [10.6024],
         [23.3625],
         ...,
         [23.9600],
         [10.7843],
         [10.2047]],
        [[10.9263],
         [10.8935],
         [24.1392],
         ...,
         [24.6651],
         [11.6417],
         [11.2413]],
        [[11.1521],
         [11.0851],
         [24.6529],
         ...,
         [25.1300],
         [12.2294],
         [11.9637]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9862, 0.9841, 1.1745,  ..., 1.1791, 1.0140, 1.0159],
        [0.9741, 0.9739, 1.1470,  ..., 1.1543, 0.9815, 0.9755],
        [0.9727, 0.9727, 1.1438,  ..., 1.1513, 0.9779, 0.9711],
        ...,
        [0.9709, 0.9712, 1.1398,  ..., 1.1477, 0.9736, 0.9659],
        [0.9754, 0.9750, 1.1501,  ..., 1.1570, 0.9849, 0.9796],
        [0.9784, 0.9775, 1.1569,  ..., 1.1632, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7849],
         [12.8854],
         [11.0061],
         ...,
         [10.3567],
         [12.5593],
         [13.0481]],
        [[ 8.0178],
         [ 7.8771],
         [ 8.3355],
         ...,
         [ 8.8121],
         [ 8.4056],
         [ 7.6886]],
        [[ 7.5678],
         [ 7.4115],
         [ 8.0536],
         ...,
         [ 8.6376],
         [ 7.9979],
         [ 7.2013]],
        ...,
        [[ 7.0442],
         [ 6.8718],
         [ 7.7170],
         ...,
         [ 8.4259],
         [ 7.5194],
         [ 6.6392]],
        [[ 8.4570],
         [ 8.3328],
         [ 8.6045],
         ...,
         [ 8.9762],
         [ 8.8003],
         [ 8.1677]],
        [[ 9.5130],
         [ 9.4339],
         [ 9.2293],
         ...,
         [ 9.3494],
         [ 9.7382],
         [ 9.3331]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9779, 0.9801, 0.9398,  ..., 0.9258, 0.9731, 0.9836],
        [0.8757, 0.8727, 0.8825,  ..., 0.8927, 0.8840, 0.8686],
        [0.8660, 0.8627, 0.8765,  ..., 0.8890, 0.8753, 0.8582],
        ...,
        [0.8548, 0.8511, 0.8692,  ..., 0.8844, 0.8650, 0.8461],
        [0.8851, 0.8824, 0.8883,  ..., 0.8962, 0.8925, 0.8789],
        [0.9077, 0.9061, 0.9017,  ..., 0.9042, 0.9126, 0.9039]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0685],
         [15.4223],
         [24.3704],
         ...,
         [24.2329],
         [17.3737],
         [17.2632]],
        [[13.9925],
         [14.5134],
         [15.1138],
         ...,
         [15.7135],
         [15.0238],
         [15.4932]],
        [[13.8647],
         [14.4047],
         [14.2459],
         ...,
         [14.8931],
         [14.7559],
         [15.2871]],
        ...,
        [[13.7078],
         [14.2709],
         [13.2376],
         ...,
         [13.9341],
         [14.4301],
         [15.0351]],
        [[14.1114],
         [14.6145],
         [15.9620],
         ...,
         [16.5111],
         [15.2754],
         [15.6859]],
        [[14.3776],
         [14.8401],
         [18.0059],
         ...,
         [18.4170],
         [15.8456],
         [16.1198]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9615, 0.9672, 1.1128,  ..., 1.1105, 0.9990, 0.9972],
        [0.9440, 0.9524, 0.9622,  ..., 0.9720, 0.9607, 0.9684],
        [0.9419, 0.9507, 0.9481,  ..., 0.9586, 0.9564, 0.9650],
        ...,
        [0.9393, 0.9485, 0.9317,  ..., 0.9430, 0.9511, 0.9609],
        [0.9459, 0.9541, 0.9760,  ..., 0.9849, 0.9648, 0.9715],
        [0.9502, 0.9578, 1.0093,  ..., 1.0159, 0.9741, 0.9786]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7419],
         [11.5800],
         [25.9924],
         ...,
         [26.3409],
         [13.8802],
         [14.0338]],
        [[10.8257],
         [10.8075],
         [23.9108],
         ...,
         [24.4630],
         [11.3950],
         [10.9301]],
        [[10.7173],
         [10.7155],
         [23.6651],
         ...,
         [24.2400],
         [11.1201],
         [10.5971]],
        ...,
        [[10.5844],
         [10.6024],
         [23.3635],
         ...,
         [23.9661],
         [10.7881],
         [10.1978]],
        [[10.9266],
         [10.8931],
         [24.1400],
         ...,
         [24.6707],
         [11.6549],
         [11.2468]],
        [[11.1528],
         [11.0844],
         [24.6536],
         ...,
         [25.1351],
         [12.2494],
         [11.9786]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9838, 1.1743,  ..., 1.1789, 1.0142, 1.0162],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9707, 0.9709, 1.1395,  ..., 1.1475, 0.9734, 0.9656],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9773, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7838],
         [12.8871],
         [11.0119],
         ...,
         [10.3672],
         [12.5513],
         [13.0546]],
        [[ 8.0195],
         [ 7.8748],
         [ 8.3367],
         ...,
         [ 8.8137],
         [ 8.4236],
         [ 7.6823]],
        [[ 7.5697],
         [ 7.4090],
         [ 8.0544],
         ...,
         [ 8.6383],
         [ 8.0179],
         [ 7.1942]],
        ...,
        [[ 7.0463],
         [ 6.8690],
         [ 7.7172],
         ...,
         [ 8.4255],
         [ 7.5414],
         [ 6.6314]],
        [[ 8.4584],
         [ 8.3308],
         [ 8.6061],
         ...,
         [ 8.9787],
         [ 8.8164],
         [ 8.1622]],
        [[ 9.5140],
         [ 9.4327],
         [ 9.2319],
         ...,
         [ 9.3540],
         [ 9.7492],
         [ 9.3300]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8755, 0.8578],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8458],
        [0.8849, 0.8822, 0.8881,  ..., 0.8961, 0.8926, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0738],
         [15.4367],
         [24.3650],
         ...,
         [24.2100],
         [17.4270],
         [17.2931]],
        [[13.9931],
         [14.5249],
         [15.1151],
         ...,
         [15.7306],
         [15.0428],
         [15.5171]],
        [[13.8648],
         [14.4159],
         [14.2476],
         ...,
         [14.9130],
         [14.7714],
         [15.3104]],
        ...,
        [[13.7072],
         [14.2816],
         [13.2398],
         ...,
         [13.9571],
         [14.4412],
         [15.0576]],
        [[14.1126],
         [14.6263],
         [15.9628],
         ...,
         [16.5251],
         [15.2979],
         [15.7105]],
        [[14.3798],
         [14.8526],
         [18.0054],
         ...,
         [18.4233],
         [15.8761],
         [16.1457]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1124,  ..., 1.1099, 0.9995, 0.9974],
        [0.9437, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9416, 0.9506, 0.9478,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9484, 0.9314,  ..., 0.9431, 0.9510, 0.9610],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9577, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9924],
         ...,
         [26.3417],
         [13.8885],
         [14.0428]],
        [[10.8257],
         [10.8074],
         [23.9110],
         ...,
         [24.4642],
         [11.3971],
         [10.9304]],
        [[10.7173],
         [10.7155],
         [23.6652],
         ...,
         [24.2413],
         [11.1216],
         [10.5966]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9674],
         [10.7889],
         [10.1964]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6718],
         [11.6576],
         [11.2479]],
        [[11.1530],
         [11.0842],
         [24.6537],
         ...,
         [25.1362],
         [12.2535],
         [11.9816]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9724, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8875],
         [11.0131],
         ...,
         [10.3694],
         [12.5496],
         [13.0559]],
        [[ 8.0198],
         [ 7.8744],
         [ 8.3369],
         ...,
         [ 8.8140],
         [ 8.4273],
         [ 7.6810]],
        [[ 7.5701],
         [ 7.4085],
         [ 8.0545],
         ...,
         [ 8.6385],
         [ 8.0220],
         [ 7.1928]],
        ...,
        [[ 7.0467],
         [ 6.8684],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5459],
         [ 6.6298]],
        [[ 8.4587],
         [ 8.3304],
         [ 8.6065],
         ...,
         [ 8.9793],
         [ 8.8197],
         [ 8.1611]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2324],
         ...,
         [ 9.3549],
         [ 9.7515],
         [ 9.3293]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8888, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0749],
         [15.4397],
         [24.3639],
         ...,
         [24.2054],
         [17.4379],
         [17.2992]],
        [[13.9932],
         [14.5273],
         [15.1153],
         ...,
         [15.7341],
         [15.0467],
         [15.5220]],
        [[13.8648],
         [14.4181],
         [14.2480],
         ...,
         [14.9171],
         [14.7745],
         [15.3151]],
        ...,
        [[13.7071],
         [14.2838],
         [13.2403],
         ...,
         [13.9618],
         [14.4435],
         [15.0621]],
        [[14.1128],
         [14.6287],
         [15.9629],
         ...,
         [16.5280],
         [15.3025],
         [15.7155]],
        [[14.3803],
         [14.8552],
         [18.0053],
         ...,
         [18.4246],
         [15.8824],
         [16.1510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9540, 0.9757,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5796],
         [25.9925],
         ...,
         [26.3419],
         [13.8902],
         [14.0447]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4644],
         [11.3976],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2415],
         [11.1219],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7890],
         [10.1961]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6720],
         [11.6582],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1364],
         [12.2544],
         [11.9823]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9724, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8875],
         [11.0134],
         ...,
         [10.3698],
         [12.5493],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4281],
         [ 7.6807]],
        [[ 7.5701],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0229],
         [ 7.1925]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5468],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3304],
         [ 8.6065],
         ...,
         [ 8.9794],
         [ 8.8204],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2325],
         ...,
         [ 9.3551],
         [ 9.7519],
         [ 9.3292]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4403],
         [24.3637],
         ...,
         [24.2044],
         [17.4401],
         [17.3004]],
        [[13.9932],
         [14.5277],
         [15.1154],
         ...,
         [15.7348],
         [15.0476],
         [15.5230]],
        [[13.8648],
         [14.4186],
         [14.2480],
         ...,
         [14.9179],
         [14.7752],
         [15.3161]],
        ...,
        [[13.7071],
         [14.2843],
         [13.2404],
         ...,
         [13.9628],
         [14.4440],
         [15.0631]],
        [[14.1128],
         [14.6293],
         [15.9630],
         ...,
         [16.5286],
         [15.3035],
         [15.7165]],
        [[14.3804],
         [14.8557],
         [18.0052],
         ...,
         [18.4249],
         [15.8837],
         [16.1522]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8905],
         [14.0451]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1364],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8875],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0230],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5470],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7520],
         [ 9.3292]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4404],
         [24.3636],
         ...,
         [24.2042],
         [17.4406],
         [17.3007]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0477],
         [15.5232]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9181],
         [14.7753],
         [15.3163]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0633]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4249],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8875],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0633]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5795],
         [25.9925],
         ...,
         [26.3419],
         [13.8906],
         [14.0452]],
        [[10.8257],
         [10.8074],
         [23.9111],
         ...,
         [24.4645],
         [11.3977],
         [10.9305]],
        [[10.7173],
         [10.7155],
         [23.6653],
         ...,
         [24.2416],
         [11.1220],
         [10.5965]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3637],
         ...,
         [23.9677],
         [10.7891],
         [10.1960]],
        [[10.9267],
         [10.8930],
         [24.1402],
         ...,
         [24.6721],
         [11.6583],
         [11.2482]],
        [[11.1530],
         [11.0842],
         [24.6538],
         ...,
         [25.1365],
         [12.2546],
         [11.9824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9837, 1.1742,  ..., 1.1788, 1.0143, 1.0163],
        [0.9738, 0.9735, 1.1467,  ..., 1.1540, 0.9813, 0.9752],
        [0.9723, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9708, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1497,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1565,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7835],
         [12.8876],
         [11.0134],
         ...,
         [10.3699],
         [12.5492],
         [13.0562]],
        [[ 8.0199],
         [ 7.8743],
         [ 8.3370],
         ...,
         [ 8.8141],
         [ 8.4283],
         [ 7.6807]],
        [[ 7.5702],
         [ 7.4084],
         [ 8.0546],
         ...,
         [ 8.6385],
         [ 8.0231],
         [ 7.1924]],
        ...,
        [[ 7.0468],
         [ 6.8683],
         [ 7.7173],
         ...,
         [ 8.4255],
         [ 7.5471],
         [ 6.6294]],
        [[ 8.4588],
         [ 8.3303],
         [ 8.6066],
         ...,
         [ 8.9794],
         [ 8.8206],
         [ 8.1608]],
        [[ 9.5142],
         [ 9.4324],
         [ 9.2326],
         ...,
         [ 9.3552],
         [ 9.7521],
         [ 9.3291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
        [0.8658, 0.8624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
        [0.9075, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0752],
         [15.4405],
         [24.3636],
         ...,
         [24.2041],
         [17.4407],
         [17.3008]],
        [[13.9932],
         [14.5279],
         [15.1154],
         ...,
         [15.7350],
         [15.0478],
         [15.5233]],
        [[13.8648],
         [14.4187],
         [14.2481],
         ...,
         [14.9182],
         [14.7754],
         [15.3164]],
        ...,
        [[13.7071],
         [14.2844],
         [13.2404],
         ...,
         [13.9630],
         [14.4441],
         [15.0634]],
        [[14.1129],
         [14.6294],
         [15.9630],
         ...,
         [16.5288],
         [15.3037],
         [15.7168]],
        [[14.3804],
         [14.8559],
         [18.0052],
         ...,
         [18.4250],
         [15.8840],
         [16.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
        [0.9415, 0.9505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [0.9389, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9455, 0.9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7393],
         [11.5829],
         [26.0915],
         ...,
         [26.3478],
         [13.7158],
         [13.5792]],
        [[10.8254],
         [10.8068],
         [24.0820],
         ...,
         [24.4728],
         [11.3507],
         [10.9184]],
        [[10.7174],
         [10.7144],
         [23.8442],
         ...,
         [24.2502],
         [11.0878],
         [10.6276]],
        ...,
        [[10.5848],
         [10.6008],
         [23.5524],
         ...,
         [23.9767],
         [10.7700],
         [10.2774]],
        [[10.9262],
         [10.8928],
         [24.3036],
         ...,
         [24.6802],
         [11.5989],
         [11.1940]],
        [[11.1518],
         [11.0850],
         [24.7998],
         ...,
         [25.1440],
         [12.1659],
         [11.8269]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9889, 0.9868, 1.1785,  ..., 1.1819, 1.0150, 1.0132],
        [0.9768, 0.9765, 1.1520,  ..., 1.1572, 0.9837, 0.9780],
        [0.9754, 0.9753, 1.1488,  ..., 1.1542, 0.9803, 0.9742],
        ...,
        [0.9736, 0.9738, 1.1450,  ..., 1.1506, 0.9761, 0.9696],
        [0.9781, 0.9777, 1.1549,  ..., 1.1599, 0.9870, 0.9817],
        [0.9811, 0.9802, 1.1615,  ..., 1.1660, 0.9945, 0.9900]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8009],
         [12.9173],
         [10.9195],
         ...,
         [10.3151],
         [12.6298],
         [12.9045]],
        [[ 7.9943],
         [ 7.8360],
         [ 8.3620],
         ...,
         [ 8.8097],
         [ 8.2610],
         [ 7.8522]],
        [[ 7.5417],
         [ 7.3658],
         [ 8.0903],
         ...,
         [ 8.6393],
         [ 7.8380],
         [ 7.3839]],
        ...,
        [[ 7.0154],
         [ 6.8213],
         [ 7.7653],
         ...,
         [ 8.4325],
         [ 7.3431],
         [ 6.8412]],
        [[ 8.4362],
         [ 8.2966],
         [ 8.6209],
         ...,
         [ 8.9700],
         [ 8.6716],
         [ 8.3109]],
        [[ 9.4997],
         [ 9.4113],
         [ 9.2211],
         ...,
         [ 9.3340],
         [ 9.6515],
         [ 9.4202]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9829, 0.9854, 0.9426,  ..., 0.9296, 0.9792, 0.9851],
        [0.8798, 0.8765, 0.8877,  ..., 0.8973, 0.8856, 0.8768],
        [0.8701, 0.8664, 0.8819,  ..., 0.8937, 0.8765, 0.8668],
        ...,
        [0.8589, 0.8547, 0.8749,  ..., 0.8892, 0.8659, 0.8551],
        [0.8893, 0.8863, 0.8933,  ..., 0.9008, 0.8944, 0.8866],
        [0.9121, 0.9102, 0.9062,  ..., 0.9086, 0.9154, 0.9104]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0479],
         [15.3429],
         [24.3732],
         ...,
         [24.2598],
         [17.2035],
         [17.0869]],
        [[13.9687],
         [14.4315],
         [15.1386],
         ...,
         [15.6919],
         [14.8905],
         [15.4832]],
        [[13.8406],
         [14.3226],
         [14.2719],
         ...,
         [14.8680],
         [14.6268],
         [15.2955]],
        ...,
        [[13.6833],
         [14.1884],
         [13.2649],
         ...,
         [13.9053],
         [14.3059],
         [15.0656]],
        [[14.0880],
         [14.5329],
         [15.9854],
         ...,
         [16.4930],
         [15.1383],
         [15.6586]],
        [[14.3549],
         [14.7591],
         [18.0253],
         ...,
         [18.4084],
         [15.6997],
         [16.0527]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9625, 0.9673, 1.1142,  ..., 1.1123, 0.9976, 0.9957],
        [0.9450, 0.9525, 0.9640,  ..., 0.9730, 0.9599, 0.9696],
        [0.9429, 0.9507, 0.9499,  ..., 0.9596, 0.9557, 0.9665],
        ...,
        [0.9403, 0.9485, 0.9335,  ..., 0.9439, 0.9504, 0.9628],
        [0.9469, 0.9541, 0.9778,  ..., 0.9860, 0.9640, 0.9724],
        [0.9512, 0.9578, 1.0109,  ..., 1.0172, 0.9731, 0.9788]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7418],
         [11.5801],
         [26.0095],
         ...,
         [26.3430],
         [13.8595],
         [13.9615]],
        [[10.8257],
         [10.8073],
         [23.9412],
         ...,
         [24.4660],
         [11.3893],
         [10.9282]],
        [[10.7173],
         [10.7153],
         [23.6969],
         ...,
         [24.2431],
         [11.1159],
         [10.6018]],
        ...,
        [[10.5844],
         [10.6022],
         [23.3971],
         ...,
         [23.9693],
         [10.7856],
         [10.2102]],
        [[10.9266],
         [10.8929],
         [24.1690],
         ...,
         [24.6735],
         [11.6477],
         [11.2384]],
        [[11.1528],
         [11.0843],
         [24.6794],
         ...,
         [25.1378],
         [12.2388],
         [11.9546]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1750,  ..., 1.1794, 1.0144, 1.0157],
        [0.9743, 0.9741, 1.1476,  ..., 1.1546, 0.9818, 0.9757],
        [0.9729, 0.9728, 1.1444,  ..., 1.1516, 0.9781, 0.9713],
        ...,
        [0.9711, 0.9714, 1.1404,  ..., 1.1480, 0.9738, 0.9662],
        [0.9756, 0.9752, 1.1506,  ..., 1.1573, 0.9852, 0.9798],
        [0.9786, 0.9777, 1.1574,  ..., 1.1634, 0.9930, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7866],
         [12.8928],
         [10.9956],
         ...,
         [10.3598],
         [12.5624],
         [13.0295]],
        [[ 8.0153],
         [ 7.8673],
         [ 8.3409],
         ...,
         [ 8.8131],
         [ 8.3977],
         [ 7.7074]],
        [[ 7.5651],
         [ 7.4007],
         [ 8.0604],
         ...,
         [ 8.6385],
         [ 7.9892],
         [ 7.2224]],
        ...,
        [[ 7.0412],
         [ 6.8598],
         [ 7.7254],
         ...,
         [ 8.4265],
         [ 7.5098],
         [ 6.6626]],
        [[ 8.4548],
         [ 8.3242],
         [ 8.6085],
         ...,
         [ 8.9775],
         [ 8.7932],
         [ 8.1840]],
        [[ 9.5116],
         [ 9.4286],
         [ 9.2298],
         ...,
         [ 9.3511],
         [ 9.7333],
         [ 9.3427]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9808, 0.9401,  ..., 0.9265, 0.9737, 0.9838],
        [0.8762, 0.8731, 0.8832,  ..., 0.8933, 0.8844, 0.8696],
        [0.8666, 0.8631, 0.8772,  ..., 0.8896, 0.8757, 0.8592],
        ...,
        [0.8553, 0.8515, 0.8700,  ..., 0.8850, 0.8654, 0.8472],
        [0.8857, 0.8829, 0.8890,  ..., 0.8969, 0.8929, 0.8798],
        [0.9083, 0.9065, 0.9023,  ..., 0.9049, 0.9131, 0.9047]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0703],
         [15.4228],
         [24.3653],
         ...,
         [24.2140],
         [17.3983],
         [17.2628]],
        [[13.9889],
         [14.5108],
         [15.1195],
         ...,
         [15.7273],
         [15.0197],
         [15.5160]],
        [[13.8605],
         [14.4017],
         [14.2523],
         ...,
         [14.9092],
         [14.7488],
         [15.3125]],
        ...,
        [[13.7029],
         [14.2674],
         [13.2447],
         ...,
         [13.9528],
         [14.4194],
         [15.0635]],
        [[14.1084],
         [14.6122],
         [15.9669],
         ...,
         [16.5224],
         [15.2741],
         [15.7064]],
        [[14.3759],
         [14.8386],
         [18.0088],
         ...,
         [18.4220],
         [15.8511],
         [16.1347]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9614, 0.9672, 1.1126,  ..., 1.1101, 0.9993, 0.9971],
        [0.9438, 0.9523, 0.9622,  ..., 0.9721, 0.9606, 0.9687],
        [0.9417, 0.9505, 0.9481,  ..., 0.9588, 0.9562, 0.9654],
        ...,
        [0.9392, 0.9484, 0.9317,  ..., 0.9432, 0.9508, 0.9613],
        [0.9458, 0.9540, 0.9760,  ..., 0.9850, 0.9647, 0.9718],
        [0.9501, 0.9576, 1.0092,  ..., 1.0159, 0.9741, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5797],
         [25.9959],
         ...,
         [26.3421],
         [13.8843],
         [14.0280]],
        [[10.8257],
         [10.8074],
         [23.9172],
         ...,
         [24.4648],
         [11.3960],
         [10.9300]],
        [[10.7173],
         [10.7154],
         [23.6717],
         ...,
         [24.2419],
         [11.1208],
         [10.5975]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3706],
         ...,
         [23.9681],
         [10.7884],
         [10.1989]],
        [[10.9267],
         [10.8930],
         [24.1461],
         ...,
         [24.6724],
         [11.6561],
         [11.2462]],
        [[11.1530],
         [11.0842],
         [24.6590],
         ...,
         [25.1367],
         [12.2514],
         [11.9767]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9839, 1.1744,  ..., 1.1789, 1.0143, 1.0162],
        [0.9739, 0.9736, 1.1469,  ..., 1.1541, 0.9814, 0.9753],
        [0.9725, 0.9724, 1.1437,  ..., 1.1512, 0.9778, 0.9709],
        ...,
        [0.9707, 0.9709, 1.1397,  ..., 1.1476, 0.9734, 0.9656],
        [0.9752, 0.9748, 1.1499,  ..., 1.1569, 0.9849, 0.9794],
        [0.9782, 0.9773, 1.1567,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7841],
         [12.8886],
         [11.0097],
         ...,
         [10.3679],
         [12.5519],
         [13.0508]],
        [[ 8.0190],
         [ 7.8728],
         [ 8.3378],
         ...,
         [ 8.8139],
         [ 8.4220],
         [ 7.6860]],
        [[ 7.5691],
         [ 7.4068],
         [ 8.0558],
         ...,
         [ 8.6385],
         [ 8.0161],
         [ 7.1984]],
        ...,
        [[ 7.0457],
         [ 6.8666],
         [ 7.7189],
         ...,
         [ 8.4257],
         [ 7.5394],
         [ 6.6360]],
        [[ 8.4580],
         [ 8.3291],
         [ 8.6069],
         ...,
         [ 8.9790],
         [ 8.8150],
         [ 8.1654]],
        [[ 9.5137],
         [ 9.4316],
         [ 9.2320],
         ...,
         [ 9.3543],
         [ 9.7482],
         [ 9.3318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9398,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8825,  ..., 0.8927, 0.8843, 0.8685],
        [0.8660, 0.8625, 0.8764,  ..., 0.8889, 0.8756, 0.8580],
        ...,
        [0.8548, 0.8509, 0.8692,  ..., 0.8843, 0.8653, 0.8460],
        [0.8850, 0.8823, 0.8882,  ..., 0.8962, 0.8927, 0.8788],
        [0.9077, 0.9059, 0.9016,  ..., 0.9043, 0.9127, 0.9038]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0742],
         [15.4369],
         [24.3640],
         ...,
         [24.2061],
         [17.4320],
         [17.2930]],
        [[13.9923],
         [14.5244],
         [15.1162],
         ...,
         [15.7334],
         [15.0420],
         [15.5218]],
        [[13.8639],
         [14.4152],
         [14.2489],
         ...,
         [14.9163],
         [14.7699],
         [15.3156]],
        ...,
        [[13.7062],
         [14.2809],
         [13.2413],
         ...,
         [13.9609],
         [14.4391],
         [15.0634]],
        [[14.1120],
         [14.6259],
         [15.9638],
         ...,
         [16.5275],
         [15.2977],
         [15.7147]],
        [[14.3795],
         [14.8523],
         [18.0060],
         ...,
         [18.4244],
         [15.8773],
         [16.1488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1098, 0.9996, 0.9973],
        [0.9436, 0.9523, 0.9619,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9652],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9611],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9717],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7424],
         [11.5796],
         [25.9932],
         ...,
         [26.3420],
         [13.8893],
         [14.0415]],
        [[10.8257],
         [10.8074],
         [23.9124],
         ...,
         [24.4645],
         [11.3973],
         [10.9304]],
        [[10.7173],
         [10.7154],
         [23.6667],
         ...,
         [24.2416],
         [11.1217],
         [10.5967]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3652],
         ...,
         [23.9678],
         [10.7889],
         [10.1966]],
        [[10.9267],
         [10.8930],
         [24.1415],
         ...,
         [24.6721],
         [11.6578],
         [11.2478]],
        [[11.1530],
         [11.0842],
         [24.6549],
         ...,
         [25.1365],
         [12.2539],
         [11.9812]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1540, 0.9814, 0.9752],
        [0.9724, 0.9723, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9751, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1566,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7836],
         [12.8878],
         [11.0126],
         ...,
         [10.3695],
         [12.5498],
         [13.0551]],
        [[ 8.0197],
         [ 7.8740],
         [ 8.3372],
         ...,
         [ 8.8141],
         [ 8.4270],
         [ 7.6818]],
        [[ 7.5699],
         [ 7.4081],
         [ 8.0548],
         ...,
         [ 8.6385],
         [ 8.0216],
         [ 7.1937]],
        ...,
        [[ 7.0466],
         [ 6.8679],
         [ 7.7176],
         ...,
         [ 8.4255],
         [ 7.5455],
         [ 6.6308]],
        [[ 8.4586],
         [ 8.3301],
         [ 8.6066],
         ...,
         [ 8.9793],
         [ 8.8194],
         [ 8.1618]],
        [[ 9.5141],
         [ 9.4322],
         [ 9.2324],
         ...,
         [ 9.3550],
         [ 9.7512],
         [ 9.3297]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8925, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8755, 0.8578],
        ...,
        [0.8546, 0.8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
        [0.8849, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9041, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0750],
         [15.4397],
         [24.3637],
         ...,
         [24.2046],
         [17.4389],
         [17.2991]],
        [[13.9930],
         [14.5271],
         [15.1156],
         ...,
         [15.7347],
         [15.0466],
         [15.5230]],
        [[13.8646],
         [14.4180],
         [14.2482],
         ...,
         [14.9178],
         [14.7742],
         [15.3162]],
        ...,
        [[13.7069],
         [14.2837],
         [13.2406],
         ...,
         [13.9626],
         [14.4430],
         [15.0634]],
        [[14.1127],
         [14.6286],
         [15.9631],
         ...,
         [16.5285],
         [15.3024],
         [15.7164]],
        [[14.3802],
         [14.8551],
         [18.0054],
         ...,
         [18.4248],
         [15.8826],
         [16.1517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9848, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9950],
         ...,
         [26.3421],
         [13.8860],
         [14.0326]],
        [[10.8257],
         [10.8074],
         [23.9156],
         ...,
         [24.4647],
         [11.3964],
         [10.9301]],
        [[10.7173],
         [10.7154],
         [23.6700],
         ...,
         [24.2418],
         [11.1211],
         [10.5972]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3687],
         ...,
         [23.9680],
         [10.7886],
         [10.1981]],
        [[10.9267],
         [10.8930],
         [24.1445],
         ...,
         [24.6723],
         [11.6567],
         [11.2468]],
        [[11.1530],
         [11.0842],
         [24.6576],
         ...,
         [25.1367],
         [12.2522],
         [11.9783]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0162],
        [0.9739, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1436,  ..., 1.1512, 0.9778, 0.9708],
        ...,
        [0.9707, 0.9709, 1.1396,  ..., 1.1475, 0.9734, 0.9656],
        [0.9752, 0.9747, 1.1499,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9773, 1.1567,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7839],
         [12.8883],
         [11.0107],
         ...,
         [10.3684],
         [12.5512],
         [13.0522]],
        [[ 8.0192],
         [ 7.8732],
         [ 8.3376],
         ...,
         [ 8.8140],
         [ 8.4237],
         [ 7.6846]],
        [[ 7.5694],
         [ 7.4072],
         [ 8.0554],
         ...,
         [ 8.6385],
         [ 8.0180],
         [ 7.1968]],
        ...,
        [[ 7.0460],
         [ 6.8670],
         [ 7.7185],
         ...,
         [ 8.4256],
         [ 7.5415],
         [ 6.6342]],
        [[ 8.4582],
         [ 8.3294],
         [ 8.6068],
         ...,
         [ 8.9791],
         [ 8.8165],
         [ 8.1642]],
        [[ 9.5138],
         [ 9.4318],
         [ 9.2321],
         ...,
         [ 9.3546],
         [ 9.7492],
         [ 9.3311]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8824,  ..., 0.8926, 0.8843, 0.8684],
        [0.8659, 0.8625, 0.8764,  ..., 0.8889, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8509, 0.8691,  ..., 0.8843, 0.8653, 0.8459],
        [0.8850, 0.8822, 0.8882,  ..., 0.8962, 0.8927, 0.8787],
        [0.9076, 0.9059, 0.9016,  ..., 0.9042, 0.9127, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0745],
         [15.4378],
         [24.3639],
         ...,
         [24.2056],
         [17.4344],
         [17.2951]],
        [[13.9926],
         [14.5253],
         [15.1160],
         ...,
         [15.7339],
         [15.0436],
         [15.5222]],
        [[13.8642],
         [14.4162],
         [14.2487],
         ...,
         [14.9168],
         [14.7714],
         [15.3158]],
        ...,
        [[13.7064],
         [14.2819],
         [13.2410],
         ...,
         [13.9615],
         [14.4404],
         [15.0634]],
        [[14.1122],
         [14.6268],
         [15.9636],
         ...,
         [16.5278],
         [15.2993],
         [15.7153]],
        [[14.3798],
         [14.8533],
         [18.0058],
         ...,
         [18.4245],
         [15.8791],
         [16.1498]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9973],
        [0.9436, 0.9523, 0.9619,  ..., 0.9720, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9652],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9611],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9717],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9936],
         ...,
         [26.3420],
         [13.8886],
         [14.0397]],
        [[10.8257],
         [10.8074],
         [23.9131],
         ...,
         [24.4646],
         [11.3972],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6674],
         ...,
         [24.2417],
         [11.1216],
         [10.5968]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3659],
         ...,
         [23.9678],
         [10.7888],
         [10.1969]],
        [[10.9267],
         [10.8930],
         [24.1421],
         ...,
         [24.6722],
         [11.6576],
         [11.2476]],
        [[11.1530],
         [11.0842],
         [24.6554],
         ...,
         [25.1365],
         [12.2536],
         [11.9806]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1395,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1566,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7837],
         [12.8879],
         [11.0122],
         ...,
         [10.3693],
         [12.5501],
         [13.0545]],
        [[ 8.0196],
         [ 7.8738],
         [ 8.3373],
         ...,
         [ 8.8141],
         [ 8.4263],
         [ 7.6824]],
        [[ 7.5698],
         [ 7.4079],
         [ 8.0550],
         ...,
         [ 8.6385],
         [ 8.0208],
         [ 7.1943]],
        ...,
        [[ 7.0465],
         [ 6.8677],
         [ 7.7178],
         ...,
         [ 8.4255],
         [ 7.5446],
         [ 6.6315]],
        [[ 8.4586],
         [ 8.3299],
         [ 8.6067],
         ...,
         [ 8.9793],
         [ 8.8188],
         [ 8.1623]],
        [[ 9.5141],
         [ 9.4321],
         [ 9.2324],
         ...,
         [ 9.3549],
         [ 9.7508],
         [ 9.3300]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8755, 0.8578],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8842, 0.8653, 0.8458],
        [0.8849, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9042, 0.9126, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0749],
         [15.4393],
         [24.3637],
         ...,
         [24.2048],
         [17.4379],
         [17.2983]],
        [[13.9930],
         [14.5268],
         [15.1157],
         ...,
         [15.7345],
         [15.0459],
         [15.5228]],
        [[13.8645],
         [14.4176],
         [14.2483],
         ...,
         [14.9176],
         [14.7736],
         [15.3161]],
        ...,
        [[13.7068],
         [14.2833],
         [13.2407],
         ...,
         [13.9624],
         [14.4425],
         [15.0634]],
        [[14.1126],
         [14.6283],
         [15.9632],
         ...,
         [16.5284],
         [15.3018],
         [15.7161]],
        [[14.3801],
         [14.8547],
         [18.0055],
         ...,
         [18.4248],
         [15.8819],
         [16.1513]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9945],
         ...,
         [26.3421],
         [13.8869],
         [14.0350]],
        [[10.8257],
         [10.8074],
         [23.9147],
         ...,
         [24.4647],
         [11.3967],
         [10.9302]],
        [[10.7173],
         [10.7154],
         [23.6691],
         ...,
         [24.2418],
         [11.1213],
         [10.5971]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3678],
         ...,
         [23.9679],
         [10.7887],
         [10.1977]],
        [[10.9267],
         [10.8930],
         [24.1437],
         ...,
         [24.6723],
         [11.6570],
         [11.2470]],
        [[11.1530],
         [11.0842],
         [24.6569],
         ...,
         [25.1366],
         [12.2527],
         [11.9790]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1436,  ..., 1.1511, 0.9778, 0.9708],
        ...,
        [0.9707, 0.9709, 1.1396,  ..., 1.1475, 0.9734, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9773, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7838],
         [12.8882],
         [11.0112],
         ...,
         [10.3687],
         [12.5508],
         [13.0530]],
        [[ 8.0194],
         [ 7.8734],
         [ 8.3375],
         ...,
         [ 8.8140],
         [ 8.4246],
         [ 7.6838]],
        [[ 7.5695],
         [ 7.4075],
         [ 8.0553],
         ...,
         [ 8.6385],
         [ 8.0190],
         [ 7.1960]],
        ...,
        [[ 7.0462],
         [ 6.8673],
         [ 7.7183],
         ...,
         [ 8.4256],
         [ 7.5426],
         [ 6.6333]],
        [[ 8.4583],
         [ 8.3296],
         [ 8.6068],
         ...,
         [ 8.9792],
         [ 8.8173],
         [ 8.1635]],
        [[ 9.5139],
         [ 9.4319],
         [ 9.2322],
         ...,
         [ 9.3547],
         [ 9.7498],
         [ 9.3307]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9800, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8756, 0.8724, 0.8824,  ..., 0.8926, 0.8843, 0.8684],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8509, 0.8691,  ..., 0.8843, 0.8653, 0.8458],
        [0.8850, 0.8822, 0.8882,  ..., 0.8961, 0.8927, 0.8787],
        [0.9076, 0.9059, 0.9016,  ..., 0.9042, 0.9127, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0746],
         [15.4383],
         [24.3638],
         ...,
         [24.2053],
         [17.4356],
         [17.2962]],
        [[13.9927],
         [14.5258],
         [15.1159],
         ...,
         [15.7341],
         [15.0444],
         [15.5224]],
        [[13.8643],
         [14.4167],
         [14.2486],
         ...,
         [14.9171],
         [14.7721],
         [15.3159]],
        ...,
        [[13.7066],
         [14.2823],
         [13.2409],
         ...,
         [13.9618],
         [14.4411],
         [15.0634]],
        [[14.1123],
         [14.6273],
         [15.9635],
         ...,
         [16.5280],
         [15.3001],
         [15.7156]],
        [[14.3799],
         [14.8538],
         [18.0057],
         ...,
         [18.4246],
         [15.8800],
         [16.1503]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9720, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9938],
         ...,
         [26.3420],
         [13.8882],
         [14.0387]],
        [[10.8257],
         [10.8074],
         [23.9134],
         ...,
         [24.4646],
         [11.3971],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6677],
         ...,
         [24.2417],
         [11.1215],
         [10.5969]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3663],
         ...,
         [23.9679],
         [10.7888],
         [10.1971]],
        [[10.9267],
         [10.8930],
         [24.1425],
         ...,
         [24.6722],
         [11.6575],
         [11.2475]],
        [[11.1530],
         [11.0842],
         [24.6557],
         ...,
         [25.1366],
         [12.2534],
         [11.9803]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9781, 0.9772, 1.1566,  ..., 1.1629, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7837],
         [12.8880],
         [11.0120],
         ...,
         [10.3691],
         [12.5502],
         [13.0542]],
        [[ 8.0196],
         [ 7.8737],
         [ 8.3373],
         ...,
         [ 8.8140],
         [ 8.4259],
         [ 7.6827]],
        [[ 7.5698],
         [ 7.4078],
         [ 8.0550],
         ...,
         [ 8.6385],
         [ 8.0204],
         [ 7.1947]],
        ...,
        [[ 7.0464],
         [ 6.8676],
         [ 7.7179],
         ...,
         [ 8.4255],
         [ 7.5442],
         [ 6.6319]],
        [[ 8.4585],
         [ 8.3299],
         [ 8.6067],
         ...,
         [ 8.9793],
         [ 8.8185],
         [ 8.1625]],
        [[ 9.5140],
         [ 9.4321],
         [ 9.2323],
         ...,
         [ 9.3548],
         [ 9.7506],
         [ 9.3302]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8823,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8578],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8842, 0.8653, 0.8458],
        [0.8849, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9042, 0.9127, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0748],
         [15.4391],
         [24.3638],
         ...,
         [24.2049],
         [17.4374],
         [17.2978]],
        [[13.9929],
         [14.5266],
         [15.1157],
         ...,
         [15.7344],
         [15.0456],
         [15.5227]],
        [[13.8645],
         [14.4174],
         [14.2484],
         ...,
         [14.9175],
         [14.7733],
         [15.3161]],
        ...,
        [[13.7067],
         [14.2831],
         [13.2407],
         ...,
         [13.9622],
         [14.4422],
         [15.0634]],
        [[14.1125],
         [14.6281],
         [15.9633],
         ...,
         [16.5283],
         [15.3014],
         [15.7160]],
        [[14.3801],
         [14.8545],
         [18.0055],
         ...,
         [18.4247],
         [15.8815],
         [16.1511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9943],
         ...,
         [26.3420],
         [13.8873],
         [14.0363]],
        [[10.8257],
         [10.8074],
         [23.9143],
         ...,
         [24.4646],
         [11.3968],
         [10.9302]],
        [[10.7173],
         [10.7154],
         [23.6686],
         ...,
         [24.2417],
         [11.1214],
         [10.5970]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3673],
         ...,
         [23.9679],
         [10.7887],
         [10.1975]],
        [[10.9267],
         [10.8930],
         [24.1433],
         ...,
         [24.6722],
         [11.6572],
         [11.2472]],
        [[11.1530],
         [11.0842],
         [24.6565],
         ...,
         [25.1366],
         [12.2529],
         [11.9795]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1436,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9773, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7838],
         [12.8881],
         [11.0115],
         ...,
         [10.3689],
         [12.5506],
         [13.0534]],
        [[ 8.0194],
         [ 7.8735],
         [ 8.3374],
         ...,
         [ 8.8140],
         [ 8.4250],
         [ 7.6834]],
        [[ 7.5696],
         [ 7.4076],
         [ 8.0552],
         ...,
         [ 8.6385],
         [ 8.0195],
         [ 7.1955]],
        ...,
        [[ 7.0462],
         [ 6.8674],
         [ 7.7182],
         ...,
         [ 8.4256],
         [ 7.5431],
         [ 6.6328]],
        [[ 8.4584],
         [ 8.3297],
         [ 8.6068],
         ...,
         [ 8.9792],
         [ 8.8177],
         [ 8.1632]],
        [[ 9.5140],
         [ 9.4320],
         [ 9.2323],
         ...,
         [ 9.3547],
         [ 9.7500],
         [ 9.3305]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9800, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8756, 0.8724, 0.8824,  ..., 0.8926, 0.8843, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8843, 0.8653, 0.8458],
        [0.8850, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9016,  ..., 0.9042, 0.9127, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0747],
         [15.4386],
         [24.3638],
         ...,
         [24.2052],
         [17.4362],
         [17.2967]],
        [[13.9928],
         [14.5261],
         [15.1158],
         ...,
         [15.7342],
         [15.0448],
         [15.5225]],
        [[13.8644],
         [14.4169],
         [14.2485],
         ...,
         [14.9172],
         [14.7725],
         [15.3160]],
        ...,
        [[13.7066],
         [14.2826],
         [13.2409],
         ...,
         [13.9619],
         [14.4415],
         [15.0634]],
        [[14.1124],
         [14.6276],
         [15.9634],
         ...,
         [16.5281],
         [15.3006],
         [15.7157]],
        [[14.3800],
         [14.8540],
         [18.0056],
         ...,
         [18.4246],
         [15.8805],
         [16.1506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9939],
         ...,
         [26.3420],
         [13.8880],
         [14.0382]],
        [[10.8257],
         [10.8074],
         [23.9136],
         ...,
         [24.4646],
         [11.3970],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6679],
         ...,
         [24.2417],
         [11.1215],
         [10.5969]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3665],
         ...,
         [23.9679],
         [10.7888],
         [10.1972]],
        [[10.9267],
         [10.8930],
         [24.1426],
         ...,
         [24.6722],
         [11.6574],
         [11.2474]],
        [[11.1530],
         [11.0842],
         [24.6559],
         ...,
         [25.1366],
         [12.2533],
         [11.9801]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9772, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7837],
         [12.8880],
         [11.0119],
         ...,
         [10.3691],
         [12.5503],
         [13.0540]],
        [[ 8.0195],
         [ 7.8737],
         [ 8.3373],
         ...,
         [ 8.8140],
         [ 8.4257],
         [ 7.6828]],
        [[ 7.5697],
         [ 7.4077],
         [ 8.0551],
         ...,
         [ 8.6385],
         [ 8.0202],
         [ 7.1949]],
        ...,
        [[ 7.0464],
         [ 6.8676],
         [ 7.7180],
         ...,
         [ 8.4255],
         [ 7.5440],
         [ 6.6321]],
        [[ 8.4585],
         [ 8.3298],
         [ 8.6067],
         ...,
         [ 8.9792],
         [ 8.8183],
         [ 8.1627]],
        [[ 9.5140],
         [ 9.4321],
         [ 9.2323],
         ...,
         [ 9.3548],
         [ 9.7505],
         [ 9.3302]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8824,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8842, 0.8653, 0.8458],
        [0.8849, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9042, 0.9127, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0748],
         [15.4390],
         [24.3638],
         ...,
         [24.2050],
         [17.4372],
         [17.2976]],
        [[13.9929],
         [14.5264],
         [15.1157],
         ...,
         [15.7344],
         [15.0454],
         [15.5227]],
        [[13.8645],
         [14.4173],
         [14.2484],
         ...,
         [14.9174],
         [14.7731],
         [15.3160]],
        ...,
        [[13.7067],
         [14.2830],
         [13.2408],
         ...,
         [13.9622],
         [14.4420],
         [15.0634]],
        [[14.1125],
         [14.6279],
         [15.9633],
         ...,
         [16.5283],
         [15.3012],
         [15.7159]],
        [[14.3801],
         [14.8544],
         [18.0055],
         ...,
         [18.4247],
         [15.8813],
         [16.1510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9941],
         ...,
         [26.3420],
         [13.8876],
         [14.0369]],
        [[10.8257],
         [10.8074],
         [23.9140],
         ...,
         [24.4646],
         [11.3969],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6684],
         ...,
         [24.2417],
         [11.1214],
         [10.5970]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3670],
         ...,
         [23.9679],
         [10.7887],
         [10.1974]],
        [[10.9267],
         [10.8930],
         [24.1431],
         ...,
         [24.6722],
         [11.6573],
         [11.2473]],
        [[11.1530],
         [11.0842],
         [24.6563],
         ...,
         [25.1366],
         [12.2531],
         [11.9797]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1436,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9772, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7838],
         [12.8881],
         [11.0116],
         ...,
         [10.3689],
         [12.5505],
         [13.0536]],
        [[ 8.0195],
         [ 7.8736],
         [ 8.3374],
         ...,
         [ 8.8140],
         [ 8.4253],
         [ 7.6832]],
        [[ 7.5697],
         [ 7.4076],
         [ 8.0552],
         ...,
         [ 8.6385],
         [ 8.0197],
         [ 7.1953]],
        ...,
        [[ 7.0463],
         [ 6.8675],
         [ 7.7181],
         ...,
         [ 8.4256],
         [ 7.5434],
         [ 6.6326]],
        [[ 8.4584],
         [ 8.3297],
         [ 8.6067],
         ...,
         [ 8.9792],
         [ 8.8179],
         [ 8.1630]],
        [[ 9.5140],
         [ 9.4320],
         [ 9.2323],
         ...,
         [ 9.3548],
         [ 9.7502],
         [ 9.3304]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8824,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8843, 0.8653, 0.8458],
        [0.8850, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9016,  ..., 0.9042, 0.9127, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0747],
         [15.4387],
         [24.3638],
         ...,
         [24.2051],
         [17.4365],
         [17.2970]],
        [[13.9928],
         [14.5262],
         [15.1158],
         ...,
         [15.7342],
         [15.0450],
         [15.5226]],
        [[13.8644],
         [14.4170],
         [14.2485],
         ...,
         [14.9173],
         [14.7727],
         [15.3160]],
        ...,
        [[13.7066],
         [14.2827],
         [13.2408],
         ...,
         [13.9620],
         [14.4417],
         [15.0634]],
        [[14.1124],
         [14.6277],
         [15.9634],
         ...,
         [16.5282],
         [15.3008],
         [15.7158]],
        [[14.3800],
         [14.8542],
         [18.0056],
         ...,
         [18.4247],
         [15.8808],
         [16.1507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9939],
         ...,
         [26.3420],
         [13.8879],
         [14.0379]],
        [[10.8257],
         [10.8074],
         [23.9137],
         ...,
         [24.4646],
         [11.3970],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6680],
         ...,
         [24.2417],
         [11.1215],
         [10.5969]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3666],
         ...,
         [23.9679],
         [10.7888],
         [10.1972]],
        [[10.9267],
         [10.8930],
         [24.1427],
         ...,
         [24.6722],
         [11.6574],
         [11.2474]],
        [[11.1530],
         [11.0842],
         [24.6560],
         ...,
         [25.1366],
         [12.2532],
         [11.9800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9772, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7837],
         [12.8880],
         [11.0119],
         ...,
         [10.3691],
         [12.5503],
         [13.0539]],
        [[ 8.0195],
         [ 7.8737],
         [ 8.3373],
         ...,
         [ 8.8140],
         [ 8.4256],
         [ 7.6829]],
        [[ 7.5697],
         [ 7.4077],
         [ 8.0551],
         ...,
         [ 8.6385],
         [ 8.0201],
         [ 7.1950]],
        ...,
        [[ 7.0464],
         [ 6.8676],
         [ 7.7180],
         ...,
         [ 8.4255],
         [ 7.5438],
         [ 6.6322]],
        [[ 8.4585],
         [ 8.3298],
         [ 8.6067],
         ...,
         [ 8.9792],
         [ 8.8182],
         [ 8.1627]],
        [[ 9.5140],
         [ 9.4320],
         [ 9.2323],
         ...,
         [ 9.3548],
         [ 9.7504],
         [ 9.3303]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8824,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8842, 0.8653, 0.8458],
        [0.8850, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9042, 0.9127, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0748],
         [15.4389],
         [24.3638],
         ...,
         [24.2050],
         [17.4370],
         [17.2975]],
        [[13.9929],
         [14.5264],
         [15.1158],
         ...,
         [15.7343],
         [15.0453],
         [15.5227]],
        [[13.8644],
         [14.4172],
         [14.2484],
         ...,
         [14.9174],
         [14.7731],
         [15.3160]],
        ...,
        [[13.7067],
         [14.2829],
         [13.2408],
         ...,
         [13.9621],
         [14.4420],
         [15.0634]],
        [[14.1125],
         [14.6279],
         [15.9633],
         ...,
         [16.5282],
         [15.3012],
         [15.7159]],
        [[14.3800],
         [14.8544],
         [18.0055],
         ...,
         [18.4247],
         [15.8812],
         [16.1509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9941],
         ...,
         [26.3420],
         [13.8877],
         [14.0372]],
        [[10.8257],
         [10.8074],
         [23.9139],
         ...,
         [24.4646],
         [11.3969],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6683],
         ...,
         [24.2417],
         [11.1214],
         [10.5970]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3669],
         ...,
         [23.9679],
         [10.7888],
         [10.1973]],
        [[10.9267],
         [10.8930],
         [24.1430],
         ...,
         [24.6722],
         [11.6573],
         [11.2473]],
        [[11.1530],
         [11.0842],
         [24.6562],
         ...,
         [25.1366],
         [12.2531],
         [11.9798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1436,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9772, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7838],
         [12.8881],
         [11.0117],
         ...,
         [10.3690],
         [12.5504],
         [13.0537]],
        [[ 8.0195],
         [ 7.8736],
         [ 8.3374],
         ...,
         [ 8.8140],
         [ 8.4254],
         [ 7.6831]],
        [[ 7.5697],
         [ 7.4077],
         [ 8.0551],
         ...,
         [ 8.6385],
         [ 8.0199],
         [ 7.1952]],
        ...,
        [[ 7.0463],
         [ 6.8675],
         [ 7.7181],
         ...,
         [ 8.4255],
         [ 7.5435],
         [ 6.6324]],
        [[ 8.4584],
         [ 8.3298],
         [ 8.6067],
         ...,
         [ 8.9792],
         [ 8.8180],
         [ 8.1629]],
        [[ 9.5140],
         [ 9.4320],
         [ 9.2323],
         ...,
         [ 9.3548],
         [ 9.7503],
         [ 9.3304]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8824,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8843, 0.8653, 0.8458],
        [0.8850, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9016,  ..., 0.9042, 0.9127, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0747],
         [15.4388],
         [24.3638],
         ...,
         [24.2051],
         [17.4367],
         [17.2972]],
        [[13.9928],
         [14.5263],
         [15.1158],
         ...,
         [15.7343],
         [15.0451],
         [15.5226]],
        [[13.8644],
         [14.4171],
         [14.2485],
         ...,
         [14.9173],
         [14.7729],
         [15.3160]],
        ...,
        [[13.7067],
         [14.2828],
         [13.2408],
         ...,
         [13.9621],
         [14.4418],
         [15.0634]],
        [[14.1124],
         [14.6278],
         [15.9634],
         ...,
         [16.5282],
         [15.3009],
         [15.7158]],
        [[14.3800],
         [14.8542],
         [18.0056],
         ...,
         [18.4247],
         [15.8809],
         [16.1508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7423],
         [11.5796],
         [25.9939],
         ...,
         [26.3420],
         [13.8879],
         [14.0379]],
        [[10.8257],
         [10.8074],
         [23.9137],
         ...,
         [24.4646],
         [11.3970],
         [10.9303]],
        [[10.7173],
         [10.7154],
         [23.6680],
         ...,
         [24.2417],
         [11.1215],
         [10.5969]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3666],
         ...,
         [23.9679],
         [10.7888],
         [10.1972]],
        [[10.9267],
         [10.8930],
         [24.1427],
         ...,
         [24.6722],
         [11.6574],
         [11.2474]],
        [[11.1530],
         [11.0842],
         [24.6560],
         ...,
         [25.1366],
         [12.2532],
         [11.9800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9859, 0.9838, 1.1743,  ..., 1.1789, 1.0143, 1.0163],
        [0.9738, 0.9736, 1.1468,  ..., 1.1541, 0.9814, 0.9752],
        [0.9724, 0.9724, 1.1435,  ..., 1.1511, 0.9777, 0.9708],
        ...,
        [0.9706, 0.9709, 1.1396,  ..., 1.1475, 0.9733, 0.9655],
        [0.9752, 0.9747, 1.1498,  ..., 1.1568, 0.9848, 0.9794],
        [0.9782, 0.9772, 1.1566,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7837],
         [12.8880],
         [11.0119],
         ...,
         [10.3691],
         [12.5503],
         [13.0539]],
        [[ 8.0195],
         [ 7.8737],
         [ 8.3373],
         ...,
         [ 8.8140],
         [ 8.4256],
         [ 7.6829]],
        [[ 7.5697],
         [ 7.4077],
         [ 8.0551],
         ...,
         [ 8.6385],
         [ 8.0201],
         [ 7.1950]],
        ...,
        [[ 7.0464],
         [ 6.8676],
         [ 7.7180],
         ...,
         [ 8.4255],
         [ 7.5438],
         [ 6.6322]],
        [[ 8.4585],
         [ 8.3298],
         [ 8.6067],
         ...,
         [ 8.9792],
         [ 8.8182],
         [ 8.1627]],
        [[ 9.5140],
         [ 9.4320],
         [ 9.2323],
         ...,
         [ 9.3548],
         [ 9.7504],
         [ 9.3303]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9799, 0.9397,  ..., 0.9259, 0.9727, 0.9835],
        [0.8755, 0.8724, 0.8824,  ..., 0.8926, 0.8842, 0.8683],
        [0.8659, 0.8624, 0.8763,  ..., 0.8888, 0.8756, 0.8579],
        ...,
        [0.8547, 0.8508, 0.8691,  ..., 0.8842, 0.8653, 0.8458],
        [0.8850, 0.8822, 0.8881,  ..., 0.8961, 0.8927, 0.8786],
        [0.9076, 0.9058, 0.9015,  ..., 0.9042, 0.9127, 0.9036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0748],
         [15.4389],
         [24.3638],
         ...,
         [24.2050],
         [17.4370],
         [17.2975]],
        [[13.9929],
         [14.5264],
         [15.1158],
         ...,
         [15.7343],
         [15.0453],
         [15.5227]],
        [[13.8644],
         [14.4172],
         [14.2484],
         ...,
         [14.9174],
         [14.7731],
         [15.3160]],
        ...,
        [[13.7067],
         [14.2829],
         [13.2408],
         ...,
         [13.9621],
         [14.4420],
         [15.0634]],
        [[14.1125],
         [14.6279],
         [15.9633],
         ...,
         [16.5282],
         [15.3012],
         [15.7159]],
        [[14.3800],
         [14.8544],
         [18.0055],
         ...,
         [18.4247],
         [15.8812],
         [16.1509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9612, 0.9671, 1.1123,  ..., 1.1097, 0.9996, 0.9974],
        [0.9436, 0.9523, 0.9619,  ..., 0.9719, 0.9607, 0.9685],
        [0.9415, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9539, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9499, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7257],
         [11.5892],
         [26.2708],
         ...,
         [26.3378],
         [13.2143],
         [13.0219]],
        [[10.8243],
         [10.8078],
         [24.3693],
         ...,
         [24.4586],
         [11.2239],
         [10.9025]],
        [[10.7176],
         [10.7149],
         [24.1436],
         ...,
         [24.2355],
         [10.9994],
         [10.6654]],
        ...,
        [[10.5867],
         [10.6006],
         [23.8665],
         ...,
         [23.9614],
         [10.7269],
         [10.3782]],
        [[10.9237],
         [10.8944],
         [24.5794],
         ...,
         [24.6664],
         [11.4353],
         [11.1261]],
        [[11.1463],
         [11.0879],
         [25.0496],
         ...,
         [25.1312],
         [11.9159],
         [11.6359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9925, 0.9907, 1.1847,  ..., 1.1856, 1.0122, 1.0097],
        [0.9806, 0.9804, 1.1596,  ..., 1.1608, 0.9859, 0.9816],
        [0.9792, 0.9792, 1.1566,  ..., 1.1578, 0.9829, 0.9785],
        ...,
        [0.9775, 0.9777, 1.1530,  ..., 1.1542, 0.9793, 0.9747],
        [0.9819, 0.9815, 1.1624,  ..., 1.1635, 0.9887, 0.9846],
        [0.9849, 0.9841, 1.1686,  ..., 1.1697, 0.9950, 0.9913]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8108],
         [12.9062],
         [10.7765],
         ...,
         [10.2243],
         [12.7379],
         [12.8113]],
        [[ 7.9800],
         [ 7.8501],
         [ 8.4350],
         ...,
         [ 8.8098],
         [ 8.0888],
         [ 7.9793]],
        [[ 7.5258],
         [ 7.3815],
         [ 8.1830],
         ...,
         [ 8.6489],
         [ 7.6467],
         [ 7.5250]],
        ...,
        [[ 6.9979],
         [ 6.8387],
         [ 7.8807],
         ...,
         [ 8.4533],
         [ 7.1313],
         [ 6.9970]],
        [[ 8.4236],
         [ 8.3091],
         [ 8.6745],
         ...,
         [ 8.9610],
         [ 8.5197],
         [ 8.4230]],
        [[ 9.4916],
         [ 9.4190],
         [ 9.2273],
         ...,
         [ 9.3039],
         [ 9.5534],
         [ 9.4912]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9836, 0.9856, 0.9400,  ..., 0.9281, 0.9820, 0.9836],
        [0.8800, 0.8772, 0.8897,  ..., 0.8978, 0.8823, 0.8800],
        [0.8702, 0.8672, 0.8843,  ..., 0.8943, 0.8728, 0.8702],
        ...,
        [0.8589, 0.8555, 0.8779,  ..., 0.8901, 0.8618, 0.8589],
        [0.8895, 0.8870, 0.8949,  ..., 0.9010, 0.8916, 0.8895],
        [0.9124, 0.9108, 0.9067,  ..., 0.9084, 0.9137, 0.9124]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0170],
         [15.2302],
         [24.4102],
         ...,
         [24.3934],
         [16.7128],
         [16.5628]],
        [[13.9680],
         [14.3336],
         [15.1709],
         ...,
         [15.5861],
         [14.6515],
         [15.2122]],
        [[13.8434],
         [14.2263],
         [14.3035],
         ...,
         [14.7454],
         [14.4147],
         [15.0529]],
        ...,
        [[13.6902],
         [14.0943],
         [13.2955],
         ...,
         [13.7647],
         [14.1261],
         [14.8574]],
        [[14.0841],
         [14.4333],
         [16.0184],
         ...,
         [16.4047],
         [14.8736],
         [15.3608]],
        [[14.3437],
         [14.6559],
         [18.0597],
         ...,
         [18.3666],
         [15.3756],
         [15.6939]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9661, 0.9695, 1.1188,  ..., 1.1186, 0.9937, 0.9912],
        [0.9490, 0.9550, 0.9686,  ..., 0.9753, 0.9601, 0.9692],
        [0.9470, 0.9532, 0.9545,  ..., 0.9616, 0.9563, 0.9667],
        ...,
        [0.9445, 0.9511, 0.9381,  ..., 0.9457, 0.9516, 0.9635],
        [0.9509, 0.9566, 0.9824,  ..., 0.9886, 0.9637, 0.9717],
        [0.9551, 0.9602, 1.0156,  ..., 1.0205, 0.9719, 0.9771]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7392],
         [11.5813],
         [26.0420],
         ...,
         [26.3412],
         [13.7592],
         [13.8422]],
        [[10.8254],
         [10.8075],
         [23.9978],
         ...,
         [24.4635],
         [11.3637],
         [10.9242]],
        [[10.7174],
         [10.7153],
         [23.7561],
         ...,
         [24.2406],
         [11.0978],
         [10.6087]],
        ...,
        [[10.5848],
         [10.6021],
         [23.4596],
         ...,
         [23.9667],
         [10.7763],
         [10.2297]],
        [[10.9262],
         [10.8932],
         [24.2230],
         ...,
         [24.6711],
         [11.6148],
         [11.2238]],
        [[11.1517],
         [11.0849],
         [24.7276],
         ...,
         [25.1356],
         [12.1889],
         [11.9143]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9850, 1.1761,  ..., 1.1801, 1.0138, 1.0149],
        [0.9750, 0.9748, 1.1491,  ..., 1.1553, 0.9822, 0.9764],
        [0.9736, 0.9736, 1.1459,  ..., 1.1523, 0.9786, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1420,  ..., 1.1487, 0.9744, 0.9672],
        [0.9764, 0.9759, 1.1521,  ..., 1.1580, 0.9855, 0.9803],
        [0.9794, 0.9785, 1.1588,  ..., 1.1642, 0.9931, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7888],
         [12.8914],
         [10.9575],
         ...,
         [10.3378],
         [12.5804],
         [13.0094]],
        [[ 8.0120],
         [ 7.8692],
         [ 8.3509],
         ...,
         [ 8.8112],
         [ 8.3582],
         [ 7.7285]],
        [[ 7.5614],
         [ 7.4028],
         [ 8.0747],
         ...,
         [ 8.6386],
         [ 7.9456],
         [ 7.2460]],
        ...,
        [[ 7.0372],
         [ 6.8621],
         [ 7.7446],
         ...,
         [ 8.4291],
         [ 7.4618],
         [ 6.6888]],
        [[ 8.4519],
         [ 8.3259],
         [ 8.6142],
         ...,
         [ 8.9736],
         [ 8.7580],
         [ 8.2024]],
        [[ 9.5098],
         [ 9.4296],
         [ 9.2251],
         ...,
         [ 9.3426],
         [ 9.7094],
         [ 9.3536]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9815, 0.9400,  ..., 0.9267, 0.9748, 0.9840],
        [0.8768, 0.8738, 0.8841,  ..., 0.8940, 0.8843, 0.8708],
        [0.8672, 0.8638, 0.8782,  ..., 0.8903, 0.8754, 0.8604],
        ...,
        [0.8559, 0.8522, 0.8711,  ..., 0.8858, 0.8650, 0.8485],
        [0.8863, 0.8836, 0.8897,  ..., 0.8975, 0.8928, 0.8809],
        [0.9089, 0.9072, 0.9028,  ..., 0.9054, 0.9132, 0.9056]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0639],
         [15.3984],
         [24.3726],
         ...,
         [24.2404],
         [17.3000],
         [17.1584]],
        [[13.9882],
         [14.4903],
         [15.1260],
         ...,
         [15.7063],
         [14.9697],
         [15.4630]],
        [[13.8606],
         [14.3817],
         [14.2586],
         ...,
         [14.8849],
         [14.7040],
         [15.2652]],
        ...,
        [[13.7037],
         [14.2480],
         [13.2509],
         ...,
         [13.9248],
         [14.3807],
         [15.0231]],
        [[14.1072],
         [14.5913],
         [15.9736],
         ...,
         [16.5049],
         [15.2193],
         [15.6480]],
        [[14.3732],
         [14.8167],
         [18.0156],
         ...,
         [18.4138],
         [15.7848],
         [16.0640]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 0.9675, 1.1134,  ..., 1.1113, 0.9984, 0.9961],
        [0.9445, 0.9527, 0.9630,  ..., 0.9725, 0.9605, 0.9685],
        [0.9424, 0.9509, 0.9489,  ..., 0.9591, 0.9562, 0.9653],
        ...,
        [0.9399, 0.9487, 0.9325,  ..., 0.9435, 0.9509, 0.9613],
        [0.9465, 0.9543, 0.9768,  ..., 0.9855, 0.9645, 0.9715],
        [0.9508, 0.9580, 1.0100,  ..., 1.0165, 0.9737, 0.9783]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7417],
         [11.5799],
         [26.0034],
         ...,
         [26.3419],
         [13.8622],
         [13.9987]],
        [[10.8256],
         [10.8074],
         [23.9304],
         ...,
         [24.4644],
         [11.3903],
         [10.9290]],
        [[10.7173],
         [10.7154],
         [23.6856],
         ...,
         [24.2415],
         [11.1167],
         [10.5992]],
        ...,
        [[10.5844],
         [10.6024],
         [23.3851],
         ...,
         [23.9676],
         [10.7863],
         [10.2036]],
        [[10.9266],
         [10.8930],
         [24.1587],
         ...,
         [24.6720],
         [11.6489],
         [11.2426]],
        [[11.1528],
         [11.0843],
         [24.6702],
         ...,
         [25.1364],
         [12.2404],
         [11.9669]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9862, 0.9840, 1.1746,  ..., 1.1791, 1.0142, 1.0160],
        [0.9741, 0.9738, 1.1473,  ..., 1.1543, 0.9815, 0.9754],
        [0.9726, 0.9726, 1.1440,  ..., 1.1514, 0.9779, 0.9711],
        ...,
        [0.9709, 0.9711, 1.1400,  ..., 1.1477, 0.9735, 0.9658],
        [0.9754, 0.9750, 1.1503,  ..., 1.1571, 0.9849, 0.9796],
        [0.9784, 0.9775, 1.1570,  ..., 1.1632, 0.9928, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7847],
         [12.8887],
         [11.0007],
         ...,
         [10.3627],
         [12.5562],
         [13.0450]],
        [[ 8.0180],
         [ 7.8728],
         [ 8.3399],
         ...,
         [ 8.8134],
         [ 8.4120],
         [ 7.6916]],
        [[ 7.5681],
         [ 7.4067],
         [ 8.0588],
         ...,
         [ 8.6385],
         [ 8.0051],
         [ 7.2047]],
        ...,
        [[ 7.0445],
         [ 6.8665],
         [ 7.7232],
         ...,
         [ 8.4262],
         [ 7.5273],
         [ 6.6430]],
        [[ 8.4572],
         [ 8.3290],
         [ 8.6080],
         ...,
         [ 8.9780],
         [ 8.8061],
         [ 8.1703]],
        [[ 9.5132],
         [ 9.4316],
         [ 9.2306],
         ...,
         [ 9.3523],
         [ 9.7421],
         [ 9.3347]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9780, 0.9802, 0.9397,  ..., 0.9261, 0.9731, 0.9836],
        [0.8758, 0.8727, 0.8827,  ..., 0.8928, 0.8842, 0.8688],
        [0.8661, 0.8627, 0.8767,  ..., 0.8891, 0.8755, 0.8583],
        ...,
        [0.8549, 0.8511, 0.8695,  ..., 0.8845, 0.8653, 0.8463],
        [0.8852, 0.8825, 0.8884,  ..., 0.8964, 0.8927, 0.8791],
        [0.9078, 0.9061, 0.9018,  ..., 0.9044, 0.9128, 0.9040]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0726],
         [15.4308],
         [24.3655],
         ...,
         [24.2120],
         [17.4097],
         [17.2697]],
        [[13.9919],
         [14.5192],
         [15.1178],
         ...,
         [15.7287],
         [15.0302],
         [15.5107]],
        [[13.8637],
         [14.4102],
         [14.2505],
         ...,
         [14.9109],
         [14.7592],
         [15.3058]],
        ...,
        [[13.7061],
         [14.2760],
         [13.2428],
         ...,
         [13.9547],
         [14.4297],
         [15.0553]],
        [[14.1114],
         [14.6206],
         [15.9654],
         ...,
         [16.5236],
         [15.2848],
         [15.7023]],
        [[14.3787],
         [14.8469],
         [18.0076],
         ...,
         [18.4225],
         [15.8619],
         [16.1335]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9614, 0.9672, 1.1125,  ..., 1.1100, 0.9994, 0.9971],
        [0.9438, 0.9524, 0.9621,  ..., 0.9720, 0.9607, 0.9685],
        [0.9417, 0.9506, 0.9480,  ..., 0.9587, 0.9563, 0.9652],
        ...,
        [0.9391, 0.9484, 0.9316,  ..., 0.9432, 0.9509, 0.9611],
        [0.9457, 0.9540, 0.9759,  ..., 0.9850, 0.9648, 0.9716],
        [0.9501, 0.9577, 1.0091,  ..., 1.0159, 0.9742, 0.9786]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7422],
         [11.5797],
         [25.9959],
         ...,
         [26.3420],
         [13.8825],
         [14.0296]],
        [[10.8257],
         [10.8074],
         [23.9172],
         ...,
         [24.4646],
         [11.3956],
         [10.9300]],
        [[10.7173],
         [10.7154],
         [23.6717],
         ...,
         [24.2417],
         [11.1205],
         [10.5974]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3706],
         ...,
         [23.9678],
         [10.7882],
         [10.1986]],
        [[10.9267],
         [10.8930],
         [24.1461],
         ...,
         [24.6722],
         [11.6556],
         [11.2464]],
        [[11.1530],
         [11.0842],
         [24.6590],
         ...,
         [25.1365],
         [12.2505],
         [11.9772]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9838, 1.1744,  ..., 1.1789, 1.0143, 1.0162],
        [0.9739, 0.9736, 1.1469,  ..., 1.1541, 0.9814, 0.9753],
        [0.9724, 0.9724, 1.1436,  ..., 1.1512, 0.9778, 0.9709],
        ...,
        [0.9707, 0.9709, 1.1397,  ..., 1.1476, 0.9734, 0.9656],
        [0.9752, 0.9748, 1.1499,  ..., 1.1569, 0.9848, 0.9794],
        [0.9782, 0.9773, 1.1567,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7839],
         [12.8882],
         [11.0095],
         ...,
         [10.3677],
         [12.5516],
         [13.0520]],
        [[ 8.0192],
         [ 7.8735],
         [ 8.3379],
         ...,
         [ 8.8139],
         [ 8.4228],
         [ 7.6847]],
        [[ 7.5694],
         [ 7.4075],
         [ 8.0559],
         ...,
         [ 8.6385],
         [ 8.0169],
         [ 7.1970]],
        ...,
        [[ 7.0460],
         [ 6.8673],
         [ 7.7191],
         ...,
         [ 8.4257],
         [ 7.5403],
         [ 6.6345]],
        [[ 8.4582],
         [ 8.3296],
         [ 8.6070],
         ...,
         [ 8.9790],
         [ 8.8156],
         [ 8.1643]],
        [[ 9.5138],
         [ 9.4319],
         [ 9.2319],
         ...,
         [ 9.3543],
         [ 9.7486],
         [ 9.3312]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8824,  ..., 0.8926, 0.8842, 0.8684],
        [0.8659, 0.8625, 0.8764,  ..., 0.8889, 0.8755, 0.8580],
        ...,
        [0.8547, 0.8509, 0.8692,  ..., 0.8843, 0.8653, 0.8459],
        [0.8850, 0.8822, 0.8882,  ..., 0.8962, 0.8927, 0.8787],
        [0.9076, 0.9059, 0.9016,  ..., 0.9042, 0.9127, 0.9037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0743],
         [15.4372],
         [24.3641],
         ...,
         [24.2065],
         [17.4312],
         [17.2916]],
        [[13.9927],
         [14.5249],
         [15.1162],
         ...,
         [15.7331],
         [15.0421],
         [15.5201]],
        [[13.8643],
         [14.4157],
         [14.2489],
         ...,
         [14.9160],
         [14.7701],
         [15.3139]],
        ...,
        [[13.7066],
         [14.2814],
         [13.2412],
         ...,
         [13.9606],
         [14.4394],
         [15.0617]],
        [[14.1122],
         [14.6263],
         [15.9638],
         ...,
         [16.5272],
         [15.2977],
         [15.7130]],
        [[14.3798],
         [14.8528],
         [18.0060],
         ...,
         [18.4242],
         [15.8771],
         [16.1472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1123,  ..., 1.1098, 0.9996, 0.9973],
        [0.9437, 0.9523, 0.9619,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9484, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9576, 1.0089,  ..., 1.0157, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7419],
         [11.5798],
         [26.0008],
         ...,
         [26.3419],
         [13.8691],
         [14.0092]],
        [[10.8257],
         [10.8074],
         [23.9259],
         ...,
         [24.4644],
         [11.3921],
         [10.9294]],
        [[10.7173],
         [10.7154],
         [23.6809],
         ...,
         [24.2415],
         [11.1180],
         [10.5986]],
        ...,
        [[10.5844],
         [10.6024],
         [23.3802],
         ...,
         [23.9677],
         [10.7869],
         [10.2019]],
        [[10.9266],
         [10.8930],
         [24.1544],
         ...,
         [24.6721],
         [11.6511],
         [11.2439]],
        [[11.1528],
         [11.0843],
         [24.6664],
         ...,
         [25.1364],
         [12.2438],
         [11.9704]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9861, 0.9840, 1.1746,  ..., 1.1791, 1.0142, 1.0161],
        [0.9740, 0.9738, 1.1471,  ..., 1.1542, 0.9815, 0.9754],
        [0.9726, 0.9725, 1.1439,  ..., 1.1513, 0.9779, 0.9710],
        ...,
        [0.9708, 0.9711, 1.1399,  ..., 1.1477, 0.9735, 0.9658],
        [0.9753, 0.9749, 1.1501,  ..., 1.1570, 0.9849, 0.9795],
        [0.9783, 0.9774, 1.1569,  ..., 1.1631, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7845],
         [12.8885],
         [11.0036],
         ...,
         [10.3644],
         [12.5546],
         [13.0474]],
        [[ 8.0184],
         [ 7.8730],
         [ 8.3392],
         ...,
         [ 8.8136],
         [ 8.4157],
         [ 7.6893]],
        [[ 7.5685],
         [ 7.4070],
         [ 8.0578],
         ...,
         [ 8.6385],
         [ 8.0091],
         [ 7.2021]],
        ...,
        [[ 7.0450],
         [ 6.8668],
         [ 7.7218],
         ...,
         [ 8.4260],
         [ 7.5317],
         [ 6.6401]],
        [[ 8.4575],
         [ 8.3292],
         [ 8.6077],
         ...,
         [ 8.9783],
         [ 8.8093],
         [ 8.1683]],
        [[ 9.5134],
         [ 9.4317],
         [ 9.2311],
         ...,
         [ 9.3529],
         [ 9.7443],
         [ 9.3335]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9779, 0.9802, 0.9397,  ..., 0.9260, 0.9730, 0.9836],
        [0.8757, 0.8726, 0.8826,  ..., 0.8928, 0.8842, 0.8687],
        [0.8661, 0.8626, 0.8766,  ..., 0.8890, 0.8755, 0.8582],
        ...,
        [0.8548, 0.8510, 0.8694,  ..., 0.8845, 0.8653, 0.8462],
        [0.8851, 0.8824, 0.8884,  ..., 0.8963, 0.8927, 0.8789],
        [0.9078, 0.9060, 0.9017,  ..., 0.9043, 0.9127, 0.9039]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0732],
         [15.4330],
         [24.3651],
         ...,
         [24.2102],
         [17.4170],
         [17.2772]],
        [[13.9922],
         [14.5211],
         [15.1172],
         ...,
         [15.7302],
         [15.0342],
         [15.5139]],
        [[13.8639],
         [14.4121],
         [14.2499],
         ...,
         [14.9126],
         [14.7629],
         [15.3086]],
        ...,
        [[13.7063],
         [14.2778],
         [13.2422],
         ...,
         [13.9567],
         [14.4330],
         [15.0574]],
        [[14.1117],
         [14.6225],
         [15.9648],
         ...,
         [16.5248],
         [15.2892],
         [15.7060]],
        [[14.3790],
         [14.8489],
         [18.0070],
         ...,
         [18.4231],
         [15.8671],
         [16.1382]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1125,  ..., 1.1099, 0.9995, 0.9972],
        [0.9437, 0.9524, 0.9620,  ..., 0.9720, 0.9607, 0.9685],
        [0.9417, 0.9506, 0.9479,  ..., 0.9587, 0.9563, 0.9652],
        ...,
        [0.9391, 0.9484, 0.9316,  ..., 0.9432, 0.9509, 0.9611],
        [0.9457, 0.9540, 0.9758,  ..., 0.9849, 0.9648, 0.9716],
        [0.9500, 0.9577, 1.0090,  ..., 1.0158, 0.9742, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7421],
         [11.5797],
         [25.9970],
         ...,
         [26.3420],
         [13.8797],
         [14.0253]],
        [[10.8257],
         [10.8074],
         [23.9191],
         ...,
         [24.4645],
         [11.3948],
         [10.9299]],
        [[10.7173],
         [10.7154],
         [23.6737],
         ...,
         [24.2416],
         [11.1199],
         [10.5976]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3726],
         ...,
         [23.9678],
         [10.7880],
         [10.1993]],
        [[10.9267],
         [10.8930],
         [24.1479],
         ...,
         [24.6721],
         [11.6546],
         [11.2458]],
        [[11.1529],
         [11.0843],
         [24.6605],
         ...,
         [25.1365],
         [12.2491],
         [11.9758]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9839, 1.1744,  ..., 1.1790, 1.0143, 1.0162],
        [0.9739, 0.9737, 1.1469,  ..., 1.1541, 0.9814, 0.9753],
        [0.9725, 0.9724, 1.1437,  ..., 1.1512, 0.9778, 0.9709],
        ...,
        [0.9707, 0.9710, 1.1397,  ..., 1.1476, 0.9734, 0.9656],
        [0.9752, 0.9748, 1.1500,  ..., 1.1569, 0.9849, 0.9795],
        [0.9782, 0.9773, 1.1567,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7841],
         [12.8882],
         [11.0082],
         ...,
         [10.3670],
         [12.5522],
         [13.0511]],
        [[ 8.0190],
         [ 7.8734],
         [ 8.3382],
         ...,
         [ 8.8138],
         [ 8.4213],
         [ 7.6857]],
        [[ 7.5692],
         [ 7.4074],
         [ 8.0563],
         ...,
         [ 8.6385],
         [ 8.0153],
         [ 7.1981]],
        ...,
        [[ 7.0458],
         [ 6.8672],
         [ 7.7197],
         ...,
         [ 8.4257],
         [ 7.5385],
         [ 6.6357]],
        [[ 8.4581],
         [ 8.3296],
         [ 8.6071],
         ...,
         [ 8.9788],
         [ 8.8143],
         [ 8.1652]],
        [[ 9.5137],
         [ 9.4319],
         [ 9.2318],
         ...,
         [ 9.3540],
         [ 9.7477],
         [ 9.3317]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8825,  ..., 0.8927, 0.8842, 0.8685],
        [0.8660, 0.8625, 0.8764,  ..., 0.8889, 0.8755, 0.8580],
        ...,
        [0.8547, 0.8509, 0.8692,  ..., 0.8843, 0.8653, 0.8460],
        [0.8850, 0.8823, 0.8882,  ..., 0.8962, 0.8927, 0.8788],
        [0.9077, 0.9059, 0.9016,  ..., 0.9042, 0.9127, 0.9038]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0741],
         [15.4363],
         [24.3643],
         ...,
         [24.2073],
         [17.4282],
         [17.2886]],
        [[13.9926],
         [14.5241],
         [15.1164],
         ...,
         [15.7325],
         [15.0405],
         [15.5188]],
        [[13.8642],
         [14.4150],
         [14.2491],
         ...,
         [14.9153],
         [14.7686],
         [15.3127]],
        ...,
        [[13.7065],
         [14.2807],
         [13.2414],
         ...,
         [13.9597],
         [14.4380],
         [15.0608]],
        [[14.1121],
         [14.6255],
         [15.9640],
         ...,
         [16.5267],
         [15.2959],
         [15.7115]],
        [[14.3796],
         [14.8520],
         [18.0062],
         ...,
         [18.4240],
         [15.8750],
         [16.1453]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1124,  ..., 1.1098, 0.9996, 0.9973],
        [0.9437, 0.9523, 0.9620,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9484, 0.9315,  ..., 0.9431, 0.9509, 0.9611],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9577, 1.0090,  ..., 1.0158, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7420],
         [11.5798],
         [25.9995],
         ...,
         [26.3419],
         [13.8727],
         [14.0147]],
        [[10.8257],
         [10.8074],
         [23.9236],
         ...,
         [24.4645],
         [11.3930],
         [10.9295]],
        [[10.7173],
         [10.7154],
         [23.6784],
         ...,
         [24.2416],
         [11.1187],
         [10.5983]],
        ...,
        [[10.5844],
         [10.6024],
         [23.3776],
         ...,
         [23.9677],
         [10.7873],
         [10.2010]],
        [[10.9267],
         [10.8930],
         [24.1522],
         ...,
         [24.6721],
         [11.6523],
         [11.2446]],
        [[11.1529],
         [11.0843],
         [24.6644],
         ...,
         [25.1365],
         [12.2456],
         [11.9722]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9861, 0.9839, 1.1745,  ..., 1.1790, 1.0142, 1.0161],
        [0.9740, 0.9737, 1.1471,  ..., 1.1542, 0.9815, 0.9753],
        [0.9725, 0.9725, 1.1438,  ..., 1.1513, 0.9778, 0.9710],
        ...,
        [0.9708, 0.9710, 1.1399,  ..., 1.1476, 0.9735, 0.9657],
        [0.9753, 0.9749, 1.1501,  ..., 1.1570, 0.9849, 0.9795],
        [0.9783, 0.9774, 1.1569,  ..., 1.1631, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7843],
         [12.8884],
         [11.0052],
         ...,
         [10.3653],
         [12.5538],
         [13.0486]],
        [[ 8.0186],
         [ 7.8731],
         [ 8.3388],
         ...,
         [ 8.8136],
         [ 8.4176],
         [ 7.6881]],
        [[ 7.5687],
         [ 7.4071],
         [ 8.0573],
         ...,
         [ 8.6385],
         [ 8.0112],
         [ 7.2007]],
        ...,
        [[ 7.0453],
         [ 6.8669],
         [ 7.7211],
         ...,
         [ 8.4259],
         [ 7.5340],
         [ 6.6386]],
        [[ 8.4577],
         [ 8.3293],
         [ 8.6075],
         ...,
         [ 8.9785],
         [ 8.8110],
         [ 8.1672]],
        [[ 9.5135],
         [ 9.4318],
         [ 9.2313],
         ...,
         [ 9.3533],
         [ 9.7455],
         [ 9.3329]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9779, 0.9801, 0.9397,  ..., 0.9260, 0.9729, 0.9835],
        [0.8757, 0.8726, 0.8826,  ..., 0.8927, 0.8842, 0.8686],
        [0.8660, 0.8626, 0.8765,  ..., 0.8890, 0.8755, 0.8581],
        ...,
        [0.8548, 0.8510, 0.8693,  ..., 0.8844, 0.8653, 0.8461],
        [0.8851, 0.8823, 0.8883,  ..., 0.8963, 0.8927, 0.8789],
        [0.9077, 0.9060, 0.9017,  ..., 0.9043, 0.9127, 0.9039]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0735],
         [15.4341],
         [24.3648],
         ...,
         [24.2092],
         [17.4208],
         [17.2810]],
        [[13.9923],
         [14.5221],
         [15.1170],
         ...,
         [15.7310],
         [15.0364],
         [15.5156]],
        [[13.8640],
         [14.4131],
         [14.2496],
         ...,
         [14.9135],
         [14.7649],
         [15.3100]],
        ...,
        [[13.7063],
         [14.2788],
         [13.2420],
         ...,
         [13.9577],
         [14.4347],
         [15.0586]],
        [[14.1118],
         [14.6236],
         [15.9645],
         ...,
         [16.5255],
         [15.2914],
         [15.7079]],
        [[14.3792],
         [14.8499],
         [18.0067],
         ...,
         [18.4234],
         [15.8698],
         [16.1406]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1124,  ..., 1.1099, 0.9995, 0.9972],
        [0.9437, 0.9523, 0.9620,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9506, 0.9479,  ..., 0.9587, 0.9563, 0.9652],
        ...,
        [0.9391, 0.9484, 0.9315,  ..., 0.9432, 0.9509, 0.9611],
        [0.9457, 0.9540, 0.9758,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9577, 1.0090,  ..., 1.0158, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7421],
         [11.5797],
         [25.9975],
         ...,
         [26.3420],
         [13.8782],
         [14.0231]],
        [[10.8257],
         [10.8074],
         [23.9200],
         ...,
         [24.4645],
         [11.3944],
         [10.9298]],
        [[10.7173],
         [10.7154],
         [23.6747],
         ...,
         [24.2416],
         [11.1197],
         [10.5978]],
        ...,
        [[10.5844],
         [10.6024],
         [23.3736],
         ...,
         [23.9678],
         [10.7878],
         [10.1997]],
        [[10.9267],
         [10.8930],
         [24.1488],
         ...,
         [24.6721],
         [11.6542],
         [11.2456]],
        [[11.1529],
         [11.0843],
         [24.6614],
         ...,
         [25.1365],
         [12.2484],
         [11.9750]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9839, 1.1744,  ..., 1.1790, 1.0143, 1.0162],
        [0.9739, 0.9737, 1.1470,  ..., 1.1542, 0.9814, 0.9753],
        [0.9725, 0.9725, 1.1437,  ..., 1.1512, 0.9778, 0.9709],
        ...,
        [0.9707, 0.9710, 1.1397,  ..., 1.1476, 0.9734, 0.9656],
        [0.9753, 0.9748, 1.1500,  ..., 1.1569, 0.9849, 0.9795],
        [0.9782, 0.9773, 1.1568,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7841],
         [12.8883],
         [11.0076],
         ...,
         [10.3666],
         [12.5525],
         [13.0505]],
        [[ 8.0189],
         [ 7.8733],
         [ 8.3383],
         ...,
         [ 8.8138],
         [ 8.4205],
         [ 7.6862]],
        [[ 7.5691],
         [ 7.4073],
         [ 8.0565],
         ...,
         [ 8.6385],
         [ 8.0144],
         [ 7.1986]],
        ...,
        [[ 7.0457],
         [ 6.8671],
         [ 7.7199],
         ...,
         [ 8.4258],
         [ 7.5376],
         [ 6.6363]],
        [[ 8.4580],
         [ 8.3295],
         [ 8.6072],
         ...,
         [ 8.9788],
         [ 8.8136],
         [ 8.1656]],
        [[ 9.5137],
         [ 9.4319],
         [ 9.2317],
         ...,
         [ 9.3538],
         [ 9.7473],
         [ 9.3319]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8825,  ..., 0.8927, 0.8842, 0.8685],
        [0.8660, 0.8625, 0.8764,  ..., 0.8889, 0.8755, 0.8580],
        ...,
        [0.8548, 0.8509, 0.8692,  ..., 0.8844, 0.8653, 0.8460],
        [0.8850, 0.8823, 0.8882,  ..., 0.8962, 0.8927, 0.8788],
        [0.9077, 0.9059, 0.9016,  ..., 0.9043, 0.9127, 0.9038]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0740],
         [15.4359],
         [24.3644],
         ...,
         [24.2077],
         [17.4267],
         [17.2870]],
        [[13.9925],
         [14.5237],
         [15.1165],
         ...,
         [15.7322],
         [15.0396],
         [15.5181]],
        [[13.8642],
         [14.4146],
         [14.2492],
         ...,
         [14.9149],
         [14.7678],
         [15.3122]],
        ...,
        [[13.7065],
         [14.2803],
         [13.2415],
         ...,
         [13.9593],
         [14.4373],
         [15.0603]],
        [[14.1121],
         [14.6251],
         [15.9641],
         ...,
         [16.5265],
         [15.2949],
         [15.7108]],
        [[14.3795],
         [14.8515],
         [18.0063],
         ...,
         [18.4239],
         [15.8739],
         [16.1443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1124,  ..., 1.1098, 0.9995, 0.9973],
        [0.9437, 0.9523, 0.9620,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9506, 0.9479,  ..., 0.9587, 0.9563, 0.9652],
        ...,
        [0.9390, 0.9484, 0.9315,  ..., 0.9431, 0.9509, 0.9611],
        [0.9456, 0.9540, 0.9758,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9577, 1.0090,  ..., 1.0158, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7421],
         [11.5797],
         [25.9971],
         ...,
         [26.3420],
         [13.8793],
         [14.0248]],
        [[10.8257],
         [10.8074],
         [23.9193],
         ...,
         [24.4645],
         [11.3947],
         [10.9299]],
        [[10.7173],
         [10.7154],
         [23.6739],
         ...,
         [24.2416],
         [11.1199],
         [10.5977]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3728],
         ...,
         [23.9678],
         [10.7879],
         [10.1994]],
        [[10.9267],
         [10.8930],
         [24.1481],
         ...,
         [24.6721],
         [11.6545],
         [11.2458]],
        [[11.1529],
         [11.0843],
         [24.6607],
         ...,
         [25.1365],
         [12.2489],
         [11.9756]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9839, 1.1744,  ..., 1.1790, 1.0143, 1.0162],
        [0.9739, 0.9737, 1.1469,  ..., 1.1542, 0.9814, 0.9753],
        [0.9725, 0.9725, 1.1437,  ..., 1.1512, 0.9778, 0.9709],
        ...,
        [0.9707, 0.9710, 1.1397,  ..., 1.1476, 0.9734, 0.9656],
        [0.9752, 0.9748, 1.1500,  ..., 1.1569, 0.9849, 0.9795],
        [0.9782, 0.9773, 1.1567,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7841],
         [12.8882],
         [11.0081],
         ...,
         [10.3669],
         [12.5523],
         [13.0509]],
        [[ 8.0190],
         [ 7.8734],
         [ 8.3382],
         ...,
         [ 8.8138],
         [ 8.4211],
         [ 7.6858]],
        [[ 7.5692],
         [ 7.4074],
         [ 8.0563],
         ...,
         [ 8.6385],
         [ 8.0151],
         [ 7.1982]],
        ...,
        [[ 7.0457],
         [ 6.8672],
         [ 7.7197],
         ...,
         [ 8.4258],
         [ 7.5383],
         [ 6.6358]],
        [[ 8.4580],
         [ 8.3295],
         [ 8.6071],
         ...,
         [ 8.9788],
         [ 8.8142],
         [ 8.1653]],
        [[ 9.5137],
         [ 9.4319],
         [ 9.2317],
         ...,
         [ 9.3540],
         [ 9.7476],
         [ 9.3317]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8825,  ..., 0.8927, 0.8842, 0.8685],
        [0.8660, 0.8625, 0.8764,  ..., 0.8889, 0.8755, 0.8580],
        ...,
        [0.8548, 0.8509, 0.8692,  ..., 0.8843, 0.8653, 0.8460],
        [0.8850, 0.8823, 0.8882,  ..., 0.8962, 0.8927, 0.8788],
        [0.9077, 0.9059, 0.9016,  ..., 0.9042, 0.9127, 0.9038]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0741],
         [15.4362],
         [24.3644],
         ...,
         [24.2073],
         [17.4279],
         [17.2882]],
        [[13.9926],
         [14.5240],
         [15.1164],
         ...,
         [15.7325],
         [15.0403],
         [15.5187]],
        [[13.8642],
         [14.4149],
         [14.2491],
         ...,
         [14.9152],
         [14.7684],
         [15.3126]],
        ...,
        [[13.7065],
         [14.2806],
         [13.2414],
         ...,
         [13.9597],
         [14.4379],
         [15.0607]],
        [[14.1121],
         [14.6255],
         [15.9640],
         ...,
         [16.5267],
         [15.2957],
         [15.7114]],
        [[14.3796],
         [14.8519],
         [18.0062],
         ...,
         [18.4240],
         [15.8747],
         [16.1451]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1124,  ..., 1.1098, 0.9996, 0.9973],
        [0.9437, 0.9523, 0.9620,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9505, 0.9479,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9484, 0.9315,  ..., 0.9431, 0.9509, 0.9611],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9577, 1.0090,  ..., 1.0158, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7421],
         [11.5797],
         [25.9970],
         ...,
         [26.3420],
         [13.8797],
         [14.0253]],
        [[10.8257],
         [10.8074],
         [23.9191],
         ...,
         [24.4645],
         [11.3948],
         [10.9299]],
        [[10.7173],
         [10.7154],
         [23.6737],
         ...,
         [24.2416],
         [11.1199],
         [10.5976]],
        ...,
        [[10.5843],
         [10.6024],
         [23.3726],
         ...,
         [23.9678],
         [10.7880],
         [10.1993]],
        [[10.9267],
         [10.8930],
         [24.1479],
         ...,
         [24.6721],
         [11.6546],
         [11.2458]],
        [[11.1529],
         [11.0843],
         [24.6605],
         ...,
         [25.1365],
         [12.2491],
         [11.9758]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9860, 0.9839, 1.1744,  ..., 1.1790, 1.0143, 1.0162],
        [0.9739, 0.9737, 1.1469,  ..., 1.1541, 0.9814, 0.9753],
        [0.9725, 0.9724, 1.1437,  ..., 1.1512, 0.9778, 0.9709],
        ...,
        [0.9707, 0.9710, 1.1397,  ..., 1.1476, 0.9734, 0.9656],
        [0.9752, 0.9748, 1.1500,  ..., 1.1569, 0.9849, 0.9795],
        [0.9782, 0.9773, 1.1567,  ..., 1.1630, 0.9927, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7841],
         [12.8882],
         [11.0082],
         ...,
         [10.3670],
         [12.5522],
         [13.0511]],
        [[ 8.0190],
         [ 7.8734],
         [ 8.3382],
         ...,
         [ 8.8138],
         [ 8.4213],
         [ 7.6857]],
        [[ 7.5692],
         [ 7.4074],
         [ 8.0563],
         ...,
         [ 8.6385],
         [ 8.0153],
         [ 7.1981]],
        ...,
        [[ 7.0458],
         [ 6.8672],
         [ 7.7197],
         ...,
         [ 8.4257],
         [ 7.5385],
         [ 6.6357]],
        [[ 8.4581],
         [ 8.3296],
         [ 8.6071],
         ...,
         [ 8.9788],
         [ 8.8143],
         [ 8.1652]],
        [[ 9.5137],
         [ 9.4319],
         [ 9.2318],
         ...,
         [ 9.3540],
         [ 9.7477],
         [ 9.3317]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9800, 0.9397,  ..., 0.9260, 0.9728, 0.9835],
        [0.8756, 0.8725, 0.8825,  ..., 0.8927, 0.8842, 0.8685],
        [0.8660, 0.8625, 0.8764,  ..., 0.8889, 0.8755, 0.8580],
        ...,
        [0.8547, 0.8509, 0.8692,  ..., 0.8843, 0.8653, 0.8460],
        [0.8850, 0.8823, 0.8882,  ..., 0.8962, 0.8927, 0.8788],
        [0.9077, 0.9059, 0.9016,  ..., 0.9042, 0.9127, 0.9038]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0741],
         [15.4363],
         [24.3643],
         ...,
         [24.2073],
         [17.4282],
         [17.2886]],
        [[13.9926],
         [14.5241],
         [15.1164],
         ...,
         [15.7325],
         [15.0405],
         [15.5188]],
        [[13.8642],
         [14.4150],
         [14.2491],
         ...,
         [14.9153],
         [14.7686],
         [15.3127]],
        ...,
        [[13.7065],
         [14.2807],
         [13.2414],
         ...,
         [13.9597],
         [14.4380],
         [15.0608]],
        [[14.1121],
         [14.6255],
         [15.9640],
         ...,
         [16.5267],
         [15.2959],
         [15.7115]],
        [[14.3796],
         [14.8520],
         [18.0062],
         ...,
         [18.4240],
         [15.8750],
         [16.1453]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9672, 1.1124,  ..., 1.1098, 0.9996, 0.9973],
        [0.9437, 0.9523, 0.9620,  ..., 0.9720, 0.9607, 0.9685],
        [0.9416, 0.9505, 0.9478,  ..., 0.9587, 0.9563, 0.9651],
        ...,
        [0.9390, 0.9484, 0.9315,  ..., 0.9431, 0.9509, 0.9611],
        [0.9456, 0.9540, 0.9757,  ..., 0.9849, 0.9649, 0.9716],
        [0.9500, 0.9577, 1.0090,  ..., 1.0158, 0.9743, 0.9787]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7131],
         [11.5967],
         [26.3635],
         ...,
         [26.3010],
         [12.7876],
         [12.7281]],
        [[10.8231],
         [10.8091],
         [24.5071],
         ...,
         [24.4054],
         [11.1179],
         [10.8929]],
        [[10.7178],
         [10.7154],
         [24.2866],
         ...,
         [24.1804],
         [10.9270],
         [10.6850]],
        ...,
        [[10.5884],
         [10.6002],
         [24.0156],
         ...,
         [23.9041],
         [10.6945],
         [10.4324]],
        [[10.9213],
         [10.8963],
         [24.7124],
         ...,
         [24.6149],
         [11.2971],
         [11.0885]],
        [[11.1412],
         [11.0913],
         [25.1717],
         ...,
         [25.0837],
         [11.7028],
         [11.5325]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9945, 0.9929, 1.1881,  ..., 1.1873, 1.0087, 1.0079],
        [0.9827, 0.9825, 1.1636,  ..., 1.1622, 0.9866, 0.9836],
        [0.9813, 0.9813, 1.1606,  ..., 1.1592, 0.9841, 0.9809],
        ...,
        [0.9796, 0.9798, 1.1571,  ..., 1.1556, 0.9810, 0.9776],
        [0.9840, 0.9837, 1.1663,  ..., 1.1650, 0.9890, 0.9862],
        [0.9869, 0.9863, 1.1723,  ..., 1.1712, 0.9943, 0.9921]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8198],
         [12.9032],
         [10.6979],
         ...,
         [10.1726],
         [12.7976],
         [12.8166]],
        [[ 7.9671],
         [ 7.8539],
         [ 8.5105],
         ...,
         [ 8.8183],
         [ 7.9992],
         [ 7.9717]],
        [[ 7.5115],
         [ 7.3858],
         [ 8.2729],
         ...,
         [ 8.6637],
         [ 7.5472],
         [ 7.5166]],
        ...,
        [[ 6.9821],
         [ 6.8434],
         [ 7.9872],
         ...,
         [ 8.4756],
         [ 7.0214],
         [ 6.9877]],
        [[ 8.4122],
         [ 8.3124],
         [ 8.7360],
         ...,
         [ 8.9635],
         [ 8.4405],
         [ 8.4163]],
        [[ 9.4843],
         [ 9.4211],
         [ 9.2547],
         ...,
         [ 9.2923],
         [ 9.5025],
         [ 9.4869]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9839, 0.9857, 0.9384,  ..., 0.9271, 0.9834, 0.9838],
        [0.8798, 0.8774, 0.8915,  ..., 0.8981, 0.8805, 0.8799],
        [0.8701, 0.8674, 0.8864,  ..., 0.8948, 0.8708, 0.8702],
        ...,
        [0.8587, 0.8557, 0.8803,  ..., 0.8907, 0.8595, 0.8588],
        [0.8894, 0.8872, 0.8963,  ..., 0.9012, 0.8900, 0.8895],
        [0.9124, 0.9110, 0.9074,  ..., 0.9082, 0.9128, 0.9124]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9891],
         [15.1233],
         [24.4660],
         ...,
         [24.5283],
         [16.2787],
         [16.1458]],
        [[13.9677],
         [14.2314],
         [15.1748],
         ...,
         [15.4761],
         [14.4545],
         [14.9460]],
        [[13.8462],
         [14.1247],
         [14.3036],
         ...,
         [14.6185],
         [14.2434],
         [14.8038]],
        ...,
        [[13.6969],
         [13.9934],
         [13.2915],
         ...,
         [13.6199],
         [13.9857],
         [14.6292]],
        [[14.0808],
         [14.3306],
         [16.0262],
         ...,
         [16.3125],
         [14.6522],
         [15.0785]],
        [[14.3337],
         [14.5520],
         [18.0778],
         ...,
         [18.3214],
         [15.0980],
         [15.3750]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9693, 0.9715, 1.1235,  ..., 1.1245, 0.9903, 0.9882],
        [0.9527, 0.9570, 0.9724,  ..., 0.9773, 0.9606, 0.9686],
        [0.9508, 0.9553, 0.9582,  ..., 0.9633, 0.9572, 0.9663],
        ...,
        [0.9483, 0.9531, 0.9417,  ..., 0.9471, 0.9530, 0.9635],
        [0.9546, 0.9586, 0.9862,  ..., 0.9909, 0.9639, 0.9708],
        [0.9587, 0.9622, 1.0196,  ..., 1.0235, 0.9711, 0.9756]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7370],
         [11.5826],
         [26.0554],
         ...,
         [26.3347],
         [13.6792],
         [13.7870]],
        [[10.8252],
         [10.8077],
         [24.0209],
         ...,
         [24.4542],
         [11.3436],
         [10.9219]],
        [[10.7174],
         [10.7155],
         [23.7804],
         ...,
         [24.2309],
         [11.0837],
         [10.6115]],
        ...,
        [[10.5851],
         [10.6021],
         [23.4852],
         ...,
         [23.9566],
         [10.7694],
         [10.2384]],
        [[10.9258],
         [10.8936],
         [24.2451],
         ...,
         [24.6621],
         [11.5889],
         [11.2166]],
        [[11.1508],
         [11.0855],
         [24.7474],
         ...,
         [25.1272],
         [12.1492],
         [11.8953]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9874, 0.9854, 1.1767,  ..., 1.1804, 1.0131, 1.0145],
        [0.9754, 0.9752, 1.1498,  ..., 1.1555, 0.9822, 0.9767],
        [0.9740, 0.9739, 1.1466,  ..., 1.1525, 0.9788, 0.9726],
        ...,
        [0.9722, 0.9724, 1.1427,  ..., 1.1489, 0.9746, 0.9676],
        [0.9767, 0.9763, 1.1527,  ..., 1.1582, 0.9855, 0.9806],
        [0.9797, 0.9788, 1.1594,  ..., 1.1644, 0.9929, 0.9895]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7903],
         [12.8908],
         [10.9324],
         ...,
         [10.3230],
         [12.5895],
         [13.0105]],
        [[ 8.0098],
         [ 7.8699],
         [ 8.3590],
         ...,
         [ 8.8101],
         [ 8.3395],
         [ 7.7272]],
        [[ 7.5589],
         [ 7.4036],
         [ 8.0859],
         ...,
         [ 8.6389],
         [ 7.9249],
         [ 7.2446]],
        ...,
        [[ 7.0344],
         [ 6.8630],
         [ 7.7592],
         ...,
         [ 8.4311],
         [ 7.4390],
         [ 6.6872]],
        [[ 8.4499],
         [ 8.3265],
         [ 8.6194],
         ...,
         [ 8.9711],
         [ 8.7414],
         [ 8.2013]],
        [[ 9.5085],
         [ 9.4300],
         [ 9.2230],
         ...,
         [ 9.3369],
         [ 9.6982],
         [ 9.3529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9814, 0.9394,  ..., 0.9263, 0.9750, 0.9840],
        [0.8767, 0.8737, 0.8842,  ..., 0.8939, 0.8838, 0.8707],
        [0.8671, 0.8637, 0.8784,  ..., 0.8902, 0.8749, 0.8603],
        ...,
        [0.8558, 0.8522, 0.8714,  ..., 0.8858, 0.8645, 0.8484],
        [0.8862, 0.8835, 0.8898,  ..., 0.8974, 0.8924, 0.8809],
        [0.9089, 0.9072, 0.9028,  ..., 0.9052, 0.9129, 0.9055]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3776],
         [24.3824],
         ...,
         [24.2646],
         [17.2218],
         [17.0813]],
        [[13.9882],
         [14.4723],
         [15.1266],
         ...,
         [15.6864],
         [14.9324],
         [15.4138]],
        [[13.8611],
         [14.3640],
         [14.2586],
         ...,
         [14.8618],
         [14.6711],
         [15.2191]],
        ...,
        [[13.7050],
         [14.2308],
         [13.2502],
         ...,
         [13.8984],
         [14.3530],
         [14.9807]],
        [[14.1066],
         [14.5730],
         [15.9749],
         ...,
         [16.4883],
         [15.1778],
         [15.5958]],
        [[14.3714],
         [14.7977],
         [18.0188],
         ...,
         [18.4057],
         [15.7338],
         [16.0051]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9676, 1.1141,  ..., 1.1122, 0.9976, 0.9953],
        [0.9450, 0.9529, 0.9635,  ..., 0.9726, 0.9604, 0.9682],
        [0.9430, 0.9511, 0.9494,  ..., 0.9592, 0.9561, 0.9650],
        ...,
        [0.9404, 0.9490, 0.9330,  ..., 0.9436, 0.9510, 0.9612],
        [0.9469, 0.9545, 0.9773,  ..., 0.9857, 0.9644, 0.9712],
        [0.9513, 0.9582, 1.0106,  ..., 1.0169, 0.9734, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7411],
         [11.5803],
         [26.0087],
         ...,
         [26.3405],
         [13.8383],
         [13.9762]],
        [[10.8256],
         [10.8074],
         [23.9399],
         ...,
         [24.4624],
         [11.3842],
         [10.9282]],
        [[10.7173],
         [10.7154],
         [23.6955],
         ...,
         [24.2394],
         [11.1124],
         [10.6004]],
        ...,
        [[10.5845],
         [10.6023],
         [23.3956],
         ...,
         [23.9655],
         [10.7841],
         [10.2072]],
        [[10.9265],
         [10.8931],
         [24.1677],
         ...,
         [24.6701],
         [11.6411],
         [11.2398]],
        [[11.1525],
         [11.0845],
         [24.6782],
         ...,
         [25.1346],
         [12.2285],
         [11.9592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9842, 1.1749,  ..., 1.1792, 1.0140, 1.0158],
        [0.9742, 0.9740, 1.1475,  ..., 1.1544, 0.9816, 0.9756],
        [0.9728, 0.9727, 1.1443,  ..., 1.1515, 0.9780, 0.9712],
        ...,
        [0.9710, 0.9713, 1.1403,  ..., 1.1479, 0.9737, 0.9660],
        [0.9755, 0.9751, 1.1505,  ..., 1.1572, 0.9850, 0.9797],
        [0.9785, 0.9776, 1.1573,  ..., 1.1633, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7853],
         [12.8888],
         [10.9920],
         ...,
         [10.3577],
         [12.5597],
         [13.0428]],
        [[ 8.0171],
         [ 7.8727],
         [ 8.3421],
         ...,
         [ 8.8129],
         [ 8.4042],
         [ 7.6939]],
        [[ 7.5671],
         [ 7.4066],
         [ 8.0621],
         ...,
         [ 8.6385],
         [ 7.9965],
         [ 7.2073]],
        ...,
        [[ 7.0434],
         [ 6.8663],
         [ 7.7275],
         ...,
         [ 8.4267],
         [ 7.5178],
         [ 6.6459]],
        [[ 8.4564],
         [ 8.3289],
         [ 8.6093],
         ...,
         [ 8.9771],
         [ 8.7991],
         [ 8.1723]],
        [[ 9.5126],
         [ 9.4315],
         [ 9.2295],
         ...,
         [ 9.3503],
         [ 9.7374],
         [ 9.3358]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9781, 0.9803, 0.9396,  ..., 0.9260, 0.9732, 0.9836],
        [0.8758, 0.8727, 0.8828,  ..., 0.8929, 0.8841, 0.8689],
        [0.8662, 0.8627, 0.8768,  ..., 0.8892, 0.8754, 0.8585],
        ...,
        [0.8550, 0.8512, 0.8696,  ..., 0.8846, 0.8651, 0.8464],
        [0.8853, 0.8825, 0.8885,  ..., 0.8964, 0.8926, 0.8792],
        [0.9079, 0.9062, 0.9018,  ..., 0.9044, 0.9127, 0.9041]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0709],
         [15.4242],
         [24.3680],
         ...,
         [24.2190],
         [17.3859],
         [17.2460]],
        [[13.9917],
         [14.5135],
         [15.1185],
         ...,
         [15.7231],
         [15.0181],
         [15.4972]],
        [[13.8636],
         [14.4045],
         [14.2510],
         ...,
         [14.9043],
         [14.7484],
         [15.2934]],
        ...,
        [[13.7062],
         [14.2705],
         [13.2432],
         ...,
         [13.9471],
         [14.4204],
         [15.0442]],
        [[14.1110],
         [14.6148],
         [15.9662],
         ...,
         [16.5188],
         [15.2715],
         [15.6877]],
        [[14.3779],
         [14.8408],
         [18.0088],
         ...,
         [18.4202],
         [15.8459],
         [16.1165]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9615, 0.9672, 1.1127,  ..., 1.1103, 0.9991, 0.9969],
        [0.9439, 0.9524, 0.9623,  ..., 0.9721, 0.9606, 0.9684],
        [0.9419, 0.9507, 0.9482,  ..., 0.9588, 0.9563, 0.9651],
        ...,
        [0.9393, 0.9485, 0.9318,  ..., 0.9432, 0.9509, 0.9611],
        [0.9459, 0.9541, 0.9761,  ..., 0.9850, 0.9648, 0.9715],
        [0.9502, 0.9578, 1.0093,  ..., 1.0160, 0.9741, 0.9785]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7384],
         [11.5818],
         [26.0393],
         ...,
         [26.3367],
         [13.7330],
         [13.8510]],
        [[10.8254],
         [10.8076],
         [23.9933],
         ...,
         [24.4570],
         [11.3573],
         [10.9240]],
        [[10.7174],
         [10.7155],
         [23.7515],
         ...,
         [24.2338],
         [11.0934],
         [10.6076]],
        ...,
        [[10.5849],
         [10.6022],
         [23.4547],
         ...,
         [23.9597],
         [10.7743],
         [10.2277]],
        [[10.9260],
         [10.8934],
         [24.2188],
         ...,
         [24.6648],
         [11.6066],
         [11.2244]],
        [[11.1514],
         [11.0851],
         [24.7238],
         ...,
         [25.1297],
         [12.1761],
         [11.9170]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9870, 0.9850, 1.1760,  ..., 1.1800, 1.0134, 1.0150],
        [0.9750, 0.9747, 1.1490,  ..., 1.1551, 0.9820, 0.9763],
        [0.9736, 0.9735, 1.1458,  ..., 1.1522, 0.9785, 0.9721],
        ...,
        [0.9718, 0.9720, 1.1419,  ..., 1.1486, 0.9743, 0.9671],
        [0.9763, 0.9759, 1.1520,  ..., 1.1579, 0.9853, 0.9803],
        [0.9793, 0.9784, 1.1587,  ..., 1.1640, 0.9928, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7886],
         [12.8901],
         [10.9520],
         ...,
         [10.3345],
         [12.5792],
         [13.0215]],
        [[ 8.0123],
         [ 7.8709],
         [ 8.3530],
         ...,
         [ 8.8109],
         [ 8.3612],
         [ 7.7156]],
        [[ 7.5617],
         [ 7.4046],
         [ 8.0775],
         ...,
         [ 8.6386],
         [ 7.9490],
         [ 7.2316]],
        ...,
        [[ 7.0375],
         [ 6.8641],
         [ 7.7482],
         ...,
         [ 8.4295],
         [ 7.4655],
         [ 6.6729]],
        [[ 8.4521],
         [ 8.3273],
         [ 8.6156],
         ...,
         [ 8.9730],
         [ 8.7608],
         [ 8.1912]],
        [[ 9.5099],
         [ 9.4305],
         [ 9.2248],
         ...,
         [ 9.3413],
         [ 9.7113],
         [ 9.3469]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9789, 0.9810, 0.9395,  ..., 0.9262, 0.9744, 0.9838],
        [0.8764, 0.8734, 0.8837,  ..., 0.8936, 0.8839, 0.8701],
        [0.8668, 0.8634, 0.8778,  ..., 0.8899, 0.8751, 0.8597],
        ...,
        [0.8555, 0.8518, 0.8708,  ..., 0.8854, 0.8647, 0.8477],
        [0.8859, 0.8832, 0.8894,  ..., 0.8970, 0.8925, 0.8803],
        [0.9085, 0.9068, 0.9024,  ..., 0.9049, 0.9129, 0.9050]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0629],
         [15.3933],
         [24.3775],
         ...,
         [24.2491],
         [17.2775],
         [17.1371]],
        [[13.9894],
         [14.4863],
         [15.1239],
         ...,
         [15.6988],
         [14.9614],
         [15.4420]],
        [[13.8620],
         [14.3778],
         [14.2560],
         ...,
         [14.8762],
         [14.6972],
         [15.2442]],
        ...,
        [[13.7054],
         [14.2443],
         [13.2478],
         ...,
         [13.9149],
         [14.3757],
         [15.0022]],
        [[14.1081],
         [14.5872],
         [15.9719],
         ...,
         [16.4986],
         [15.2095],
         [15.6269]],
        [[14.3736],
         [14.8123],
         [18.0154],
         ...,
         [18.4106],
         [15.7717],
         [16.0428]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9621, 0.9675, 1.1136,  ..., 1.1115, 0.9981, 0.9958],
        [0.9446, 0.9527, 0.9631,  ..., 0.9725, 0.9605, 0.9683],
        [0.9426, 0.9510, 0.9490,  ..., 0.9591, 0.9562, 0.9651],
        ...,
        [0.9400, 0.9488, 0.9326,  ..., 0.9434, 0.9509, 0.9611],
        [0.9466, 0.9544, 0.9769,  ..., 0.9855, 0.9645, 0.9713],
        [0.9509, 0.9580, 1.0101,  ..., 1.0166, 0.9736, 0.9780]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7405],
         [11.5806],
         [26.0148],
         ...,
         [26.3397],
         [13.8172],
         [13.9510]],
        [[10.8255],
         [10.8075],
         [23.9506],
         ...,
         [24.4613],
         [11.3788],
         [10.9273]],
        [[10.7174],
         [10.7154],
         [23.7067],
         ...,
         [24.2383],
         [11.1086],
         [10.6018]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4075],
         ...,
         [23.9643],
         [10.7821],
         [10.2113]],
        [[10.9264],
         [10.8932],
         [24.1779],
         ...,
         [24.6690],
         [11.6341],
         [11.2367]],
        [[11.1523],
         [11.0846],
         [24.6873],
         ...,
         [25.1336],
         [12.2180],
         [11.9507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 0.9843, 1.1751,  ..., 1.1794, 1.0139, 1.0157],
        [0.9744, 0.9741, 1.1478,  ..., 1.1546, 0.9817, 0.9757],
        [0.9729, 0.9729, 1.1446,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9712, 0.9714, 1.1406,  ..., 1.1480, 0.9738, 0.9662],
        [0.9757, 0.9753, 1.1508,  ..., 1.1573, 0.9850, 0.9798],
        [0.9787, 0.9778, 1.1576,  ..., 1.1634, 0.9928, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7860],
         [12.8890],
         [10.9838],
         ...,
         [10.3530],
         [12.5635],
         [13.0385]],
        [[ 8.0161],
         [ 7.8723],
         [ 8.3442],
         ...,
         [ 8.8125],
         [ 8.3956],
         [ 7.6982]],
        [[ 7.5660],
         [ 7.4062],
         [ 8.0651],
         ...,
         [ 8.6385],
         [ 7.9869],
         [ 7.2121]],
        ...,
        [[ 7.0422],
         [ 6.8659],
         [ 7.7316],
         ...,
         [ 8.4272],
         [ 7.5072],
         [ 6.6512]],
        [[ 8.4555],
         [ 8.3286],
         [ 8.6105],
         ...,
         [ 8.9762],
         [ 8.7914],
         [ 8.1760]],
        [[ 9.5121],
         [ 9.4313],
         [ 9.2285],
         ...,
         [ 9.3484],
         [ 9.7321],
         [ 9.3380]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9261, 0.9735, 0.9837],
        [0.8760, 0.8729, 0.8830,  ..., 0.8930, 0.8841, 0.8691],
        [0.8663, 0.8629, 0.8770,  ..., 0.8893, 0.8753, 0.8587],
        ...,
        [0.8551, 0.8513, 0.8699,  ..., 0.8848, 0.8650, 0.8467],
        [0.8854, 0.8827, 0.8887,  ..., 0.8965, 0.8926, 0.8794],
        [0.9080, 0.9063, 0.9020,  ..., 0.9045, 0.9128, 0.9043]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0693],
         [15.4179],
         [24.3699],
         ...,
         [24.2251],
         [17.3641],
         [17.2241]],
        [[13.9912],
         [14.5080],
         [15.1196],
         ...,
         [15.7182],
         [15.0067],
         [15.4861]],
        [[13.8632],
         [14.3992],
         [14.2520],
         ...,
         [14.8987],
         [14.7381],
         [15.2835]],
        ...,
        [[13.7060],
         [14.2652],
         [13.2441],
         ...,
         [13.9406],
         [14.4114],
         [15.0357]],
        [[14.1104],
         [14.6092],
         [15.9674],
         ...,
         [16.5148],
         [15.2591],
         [15.6755]],
        [[14.3771],
         [14.8351],
         [18.0101],
         ...,
         [18.4183],
         [15.8310],
         [16.1017]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1105, 0.9989, 0.9967],
        [0.9441, 0.9525, 0.9624,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9319,  ..., 0.9433, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9504, 0.9578, 1.0094,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7410],
         [11.5803],
         [26.0100],
         ...,
         [26.3403],
         [13.8340],
         [13.9710]],
        [[10.8256],
         [10.8075],
         [23.9421],
         ...,
         [24.4622],
         [11.3831],
         [10.9280]],
        [[10.7174],
         [10.7154],
         [23.6978],
         ...,
         [24.2392],
         [11.1116],
         [10.6007]],
        ...,
        [[10.5845],
         [10.6023],
         [23.3981],
         ...,
         [23.9653],
         [10.7837],
         [10.2081]],
        [[10.9265],
         [10.8931],
         [24.1698],
         ...,
         [24.6699],
         [11.6396],
         [11.2392]],
        [[11.1525],
         [11.0845],
         [24.6801],
         ...,
         [25.1344],
         [12.2263],
         [11.9575]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9842, 1.1749,  ..., 1.1793, 1.0140, 1.0158],
        [0.9742, 0.9740, 1.1476,  ..., 1.1545, 0.9816, 0.9756],
        [0.9728, 0.9728, 1.1444,  ..., 1.1515, 0.9780, 0.9713],
        ...,
        [0.9711, 0.9713, 1.1404,  ..., 1.1479, 0.9737, 0.9661],
        [0.9756, 0.9751, 1.1506,  ..., 1.1572, 0.9850, 0.9797],
        [0.9786, 0.9777, 1.1573,  ..., 1.1633, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7855],
         [12.8888],
         [10.9903],
         ...,
         [10.3567],
         [12.5604],
         [13.0419]],
        [[ 8.0169],
         [ 7.8726],
         [ 8.3425],
         ...,
         [ 8.8128],
         [ 8.4024],
         [ 7.6948]],
        [[ 7.5668],
         [ 7.4065],
         [ 8.0627],
         ...,
         [ 8.6385],
         [ 7.9945],
         [ 7.2083]],
        ...,
        [[ 7.0432],
         [ 6.8663],
         [ 7.7283],
         ...,
         [ 8.4268],
         [ 7.5156],
         [ 6.6470]],
        [[ 8.4562],
         [ 8.3289],
         [ 8.6095],
         ...,
         [ 8.9769],
         [ 8.7975],
         [ 8.1731]],
        [[ 9.5125],
         [ 9.4315],
         [ 9.2293],
         ...,
         [ 9.3499],
         [ 9.7363],
         [ 9.3362]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9781, 0.9803, 0.9396,  ..., 0.9260, 0.9733, 0.9836],
        [0.8759, 0.8728, 0.8828,  ..., 0.8929, 0.8841, 0.8690],
        [0.8662, 0.8628, 0.8768,  ..., 0.8892, 0.8754, 0.8585],
        ...,
        [0.8550, 0.8512, 0.8697,  ..., 0.8847, 0.8651, 0.8465],
        [0.8853, 0.8826, 0.8886,  ..., 0.8964, 0.8926, 0.8792],
        [0.9079, 0.9062, 0.9019,  ..., 0.9044, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0706],
         [15.4229],
         [24.3684],
         ...,
         [24.2203],
         [17.3814],
         [17.2414]],
        [[13.9916],
         [14.5123],
         [15.1187],
         ...,
         [15.7220],
         [15.0158],
         [15.4949]],
        [[13.8635],
         [14.4034],
         [14.2512],
         ...,
         [14.9031],
         [14.7463],
         [15.2913]],
        ...,
        [[13.7062],
         [14.2694],
         [13.2434],
         ...,
         [13.9458],
         [14.4185],
         [15.0424]],
        [[14.1109],
         [14.6136],
         [15.9664],
         ...,
         [16.5180],
         [15.2689],
         [15.6852]],
        [[14.3777],
         [14.8396],
         [18.0090],
         ...,
         [18.4198],
         [15.8428],
         [16.1134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9615, 0.9673, 1.1127,  ..., 1.1103, 0.9991, 0.9968],
        [0.9440, 0.9524, 0.9623,  ..., 0.9721, 0.9606, 0.9684],
        [0.9419, 0.9507, 0.9482,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9393, 0.9485, 0.9318,  ..., 0.9432, 0.9509, 0.9611],
        [0.9459, 0.9541, 0.9761,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0093,  ..., 1.0160, 0.9741, 0.9785]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7411],
         [11.5803],
         [26.0087],
         ...,
         [26.3405],
         [13.8383],
         [13.9762]],
        [[10.8256],
         [10.8074],
         [23.9399],
         ...,
         [24.4624],
         [11.3842],
         [10.9282]],
        [[10.7173],
         [10.7154],
         [23.6955],
         ...,
         [24.2394],
         [11.1124],
         [10.6004]],
        ...,
        [[10.5845],
         [10.6023],
         [23.3956],
         ...,
         [23.9655],
         [10.7841],
         [10.2072]],
        [[10.9265],
         [10.8931],
         [24.1677],
         ...,
         [24.6701],
         [11.6411],
         [11.2398]],
        [[11.1525],
         [11.0845],
         [24.6782],
         ...,
         [25.1346],
         [12.2285],
         [11.9592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9842, 1.1749,  ..., 1.1792, 1.0140, 1.0158],
        [0.9742, 0.9740, 1.1475,  ..., 1.1544, 0.9816, 0.9756],
        [0.9728, 0.9727, 1.1443,  ..., 1.1515, 0.9780, 0.9712],
        ...,
        [0.9710, 0.9713, 1.1403,  ..., 1.1479, 0.9737, 0.9660],
        [0.9755, 0.9751, 1.1505,  ..., 1.1572, 0.9850, 0.9797],
        [0.9785, 0.9776, 1.1573,  ..., 1.1633, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7853],
         [12.8888],
         [10.9920],
         ...,
         [10.3577],
         [12.5597],
         [13.0428]],
        [[ 8.0171],
         [ 7.8727],
         [ 8.3421],
         ...,
         [ 8.8129],
         [ 8.4042],
         [ 7.6939]],
        [[ 7.5671],
         [ 7.4066],
         [ 8.0621],
         ...,
         [ 8.6385],
         [ 7.9965],
         [ 7.2073]],
        ...,
        [[ 7.0434],
         [ 6.8663],
         [ 7.7275],
         ...,
         [ 8.4267],
         [ 7.5178],
         [ 6.6459]],
        [[ 8.4564],
         [ 8.3289],
         [ 8.6093],
         ...,
         [ 8.9771],
         [ 8.7991],
         [ 8.1723]],
        [[ 9.5126],
         [ 9.4315],
         [ 9.2295],
         ...,
         [ 9.3503],
         [ 9.7374],
         [ 9.3358]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9781, 0.9803, 0.9396,  ..., 0.9260, 0.9732, 0.9836],
        [0.8758, 0.8727, 0.8828,  ..., 0.8929, 0.8841, 0.8689],
        [0.8662, 0.8627, 0.8768,  ..., 0.8892, 0.8754, 0.8585],
        ...,
        [0.8550, 0.8512, 0.8696,  ..., 0.8846, 0.8651, 0.8464],
        [0.8853, 0.8825, 0.8885,  ..., 0.8964, 0.8926, 0.8792],
        [0.9079, 0.9062, 0.9018,  ..., 0.9044, 0.9127, 0.9041]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0709],
         [15.4242],
         [24.3680],
         ...,
         [24.2190],
         [17.3859],
         [17.2460]],
        [[13.9917],
         [14.5135],
         [15.1185],
         ...,
         [15.7231],
         [15.0181],
         [15.4972]],
        [[13.8636],
         [14.4045],
         [14.2510],
         ...,
         [14.9043],
         [14.7484],
         [15.2934]],
        ...,
        [[13.7062],
         [14.2705],
         [13.2432],
         ...,
         [13.9471],
         [14.4204],
         [15.0442]],
        [[14.1110],
         [14.6148],
         [15.9662],
         ...,
         [16.5188],
         [15.2715],
         [15.6877]],
        [[14.3779],
         [14.8408],
         [18.0088],
         ...,
         [18.4202],
         [15.8459],
         [16.1165]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9615, 0.9672, 1.1127,  ..., 1.1103, 0.9991, 0.9969],
        [0.9439, 0.9524, 0.9623,  ..., 0.9721, 0.9606, 0.9684],
        [0.9419, 0.9507, 0.9482,  ..., 0.9588, 0.9563, 0.9651],
        ...,
        [0.9393, 0.9485, 0.9318,  ..., 0.9432, 0.9509, 0.9611],
        [0.9459, 0.9541, 0.9761,  ..., 0.9850, 0.9648, 0.9715],
        [0.9502, 0.9578, 1.0093,  ..., 1.0160, 0.9741, 0.9785]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7008],
         [11.6036],
         [26.3694],
         ...,
         [26.2482],
         [12.4382],
         [12.5496]],
        [[10.8220],
         [10.8102],
         [24.5136],
         ...,
         [24.3272],
         [11.0306],
         [10.8871]],
        [[10.7179],
         [10.7159],
         [24.2932],
         ...,
         [24.0994],
         [10.8678],
         [10.6972]],
        ...,
        [[10.5901],
         [10.5999],
         [24.0223],
         ...,
         [23.8196],
         [10.6691],
         [10.4662]],
        [[10.9190],
         [10.8981],
         [24.7190],
         ...,
         [24.5394],
         [11.1830],
         [11.0654]],
        [[11.1361],
         [11.0945],
         [25.1781],
         ...,
         [25.0143],
         [11.5269],
         [11.4691]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 0.9944, 1.1895,  ..., 1.1879, 1.0054, 1.0069],
        [0.9840, 0.9839, 1.1650,  ..., 1.1625, 0.9868, 0.9849],
        [0.9827, 0.9826, 1.1621,  ..., 1.1595, 0.9846, 0.9824],
        ...,
        [0.9810, 0.9811, 1.1585,  ..., 1.1558, 0.9820, 0.9793],
        [0.9853, 0.9850, 1.1677,  ..., 1.1653, 0.9888, 0.9872],
        [0.9882, 0.9876, 1.1738,  ..., 1.1716, 0.9933, 0.9926]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8239],
         [12.8827],
         [10.6460],
         ...,
         [10.1462],
         [12.8393],
         [12.8327]],
        [[ 7.9613],
         [ 7.8806],
         [ 8.5737],
         ...,
         [ 8.8300],
         [ 7.9396],
         [ 7.9488]],
        [[ 7.5051],
         [ 7.4155],
         [ 8.3469],
         ...,
         [ 8.6794],
         [ 7.4810],
         [ 7.4912]],
        ...,
        [[ 6.9751],
         [ 6.8761],
         [ 8.0739],
         ...,
         [ 8.4961],
         [ 6.9485],
         [ 6.9597]],
        [[ 8.4071],
         [ 8.3359],
         [ 8.7884],
         ...,
         [ 8.9713],
         [ 8.3880],
         [ 8.3961]],
        [[ 9.4811],
         [ 9.4359],
         [ 9.2816],
         ...,
         [ 9.2913],
         [ 9.4689],
         [ 9.4740]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9848, 0.9861, 0.9381,  ..., 0.9274, 0.9851, 0.9850],
        [0.8805, 0.8788, 0.8937,  ..., 0.8992, 0.8801, 0.8803],
        [0.8708, 0.8688, 0.8888,  ..., 0.8959, 0.8702, 0.8705],
        ...,
        [0.8594, 0.8573, 0.8830,  ..., 0.8920, 0.8588, 0.8591],
        [0.8901, 0.8886, 0.8983,  ..., 0.9022, 0.8897, 0.8899],
        [0.9131, 0.9122, 0.9089,  ..., 0.9091, 0.9129, 0.9130]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9681],
         [15.0505],
         [24.5370],
         ...,
         [24.6592],
         [15.9106],
         [15.8661]],
        [[13.9747],
         [14.1648],
         [15.1544],
         ...,
         [15.3669],
         [14.3025],
         [14.7541]],
        [[13.8564],
         [14.0588],
         [14.2768],
         ...,
         [14.4931],
         [14.1151],
         [14.6220]],
        ...,
        [[13.7110],
         [13.9284],
         [13.2579],
         ...,
         [13.4774],
         [13.8859],
         [14.4597]],
        [[14.0848],
         [14.2633],
         [16.0124],
         ...,
         [16.2204],
         [14.4778],
         [14.8772]],
        [[14.3309],
         [14.4832],
         [18.0816],
         ...,
         [18.2751],
         [14.8721],
         [15.1523]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9714, 0.9727, 1.1270,  ..., 1.1290, 0.9867, 0.9860],
        [0.9552, 0.9583, 0.9744,  ..., 0.9779, 0.9605, 0.9679],
        [0.9533, 0.9566, 0.9601,  ..., 0.9637, 0.9575, 0.9657],
        ...,
        [0.9509, 0.9545, 0.9436,  ..., 0.9471, 0.9538, 0.9631],
        [0.9570, 0.9599, 0.9884,  ..., 0.9917, 0.9634, 0.9699],
        [0.9610, 0.9635, 1.0220,  ..., 1.0252, 0.9698, 0.9744]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7344],
         [11.5839],
         [26.0615],
         ...,
         [26.3252],
         [13.5957],
         [13.7321]],
        [[10.8250],
         [10.8079],
         [24.0316],
         ...,
         [24.4405],
         [11.3229],
         [10.9199]],
        [[10.7175],
         [10.7156],
         [23.7916],
         ...,
         [24.2168],
         [11.0694],
         [10.6145]],
        ...,
        [[10.5855],
         [10.6020],
         [23.4970],
         ...,
         [23.9420],
         [10.7626],
         [10.2472]],
        [[10.9253],
         [10.8939],
         [24.2554],
         ...,
         [24.6489],
         [11.5621],
         [11.2096]],
        [[11.1498],
         [11.0861],
         [24.7565],
         ...,
         [25.1150],
         [12.1080],
         [11.8765]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9877, 0.9858, 1.1771,  ..., 1.1806, 1.0123, 1.0141],
        [0.9757, 0.9755, 1.1503,  ..., 1.1557, 0.9823, 0.9770],
        [0.9743, 0.9743, 1.1471,  ..., 1.1527, 0.9790, 0.9729],
        ...,
        [0.9726, 0.9728, 1.1432,  ..., 1.1491, 0.9749, 0.9681],
        [0.9771, 0.9766, 1.1532,  ..., 1.1584, 0.9855, 0.9808],
        [0.9800, 0.9792, 1.1598,  ..., 1.1646, 0.9927, 0.9896]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7916],
         [12.8878],
         [10.9086],
         ...,
         [10.3086],
         [12.5993],
         [13.0092]],
        [[ 8.0079],
         [ 7.8739],
         [ 8.3677],
         ...,
         [ 8.8092],
         [ 8.3195],
         [ 7.7286]],
        [[ 7.5568],
         [ 7.4080],
         [ 8.0975],
         ...,
         [ 8.6395],
         [ 7.9028],
         [ 7.2462]],
        ...,
        [[ 7.0321],
         [ 6.8679],
         [ 7.7742],
         ...,
         [ 8.4333],
         [ 7.4146],
         [ 6.6890]],
        [[ 8.4482],
         [ 8.3301],
         [ 8.6252],
         ...,
         [ 8.9689],
         [ 8.7236],
         [ 8.2025]],
        [[ 9.5074],
         [ 9.4322],
         [ 9.2217],
         ...,
         [ 9.3315],
         [ 9.6862],
         [ 9.3537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9814, 0.9389,  ..., 0.9261, 0.9752, 0.9840],
        [0.8767, 0.8739, 0.8845,  ..., 0.8939, 0.8834, 0.8708],
        [0.8671, 0.8639, 0.8787,  ..., 0.8903, 0.8745, 0.8604],
        ...,
        [0.8558, 0.8523, 0.8717,  ..., 0.8859, 0.8640, 0.8485],
        [0.8862, 0.8837, 0.8900,  ..., 0.8974, 0.8921, 0.8809],
        [0.9089, 0.9073, 0.9028,  ..., 0.9051, 0.9127, 0.9056]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0536],
         [15.3582],
         [24.3955],
         ...,
         [24.2923],
         [17.1390],
         [17.0113]],
        [[13.9890],
         [14.4565],
         [15.1243],
         ...,
         [15.6632],
         [14.8942],
         [15.3702]],
        [[13.8626],
         [14.3486],
         [14.2552],
         ...,
         [14.8350],
         [14.6376],
         [15.1784]],
        ...,
        [[13.7072],
         [14.2158],
         [13.2456],
         ...,
         [13.8677],
         [14.3253],
         [14.9437]],
        [[14.1067],
         [14.5568],
         [15.9737],
         ...,
         [16.4688],
         [15.1351],
         [15.5495]],
        [[14.3701],
         [14.7806],
         [18.0206],
         ...,
         [18.3962],
         [15.6805],
         [15.9524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9628, 0.9678, 1.1148,  ..., 1.1131, 0.9968, 0.9947],
        [0.9455, 0.9531, 0.9640,  ..., 0.9728, 0.9603, 0.9680],
        [0.9435, 0.9514, 0.9499,  ..., 0.9593, 0.9561, 0.9649],
        ...,
        [0.9409, 0.9492, 0.9334,  ..., 0.9436, 0.9510, 0.9611],
        [0.9474, 0.9548, 0.9778,  ..., 0.9859, 0.9642, 0.9709],
        [0.9517, 0.9584, 1.0111,  ..., 1.0172, 0.9730, 0.9775]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7397],
         [11.5810],
         [26.0191],
         ...,
         [26.3374],
         [13.7894],
         [13.9270]],
        [[10.8255],
         [10.8075],
         [23.9582],
         ...,
         [24.4580],
         [11.3718],
         [10.9265]],
        [[10.7174],
         [10.7155],
         [23.7147],
         ...,
         [24.2349],
         [11.1037],
         [10.6032]],
        ...,
        [[10.5847],
         [10.6023],
         [23.4159],
         ...,
         [23.9608],
         [10.7796],
         [10.2151]],
        [[10.9263],
         [10.8933],
         [24.1852],
         ...,
         [24.6658],
         [11.6251],
         [11.2337]],
        [[11.1520],
         [11.0848],
         [24.6938],
         ...,
         [25.1307],
         [12.2042],
         [11.9426]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9866, 0.9845, 1.1753,  ..., 1.1795, 1.0137, 1.0155],
        [0.9745, 0.9743, 1.1481,  ..., 1.1547, 0.9817, 0.9758],
        [0.9731, 0.9731, 1.1448,  ..., 1.1517, 0.9782, 0.9716],
        ...,
        [0.9713, 0.9716, 1.1409,  ..., 1.1481, 0.9739, 0.9664],
        [0.9758, 0.9754, 1.1511,  ..., 1.1574, 0.9851, 0.9799],
        [0.9788, 0.9779, 1.1578,  ..., 1.1636, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7866],
         [12.8886],
         [10.9745],
         ...,
         [10.3474],
         [12.5674],
         [13.0360]],
        [[ 8.0153],
         [ 7.8729],
         [ 8.3469],
         ...,
         [ 8.8120],
         [ 8.3870],
         [ 7.7007]],
        [[ 7.5650],
         [ 7.4069],
         [ 8.0688],
         ...,
         [ 8.6385],
         [ 7.9774],
         [ 7.2149]],
        ...,
        [[ 7.0412],
         [ 6.8667],
         [ 7.7366],
         ...,
         [ 8.4279],
         [ 7.4968],
         [ 6.6543]],
        [[ 8.4547],
         [ 8.3292],
         [ 8.6121],
         ...,
         [ 8.9752],
         [ 8.7837],
         [ 8.1782]],
        [[ 9.5116],
         [ 9.4316],
         [ 9.2275],
         ...,
         [ 9.3463],
         [ 9.7269],
         [ 9.3392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9783, 0.9805, 0.9395,  ..., 0.9260, 0.9736, 0.9837],
        [0.8760, 0.8730, 0.8831,  ..., 0.8931, 0.8840, 0.8693],
        [0.8664, 0.8630, 0.8772,  ..., 0.8894, 0.8752, 0.8589],
        ...,
        [0.8551, 0.8514, 0.8700,  ..., 0.8849, 0.8649, 0.8468],
        [0.8854, 0.8827, 0.8888,  ..., 0.8966, 0.8925, 0.8795],
        [0.9081, 0.9064, 0.9020,  ..., 0.9046, 0.9127, 0.9044]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0675],
         [15.4108],
         [24.3735],
         ...,
         [24.2338],
         [17.3363],
         [17.1987]],
        [[13.9911],
         [14.5020],
         [15.1197],
         ...,
         [15.7110],
         [14.9931],
         [15.4715]],
        [[13.8634],
         [14.3933],
         [14.2519],
         ...,
         [14.8903],
         [14.7260],
         [15.2702]],
        ...,
        [[13.7064],
         [14.2595],
         [13.2437],
         ...,
         [13.9311],
         [14.4010],
         [15.0239]],
        [[14.1102],
         [14.6031],
         [15.9677],
         ...,
         [16.5088],
         [15.2440],
         [15.6598]],
        [[14.3764],
         [14.8287],
         [18.0111],
         ...,
         [18.4154],
         [15.8126],
         [16.0834]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9618, 0.9673, 1.1131,  ..., 1.1108, 0.9987, 0.9964],
        [0.9443, 0.9526, 0.9626,  ..., 0.9722, 0.9605, 0.9683],
        [0.9422, 0.9508, 0.9485,  ..., 0.9589, 0.9562, 0.9651],
        ...,
        [0.9396, 0.9486, 0.9321,  ..., 0.9433, 0.9509, 0.9610],
        [0.9462, 0.9542, 0.9764,  ..., 0.9852, 0.9646, 0.9714],
        [0.9505, 0.9579, 1.0096,  ..., 1.0162, 0.9739, 0.9783]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7408],
         [11.5804],
         [26.0109],
         ...,
         [26.3398],
         [13.8279],
         [13.9657]],
        [[10.8256],
         [10.8075],
         [23.9438],
         ...,
         [24.4615],
         [11.3816],
         [10.9278]],
        [[10.7174],
         [10.7154],
         [23.6996],
         ...,
         [24.2385],
         [11.1106],
         [10.6010]],
        ...,
        [[10.5845],
         [10.6023],
         [23.3999],
         ...,
         [23.9645],
         [10.7831],
         [10.2089]],
        [[10.9264],
         [10.8931],
         [24.1714],
         ...,
         [24.6692],
         [11.6377],
         [11.2385]],
        [[11.1524],
         [11.0846],
         [24.6815],
         ...,
         [25.1338],
         [12.2233],
         [11.9557]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9842, 1.1750,  ..., 1.1793, 1.0139, 1.0158],
        [0.9743, 0.9740, 1.1476,  ..., 1.1545, 0.9816, 0.9756],
        [0.9728, 0.9728, 1.1444,  ..., 1.1515, 0.9780, 0.9713],
        ...,
        [0.9711, 0.9713, 1.1404,  ..., 1.1479, 0.9737, 0.9661],
        [0.9756, 0.9752, 1.1506,  ..., 1.1572, 0.9850, 0.9797],
        [0.9786, 0.9777, 1.1574,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [12.8887],
         [10.9882],
         ...,
         [10.3555],
         [12.5613],
         [13.0413]],
        [[ 8.0167],
         [ 7.8727],
         [ 8.3431],
         ...,
         [ 8.8127],
         [ 8.4006],
         [ 7.6953]],
        [[ 7.5666],
         [ 7.4067],
         [ 8.0635],
         ...,
         [ 8.6384],
         [ 7.9924],
         [ 7.2089]],
        ...,
        [[ 7.0429],
         [ 6.8664],
         [ 7.7294],
         ...,
         [ 8.4270],
         [ 7.5133],
         [ 6.6477]],
        [[ 8.4560],
         [ 8.3290],
         [ 8.6099],
         ...,
         [ 8.9767],
         [ 8.7958],
         [ 8.1735]],
        [[ 9.5124],
         [ 9.4315],
         [ 9.2291],
         ...,
         [ 9.3494],
         [ 9.7351],
         [ 9.3365]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9781, 0.9804, 0.9396,  ..., 0.9260, 0.9733, 0.9836],
        [0.8759, 0.8728, 0.8829,  ..., 0.8929, 0.8841, 0.8690],
        [0.8662, 0.8628, 0.8769,  ..., 0.8892, 0.8754, 0.8586],
        ...,
        [0.8550, 0.8512, 0.8697,  ..., 0.8847, 0.8651, 0.8465],
        [0.8853, 0.8826, 0.8886,  ..., 0.8965, 0.8926, 0.8792],
        [0.9080, 0.9062, 0.9019,  ..., 0.9045, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0702],
         [15.4213],
         [24.3692],
         ...,
         [24.2222],
         [17.3753],
         [17.2359]],
        [[13.9916],
         [14.5110],
         [15.1188],
         ...,
         [15.7205],
         [15.0128],
         [15.4917]],
        [[13.8635],
         [14.4022],
         [14.2512],
         ...,
         [14.9013],
         [14.7436],
         [15.2884]],
        ...,
        [[13.7062],
         [14.2681],
         [13.2433],
         ...,
         [13.9437],
         [14.4162],
         [15.0399]],
        [[14.1108],
         [14.6123],
         [15.9665],
         ...,
         [16.5167],
         [15.2657],
         [15.6817]],
        [[14.3776],
         [14.8382],
         [18.0093],
         ...,
         [18.4192],
         [15.8388],
         [16.1094]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1128,  ..., 1.1104, 0.9990, 0.9968],
        [0.9440, 0.9525, 0.9623,  ..., 0.9721, 0.9606, 0.9684],
        [0.9419, 0.9507, 0.9482,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9318,  ..., 0.9432, 0.9509, 0.9611],
        [0.9459, 0.9541, 0.9761,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0094,  ..., 1.0160, 0.9741, 0.9785]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7401],
         [11.5808],
         [26.0163],
         ...,
         [26.3382],
         [13.8025],
         [13.9401]],
        [[10.8255],
         [10.8075],
         [23.9533],
         ...,
         [24.4592],
         [11.3751],
         [10.9269]],
        [[10.7174],
         [10.7155],
         [23.7096],
         ...,
         [24.2361],
         [11.1060],
         [10.6024]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4105],
         ...,
         [23.9621],
         [10.7808],
         [10.2130]],
        [[10.9263],
         [10.8932],
         [24.1805],
         ...,
         [24.6670],
         [11.6294],
         [11.2353]],
        [[11.1521],
         [11.0847],
         [24.6896],
         ...,
         [25.1317],
         [12.2107],
         [11.9470]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 0.9844, 1.1752,  ..., 1.1794, 1.0138, 1.0156],
        [0.9744, 0.9742, 1.1479,  ..., 1.1546, 0.9817, 0.9758],
        [0.9730, 0.9730, 1.1447,  ..., 1.1517, 0.9781, 0.9715],
        ...,
        [0.9712, 0.9715, 1.1407,  ..., 1.1480, 0.9738, 0.9663],
        [0.9758, 0.9753, 1.1509,  ..., 1.1573, 0.9850, 0.9798],
        [0.9787, 0.9779, 1.1576,  ..., 1.1635, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7863],
         [12.8886],
         [10.9791],
         ...,
         [10.3502],
         [12.5653],
         [13.0378]],
        [[ 8.0158],
         [ 7.8729],
         [ 8.3456],
         ...,
         [ 8.8122],
         [ 8.3916],
         [ 7.6988]],
        [[ 7.5656],
         [ 7.4068],
         [ 8.0670],
         ...,
         [ 8.6385],
         [ 7.9825],
         [ 7.2128]],
        ...,
        [[ 7.0418],
         [ 6.8666],
         [ 7.7341],
         ...,
         [ 8.4276],
         [ 7.5024],
         [ 6.6520]],
        [[ 8.4552],
         [ 8.3291],
         [ 8.6113],
         ...,
         [ 8.9757],
         [ 8.7878],
         [ 8.1766]],
        [[ 9.5119],
         [ 9.4316],
         [ 9.2280],
         ...,
         [ 9.3473],
         [ 9.7297],
         [ 9.3383]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9783, 0.9805, 0.9395,  ..., 0.9260, 0.9735, 0.9837],
        [0.8760, 0.8729, 0.8830,  ..., 0.8930, 0.8840, 0.8692],
        [0.8663, 0.8629, 0.8771,  ..., 0.8893, 0.8753, 0.8588],
        ...,
        [0.8551, 0.8513, 0.8699,  ..., 0.8848, 0.8650, 0.8467],
        [0.8854, 0.8827, 0.8887,  ..., 0.8966, 0.8925, 0.8794],
        [0.9081, 0.9063, 0.9020,  ..., 0.9045, 0.9127, 0.9043]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0684],
         [15.4144],
         [24.3721],
         ...,
         [24.2298],
         [17.3496],
         [17.2113]],
        [[13.9913],
         [14.5051],
         [15.1194],
         ...,
         [15.7142],
         [14.9998],
         [15.4784]],
        [[13.8634],
         [14.3963],
         [14.2516],
         ...,
         [14.8941],
         [14.7320],
         [15.2764]],
        ...,
        [[13.7063],
         [14.2625],
         [13.2436],
         ...,
         [13.9354],
         [14.4062],
         [15.0293]],
        [[14.1104],
         [14.6062],
         [15.9673],
         ...,
         [16.5115],
         [15.2513],
         [15.6672]],
        [[14.3768],
         [14.8319],
         [18.0105],
         ...,
         [18.4167],
         [15.8215],
         [16.0922]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9617, 0.9673, 1.1130,  ..., 1.1107, 0.9988, 0.9965],
        [0.9442, 0.9525, 0.9625,  ..., 0.9722, 0.9606, 0.9684],
        [0.9421, 0.9508, 0.9484,  ..., 0.9589, 0.9562, 0.9651],
        ...,
        [0.9395, 0.9486, 0.9320,  ..., 0.9433, 0.9509, 0.9611],
        [0.9461, 0.9542, 0.9763,  ..., 0.9852, 0.9647, 0.9714],
        [0.9504, 0.9578, 1.0095,  ..., 1.0161, 0.9739, 0.9783]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7406],
         [11.5805],
         [26.0121],
         ...,
         [26.3395],
         [13.8225],
         [13.9603]],
        [[10.8256],
         [10.8075],
         [23.9458],
         ...,
         [24.4610],
         [11.3802],
         [10.9276]],
        [[10.7174],
         [10.7154],
         [23.7017],
         ...,
         [24.2380],
         [11.1096],
         [10.6013]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4022],
         ...,
         [23.9640],
         [10.7826],
         [10.2098]],
        [[10.9264],
         [10.8931],
         [24.1734],
         ...,
         [24.6687],
         [11.6359],
         [11.2378]],
        [[11.1523],
         [11.0846],
         [24.6833],
         ...,
         [25.1333],
         [12.2207],
         [11.9538]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1750,  ..., 1.1793, 1.0139, 1.0157],
        [0.9743, 0.9741, 1.1477,  ..., 1.1545, 0.9816, 0.9757],
        [0.9729, 0.9728, 1.1445,  ..., 1.1516, 0.9781, 0.9713],
        ...,
        [0.9711, 0.9714, 1.1405,  ..., 1.1479, 0.9737, 0.9662],
        [0.9756, 0.9752, 1.1507,  ..., 1.1572, 0.9850, 0.9798],
        [0.9786, 0.9777, 1.1574,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7858],
         [12.8887],
         [10.9863],
         ...,
         [10.3544],
         [12.5622],
         [13.0406]],
        [[ 8.0165],
         [ 7.8727],
         [ 8.3436],
         ...,
         [ 8.8126],
         [ 8.3986],
         [ 7.6961]],
        [[ 7.5664],
         [ 7.4067],
         [ 8.0642],
         ...,
         [ 8.6384],
         [ 7.9903],
         [ 7.2097]],
        ...,
        [[ 7.0427],
         [ 6.8664],
         [ 7.7304],
         ...,
         [ 8.4271],
         [ 7.5110],
         [ 6.6486]],
        [[ 8.4558],
         [ 8.3290],
         [ 8.6102],
         ...,
         [ 8.9765],
         [ 8.7941],
         [ 8.1742]],
        [[ 9.5123],
         [ 9.4315],
         [ 9.2288],
         ...,
         [ 9.3490],
         [ 9.7340],
         [ 9.3369]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8728, 0.8829,  ..., 0.8930, 0.8841, 0.8690],
        [0.8662, 0.8628, 0.8769,  ..., 0.8892, 0.8753, 0.8586],
        ...,
        [0.8550, 0.8512, 0.8698,  ..., 0.8847, 0.8651, 0.8466],
        [0.8853, 0.8826, 0.8886,  ..., 0.8965, 0.8926, 0.8793],
        [0.9080, 0.9062, 0.9019,  ..., 0.9045, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0698],
         [15.4198],
         [24.3698],
         ...,
         [24.2238],
         [17.3698],
         [17.2307]],
        [[13.9915],
         [14.5098],
         [15.1189],
         ...,
         [15.7192],
         [15.0100],
         [15.4889]],
        [[13.8635],
         [14.4009],
         [14.2513],
         ...,
         [14.8998],
         [14.7412],
         [15.2859]],
        ...,
        [[13.7063],
         [14.2669],
         [13.2434],
         ...,
         [13.9419],
         [14.4141],
         [15.0376]],
        [[14.1107],
         [14.6110],
         [15.9667],
         ...,
         [16.5156],
         [15.2626],
         [15.6787]],
        [[14.3774],
         [14.8369],
         [18.0095],
         ...,
         [18.4187],
         [15.8351],
         [16.1058]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1128,  ..., 1.1105, 0.9990, 0.9967],
        [0.9440, 0.9525, 0.9624,  ..., 0.9721, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0094,  ..., 1.0160, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7403],
         [11.5807],
         [26.0149],
         ...,
         [26.3387],
         [13.8093],
         [13.9470]],
        [[10.8255],
         [10.8075],
         [23.9507],
         ...,
         [24.4598],
         [11.3769],
         [10.9272]],
        [[10.7174],
         [10.7155],
         [23.7069],
         ...,
         [24.2368],
         [11.1072],
         [10.6020]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4077],
         ...,
         [23.9627],
         [10.7814],
         [10.2119]],
        [[10.9264],
         [10.8932],
         [24.1781],
         ...,
         [24.6676],
         [11.6316],
         [11.2362]],
        [[11.1522],
         [11.0847],
         [24.6875],
         ...,
         [25.1323],
         [12.2141],
         [11.9493]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 0.9844, 1.1751,  ..., 1.1794, 1.0138, 1.0156],
        [0.9744, 0.9741, 1.1478,  ..., 1.1546, 0.9817, 0.9757],
        [0.9730, 0.9729, 1.1446,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9712, 0.9714, 1.1407,  ..., 1.1480, 0.9738, 0.9663],
        [0.9757, 0.9753, 1.1508,  ..., 1.1573, 0.9850, 0.9798],
        [0.9787, 0.9778, 1.1576,  ..., 1.1635, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7861],
         [12.8886],
         [10.9816],
         ...,
         [10.3516],
         [12.5643],
         [13.0388]],
        [[ 8.0160],
         [ 7.8728],
         [ 8.3449],
         ...,
         [ 8.8123],
         [ 8.3940],
         [ 7.6979]],
        [[ 7.5658],
         [ 7.4068],
         [ 8.0661],
         ...,
         [ 8.6384],
         [ 7.9852],
         [ 7.2118]],
        ...,
        [[ 7.0421],
         [ 6.8665],
         [ 7.7329],
         ...,
         [ 8.4274],
         [ 7.5053],
         [ 6.6508]],
        [[ 8.4554],
         [ 8.3291],
         [ 8.6109],
         ...,
         [ 8.9760],
         [ 8.7900],
         [ 8.1758]],
        [[ 9.5120],
         [ 9.4316],
         [ 9.2283],
         ...,
         [ 9.3479],
         [ 9.7311],
         [ 9.3378]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9395,  ..., 0.9260, 0.9735, 0.9836],
        [0.8759, 0.8729, 0.8830,  ..., 0.8930, 0.8840, 0.8691],
        [0.8663, 0.8629, 0.8770,  ..., 0.8893, 0.8753, 0.8587],
        ...,
        [0.8551, 0.8513, 0.8699,  ..., 0.8848, 0.8650, 0.8467],
        [0.8854, 0.8827, 0.8887,  ..., 0.8965, 0.8925, 0.8794],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9043]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0689],
         [15.4162],
         [24.3713],
         ...,
         [24.2278],
         [17.3565],
         [17.2179]],
        [[13.9914],
         [14.5067],
         [15.1192],
         ...,
         [15.7159],
         [15.0032],
         [15.4819]],
        [[13.8635],
         [14.3979],
         [14.2515],
         ...,
         [14.8960],
         [14.7351],
         [15.2796]],
        ...,
        [[13.7063],
         [14.2640],
         [13.2435],
         ...,
         [13.9376],
         [14.4089],
         [15.0321]],
        [[14.1105],
         [14.6079],
         [15.9671],
         ...,
         [16.5129],
         [15.2552],
         [15.6711]],
        [[14.3770],
         [14.8336],
         [18.0102],
         ...,
         [18.4174],
         [15.8261],
         [16.0968]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9617, 0.9673, 1.1130,  ..., 1.1106, 0.9989, 0.9966],
        [0.9441, 0.9525, 0.9625,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9484,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9395, 0.9486, 0.9320,  ..., 0.9433, 0.9509, 0.9611],
        [0.9461, 0.9542, 0.9763,  ..., 0.9851, 0.9647, 0.9714],
        [0.9504, 0.9578, 1.0095,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7406],
         [11.5806],
         [26.0127],
         ...,
         [26.3393],
         [13.8197],
         [13.9575]],
        [[10.8255],
         [10.8075],
         [23.9468],
         ...,
         [24.4607],
         [11.3795],
         [10.9275]],
        [[10.7174],
         [10.7155],
         [23.7028],
         ...,
         [24.2377],
         [11.1091],
         [10.6015]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4033],
         ...,
         [23.9637],
         [10.7824],
         [10.2102]],
        [[10.9264],
         [10.8932],
         [24.1744],
         ...,
         [24.6685],
         [11.6350],
         [11.2375]],
        [[11.1523],
         [11.0846],
         [24.6841],
         ...,
         [25.1331],
         [12.2193],
         [11.9529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1750,  ..., 1.1793, 1.0139, 1.0157],
        [0.9743, 0.9741, 1.1477,  ..., 1.1545, 0.9816, 0.9757],
        [0.9729, 0.9729, 1.1445,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9711, 0.9714, 1.1405,  ..., 1.1479, 0.9737, 0.9662],
        [0.9757, 0.9752, 1.1507,  ..., 1.1573, 0.9850, 0.9798],
        [0.9786, 0.9777, 1.1575,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7858],
         [12.8887],
         [10.9853],
         ...,
         [10.3538],
         [12.5626],
         [13.0402]],
        [[ 8.0164],
         [ 7.8728],
         [ 8.3439],
         ...,
         [ 8.8125],
         [ 8.3977],
         [ 7.6965]],
        [[ 7.5663],
         [ 7.4067],
         [ 8.0646],
         ...,
         [ 8.6384],
         [ 7.9892],
         [ 7.2102]],
        ...,
        [[ 7.0426],
         [ 6.8665],
         [ 7.7309],
         ...,
         [ 8.4271],
         [ 7.5098],
         [ 6.6491]],
        [[ 8.4557],
         [ 8.3290],
         [ 8.6103],
         ...,
         [ 8.9764],
         [ 8.7932],
         [ 8.1745]],
        [[ 9.5123],
         [ 9.4316],
         [ 9.2287],
         ...,
         [ 9.3487],
         [ 9.7334],
         [ 9.3371]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8728, 0.8829,  ..., 0.8930, 0.8841, 0.8690],
        [0.8663, 0.8628, 0.8769,  ..., 0.8892, 0.8753, 0.8586],
        ...,
        [0.8550, 0.8512, 0.8698,  ..., 0.8847, 0.8650, 0.8466],
        [0.8853, 0.8826, 0.8886,  ..., 0.8965, 0.8926, 0.8793],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0696],
         [15.4191],
         [24.3701],
         ...,
         [24.2246],
         [17.3670],
         [17.2280]],
        [[13.9915],
         [14.5091],
         [15.1190],
         ...,
         [15.7185],
         [15.0086],
         [15.4874]],
        [[13.8635],
         [14.4003],
         [14.2513],
         ...,
         [14.8990],
         [14.7399],
         [15.2845]],
        ...,
        [[13.7063],
         [14.2663],
         [13.2434],
         ...,
         [13.9410],
         [14.4130],
         [15.0365]],
        [[14.1107],
         [14.6103],
         [15.9668],
         ...,
         [16.5150],
         [15.2610],
         [15.6771]],
        [[14.3773],
         [14.8362],
         [18.0097],
         ...,
         [18.4184],
         [15.8332],
         [16.1039]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1105, 0.9990, 0.9967],
        [0.9441, 0.9525, 0.9624,  ..., 0.9721, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0094,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7404],
         [11.5807],
         [26.0141],
         ...,
         [26.3389],
         [13.8128],
         [13.9505]],
        [[10.8255],
         [10.8075],
         [23.9494],
         ...,
         [24.4601],
         [11.3778],
         [10.9273]],
        [[10.7174],
         [10.7155],
         [23.7055],
         ...,
         [24.2371],
         [11.1079],
         [10.6018]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4062],
         ...,
         [23.9631],
         [10.7818],
         [10.2113]],
        [[10.9264],
         [10.8932],
         [24.1768],
         ...,
         [24.6679],
         [11.6328],
         [11.2366]],
        [[11.1522],
         [11.0847],
         [24.6863],
         ...,
         [25.1326],
         [12.2158],
         [11.9506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 0.9843, 1.1751,  ..., 1.1794, 1.0138, 1.0157],
        [0.9744, 0.9741, 1.1478,  ..., 1.1546, 0.9817, 0.9757],
        [0.9729, 0.9729, 1.1446,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9712, 0.9714, 1.1406,  ..., 1.1480, 0.9738, 0.9662],
        [0.9757, 0.9753, 1.1508,  ..., 1.1573, 0.9850, 0.9798],
        [0.9787, 0.9778, 1.1575,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7860],
         [12.8887],
         [10.9828],
         ...,
         [10.3523],
         [12.5637],
         [13.0393]],
        [[ 8.0162],
         [ 7.8728],
         [ 8.3446],
         ...,
         [ 8.8124],
         [ 8.3952],
         [ 7.6974]],
        [[ 7.5660],
         [ 7.4068],
         [ 8.0656],
         ...,
         [ 8.6384],
         [ 7.9865],
         [ 7.2112]],
        ...,
        [[ 7.0422],
         [ 6.8665],
         [ 7.7322],
         ...,
         [ 8.4273],
         [ 7.5069],
         [ 6.6502]],
        [[ 8.4555],
         [ 8.3290],
         [ 8.6107],
         ...,
         [ 8.9761],
         [ 8.7911],
         [ 8.1753]],
        [[ 9.5121],
         [ 9.4316],
         [ 9.2284],
         ...,
         [ 9.3482],
         [ 9.7319],
         [ 9.3376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9395,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8729, 0.8830,  ..., 0.8930, 0.8841, 0.8691],
        [0.8663, 0.8629, 0.8770,  ..., 0.8893, 0.8753, 0.8587],
        ...,
        [0.8550, 0.8513, 0.8698,  ..., 0.8847, 0.8650, 0.8466],
        [0.8854, 0.8826, 0.8887,  ..., 0.8965, 0.8925, 0.8793],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9043]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0691],
         [15.4172],
         [24.3709],
         ...,
         [24.2267],
         [17.3600],
         [17.2213]],
        [[13.9914],
         [14.5075],
         [15.1191],
         ...,
         [15.7168],
         [15.0051],
         [15.4838]],
        [[13.8635],
         [14.3987],
         [14.2515],
         ...,
         [14.8970],
         [14.7367],
         [15.2813]],
        ...,
        [[13.7063],
         [14.2648],
         [13.2435],
         ...,
         [13.9388],
         [14.4103],
         [15.0336]],
        [[14.1106],
         [14.6087],
         [15.9670],
         ...,
         [16.5136],
         [15.2572],
         [15.6731]],
        [[14.3771],
         [14.8345],
         [18.0100],
         ...,
         [18.4177],
         [15.8285],
         [16.0992]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1106, 0.9989, 0.9966],
        [0.9441, 0.9525, 0.9624,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9395, 0.9486, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9504, 0.9578, 1.0095,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7405],
         [11.5806],
         [26.0130],
         ...,
         [26.3392],
         [13.8182],
         [13.9560]],
        [[10.8255],
         [10.8075],
         [23.9474],
         ...,
         [24.4606],
         [11.3791],
         [10.9275]],
        [[10.7174],
         [10.7155],
         [23.7034],
         ...,
         [24.2376],
         [11.1088],
         [10.6015]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4039],
         ...,
         [23.9636],
         [10.7822],
         [10.2105]],
        [[10.9264],
         [10.8932],
         [24.1749],
         ...,
         [24.6683],
         [11.6345],
         [11.2373]],
        [[11.1523],
         [11.0846],
         [24.6846],
         ...,
         [25.1330],
         [12.2185],
         [11.9524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1750,  ..., 1.1794, 1.0139, 1.0157],
        [0.9743, 0.9741, 1.1477,  ..., 1.1545, 0.9816, 0.9757],
        [0.9729, 0.9729, 1.1445,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9711, 0.9714, 1.1406,  ..., 1.1480, 0.9738, 0.9662],
        [0.9757, 0.9752, 1.1507,  ..., 1.1573, 0.9850, 0.9798],
        [0.9786, 0.9778, 1.1575,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7859],
         [12.8887],
         [10.9848],
         ...,
         [10.3535],
         [12.5628],
         [13.0400]],
        [[ 8.0164],
         [ 7.8728],
         [ 8.3440],
         ...,
         [ 8.8125],
         [ 8.3971],
         [ 7.6967]],
        [[ 7.5662],
         [ 7.4067],
         [ 8.0648],
         ...,
         [ 8.6384],
         [ 7.9887],
         [ 7.2104]],
        ...,
        [[ 7.0425],
         [ 6.8665],
         [ 7.7312],
         ...,
         [ 8.4272],
         [ 7.5092],
         [ 6.6493]],
        [[ 8.4557],
         [ 8.3290],
         [ 8.6104],
         ...,
         [ 8.9763],
         [ 8.7928],
         [ 8.1747]],
        [[ 9.5122],
         [ 9.4316],
         [ 9.2287],
         ...,
         [ 9.3486],
         [ 9.7331],
         [ 9.3372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8728, 0.8829,  ..., 0.8930, 0.8841, 0.8691],
        [0.8663, 0.8628, 0.8770,  ..., 0.8893, 0.8753, 0.8586],
        ...,
        [0.8550, 0.8513, 0.8698,  ..., 0.8847, 0.8650, 0.8466],
        [0.8853, 0.8826, 0.8887,  ..., 0.8965, 0.8926, 0.8793],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0695],
         [15.4187],
         [24.3703],
         ...,
         [24.2251],
         [17.3655],
         [17.2266]],
        [[13.9915],
         [14.5088],
         [15.1190],
         ...,
         [15.7181],
         [15.0078],
         [15.4866]],
        [[13.8635],
         [14.3999],
         [14.2514],
         ...,
         [14.8986],
         [14.7392],
         [15.2839]],
        ...,
        [[13.7063],
         [14.2660],
         [13.2434],
         ...,
         [13.9405],
         [14.4124],
         [15.0358]],
        [[14.1107],
         [14.6100],
         [15.9668],
         ...,
         [16.5147],
         [15.2602],
         [15.6762]],
        [[14.3773],
         [14.8358],
         [18.0097],
         ...,
         [18.4183],
         [15.8322],
         [16.1029]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1105, 0.9989, 0.9967],
        [0.9441, 0.9525, 0.9624,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0094,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7404],
         [11.5806],
         [26.0137],
         ...,
         [26.3390],
         [13.8147],
         [13.9524]],
        [[10.8255],
         [10.8075],
         [23.9487],
         ...,
         [24.4603],
         [11.3782],
         [10.9274]],
        [[10.7174],
         [10.7155],
         [23.7048],
         ...,
         [24.2373],
         [11.1082],
         [10.6017]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4054],
         ...,
         [23.9632],
         [10.7819],
         [10.2110]],
        [[10.9264],
         [10.8932],
         [24.1762],
         ...,
         [24.6680],
         [11.6334],
         [11.2369]],
        [[11.1522],
         [11.0847],
         [24.6857],
         ...,
         [25.1327],
         [12.2168],
         [11.9512]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1751,  ..., 1.1794, 1.0139, 1.0157],
        [0.9744, 0.9741, 1.1478,  ..., 1.1545, 0.9817, 0.9757],
        [0.9729, 0.9729, 1.1446,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9712, 0.9714, 1.1406,  ..., 1.1480, 0.9738, 0.9662],
        [0.9757, 0.9752, 1.1508,  ..., 1.1573, 0.9850, 0.9798],
        [0.9787, 0.9778, 1.1575,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7860],
         [12.8887],
         [10.9835],
         ...,
         [10.3527],
         [12.5634],
         [13.0395]],
        [[ 8.0162],
         [ 7.8728],
         [ 8.3444],
         ...,
         [ 8.8124],
         [ 8.3959],
         [ 7.6972]],
        [[ 7.5661],
         [ 7.4068],
         [ 8.0653],
         ...,
         [ 8.6384],
         [ 7.9873],
         [ 7.2109]],
        ...,
        [[ 7.0423],
         [ 6.8665],
         [ 7.7319],
         ...,
         [ 8.4273],
         [ 7.5076],
         [ 6.6499]],
        [[ 8.4556],
         [ 8.3290],
         [ 8.6106],
         ...,
         [ 8.9762],
         [ 8.7917],
         [ 8.1751]],
        [[ 9.5121],
         [ 9.4316],
         [ 9.2285],
         ...,
         [ 9.3483],
         [ 9.7323],
         [ 9.3374]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8728, 0.8830,  ..., 0.8930, 0.8841, 0.8691],
        [0.8663, 0.8629, 0.8770,  ..., 0.8893, 0.8753, 0.8587],
        ...,
        [0.8550, 0.8513, 0.8698,  ..., 0.8847, 0.8650, 0.8466],
        [0.8853, 0.8826, 0.8887,  ..., 0.8965, 0.8926, 0.8793],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9043]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0693],
         [15.4177],
         [24.3707],
         ...,
         [24.2262],
         [17.3619],
         [17.2231]],
        [[13.9914],
         [14.5079],
         [15.1191],
         ...,
         [15.7172],
         [15.0060],
         [15.4848]],
        [[13.8635],
         [14.3991],
         [14.2514],
         ...,
         [14.8976],
         [14.7376],
         [15.2822]],
        ...,
        [[13.7063],
         [14.2652],
         [13.2434],
         ...,
         [13.9394],
         [14.4110],
         [15.0344]],
        [[14.1106],
         [14.6091],
         [15.9669],
         ...,
         [16.5140],
         [15.2582],
         [15.6742]],
        [[14.3772],
         [14.8349],
         [18.0099],
         ...,
         [18.4179],
         [15.8298],
         [16.1005]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1106, 0.9989, 0.9967],
        [0.9441, 0.9525, 0.9624,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9395, 0.9485, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9504, 0.9578, 1.0095,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7405],
         [11.5806],
         [26.0131],
         ...,
         [26.3392],
         [13.8175],
         [13.9552]],
        [[10.8255],
         [10.8075],
         [23.9477],
         ...,
         [24.4605],
         [11.3789],
         [10.9275]],
        [[10.7174],
         [10.7155],
         [23.7037],
         ...,
         [24.2375],
         [11.1087],
         [10.6016]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4043],
         ...,
         [23.9635],
         [10.7822],
         [10.2106]],
        [[10.9264],
         [10.8932],
         [24.1752],
         ...,
         [24.6683],
         [11.6343],
         [11.2372]],
        [[11.1523],
         [11.0846],
         [24.6848],
         ...,
         [25.1329],
         [12.2182],
         [11.9521]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1750,  ..., 1.1794, 1.0139, 1.0157],
        [0.9743, 0.9741, 1.1477,  ..., 1.1545, 0.9816, 0.9757],
        [0.9729, 0.9729, 1.1445,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9711, 0.9714, 1.1406,  ..., 1.1480, 0.9738, 0.9662],
        [0.9757, 0.9752, 1.1508,  ..., 1.1573, 0.9850, 0.9798],
        [0.9787, 0.9778, 1.1575,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7859],
         [12.8887],
         [10.9845],
         ...,
         [10.3533],
         [12.5629],
         [13.0399]],
        [[ 8.0163],
         [ 7.8728],
         [ 8.3441],
         ...,
         [ 8.8125],
         [ 8.3969],
         [ 7.6968]],
        [[ 7.5662],
         [ 7.4067],
         [ 8.0649],
         ...,
         [ 8.6384],
         [ 7.9884],
         [ 7.2105]],
        ...,
        [[ 7.0425],
         [ 6.8665],
         [ 7.7313],
         ...,
         [ 8.4272],
         [ 7.5089],
         [ 6.6494]],
        [[ 8.4557],
         [ 8.3290],
         [ 8.6105],
         ...,
         [ 8.9763],
         [ 8.7926],
         [ 8.1748]],
        [[ 9.5122],
         [ 9.4316],
         [ 9.2286],
         ...,
         [ 9.3486],
         [ 9.7329],
         [ 9.3373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8728, 0.8829,  ..., 0.8930, 0.8841, 0.8691],
        [0.8663, 0.8628, 0.8770,  ..., 0.8893, 0.8753, 0.8586],
        ...,
        [0.8550, 0.8513, 0.8698,  ..., 0.8847, 0.8650, 0.8466],
        [0.8853, 0.8826, 0.8887,  ..., 0.8965, 0.8926, 0.8793],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0695],
         [15.4185],
         [24.3704],
         ...,
         [24.2253],
         [17.3648],
         [17.2258]],
        [[13.9915],
         [14.5086],
         [15.1190],
         ...,
         [15.7179],
         [15.0075],
         [15.4862]],
        [[13.8635],
         [14.3998],
         [14.2514],
         ...,
         [14.8984],
         [14.7389],
         [15.2835]],
        ...,
        [[13.7063],
         [14.2658],
         [13.2434],
         ...,
         [13.9403],
         [14.4121],
         [15.0355]],
        [[14.1106],
         [14.6098],
         [15.9669],
         ...,
         [16.5145],
         [15.2598],
         [15.6758]],
        [[14.3773],
         [14.8356],
         [18.0098],
         ...,
         [18.4182],
         [15.8317],
         [16.1024]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1105, 0.9989, 0.9967],
        [0.9441, 0.9525, 0.9624,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0094,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7405],
         [11.5806],
         [26.0130],
         ...,
         [26.3392],
         [13.8182],
         [13.9560]],
        [[10.8255],
         [10.8075],
         [23.9474],
         ...,
         [24.4606],
         [11.3791],
         [10.9275]],
        [[10.7174],
         [10.7155],
         [23.7034],
         ...,
         [24.2376],
         [11.1088],
         [10.6015]],
        ...,
        [[10.5846],
         [10.6023],
         [23.4039],
         ...,
         [23.9636],
         [10.7822],
         [10.2105]],
        [[10.9264],
         [10.8932],
         [24.1749],
         ...,
         [24.6683],
         [11.6345],
         [11.2373]],
        [[11.1523],
         [11.0846],
         [24.6846],
         ...,
         [25.1330],
         [12.2185],
         [11.9524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9843, 1.1750,  ..., 1.1794, 1.0139, 1.0157],
        [0.9743, 0.9741, 1.1477,  ..., 1.1545, 0.9816, 0.9757],
        [0.9729, 0.9729, 1.1445,  ..., 1.1516, 0.9781, 0.9714],
        ...,
        [0.9711, 0.9714, 1.1406,  ..., 1.1480, 0.9738, 0.9662],
        [0.9757, 0.9752, 1.1507,  ..., 1.1573, 0.9850, 0.9798],
        [0.9786, 0.9778, 1.1575,  ..., 1.1634, 0.9927, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7859],
         [12.8887],
         [10.9848],
         ...,
         [10.3535],
         [12.5628],
         [13.0400]],
        [[ 8.0164],
         [ 7.8728],
         [ 8.3440],
         ...,
         [ 8.8125],
         [ 8.3971],
         [ 7.6967]],
        [[ 7.5662],
         [ 7.4067],
         [ 8.0648],
         ...,
         [ 8.6384],
         [ 7.9887],
         [ 7.2104]],
        ...,
        [[ 7.0425],
         [ 6.8665],
         [ 7.7312],
         ...,
         [ 8.4272],
         [ 7.5092],
         [ 6.6493]],
        [[ 8.4557],
         [ 8.3290],
         [ 8.6104],
         ...,
         [ 8.9763],
         [ 8.7928],
         [ 8.1747]],
        [[ 9.5122],
         [ 9.4316],
         [ 9.2287],
         ...,
         [ 9.3486],
         [ 9.7331],
         [ 9.3372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 0.9804, 0.9396,  ..., 0.9260, 0.9734, 0.9836],
        [0.8759, 0.8728, 0.8829,  ..., 0.8930, 0.8841, 0.8691],
        [0.8663, 0.8628, 0.8770,  ..., 0.8893, 0.8753, 0.8586],
        ...,
        [0.8550, 0.8513, 0.8698,  ..., 0.8847, 0.8650, 0.8466],
        [0.8853, 0.8826, 0.8887,  ..., 0.8965, 0.8926, 0.8793],
        [0.9080, 0.9063, 0.9019,  ..., 0.9045, 0.9127, 0.9042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0695],
         [15.4187],
         [24.3703],
         ...,
         [24.2251],
         [17.3655],
         [17.2266]],
        [[13.9915],
         [14.5088],
         [15.1190],
         ...,
         [15.7181],
         [15.0078],
         [15.4866]],
        [[13.8635],
         [14.3999],
         [14.2514],
         ...,
         [14.8986],
         [14.7392],
         [15.2839]],
        ...,
        [[13.7063],
         [14.2660],
         [13.2434],
         ...,
         [13.9405],
         [14.4124],
         [15.0358]],
        [[14.1107],
         [14.6100],
         [15.9668],
         ...,
         [16.5147],
         [15.2602],
         [15.6762]],
        [[14.3773],
         [14.8358],
         [18.0097],
         ...,
         [18.4183],
         [15.8322],
         [16.1029]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9673, 1.1129,  ..., 1.1105, 0.9989, 0.9967],
        [0.9441, 0.9525, 0.9624,  ..., 0.9722, 0.9606, 0.9684],
        [0.9420, 0.9507, 0.9483,  ..., 0.9588, 0.9562, 0.9651],
        ...,
        [0.9394, 0.9485, 0.9319,  ..., 0.9432, 0.9509, 0.9611],
        [0.9460, 0.9541, 0.9762,  ..., 0.9851, 0.9647, 0.9715],
        [0.9503, 0.9578, 1.0094,  ..., 1.0161, 0.9740, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6903],
         [11.6124],
         [26.3133],
         ...,
         [26.1914],
         [12.1837],
         [12.4602]],
        [[10.8210],
         [10.8115],
         [24.4281],
         ...,
         [24.2406],
         [10.9650],
         [10.8840]],
        [[10.7179],
         [10.7163],
         [24.2043],
         ...,
         [24.0095],
         [10.8229],
         [10.7033]],
        ...,
        [[10.5914],
         [10.5993],
         [23.9294],
         ...,
         [23.7256],
         [10.6491],
         [10.4832]],
        [[10.9169],
         [10.9002],
         [24.6365],
         ...,
         [24.4560],
         [11.0979],
         [11.0535]],
        [[11.1318],
         [11.0984],
         [25.1028],
         ...,
         [24.9380],
         [11.3968],
         [11.4371]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9962, 0.9952, 1.1894,  ..., 1.1878, 1.0027, 1.0064],
        [0.9847, 0.9846, 1.1645,  ..., 1.1620, 0.9866, 0.9855],
        [0.9833, 0.9833, 1.1616,  ..., 1.1590, 0.9847, 0.9831],
        ...,
        [0.9817, 0.9818, 1.1579,  ..., 1.1552, 0.9824, 0.9802],
        [0.9860, 0.9857, 1.1673,  ..., 1.1649, 0.9884, 0.9878],
        [0.9888, 0.9884, 1.1734,  ..., 1.1713, 0.9923, 0.9928]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8291],
         [12.8770],
         [10.6003],
         ...,
         [10.1343],
         [12.8723],
         [12.8528]],
        [[ 7.9539],
         [ 7.8882],
         [ 8.6203],
         ...,
         [ 8.8425],
         [ 7.8944],
         [ 7.9209]],
        [[ 7.4969],
         [ 7.4239],
         [ 8.4025],
         ...,
         [ 8.6945],
         [ 7.4308],
         [ 7.4602]],
        ...,
        [[ 6.9659],
         [ 6.8854],
         [ 8.1397],
         ...,
         [ 8.5143],
         [ 6.8930],
         [ 6.9255]],
        [[ 8.4005],
         [ 8.3426],
         [ 8.8264],
         ...,
         [ 8.9814],
         [ 8.3481],
         [ 8.3714]],
        [[ 9.4769],
         [ 9.4401],
         [ 9.2989],
         ...,
         [ 9.2956],
         [ 9.4436],
         [ 9.4584]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9862, 0.9374,  ..., 0.9274, 0.9861, 0.9857],
        [0.8806, 0.8792, 0.8949,  ..., 0.8997, 0.8793, 0.8799],
        [0.8708, 0.8693, 0.8902,  ..., 0.8965, 0.8694, 0.8700],
        ...,
        [0.8594, 0.8577, 0.8846,  ..., 0.8926, 0.8579, 0.8586],
        [0.8902, 0.8890, 0.8993,  ..., 0.9027, 0.8891, 0.8896],
        [0.9133, 0.9125, 0.9095,  ..., 0.9094, 0.9126, 0.9129]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9478],
         [14.9779],
         [24.6167],
         ...,
         [24.7818],
         [15.6119],
         [15.7022]],
        [[13.9774],
         [14.0874],
         [15.1173],
         ...,
         [15.2626],
         [14.1792],
         [14.6297]],
        [[13.8617],
         [13.9809],
         [14.2319],
         ...,
         [14.3738],
         [14.0112],
         [14.5022]],
        ...,
        [[13.7195],
         [13.8499],
         [13.2047],
         ...,
         [13.3422],
         [13.8055],
         [14.3454]],
        [[14.0850],
         [14.1864],
         [15.9837],
         ...,
         [16.1319],
         [14.3360],
         [14.7485]],
        [[14.3255],
         [14.4074],
         [18.0750],
         ...,
         [18.2295],
         [14.6883],
         [15.0140]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9721, 0.9726, 1.1294,  ..., 1.1320, 0.9829, 0.9844],
        [0.9563, 0.9581, 0.9749,  ..., 0.9772, 0.9596, 0.9669],
        [0.9544, 0.9564, 0.9605,  ..., 0.9628, 0.9569, 0.9649],
        ...,
        [0.9521, 0.9542, 0.9437,  ..., 0.9460, 0.9535, 0.9623],
        [0.9581, 0.9597, 0.9889,  ..., 0.9914, 0.9622, 0.9689],
        [0.9620, 0.9633, 1.0230,  ..., 1.0255, 0.9679, 0.9732]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7322],
         [11.5854],
         [26.0571],
         ...,
         [26.3146],
         [13.5299],
         [13.6997]],
        [[10.8248],
         [10.8082],
         [24.0241],
         ...,
         [24.4251],
         [11.3068],
         [10.9186]],
        [[10.7175],
         [10.7157],
         [23.7838],
         ...,
         [24.2008],
         [11.0584],
         [10.6162]],
        ...,
        [[10.5858],
         [10.6019],
         [23.4888],
         ...,
         [23.9253],
         [10.7576],
         [10.2525]],
        [[10.9249],
         [10.8943],
         [24.2482],
         ...,
         [24.6340],
         [11.5412],
         [11.2055]],
        [[11.1489],
         [11.0868],
         [24.7501],
         ...,
         [25.1012],
         [12.0756],
         [11.8654]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9879, 0.9860, 1.1772,  ..., 1.1806, 1.0117, 1.0139],
        [0.9759, 0.9757, 1.1504,  ..., 1.1557, 0.9823, 0.9772],
        [0.9745, 0.9745, 1.1472,  ..., 1.1527, 0.9790, 0.9732],
        ...,
        [0.9728, 0.9730, 1.1433,  ..., 1.1491, 0.9750, 0.9684],
        [0.9773, 0.9768, 1.1533,  ..., 1.1584, 0.9854, 0.9810],
        [0.9802, 0.9794, 1.1600,  ..., 1.1646, 0.9925, 0.9897]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7929],
         [12.8868],
         [10.8910],
         ...,
         [10.2976],
         [12.6069],
         [13.0101]],
        [[ 8.0060],
         [ 7.8752],
         [ 8.3750],
         ...,
         [ 8.8087],
         [ 8.3042],
         [ 7.7276]],
        [[ 7.5548],
         [ 7.4095],
         [ 8.1070],
         ...,
         [ 8.6400],
         [ 7.8860],
         [ 7.2451]],
        ...,
        [[ 7.0299],
         [ 6.8695],
         [ 7.7863],
         ...,
         [ 8.4352],
         [ 7.3960],
         [ 6.6878]],
        [[ 8.4466],
         [ 8.3312],
         [ 8.6302],
         ...,
         [ 8.9673],
         [ 8.7100],
         [ 8.2017]],
        [[ 9.5064],
         [ 9.4329],
         [ 9.2213],
         ...,
         [ 9.3275],
         [ 9.6771],
         [ 9.3531]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9813, 0.9385,  ..., 0.9258, 0.9753, 0.9840],
        [0.8767, 0.8739, 0.8846,  ..., 0.8939, 0.8831, 0.8707],
        [0.8670, 0.8639, 0.8788,  ..., 0.8903, 0.8741, 0.8604],
        ...,
        [0.8557, 0.8523, 0.8720,  ..., 0.8859, 0.8636, 0.8484],
        [0.8861, 0.8836, 0.8901,  ..., 0.8973, 0.8918, 0.8809],
        [0.9088, 0.9073, 0.9027,  ..., 0.9050, 0.9125, 0.9056]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0488],
         [15.3392],
         [24.4101],
         ...,
         [24.3185],
         [17.0696],
         [16.9652]],
        [[13.9893],
         [14.4400],
         [15.1187],
         ...,
         [15.6408],
         [14.8628],
         [15.3400]],
        [[13.8634],
         [14.3324],
         [14.2482],
         ...,
         [14.8092],
         [14.6103],
         [15.1499]],
        ...,
        [[13.7088],
         [14.2000],
         [13.2371],
         ...,
         [13.8383],
         [14.3028],
         [14.9173]],
        [[14.1065],
         [14.5400],
         [15.9696],
         ...,
         [16.4500],
         [15.0998],
         [15.5175]],
        [[14.3686],
         [14.7633],
         [18.0203],
         ...,
         [18.3868],
         [15.6363],
         [15.9167]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9631, 0.9678, 1.1154,  ..., 1.1139, 0.9960, 0.9943],
        [0.9459, 0.9532, 0.9642,  ..., 0.9727, 0.9601, 0.9678],
        [0.9438, 0.9515, 0.9501,  ..., 0.9592, 0.9560, 0.9648],
        ...,
        [0.9413, 0.9493, 0.9336,  ..., 0.9434, 0.9510, 0.9610],
        [0.9478, 0.9548, 0.9781,  ..., 0.9859, 0.9639, 0.9707],
        [0.9520, 0.9585, 1.0114,  ..., 1.0174, 0.9727, 0.9772]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7388],
         [11.5815],
         [26.0218],
         ...,
         [26.3342],
         [13.7591],
         [13.9036]],
        [[10.8254],
         [10.8076],
         [23.9629],
         ...,
         [24.4534],
         [11.3642],
         [10.9256]],
        [[10.7174],
         [10.7155],
         [23.7197],
         ...,
         [24.2301],
         [11.0984],
         [10.6044]],
        ...,
        [[10.5848],
         [10.6022],
         [23.4212],
         ...,
         [23.9558],
         [10.7770],
         [10.2189]],
        [[10.9261],
         [10.8934],
         [24.1897],
         ...,
         [24.6614],
         [11.6153],
         [11.2308]],
        [[11.1516],
         [11.0851],
         [24.6978],
         ...,
         [25.1265],
         [12.1892],
         [11.9346]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9867, 0.9846, 1.1755,  ..., 1.1796, 1.0134, 1.0153],
        [0.9747, 0.9744, 1.1483,  ..., 1.1548, 0.9818, 0.9760],
        [0.9732, 0.9732, 1.1451,  ..., 1.1518, 0.9783, 0.9717],
        ...,
        [0.9715, 0.9717, 1.1411,  ..., 1.1482, 0.9740, 0.9666],
        [0.9760, 0.9755, 1.1513,  ..., 1.1575, 0.9851, 0.9800],
        [0.9790, 0.9781, 1.1580,  ..., 1.1636, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7873],
         [12.8883],
         [10.9648],
         ...,
         [10.3415],
         [12.5716],
         [13.0339]],
        [[ 8.0143],
         [ 7.8733],
         [ 8.3499],
         ...,
         [ 8.8114],
         [ 8.3779],
         [ 7.7028]],
        [[ 7.5639],
         [ 7.4073],
         [ 8.0730],
         ...,
         [ 8.6385],
         [ 7.9674],
         [ 7.2172]],
        ...,
        [[ 7.0399],
         [ 6.8671],
         [ 7.7421],
         ...,
         [ 8.4286],
         [ 7.4857],
         [ 6.6569]],
        [[ 8.4538],
         [ 8.3295],
         [ 8.6140],
         ...,
         [ 8.9742],
         [ 8.7756],
         [ 8.1800]],
        [[ 9.5110],
         [ 9.4318],
         [ 9.2266],
         ...,
         [ 9.3440],
         [ 9.7214],
         [ 9.3403]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9806, 0.9393,  ..., 0.9260, 0.9738, 0.9837],
        [0.8761, 0.8730, 0.8833,  ..., 0.8932, 0.8839, 0.8694],
        [0.8664, 0.8630, 0.8773,  ..., 0.8894, 0.8751, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8702,  ..., 0.8849, 0.8647, 0.8470],
        [0.8855, 0.8828, 0.8889,  ..., 0.8966, 0.8924, 0.8796],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9127, 0.9045]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0653],
         [15.4023],
         [24.3784],
         ...,
         [24.2442],
         [17.3052],
         [17.1731]],
        [[13.9910],
         [14.4948],
         [15.1189],
         ...,
         [15.7023],
         [14.9780],
         [15.4566]],
        [[13.8635],
         [14.3862],
         [14.2507],
         ...,
         [14.8803],
         [14.7126],
         [15.2564]],
        ...,
        [[13.7068],
         [14.2526],
         [13.2421],
         ...,
         [13.9196],
         [14.3897],
         [15.0115]],
        [[14.1098],
         [14.5957],
         [15.9674],
         ...,
         [16.5015],
         [15.2273],
         [15.6437]],
        [[14.3755],
         [14.8210],
         [18.0119],
         ...,
         [18.4118],
         [15.7921],
         [16.0648]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9619, 0.9674, 1.1134,  ..., 1.1112, 0.9983, 0.9962],
        [0.9444, 0.9526, 0.9628,  ..., 0.9723, 0.9605, 0.9683],
        [0.9424, 0.9509, 0.9486,  ..., 0.9589, 0.9562, 0.9650],
        ...,
        [0.9398, 0.9487, 0.9322,  ..., 0.9433, 0.9509, 0.9610],
        [0.9464, 0.9543, 0.9766,  ..., 0.9853, 0.9645, 0.9713],
        [0.9507, 0.9579, 1.0098,  ..., 1.0163, 0.9737, 0.9782]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7344],
         [11.5841],
         [26.0450],
         ...,
         [26.3212],
         [13.6073],
         [13.7686]],
        [[10.8250],
         [10.8080],
         [24.0033],
         ...,
         [24.4347],
         [11.3262],
         [10.9210]],
        [[10.7175],
         [10.7156],
         [23.7620],
         ...,
         [24.2108],
         [11.0718],
         [10.6122]],
        ...,
        [[10.5855],
         [10.6020],
         [23.4658],
         ...,
         [23.9357],
         [10.7640],
         [10.2410]],
        [[10.9253],
         [10.8940],
         [24.2283],
         ...,
         [24.6433],
         [11.5662],
         [11.2140]],
        [[11.1498],
         [11.0862],
         [24.7323],
         ...,
         [25.1098],
         [12.1140],
         [11.8888]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9875, 0.9855, 1.1766,  ..., 1.1803, 1.0123, 1.0144],
        [0.9755, 0.9753, 1.1497,  ..., 1.1554, 0.9821, 0.9768],
        [0.9741, 0.9740, 1.1465,  ..., 1.1524, 0.9788, 0.9727],
        ...,
        [0.9723, 0.9725, 1.1425,  ..., 1.1488, 0.9747, 0.9678],
        [0.9768, 0.9764, 1.1526,  ..., 1.1581, 0.9853, 0.9806],
        [0.9798, 0.9789, 1.1593,  ..., 1.1643, 0.9925, 0.9896]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7910],
         [12.8873],
         [10.9152],
         ...,
         [10.3120],
         [12.5947],
         [13.0182]],
        [[ 8.0088],
         [ 7.8746],
         [ 8.3661],
         ...,
         [ 8.8094],
         [ 8.3289],
         [ 7.7191]],
        [[ 7.5579],
         [ 7.4087],
         [ 8.0951],
         ...,
         [ 8.6393],
         [ 7.9133],
         [ 7.2355]],
        ...,
        [[ 7.0333],
         [ 6.8687],
         [ 7.7710],
         ...,
         [ 8.4327],
         [ 7.4261],
         [ 6.6771]],
        [[ 8.4490],
         [ 8.3306],
         [ 8.6243],
         ...,
         [ 8.9694],
         [ 8.7320],
         [ 8.1942]],
        [[ 9.5079],
         [ 9.4326],
         [ 9.2226],
         ...,
         [ 9.3328],
         [ 9.6919],
         [ 9.3487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 0.9811, 0.9388,  ..., 0.9259, 0.9748, 0.9839],
        [0.8765, 0.8736, 0.8841,  ..., 0.8936, 0.8833, 0.8703],
        [0.8668, 0.8636, 0.8783,  ..., 0.8900, 0.8744, 0.8599],
        ...,
        [0.8555, 0.8520, 0.8714,  ..., 0.8856, 0.8640, 0.8479],
        [0.8859, 0.8834, 0.8897,  ..., 0.8971, 0.8920, 0.8804],
        [0.9086, 0.9070, 0.9025,  ..., 0.9049, 0.9126, 0.9052]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0544],
         [15.3605],
         [24.3993],
         ...,
         [24.2933],
         [17.1495],
         [17.0355]],
        [[13.9899],
         [14.4586],
         [15.1188],
         ...,
         [15.6616],
         [14.9016],
         [15.3793]],
        [[13.8634],
         [14.3507],
         [14.2491],
         ...,
         [14.8333],
         [14.6447],
         [15.1859]],
        ...,
        [[13.7081],
         [14.2179],
         [13.2388],
         ...,
         [13.8658],
         [14.3319],
         [14.9491]],
        [[14.1076],
         [14.5589],
         [15.9688],
         ...,
         [16.4674],
         [15.1428],
         [15.5602]],
        [[14.3710],
         [14.7828],
         [18.0175],
         ...,
         [18.3953],
         [15.6890],
         [15.9667]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9627, 0.9677, 1.1147,  ..., 1.1130, 0.9968, 0.9949],
        [0.9454, 0.9530, 0.9637,  ..., 0.9726, 0.9602, 0.9680],
        [0.9433, 0.9512, 0.9496,  ..., 0.9591, 0.9560, 0.9648],
        ...,
        [0.9408, 0.9491, 0.9332,  ..., 0.9434, 0.9509, 0.9610],
        [0.9473, 0.9546, 0.9776,  ..., 0.9857, 0.9641, 0.9709],
        [0.9516, 0.9583, 1.0109,  ..., 1.0170, 0.9730, 0.9775]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7379],
         [11.5820],
         [26.0264],
         ...,
         [26.3316],
         [13.7287],
         [13.8766]],
        [[10.8253],
         [10.8077],
         [23.9710],
         ...,
         [24.4497],
         [11.3566],
         [10.9247]],
        [[10.7174],
         [10.7155],
         [23.7281],
         ...,
         [24.2263],
         [11.0930],
         [10.6060]],
        ...,
        [[10.5850],
         [10.6022],
         [23.4301],
         ...,
         [23.9518],
         [10.7744],
         [10.2233]],
        [[10.9259],
         [10.8935],
         [24.1974],
         ...,
         [24.6578],
         [11.6055],
         [11.2274]],
        [[11.1512],
         [11.0853],
         [24.7047],
         ...,
         [25.1232],
         [12.1742],
         [11.9255]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9869, 0.9848, 1.1757,  ..., 1.1797, 1.0132, 1.0151],
        [0.9748, 0.9746, 1.1485,  ..., 1.1549, 0.9818, 0.9761],
        [0.9734, 0.9734, 1.1453,  ..., 1.1519, 0.9784, 0.9719],
        ...,
        [0.9716, 0.9719, 1.1414,  ..., 1.1483, 0.9741, 0.9669],
        [0.9761, 0.9757, 1.1515,  ..., 1.1576, 0.9851, 0.9801],
        [0.9791, 0.9783, 1.1582,  ..., 1.1638, 0.9926, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7880],
         [12.8881],
         [10.9547],
         ...,
         [10.3355],
         [12.5762],
         [13.0308]],
        [[ 8.0132],
         [ 7.8735],
         [ 8.3530],
         ...,
         [ 8.8110],
         [ 8.3681],
         [ 7.7060]],
        [[ 7.5627],
         [ 7.4076],
         [ 8.0773],
         ...,
         [ 8.6386],
         [ 7.9565],
         [ 7.2208]],
        ...,
        [[ 7.0386],
         [ 6.8674],
         [ 7.7477],
         ...,
         [ 8.4294],
         [ 7.4738],
         [ 6.6609]],
        [[ 8.4529],
         [ 8.3297],
         [ 8.6159],
         ...,
         [ 8.9731],
         [ 8.7669],
         [ 8.1828]],
        [[ 9.5104],
         [ 9.4320],
         [ 9.2257],
         ...,
         [ 9.3416],
         [ 9.7154],
         [ 9.3420]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9807, 0.9392,  ..., 0.9259, 0.9740, 0.9837],
        [0.8761, 0.8731, 0.8834,  ..., 0.8932, 0.8838, 0.8696],
        [0.8665, 0.8632, 0.8775,  ..., 0.8896, 0.8749, 0.8592],
        ...,
        [0.8552, 0.8516, 0.8704,  ..., 0.8851, 0.8646, 0.8471],
        [0.8856, 0.8829, 0.8891,  ..., 0.8967, 0.8923, 0.8798],
        [0.9082, 0.9066, 0.9021,  ..., 0.9046, 0.9126, 0.9046]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0631],
         [15.3939],
         [24.3826],
         ...,
         [24.2540],
         [17.2742],
         [17.1456]],
        [[13.9908],
         [14.4876],
         [15.1189],
         ...,
         [15.6942],
         [14.9627],
         [15.4411]],
        [[13.8635],
         [14.3791],
         [14.2504],
         ...,
         [14.8709],
         [14.6990],
         [15.2422]],
        ...,
        [[13.7071],
         [14.2457],
         [13.2415],
         ...,
         [13.9088],
         [14.3781],
         [14.9990]],
        [[14.1094],
         [14.5884],
         [15.9677],
         ...,
         [16.4947],
         [15.2104],
         [15.6270]],
        [[14.3746],
         [14.8134],
         [18.0130],
         ...,
         [18.4085],
         [15.7715],
         [16.0452]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9621, 0.9674, 1.1136,  ..., 1.1115, 0.9980, 0.9959],
        [0.9446, 0.9527, 0.9630,  ..., 0.9723, 0.9604, 0.9682],
        [0.9425, 0.9509, 0.9488,  ..., 0.9589, 0.9561, 0.9650],
        ...,
        [0.9400, 0.9488, 0.9324,  ..., 0.9433, 0.9509, 0.9610],
        [0.9465, 0.9543, 0.9768,  ..., 0.9853, 0.9644, 0.9712],
        [0.9509, 0.9580, 1.0100,  ..., 1.0165, 0.9736, 0.9780]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7386],
         [11.5817],
         [26.0227],
         ...,
         [26.3337],
         [13.7528],
         [13.8980]],
        [[10.8254],
         [10.8076],
         [23.9646],
         ...,
         [24.4526],
         [11.3627],
         [10.9254]],
        [[10.7174],
         [10.7155],
         [23.7214],
         ...,
         [24.2293],
         [11.0973],
         [10.6048]],
        ...,
        [[10.5849],
         [10.6022],
         [23.4230],
         ...,
         [23.9550],
         [10.7765],
         [10.2198]],
        [[10.9261],
         [10.8934],
         [24.1913],
         ...,
         [24.6606],
         [11.6133],
         [11.2301]],
        [[11.1515],
         [11.0851],
         [24.6992],
         ...,
         [25.1259],
         [12.1861],
         [11.9327]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 0.9847, 1.1755,  ..., 1.1796, 1.0134, 1.0153],
        [0.9747, 0.9745, 1.1483,  ..., 1.1548, 0.9818, 0.9760],
        [0.9733, 0.9732, 1.1451,  ..., 1.1518, 0.9783, 0.9718],
        ...,
        [0.9715, 0.9717, 1.1412,  ..., 1.1482, 0.9740, 0.9667],
        [0.9760, 0.9756, 1.1513,  ..., 1.1575, 0.9851, 0.9800],
        [0.9790, 0.9781, 1.1580,  ..., 1.1637, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7874],
         [12.8883],
         [10.9627],
         ...,
         [10.3403],
         [12.5725],
         [13.0333]],
        [[ 8.0140],
         [ 7.8733],
         [ 8.3505],
         ...,
         [ 8.8113],
         [ 8.3759],
         [ 7.7034]],
        [[ 7.5636],
         [ 7.4073],
         [ 8.0739],
         ...,
         [ 8.6385],
         [ 7.9652],
         [ 7.2180]],
        ...,
        [[ 7.0396],
         [ 6.8672],
         [ 7.7432],
         ...,
         [ 8.4287],
         [ 7.4833],
         [ 6.6577]],
        [[ 8.4536],
         [ 8.3295],
         [ 8.6144],
         ...,
         [ 8.9740],
         [ 8.7738],
         [ 8.1806]],
        [[ 9.5109],
         [ 9.4319],
         [ 9.2264],
         ...,
         [ 9.3435],
         [ 9.7202],
         [ 9.3407]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9806, 0.9393,  ..., 0.9260, 0.9738, 0.9837],
        [0.8761, 0.8731, 0.8833,  ..., 0.8932, 0.8838, 0.8694],
        [0.8664, 0.8631, 0.8774,  ..., 0.8895, 0.8750, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8703,  ..., 0.8850, 0.8647, 0.8470],
        [0.8855, 0.8828, 0.8890,  ..., 0.8967, 0.8924, 0.8797],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9127, 0.9045]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0648],
         [15.4006],
         [24.3792],
         ...,
         [24.2462],
         [17.2988],
         [17.1675]],
        [[13.9910],
         [14.4933],
         [15.1189],
         ...,
         [15.7006],
         [14.9748],
         [15.4534]],
        [[13.8635],
         [14.3848],
         [14.2507],
         ...,
         [14.8784],
         [14.7098],
         [15.2535]],
        ...,
        [[13.7068],
         [14.2512],
         [13.2420],
         ...,
         [13.9174],
         [14.3873],
         [15.0089]],
        [[14.1097],
         [14.5942],
         [15.9674],
         ...,
         [16.5001],
         [15.2238],
         [15.6403]],
        [[14.3753],
         [14.8194],
         [18.0121],
         ...,
         [18.4112],
         [15.7879],
         [16.0607]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9619, 0.9674, 1.1134,  ..., 1.1113, 0.9983, 0.9961],
        [0.9445, 0.9526, 0.9628,  ..., 0.9723, 0.9605, 0.9682],
        [0.9424, 0.9509, 0.9487,  ..., 0.9589, 0.9562, 0.9650],
        ...,
        [0.9398, 0.9487, 0.9323,  ..., 0.9433, 0.9509, 0.9610],
        [0.9464, 0.9543, 0.9766,  ..., 0.9853, 0.9645, 0.9713],
        [0.9507, 0.9579, 1.0099,  ..., 1.0164, 0.9737, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7388],
         [11.5815],
         [26.0218],
         ...,
         [26.3342],
         [13.7591],
         [13.9036]],
        [[10.8254],
         [10.8076],
         [23.9629],
         ...,
         [24.4534],
         [11.3642],
         [10.9256]],
        [[10.7174],
         [10.7155],
         [23.7197],
         ...,
         [24.2301],
         [11.0984],
         [10.6044]],
        ...,
        [[10.5848],
         [10.6022],
         [23.4212],
         ...,
         [23.9558],
         [10.7770],
         [10.2189]],
        [[10.9261],
         [10.8934],
         [24.1897],
         ...,
         [24.6614],
         [11.6153],
         [11.2308]],
        [[11.1516],
         [11.0851],
         [24.6978],
         ...,
         [25.1265],
         [12.1892],
         [11.9346]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9867, 0.9846, 1.1755,  ..., 1.1796, 1.0134, 1.0153],
        [0.9747, 0.9744, 1.1483,  ..., 1.1548, 0.9818, 0.9760],
        [0.9732, 0.9732, 1.1451,  ..., 1.1518, 0.9783, 0.9717],
        ...,
        [0.9715, 0.9717, 1.1411,  ..., 1.1482, 0.9740, 0.9666],
        [0.9760, 0.9755, 1.1513,  ..., 1.1575, 0.9851, 0.9800],
        [0.9790, 0.9781, 1.1580,  ..., 1.1636, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7873],
         [12.8883],
         [10.9648],
         ...,
         [10.3415],
         [12.5716],
         [13.0339]],
        [[ 8.0143],
         [ 7.8733],
         [ 8.3499],
         ...,
         [ 8.8114],
         [ 8.3779],
         [ 7.7028]],
        [[ 7.5639],
         [ 7.4073],
         [ 8.0730],
         ...,
         [ 8.6385],
         [ 7.9674],
         [ 7.2172]],
        ...,
        [[ 7.0399],
         [ 6.8671],
         [ 7.7421],
         ...,
         [ 8.4286],
         [ 7.4857],
         [ 6.6569]],
        [[ 8.4538],
         [ 8.3295],
         [ 8.6140],
         ...,
         [ 8.9742],
         [ 8.7756],
         [ 8.1800]],
        [[ 9.5110],
         [ 9.4318],
         [ 9.2266],
         ...,
         [ 9.3440],
         [ 9.7214],
         [ 9.3403]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9806, 0.9393,  ..., 0.9260, 0.9738, 0.9837],
        [0.8761, 0.8730, 0.8833,  ..., 0.8932, 0.8839, 0.8694],
        [0.8664, 0.8630, 0.8773,  ..., 0.8894, 0.8751, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8702,  ..., 0.8849, 0.8647, 0.8470],
        [0.8855, 0.8828, 0.8889,  ..., 0.8966, 0.8924, 0.8796],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9127, 0.9045]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0653],
         [15.4023],
         [24.3784],
         ...,
         [24.2442],
         [17.3052],
         [17.1731]],
        [[13.9910],
         [14.4948],
         [15.1189],
         ...,
         [15.7023],
         [14.9780],
         [15.4566]],
        [[13.8635],
         [14.3862],
         [14.2507],
         ...,
         [14.8803],
         [14.7126],
         [15.2564]],
        ...,
        [[13.7068],
         [14.2526],
         [13.2421],
         ...,
         [13.9196],
         [14.3897],
         [15.0115]],
        [[14.1098],
         [14.5957],
         [15.9674],
         ...,
         [16.5015],
         [15.2273],
         [15.6437]],
        [[14.3755],
         [14.8210],
         [18.0119],
         ...,
         [18.4118],
         [15.7921],
         [16.0648]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9619, 0.9674, 1.1134,  ..., 1.1112, 0.9983, 0.9962],
        [0.9444, 0.9526, 0.9628,  ..., 0.9723, 0.9605, 0.9683],
        [0.9424, 0.9509, 0.9486,  ..., 0.9589, 0.9562, 0.9650],
        ...,
        [0.9398, 0.9487, 0.9322,  ..., 0.9433, 0.9509, 0.9610],
        [0.9464, 0.9543, 0.9766,  ..., 0.9853, 0.9645, 0.9713],
        [0.9507, 0.9579, 1.0098,  ..., 1.0163, 0.9737, 0.9782]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6807],
         [11.6203],
         [26.2396],
         ...,
         [26.1422],
         [12.0043],
         [12.4155]],
        [[10.8200],
         [10.8127],
         [24.3143],
         ...,
         [24.1634],
         [10.9168],
         [10.8826]],
        [[10.7179],
         [10.7167],
         [24.0860],
         ...,
         [23.9291],
         [10.7892],
         [10.7065]],
        ...,
        [[10.5926],
         [10.5987],
         [23.8056],
         ...,
         [23.6414],
         [10.6330],
         [10.4919]],
        [[10.9150],
         [10.9021],
         [24.5269],
         ...,
         [24.3817],
         [11.0359],
         [11.0478]],
        [[11.1278],
         [11.1019],
         [25.0029],
         ...,
         [24.8706],
         [11.3034],
         [11.4211]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9964, 0.9956, 1.1888,  ..., 1.1875, 1.0007, 1.0061],
        [0.9850, 0.9849, 1.1634,  ..., 1.1614, 0.9863, 0.9859],
        [0.9837, 0.9837, 1.1603,  ..., 1.1583, 0.9846, 0.9835],
        ...,
        [0.9820, 0.9821, 1.1566,  ..., 1.1545, 0.9826, 0.9807],
        [0.9863, 0.9861, 1.1662,  ..., 1.1643, 0.9879, 0.9880],
        [0.9891, 0.9888, 1.1725,  ..., 1.1707, 0.9914, 0.9930]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8313],
         [12.8534],
         [10.5555],
         ...,
         [10.1306],
         [12.8933],
         [12.8621]],
        [[ 7.9509],
         [ 7.9201],
         [ 8.6555],
         ...,
         [ 8.8556],
         [ 7.8667],
         [ 7.9082]],
        [[ 7.4935],
         [ 7.4593],
         [ 8.4454],
         ...,
         [ 8.7094],
         [ 7.4000],
         [ 7.4461]],
        ...,
        [[ 6.9622],
         [ 6.9245],
         [ 8.1918],
         ...,
         [ 8.5313],
         [ 6.8590],
         [ 6.9099]],
        [[ 8.3979],
         [ 8.3707],
         [ 8.8540],
         ...,
         [ 8.9928],
         [ 8.3237],
         [ 8.3602]],
        [[ 9.4752],
         [ 9.4579],
         [ 9.3084],
         ...,
         [ 9.3031],
         [ 9.4282],
         [ 9.4513]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9845, 0.9850, 0.9357,  ..., 0.9266, 0.9859, 0.9852],
        [0.8799, 0.8792, 0.8950,  ..., 0.8993, 0.8781, 0.8790],
        [0.8701, 0.8693, 0.8905,  ..., 0.8961, 0.8681, 0.8691],
        ...,
        [0.8587, 0.8579, 0.8850,  ..., 0.8923, 0.8565, 0.8576],
        [0.8895, 0.8889, 0.8992,  ..., 0.9022, 0.8879, 0.8887],
        [0.9126, 0.9122, 0.9090,  ..., 0.9089, 0.9116, 0.9121]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9325],
         [14.9359],
         [24.6956],
         ...,
         [24.8915],
         [15.3808],
         [15.6241]],
        [[13.9834],
         [14.0481],
         [15.0751],
         ...,
         [15.1678],
         [14.0877],
         [14.5664]],
        [[13.8702],
         [13.9419],
         [14.1815],
         ...,
         [14.2657],
         [13.9354],
         [14.4406]],
        ...,
        [[13.7309],
         [13.8113],
         [13.1458],
         ...,
         [13.2202],
         [13.7486],
         [14.2859]],
        [[14.0887],
         [14.1468],
         [15.9499],
         ...,
         [16.0512],
         [14.2298],
         [14.6836]],
        [[14.3240],
         [14.3671],
         [18.0641],
         ...,
         [18.1870],
         [14.5485],
         [14.9455]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9727, 0.9728, 1.1315,  ..., 1.1347, 0.9800, 0.9840],
        [0.9573, 0.9584, 0.9751,  ..., 0.9766, 0.9590, 0.9668],
        [0.9555, 0.9566, 0.9605,  ..., 0.9619, 0.9565, 0.9647],
        ...,
        [0.9532, 0.9545, 0.9437,  ..., 0.9449, 0.9535, 0.9622],
        [0.9590, 0.9600, 0.9893,  ..., 0.9909, 0.9613, 0.9687],
        [0.9628, 0.9635, 1.0237,  ..., 1.0257, 0.9665, 0.9730]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7291],
         [11.5874],
         [26.0540],
         ...,
         [26.3018],
         [13.4443],
         [13.6486]],
        [[10.8246],
         [10.8085],
         [24.0191],
         ...,
         [24.4066],
         [11.2861],
         [10.9169]],
        [[10.7176],
         [10.7158],
         [23.7785],
         ...,
         [24.1817],
         [11.0442],
         [10.6192]],
        ...,
        [[10.5862],
         [10.6018],
         [23.4832],
         ...,
         [23.9054],
         [10.7512],
         [10.2611]],
        [[10.9243],
         [10.8948],
         [24.2434],
         ...,
         [24.6161],
         [11.5140],
         [11.1991]],
        [[11.1477],
         [11.0877],
         [24.7457],
         ...,
         [25.0847],
         [12.0335],
         [11.8480]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9882, 0.9863, 1.1775,  ..., 1.1808, 1.0109, 1.0136],
        [0.9763, 0.9760, 1.1506,  ..., 1.1557, 0.9824, 0.9775],
        [0.9748, 0.9748, 1.1474,  ..., 1.1528, 0.9792, 0.9735],
        ...,
        [0.9731, 0.9733, 1.1435,  ..., 1.1491, 0.9753, 0.9688],
        [0.9776, 0.9772, 1.1536,  ..., 1.1585, 0.9854, 0.9812],
        [0.9805, 0.9797, 1.1602,  ..., 1.1647, 0.9922, 0.9898]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7944],
         [12.8827],
         [10.8665],
         ...,
         [10.2823],
         [12.6177],
         [13.0065]],
        [[ 8.0038],
         [ 7.8806],
         [ 8.3854],
         ...,
         [ 8.8082],
         [ 8.2828],
         [ 7.7315]],
        [[ 7.5523],
         [ 7.4155],
         [ 8.1206],
         ...,
         [ 8.6411],
         [ 7.8623],
         [ 7.2494]],
        ...,
        [[ 7.0271],
         [ 6.8761],
         [ 7.8035],
         ...,
         [ 8.4381],
         [ 7.3699],
         [ 6.6925]],
        [[ 8.4446],
         [ 8.3359],
         [ 8.6375],
         ...,
         [ 8.9654],
         [ 8.6910],
         [ 8.2050]],
        [[ 9.5051],
         [ 9.4359],
         [ 9.2210],
         ...,
         [ 9.3221],
         [ 9.6643],
         [ 9.3551]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9795, 0.9814, 0.9381,  ..., 0.9256, 0.9757, 0.9840],
        [0.8768, 0.8741, 0.8849,  ..., 0.8940, 0.8827, 0.8709],
        [0.8671, 0.8641, 0.8793,  ..., 0.8904, 0.8737, 0.8606],
        ...,
        [0.8558, 0.8526, 0.8725,  ..., 0.8861, 0.8632, 0.8486],
        [0.8862, 0.8839, 0.8903,  ..., 0.8974, 0.8915, 0.8811],
        [0.9089, 0.9075, 0.9029,  ..., 0.9050, 0.9124, 0.9057]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0424],
         [15.3174],
         [24.4295],
         ...,
         [24.3536],
         [16.9770],
         [16.9064]],
        [[13.9899],
         [14.4220],
         [15.1118],
         ...,
         [15.6108],
         [14.8211],
         [15.3043]],
        [[13.8649],
         [14.3148],
         [14.2395],
         ...,
         [14.7747],
         [14.5741],
         [15.1169]],
        ...,
        [[13.7112],
         [14.1830],
         [13.2264],
         ...,
         [13.7988],
         [14.2731],
         [14.8874]],
        [[14.1064],
         [14.5216],
         [15.9645],
         ...,
         [16.4247],
         [15.0530],
         [15.4795]],
        [[14.3668],
         [14.7439],
         [18.0203],
         ...,
         [18.3741],
         [15.5774],
         [15.8730]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9635, 0.9679, 1.1161,  ..., 1.1149, 0.9949, 0.9938],
        [0.9464, 0.9534, 0.9646,  ..., 0.9727, 0.9599, 0.9677],
        [0.9443, 0.9516, 0.9504,  ..., 0.9591, 0.9559, 0.9647],
        ...,
        [0.9418, 0.9495, 0.9339,  ..., 0.9432, 0.9510, 0.9609],
        [0.9482, 0.9550, 0.9785,  ..., 0.9860, 0.9636, 0.9706],
        [0.9525, 0.9586, 1.0119,  ..., 1.0177, 0.9722, 0.9770]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7369],
         [11.5827],
         [26.0281],
         ...,
         [26.3278],
         [13.6962],
         [13.8528]],
        [[10.8252],
         [10.8078],
         [23.9740],
         ...,
         [24.4441],
         [11.3486],
         [10.9238]],
        [[10.7174],
         [10.7156],
         [23.7313],
         ...,
         [24.2205],
         [11.0875],
         [10.6073]],
        ...,
        [[10.5851],
         [10.6022],
         [23.4334],
         ...,
         [23.9459],
         [10.7717],
         [10.2271]],
        [[10.9257],
         [10.8937],
         [24.2003],
         ...,
         [24.6524],
         [11.5951],
         [11.2245]],
        [[11.1508],
         [11.0856],
         [24.7073],
         ...,
         [25.1183],
         [12.1581],
         [11.9174]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9870, 0.9850, 1.1759,  ..., 1.1798, 1.0129, 1.0150],
        [0.9750, 0.9747, 1.1487,  ..., 1.1549, 0.9819, 0.9763],
        [0.9735, 0.9735, 1.1455,  ..., 1.1520, 0.9784, 0.9721],
        ...,
        [0.9718, 0.9720, 1.1416,  ..., 1.1484, 0.9743, 0.9671],
        [0.9763, 0.9759, 1.1517,  ..., 1.1577, 0.9851, 0.9802],
        [0.9793, 0.9784, 1.1584,  ..., 1.1639, 0.9926, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7887],
         [12.8872],
         [10.9444],
         ...,
         [10.3292],
         [12.5805],
         [13.0285]],
        [[ 8.0122],
         [ 7.8747],
         [ 8.3565],
         ...,
         [ 8.8105],
         [ 8.3587],
         [ 7.7083]],
        [[ 7.5616],
         [ 7.4089],
         [ 8.0820],
         ...,
         [ 8.6387],
         [ 7.9462],
         [ 7.2235]],
        ...,
        [[ 7.0374],
         [ 6.8689],
         [ 7.7539],
         ...,
         [ 8.4302],
         [ 7.4624],
         [ 6.6638]],
        [[ 8.4520],
         [ 8.3307],
         [ 8.6182],
         ...,
         [ 8.9721],
         [ 8.7586],
         [ 8.1848]],
        [[ 9.5099],
         [ 9.4326],
         [ 9.2250],
         ...,
         [ 9.3392],
         [ 9.7098],
         [ 9.3432]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9786, 0.9807, 0.9391,  ..., 0.9259, 0.9742, 0.9838],
        [0.8762, 0.8732, 0.8836,  ..., 0.8933, 0.8836, 0.8697],
        [0.8665, 0.8633, 0.8777,  ..., 0.8896, 0.8748, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8707,  ..., 0.8852, 0.8644, 0.8473],
        [0.8856, 0.8830, 0.8892,  ..., 0.8968, 0.8922, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9047, 0.9126, 0.9047]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0607],
         [15.3853],
         [24.3885],
         ...,
         [24.2659],
         [17.2402],
         [17.1200]],
        [[13.9908],
         [14.4804],
         [15.1175],
         ...,
         [15.6841],
         [14.9465],
         [15.4262]],
        [[13.8638],
         [14.3721],
         [14.2485],
         ...,
         [14.8592],
         [14.6847],
         [15.2285]],
        ...,
        [[13.7077],
         [14.2389],
         [13.2390],
         ...,
         [13.8955],
         [14.3661],
         [14.9867]],
        [[14.1091],
         [14.5810],
         [15.9668],
         ...,
         [16.4862],
         [15.1924],
         [15.6110]],
        [[14.3738],
         [14.8056],
         [18.0136],
         ...,
         [18.4043],
         [15.7493],
         [16.0266]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9622, 0.9675, 1.1139,  ..., 1.1119, 0.9976, 0.9957],
        [0.9448, 0.9528, 0.9631,  ..., 0.9723, 0.9603, 0.9681],
        [0.9427, 0.9510, 0.9490,  ..., 0.9589, 0.9561, 0.9649],
        ...,
        [0.9402, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9467, 0.9544, 0.9769,  ..., 0.9854, 0.9643, 0.9711],
        [0.9510, 0.9580, 1.0102,  ..., 1.0166, 0.9734, 0.9779]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7384],
         [11.5818],
         [26.0231],
         ...,
         [26.3328],
         [13.7458],
         [13.8929]],
        [[10.8254],
         [10.8077],
         [23.9653],
         ...,
         [24.4514],
         [11.3609],
         [10.9252]],
        [[10.7174],
         [10.7155],
         [23.7221],
         ...,
         [24.2281],
         [11.0961],
         [10.6050]],
        ...,
        [[10.5849],
         [10.6022],
         [23.4238],
         ...,
         [23.9537],
         [10.7759],
         [10.2206]],
        [[10.9260],
         [10.8935],
         [24.1920],
         ...,
         [24.6595],
         [11.6111],
         [11.2294]],
        [[11.1514],
         [11.0852],
         [24.6998],
         ...,
         [25.1248],
         [12.1827],
         [11.9310]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 0.9847, 1.1756,  ..., 1.1797, 1.0133, 1.0153],
        [0.9747, 0.9745, 1.1484,  ..., 1.1548, 0.9818, 0.9760],
        [0.9733, 0.9733, 1.1452,  ..., 1.1518, 0.9783, 0.9718],
        ...,
        [0.9715, 0.9718, 1.1412,  ..., 1.1482, 0.9741, 0.9667],
        [0.9760, 0.9756, 1.1514,  ..., 1.1575, 0.9851, 0.9801],
        [0.9790, 0.9782, 1.1581,  ..., 1.1637, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7876],
         [12.8881],
         [10.9605],
         ...,
         [10.3389],
         [12.5735],
         [13.0328]],
        [[ 8.0138],
         [ 7.8736],
         [ 8.3513],
         ...,
         [ 8.8112],
         [ 8.3738],
         [ 7.7040]],
        [[ 7.5634],
         [ 7.4076],
         [ 8.0749],
         ...,
         [ 8.6385],
         [ 7.9629],
         [ 7.2185]],
        ...,
        [[ 7.0394],
         [ 6.8675],
         [ 7.7445],
         ...,
         [ 8.4289],
         [ 7.4808],
         [ 6.6584]],
        [[ 8.4535],
         [ 8.3297],
         [ 8.6149],
         ...,
         [ 8.9737],
         [ 8.7720],
         [ 8.1810]],
        [[ 9.5108],
         [ 9.4320],
         [ 9.2263],
         ...,
         [ 9.3430],
         [ 9.7190],
         [ 9.3409]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9806, 0.9393,  ..., 0.9259, 0.9739, 0.9837],
        [0.8761, 0.8731, 0.8833,  ..., 0.8932, 0.8838, 0.8694],
        [0.8664, 0.8631, 0.8774,  ..., 0.8895, 0.8750, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8703,  ..., 0.8850, 0.8647, 0.8470],
        [0.8855, 0.8829, 0.8890,  ..., 0.8967, 0.8923, 0.8797],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9127, 0.9045]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0643],
         [15.3987],
         [24.3805],
         ...,
         [24.2488],
         [17.2915],
         [17.1619]],
        [[13.9910],
         [14.4917],
         [15.1186],
         ...,
         [15.6985],
         [14.9714],
         [15.4501]],
        [[13.8635],
         [14.3833],
         [14.2503],
         ...,
         [14.8758],
         [14.7067],
         [15.2505]],
        ...,
        [[13.7070],
         [14.2497],
         [13.2415],
         ...,
         [13.9145],
         [14.3847],
         [15.0062]],
        [[14.1097],
         [14.5926],
         [15.9673],
         ...,
         [16.4983],
         [15.2199],
         [15.6368]],
        [[14.3751],
         [14.8178],
         [18.0122],
         ...,
         [18.4103],
         [15.7831],
         [16.0567]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 0.9674, 1.1135,  ..., 1.1113, 0.9982, 0.9961],
        [0.9445, 0.9526, 0.9628,  ..., 0.9723, 0.9604, 0.9682],
        [0.9424, 0.9509, 0.9487,  ..., 0.9589, 0.9561, 0.9650],
        ...,
        [0.9399, 0.9487, 0.9323,  ..., 0.9433, 0.9509, 0.9610],
        [0.9464, 0.9543, 0.9766,  ..., 0.9853, 0.9645, 0.9713],
        [0.9507, 0.9579, 1.0099,  ..., 1.0164, 0.9736, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7374],
         [11.5824],
         [26.0264],
         ...,
         [26.3295],
         [13.7131],
         [13.8664]],
        [[10.8253],
         [10.8078],
         [23.9710],
         ...,
         [24.4466],
         [11.3528],
         [10.9243]],
        [[10.7174],
         [10.7155],
         [23.7282],
         ...,
         [24.2231],
         [11.0904],
         [10.6065]],
        ...,
        [[10.5850],
         [10.6022],
         [23.4301],
         ...,
         [23.9485],
         [10.7731],
         [10.2249]],
        [[10.9258],
         [10.8936],
         [24.1975],
         ...,
         [24.6548],
         [11.6005],
         [11.2261]],
        [[11.1510],
         [11.0854],
         [24.7047],
         ...,
         [25.1205],
         [12.1665],
         [11.9220]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9869, 0.9849, 1.1758,  ..., 1.1798, 1.0130, 1.0151],
        [0.9749, 0.9746, 1.1486,  ..., 1.1549, 0.9819, 0.9762],
        [0.9735, 0.9734, 1.1454,  ..., 1.1519, 0.9784, 0.9720],
        ...,
        [0.9717, 0.9719, 1.1415,  ..., 1.1483, 0.9742, 0.9669],
        [0.9762, 0.9758, 1.1516,  ..., 1.1576, 0.9851, 0.9802],
        [0.9792, 0.9783, 1.1583,  ..., 1.1638, 0.9926, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7883],
         [12.8875],
         [10.9498],
         ...,
         [10.3325],
         [12.5781],
         [13.0300]],
        [[ 8.0127],
         [ 7.8743],
         [ 8.3547],
         ...,
         [ 8.8107],
         [ 8.3638],
         [ 7.7068]],
        [[ 7.5622],
         [ 7.4085],
         [ 8.0796],
         ...,
         [ 8.6387],
         [ 7.9519],
         [ 7.2218]],
        ...,
        [[ 7.0381],
         [ 6.8684],
         [ 7.7507],
         ...,
         [ 8.4298],
         [ 7.4686],
         [ 6.6620]],
        [[ 8.4525],
         [ 8.3304],
         [ 8.6170],
         ...,
         [ 8.9726],
         [ 8.7631],
         [ 8.1835]],
        [[ 9.5102],
         [ 9.4324],
         [ 9.2254],
         ...,
         [ 9.3405],
         [ 9.7129],
         [ 9.3424]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9786, 0.9807, 0.9391,  ..., 0.9259, 0.9741, 0.9837],
        [0.8762, 0.8732, 0.8835,  ..., 0.8933, 0.8837, 0.8696],
        [0.8665, 0.8632, 0.8776,  ..., 0.8896, 0.8749, 0.8592],
        ...,
        [0.8553, 0.8516, 0.8705,  ..., 0.8851, 0.8645, 0.8472],
        [0.8856, 0.8830, 0.8891,  ..., 0.8967, 0.8922, 0.8798],
        [0.9083, 0.9066, 0.9022,  ..., 0.9046, 0.9126, 0.9047]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0619],
         [15.3898],
         [24.3858],
         ...,
         [24.2601],
         [17.2576],
         [17.1343]],
        [[13.9909],
         [14.4842],
         [15.1179],
         ...,
         [15.6890],
         [14.9550],
         [15.4343]],
        [[13.8637],
         [14.3759],
         [14.2491],
         ...,
         [14.8649],
         [14.6922],
         [15.2360]],
        ...,
        [[13.7074],
         [14.2426],
         [13.2399],
         ...,
         [13.9019],
         [14.3724],
         [14.9933]],
        [[14.1093],
         [14.5850],
         [15.9670],
         ...,
         [16.4903],
         [15.2017],
         [15.6197]],
        [[14.3742],
         [14.8098],
         [18.0131],
         ...,
         [18.4064],
         [15.7608],
         [16.0368]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9621, 0.9674, 1.1138,  ..., 1.1117, 0.9978, 0.9958],
        [0.9447, 0.9527, 0.9630,  ..., 0.9723, 0.9604, 0.9682],
        [0.9426, 0.9510, 0.9489,  ..., 0.9589, 0.9561, 0.9649],
        ...,
        [0.9401, 0.9488, 0.9325,  ..., 0.9432, 0.9509, 0.9610],
        [0.9466, 0.9544, 0.9768,  ..., 0.9853, 0.9644, 0.9712],
        [0.9509, 0.9580, 1.0101,  ..., 1.0165, 0.9735, 0.9780]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7382],
         [11.5819],
         [26.0238],
         ...,
         [26.3321],
         [13.7390],
         [13.8873]],
        [[10.8254],
         [10.8077],
         [23.9665],
         ...,
         [24.4504],
         [11.3592],
         [10.9250]],
        [[10.7174],
         [10.7155],
         [23.7234],
         ...,
         [24.2271],
         [11.0949],
         [10.6054]],
        ...,
        [[10.5849],
         [10.6022],
         [23.4251],
         ...,
         [23.9526],
         [10.7753],
         [10.2215]],
        [[10.9260],
         [10.8935],
         [24.1931],
         ...,
         [24.6585],
         [11.6088],
         [11.2288]],
        [[11.1513],
         [11.0852],
         [24.7009],
         ...,
         [25.1239],
         [12.1793],
         [11.9291]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 0.9847, 1.1756,  ..., 1.1797, 1.0133, 1.0152],
        [0.9748, 0.9745, 1.1484,  ..., 1.1548, 0.9818, 0.9761],
        [0.9733, 0.9733, 1.1452,  ..., 1.1519, 0.9783, 0.9718],
        ...,
        [0.9716, 0.9718, 1.1413,  ..., 1.1482, 0.9741, 0.9668],
        [0.9761, 0.9757, 1.1514,  ..., 1.1576, 0.9851, 0.9801],
        [0.9791, 0.9782, 1.1581,  ..., 1.1637, 0.9926, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7877],
         [12.8879],
         [10.9582],
         ...,
         [10.3376],
         [12.5744],
         [13.0322]],
        [[ 8.0136],
         [ 7.8737],
         [ 8.3520],
         ...,
         [ 8.8111],
         [ 8.3717],
         [ 7.7046]],
        [[ 7.5632],
         [ 7.4078],
         [ 8.0759],
         ...,
         [ 8.6386],
         [ 7.9606],
         [ 7.2192]],
        ...,
        [[ 7.0391],
         [ 6.8677],
         [ 7.7458],
         ...,
         [ 8.4291],
         [ 7.4783],
         [ 6.6591]],
        [[ 8.4533],
         [ 8.3299],
         [ 8.6153],
         ...,
         [ 8.9735],
         [ 8.7702],
         [ 8.1816]],
        [[ 9.5107],
         [ 9.4321],
         [ 9.2261],
         ...,
         [ 9.3424],
         [ 9.7177],
         [ 9.3412]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9806, 0.9392,  ..., 0.9259, 0.9739, 0.9837],
        [0.8761, 0.8731, 0.8834,  ..., 0.8932, 0.8838, 0.8695],
        [0.8664, 0.8631, 0.8774,  ..., 0.8895, 0.8750, 0.8591],
        ...,
        [0.8552, 0.8515, 0.8704,  ..., 0.8850, 0.8646, 0.8471],
        [0.8855, 0.8829, 0.8890,  ..., 0.8967, 0.8923, 0.8797],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9126, 0.9046]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0638],
         [15.3968],
         [24.3816],
         ...,
         [24.2511],
         [17.2844],
         [17.1561]],
        [[13.9909],
         [14.4902],
         [15.1185],
         ...,
         [15.6965],
         [14.9679],
         [15.4468]],
        [[13.8636],
         [14.3817],
         [14.2500],
         ...,
         [14.8735],
         [14.7037],
         [15.2474]],
        ...,
        [[13.7071],
         [14.2482],
         [13.2411],
         ...,
         [13.9119],
         [14.3821],
         [15.0035]],
        [[14.1096],
         [14.5910],
         [15.9672],
         ...,
         [16.4966],
         [15.2161],
         [15.6332]],
        [[14.3750],
         [14.8161],
         [18.0124],
         ...,
         [18.4094],
         [15.7784],
         [16.0525]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 0.9674, 1.1135,  ..., 1.1114, 0.9981, 0.9960],
        [0.9445, 0.9527, 0.9629,  ..., 0.9723, 0.9604, 0.9682],
        [0.9425, 0.9509, 0.9488,  ..., 0.9589, 0.9561, 0.9650],
        ...,
        [0.9399, 0.9487, 0.9323,  ..., 0.9433, 0.9509, 0.9610],
        [0.9465, 0.9543, 0.9767,  ..., 0.9853, 0.9645, 0.9713],
        [0.9508, 0.9580, 1.0099,  ..., 1.0164, 0.9736, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7384],
         [11.5818],
         [26.0233],
         ...,
         [26.3327],
         [13.7444],
         [13.8917]],
        [[10.8254],
         [10.8077],
         [23.9655],
         ...,
         [24.4512],
         [11.3606],
         [10.9252]],
        [[10.7174],
         [10.7155],
         [23.7224],
         ...,
         [24.2279],
         [11.0958],
         [10.6051]],
        ...,
        [[10.5849],
         [10.6022],
         [23.4240],
         ...,
         [23.9535],
         [10.7758],
         [10.2208]],
        [[10.9260],
         [10.8935],
         [24.1922],
         ...,
         [24.6593],
         [11.6106],
         [11.2293]],
        [[11.1514],
         [11.0852],
         [24.7000],
         ...,
         [25.1246],
         [12.1820],
         [11.9306]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 0.9847, 1.1756,  ..., 1.1797, 1.0133, 1.0152],
        [0.9747, 0.9745, 1.1484,  ..., 1.1548, 0.9818, 0.9760],
        [0.9733, 0.9733, 1.1452,  ..., 1.1518, 0.9783, 0.9718],
        ...,
        [0.9715, 0.9718, 1.1412,  ..., 1.1482, 0.9741, 0.9667],
        [0.9761, 0.9756, 1.1514,  ..., 1.1575, 0.9851, 0.9801],
        [0.9790, 0.9782, 1.1581,  ..., 1.1637, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7876],
         [12.8880],
         [10.9600],
         ...,
         [10.3386],
         [12.5737],
         [13.0327]],
        [[ 8.0138],
         [ 7.8736],
         [ 8.3514],
         ...,
         [ 8.8112],
         [ 8.3734],
         [ 7.7041]],
        [[ 7.5634],
         [ 7.4077],
         [ 8.0751],
         ...,
         [ 8.6386],
         [ 7.9624],
         [ 7.2187]],
        ...,
        [[ 7.0393],
         [ 6.8675],
         [ 7.7448],
         ...,
         [ 8.4290],
         [ 7.4803],
         [ 6.6585]],
        [[ 8.4534],
         [ 8.3298],
         [ 8.6149],
         ...,
         [ 8.9737],
         [ 8.7716],
         [ 8.1811]],
        [[ 9.5108],
         [ 9.4320],
         [ 9.2262],
         ...,
         [ 9.3428],
         [ 9.7187],
         [ 9.3410]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9806, 0.9393,  ..., 0.9259, 0.9739, 0.9837],
        [0.8761, 0.8731, 0.8833,  ..., 0.8932, 0.8838, 0.8695],
        [0.8664, 0.8631, 0.8774,  ..., 0.8895, 0.8750, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8703,  ..., 0.8850, 0.8647, 0.8470],
        [0.8855, 0.8829, 0.8890,  ..., 0.8967, 0.8923, 0.8797],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9127, 0.9046]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0642],
         [15.3983],
         [24.3807],
         ...,
         [24.2493],
         [17.2900],
         [17.1607]],
        [[13.9910],
         [14.4914],
         [15.1186],
         ...,
         [15.6980],
         [14.9706],
         [15.4494]],
        [[13.8635],
         [14.3829],
         [14.2502],
         ...,
         [14.8754],
         [14.7061],
         [15.2498]],
        ...,
        [[13.7070],
         [14.2494],
         [13.2414],
         ...,
         [13.9140],
         [14.3842],
         [15.0057]],
        [[14.1096],
         [14.5923],
         [15.9673],
         ...,
         [16.4979],
         [15.2191],
         [15.6360]],
        [[14.3751],
         [14.8174],
         [18.0123],
         ...,
         [18.4101],
         [15.7821],
         [16.0558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 0.9674, 1.1135,  ..., 1.1114, 0.9982, 0.9961],
        [0.9445, 0.9526, 0.9629,  ..., 0.9723, 0.9604, 0.9682],
        [0.9424, 0.9509, 0.9487,  ..., 0.9589, 0.9561, 0.9650],
        ...,
        [0.9399, 0.9487, 0.9323,  ..., 0.9433, 0.9509, 0.9610],
        [0.9464, 0.9543, 0.9767,  ..., 0.9853, 0.9645, 0.9713],
        [0.9508, 0.9580, 1.0099,  ..., 1.0164, 0.9736, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7384],
         [11.5818],
         [26.0231],
         ...,
         [26.3328],
         [13.7458],
         [13.8929]],
        [[10.8254],
         [10.8077],
         [23.9653],
         ...,
         [24.4514],
         [11.3609],
         [10.9252]],
        [[10.7174],
         [10.7155],
         [23.7221],
         ...,
         [24.2281],
         [11.0961],
         [10.6050]],
        ...,
        [[10.5849],
         [10.6022],
         [23.4238],
         ...,
         [23.9537],
         [10.7759],
         [10.2206]],
        [[10.9260],
         [10.8935],
         [24.1920],
         ...,
         [24.6595],
         [11.6111],
         [11.2294]],
        [[11.1514],
         [11.0852],
         [24.6998],
         ...,
         [25.1248],
         [12.1827],
         [11.9310]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 0.9847, 1.1756,  ..., 1.1797, 1.0133, 1.0153],
        [0.9747, 0.9745, 1.1484,  ..., 1.1548, 0.9818, 0.9760],
        [0.9733, 0.9733, 1.1452,  ..., 1.1518, 0.9783, 0.9718],
        ...,
        [0.9715, 0.9718, 1.1412,  ..., 1.1482, 0.9741, 0.9667],
        [0.9760, 0.9756, 1.1514,  ..., 1.1575, 0.9851, 0.9801],
        [0.9790, 0.9782, 1.1581,  ..., 1.1637, 0.9927, 0.9893]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7876],
         [12.8881],
         [10.9605],
         ...,
         [10.3389],
         [12.5735],
         [13.0328]],
        [[ 8.0138],
         [ 7.8736],
         [ 8.3513],
         ...,
         [ 8.8112],
         [ 8.3738],
         [ 7.7040]],
        [[ 7.5634],
         [ 7.4076],
         [ 8.0749],
         ...,
         [ 8.6385],
         [ 7.9629],
         [ 7.2185]],
        ...,
        [[ 7.0394],
         [ 6.8675],
         [ 7.7445],
         ...,
         [ 8.4289],
         [ 7.4808],
         [ 6.6584]],
        [[ 8.4535],
         [ 8.3297],
         [ 8.6149],
         ...,
         [ 8.9737],
         [ 8.7720],
         [ 8.1810]],
        [[ 9.5108],
         [ 9.4320],
         [ 9.2263],
         ...,
         [ 9.3430],
         [ 9.7190],
         [ 9.3409]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9806, 0.9393,  ..., 0.9259, 0.9739, 0.9837],
        [0.8761, 0.8731, 0.8833,  ..., 0.8932, 0.8838, 0.8694],
        [0.8664, 0.8631, 0.8774,  ..., 0.8895, 0.8750, 0.8590],
        ...,
        [0.8552, 0.8515, 0.8703,  ..., 0.8850, 0.8647, 0.8470],
        [0.8855, 0.8829, 0.8890,  ..., 0.8967, 0.8923, 0.8797],
        [0.9082, 0.9065, 0.9021,  ..., 0.9046, 0.9127, 0.9045]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0643],
         [15.3987],
         [24.3805],
         ...,
         [24.2488],
         [17.2915],
         [17.1619]],
        [[13.9910],
         [14.4917],
         [15.1186],
         ...,
         [15.6985],
         [14.9714],
         [15.4501]],
        [[13.8635],
         [14.3833],
         [14.2503],
         ...,
         [14.8758],
         [14.7067],
         [15.2505]],
        ...,
        [[13.7070],
         [14.2497],
         [13.2415],
         ...,
         [13.9145],
         [14.3847],
         [15.0062]],
        [[14.1097],
         [14.5926],
         [15.9673],
         ...,
         [16.4983],
         [15.2199],
         [15.6368]],
        [[14.3751],
         [14.8178],
         [18.0122],
         ...,
         [18.4103],
         [15.7831],
         [16.0567]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 0.9674, 1.1135,  ..., 1.1113, 0.9982, 0.9961],
        [0.9445, 0.9526, 0.9628,  ..., 0.9723, 0.9604, 0.9682],
        [0.9424, 0.9509, 0.9487,  ..., 0.9589, 0.9561, 0.9650],
        ...,
        [0.9399, 0.9487, 0.9323,  ..., 0.9433, 0.9509, 0.9610],
        [0.9464, 0.9543, 0.9766,  ..., 0.9853, 0.9645, 0.9713],
        [0.9507, 0.9579, 1.0099,  ..., 1.0164, 0.9736, 0.9781]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6734],
         [11.6317],
         [26.1929],
         ...,
         [26.1052],
         [11.8951],
         [12.4137]],
        [[10.8192],
         [10.8142],
         [24.2430],
         ...,
         [24.1037],
         [10.8862],
         [10.8823]],
        [[10.7179],
         [10.7171],
         [24.0120],
         ...,
         [23.8669],
         [10.7674],
         [10.7063]],
        ...,
        [[10.5935],
         [10.5978],
         [23.7282],
         ...,
         [23.5762],
         [10.6218],
         [10.4919]],
        [[10.9136],
         [10.9047],
         [24.4583],
         ...,
         [24.3245],
         [10.9971],
         [11.0472]],
        [[11.1247],
         [11.1069],
         [24.9402],
         ...,
         [24.8188],
         [11.2456],
         [11.4202]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9963, 0.9958, 1.1882,  ..., 1.1870, 0.9992, 1.0061],
        [0.9850, 0.9850, 1.1624,  ..., 1.1606, 0.9859, 0.9859],
        [0.9837, 0.9837, 1.1594,  ..., 1.1575, 0.9843, 0.9835],
        ...,
        [0.9820, 0.9821, 1.1556,  ..., 1.1536, 0.9824, 0.9807],
        [0.9863, 0.9862, 1.1653,  ..., 1.1635, 0.9874, 0.9880],
        [0.9891, 0.9888, 1.1716,  ..., 1.1700, 0.9907, 0.9930]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8367],
         [12.8663],
         [10.5127],
         ...,
         [10.1319],
         [12.9115],
         [12.8760]],
        [[ 7.9433],
         [ 7.9026],
         [ 8.6850],
         ...,
         [ 8.8692],
         [ 7.8433],
         [ 7.8895]],
        [[ 7.4850],
         [ 7.4399],
         [ 8.4821],
         ...,
         [ 8.7242],
         [ 7.3740],
         [ 7.4254]],
        ...,
        [[ 6.9529],
         [ 6.9030],
         [ 8.2368],
         ...,
         [ 8.5476],
         [ 6.8304],
         [ 6.8870]],
        [[ 8.3912],
         [ 8.3553],
         [ 8.8766],
         ...,
         [ 9.0051],
         [ 8.3031],
         [ 8.3438]],
        [[ 9.4709],
         [ 9.4481],
         [ 9.3146],
         ...,
         [ 9.3126],
         [ 9.4153],
         [ 9.4409]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9839, 0.9846, 0.9341,  ..., 0.9259, 0.9855, 0.9848],
        [0.8790, 0.8781, 0.8949,  ..., 0.8988, 0.8768, 0.8778],
        [0.8692, 0.8682, 0.8905,  ..., 0.8957, 0.8668, 0.8679],
        ...,
        [0.8577, 0.8567, 0.8853,  ..., 0.8919, 0.8551, 0.8563],
        [0.8886, 0.8878, 0.8990,  ..., 0.9018, 0.8867, 0.8876],
        [0.9117, 0.9113, 0.9084,  ..., 0.9083, 0.9105, 0.9111]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9155],
         [14.8754],
         [24.7666],
         ...,
         [24.9861],
         [15.2101],
         [15.5939]],
        [[13.9810],
         [13.9681],
         [15.0358],
         ...,
         [15.0845],
         [14.0122],
         [14.5326]],
        [[13.8695],
         [13.8597],
         [14.1351],
         ...,
         [14.1710],
         [13.8706],
         [14.4063]],
        ...,
        [[13.7323],
         [13.7264],
         [13.0917],
         ...,
         [13.1137],
         [13.6969],
         [14.2512]],
        [[14.0848],
         [14.0689],
         [15.9184],
         ...,
         [15.9801],
         [14.1442],
         [14.6501]],
        [[14.3165],
         [14.2940],
         [18.0534],
         ...,
         [18.1489],
         [14.4398],
         [14.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9732, 0.9725, 1.1334,  ..., 1.1370, 0.9780, 0.9842],
        [0.9580, 0.9578, 0.9751,  ..., 0.9759, 0.9585, 0.9670],
        [0.9562, 0.9560, 0.9605,  ..., 0.9611, 0.9562, 0.9649],
        ...,
        [0.9539, 0.9538, 0.9435,  ..., 0.9439, 0.9534, 0.9624],
        [0.9597, 0.9594, 0.9895,  ..., 0.9905, 0.9606, 0.9689],
        [0.9634, 0.9631, 1.0242,  ..., 1.0258, 0.9654, 0.9731]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7272],
         [11.5894],
         [26.0492],
         ...,
         [26.2931],
         [13.4001],
         [13.6328]],
        [[10.8244],
         [10.8088],
         [24.0109],
         ...,
         [24.3937],
         [11.2756],
         [10.9163]],
        [[10.7176],
         [10.7160],
         [23.7699],
         ...,
         [24.1684],
         [11.0373],
         [10.6201]],
        ...,
        [[10.5865],
         [10.6018],
         [23.4742],
         ...,
         [23.8915],
         [10.7484],
         [10.2637]],
        [[10.9240],
         [10.8953],
         [24.2355],
         ...,
         [24.6037],
         [11.5003],
         [11.1971]],
        [[11.1469],
         [11.0886],
         [24.7387],
         ...,
         [25.0733],
         [12.0120],
         [11.8425]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9883, 0.9865, 1.1776,  ..., 1.1808, 1.0104, 1.0135],
        [0.9764, 0.9761, 1.1506,  ..., 1.1557, 0.9823, 0.9776],
        [0.9749, 0.9749, 1.1474,  ..., 1.1527, 0.9792, 0.9737],
        ...,
        [0.9732, 0.9734, 1.1435,  ..., 1.1490, 0.9754, 0.9689],
        [0.9777, 0.9773, 1.1536,  ..., 1.1585, 0.9853, 0.9813],
        [0.9806, 0.9798, 1.1602,  ..., 1.1647, 0.9920, 0.9898]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7957],
         [12.8845],
         [10.8522],
         ...,
         [10.2732],
         [12.6233],
         [13.0071]],
        [[ 8.0018],
         [ 7.8783],
         [ 8.3920],
         ...,
         [ 8.8081],
         [ 8.2717],
         [ 7.7309]],
        [[ 7.5501],
         [ 7.4129],
         [ 8.1292],
         ...,
         [ 8.6420],
         [ 7.8500],
         [ 7.2487]],
        ...,
        [[ 7.0247],
         [ 6.8732],
         [ 7.8143],
         ...,
         [ 8.4401],
         [ 7.3563],
         [ 6.6918]],
        [[ 8.4429],
         [ 8.3339],
         [ 8.6422],
         ...,
         [ 8.9644],
         [ 8.6811],
         [ 8.2045]],
        [[ 9.5040],
         [ 9.4346],
         [ 9.2211],
         ...,
         [ 9.3191],
         [ 9.6577],
         [ 9.3548]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9795, 0.9814, 0.9378,  ..., 0.9254, 0.9758, 0.9840],
        [0.8767, 0.8740, 0.8851,  ..., 0.8940, 0.8825, 0.8709],
        [0.8670, 0.8641, 0.8794,  ..., 0.8904, 0.8734, 0.8605],
        ...,
        [0.8557, 0.8525, 0.8727,  ..., 0.8861, 0.8628, 0.8486],
        [0.8861, 0.8838, 0.8904,  ..., 0.8973, 0.8913, 0.8810],
        [0.9089, 0.9074, 0.9028,  ..., 0.9049, 0.9122, 0.9057]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])type=torch.float64,
BEFORE NORMALIZATION:ckward0>)
tensor([[[15.0377],
         [15.2983],
         [24.4444],:
         ...,  torch.Size([1000, 10])
         [24.3780],9799, 0.9397,  ..., 0.9259, 0.9726, 0.9835],
         [16.9222],8724, 0.8823,  ..., 0.8925, 0.8842, 0.8682],
         [16.8839]],624, 0.8762,  ..., 0.8887, 0.8755, 0.8577],
        ...,
        [[13.9895],8508, 0.8690,  ..., 0.8842, 0.8653, 0.8457],
         [14.4039],8821, 0.8881,  ..., 0.8961, 0.8926, 0.8785],
         [15.1046],9058, 0.9015,  ..., 0.9041, 0.9126, 0.9035]],
         ...,='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
         [15.5894],
         [14.7967],
         [15.2890]],
COST SHAPE IS  torch.Size([1000, 10, 1])
        [[13.8649],N:
         [14.2969],
         [14.2308],
         ...,3636],
         [14.7501],
         [14.5529],
         [15.1024]],
         [17.3008]],
        ...,
        [[13.9932],
        [[13.7119],
         [14.1652],
         [13.2162],
         ...,7350],
         [13.7709],
         [14.2559],,
         [14.8739]],
        [[13.8648],
        [[14.1055],
         [14.5035],
         [15.9589],
         ...,9182],
         [16.4067],
         [15.0254],,
         [15.4634]],
        ...,
        [[14.3649],
         [14.7255],
         [18.0190],
         ...,2404],
         [18.3649],
         [15.5427],
         [15.8552]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
        [[14.1129],
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9636, 0.9678, 1.1166,  ..., 1.1155, 0.9942, 0.9936],
        [0.9465, 0.9533, 0.9647,  ..., 0.9726, 0.9597, 0.9677],
        [0.9445, 0.9515, 0.9505,  ..., 0.9589, 0.9557, 0.9646],
        ...,.7168]],
        [0.9420, 0.9494, 0.9340,  ..., 0.9430, 0.9509, 0.9609],
        [0.9484, 0.9549, 0.9786,  ..., 0.9859, 0.9634, 0.9705],
        [0.9526, 0.9585, 1.0121,  ..., 1.0177, 0.9718, 0.9769]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
         ...,
         [18.4250],
         [15.8840],
COST SHAPE IS  torch.Size([1000, 10, 1])type=torch.float64,
BEFORE NORMALIZATION:ckward0>)
tensor([[[11.7361],
         [11.5833],
         [26.0284],:
         ...,  torch.Size([1000, 10])
         [26.3247],9671, 1.1123,  ..., 1.1097, 0.9997, 0.9974],
         [13.6745],9523, 0.9619,  ..., 0.9719, 0.9608, 0.9685],
         [13.8394]],505, 0.9477,  ..., 0.9586, 0.9563, 0.9651],
        ...,
        [[10.8252],9483, 0.9314,  ..., 0.9431, 0.9509, 0.9610],
         [10.8079],9539, 0.9756,  ..., 0.9848, 0.9649, 0.9716],
         [23.9746],9576, 1.0089,  ..., 1.0157, 0.9744, 0.9787]],
         ...,='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7302],
         [11.5873],
         [26.0421],
         ...,
         [26.3037],
         [13.4926],
         [13.7027]],
        [[10.8247],
         [10.8085],
         [23.9985],
         ...,
         [24.4093],
         [11.2984],
         [10.9187]],
        [[10.7175],
         [10.7158],
         [23.7570],
         ...,
         [24.1845],
         [11.0528],
         [10.6160]],
        ...,
        [[10.5861],
         [10.6019],
         [23.4606],
         ...,
         [23.9084],
         [10.7555],
         [10.2519]],
        [[10.9245],
         [10.8948],
         [24.2237],
         ...,
         [24.6188],
         [11.5299],
         [11.2058]],
        [[11.1481],
         [11.0877],
         [24.7281],
         ...,
         [25.0872],
         [12.0577],
         [11.8664]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9879, 0.9860, 1.1770,  ..., 1.1805, 1.0112, 1.0139],
        [0.9759, 0.9757, 1.1500,  ..., 1.1554, 0.9822, 0.9772],
        [0.9745, 0.9745, 1.1468,  ..., 1.1525, 0.9789, 0.9731],
        ...,
        [0.9728, 0.9730, 1.1429,  ..., 1.1488, 0.9750, 0.9683],
        [0.9772, 0.9768, 1.1530,  ..., 1.1582, 0.9852, 0.9809],
        [0.9802, 0.9794, 1.1596,  ..., 1.1644, 0.9922, 0.9897]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7935],
         [12.8855],
         [10.8802],
         ...,
         [10.2899],
         [12.6096],
         [13.0141]],
        [[ 8.0051],
         [ 7.8770],
         [ 8.3804],
         ...,
         [ 8.8085],
         [ 8.2987],
         [ 7.7235]],
        [[ 7.5537],
         [ 7.4114],
         [ 8.1140],
         ...,
         [ 8.6406],
         [ 7.8799],
         [ 7.2404]],
        ...,
        [[ 7.0287],
         [ 6.8717],
         [ 7.7950],
         ...,
         [ 8.4366],
         [ 7.3893],
         [ 6.6826]],
        [[ 8.4457],
         [ 8.3328],
         [ 8.6342],
         ...,
         [ 8.9663],
         [ 8.7052],
         [ 8.1980]],
        [[ 9.5058],
         [ 9.4339],
         [ 9.2218],
         ...,
         [ 9.3248],
         [ 9.6738],
         [ 9.3510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 0.9812, 0.9382,  ..., 0.9255, 0.9753, 0.9839],
        [0.8765, 0.8738, 0.8846,  ..., 0.8938, 0.8828, 0.8705],
        [0.8668, 0.8638, 0.8789,  ..., 0.8902, 0.8738, 0.8601],
        ...,
        [0.8556, 0.8522, 0.8720,  ..., 0.8858, 0.8633, 0.8482],
        [0.8860, 0.8836, 0.8900,  ..., 0.8971, 0.8915, 0.8807],
        [0.9087, 0.9072, 0.9026,  ..., 0.9048, 0.9123, 0.9054]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0449],
         [15.3250],
         [24.4271],
         ...,
         [24.3433],
         [17.0217],
         [16.9586]],
        [[13.9899],
         [14.4276],
         [15.1084],
         ...,
         [15.6187],
         [14.8433],
         [15.3322]],
        [[13.8646],
         [14.3203],
         [14.2361],
         ...,
         [14.7838],
         [14.5938],
         [15.1420]],
        ...,
        [[13.7106],
         [14.1881],
         [13.2230],
         ...,
         [13.8093],
         [14.2899],
         [14.9093]],
        [[14.1066],
         [14.5275],
         [15.9612],
         ...,
         [16.4313],
         [15.0774],
         [15.5099]],
        [[14.3676],
         [14.7502],
         [18.0171],
         ...,
         [18.3771],
         [15.6072],
         [15.9093]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9631, 0.9677, 1.1157,  ..., 1.1144, 0.9953, 0.9943],
        [0.9460, 0.9531, 0.9642,  ..., 0.9725, 0.9598, 0.9678],
        [0.9439, 0.9513, 0.9500,  ..., 0.9589, 0.9558, 0.9647],
        ...,
        [0.9414, 0.9492, 0.9335,  ..., 0.9430, 0.9508, 0.9609],
        [0.9479, 0.9547, 0.9780,  ..., 0.9857, 0.9637, 0.9707],
        [0.9521, 0.9583, 1.0115,  ..., 1.0173, 0.9723, 0.9772]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7349],
         [11.5841],
         [26.0311],
         ...,
         [26.3205],
         [13.6380],
         [13.8121]],
        [[10.8251],
         [10.8080],
         [23.9793],
         ...,
         [24.4336],
         [11.3342],
         [10.9224]],
        [[10.7175],
         [10.7157],
         [23.7369],
         ...,
         [24.2097],
         [11.0776],
         [10.6096]],
        ...,
        [[10.5854],
         [10.6021],
         [23.4393],
         ...,
         [23.9345],
         [10.7671],
         [10.2338]],
        [[10.9254],
         [10.8940],
         [24.2054],
         ...,
         [24.6422],
         [11.5765],
         [11.2194]],
        [[11.1500],
         [11.0862],
         [24.7118],
         ...,
         [25.1089],
         [12.1295],
         [11.9036]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9872, 0.9852, 1.1762,  ..., 1.1800, 1.0124, 1.0147],
        [0.9752, 0.9750, 1.1491,  ..., 1.1551, 0.9819, 0.9765],
        [0.9738, 0.9738, 1.1459,  ..., 1.1521, 0.9786, 0.9724],
        ...,
        [0.9721, 0.9723, 1.1419,  ..., 1.1485, 0.9745, 0.9674],
        [0.9765, 0.9761, 1.1520,  ..., 1.1578, 0.9851, 0.9804],
        [0.9795, 0.9787, 1.1587,  ..., 1.1640, 0.9925, 0.9895]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7901],
         [12.8870],
         [10.9257],
         ...,
         [10.3175],
         [12.5886],
         [13.0249]],
        [[ 8.0101],
         [ 7.8750],
         [ 8.3633],
         ...,
         [ 8.8097],
         [ 8.3417],
         [ 7.7121]],
        [[ 7.5593],
         [ 7.4092],
         [ 8.0911],
         ...,
         [ 8.6391],
         [ 7.9274],
         [ 7.2277]],
        ...,
        [[ 7.0348],
         [ 6.8692],
         [ 7.7656],
         ...,
         [ 8.4319],
         [ 7.4417],
         [ 6.6685]],
        [[ 8.4502],
         [ 8.3310],
         [ 8.6227],
         ...,
         [ 8.9702],
         [ 8.7434],
         [ 8.1881]],
        [[ 9.5087],
         [ 9.4328],
         [ 9.2239],
         ...,
         [ 9.3348],
         [ 9.6996],
         [ 9.3451]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9788, 0.9808, 0.9388,  ..., 0.9257, 0.9745, 0.9838],
        [0.8763, 0.8734, 0.8838,  ..., 0.8934, 0.8834, 0.8699],
        [0.8666, 0.8634, 0.8780,  ..., 0.8898, 0.8745, 0.8595],
        ...,
        [0.8554, 0.8518, 0.8710,  ..., 0.8853, 0.8641, 0.8475],
        [0.8857, 0.8832, 0.8894,  ..., 0.8969, 0.8920, 0.8801],
        [0.9084, 0.9068, 0.9023,  ..., 0.9047, 0.9125, 0.9049]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0560],
         [15.3672],
         [24.4002],
         ...,
         [24.2890],
         [17.1772],
         [17.0756]],
        [[13.9905],
         [14.4646],
         [15.1143],
         ...,
         [15.6645],
         [14.9167],
         [15.4000]],
        [[13.8640],
         [14.3566],
         [14.2443],
         ...,
         [14.8366],
         [14.6584],
         [15.2043]],
        ...,
        [[13.7085],
         [14.2237],
         [13.2337],
         ...,
         [13.8697],
         [14.3440],
         [14.9650]],
        [[14.1084],
         [14.5650],
         [15.9647],
         ...,
         [16.4698],
         [15.1592],
         [15.5828]],
        [[14.3720],
         [14.7891],
         [18.0143],
         ...,
         [18.3962],
         [15.7083],
         [15.9940]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9675, 1.1144,  ..., 1.1126, 0.9969, 0.9953],
        [0.9451, 0.9528, 0.9634,  ..., 0.9723, 0.9602, 0.9680],
        [0.9431, 0.9511, 0.9492,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9405, 0.9489, 0.9328,  ..., 0.9431, 0.9509, 0.9610],
        [0.9470, 0.9545, 0.9772,  ..., 0.9854, 0.9641, 0.9710],
        [0.9513, 0.9581, 1.0106,  ..., 1.0168, 0.9730, 0.9777]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7359],
         [11.5835],
         [26.0289],
         ...,
         [26.3238],
         [13.6670],
         [13.8338]],
        [[10.8252],
         [10.8079],
         [23.9756],
         ...,
         [24.4384],
         [11.3414],
         [10.9232]],
        [[10.7174],
         [10.7156],
         [23.7329],
         ...,
         [24.2146],
         [11.0825],
         [10.6084]],
        ...,
        [[10.5853],
         [10.6021],
         [23.4351],
         ...,
         [23.9397],
         [10.7694],
         [10.2302]],
        [[10.9256],
         [10.8939],
         [24.2018],
         ...,
         [24.6469],
         [11.5857],
         [11.2221]],
        [[11.1504],
         [11.0859],
         [24.7086],
         ...,
         [25.1132],
         [12.1438],
         [11.9109]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0126, 1.0148],
        [0.9751, 0.9749, 1.1489,  ..., 1.1550, 0.9819, 0.9764],
        [0.9737, 0.9736, 1.1457,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1519,  ..., 1.1577, 0.9851, 0.9803],
        [0.9794, 0.9785, 1.1586,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7894],
         [12.8873],
         [10.9349],
         ...,
         [10.3232],
         [12.5845],
         [13.0270]],
        [[ 8.0111],
         [ 7.8746],
         [ 8.3600],
         ...,
         [ 8.8101],
         [ 8.3503],
         [ 7.7099]],
        [[ 7.5604],
         [ 7.4088],
         [ 8.0867],
         ...,
         [ 8.6389],
         [ 7.9369],
         [ 7.2252]],
        ...,
        [[ 7.0361],
         [ 6.8688],
         [ 7.7599],
         ...,
         [ 8.4311],
         [ 7.4521],
         [ 6.6658]],
        [[ 8.4511],
         [ 8.3307],
         [ 8.6205],
         ...,
         [ 8.9711],
         [ 8.7511],
         [ 8.1862]],
        [[ 9.5092],
         [ 9.4326],
         [ 9.2245],
         ...,
         [ 9.3370],
         [ 9.7048],
         [ 9.3440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9389,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8934, 0.8835, 0.8698],
        [0.8666, 0.8633, 0.8778,  ..., 0.8897, 0.8746, 0.8594],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8642, 0.8474],
        [0.8857, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8800],
        [0.9083, 0.9067, 0.9022,  ..., 0.9047, 0.9125, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0583],
         [15.3757],
         [24.3949],
         ...,
         [24.2781],
         [17.2080],
         [17.0988]],
        [[13.9906],
         [14.4719],
         [15.1155],
         ...,
         [15.6736],
         [14.9313],
         [15.4135]],
        [[13.8639],
         [14.3638],
         [14.2459],
         ...,
         [14.8472],
         [14.6713],
         [15.2167]],
        ...,
        [[13.7081],
         [14.2307],
         [13.2358],
         ...,
         [13.8817],
         [14.3549],
         [14.9760]],
        [[14.1087],
         [14.5724],
         [15.9654],
         ...,
         [16.4774],
         [15.1755],
         [15.5973]],
        [[14.3728],
         [14.7968],
         [18.0138],
         ...,
         [18.4000],
         [15.7284],
         [16.0109]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1142,  ..., 1.1123, 0.9973, 0.9955],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9602, 0.9681],
        [0.9429, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9327,  ..., 0.9432, 0.9509, 0.9610],
        [0.9469, 0.9544, 0.9771,  ..., 0.9854, 0.9642, 0.9711],
        [0.9512, 0.9581, 1.0104,  ..., 1.0167, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6661],
         [11.6371],
         [26.1573],
         ...,
         [26.0805],
         [11.8164],
         [12.3999]],
        [[10.8184],
         [10.8149],
         [24.1874],
         ...,
         [24.0631],
         [10.8636],
         [10.8821]],
        [[10.7178],
         [10.7173],
         [23.9541],
         ...,
         [23.8245],
         [10.7511],
         [10.7077]],
        ...,
        [[10.5943],
         [10.5973],
         [23.6676],
         ...,
         [23.5316],
         [10.6132],
         [10.4950]],
        [[10.9121],
         [10.9059],
         [24.4048],
         ...,
         [24.2855],
         [10.9685],
         [11.0457]],
        [[11.1217],
         [11.1093],
         [24.8915],
         ...,
         [24.7836],
         [11.2035],
         [11.4155]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9963, 0.9959, 1.1878,  ..., 1.1868, 0.9983, 1.0060],
        [0.9851, 0.9851, 1.1618,  ..., 1.1602, 0.9857, 0.9860],
        [0.9838, 0.9838, 1.1587,  ..., 1.1570, 0.9842, 0.9837],
        ...,
        [0.9822, 0.9822, 1.1549,  ..., 1.1531, 0.9824, 0.9809],
        [0.9864, 0.9863, 1.1647,  ..., 1.1631, 0.9871, 0.9881],
        [0.9891, 0.9890, 1.1711,  ..., 1.1697, 0.9902, 0.9930]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8348],
         [12.8093],
         [10.4736],
         ...,
         [10.1365],
         [12.9156],
         [12.8695]],
        [[ 7.9459],
         [ 7.9822],
         [ 8.7114],
         ...,
         [ 8.8828],
         [ 7.8381],
         [ 7.8982]],
        [[ 7.4880],
         [ 7.5282],
         [ 8.5150],
         ...,
         [ 8.7388],
         [ 7.3682],
         [ 7.4350]],
        ...,
        [[ 6.9561],
         [ 7.0006],
         [ 8.2773],
         ...,
         [ 8.5633],
         [ 6.8240],
         [ 6.8976]],
        [[ 8.3935],
         [ 8.4255],
         [ 8.8968],
         ...,
         [ 9.0178],
         [ 8.2985],
         [ 8.3514]],
        [[ 9.4724],
         [ 9.4929],
         [ 9.3198],
         ...,
         [ 9.3231],
         [ 9.4124],
         [ 9.4457]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9837, 0.9832, 0.9331,  ..., 0.9259, 0.9854, 0.9845],
        [0.8789, 0.8797, 0.8953,  ..., 0.8990, 0.8766, 0.8779],
        [0.8691, 0.8699, 0.8911,  ..., 0.8959, 0.8665, 0.8679],
        ...,
        [0.8577, 0.8586, 0.8860,  ..., 0.8921, 0.8548, 0.8564],
        [0.8885, 0.8892, 0.8993,  ..., 0.9019, 0.8864, 0.8876],
        [0.9116, 0.9120, 0.9083,  ..., 0.9084, 0.9103, 0.9110]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9077],
         [14.8839],
         [24.8276],
         ...,
         [25.0649],
         [15.0869],
         [15.5915]],
        [[13.9900],
         [14.0012],
         [15.0028],
         ...,
         [15.0137],
         [13.9684],
         [14.5310]],
        [[13.8804],
         [13.8957],
         [14.0959],
         ...,
         [14.0908],
         [13.8359],
         [14.4049]],
        ...,
        [[13.7456],
         [13.7658],
         [13.0461],
         ...,
         [13.0238],
         [13.6731],
         [14.2498]],
        [[14.0920],
         [14.0994],
         [15.8919],
         ...,
         [15.9194],
         [14.0919],
         [14.6485]],
        [[14.3196],
         [14.3185],
         [18.0445],
         ...,
         [18.1158],
         [14.3683],
         [14.9110]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 0.9732, 1.1350,  ..., 1.1388, 0.9765, 0.9847],
        [0.9587, 0.9589, 0.9752,  ..., 0.9753, 0.9583, 0.9675],
        [0.9569, 0.9572, 0.9604,  ..., 0.9603, 0.9562, 0.9654],
        ...,
        [0.9547, 0.9550, 0.9433,  ..., 0.9430, 0.9535, 0.9629],
        [0.9603, 0.9605, 0.9896,  ..., 0.9901, 0.9603, 0.9694],
        [0.9641, 0.9640, 1.0246,  ..., 1.0258, 0.9648, 0.9737]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7244],
         [11.5912],
         [26.0478],
         ...,
         [26.2830],
         [13.3335],
         [13.5937]],
        [[10.8242],
         [10.8091],
         [24.0085],
         ...,
         [24.3790],
         [11.2598],
         [10.9151]],
        [[10.7176],
         [10.7161],
         [23.7675],
         ...,
         [24.1531],
         [11.0267],
         [10.6226]],
        ...,
        [[10.5869],
         [10.6017],
         [23.4716],
         ...,
         [23.8756],
         [10.7440],
         [10.2703]],
        [[10.9234],
         [10.8958],
         [24.2333],
         ...,
         [24.5894],
         [11.4795],
         [11.1923]],
        [[11.1457],
         [11.0894],
         [24.7367],
         ...,
         [25.0602],
         [11.9794],
         [11.8292]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9885, 0.9867, 1.1778,  ..., 1.1809, 1.0098, 1.0132],
        [0.9766, 0.9764, 1.1508,  ..., 1.1557, 0.9824, 0.9778],
        [0.9752, 0.9752, 1.1477,  ..., 1.1528, 0.9793, 0.9739],
        ...,
        [0.9735, 0.9737, 1.1437,  ..., 1.1491, 0.9755, 0.9693],
        [0.9779, 0.9776, 1.1538,  ..., 1.1585, 0.9853, 0.9815],
        [0.9809, 0.9801, 1.1605,  ..., 1.1647, 0.9919, 0.9899]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7966],
         [12.8750],
         [10.8304],
         ...,
         [10.2600],
         [12.6312],
         [13.0024]],
        [[ 8.0006],
         [ 7.8909],
         [ 8.4020],
         ...,
         [ 8.8082],
         [ 8.2565],
         [ 7.7359]],
        [[ 7.5487],
         [ 7.4269],
         [ 8.1421],
         ...,
         [ 8.6435],
         [ 7.8332],
         [ 7.2543]],
        ...,
        [[ 7.0232],
         [ 6.8887],
         [ 7.8306],
         ...,
         [ 8.4432],
         [ 7.3378],
         [ 6.6980]],
        [[ 8.4418],
         [ 8.3450],
         [ 8.6494],
         ...,
         [ 8.9632],
         [ 8.6676],
         [ 8.2089]],
        [[ 9.5033],
         [ 9.4416],
         [ 9.2213],
         ...,
         [ 9.3147],
         [ 9.6486],
         [ 9.3575]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9797, 0.9813, 0.9375,  ..., 0.9253, 0.9761, 0.9841],
        [0.8768, 0.8745, 0.8854,  ..., 0.8941, 0.8823, 0.8711],
        [0.8671, 0.8645, 0.8799,  ..., 0.8906, 0.8732, 0.8608],
        ...,
        [0.8559, 0.8530, 0.8732,  ..., 0.8863, 0.8626, 0.8489],
        [0.8863, 0.8842, 0.8907,  ..., 0.8975, 0.8911, 0.8813],
        [0.9090, 0.9077, 0.9030,  ..., 0.9050, 0.9122, 0.9059]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0323],
         [15.2869],
         [24.4633],
         ...,
         [24.4107],
         [16.8449],
         [16.8445]],
        [[13.9908],
         [14.3971],
         [15.0971],
         ...,
         [15.5609],
         [14.7639],
         [15.2662]],
        [[13.8670],
         [14.2906],
         [14.2215],
         ...,
         [14.7173],
         [14.5248],
         [15.0814]],
        ...,
        [[13.7148],
         [14.1595],
         [13.2050],
         ...,
         [13.7336],
         [14.2335],
         [14.8552]],
        [[14.1061],
         [14.4961],
         [15.9533],
         ...,
         [16.3826],
         [14.9881],
         [15.4388]],
        [[14.3638],
         [14.7170],
         [18.0184],
         ...,
         [18.3526],
         [15.4949],
         [15.8267]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9638, 0.9680, 1.1172,  ..., 1.1164, 0.9933, 0.9933],
        [0.9469, 0.9535, 0.9649,  ..., 0.9724, 0.9595, 0.9676],
        [0.9449, 0.9518, 0.9506,  ..., 0.9587, 0.9556, 0.9646],
        ...,
        [0.9424, 0.9496, 0.9341,  ..., 0.9427, 0.9508, 0.9610],
        [0.9488, 0.9551, 0.9788,  ..., 0.9858, 0.9631, 0.9704],
        [0.9530, 0.9587, 1.0124,  ..., 1.0178, 0.9714, 0.9768]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7338],
         [11.5848],
         [26.0321],
         ...,
         [26.3165],
         [13.6074],
         [13.7913]],
        [[10.8250],
         [10.8082],
         [23.9812],
         ...,
         [24.4279],
         [11.3267],
         [10.9217]],
        [[10.7175],
         [10.7157],
         [23.7388],
         ...,
         [24.2037],
         [11.0724],
         [10.6108]],
        ...,
        [[10.5855],
         [10.6021],
         [23.4414],
         ...,
         [23.9283],
         [10.7647],
         [10.2372]],
        [[10.9252],
         [10.8942],
         [24.2071],
         ...,
         [24.6367],
         [11.5667],
         [11.2168]],
        [[11.1496],
         [11.0865],
         [24.7133],
         ...,
         [25.1037],
         [12.1144],
         [11.8965]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9874, 0.9854, 1.1763,  ..., 1.1801, 1.0121, 1.0145],
        [0.9753, 0.9751, 1.1492,  ..., 1.1551, 0.9820, 0.9766],
        [0.9739, 0.9739, 1.1460,  ..., 1.1522, 0.9786, 0.9725],
        ...,
        [0.9722, 0.9724, 1.1421,  ..., 1.1485, 0.9746, 0.9676],
        [0.9767, 0.9763, 1.1522,  ..., 1.1579, 0.9852, 0.9805],
        [0.9796, 0.9788, 1.1589,  ..., 1.1640, 0.9924, 0.9895]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7907],
         [12.8849],
         [10.9156],
         ...,
         [10.3112],
         [12.5926],
         [13.0227]],
        [[ 8.0093],
         [ 7.8777],
         [ 8.3671],
         ...,
         [ 8.8094],
         [ 8.3335],
         [ 7.7144]],
        [[ 7.5583],
         [ 7.4122],
         [ 8.0962],
         ...,
         [ 8.6394],
         [ 7.9183],
         [ 7.2302]],
        ...,
        [[ 7.0338],
         [ 6.8725],
         [ 7.7721],
         ...,
         [ 8.4329],
         [ 7.4316],
         [ 6.6713]],
        [[ 8.4494],
         [ 8.3334],
         [ 8.6252],
         ...,
         [ 8.9693],
         [ 8.7361],
         [ 8.1901]],
        [[ 9.5082],
         [ 9.4343],
         [ 9.2234],
         ...,
         [ 9.3325],
         [ 9.6946],
         [ 9.3463]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9789, 0.9809, 0.9386,  ..., 0.9257, 0.9746, 0.9838],
        [0.8763, 0.8735, 0.8840,  ..., 0.8935, 0.8833, 0.8700],
        [0.8667, 0.8635, 0.8782,  ..., 0.8898, 0.8744, 0.8596],
        ...,
        [0.8554, 0.8519, 0.8712,  ..., 0.8854, 0.8639, 0.8476],
        [0.8858, 0.8833, 0.8895,  ..., 0.8969, 0.8919, 0.8802],
        [0.9085, 0.9069, 0.9024,  ..., 0.9047, 0.9125, 0.9050]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0536],
         [15.3599],
         [24.4071],
         ...,
         [24.3019],
         [17.1435],
         [17.0538]],
        [[13.9907],
         [14.4588],
         [15.1121],
         ...,
         [15.6534],
         [14.9013],
         [15.3874]],
        [[13.8645],
         [14.3510],
         [14.2415],
         ...,
         [14.8238],
         [14.6449],
         [15.1927]],
        ...,
        [[13.7093],
         [14.2184],
         [13.2302],
         ...,
         [13.8551],
         [14.3329],
         [14.9546]],
        [[14.1083],
         [14.5591],
         [15.9632],
         ...,
         [16.4604],
         [15.1419],
         [15.5693]],
        [[14.3712],
         [14.7827],
         [18.0145],
         ...,
         [18.3915],
         [15.6868],
         [15.9783]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9626, 0.9675, 1.1147,  ..., 1.1130, 0.9966, 0.9951],
        [0.9453, 0.9529, 0.9635,  ..., 0.9723, 0.9601, 0.9680],
        [0.9432, 0.9511, 0.9494,  ..., 0.9588, 0.9559, 0.9648],
        ...,
        [0.9407, 0.9490, 0.9329,  ..., 0.9431, 0.9508, 0.9610],
        [0.9472, 0.9545, 0.9774,  ..., 0.9854, 0.9640, 0.9709],
        [0.9515, 0.9582, 1.0107,  ..., 1.0169, 0.9729, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7356],
         [11.5836],
         [26.0292],
         ...,
         [26.3230],
         [13.6606],
         [13.8295]],
        [[10.8251],
         [10.8080],
         [23.9759],
         ...,
         [24.4372],
         [11.3398],
         [10.9230]],
        [[10.7175],
         [10.7156],
         [23.7333],
         ...,
         [24.2134],
         [11.0814],
         [10.6086]],
        ...,
        [[10.5853],
         [10.6021],
         [23.4356],
         ...,
         [23.9384],
         [10.7689],
         [10.2309]],
        [[10.9255],
         [10.8939],
         [24.2021],
         ...,
         [24.6457],
         [11.5837],
         [11.2215]],
        [[11.1503],
         [11.0860],
         [24.7089],
         ...,
         [25.1121],
         [12.1406],
         [11.9095]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0126, 1.0148],
        [0.9751, 0.9749, 1.1489,  ..., 1.1550, 0.9819, 0.9764],
        [0.9737, 0.9737, 1.1457,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9722, 1.1418,  ..., 1.1484, 0.9744, 0.9673],
        [0.9764, 0.9760, 1.1519,  ..., 1.1578, 0.9851, 0.9803],
        [0.9794, 0.9786, 1.1586,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7895],
         [12.8868],
         [10.9328],
         ...,
         [10.3218],
         [12.5853],
         [13.0265]],
        [[ 8.0109],
         [ 7.8752],
         [ 8.3608],
         ...,
         [ 8.8100],
         [ 8.3486],
         [ 7.7104]],
        [[ 7.5602],
         [ 7.4094],
         [ 8.0877],
         ...,
         [ 8.6390],
         [ 7.9350],
         [ 7.2257]],
        ...,
        [[ 7.0358],
         [ 6.8694],
         [ 7.7612],
         ...,
         [ 8.4313],
         [ 7.4500],
         [ 6.6663]],
        [[ 8.4509],
         [ 8.3312],
         [ 8.6210],
         ...,
         [ 8.9709],
         [ 8.7495],
         [ 8.1866]],
        [[ 9.5091],
         [ 9.4329],
         [ 9.2243],
         ...,
         [ 9.3365],
         [ 9.7037],
         [ 9.3442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9389,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8934, 0.8835, 0.8698],
        [0.8666, 0.8633, 0.8779,  ..., 0.8897, 0.8746, 0.8594],
        ...,
        [0.8553, 0.8518, 0.8709,  ..., 0.8852, 0.8642, 0.8474],
        [0.8857, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8800],
        [0.9084, 0.9067, 0.9023,  ..., 0.9047, 0.9125, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0578],
         [15.3741],
         [24.3963],
         ...,
         [24.2808],
         [17.2010],
         [17.0943]],
        [[13.9907],
         [14.4707],
         [15.1150],
         ...,
         [15.6713],
         [14.9281],
         [15.4108]],
        [[13.8640],
         [14.3626],
         [14.2453],
         ...,
         [14.8445],
         [14.6685],
         [15.2143]],
        ...,
        [[13.7083],
         [14.2296],
         [13.2350],
         ...,
         [13.8787],
         [14.3526],
         [14.9739]],
        [[14.1087],
         [14.5712],
         [15.9651],
         ...,
         [16.4755],
         [15.1719],
         [15.5945]],
        [[14.3727],
         [14.7955],
         [18.0138],
         ...,
         [18.3990],
         [15.7239],
         [16.0076]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1142,  ..., 1.1123, 0.9972, 0.9955],
        [0.9450, 0.9528, 0.9633,  ..., 0.9723, 0.9602, 0.9681],
        [0.9429, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9404, 0.9489, 0.9327,  ..., 0.9432, 0.9509, 0.9610],
        [0.9469, 0.9544, 0.9771,  ..., 0.9854, 0.9642, 0.9711],
        [0.9512, 0.9581, 1.0104,  ..., 1.0167, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7360],
         [11.5834],
         [26.0285],
         ...,
         [26.3243],
         [13.6716],
         [13.8374]],
        [[10.8252],
         [10.8079],
         [23.9748],
         ...,
         [24.4392],
         [11.3425],
         [10.9233]],
        [[10.7174],
         [10.7156],
         [23.7322],
         ...,
         [24.2154],
         [11.0833],
         [10.6082]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4344],
         ...,
         [23.9405],
         [10.7698],
         [10.2296]],
        [[10.9256],
         [10.8938],
         [24.2011],
         ...,
         [24.6476],
         [11.5872],
         [11.2225]],
        [[11.1505],
         [11.0859],
         [24.7080],
         ...,
         [25.1138],
         [12.1461],
         [11.9122]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9751, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9764],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9794, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7893],
         [12.8872],
         [10.9364],
         ...,
         [10.3241],
         [12.5838],
         [13.0273]],
        [[ 8.0113],
         [ 7.8747],
         [ 8.3595],
         ...,
         [ 8.8101],
         [ 8.3517],
         [ 7.7095]],
        [[ 7.5606],
         [ 7.4088],
         [ 8.0860],
         ...,
         [ 8.6389],
         [ 7.9385],
         [ 7.2248]],
        ...,
        [[ 7.0363],
         [ 6.8688],
         [ 7.7590],
         ...,
         [ 8.4309],
         [ 7.4539],
         [ 6.6653]],
        [[ 8.4512],
         [ 8.3307],
         [ 8.6202],
         ...,
         [ 8.9713],
         [ 8.7523],
         [ 8.1859]],
        [[ 9.5093],
         [ 9.4326],
         [ 9.2246],
         ...,
         [ 9.3373],
         [ 9.7056],
         [ 9.3438]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9389,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8474],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8800],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9125, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0586],
         [15.3771],
         [24.3941],
         ...,
         [24.2765],
         [17.2128],
         [17.1026]],
        [[13.9907],
         [14.4732],
         [15.1156],
         ...,
         [15.6750],
         [14.9337],
         [15.4157]],
        [[13.8639],
         [14.3650],
         [14.2461],
         ...,
         [14.8488],
         [14.6734],
         [15.2188]],
        ...,
        [[13.7080],
         [14.2319],
         [13.2360],
         ...,
         [13.8836],
         [14.3567],
         [14.9779]],
        [[14.1088],
         [14.5737],
         [15.9655],
         ...,
         [16.4786],
         [15.1781],
         [15.5997]],
        [[14.3730],
         [14.7981],
         [18.0137],
         ...,
         [18.4005],
         [15.7316],
         [16.0137]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9973, 0.9955],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9429, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3246],
         [13.6739],
         [13.8390]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4396],
         [11.3431],
         [10.9233]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2158],
         [11.0837],
         [10.6081]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4341],
         ...,
         [23.9409],
         [10.7700],
         [10.2294]],
        [[10.9256],
         [10.8938],
         [24.2009],
         ...,
         [24.6480],
         [11.5880],
         [11.2227]],
        [[11.1505],
         [11.0859],
         [24.7078],
         ...,
         [25.1142],
         [12.1472],
         [11.9127]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9751, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7893],
         [12.8873],
         [10.9371],
         ...,
         [10.3245],
         [12.5835],
         [13.0275]],
        [[ 8.0114],
         [ 7.8746],
         [ 8.3592],
         ...,
         [ 8.8102],
         [ 8.3524],
         [ 7.7094]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0856],
         ...,
         [ 8.6389],
         [ 7.9392],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8687],
         [ 7.7585],
         ...,
         [ 8.4309],
         [ 7.4547],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6200],
         ...,
         [ 8.9713],
         [ 8.7529],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4326],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7060],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9389,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9125, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3777],
         [24.3937],
         ...,
         [24.2756],
         [17.2153],
         [17.1044]],
        [[13.9907],
         [14.4737],
         [15.1157],
         ...,
         [15.6758],
         [14.9348],
         [15.4167]],
        [[13.8638],
         [14.3655],
         [14.2462],
         ...,
         [14.8497],
         [14.6744],
         [15.2197]],
        ...,
        [[13.7080],
         [14.2324],
         [13.2363],
         ...,
         [13.8846],
         [14.3575],
         [14.9787]],
        [[14.1088],
         [14.5742],
         [15.9655],
         ...,
         [16.4792],
         [15.1794],
         [15.6008]],
        [[14.3730],
         [14.7986],
         [18.0136],
         ...,
         [18.4009],
         [15.7332],
         [16.0149]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9955],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3246],
         [13.6744],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3432],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6081]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4341],
         ...,
         [23.9410],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5881],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1474],
         [11.9128]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3246],
         [12.5835],
         [13.0275]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3592],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0856],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4548],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6200],
         ...,
         [ 8.9713],
         [ 8.7530],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3778],
         [24.3936],
         ...,
         [24.2754],
         [17.2158],
         [17.1047]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9351],
         [15.4169]],
        [[13.8638],
         [14.3656],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2199]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8848],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5743],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7987],
         [18.0136],
         ...,
         [18.4009],
         [15.7336],
         [16.0152]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3432],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3246],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2159],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9351],
         [15.4170]],
        [[13.8638],
         [14.3656],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7336],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7336],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
  warnings.warn(first_warn_msg, RuntimeWarning)
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7329],
         [11.5865],
         [26.1122],
         ...,
         [26.3270],
         [13.5133],
         [13.4474]],
        [[10.8249],
         [10.8074],
         [24.1167],
         ...,
         [24.4430],
         [11.3005],
         [10.9137]],
        [[10.7175],
         [10.7147],
         [23.8805],
         ...,
         [24.2193],
         [11.0531],
         [10.6353]],
        ...,
        [[10.5857],
         [10.6007],
         [23.5906],
         ...,
         [23.9446],
         [10.7536],
         [10.2996]],
        [[10.9250],
         [10.8937],
         [24.3368],
         ...,
         [24.6513],
         [11.5339],
         [11.1773]],
        [[11.1492],
         [11.0866],
         [24.8296],
         ...,
         [25.1172],
         [12.0659],
         [11.7815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9896, 0.9877, 1.1797,  ..., 1.1825, 1.0132, 1.0123],
        [0.9776, 0.9774, 1.1533,  ..., 1.1576, 0.9839, 0.9788],
        [0.9762, 0.9762, 1.1502,  ..., 1.1547, 0.9807, 0.9751],
        ...,
        [0.9745, 0.9747, 1.1464,  ..., 1.1510, 0.9767, 0.9707],
        [0.9790, 0.9786, 1.1562,  ..., 1.1604, 0.9870, 0.9823],
        [0.9819, 0.9811, 1.1627,  ..., 1.1665, 0.9940, 0.9903]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8039],
         [12.9107],
         [10.8619],
         ...,
         [10.2797],
         [12.6593],
         [12.9014]],
        [[ 7.9899],
         [ 7.8443],
         [ 8.3856],
         ...,
         [ 8.8083],
         [ 8.2087],
         [ 7.8562]],
        [[ 7.5368],
         [ 7.3751],
         [ 8.1212],
         ...,
         [ 8.6415],
         [ 7.7801],
         [ 7.3883]],
        ...,
        [[ 7.0101],
         [ 6.8316],
         [ 7.8047],
         ...,
         [ 8.4388],
         [ 7.2791],
         [ 6.8462]],
        [[ 8.4323],
         [ 8.3040],
         [ 8.6372],
         ...,
         [ 8.9652],
         [ 8.6253],
         [ 8.3145]],
        [[ 9.4972],
         [ 9.4158],
         [ 9.2197],
         ...,
         [ 9.3213],
         [ 9.6210],
         [ 9.4224]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9832, 0.9855, 0.9416,  ..., 0.9291, 0.9801, 0.9853],
        [0.8800, 0.8769, 0.8885,  ..., 0.8976, 0.8847, 0.8771],
        [0.8703, 0.8668, 0.8828,  ..., 0.8940, 0.8755, 0.8671],
        ...,
        [0.8590, 0.8552, 0.8760,  ..., 0.8896, 0.8648, 0.8555],
        [0.8895, 0.8867, 0.8939,  ..., 0.9009, 0.8936, 0.8870],
        [0.9123, 0.9106, 0.9064,  ..., 0.9086, 0.9150, 0.9107]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0351],
         [15.2951],
         [24.4054],
         ...,
         [24.3285],
         [17.0021],
         [16.9149]],
        [[13.9706],
         [14.3911],
         [15.1337],
         ...,
         [15.6344],
         [14.7985],
         [15.3762]],
        [[13.8442],
         [14.2830],
         [14.2644],
         ...,
         [14.8017],
         [14.5464],
         [15.1957]],
        ...,
        [[13.6889],
         [14.1499],
         [13.2546],
         ...,
         [13.8295],
         [14.2394],
         [14.9747]],
        [[14.0884],
         [14.4917],
         [15.9832],
         ...,
         [16.4448],
         [15.0351],
         [15.5447]],
        [[14.3517],
         [14.7160],
         [18.0304],
         ...,
         [18.3847],
         [15.5708],
         [15.9231]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9635, 0.9678, 1.1159,  ..., 1.1147, 0.9955, 0.9941],
        [0.9462, 0.9531, 0.9651,  ..., 0.9733, 0.9597, 0.9691],
        [0.9442, 0.9513, 0.9510,  ..., 0.9597, 0.9556, 0.9661],
        ...,
        [0.9416, 0.9491, 0.9346,  ..., 0.9439, 0.9506, 0.9625],
        [0.9481, 0.9547, 0.9790,  ..., 0.9865, 0.9635, 0.9718],
        [0.9524, 0.9583, 1.0122,  ..., 1.0180, 0.9722, 0.9780]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7357],
         [11.5838],
         [26.0403],
         ...,
         [26.3250],
         [13.6510],
         [13.7818]],
        [[10.8251],
         [10.8078],
         [23.9951],
         ...,
         [24.4402],
         [11.3370],
         [10.9219]],
        [[10.7175],
         [10.7155],
         [23.7534],
         ...,
         [24.2164],
         [11.0793],
         [10.6119]],
        ...,
        [[10.5853],
         [10.6019],
         [23.4567],
         ...,
         [23.9416],
         [10.7676],
         [10.2394]],
        [[10.9255],
         [10.8938],
         [24.2205],
         ...,
         [24.6485],
         [11.5802],
         [11.2161]],
        [[11.1503],
         [11.0860],
         [24.7253],
         ...,
         [25.1147],
         [12.1356],
         [11.8936]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9875, 0.9854, 1.1765,  ..., 1.1803, 1.0128, 1.0145],
        [0.9754, 0.9752, 1.1495,  ..., 1.1553, 0.9822, 0.9767],
        [0.9740, 0.9740, 1.1463,  ..., 1.1524, 0.9788, 0.9726],
        ...,
        [0.9723, 0.9725, 1.1424,  ..., 1.1488, 0.9747, 0.9677],
        [0.9767, 0.9763, 1.1524,  ..., 1.1581, 0.9854, 0.9806],
        [0.9797, 0.9789, 1.1591,  ..., 1.1643, 0.9927, 0.9895]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7914],
         [12.8907],
         [10.9256],
         ...,
         [10.3178],
         [12.5937],
         [13.0094]],
        [[ 8.0082],
         [ 7.8701],
         [ 8.3626],
         ...,
         [ 8.8098],
         [ 8.3310],
         [ 7.7285]],
        [[ 7.5572],
         [ 7.4037],
         [ 8.0904],
         ...,
         [ 8.6391],
         [ 7.9156],
         [ 7.2460]],
        ...,
        [[ 7.0325],
         [ 6.8632],
         [ 7.7648],
         ...,
         [ 8.4319],
         [ 7.4287],
         [ 6.6888]],
        [[ 8.4485],
         [ 8.3267],
         [ 8.6221],
         ...,
         [ 8.9703],
         [ 8.7339],
         [ 8.2024]],
        [[ 9.5076],
         [ 9.4301],
         [ 9.2234],
         ...,
         [ 9.3350],
         [ 9.6931],
         [ 9.3536]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9814, 0.9393,  ..., 0.9263, 0.9751, 0.9840],
        [0.8768, 0.8738, 0.8844,  ..., 0.8939, 0.8837, 0.8708],
        [0.8671, 0.8638, 0.8785,  ..., 0.8903, 0.8748, 0.8604],
        ...,
        [0.8558, 0.8522, 0.8715,  ..., 0.8858, 0.8643, 0.8485],
        [0.8862, 0.8836, 0.8899,  ..., 0.8974, 0.8923, 0.8809],
        [0.9089, 0.9072, 0.9028,  ..., 0.9052, 0.9129, 0.9056]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0554],
         [15.3656],
         [24.3953],
         ...,
         [24.2831],
         [17.1847],
         [17.0772]],
        [[13.9878],
         [14.4618],
         [15.1184],
         ...,
         [15.6699],
         [14.9152],
         [15.4110]],
        [[13.8610],
         [14.3537],
         [14.2489],
         ...,
         [14.8429],
         [14.6559],
         [15.2163]],
        ...,
        [[13.7052],
         [14.2206],
         [13.2390],
         ...,
         [13.8768],
         [14.3404],
         [14.9782]],
        [[14.1058],
         [14.5623],
         [15.9681],
         ...,
         [16.4744],
         [15.1586],
         [15.5928]],
        [[14.3699],
         [14.7867],
         [18.0160],
         ...,
         [18.3986],
         [15.7098],
         [16.0018]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9675, 1.1144,  ..., 1.1125, 0.9971, 0.9953],
        [0.9451, 0.9528, 0.9635,  ..., 0.9724, 0.9602, 0.9682],
        [0.9430, 0.9510, 0.9493,  ..., 0.9590, 0.9560, 0.9651],
        ...,
        [0.9405, 0.9489, 0.9329,  ..., 0.9433, 0.9508, 0.9612],
        [0.9470, 0.9544, 0.9773,  ..., 0.9855, 0.9641, 0.9712],
        [0.9513, 0.9581, 1.0106,  ..., 1.0168, 0.9731, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7360],
         [11.5834],
         [26.0303],
         ...,
         [26.3247],
         [13.6707],
         [13.8301]],
        [[10.8252],
         [10.8079],
         [23.9779],
         ...,
         [24.4398],
         [11.3422],
         [10.9231]],
        [[10.7174],
         [10.7156],
         [23.7354],
         ...,
         [24.2160],
         [11.0831],
         [10.6087]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4377],
         ...,
         [23.9411],
         [10.7696],
         [10.2309]],
        [[10.9256],
         [10.8938],
         [24.2040],
         ...,
         [24.6482],
         [11.5869],
         [11.2217]],
        [[11.1505],
         [11.0859],
         [24.7106],
         ...,
         [25.1144],
         [12.1456],
         [11.9097]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1761,  ..., 1.1799, 1.0127, 1.0148],
        [0.9751, 0.9749, 1.1489,  ..., 1.1550, 0.9819, 0.9764],
        [0.9737, 0.9737, 1.1457,  ..., 1.1521, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9722, 1.1418,  ..., 1.1484, 0.9744, 0.9673],
        [0.9764, 0.9760, 1.1519,  ..., 1.1578, 0.9852, 0.9803],
        [0.9794, 0.9786, 1.1586,  ..., 1.1639, 0.9926, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7896],
         [12.8879],
         [10.9354],
         ...,
         [10.3235],
         [12.5851],
         [13.0246]],
        [[ 8.0109],
         [ 7.8738],
         [ 8.3597],
         ...,
         [ 8.8101],
         [ 8.3490],
         [ 7.7124]],
        [[ 7.5601],
         [ 7.4079],
         [ 8.0863],
         ...,
         [ 8.6389],
         [ 7.9355],
         [ 7.2280]],
        ...,
        [[ 7.0358],
         [ 6.8677],
         [ 7.7594],
         ...,
         [ 8.4310],
         [ 7.4506],
         [ 6.6688]],
        [[ 8.4508],
         [ 8.3299],
         [ 8.6203],
         ...,
         [ 8.9712],
         [ 8.7499],
         [ 8.1884]],
        [[ 9.5091],
         [ 9.4321],
         [ 9.2244],
         ...,
         [ 9.3371],
         [ 9.7040],
         [ 9.3452]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9788, 0.9809, 0.9390,  ..., 0.9259, 0.9744, 0.9838],
        [0.8763, 0.8734, 0.8838,  ..., 0.8934, 0.8835, 0.8699],
        [0.8666, 0.8634, 0.8779,  ..., 0.8898, 0.8747, 0.8595],
        ...,
        [0.8554, 0.8518, 0.8709,  ..., 0.8853, 0.8643, 0.8475],
        [0.8857, 0.8831, 0.8894,  ..., 0.8969, 0.8921, 0.8801],
        [0.9084, 0.9068, 0.9023,  ..., 0.9047, 0.9126, 0.9049]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0583],
         [15.3759],
         [24.3938],
         ...,
         [24.2766],
         [17.2109],
         [17.1004]],
        [[13.9902],
         [14.4719],
         [15.1162],
         ...,
         [15.6750],
         [14.9319],
         [15.4160]],
        [[13.8634],
         [14.3637],
         [14.2467],
         ...,
         [14.8488],
         [14.6717],
         [15.2194]],
        ...,
        [[13.7075],
         [14.2306],
         [13.2367],
         ...,
         [13.8836],
         [14.3549],
         [14.9788]],
        [[14.1083],
         [14.5724],
         [15.9660],
         ...,
         [16.4786],
         [15.1763],
         [15.5998]],
        [[14.3725],
         [14.7968],
         [18.0140],
         ...,
         [18.4006],
         [15.7298],
         [16.0131]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9973, 0.9955],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9602, 0.9681],
        [0.9429, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9327,  ..., 0.9432, 0.9509, 0.9610],
        [0.9469, 0.9544, 0.9771,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0104,  ..., 1.0167, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0287],
         ...,
         [26.3247],
         [13.6739],
         [13.8379]],
        [[10.8252],
         [10.8079],
         [23.9751],
         ...,
         [24.4397],
         [11.3431],
         [10.9233]],
        [[10.7174],
         [10.7156],
         [23.7324],
         ...,
         [24.2159],
         [11.0837],
         [10.6082]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4347],
         ...,
         [23.9411],
         [10.7700],
         [10.2296]],
        [[10.9256],
         [10.8938],
         [24.2014],
         ...,
         [24.6481],
         [11.5880],
         [11.2226]],
        [[11.1505],
         [11.0859],
         [24.7082],
         ...,
         [25.1143],
         [12.1472],
         [11.9124]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9751, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9764],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9794, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7893],
         [12.8874],
         [10.9370],
         ...,
         [10.3245],
         [12.5837],
         [13.0271]],
        [[ 8.0113],
         [ 7.8744],
         [ 8.3592],
         ...,
         [ 8.8102],
         [ 8.3520],
         [ 7.7098]],
        [[ 7.5606],
         [ 7.4086],
         [ 8.0857],
         ...,
         [ 8.6389],
         [ 7.9387],
         [ 7.2251]],
        ...,
        [[ 7.0363],
         [ 6.8685],
         [ 7.7585],
         ...,
         [ 8.4309],
         [ 7.4542],
         [ 6.6657]],
        [[ 8.4512],
         [ 8.3305],
         [ 8.6200],
         ...,
         [ 8.9713],
         [ 8.7525],
         [ 8.1861]],
        [[ 9.5093],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7058],
         [ 9.3439]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8934, 0.8835, 0.8698],
        [0.8666, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8594],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8474],
        [0.8857, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8800],
        [0.9083, 0.9067, 0.9022,  ..., 0.9047, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0587],
         [15.3775],
         [24.3936],
         ...,
         [24.2755],
         [17.2151],
         [17.1041]],
        [[13.9906],
         [14.4735],
         [15.1158],
         ...,
         [15.6758],
         [14.9346],
         [15.4168]],
        [[13.8638],
         [14.3653],
         [14.2464],
         ...,
         [14.8497],
         [14.6742],
         [15.2199]],
        ...,
        [[13.7079],
         [14.2322],
         [13.2364],
         ...,
         [13.8847],
         [14.3573],
         [14.9789]],
        [[14.1087],
         [14.5740],
         [15.9656],
         ...,
         [16.4793],
         [15.1792],
         [15.6009]],
        [[14.3730],
         [14.7985],
         [18.0137],
         ...,
         [18.4009],
         [15.7330],
         [16.0149]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9955],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6744],
         [13.8392]],
        [[10.8252],
         [10.8079],
         [23.9747],
         ...,
         [24.4397],
         [11.3432],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7320],
         ...,
         [24.2159],
         [11.0838],
         [10.6081]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4341],
         ...,
         [23.9411],
         [10.7700],
         [10.2294]],
        [[10.9256],
         [10.8938],
         [24.2009],
         ...,
         [24.6481],
         [11.5881],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7078],
         ...,
         [25.1143],
         [12.1474],
         [11.9128]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7893],
         [12.8874],
         [10.9373],
         ...,
         [10.3246],
         [12.5835],
         [13.0275]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3592],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7094]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0856],
         ...,
         [ 8.6389],
         [ 7.9393],
         [ 7.2247]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4548],
         [ 6.6652]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6200],
         ...,
         [ 8.9713],
         [ 8.7530],
         [ 8.1858]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7060],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8800],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3778],
         [24.3935],
         ...,
         [24.2754],
         [17.2158],
         [17.1047]],
        [[13.9907],
         [14.4737],
         [15.1158],
         ...,
         [15.6760],
         [14.9351],
         [15.4169]],
        [[13.8638],
         [14.3656],
         [14.2463],
         ...,
         [14.8499],
         [14.6746],
         [15.2199]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8848],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5743],
         [15.9656],
         ...,
         [16.4794],
         [15.1796],
         [15.6011]],
        [[14.3730],
         [14.7987],
         [18.0136],
         ...,
         [18.4009],
         [15.7335],
         [16.0152]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3432],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6081]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4341],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3246],
         [12.5835],
         [13.0275]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7530],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9351],
         [15.4170]],
        [[13.8638],
         [14.3656],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7336],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7336],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6651]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7361],
         [11.5833],
         [26.0284],
         ...,
         [26.3247],
         [13.6745],
         [13.8394]],
        [[10.8252],
         [10.8079],
         [23.9746],
         ...,
         [24.4397],
         [11.3433],
         [10.9234]],
        [[10.7174],
         [10.7156],
         [23.7319],
         ...,
         [24.2159],
         [11.0838],
         [10.6080]],
        ...,
        [[10.5852],
         [10.6021],
         [23.4340],
         ...,
         [23.9411],
         [10.7700],
         [10.2293]],
        [[10.9256],
         [10.8938],
         [24.2008],
         ...,
         [24.6481],
         [11.5882],
         [11.2228]],
        [[11.1505],
         [11.0859],
         [24.7077],
         ...,
         [25.1143],
         [12.1475],
         [11.9129]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 0.9851, 1.1760,  ..., 1.1799, 1.0127, 1.0149],
        [0.9750, 0.9748, 1.1488,  ..., 1.1550, 0.9819, 0.9763],
        [0.9736, 0.9736, 1.1456,  ..., 1.1520, 0.9785, 0.9722],
        ...,
        [0.9719, 0.9721, 1.1417,  ..., 1.1484, 0.9743, 0.9672],
        [0.9764, 0.9760, 1.1518,  ..., 1.1577, 0.9851, 0.9803],
        [0.9793, 0.9785, 1.1585,  ..., 1.1639, 0.9925, 0.9894]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7892],
         [12.8873],
         [10.9373],
         ...,
         [10.3247],
         [12.5835],
         [13.0276]],
        [[ 8.0114],
         [ 7.8745],
         [ 8.3591],
         ...,
         [ 8.8102],
         [ 8.3525],
         [ 7.7093]],
        [[ 7.5607],
         [ 7.4087],
         [ 8.0855],
         ...,
         [ 8.6389],
         [ 7.9394],
         [ 7.2246]],
        ...,
        [[ 7.0364],
         [ 6.8686],
         [ 7.7584],
         ...,
         [ 8.4309],
         [ 7.4549],
         [ 6.6650]],
        [[ 8.4513],
         [ 8.3306],
         [ 8.6199],
         ...,
         [ 8.9714],
         [ 8.7531],
         [ 8.1857]],
        [[ 9.5094],
         [ 9.4325],
         [ 9.2246],
         ...,
         [ 9.3375],
         [ 9.7061],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [0.8762, 0.8733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        ...,
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [0.8856, 0.8831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0588],
         [15.3779],
         [24.3935],
         ...,
         [24.2753],
         [17.2160],
         [17.1048]],
        [[13.9907],
         [14.4738],
         [15.1158],
         ...,
         [15.6760],
         [14.9352],
         [15.4170]],
        [[13.8638],
         [14.3657],
         [14.2463],
         ...,
         [14.8499],
         [14.6747],
         [15.2200]],
        ...,
        [[13.7080],
         [14.2325],
         [13.2363],
         ...,
         [13.8849],
         [14.3577],
         [14.9789]],
        [[14.1088],
         [14.5744],
         [15.9656],
         ...,
         [16.4794],
         [15.1797],
         [15.6011]],
        [[14.3730],
         [14.7988],
         [18.0136],
         ...,
         [18.4010],
         [15.7337],
         [16.0153]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [0.9428, 0.9510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [0.9403, 0.9488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [0.9511, 0.9580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[33.0775],
         [55.8106],
         [25.2581],
         ...,
         [70.6147],
         [16.0922],
         [41.8635]],
        [[13.0476],
         [42.2385],
         [17.1123],
         ...,
         [57.8135],
         [12.1526],
         [38.0955]],
        [[11.6284],
         [40.8065],
         [16.3071],
         ...,
         [56.3996],
         [11.7374],
         [37.6533]],
        ...,
        [[10.0796],
         [39.0964],
         [15.3602],
         ...,
         [54.6927],
         [11.2418],
         [37.1116]],
        [[14.5111],
         [43.6052],
         [17.8910],
         ...,
         [59.1503],
         [12.5489],
         [38.5084]],
        [[18.3480],
         [46.7795],
         [19.7368],
         ...,
         [62.2105],
         [13.4697],
         [39.4353]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.2131, 1.5135, 1.1098,  ..., 1.7092, 0.9886, 1.3292],
        [0.9484, 1.3342, 1.0021,  ..., 1.5400, 0.9366, 1.2794],
        [0.9296, 1.3153, 0.9915,  ..., 1.5213, 0.9311, 1.2736],
        ...,
        [0.9092, 1.2927, 0.9790,  ..., 1.4988, 0.9245, 1.2664],
        [0.9677, 1.3522, 1.0124,  ..., 1.5577, 0.9418, 1.2849],
        [1.0185, 1.3942, 1.0368,  ..., 1.5981, 0.9540, 1.2971]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[ 75.7954],
         [ 39.6977],
         [ 23.4486],
         ...,
         [102.1811],
         [ 13.1206],
         [121.2755]],
        [[ 19.0343],
         [ 30.1410],
         [ 10.7295],
         ...,
         [ 32.4906],
         [ 11.1672],
         [ 49.0875]],
        [[ 16.0417],
         [ 29.1307],
         [  9.7398],
         ...,
         [ 28.1942],
         [ 10.9466],
         [ 43.8881]],
        ...,
        [[ 12.9731],
         [ 27.9237],
         [  8.6373],
         ...,
         [ 23.6430],
         [ 10.6788],
         [ 38.1939]],
        [[ 22.2905],
         [ 31.1048],
         [ 11.7323],
         ...,
         [ 37.0364],
         [ 11.3749],
         [ 54.4331]],
        [[ 31.5836],
         [ 33.3419],
         [ 14.2893],
         ...,
         [ 49.4450],
         [ 11.8468],
         [ 68.3793]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[2.2847, 1.5106, 1.1622,  ..., 2.8505, 0.9407, 3.2600],
        [1.0675, 1.3057, 0.8894,  ..., 1.3561, 0.8988, 1.7120],
        [1.0034, 1.2840, 0.8682,  ..., 1.2640, 0.8941, 1.6005],
        ...,
        [0.9376, 1.2582, 0.8446,  ..., 1.1664, 0.8884, 1.4784],
        [1.1374, 1.3264, 0.9110,  ..., 1.4536, 0.9033, 1.8266],
        [1.3366, 1.3743, 0.9658,  ..., 1.7197, 0.9134, 2.1257]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[16.5362],
         [41.5371],
         [53.8410],
         ...,
         [23.0597],
         [27.8584],
         [72.9179]],
        [[10.7561],
         [25.0476],
         [33.9849],
         ...,
         [12.7067],
         [15.2660],
         [58.3668]],
        [[10.1984],
         [23.5274],
         [32.1033],
         ...,
         [11.8031],
         [14.1706],
         [56.7806]],
        ...,
        [[ 9.5463],
         [21.7682],
         [29.9121],
         ...,
         [10.7703],
         [12.9197],
         [54.8715]],
        [[11.2980],
         [26.5382],
         [35.8199],
         ...,
         [13.6023],
         [16.3524],
         [59.8707]],
        [[12.5923],
         [30.1488],
         [40.2271],
         ...,
         [15.8083],
         [19.0310],
         [63.3276]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.9205, 1.3271, 1.5272,  ..., 1.0266, 1.1046, 1.8375],
        [0.8265, 1.0589, 1.2043,  ..., 0.8582, 0.8998, 1.6008],
        [0.8174, 1.0342, 1.1737,  ..., 0.8435, 0.8820, 1.5750],
        ...,
        [0.8068, 1.0056, 1.1380,  ..., 0.8267, 0.8616, 1.5440],
        [0.8353, 1.0831, 1.2341,  ..., 0.8727, 0.9175, 1.6253],
        [0.8563, 1.1419, 1.3058,  ..., 0.9086, 0.9610, 1.6815]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[75.2450],
         [69.1489],
         [46.0351],
         ...,
         [70.1961],
         [21.4707],
         [23.4094]],
        [[66.9973],
         [59.1500],
         [38.6423],
         ...,
         [58.3603],
         [13.1926],
         [12.9854]],
        [[66.0413],
         [58.0174],
         [37.8139],
         ...,
         [57.0414],
         [12.4208],
         [12.0719]],
        ...,
        [[64.8737],
         [56.6417],
         [36.8104],
         ...,
         [55.4457],
         [11.5252],
         [11.0268]],
        [[67.8921],
         [60.2153],
         [39.4232],
         ...,
         [59.6050],
         [13.9478],
         [13.8901]],
        [[69.9093],
         [62.6345],
         [41.2026],
         ...,
         [62.4464],
         [15.7705],
         [16.1157]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.8138, 1.7332, 1.4277,  ..., 1.7471, 1.1031, 1.1287],
        [1.7048, 1.6011, 1.3300,  ..., 1.5906, 0.9937, 0.9910],
        [1.6921, 1.5861, 1.3191,  ..., 1.5732, 0.9835, 0.9789],
        ...,
        [1.6767, 1.5679, 1.3058,  ..., 1.5521, 0.9717, 0.9651],
        [1.7166, 1.6151, 1.3404,  ..., 1.6071, 1.0037, 1.0029],
        [1.7433, 1.6471, 1.3639,  ..., 1.6446, 1.0278, 1.0323]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.5538],
         [ 14.4194],
         [117.3261],
         ...,
         [ 50.8772],
         [ 11.3664],
         [ 14.3042]],
        [[ 12.2012],
         [ 10.8256],
         [ 47.5238],
         ...,
         [ 12.7113],
         [  9.7132],
         [ 13.1646]],
        [[ 12.0434],
         [ 10.4482],
         [ 42.4938],
         ...,
         [ 10.7060],
         [  9.5260],
         [ 13.0300]],
        ...,
        [[ 11.8504],
         [  9.9980],
         [ 36.9847],
         ...,
         [  8.6513],
         [  9.2988],
         [ 12.8648]],
        [[ 12.3487],
         [ 11.1862],
         [ 52.6946],
         ...,
         [ 14.8946],
         [  9.8893],
         [ 13.2901]],
        [[ 12.6805],
         [ 12.0248],
         [ 66.1832],
         ...,
         [ 21.1316],
         [ 10.2891],
         [ 13.5713]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9758, 0.9943, 3.2010,  ..., 1.7761, 0.9289, 0.9919],
        [0.9468, 0.9173, 1.7042,  ..., 0.9577, 0.8934, 0.9674],
        [0.9434, 0.9092, 1.5964,  ..., 0.9147, 0.8894, 0.9646],
        ...,
        [0.9393, 0.8995, 1.4782,  ..., 0.8707, 0.8845, 0.9610],
        [0.9499, 0.9250, 1.8151,  ..., 1.0045, 0.8972, 0.9701],
        [0.9571, 0.9430, 2.1044,  ..., 1.1383, 0.9058, 0.9762]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.8311],
         [22.0439],
         [27.7266],
         ...,
         [23.8768],
         [39.8173],
         [16.2482]],
        [[13.6957],
         [16.5827],
         [23.6738],
         ...,
         [13.0211],
         [23.9390],
         [14.9394]],
        [[13.4522],
         [16.0085],
         [23.2152],
         ...,
         [12.0795],
         [22.4777],
         [14.7849]],
        ...,
        [[13.1560],
         [15.3234],
         [22.6583],
         ...,
         [11.0050],
         [20.7874],
         [14.5954]],
        [[13.9244],
         [17.1311],
         [24.1052],
         ...,
         [13.9554],
         [25.3722],
         [15.0835]],
        [[14.4426],
         [18.4062],
         [25.0853],
         ...,
         [16.2612],
         [28.8459],
         [15.4064]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9585, 1.0595, 1.1519,  ..., 1.0893, 1.3486, 0.9652],
        [0.9237, 0.9707, 1.0860,  ..., 0.9128, 1.0903, 0.9440],
        [0.9198, 0.9613, 1.0786,  ..., 0.8974, 1.0666, 0.9414],
        ...,
        [0.9149, 0.9502, 1.0695,  ..., 0.8800, 1.0391, 0.9384],
        [0.9274, 0.9796, 1.0930,  ..., 0.9279, 1.1136, 0.9463],
        [0.9359, 1.0003, 1.1090,  ..., 0.9654, 1.1701, 0.9515]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[73.9739],
         [65.5177],
         [45.7441],
         ...,
         [68.4797],
         [21.1213],
         [21.5103]],
        [[66.2743],
         [57.1868],
         [38.4196],
         ...,
         [57.4618],
         [13.0341],
         [12.4639]],
        [[65.3787],
         [56.2321],
         [37.5986],
         ...,
         [56.2275],
         [12.2781],
         [11.6498]],
        ...,
        [[64.2839],
         [55.0693],
         [36.6039],
         ...,
         [54.7323],
         [11.4004],
         [10.7128]],
        [[67.1120],
         [58.0826],
         [39.1934],
         ...,
         [58.6254],
         [13.7734],
         [13.2660]],
        [[68.9983],
         [60.1092],
         [40.9567],
         ...,
         [61.2772],
         [15.5564],
         [15.2232]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.7964, 1.6846, 1.4233,  ..., 1.7238, 1.0979, 1.1030],
        [1.6946, 1.5745, 1.3265,  ..., 1.5781, 0.9910, 0.9835],
        [1.6828, 1.5619, 1.3156,  ..., 1.5618, 0.9810, 0.9727],
        ...,
        [1.6683, 1.5465, 1.3025,  ..., 1.5421, 0.9694, 0.9603],
        [1.7057, 1.5863, 1.3367,  ..., 1.5935, 1.0008, 0.9941],
        [1.7306, 1.6131, 1.3600,  ..., 1.6286, 1.0243, 1.0199]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.6439],
         [ 14.2144],
         [116.8709],
         ...,
         [ 49.4425],
         [ 11.3166],
         [ 13.8557]],
        [[ 12.3140],
         [ 10.6429],
         [ 47.4899],
         ...,
         [ 12.5595],
         [  9.5500],
         [ 12.0578]],
        [[ 12.1587],
         [ 10.2684],
         [ 42.4802],
         ...,
         [ 10.6000],
         [  9.3514],
         [ 11.8521]],
        ...,
        [[ 11.9686],
         [  9.8219],
         [ 36.9908],
         ...,
         [  8.5875],
         [  9.1107],
         [ 11.6017]],
        [[ 12.4592],
         [ 11.0007],
         [ 52.6380],
         ...,
         [ 14.6889],
         [  9.7370],
         [ 12.2509]],
        [[ 12.7856],
         [ 11.8335],
         [ 66.0591],
         ...,
         [ 20.7527],
         [ 10.1629],
         [ 12.6879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 0.9901, 3.1914,  ..., 1.7455, 0.9279, 0.9824],
        [0.9493, 0.9135, 1.7036,  ..., 0.9546, 0.8901, 0.9438],
        [0.9460, 0.9055, 1.5962,  ..., 0.9126, 0.8858, 0.9394],
        ...,
        [0.9419, 0.8959, 1.4785,  ..., 0.8694, 0.8806, 0.9341],
        [0.9524, 0.9212, 1.8140,  ..., 1.0003, 0.8941, 0.9480],
        [0.9594, 0.9390, 2.1018,  ..., 1.1303, 0.9032, 0.9573]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.8850],
         [22.1038],
         [27.2197],
         ...,
         [23.9076],
         [39.8743],
         [16.1099]],
        [[13.6128],
         [16.6170],
         [23.4174],
         ...,
         [13.0144],
         [23.7698],
         [14.9466]],
        [[13.3551],
         [16.0404],
         [22.9853],
         ...,
         [12.0706],
         [22.2953],
         [14.8086]],
        ...,
        [[13.0421],
         [15.3524],
         [22.4600],
         ...,
         [10.9939],
         [20.5918],
         [14.6391]],
        [[13.8551],
         [17.1678],
         [23.8236],
         ...,
         [13.9511],
         [25.2175],
         [15.0752]],
        [[14.4051],
         [18.4487],
         [24.7449],
         ...,
         [16.2635],
         [28.7317],
         [15.3629]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9596, 1.0607, 1.1439,  ..., 1.0901, 1.3498, 0.9633],
        [0.9226, 0.9715, 1.0821,  ..., 0.9129, 1.0878, 0.9443],
        [0.9184, 0.9621, 1.0751,  ..., 0.8976, 1.0639, 0.9421],
        ...,
        [0.9134, 0.9509, 1.0665,  ..., 0.8800, 1.0361, 0.9393],
        [0.9266, 0.9805, 1.0887,  ..., 0.9281, 1.1114, 0.9464],
        [0.9355, 1.0013, 1.1037,  ..., 0.9658, 1.1685, 0.9511]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[72.7181],
         [62.0520],
         [45.4477],
         ...,
         [66.7858],
         [20.7667],
         [19.3732]],
        [[65.5173],
         [55.2093],
         [38.1950],
         ...,
         [56.5510],
         [12.8871],
         [11.9722]],
        [[64.6771],
         [54.4166],
         [37.3817],
         ...,
         [55.3985],
         [12.1480],
         [11.2798]],
        ...,
        [[63.6491],
         [53.4484],
         [36.3964],
         ...,
         [54.0005],
         [11.2892],
         [10.4757]],
        [[66.3028],
         [55.9515],
         [38.9615],
         ...,
         [57.6364],
         [13.6093],
         [12.6492]],
        [[68.0695],
         [57.6247],
         [40.7078],
         ...,
         [60.1058],
         [15.3495],
         [14.2817]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.7810, 1.6401, 1.4206,  ..., 1.7026, 1.0945, 1.0760],
        [1.6859, 1.5496, 1.3248,  ..., 1.5674, 0.9903, 0.9782],
        [1.6748, 1.5392, 1.3140,  ..., 1.5521, 0.9806, 0.9691],
        ...,
        [1.6612, 1.5264, 1.3010,  ..., 1.5337, 0.9692, 0.9585],
        [1.6962, 1.5594, 1.3349,  ..., 1.5817, 0.9999, 0.9872],
        [1.7196, 1.5816, 1.3580,  ..., 1.6143, 1.0229, 1.0087]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 13.7460],
         [ 13.9932],
         [116.3772],
         ...,
         [ 48.0308],
         [ 11.2905],
         [ 13.5199]],
        [[ 12.4182],
         [ 10.4603],
         [ 47.4568],
         ...,
         [ 12.4167],
         [  9.3981],
         [ 11.1440]],
        [[ 12.2630],
         [ 10.0902],
         [ 42.4693],
         ...,
         [ 10.5022],
         [  9.1871],
         [ 10.8806]],
        ...,
        [[ 12.0730],
         [  9.6490],
         [ 37.0014],
         ...,
         [  8.5312],
         [  8.9318],
         [ 10.5623]],
        [[ 12.5632],
         [ 10.8140],
         [ 52.5801],
         ...,
         [ 14.4928],
         [  9.5973],
         [ 11.3929]],
        [[ 12.8892],
         [ 11.6374],
         [ 65.9276],
         ...,
         [ 20.3853],
         [ 10.0517],
         [ 11.9619]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9803, 0.9856, 3.1811,  ..., 1.7155, 0.9276, 0.9754],
        [0.9518, 0.9098, 1.7032,  ..., 0.9518, 0.8870, 0.9245],
        [0.9485, 0.9019, 1.5962,  ..., 0.9107, 0.8825, 0.9188],
        ...,
        [0.9444, 0.8924, 1.4790,  ..., 0.8684, 0.8770, 0.9120],
        [0.9549, 0.9174, 1.8130,  ..., 0.9963, 0.8913, 0.9298],
        [0.9619, 0.9351, 2.0992,  ..., 1.1226, 0.9011, 0.9420]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9388],
         [22.1665],
         [26.7580],
         ...,
         [23.9391],
         [39.9109],
         [16.0460]],
        [[13.5339],
         [16.6482],
         [23.1643],
         ...,
         [13.0080],
         [23.6201],
         [15.0138]],
        [[13.2627],
         [16.0685],
         [22.7544],
         ...,
         [12.0620],
         [22.1351],
         [14.8907]],
        ...,
        [[12.9335],
         [15.3771],
         [22.2557],
         ...,
         [10.9830],
         [20.4211],
         [14.7394]],
        [[13.7893],
         [17.2019],
         [23.5493],
         ...,
         [13.9471],
         [25.0794],
         [15.1283]],
        [[14.3699],
         [18.4898],
         [24.4216],
         ...,
         [16.2663],
         [28.6265],
         [15.3841]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9608, 1.0621, 1.1368,  ..., 1.0909, 1.3507, 0.9625],
        [0.9217, 0.9723, 1.0783,  ..., 0.9131, 1.0857, 0.9458],
        [0.9173, 0.9629, 1.0716,  ..., 0.8977, 1.0616, 0.9437],
        ...,
        [0.9119, 0.9517, 1.0635,  ..., 0.8802, 1.0337, 0.9413],
        [0.9258, 0.9813, 1.0846,  ..., 0.9284, 1.1095, 0.9476],
        [0.9353, 1.0023, 1.0988,  ..., 0.9661, 1.1672, 0.9518]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[69.4289],
         [53.1605],
         [44.5654],
         ...,
         [62.0102],
         [19.6723],
         [13.3060]],
        [[63.2299],
         [49.2213],
         [37.5380],
         ...,
         [53.8390],
         [12.4832],
         [10.8945]],
        [[62.5021],
         [48.7544],
         [36.7490],
         ...,
         [52.9055],
         [11.7998],
         [10.6281]],
        ...,
        [[61.6103],
         [48.1811],
         [35.7927],
         ...,
         [51.7693],
         [11.0033],
         [10.3066]],
        [[63.9094],
         [49.6563],
         [38.2814],
         ...,
         [54.7155],
         [13.1492],
         [11.1463]],
        [[65.4347],
         [50.6299],
         [39.9745],
         ...,
         [56.7004],
         [14.7474],
         [11.7228]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.7445, 1.5295, 1.4160,  ..., 1.6465, 1.0870, 1.0028],
        [1.6626, 1.4775, 1.3231,  ..., 1.5385, 0.9920, 0.9710],
        [1.6530, 1.4713, 1.3127,  ..., 1.5262, 0.9829, 0.9675],
        ...,
        [1.6412, 1.4637, 1.3000,  ..., 1.5112, 0.9724, 0.9632],
        [1.6716, 1.4832, 1.3329,  ..., 1.5501, 1.0008, 0.9743],
        [1.6918, 1.4961, 1.3553,  ..., 1.5763, 1.0219, 0.9819]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 14.1583],
         [ 13.2661],
         [114.8716],
         ...,
         [ 44.0277],
         [ 11.2807],
         [ 12.3809]],
        [[ 12.7130],
         [  9.9775],
         [ 47.3565],
         ...,
         [ 12.0176],
         [  8.9856],
         [  9.2530]],
        [[ 12.5447],
         [  9.6318],
         [ 42.4367],
         ...,
         [ 10.2332],
         [  8.7361],
         [  8.9254]],
        ...,
        [[ 12.3389],
         [  9.2193],
         [ 37.0350],
         ...,
         [  8.3824],
         [  8.4361],
         [  8.5348]],
        [[ 12.8704],
         [ 10.3077],
         [ 52.4035],
         ...,
         [ 13.9401],
         [  9.2223],
         [  9.5661]],
        [[ 13.2247],
         [ 11.0755],
         [ 65.5258],
         ...,
         [ 19.3409],
         [  9.7668],
         [ 10.2951]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9901, 0.9710, 3.1498,  ..., 1.6306, 0.9284, 0.9520],
        [0.9591, 0.9005, 1.7020,  ..., 0.9442, 0.8792, 0.8849],
        [0.9555, 0.8931, 1.5965,  ..., 0.9060, 0.8739, 0.8779],
        ...,
        [0.9511, 0.8842, 1.4807,  ..., 0.8663, 0.8674, 0.8695],
        [0.9625, 0.9076, 1.8102,  ..., 0.9854, 0.8843, 0.8916],
        [0.9701, 0.9240, 2.0916,  ..., 1.1013, 0.8960, 0.9073]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1163],
         [22.3572],
         [25.7118],
         ...,
         [24.0284],
         [39.5360],
         [15.9777]],
        [[13.3078],
         [16.7366],
         [22.4268],
         ...,
         [12.9937],
         [23.1667],
         [15.2024]],
        [[12.9960],
         [16.1473],
         [22.0505],
         ...,
         [12.0415],
         [21.6835],
         [15.1091]],
        ...,
        [[12.6192],
         [15.4447],
         [21.5922],
         ...,
         [10.9562],
         [19.9739],
         [14.9941]],
        [[13.6022],
         [17.2997],
         [22.7799],
         ...,
         [13.9395],
         [24.6260],
         [15.2891]],
        [[14.2752],
         [18.6102],
         [23.5789],
         ...,
         [16.2772],
         [28.1796],
         [15.4821]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9646, 1.0662, 1.1207,  ..., 1.0933, 1.3456, 0.9624],
        [0.9190, 0.9747, 1.0673,  ..., 0.9139, 1.0793, 0.9498],
        [0.9139, 0.9652, 1.0612,  ..., 0.8984, 1.0552, 0.9483],
        ...,
        [0.9078, 0.9537, 1.0537,  ..., 0.8807, 1.0274, 0.9464],
        [0.9238, 0.9839, 1.0730,  ..., 0.9292, 1.1031, 0.9512],
        [0.9347, 1.0052, 1.0860,  ..., 0.9673, 1.1609, 0.9543]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[66.2246],
         [45.1726],
         [43.4141],
         ...,
         [56.4143],
         [18.2401],
         [11.9584]],
        [[60.0444],
         [42.0301],
         [36.7083],
         ...,
         [50.3591],
         [12.0671],
         [10.8396]],
        [[59.3207],
         [41.6567],
         [35.9537],
         ...,
         [49.6562],
         [11.4655],
         [10.7086]],
        ...,
        [[58.4344],
         [41.1977],
         [35.0387],
         ...,
         [48.7974],
         [10.7603],
         [10.5482]],
        [[60.7205],
         [42.3779],
         [37.4190],
         ...,
         [51.0168],
         [12.6505],
         [10.9619]],
        [[62.2394],
         [43.1556],
         [39.0363],
         ...,
         [52.4988],
         [14.0397],
         [11.2369]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.7022, 1.4240, 1.4007,  ..., 1.5725, 1.0680, 0.9850],
        [1.6205, 1.3824, 1.3121,  ..., 1.4925, 0.9864, 0.9702],
        [1.6109, 1.3775, 1.3021,  ..., 1.4832, 0.9785, 0.9685],
        ...,
        [1.5992, 1.3714, 1.2900,  ..., 1.4719, 0.9692, 0.9664],
        [1.6294, 1.3870, 1.3215,  ..., 1.5012, 0.9942, 0.9718],
        [1.6495, 1.3973, 1.3429,  ..., 1.5208, 1.0125, 0.9755]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 14.8249],
         [ 12.3529],
         [112.6519],
         ...,
         [ 39.3501],
         [ 11.4810],
         [ 13.0491]],
        [[ 13.0109],
         [  9.5768],
         [ 47.2320],
         ...,
         [ 11.5945],
         [  8.5696],
         [  7.6876]],
        [[ 12.8024],
         [  9.2797],
         [ 42.4137],
         ...,
         [  9.9669],
         [  8.2649],
         [  7.2002]],
        ...,
        [[ 12.5482],
         [  8.9238],
         [ 37.1111],
         ...,
         [  8.2608],
         [  7.9017],
         [  6.6380]],
        [[ 13.2064],
         [  9.8595],
         [ 52.1651],
         ...,
         [ 13.3323],
         [  8.8609],
         [  8.1668]],
        [[ 13.6484],
         [ 10.5132],
         [ 64.9505],
         ...,
         [ 18.1443],
         [  9.5392],
         [  9.3326]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0068, 0.9538, 3.1046,  ..., 1.5327, 0.9351, 0.9687],
        [0.9679, 0.8942, 1.7017,  ..., 0.9375, 0.8727, 0.8537],
        [0.9634, 0.8879, 1.5984,  ..., 0.9026, 0.8661, 0.8433],
        ...,
        [0.9580, 0.8802, 1.4847,  ..., 0.8660, 0.8583, 0.8312],
        [0.9721, 0.9003, 1.8075,  ..., 0.9748, 0.8789, 0.8640],
        [0.9816, 0.9143, 2.0817,  ..., 1.0780, 0.8934, 0.8890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3243],
         [22.6512],
         [25.0833],
         ...,
         [24.1412],
         [38.0507],
         [14.6543]],
        [[13.0564],
         [16.7646],
         [21.5103],
         ...,
         [12.9846],
         [22.6834],
         [13.7602]],
        [[12.7003],
         [16.1516],
         [21.1050],
         ...,
         [12.0251],
         [21.2765],
         [13.6533]],
        ...,
        [[12.2718],
         [15.4217],
         [20.6126],
         ...,
         [10.9322],
         [19.6509],
         [13.5219]],
        [[13.3940],
         [17.3512],
         [21.8914],
         ...,
         [13.9383],
         [24.0649],
         [13.8595]],
        [[14.1702],
         [18.7194],
         [22.7565],
         ...,
         [16.2979],
         [27.4182],
         [14.0813]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9683, 1.0712, 1.1108,  ..., 1.0955, 1.3217, 0.9412],
        [0.9152, 0.9755, 1.0527,  ..., 0.9140, 1.0718, 0.9266],
        [0.9094, 0.9655, 1.0461,  ..., 0.8984, 1.0489, 0.9249],
        ...,
        [0.9024, 0.9537, 1.0381,  ..., 0.8806, 1.0224, 0.9228],
        [0.9207, 0.9850, 1.0589,  ..., 0.9295, 1.0942, 0.9282],
        [0.9333, 1.0073, 1.0730,  ..., 0.9679, 1.1488, 0.9319]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[63.2294],
         [35.3501],
         [41.6549],
         ...,
         [49.0095],
         [16.0347],
         [12.1067]],
        [[55.0364],
         [32.7870],
         [35.4925],
         ...,
         [45.1818],
         [11.5805],
         [10.4823]],
        [[54.0991],
         [32.4829],
         [34.7960],
         ...,
         [44.7293],
         [11.1233],
         [10.2970]],
        ...,
        [[52.9578],
         [32.1094],
         [33.9506],
         ...,
         [44.1739],
         [10.5808],
         [10.0716]],
        [[55.9163],
         [33.0703],
         [36.1479],
         ...,
         [45.6037],
         [12.0194],
         [10.6563]],
        [[57.9079],
         [33.7040],
         [37.6372],
         ...,
         [46.5486],
         [13.0474],
         [11.0506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.6660, 1.2976, 1.3809,  ..., 1.4781, 1.0423, 0.9904],
        [1.5578, 1.2637, 1.2995,  ..., 1.4275, 0.9835, 0.9689],
        [1.5454, 1.2597, 1.2903,  ..., 1.4215, 0.9774, 0.9665],
        ...,
        [1.5303, 1.2548, 1.2791,  ..., 1.4142, 0.9702, 0.9635],
        [1.5694, 1.2675, 1.3081,  ..., 1.4331, 0.9893, 0.9712],
        [1.5957, 1.2758, 1.3278,  ..., 1.4456, 1.0028, 0.9765]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[ 16.0231],
         [ 11.2767],
         [108.9428],
         ...,
         [ 33.1832],
         [ 12.0212],
         [ 13.5725]],
        [[ 13.3803],
         [  9.2968],
         [ 47.0360],
         ...,
         [ 11.0818],
         [  8.0920],
         [  7.4656]],
        [[ 13.0851],
         [  9.0772],
         [ 42.3912],
         ...,
         [  9.6750],
         [  7.7051],
         [  6.9331]],
        ...,
        [[ 12.7277],
         [  8.8119],
         [ 37.2589],
         ...,
         [  8.1746],
         [  7.2505],
         [  6.3248]],
        [[ 13.6588],
         [  9.5042],
         [ 51.7748],
         ...,
         [ 12.5616],
         [  8.4664],
         [  7.9934]],
        [[ 14.2940],
         [  9.9784],
         [ 63.9896],
         ...,
         [ 16.5641],
         [  9.3552],
         [  9.2940]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0378, 0.9360, 3.0303,  ..., 1.4058, 0.9520, 0.9853],
        [0.9811, 0.8936, 1.7028,  ..., 0.9318, 0.8677, 0.8543],
        [0.9748, 0.8889, 1.6032,  ..., 0.9017, 0.8594, 0.8429],
        ...,
        [0.9671, 0.8832, 1.4932,  ..., 0.8695, 0.8497, 0.8298],
        [0.9871, 0.8980, 1.8045,  ..., 0.9636, 0.8758, 0.8656],
        [1.0007, 0.9082, 2.0664,  ..., 1.0494, 0.8948, 0.8935]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3859],
         [23.2151],
         [25.2301],
         ...,
         [24.2971],
         [33.2355],
         [14.4450]],
        [[12.7269],
         [16.6615],
         [20.2183],
         ...,
         [12.9969],
         [21.8186],
         [12.7780]],
        [[12.3349],
         [15.9913],
         [19.6716],
         ...,
         [12.0283],
         [20.7111],
         [12.5855]],
        ...,
        [[11.8652],
         [15.1967],
         [19.0135],
         ...,
         [10.9259],
         [19.4142],
         [12.3506]],
        [[13.0998],
         [17.3053],
         [20.7365],
         ...,
         [13.9603],
         [22.8937],
         [12.9583]],
        [[13.9618],
         [18.8152],
         [21.9276],
         ...,
         [16.3462],
         [25.4572],
         [13.3653]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9689, 1.0800, 1.1127,  ..., 1.0976, 1.2429, 0.9373],
        [0.9094, 0.9734, 1.0312,  ..., 0.9138, 1.0573, 0.9102],
        [0.9030, 0.9625, 1.0223,  ..., 0.8980, 1.0392, 0.9071],
        ...,
        [0.8954, 0.9495, 1.0116,  ..., 0.8801, 1.0181, 0.9033],
        [0.9154, 0.9838, 1.0397,  ..., 0.9294, 1.0747, 0.9131],
        [0.9295, 1.0084, 1.0590,  ..., 0.9682, 1.1164, 0.9198]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[37.8657],
         [38.6964],
         [28.1204],
         ...,
         [25.2179],
         [20.1877],
         [22.1223]],
        [[23.2904],
         [11.5794],
         [25.9502],
         ...,
         [20.1110],
         [11.3539],
         [ 9.3827]],
        [[21.9305],
         [ 9.9729],
         [25.6934],
         ...,
         [19.5555],
         [10.5732],
         [ 8.4375]],
        ...,
        [[20.3525],
         [ 8.2854],
         [25.3783],
         ...,
         [18.8872],
         [ 9.6784],
         [ 7.3957]],
        [[24.6206],
         [13.2914],
         [26.1895],
         ...,
         [20.6379],
         [12.1258],
         [10.3490]],
        [[27.8310],
         [18.0183],
         [26.7253],
         ...,
         [21.8499],
         [14.0199],
         [12.8481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2709, 1.2819, 1.1421,  ..., 1.1038, 1.0373, 1.0629],
        [1.0783, 0.9235, 1.1135,  ..., 1.0363, 0.9206, 0.8945],
        [1.0603, 0.9023, 1.1101,  ..., 1.0289, 0.9102, 0.8820],
        ...,
        [1.0395, 0.8800, 1.1059,  ..., 1.0201, 0.8984, 0.8682],
        [1.0959, 0.9462, 1.1166,  ..., 1.0432, 0.9308, 0.9073],
        [1.1383, 1.0086, 1.1237,  ..., 1.0593, 0.9558, 0.9403]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[27.8109],
         [13.6498],
         [69.8999],
         ...,
         [16.4019],
         [12.6050],
         [31.4213]],
        [[14.9696],
         [11.2039],
         [43.5827],
         ...,
         [11.5856],
         [ 8.3051],
         [14.9518]],
        [[13.8647],
         [10.9333],
         [41.1072],
         ...,
         [11.0976],
         [ 7.8871],
         [13.6385]],
        ...,
        [[12.6060],
         [10.6066],
         [38.2292],
         ...,
         [10.5204],
         [ 7.3974],
         [12.1678]],
        [[16.0677],
         [11.4596],
         [46.0004],
         ...,
         [12.0552],
         [ 8.7108],
         [16.2762]],
        [[18.7843],
         [12.0447],
         [51.8205],
         ...,
         [13.1598],
         [ 9.6772],
         [19.6288]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2906, 0.9869, 2.1931,  ..., 1.0460, 0.9645, 1.3680],
        [1.0152, 0.9345, 1.6288,  ..., 0.9427, 0.8723, 1.0149],
        [0.9915, 0.9287, 1.5757,  ..., 0.9322, 0.8634, 0.9867],
        ...,
        [0.9646, 0.9217, 1.5140,  ..., 0.9198, 0.8529, 0.9552],
        [1.0388, 0.9400, 1.6807,  ..., 0.9527, 0.8810, 1.0433],
        [1.0970, 0.9525, 1.8055,  ..., 0.9764, 0.9018, 1.1152]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7684],
         [28.3459],
         [28.1744],
         ...,
         [24.6270],
         [21.6713],
         [20.6845]],
        [[10.6563],
         [15.3784],
         [16.5177],
         ...,
         [14.7779],
         [ 9.9503],
         [ 9.3411]],
        [[ 9.9352],
         [14.2572],
         [15.4611],
         ...,
         [13.8726],
         [ 9.0363],
         [ 8.4657]],
        ...,
        [[ 9.1076],
         [12.9786],
         [14.2433],
         ...,
         [12.8256],
         [ 8.0177],
         [ 7.4923]],
        [[11.3684],
         [16.4916],
         [17.5571],
         ...,
         [15.6662],
         [10.8760],
         [10.2295]],
        [[13.1127],
         [19.2415],
         [20.0880],
         ...,
         [17.8196],
         [13.2350],
         [12.5004]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9600, 1.1158, 1.1130,  ..., 1.0553, 1.0073, 0.9912],
        [0.8281, 0.9049, 0.9234,  ..., 0.8951, 0.8166, 0.8067],
        [0.8164, 0.8867, 0.9063,  ..., 0.8804, 0.8018, 0.7925],
        ...,
        [0.8029, 0.8659, 0.8864,  ..., 0.8634, 0.7852, 0.7766],
        [0.8397, 0.9230, 0.9403,  ..., 0.9096, 0.8317, 0.8212],
        [0.8681, 0.9677, 0.9815,  ..., 0.9446, 0.8700, 0.8581]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[52.6097],
         [26.6065],
         [34.0055],
         ...,
         [32.3634],
         [14.9215],
         [15.9758]],
        [[36.5190],
         [17.9961],
         [30.6789],
         ...,
         [30.2972],
         [11.6546],
         [ 9.7530]],
        [[34.9054],
         [17.1459],
         [30.2905],
         ...,
         [30.0507],
         [11.3035],
         [ 9.1750]],
        ...,
        [[33.0014],
         [16.1461],
         [29.8151],
         ...,
         [29.7477],
         [10.8824],
         [ 8.5051]],
        [[38.0749],
         [18.8186],
         [31.0420],
         ...,
         [30.5265],
         [11.9884],
         [10.3189]],
        [[41.7468],
         [20.7688],
         [31.8585],
         ...,
         [31.0386],
         [12.7593],
         [11.6865]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.4945, 1.1509, 1.2487,  ..., 1.2270, 0.9965, 1.0104],
        [1.2819, 1.0371, 1.2047,  ..., 1.1997, 0.9533, 0.9282],
        [1.2606, 1.0259, 1.1996,  ..., 1.1964, 0.9486, 0.9205],
        ...,
        [1.2354, 1.0126, 1.1933,  ..., 1.1924, 0.9431, 0.9117],
        [1.3024, 1.0480, 1.2095,  ..., 1.2027, 0.9577, 0.9356],
        [1.3510, 1.0737, 1.2203,  ..., 1.2095, 0.9679, 0.9537]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.8409],
         [11.0298],
         [90.6627],
         ...,
         [17.1513],
         [12.5549],
         [18.1069]],
        [[14.2093],
         [ 9.3052],
         [45.8495],
         ...,
         [10.2956],
         [ 8.0992],
         [ 9.6966]],
        [[13.5513],
         [ 9.1114],
         [42.1387],
         ...,
         [ 9.6652],
         [ 7.6715],
         [ 8.9752]],
        ...,
        [[12.7768],
         [ 8.8764],
         [37.9478],
         ...,
         [ 8.9363],
         [ 7.1718],
         [ 8.1540]],
        [[14.8451],
         [ 9.4878],
         [49.5649],
         ...,
         [10.9139],
         [ 8.5153],
         [10.4140]],
        [[16.3506],
         [ 9.9034],
         [58.8635],
         ...,
         [12.4131],
         [ 9.5106],
         [12.1904]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1650, 0.9546, 2.6622,  ..., 1.0859, 0.9873, 1.1064],
        [1.0228, 0.9176, 1.7013,  ..., 0.9389, 0.8918, 0.9260],
        [1.0087, 0.9135, 1.6217,  ..., 0.9254, 0.8826, 0.9106],
        ...,
        [0.9921, 0.9084, 1.5318,  ..., 0.9097, 0.8719, 0.8929],
        [1.0364, 0.9215, 1.7809,  ..., 0.9521, 0.9007, 0.9414],
        [1.0687, 0.9305, 1.9803,  ..., 0.9843, 0.9220, 0.9795]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1309],
         [26.0649],
         [25.6693],
         ...,
         [24.7383],
         [18.3471],
         [16.2141]],
        [[11.5677],
         [15.9467],
         [18.0623],
         ...,
         [13.4629],
         [13.7993],
         [10.4821]],
        [[11.0189],
         [15.0057],
         [17.2933],
         ...,
         [12.4862],
         [13.3212],
         [ 9.9311]],
        ...,
        [[10.3737],
         [13.9146],
         [16.3842],
         ...,
         [11.3719],
         [12.7507],
         [ 9.2873]],
        [[12.0986],
         [16.8678],
         [18.8026],
         ...,
         [14.4324],
         [14.2559],
         [11.0179]],
        [[13.3581],
         [19.0929],
         [20.5453],
         ...,
         [16.8257],
         [15.3177],
         [12.2992]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9733, 1.1186, 1.1122,  ..., 1.0971, 0.9931, 0.9584],
        [0.8828, 0.9541, 0.9885,  ..., 0.9137, 0.9191, 0.8652],
        [0.8739, 0.9388, 0.9760,  ..., 0.8978, 0.9114, 0.8562],
        ...,
        [0.8634, 0.9210, 0.9612,  ..., 0.8797, 0.9021, 0.8458],
        [0.8915, 0.9690, 1.0005,  ..., 0.9294, 0.9266, 0.8739],
        [0.9120, 1.0052, 1.0289,  ..., 0.9684, 0.9438, 0.8947]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8696],
         [38.6964],
         [35.8352],
         ...,
         [38.6964],
         [38.6964],
         [22.2164]],
        [[10.5609],
         [11.5794],
         [12.2136],
         ...,
         [11.5794],
         [11.5794],
         [ 9.5940]],
        [[10.4093],
         [ 9.9729],
         [10.6900],
         ...,
         [ 9.9729],
         [ 9.9729],
         [ 8.6468]],
        ...,
        [[10.2241],
         [ 8.2854],
         [ 9.0605],
         ...,
         [ 8.2854],
         [ 8.2854],
         [ 7.6002]],
        [[10.7029],
         [13.2914],
         [13.8124],
         ...,
         [13.2914],
         [13.2914],
         [10.5603]],
        [[11.0229],
         [18.0183],
         [18.1201],
         ...,
         [18.0183],
         [18.0183],
         [13.0510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9274, 1.2819, 1.2441,  ..., 1.2819, 1.2819, 1.0641],
        [0.9101, 0.9235, 0.9319,  ..., 0.9235, 0.9235, 0.8973],
        [0.9081, 0.9023, 0.9118,  ..., 0.9023, 0.9023, 0.8848],
        ...,
        [0.9056, 0.8800, 0.8902,  ..., 0.8800, 0.8800, 0.8709],
        [0.9120, 0.9462, 0.9530,  ..., 0.9462, 0.9462, 0.9101],
        [0.9162, 1.0086, 1.0100,  ..., 1.0086, 1.0086, 0.9430]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[31.4213],
         [85.7690],
         [17.2730],
         ...,
         [31.4213],
         [30.2877],
         [24.2647]],
        [[14.9518],
         [25.1854],
         [13.8788],
         ...,
         [14.9518],
         [19.0836],
         [14.8373]],
        [[13.6385],
         [21.6407],
         [13.5079],
         ...,
         [13.6385],
         [18.0230],
         [13.9609]],
        ...,
        [[12.1678],
         [17.9268],
         [13.0614],
         ...,
         [12.1678],
         [16.7882],
         [12.9447]],
        [[16.2762],
         [28.9714],
         [14.2302],
         ...,
         [16.2762],
         [20.1181],
         [15.6953]],
        [[19.6288],
         [39.4622],
         [15.0374],
         ...,
         [19.6288],
         [22.6036],
         [17.7682]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.4460, 2.6114, 1.1426,  ..., 1.4460, 1.4217, 1.2925],
        [1.0928, 1.3123, 1.0698,  ..., 1.0928, 1.1814, 1.0904],
        [1.0647, 1.2363, 1.0619,  ..., 1.0647, 1.1587, 1.0716],
        ...,
        [1.0331, 1.1566, 1.0523,  ..., 1.0331, 1.1322, 1.0498],
        [1.1212, 1.3935, 1.0774,  ..., 1.1212, 1.2036, 1.1088],
        [1.1931, 1.6184, 1.0947,  ..., 1.1931, 1.2569, 1.1532]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[24.6210],
         [21.8503],
         [30.4226],
         ...,
         [27.4552],
         [25.2458],
         [17.2635]],
        [[ 9.5269],
         [19.7702],
         [15.5474],
         ...,
         [19.3236],
         [ 9.5617],
         [10.2093]],
        [[ 8.4705],
         [19.5269],
         [14.3077],
         ...,
         [18.5015],
         [ 8.4789],
         [ 9.5666]],
        ...,
        [[ 7.3207],
         [19.2290],
         [12.9055],
         ...,
         [17.5295],
         [ 7.3039],
         [ 8.8248]],
        [[10.6189],
         [19.9975],
         [16.7872],
         ...,
         [20.1151],
         [10.6838],
         [10.8410]],
        [[13.4918],
         [20.5084],
         [19.8838],
         ...,
         [21.9781],
         [13.6478],
         [12.3766]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0463, 1.0012, 1.1407,  ..., 1.0924, 1.0565, 0.9266],
        [0.8008, 0.9674, 0.8987,  ..., 0.9601, 0.8014, 0.8119],
        [0.7836, 0.9634, 0.8785,  ..., 0.9468, 0.7837, 0.8014],
        ...,
        [0.7649, 0.9586, 0.8557,  ..., 0.9309, 0.7646, 0.7894],
        [0.8185, 0.9711, 0.9189,  ..., 0.9730, 0.8196, 0.8222],
        [0.8653, 0.9794, 0.9692,  ..., 1.0033, 0.8678, 0.8471]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[41.0655],
         [28.3302],
         [27.5000],
         ...,
         [25.8243],
         [20.6611],
         [17.2697]],
        [[25.5928],
         [15.7943],
         [24.0868],
         ...,
         [22.8732],
         [12.0853],
         [ 9.6827]],
        [[24.1377],
         [14.6923],
         [23.6949],
         ...,
         [22.5321],
         [11.3091],
         [ 9.0135]],
        ...,
        [[22.4462],
         [13.4308],
         [23.2174],
         ...,
         [22.1159],
         [10.4146],
         [ 8.2467]],
        [[27.0139],
         [16.8850],
         [24.4544],
         ...,
         [23.1926],
         [12.8492],
         [10.3447]],
        [[30.4353],
         [19.5657],
         [25.2855],
         ...,
         [23.9134],
         [14.7099],
         [11.9699]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.3356, 1.1673, 1.1564,  ..., 1.1342, 1.0660, 1.0212],
        [1.1312, 1.0017, 1.1113,  ..., 1.0952, 0.9527, 0.9209],
        [1.1119, 0.9871, 1.1061,  ..., 1.0907, 0.9424, 0.9121],
        ...,
        [1.0896, 0.9704, 1.0998,  ..., 1.0852, 0.9306, 0.9019],
        [1.1499, 1.0161, 1.1161,  ..., 1.0994, 0.9627, 0.9296],
        [1.1952, 1.0515, 1.1271,  ..., 1.1090, 0.9873, 0.9511]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.9819],
         [14.4807],
         [59.2079],
         ...,
         [15.6105],
         [12.3504],
         [18.4688]],
        [[14.4082],
         [12.0616],
         [41.7828],
         ...,
         [10.6544],
         [ 9.5028],
         [10.9851]],
        [[13.5990],
         [11.7917],
         [40.0183],
         ...,
         [10.1623],
         [ 9.1994],
         [10.3008]],
        ...,
        [[12.6576],
         [11.4652],
         [37.9314],
         ...,
         [ 9.5831],
         [ 8.8363],
         [ 9.5105]],
        [[15.1979],
         [12.3162],
         [43.4809],
         ...,
         [11.1298],
         [ 9.7918],
         [11.6571]],
        [[17.0971],
         [12.8972],
         [47.4762],
         ...,
         [12.2553],
         [10.4609],
         [13.2890]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2351, 1.0528, 2.0120,  ..., 1.0771, 1.0072, 1.1384],
        [1.0513, 1.0010, 1.6383,  ..., 0.9708, 0.9461, 0.9779],
        [1.0339, 0.9952, 1.6005,  ..., 0.9602, 0.9396, 0.9632],
        ...,
        [1.0138, 0.9882, 1.5557,  ..., 0.9478, 0.9318, 0.9463],
        [1.0682, 1.0064, 1.6747,  ..., 0.9810, 0.9523, 0.9923],
        [1.1090, 1.0189, 1.7604,  ..., 1.0051, 0.9667, 1.0273]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.1463],
         [28.8360],
         [25.2427],
         ...,
         [23.7168],
         [15.6546],
         [16.9463]],
        [[10.8523],
         [15.3011],
         [16.8022],
         ...,
         [14.2936],
         [12.1262],
         [10.0740]],
        [[10.1832],
         [14.1467],
         [15.9766],
         ...,
         [13.4252],
         [11.7488],
         [ 9.4459]],
        ...,
        [[ 9.4098],
         [12.8342],
         [15.0081],
         ...,
         [12.4203],
         [11.2967],
         [ 8.7204]],
        [[11.5090],
         [16.4503],
         [17.6023],
         ...,
         [15.1452],
         [12.4854],
         [10.6910]],
        [[13.1022],
         [19.3011],
         [19.5051],
         ...,
         [17.2082],
         [13.3160],
         [12.1893]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 1.1515, 1.0931,  ..., 1.0682, 0.9371, 0.9581],
        [0.8590, 0.9314, 0.9558,  ..., 0.9150, 0.8797, 0.8463],
        [0.8481, 0.9126, 0.9423,  ..., 0.9008, 0.8736, 0.8361],
        ...,
        [0.8355, 0.8912, 0.9266,  ..., 0.8845, 0.8662, 0.8243],
        [0.8697, 0.9500, 0.9688,  ..., 0.9288, 0.8856, 0.8564],
        [0.8956, 0.9964, 0.9997,  ..., 0.9624, 0.8991, 0.8807]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[30.0793],
         [31.3677],
         [27.4661],
         ...,
         [25.3499],
         [19.0460],
         [18.4448]],
        [[18.2755],
         [13.7094],
         [18.6377],
         ...,
         [19.4382],
         [11.2637],
         [ 9.6097]],
        [[17.1823],
         [12.3743],
         [17.7642],
         ...,
         [18.8097],
         [10.5546],
         [ 8.8645]],
        ...,
        [[15.9159],
         [10.8966],
         [16.7367],
         ...,
         [18.0577],
         [ 9.7362],
         [ 8.0195]],
        [[19.3464],
         [15.0696],
         [19.4822],
         ...,
         [20.0372],
         [11.9605],
         [10.3531]],
        [[21.9368],
         [18.5675],
         [21.4837],
         ...,
         [21.4249],
         [13.6547],
         [12.2034]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1853, 1.2023, 1.1507,  ..., 1.1228, 1.0395, 1.0315],
        [1.0293, 0.9689, 1.0341,  ..., 1.0446, 0.9366, 0.9148],
        [1.0148, 0.9513, 1.0225,  ..., 1.0363, 0.9272, 0.9049],
        ...,
        [0.9981, 0.9318, 1.0089,  ..., 1.0264, 0.9164, 0.8937],
        [1.0434, 0.9869, 1.0452,  ..., 1.0526, 0.9458, 0.9246],
        [1.0777, 1.0331, 1.0717,  ..., 1.0709, 0.9682, 0.9490]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.9077],
         [14.3498],
         [37.3073],
         ...,
         [15.9691],
         [12.2090],
         [15.8633]],
        [[14.0037],
         [12.0670],
         [29.2132],
         ...,
         [10.5862],
         [ 9.0816],
         [ 9.7379]],
        [[13.2490],
         [11.8110],
         [28.3421],
         ...,
         [10.0609],
         [ 8.7550],
         [ 9.1670]],
        ...,
        [[12.3686],
         [11.5007],
         [27.2968],
         ...,
         [ 9.4450],
         [ 8.3658],
         [ 8.5048]],
        [[14.7385],
         [12.3084],
         [30.0413],
         ...,
         [11.0954],
         [ 9.3940],
         [10.2964]],
        [[16.4994],
         [12.8581],
         [31.9525],
         ...,
         [12.3075],
         [10.1219],
         [11.6448]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1957, 1.0336, 1.5259,  ..., 1.0683, 0.9877, 1.0660],
        [1.0262, 0.9846, 1.3523,  ..., 0.9529, 0.9206, 0.9347],
        [1.0100, 0.9792, 1.3336,  ..., 0.9416, 0.9136, 0.9225],
        ...,
        [0.9911, 0.9725, 1.3112,  ..., 0.9284, 0.9053, 0.9083],
        [1.0419, 0.9898, 1.3701,  ..., 0.9638, 0.9273, 0.9467],
        [1.0797, 1.0016, 1.4111,  ..., 0.9898, 0.9429, 0.9756]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5875],
         [28.6902],
         [28.4653],
         ...,
         [22.4657],
         [14.8858],
         [16.9597]],
        [[10.6179],
         [15.2417],
         [15.5928],
         ...,
         [15.3876],
         [13.1550],
         [10.3281]],
        [[ 9.9068],
         [14.0938],
         [14.4732],
         ...,
         [14.6834],
         [12.9552],
         [ 9.7131]],
        ...,
        [[ 9.0901],
         [12.7885],
         [13.1948],
         ...,
         [13.8540],
         [12.7115],
         [ 9.0004]],
        [[11.3196],
         [16.3843],
         [16.7031],
         ...,
         [16.0677],
         [13.3421],
         [10.9304]],
        [[13.0365],
         [19.2179],
         [19.4409],
         ...,
         [17.6767],
         [13.7646],
         [12.3868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9870, 1.1513, 1.1477,  ..., 1.0501, 0.9268, 0.9606],
        [0.8574, 0.9326, 0.9383,  ..., 0.9350, 0.8987, 0.8527],
        [0.8458, 0.9139, 0.9201,  ..., 0.9235, 0.8954, 0.8427],
        ...,
        [0.8326, 0.8927, 0.8993,  ..., 0.9100, 0.8915, 0.8311],
        [0.8688, 0.9512, 0.9564,  ..., 0.9460, 0.9017, 0.8625],
        [0.8967, 0.9973, 1.0009,  ..., 0.9722, 0.9086, 0.8862]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[29.9503],
         [26.3518],
         [27.8236],
         ...,
         [25.6663],
         [12.1314],
         [14.5236]],
        [[18.2946],
         [17.4877],
         [17.6713],
         ...,
         [23.2517],
         [10.8477],
         [10.0337]],
        [[17.2116],
         [16.6223],
         [16.7056],
         ...,
         [22.9691],
         [10.6985],
         [ 9.5847]],
        ...,
        [[15.9562],
         [15.6073],
         [15.5802],
         ...,
         [22.6230],
         [10.5163],
         [ 9.0552]],
        [[19.3548],
         [18.3268],
         [18.6122],
         ...,
         [23.5157],
         [10.9872],
         [10.4668]],
        [[21.9168],
         [20.3233],
         [20.8697],
         ...,
         [24.1090],
         [11.3016],
         [11.4900]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2069, 1.1594, 1.1788,  ..., 1.1503, 0.9714, 1.0030],
        [1.0529, 1.0422, 1.0446,  ..., 1.1184, 0.9545, 0.9437],
        [1.0386, 1.0308, 1.0319,  ..., 1.1147, 0.9525, 0.9378],
        ...,
        [1.0220, 1.0174, 1.0170,  ..., 1.1101, 0.9501, 0.9308],
        [1.0669, 1.0533, 1.0571,  ..., 1.1219, 0.9563, 0.9494],
        [1.1007, 1.0797, 1.0869,  ..., 1.1297, 0.9605, 0.9630]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.6071],
         [12.8364],
         [29.7062],
         ...,
         [14.7488],
         [12.2790],
         [12.3283]],
        [[12.0989],
         [ 9.9439],
         [21.0502],
         ...,
         [ 9.8498],
         [ 8.9276],
         [ 7.8991]],
        [[11.6338],
         [ 9.6345],
         [20.1715],
         ...,
         [ 9.3697],
         [ 8.5822],
         [ 7.4756]],
        ...,
        [[11.0812],
         [ 9.2639],
         [19.1318],
         ...,
         [ 8.8061],
         [ 8.1721],
         [ 6.9814]],
        [[12.5449],
         [10.2383],
         [21.8954],
         ...,
         [10.3149],
         [ 9.2588],
         [ 8.3113]],
        [[13.5880],
         [10.9193],
         [23.8824],
         ...,
         [11.4204],
         [10.0338],
         [ 9.2988]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0575, 0.9767, 1.3384,  ..., 1.0177, 0.9647, 0.9658],
        [0.9609, 0.9146, 1.1528,  ..., 0.9126, 0.8929, 0.8708],
        [0.9509, 0.9080, 1.1340,  ..., 0.9023, 0.8855, 0.8617],
        ...,
        [0.9390, 0.9001, 1.1117,  ..., 0.8903, 0.8767, 0.8511],
        [0.9704, 0.9210, 1.1709,  ..., 0.9226, 0.9000, 0.8796],
        [0.9928, 0.9356, 1.2135,  ..., 0.9463, 0.9166, 0.9008]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2174],
         [28.6208],
         [29.4960],
         ...,
         [21.8261],
         [24.8844],
         [17.7029]],
        [[11.1915],
         [15.3044],
         [15.4550],
         ...,
         [14.9436],
         [20.8551],
         [12.2494]],
        [[10.6104],
         [14.1632],
         [14.2667],
         ...,
         [14.2590],
         [20.4041],
         [11.7036]],
        ...,
        [[ 9.9308],
         [12.8644],
         [12.9180],
         ...,
         [13.4528],
         [19.8577],
         [11.0597]],
        [[11.7563],
         [16.4394],
         [16.6398],
         ...,
         [15.6048],
         [21.2804],
         [12.7759]],
        [[13.1054],
         [19.2508],
         [19.5856],
         ...,
         [17.1692],
         [22.2499],
         [14.0193]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9834, 1.1689, 1.1831,  ..., 1.0584, 1.1081, 0.9913],
        [0.8854, 0.9523, 0.9547,  ..., 0.9464, 1.0426, 0.9026],
        [0.8760, 0.9337, 0.9354,  ..., 0.9353, 1.0352, 0.8937],
        ...,
        [0.8649, 0.9126, 0.9135,  ..., 0.9222, 1.0264, 0.8833],
        [0.8946, 0.9708, 0.9740,  ..., 0.9572, 1.0495, 0.9112],
        [0.9165, 1.0165, 1.0219,  ..., 0.9826, 1.0653, 0.9314]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.8224],
         [26.4452],
         [28.5598],
         ...,
         [28.0713],
         [12.5648],
         [11.4964]],
        [[16.1152],
         [23.9701],
         [16.2846],
         ...,
         [26.4921],
         [10.3504],
         [10.7590]],
        [[15.2016],
         [23.6802],
         [15.1907],
         ...,
         [26.3029],
         [10.1050],
         [10.6710]],
        ...,
        [[14.1393],
         [23.3254],
         [13.9345],
         ...,
         [26.0699],
         [ 9.8084],
         [10.5629]],
        [[17.0074],
         [24.2408],
         [17.3645],
         ...,
         [26.6679],
         [10.5823],
         [10.8408]],
        [[19.1547],
         [24.8490],
         [20.0074],
         ...,
         [27.0602],
         [11.1126],
         [11.0235]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1637, 1.1719, 1.1999,  ..., 1.1934, 0.9885, 0.9743],
        [1.0354, 1.1392, 1.0376,  ..., 1.1725, 0.9592, 0.9646],
        [1.0233, 1.1354, 1.0232,  ..., 1.1700, 0.9560, 0.9634],
        ...,
        [1.0093, 1.1307, 1.0066,  ..., 1.1669, 0.9520, 0.9620],
        [1.0472, 1.1428, 1.0519,  ..., 1.1748, 0.9623, 0.9657],
        [1.0756, 1.1508, 1.0868,  ..., 1.1800, 0.9693, 0.9681]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.8322],
         [12.6069],
         [16.5696],
         ...,
         [13.4607],
         [12.9029],
         [12.5181]],
        [[ 9.4861],
         [ 9.2449],
         [13.4121],
         ...,
         [11.5261],
         [ 7.8543],
         [10.7881]],
        [[ 9.0534],
         [ 8.8966],
         [13.0657],
         ...,
         [11.3068],
         [ 7.3862],
         [10.5913]],
        ...,
        [[ 8.5437],
         [ 8.4826],
         [12.6481],
         ...,
         [11.0405],
         [ 6.8438],
         [10.3520]],
        [[ 9.9040],
         [ 9.5785],
         [13.7401],
         ...,
         [11.7323],
         [ 8.3128],
         [10.9731]],
        [[10.8923],
         [10.3578],
         [14.4926],
         ...,
         [12.2005],
         [ 9.4213],
         [11.3925]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9947, 0.9684, 1.0534,  ..., 0.9867, 0.9748, 0.9665],
        [0.9015, 0.8963, 0.9857,  ..., 0.9453, 0.8665, 0.9294],
        [0.8922, 0.8889, 0.9783,  ..., 0.9406, 0.8565, 0.9252],
        ...,
        [0.8813, 0.8800, 0.9693,  ..., 0.9348, 0.8449, 0.9201],
        [0.9105, 0.9035, 0.9927,  ..., 0.9497, 0.8764, 0.9334],
        [0.9317, 0.9202, 1.0089,  ..., 0.9597, 0.9001, 0.9424]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.2728],
         [28.2906],
         [30.2233],
         ...,
         [21.1943],
         [38.5008],
         [20.0702]],
        [[11.8210],
         [15.4706],
         [15.5958],
         ...,
         [14.9914],
         [35.6358],
         [15.4810]],
        [[11.3625],
         [14.3569],
         [14.3694],
         ...,
         [14.3624],
         [35.2963],
         [14.9913]],
        ...,
        [[10.8180],
         [13.0853],
         [12.9805],
         ...,
         [13.6183],
         [34.8794],
         [14.4051]],
        [[12.2608],
         [16.5755],
         [16.8208],
         ...,
         [15.5965],
         [35.9521],
         [15.9472]],
        [[13.2900],
         [19.3008],
         [19.8751],
         ...,
         [17.0197],
         [36.6601],
         [17.0263]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9843, 1.1798, 1.2112,  ..., 1.0644, 1.3459, 1.0461],
        [0.9119, 0.9713, 0.9733,  ..., 0.9635, 1.2993, 0.9715],
        [0.9045, 0.9532, 0.9534,  ..., 0.9533, 1.2938, 0.9635],
        ...,
        [0.8956, 0.9325, 0.9308,  ..., 0.9412, 1.2870, 0.9540],
        [0.9191, 0.9893, 0.9933,  ..., 0.9733, 1.3044, 0.9791],
        [0.9358, 1.0336, 1.0429,  ..., 0.9965, 1.3159, 0.9966]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[28.1736],
         [25.6271],
         [28.0963],
         ...,
         [26.3978],
         [11.4925],
         [12.9488]],
        [[17.3287],
         [19.8377],
         [17.0647],
         ...,
         [24.5596],
         [10.7383],
         [10.3155]],
        [[16.3169],
         [19.2188],
         [16.0432],
         ...,
         [24.3411],
         [10.6485],
         [10.0292]],
        ...,
        [[15.1428],
         [18.4773],
         [14.8600],
         ...,
         [24.0727],
         [10.5380],
         [ 9.6849]],
        [[18.3185],
         [20.4268],
         [18.0654],
         ...,
         [24.7630],
         [10.8220],
         [10.5870]],
        [[20.7072],
         [21.7895],
         [20.4861],
         ...,
         [25.2179],
         [11.0088],
         [11.2118]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1961, 1.1624, 1.1950,  ..., 1.1726, 0.9756, 0.9949],
        [1.0527, 1.0859, 1.0492,  ..., 1.1483, 0.9656, 0.9601],
        [1.0394, 1.0777, 1.0357,  ..., 1.1454, 0.9645, 0.9563],
        ...,
        [1.0238, 1.0679, 1.0201,  ..., 1.1419, 0.9630, 0.9517],
        [1.0658, 1.0937, 1.0625,  ..., 1.1510, 0.9667, 0.9636],
        [1.0974, 1.1117, 1.0945,  ..., 1.1570, 0.9692, 0.9719]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.3520],
         [12.7203],
         [23.8089],
         ...,
         [13.8728],
         [12.5556],
         [12.5214]],
        [[10.8941],
         [ 9.6360],
         [17.3306],
         ...,
         [10.2532],
         [ 8.3910],
         [ 8.6101]],
        [[10.4412],
         [ 9.3104],
         [16.6625],
         ...,
         [ 9.8765],
         [ 7.9826],
         [ 8.2201]],
        ...,
        [[ 9.9052],
         [ 8.9215],
         [15.8689],
         ...,
         [ 9.4282],
         [ 7.5033],
         [ 7.7604]],
        [[11.3297],
         [ 9.9467],
         [17.9712],
         ...,
         [10.6137],
         [ 8.7865],
         [ 8.9867]],
        [[12.3534],
         [10.6683],
         [19.4697],
         ...,
         [11.4546],
         [ 9.7265],
         [ 9.8768]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0291, 0.9727, 1.2104,  ..., 0.9974, 0.9691, 0.9684],
        [0.9335, 0.9065, 1.0715,  ..., 0.9198, 0.8798, 0.8845],
        [0.9238, 0.8995, 1.0572,  ..., 0.9117, 0.8711, 0.8762],
        ...,
        [0.9123, 0.8912, 1.0402,  ..., 0.9021, 0.8608, 0.8663],
        [0.9428, 0.9132, 1.0853,  ..., 0.9275, 0.8883, 0.8926],
        [0.9648, 0.9287, 1.1174,  ..., 0.9455, 0.9085, 0.9117]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.7834],
         [28.4909],
         [29.8701],
         ...,
         [21.5548],
         [31.2041],
         [18.4939]],
        [[11.4401],
         [15.3682],
         [15.4744],
         ...,
         [14.9639],
         [25.7938],
         [13.3865]],
        [[10.9100],
         [14.2376],
         [14.2645],
         ...,
         [14.3029],
         [25.1930],
         [12.8615]],
        ...,
        [[10.2860],
         [12.9493],
         [12.8935],
         ...,
         [13.5230],
         [24.4666],
         [12.2384]],
        [[11.9523],
         [16.4915],
         [16.6823],
         ...,
         [15.6012],
         [26.3613],
         [13.8902]],
        [[13.1653],
         [19.2695],
         [19.6919],
         ...,
         [17.1053],
         [27.6581],
         [15.0698]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9843, 1.1748, 1.1972,  ..., 1.0619, 1.2189, 1.0122],
        [0.8974, 0.9613, 0.9631,  ..., 0.9548, 1.1309, 0.9291],
        [0.8888, 0.9429, 0.9434,  ..., 0.9440, 1.1211, 0.9206],
        ...,
        [0.8787, 0.9220, 0.9211,  ..., 0.9313, 1.1093, 0.9104],
        [0.9058, 0.9796, 0.9827,  ..., 0.9651, 1.1401, 0.9373],
        [0.9255, 1.0248, 1.0317,  ..., 0.9896, 1.1612, 0.9565]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.0181],
         [27.0354],
         [27.4657],
         ...,
         [28.5784],
         [14.4199],
         [11.7746]],
        [[13.8930],
         [23.1397],
         [17.7015],
         ...,
         [26.9044],
         [ 9.9647],
         [10.8282]],
        [[13.1990],
         [22.6983],
         [16.7646],
         ...,
         [26.7041],
         [ 9.5191],
         [10.7165]],
        ...,
        [[12.3855],
         [22.1621],
         [15.6704],
         ...,
         [26.4575],
         [ 8.9937],
         [10.5795]],
        [[14.5662],
         [23.5549],
         [18.6129],
         ...,
         [27.0906],
         [10.3946],
         [10.9324]],
        [[16.1692],
         [24.4976],
         [20.7934],
         ...,
         [27.5062],
         [11.4099],
         [11.1659]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0882, 1.1677, 1.1734,  ..., 1.1881, 1.0010, 0.9661],
        [0.9941, 1.1163, 1.0444,  ..., 1.1660, 0.9421, 0.9536],
        [0.9849, 1.1104, 1.0320,  ..., 1.1634, 0.9362, 0.9521],
        ...,
        [0.9741, 1.1033, 1.0175,  ..., 1.1601, 0.9293, 0.9503],
        [1.0029, 1.1217, 1.0564,  ..., 1.1685, 0.9478, 0.9549],
        [1.0241, 1.1342, 1.0852,  ..., 1.1740, 0.9612, 0.9580]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8032],
         [12.5215],
         [15.3338],
         ...,
         [12.0600],
         [13.3473],
         [12.4745]],
        [[ 8.1823],
         [ 9.0042],
         [12.6704],
         ...,
         [10.6966],
         [ 7.4969],
         [ 8.5382]],
        [[ 7.7412],
         [ 8.6440],
         [12.3747],
         ...,
         [10.5389],
         [ 6.9802],
         [ 8.1467]],
        ...,
        [[ 7.2266],
         [ 8.2170],
         [12.0172],
         ...,
         [10.3464],
         [ 6.3882],
         [ 7.6857]],
        [[ 8.6119],
         [ 9.3500],
         [12.9497],
         ...,
         [10.8443],
         [ 8.0078],
         [ 8.9163]],
        [[ 9.6413],
         [10.1608],
         [13.5880],
         ...,
         [11.1774],
         [ 9.2616],
         [ 9.8109]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9716, 0.9656, 1.0259,  ..., 0.9557, 0.9833, 0.9646],
        [0.8725, 0.8902, 0.9688,  ..., 0.9265, 0.8579, 0.8802],
        [0.8631, 0.8824, 0.9624,  ..., 0.9231, 0.8468, 0.8718],
        ...,
        [0.8521, 0.8733, 0.9548,  ..., 0.9190, 0.8341, 0.8619],
        [0.8818, 0.8976, 0.9748,  ..., 0.9296, 0.8688, 0.8883],
        [0.9038, 0.9150, 0.9885,  ..., 0.9368, 0.8957, 0.9075]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9130],
         [29.0097],
         [30.1001],
         ...,
         [22.0769],
         [31.2892],
         [16.8978]],
        [[12.2803],
         [15.1360],
         [15.6495],
         ...,
         [15.3756],
         [25.6828],
         [14.2234]],
        [[11.8926],
         [13.9649],
         [14.4324],
         ...,
         [14.7023],
         [25.0627],
         [13.9232]],
        ...,
        [[11.4284],
         [12.6365],
         [13.0524],
         ...,
         [13.9074],
         [24.3138],
         [13.5595]],
        [[12.6495],
         [16.3043],
         [16.8642],
         ...,
         [16.0246],
         [26.2690],
         [14.5062]],
        [[13.5037],
         [19.2111],
         [19.8887],
         ...,
         [17.5553],
         [27.6102],
         [15.1504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1923, 1.2100,  ..., 1.0795, 1.2293, 0.9953],
        [0.9202, 0.9666, 0.9750,  ..., 0.9705, 1.1381, 0.9518],
        [0.9138, 0.9476, 0.9552,  ..., 0.9595, 1.1281, 0.9469],
        ...,
        [0.9063, 0.9259, 0.9327,  ..., 0.9466, 1.1159, 0.9410],
        [0.9262, 0.9856, 0.9947,  ..., 0.9811, 1.1477, 0.9564],
        [0.9401, 1.0329, 1.0439,  ..., 1.0059, 1.1695, 0.9668]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6335],
         [31.6319],
         [26.9483],
         ...,
         [26.9518],
         [13.7656],
         [15.3973]],
        [[10.6534],
         [28.3060],
         [17.4146],
         ...,
         [24.5846],
         [10.1593],
         [11.0039]],
        [[10.5380],
         [27.9194],
         [16.4984],
         ...,
         [24.3064],
         [ 9.7844],
         [10.5557]],
        ...,
        [[10.3965],
         [27.4469],
         [15.4279],
         ...,
         [23.9655],
         [ 9.3382],
         [10.0247]],
        [[10.7611],
         [28.6677],
         [18.3056],
         ...,
         [24.8442],
         [10.5182],
         [11.4346]],
        [[11.0026],
         [29.4822],
         [20.4364],
         ...,
         [25.4269],
         [11.3557],
         [12.4456]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9715, 1.2358, 1.1739,  ..., 1.1740, 0.9997, 1.0213],
        [0.9586, 1.1919, 1.0479,  ..., 1.1427, 0.9521, 0.9632],
        [0.9571, 1.1868, 1.0358,  ..., 1.1390, 0.9471, 0.9573],
        ...,
        [0.9552, 1.1805, 1.0217,  ..., 1.1345, 0.9412, 0.9503],
        [0.9600, 1.1967, 1.0597,  ..., 1.1461, 0.9568, 0.9689],
        [0.9632, 1.2074, 1.0879,  ..., 1.1538, 0.9679, 0.9823]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0813],
         [12.7703],
         [12.5467],
         ...,
         [11.3195],
         [13.2808],
         [12.2197]],
        [[10.1730],
         [ 9.7081],
         [ 7.9001],
         ...,
         [ 9.3644],
         [ 7.5223],
         [ 9.0574]],
        [[ 9.9588],
         [ 9.3842],
         [ 7.4604],
         ...,
         [ 9.1471],
         [ 7.0112],
         [ 8.7278]],
        ...,
        [[ 9.6992],
         [ 8.9971],
         [ 6.9485],
         ...,
         [ 8.8845],
         [ 6.4248],
         [ 8.3354]],
        [[10.3749],
         [10.0171],
         [ 8.3289],
         ...,
         [ 9.5695],
         [ 8.0272],
         [ 9.3728]],
        [[10.8346],
         [10.7342],
         [ 9.3596],
         ...,
         [10.0382],
         [ 9.2646],
         [10.1081]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9572, 0.9720, 0.9672,  ..., 0.9409, 0.9829, 0.9602],
        [0.9163, 0.9063, 0.8675,  ..., 0.8989, 0.8594, 0.8923],
        [0.9117, 0.8994, 0.8581,  ..., 0.8943, 0.8485, 0.8853],
        ...,
        [0.9061, 0.8911, 0.8471,  ..., 0.8886, 0.8359, 0.8769],
        [0.9206, 0.9129, 0.8767,  ..., 0.9033, 0.8703, 0.8991],
        [0.9305, 0.9283, 0.8988,  ..., 0.9134, 0.8968, 0.9149]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.5308],
         [29.0604],
         [28.2506],
         ...,
         [22.0039],
         [27.2244],
         [16.5820]],
        [[14.4043],
         [15.2688],
         [16.4249],
         ...,
         [15.7599],
         [22.4878],
         [15.1108]],
        [[14.2706],
         [14.0996],
         [15.3585],
         ...,
         [15.1220],
         [21.9620],
         [14.9381]],
        ...,
        [[14.1065],
         [12.7721],
         [14.1306],
         ...,
         [14.3661],
         [21.3264],
         [14.7263]],
        [[14.5288],
         [16.4342],
         [17.4751],
         ...,
         [16.3726],
         [22.9845],
         [15.2721]],
        [[14.8073],
         [19.3301],
         [20.0363],
         ...,
         [17.8104],
         [24.1195],
         [15.6342]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9751, 1.1952, 1.1820,  ..., 1.0804, 1.1653, 0.9922],
        [0.9568, 0.9709, 0.9897,  ..., 0.9789, 1.0883, 0.9683],
        [0.9546, 0.9519, 0.9723,  ..., 0.9685, 1.0797, 0.9655],
        ...,
        [0.9520, 0.9303, 0.9524,  ..., 0.9562, 1.0694, 0.9620],
        [0.9588, 0.9898, 1.0068,  ..., 0.9888, 1.0964, 0.9709],
        [0.9634, 1.0369, 1.0484,  ..., 1.0122, 1.1148, 0.9768]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6542],
         [28.1551],
         [26.3524],
         ...,
         [26.1180],
         [11.5344],
         [13.5898]],
        [[10.6443],
         [24.9942],
         [18.9661],
         ...,
         [22.7464],
         [10.8003],
         [10.9070]],
        [[10.5255],
         [24.6284],
         [18.2094],
         ...,
         [22.3605],
         [10.7127],
         [10.6141]],
        ...,
        [[10.3799],
         [24.1819],
         [17.3121],
         ...,
         [21.8906],
         [10.6050],
         [10.2614]],
        [[10.7551],
         [25.3367],
         [19.6926],
         ...,
         [23.1086],
         [10.8818],
         [11.1846]],
        [[11.0038],
         [26.1091],
         [21.3957],
         ...,
         [23.9283],
         [11.0638],
         [11.8224]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9708, 1.1889, 1.1651,  ..., 1.1620, 0.9692, 0.9964],
        [0.9575, 1.1471, 1.0675,  ..., 1.1174, 0.9595, 0.9610],
        [0.9559, 1.1423, 1.0575,  ..., 1.1123, 0.9584, 0.9571],
        ...,
        [0.9540, 1.1364, 1.0456,  ..., 1.1061, 0.9570, 0.9524],
        [0.9589, 1.1517, 1.0771,  ..., 1.1222, 0.9606, 0.9646],
        [0.9622, 1.1619, 1.0996,  ..., 1.1330, 0.9630, 0.9731]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6400],
         [12.9496],
         [12.5354],
         ...,
         [10.0892],
         [13.0538],
         [12.9444]],
        [[ 8.1680],
         [10.0762],
         [ 9.1152],
         ...,
         [ 9.0067],
         [ 7.6830],
         [ 7.8025]],
        [[ 7.7382],
         [ 9.7680],
         [ 8.7627],
         ...,
         [ 8.8811],
         [ 7.1950],
         [ 7.3286]],
        ...,
        [[ 7.2361],
         [ 9.3986],
         [ 8.3441],
         ...,
         [ 8.7276],
         [ 6.6323],
         [ 6.7802]],
        [[ 8.5859],
         [10.3693],
         [ 9.4533],
         ...,
         [ 9.1243],
         [ 8.1628],
         [ 8.2672]],
        [[ 9.5854],
         [11.0466],
         [10.2442],
         ...,
         [ 9.3892],
         [ 9.3303],
         [ 9.3930]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9725, 0.9791, 0.9703,  ..., 0.9178, 0.9814, 0.9790],
        [0.8766, 0.9175, 0.8969,  ..., 0.8946, 0.8662, 0.8688],
        [0.8674, 0.9109, 0.8894,  ..., 0.8919, 0.8557, 0.8586],
        ...,
        [0.8566, 0.9030, 0.8804,  ..., 0.8886, 0.8437, 0.8468],
        [0.8856, 0.9238, 0.9042,  ..., 0.8971, 0.8765, 0.8787],
        [0.9070, 0.9383, 0.9211,  ..., 0.9028, 0.9015, 0.9029]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9897],
         [28.9469],
         [28.9904],
         ...,
         [22.3853],
         [22.0344],
         [14.8880]],
        [[12.0402],
         [15.3716],
         [16.1732],
         ...,
         [15.5480],
         [18.4212],
         [13.5233]],
        [[11.7180],
         [14.2132],
         [15.0460],
         ...,
         [14.8621],
         [18.0173],
         [13.3633]],
        ...,
        [[11.3301],
         [12.8961],
         [13.7555],
         ...,
         [14.0526],
         [17.5283],
         [13.1673]],
        [[12.3455],
         [16.5248],
         [17.2887],
         ...,
         [16.2093],
         [18.8022],
         [13.6727]],
        [[13.0469],
         [19.3847],
         [20.0301],
         ...,
         [17.7698],
         [19.6709],
         [14.0082]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9686, 1.1956, 1.1963,  ..., 1.0889, 1.0832, 0.9670],
        [0.9206, 0.9748, 0.9879,  ..., 0.9777, 1.0244, 0.9448],
        [0.9154, 0.9560, 0.9695,  ..., 0.9665, 1.0178, 0.9422],
        ...,
        [0.9091, 0.9346, 0.9485,  ..., 0.9534, 1.0099, 0.9390],
        [0.9256, 0.9936, 1.0060,  ..., 0.9884, 1.0306, 0.9472],
        [0.9370, 1.0401, 1.0506,  ..., 1.0138, 1.0447, 0.9526]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5674],
         [27.9652],
         [26.0752],
         ...,
         [26.2808],
         [11.6661],
         [13.4086]],
        [[10.6855],
         [25.5864],
         [20.3543],
         ...,
         [23.6507],
         [10.6391],
         [10.8989]],
        [[10.5811],
         [25.3064],
         [19.7396],
         ...,
         [23.3440],
         [10.5185],
         [10.6229]],
        ...,
        [[10.4530],
         [24.9631],
         [19.0025],
         ...,
         [22.9689],
         [10.3706],
         [10.2899]],
        [[10.7828],
         [25.8477],
         [20.9387],
         ...,
         [23.9375],
         [10.7518],
         [11.1601]],
        [[11.0006],
         [26.4337],
         [22.2884],
         ...,
         [24.5826],
         [11.0046],
         [11.7589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9752, 1.1919, 1.1669,  ..., 1.1696, 0.9765, 0.9995],
        [0.9635, 1.1604, 1.0913,  ..., 1.1348, 0.9629, 0.9663],
        [0.9621, 1.1567, 1.0832,  ..., 1.1308, 0.9613, 0.9627],
        ...,
        [0.9604, 1.1522, 1.0734,  ..., 1.1258, 0.9593, 0.9583],
        [0.9648, 1.1639, 1.0990,  ..., 1.1386, 0.9644, 0.9698],
        [0.9677, 1.1716, 1.1168,  ..., 1.1472, 0.9677, 0.9777]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5881],
         [12.6603],
         [12.5701],
         ...,
         [10.1366],
         [13.0453],
         [12.7644]],
        [[ 8.3419],
         [ 9.4825],
         [ 9.3519],
         ...,
         [ 9.2620],
         [ 7.6913],
         [ 8.0484]],
        [[ 7.9276],
         [ 9.1492],
         [ 9.0157],
         ...,
         [ 9.1591],
         [ 7.2044],
         [ 7.6017]],
        ...,
        [[ 7.4419],
         [ 8.7518],
         [ 8.6152],
         ...,
         [ 9.0330],
         [ 6.6427],
         [ 7.0817]],
        [[ 8.7435],
         [ 9.8009],
         [ 9.6734],
         ...,
         [ 9.3580],
         [ 8.1701],
         [ 8.4840]],
        [[ 9.6996],
         [10.5420],
         [10.4224],
         ...,
         [ 9.5734],
         [ 9.3345],
         [ 9.5304]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9738, 0.9753, 0.9734,  ..., 0.9212, 0.9836, 0.9776],
        [0.8827, 0.9072, 0.9044,  ..., 0.9025, 0.8688, 0.8764],
        [0.8738, 0.9000, 0.8972,  ..., 0.9002, 0.8583, 0.8669],
        ...,
        [0.8634, 0.8915, 0.8886,  ..., 0.8975, 0.8463, 0.8557],
        [0.8913, 0.9140, 0.9113,  ..., 0.9045, 0.8790, 0.8858],
        [0.9118, 0.9299, 0.9273,  ..., 0.9091, 0.9040, 0.9082]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7701],
         [28.6180],
         [28.8444],
         ...,
         [22.6413],
         [22.0967],
         [14.9796]],
        [[12.4616],
         [15.5023],
         [16.2696],
         ...,
         [15.2705],
         [18.5050],
         [13.9747]],
        [[12.2022],
         [14.3694],
         [15.1563],
         ...,
         [14.5438],
         [18.1031],
         [13.8551]],
        ...,
        [[11.8877],
         [13.0776],
         [13.8798],
         ...,
         [13.6898],
         [17.6164],
         [13.7081]],
        [[12.7060],
         [16.6274],
         [17.3699],
         ...,
         [15.9735],
         [18.8840],
         [14.0861]],
        [[13.2625],
         [19.4074],
         [20.0685],
         ...,
         [17.6416],
         [19.7480],
         [14.3349]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9688, 1.1940, 1.1977,  ..., 1.0968, 1.0879, 0.9722],
        [0.9312, 0.9807, 0.9931,  ..., 0.9769, 1.0295, 0.9558],
        [0.9270, 0.9622, 0.9750,  ..., 0.9651, 1.0230, 0.9539],
        ...,
        [0.9219, 0.9412, 0.9543,  ..., 0.9512, 1.0150, 0.9515],
        [0.9352, 0.9990, 1.0110,  ..., 0.9883, 1.0357, 0.9576],
        [0.9442, 1.0442, 1.0549,  ..., 1.0155, 1.0497, 0.9617]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.4883],
         [27.8004],
         [26.3138],
         ...,
         [26.2541],
         [11.5368],
         [12.8293]],
        [[10.7442],
         [25.5571],
         [23.0995],
         ...,
         [23.9998],
         [10.7030],
         [10.8750]],
        [[10.6555],
         [25.2923],
         [22.7300],
         ...,
         [23.7345],
         [10.6041],
         [10.6548]],
        ...,
        [[10.5464],
         [24.9674],
         [22.2795],
         ...,
         [23.4094],
         [10.4826],
         [10.3877]],
        [[10.8267],
         [25.8040],
         [23.4461],
         ...,
         [24.2473],
         [10.7952],
         [11.0824]],
        [[11.0111],
         [26.3574],
         [24.2292],
         ...,
         [24.8025],
         [11.0013],
         [11.5541]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9813, 1.1969, 1.1772,  ..., 1.1765, 0.9820, 0.9990],
        [0.9715, 1.1672, 1.1348,  ..., 1.1467, 0.9709, 0.9732],
        [0.9703, 1.1637, 1.1299,  ..., 1.1432, 0.9696, 0.9703],
        ...,
        [0.9689, 1.1594, 1.1239,  ..., 1.1389, 0.9680, 0.9668],
        [0.9726, 1.1705, 1.1393,  ..., 1.1499, 0.9722, 0.9760],
        [0.9750, 1.1778, 1.1497,  ..., 1.1573, 0.9749, 0.9822]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5425],
         [12.2356],
         [12.6500],
         ...,
         [10.0942],
         [12.9621],
         [12.7502]],
        [[ 8.4326],
         [ 9.1330],
         [ 9.8159],
         ...,
         [ 9.3841],
         [ 7.7815],
         [ 8.0699]],
        [[ 8.0282],
         [ 8.8083],
         [ 9.5125],
         ...,
         [ 9.2997],
         [ 7.3051],
         [ 7.6257]],
        ...,
        [[ 7.5531],
         [ 8.4213],
         [ 9.1489],
         ...,
         [ 9.1961],
         [ 6.7543],
         [ 7.1082]],
        [[ 8.8241],
         [ 9.4435],
         [10.1046],
         ...,
         [ 9.4627],
         [ 8.2488],
         [ 8.5030]],
        [[ 9.7533],
         [10.1663],
         [10.7721],
         ...,
         [ 9.6384],
         [ 9.3816],
         [ 9.5427]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9757, 0.9691, 0.9780,  ..., 0.9232, 0.9847, 0.9801],
        [0.8875, 0.9025, 0.9172,  ..., 0.9079, 0.8736, 0.8798],
        [0.8789, 0.8956, 0.9107,  ..., 0.9061, 0.8634, 0.8702],
        ...,
        [0.8687, 0.8873, 0.9029,  ..., 0.9039, 0.8515, 0.8591],
        [0.8959, 0.9092, 0.9234,  ..., 0.9096, 0.8836, 0.8890],
        [0.9158, 0.9247, 0.9377,  ..., 0.9134, 0.9079, 0.9113]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5980],
         [27.5781],
         [28.4446],
         ...,
         [23.1725],
         [20.3799],
         [14.8610]],
        [[12.9794],
         [15.8751],
         [16.4240],
         ...,
         [14.9463],
         [17.2549],
         [14.0990]],
        [[12.7919],
         [14.8260],
         [15.3446],
         ...,
         [14.1567],
         [16.9030],
         [14.0074]],
        ...,
        [[12.5630],
         [13.6199],
         [14.1028],
         ...,
         [13.2343],
         [16.4762],
         [13.8946]],
        [[13.1549],
         [16.9093],
         [17.4880],
         ...,
         [15.7144],
         [17.5863],
         [14.1841]],
        [[13.5506],
         [19.4363],
         [20.0860],
         ...,
         [17.5520],
         [18.3403],
         [14.3736]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 1.1887, 1.2028,  ..., 1.1170, 1.0716, 0.9818],
        [0.9512, 0.9983, 1.0073,  ..., 0.9832, 1.0208, 0.9695],
        [0.9482, 0.9813, 0.9897,  ..., 0.9704, 1.0151, 0.9680],
        ...,
        [0.9445, 0.9617, 0.9695,  ..., 0.9554, 1.0081, 0.9661],
        [0.9541, 1.0152, 1.0246,  ..., 0.9957, 1.0262, 0.9708],
        [0.9605, 1.0563, 1.0668,  ..., 1.0256, 1.0384, 0.9739]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.4870],
         [27.0238],
         [26.7120],
         ...,
         [25.9658],
         [11.5642],
         [12.0583]],
        [[10.7695],
         [24.7629],
         [24.3255],
         ...,
         [23.8005],
         [10.8205],
         [10.8444]],
        [[10.6839],
         [24.4965],
         [24.0453],
         ...,
         [23.5454],
         [10.7318],
         [10.7029]],
        ...,
        [[10.5785],
         [24.1698],
         [23.7020],
         ...,
         [23.2325],
         [10.6228],
         [10.5299]],
        [[10.8492],
         [25.0114],
         [24.5871],
         ...,
         [24.0386],
         [10.9030],
         [10.9767]],
        [[11.0271],
         [25.5686],
         [25.1743],
         ...,
         [24.5723],
         [11.0873],
         [11.2744]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9961, 1.2014, 1.1973,  ..., 1.1874, 0.9971, 1.0036],
        [0.9866, 1.1715, 1.1658,  ..., 1.1588, 0.9873, 0.9876],
        [0.9855, 1.1680, 1.1621,  ..., 1.1554, 0.9861, 0.9857],
        ...,
        [0.9841, 1.1637, 1.1575,  ..., 1.1513, 0.9847, 0.9834],
        [0.9877, 1.1748, 1.1692,  ..., 1.1620, 0.9884, 0.9893],
        [0.9900, 1.1822, 1.1770,  ..., 1.1690, 0.9908, 0.9933]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7367],
         [11.8168],
         [12.1836],
         ...,
         [10.1093],
         [12.7443],
         [12.7189]],
        [[ 8.0906],
         [ 8.8943],
         [ 9.4091],
         ...,
         [ 9.3583],
         [ 8.0790],
         [ 8.1183]],
        [[ 7.6487],
         [ 8.5870],
         [ 9.1129],
         ...,
         [ 9.2693],
         [ 7.6358],
         [ 7.6794]],
        ...,
        [[ 7.1336],
         [ 8.2202],
         [ 8.7582],
         ...,
         [ 9.1600],
         [ 7.1193],
         [ 7.1676]],
        [[ 8.5213],
         [ 9.1879],
         [ 9.6911],
         ...,
         [ 9.4412],
         [ 8.5110],
         [ 8.5458]],
        [[ 9.5545],
         [ 9.8703],
         [10.3437],
         ...,
         [ 9.6268],
         [ 9.5478],
         [ 9.5703]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9892, 0.9695, 0.9773,  ..., 0.9329, 0.9894, 0.9888],
        [0.8896, 0.9068, 0.9179,  ..., 0.9168, 0.8893, 0.8902],
        [0.8801, 0.9002, 0.9115,  ..., 0.9149, 0.8798, 0.8808],
        ...,
        [0.8691, 0.8924, 0.9039,  ..., 0.9125, 0.8687, 0.8698],
        [0.8988, 0.9131, 0.9239,  ..., 0.9185, 0.8986, 0.8993],
        [0.9210, 0.9277, 0.9379,  ..., 0.9225, 0.9208, 0.9213]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5061],
         [26.9808],
         [27.6711],
         ...,
         [23.5365],
         [18.5606],
         [14.9685]],
        [[13.2686],
         [15.9792],
         [16.6180],
         ...,
         [14.8021],
         [15.9997],
         [14.2189]],
        [[13.1230],
         [14.9759],
         [15.6015],
         ...,
         [13.9762],
         [15.7084],
         [14.1288]],
        ...,
        [[12.9444],
         [13.8178],
         [14.4258],
         ...,
         [13.0149],
         [15.3541],
         [14.0177]],
        [[13.4046],
         [16.9651],
         [17.6152],
         ...,
         [15.6078],
         [16.2735],
         [14.3027]],
        [[13.7094],
         [19.3610],
         [20.0325],
         ...,
         [17.5444],
         [16.8944],
         [14.4892]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9729, 1.1758, 1.1870,  ..., 1.1198, 1.0388, 0.9804],
        [0.9528, 0.9969, 1.0072,  ..., 0.9777, 0.9972, 0.9682],
        [0.9504, 0.9805, 0.9907,  ..., 0.9643, 0.9925, 0.9668],
        ...,
        [0.9475, 0.9617, 0.9716,  ..., 0.9486, 0.9867, 0.9650],
        [0.9550, 1.0129, 1.0235,  ..., 0.9908, 1.0016, 0.9696],
        [0.9599, 1.0519, 1.0628,  ..., 1.0223, 1.0117, 0.9726]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.4853],
         [27.6995],
         [26.3765],
         ...,
         [26.1806],
         [11.5062],
         [12.6430]],
        [[10.7503],
         [25.3951],
         [23.3734],
         ...,
         [23.9555],
         [10.7348],
         [10.8679]],
        [[10.6627],
         [25.1236],
         [23.0263],
         ...,
         [23.6936],
         [10.6430],
         [10.6662]],
        ...,
        [[10.5549],
         [24.7905],
         [22.6026],
         ...,
         [23.3724],
         [10.5302],
         [10.4211]],
        [[10.8319],
         [25.6485],
         [23.6985],
         ...,
         [24.1999],
         [10.8203],
         [11.0574]],
        [[11.0140],
         [26.2165],
         [24.4321],
         ...,
         [24.7481],
         [11.0113],
         [11.4875]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9850, 1.1993, 1.1818,  ..., 1.1792, 0.9853, 1.0003],
        [0.9753, 1.1689, 1.1421,  ..., 1.1498, 0.9751, 0.9769],
        [0.9742, 1.1653, 1.1376,  ..., 1.1464, 0.9739, 0.9742],
        ...,
        [0.9727, 1.1609, 1.1320,  ..., 1.1421, 0.9724, 0.9710],
        [0.9764, 1.1722, 1.1464,  ..., 1.1531, 0.9762, 0.9794],
        [0.9788, 1.1797, 1.1561,  ..., 1.1603, 0.9788, 0.9851]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5834],
         [12.1469],
         [12.5508],
         ...,
         [10.0965],
         [12.9137],
         [12.7431]],
        [[ 8.3487],
         [ 9.0720],
         [ 9.7150],
         ...,
         [ 9.3784],
         [ 7.8405],
         [ 8.0808]],
        [[ 7.9353],
         [ 8.7501],
         [ 9.4118],
         ...,
         [ 9.2931],
         [ 7.3709],
         [ 7.6377]],
        ...,
        [[ 7.4505],
         [ 8.3663],
         [ 9.0487],
         ...,
         [ 9.1883],
         [ 6.8269],
         [ 7.1215]],
        [[ 8.7495],
         [ 9.3797],
         [10.0036],
         ...,
         [ 9.4578],
         [ 8.3007],
         [ 8.5126]],
        [[ 9.7032],
         [10.0962],
         [10.6710],
         ...,
         [ 9.6354],
         [ 9.4138],
         [ 9.5488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9690, 0.9777,  ..., 0.9251, 0.9855, 0.9818],
        [0.8876, 0.9031, 0.9169,  ..., 0.9097, 0.8767, 0.8818],
        [0.8787, 0.8962, 0.9104,  ..., 0.9078, 0.8666, 0.8723],
        ...,
        [0.8683, 0.8880, 0.9026,  ..., 0.9056, 0.8550, 0.8613],
        [0.8962, 0.9097, 0.9231,  ..., 0.9114, 0.8866, 0.8911],
        [0.9166, 0.9251, 0.9374,  ..., 0.9152, 0.9104, 0.9133]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5679],
         [27.4486],
         [28.2794],
         ...,
         [23.2548],
         [19.9515],
         [14.8825]],
        [[13.0446],
         [15.8985],
         [16.4678],
         ...,
         [14.9127],
         [16.9524],
         [14.1265]],
        [[12.8675],
         [14.8593],
         [15.4016],
         ...,
         [14.1146],
         [16.6140],
         [14.0356]],
        ...,
        [[12.6510],
         [13.6634],
         [14.1737],
         ...,
         [13.1832],
         [16.2034],
         [13.9237]],
        [[13.2103],
         [16.9223],
         [17.5175],
         ...,
         [15.6894],
         [17.2710],
         [14.2109]],
        [[13.5834],
         [19.4210],
         [20.0769],
         ...,
         [17.5497],
         [17.9952],
         [14.3990]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9776, 1.1871, 1.2006,  ..., 1.1189, 1.0651, 0.9827],
        [0.9528, 0.9992, 1.0085,  ..., 0.9832, 1.0164, 0.9704],
        [0.9499, 0.9823, 0.9911,  ..., 0.9702, 1.0109, 0.9689],
        ...,
        [0.9464, 0.9629, 0.9712,  ..., 0.9551, 1.0042, 0.9671],
        [0.9555, 1.0159, 1.0256,  ..., 0.9958, 1.0216, 0.9718],
        [0.9616, 1.0565, 1.0672,  ..., 1.0261, 1.0333, 0.9748]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5807],
         [26.6352],
         [27.1887],
         ...,
         [25.9950],
         [11.6158],
         [11.8893]],
        [[10.8063],
         [24.0985],
         [25.1082],
         ...,
         [23.8793],
         [10.8391],
         [10.8358]],
        [[10.7141],
         [23.8017],
         [24.8620],
         ...,
         [23.6296],
         [10.7467],
         [10.7120]],
        ...,
        [[10.6008],
         [23.4385],
         [24.5598],
         ...,
         [23.3234],
         [10.6330],
         [10.5604]],
        [[10.8921],
         [24.3757],
         [25.3377],
         ...,
         [24.1121],
         [10.9252],
         [10.9513]],
        [[11.0839],
         [24.9988],
         [25.8515],
         ...,
         [24.6339],
         [11.1175],
         [11.2106]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.1946, 1.2019,  ..., 1.1861, 0.9961, 0.9997],
        [0.9854, 1.1610, 1.1744,  ..., 1.1581, 0.9858, 0.9858],
        [0.9842, 1.1571, 1.1711,  ..., 1.1548, 0.9846, 0.9841],
        ...,
        [0.9827, 1.1523, 1.1671,  ..., 1.1508, 0.9831, 0.9821],
        [0.9865, 1.1647, 1.1774,  ..., 1.1612, 0.9870, 0.9873],
        [0.9891, 1.1729, 1.1842,  ..., 1.1681, 0.9895, 0.9907]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7335],
         [11.4355],
         [12.1217],
         ...,
         [10.0125],
         [12.9407],
         [12.9538]],
        [[ 8.0956],
         [ 8.7542],
         [ 9.5468],
         ...,
         [ 9.3137],
         [ 7.8071],
         [ 7.7914]],
        [[ 7.6542],
         [ 8.4693],
         [ 9.2687],
         ...,
         [ 9.2307],
         [ 7.3337],
         [ 7.3162]],
        ...,
        [[ 7.1397],
         [ 8.1287],
         [ 8.9348],
         ...,
         [ 9.1286],
         [ 6.7858],
         [ 6.7664]],
        [[ 8.5257],
         [ 9.0256],
         [ 9.8109],
         ...,
         [ 9.3910],
         [ 8.2713],
         [ 8.2574]],
        [[ 9.5573],
         [ 9.6547],
         [10.4199],
         ...,
         [ 9.5639],
         [ 9.3955],
         [ 9.3870]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9801, 0.9522, 0.9669,  ..., 0.9217, 0.9845, 0.9848],
        [0.8806, 0.8947, 0.9117,  ..., 0.9067, 0.8744, 0.8741],
        [0.8711, 0.8886, 0.9058,  ..., 0.9050, 0.8643, 0.8639],
        ...,
        [0.8601, 0.8813, 0.8986,  ..., 0.9028, 0.8525, 0.8521],
        [0.8898, 0.9006, 0.9174,  ..., 0.9084, 0.8844, 0.8841],
        [0.9120, 0.9140, 0.9305,  ..., 0.9121, 0.9085, 0.9083]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5478],
         [26.2843],
         [27.7649],
         ...,
         [23.9335],
         [17.0182],
         [14.7256]],
        [[13.5293],
         [16.1284],
         [16.4639],
         ...,
         [14.7214],
         [14.9933],
         [13.7531]],
        [[13.4083],
         [15.1822],
         [15.4326],
         ...,
         [13.8619],
         [14.7600],
         [13.6372]],
        ...,
        [[13.2596],
         [14.0846],
         [14.2418],
         ...,
         [12.8646],
         [14.4754],
         [13.4948]],
        [[13.6420],
         [17.0542],
         [17.4772],
         ...,
         [15.5622],
         [15.2119],
         [13.8609]],
        [[13.8940],
         [19.2896],
         [19.9393],
         ...,
         [17.5913],
         [15.7058],
         [14.1018]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9689, 1.1598, 1.1839,  ..., 1.1215, 1.0091, 0.9718],
        [0.9523, 0.9946, 1.0001,  ..., 0.9717, 0.9761, 0.9560],
        [0.9504, 0.9792, 0.9833,  ..., 0.9577, 0.9723, 0.9541],
        ...,
        [0.9479, 0.9614, 0.9639,  ..., 0.9415, 0.9677, 0.9518],
        [0.9542, 1.0097, 1.0165,  ..., 0.9854, 0.9797, 0.9577],
        [0.9583, 1.0460, 1.0566,  ..., 1.0184, 0.9877, 0.9616]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6289],
         [25.8403],
         [26.4735],
         ...,
         [25.9548],
         [11.7493],
         [11.6270]],
        [[10.8139],
         [23.1474],
         [24.1158],
         ...,
         [23.8462],
         [10.8522],
         [10.8136]],
        [[10.7170],
         [22.8342],
         [23.8389],
         ...,
         [23.5974],
         [10.7460],
         [10.7170]],
        ...,
        [[10.5980],
         [22.4513],
         [23.4997],
         ...,
         [23.2922],
         [10.6157],
         [10.5982]],
        [[10.9041],
         [23.4403],
         [24.3742],
         ...,
         [24.0783],
         [10.9512],
         [10.9036]],
        [[11.1057],
         [24.1000],
         [24.9544],
         ...,
         [24.5983],
         [11.1728],
         [11.1049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0004, 1.1882, 1.1966,  ..., 1.1897, 1.0020, 1.0004],
        [0.9896, 1.1526, 1.1654,  ..., 1.1619, 0.9901, 0.9896],
        [0.9883, 1.1485, 1.1618,  ..., 1.1586, 0.9887, 0.9883],
        ...,
        [0.9868, 1.1434, 1.1573,  ..., 1.1545, 0.9870, 0.9868],
        [0.9908, 1.1565, 1.1688,  ..., 1.1649, 0.9914, 0.9908],
        [0.9935, 1.1652, 1.1765,  ..., 1.1718, 0.9944, 0.9935]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8660],
         [10.9960],
         [11.3372],
         ...,
         [ 9.9973],
         [12.8508],
         [12.8268]],
        [[ 7.9029],
         [ 8.5590],
         [ 8.8124],
         ...,
         [ 9.2202],
         [ 7.9237],
         [ 7.9571]],
        [[ 7.4402],
         [ 8.2977],
         [ 8.5418],
         ...,
         [ 9.1283],
         [ 7.4633],
         [ 7.5005]],
        ...,
        [[ 6.9035],
         [ 7.9843],
         [ 8.2175],
         ...,
         [ 9.0155],
         [ 6.9289],
         [ 6.9699]],
        [[ 8.3556],
         [ 8.8077],
         [ 9.0698],
         ...,
         [ 9.3058],
         [ 8.3739],
         [ 8.4034]],
        [[ 9.4483],
         [ 9.3821],
         [ 9.6648],
         ...,
         [ 9.4977],
         [ 9.4600],
         [ 9.4787]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9864, 0.9463, 0.9536,  ..., 0.9249, 0.9861, 0.9856],
        [0.8800, 0.8941, 0.8995,  ..., 0.9082, 0.8804, 0.8812],
        [0.8701, 0.8885, 0.8937,  ..., 0.9063, 0.8706, 0.8714],
        ...,
        [0.8586, 0.8817, 0.8867,  ..., 0.9038, 0.8591, 0.8600],
        [0.8897, 0.8994, 0.9050,  ..., 0.9101, 0.8901, 0.8907],
        [0.9131, 0.9117, 0.9178,  ..., 0.9142, 0.9134, 0.9138]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6344],
         [26.1063],
         [27.6063],
         ...,
         [24.2222],
         [15.9410],
         [14.8097]],
        [[13.7004],
         [15.9687],
         [16.2862],
         ...,
         [14.6858],
         [14.4740],
         [14.0016]],
        [[13.5890],
         [15.0260],
         [15.2563],
         ...,
         [13.8037],
         [14.3020],
         [13.9046]],
        ...,
        [[13.4521],
         [13.9330],
         [14.0681],
         ...,
         [12.7822],
         [14.0914],
         [13.7853]],
        [[13.8041],
         [16.8915],
         [17.2987],
         ...,
         [15.5501],
         [14.6345],
         [14.0916]],
        [[14.0356],
         [19.1207],
         [19.7611],
         ...,
         [17.6417],
         [14.9952],
         [14.2925]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9706, 1.1572, 1.1815,  ..., 1.1265, 0.9918, 0.9734],
        [0.9554, 0.9923, 0.9974,  ..., 0.9714, 0.9680, 0.9603],
        [0.9536, 0.9769, 0.9807,  ..., 0.9571, 0.9652, 0.9587],
        ...,
        [0.9513, 0.9592, 0.9614,  ..., 0.9404, 0.9617, 0.9568],
        [0.9571, 1.0073, 1.0139,  ..., 0.9855, 0.9706, 0.9617],
        [0.9608, 1.0435, 1.0539,  ..., 1.0195, 0.9764, 0.9650]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5951],
         [26.3723],
         [26.9400],
         ...,
         [25.9789],
         [11.6526],
         [11.7963]],
        [[10.8089],
         [23.7947],
         [24.7894],
         ...,
         [23.8692],
         [10.8440],
         [10.8298]],
        [[10.7153],
         [23.4937],
         [24.5354],
         ...,
         [23.6202],
         [10.7479],
         [10.7158]],
        ...,
        [[10.6003],
         [23.1253],
         [24.2238],
         ...,
         [23.3148],
         [10.6298],
         [10.5760]],
        [[10.8959],
         [24.0761],
         [25.0262],
         ...,
         [24.1013],
         [10.9335],
         [10.9362]],
        [[11.0906],
         [24.7087],
         [25.5569],
         ...,
         [24.6217],
         [11.1336],
         [11.1745]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9978, 1.1931, 1.2006,  ..., 1.1879, 0.9986, 1.0005],
        [0.9874, 1.1590, 1.1722,  ..., 1.1600, 0.9879, 0.9877],
        [0.9862, 1.1550, 1.1688,  ..., 1.1567, 0.9866, 0.9862],
        ...,
        [0.9847, 1.1502, 1.1647,  ..., 1.1527, 0.9850, 0.9843],
        [0.9886, 1.1627, 1.1753,  ..., 1.1631, 0.9891, 0.9891],
        [0.9911, 1.1711, 1.1823,  ..., 1.1700, 0.9917, 0.9922]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7763],
         [11.2856],
         [11.8534],
         ...,
         [10.0003],
         [12.9123],
         [12.9139]],
        [[ 8.0305],
         [ 8.6785],
         [ 9.2726],
         ...,
         [ 9.2849],
         [ 7.8423],
         [ 7.8403]],
        [[ 7.5819],
         [ 8.4008],
         [ 8.9950],
         ...,
         [ 9.1999],
         [ 7.3728],
         [ 7.3707]],
        ...,
        [[ 7.0598],
         [ 8.0685],
         [ 8.6620],
         ...,
         [ 9.0956],
         [ 6.8291],
         [ 6.8267]],
        [[ 8.4682],
         [ 8.9430],
         [ 9.5365],
         ...,
         [ 9.3640],
         [ 8.3022],
         [ 8.3005]],
        [[ 9.5202],
         [ 9.5555],
         [10.1458],
         ...,
         [ 9.5409],
         [ 9.4147],
         [ 9.4137]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9825, 0.9506, 0.9627,  ..., 0.9230, 0.9854, 0.9855],
        [0.8808, 0.8947, 0.9074,  ..., 0.9077, 0.8767, 0.8767],
        [0.8711, 0.8887, 0.9014,  ..., 0.9058, 0.8667, 0.8666],
        ...,
        [0.8599, 0.8816, 0.8943,  ..., 0.9036, 0.8550, 0.8549],
        [0.8901, 0.9003, 0.9131,  ..., 0.9094, 0.8866, 0.8865],
        [0.9127, 0.9135, 0.9261,  ..., 0.9131, 0.9104, 0.9104]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5618],
         [26.2276],
         [27.7091],
         ...,
         [24.0254],
         [16.6660],
         [14.7442]],
        [[13.5848],
         [16.0784],
         [16.4083],
         ...,
         [14.7099],
         [14.8215],
         [13.8319]],
        [[13.4685],
         [15.1334],
         [15.3778],
         ...,
         [13.8432],
         [14.6078],
         [13.7230]],
        ...,
        [[13.3255],
         [14.0373],
         [14.1883],
         ...,
         [12.8380],
         [14.3469],
         [13.5890]],
        [[13.6931],
         [17.0032],
         [17.4209],
         ...,
         [15.5582],
         [15.0215],
         [13.9333]],
        [[13.9350],
         [19.2365],
         [19.8819],
         ...,
         [17.6073],
         [15.4725],
         [14.1595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9692, 1.1589, 1.1830,  ..., 1.1231, 1.0034, 0.9722],
        [0.9533, 0.9939, 0.9992,  ..., 0.9716, 0.9734, 0.9573],
        [0.9514, 0.9785, 0.9825,  ..., 0.9575, 0.9700, 0.9556],
        ...,
        [0.9491, 0.9607, 0.9631,  ..., 0.9412, 0.9657, 0.9534],
        [0.9551, 1.0089, 1.0157,  ..., 0.9854, 0.9767, 0.9590],
        [0.9590, 1.0452, 1.0557,  ..., 1.0187, 0.9840, 0.9627]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6702],
         [25.4515],
         [26.1740],
         ...,
         [26.1696],
         [11.7842],
         [11.5698]],
        [[10.8189],
         [22.6820],
         [23.7336],
         ...,
         [24.2067],
         [10.8458],
         [10.8042]],
        [[10.7179],
         [22.3608],
         [23.4477],
         ...,
         [23.9742],
         [10.7349],
         [10.7130]],
        ...,
        [[10.5939],
         [21.9685],
         [23.0978],
         ...,
         [23.6887],
         [10.5989],
         [10.6010]],
        [[10.9129],
         [22.9826],
         [24.0005],
         ...,
         [24.4234],
         [10.9491],
         [10.8891]],
        [[11.1234],
         [23.6601],
         [24.6003],
         ...,
         [24.9084],
         [11.1807],
         [11.0787]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9995, 1.1816, 1.1912,  ..., 1.1911, 1.0010, 0.9982],
        [0.9883, 1.1450, 1.1589,  ..., 1.1652, 0.9886, 0.9881],
        [0.9869, 1.1408, 1.1552,  ..., 1.1621, 0.9872, 0.9869],
        ...,
        [0.9853, 1.1356, 1.1505,  ..., 1.1584, 0.9854, 0.9854],
        [0.9895, 1.1490, 1.1625,  ..., 1.1681, 0.9900, 0.9892],
        [0.9923, 1.1580, 1.1704,  ..., 1.1745, 0.9931, 0.9917]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8479],
         [10.6525],
         [10.8482],
         ...,
         [10.0279],
         [12.8279],
         [12.8597]],
        [[ 7.9277],
         [ 8.5366],
         [ 8.5263],
         ...,
         [ 9.1607],
         [ 7.9557],
         [ 7.9115]],
        [[ 7.4678],
         [ 8.3058],
         [ 8.2758],
         ...,
         [ 9.0587],
         [ 7.4988],
         [ 7.4498]],
        ...,
        [[ 6.9339],
         [ 8.0280],
         [ 7.9752],
         ...,
         [ 8.9336],
         [ 6.9681],
         [ 6.9139]],
        [[ 8.3775],
         [ 8.7554],
         [ 8.7642],
         ...,
         [ 9.2558],
         [ 8.4021],
         [ 8.3631]],
        [[ 9.4622],
         [ 9.2583],
         [ 9.3130],
         ...,
         [ 9.4694],
         [ 9.4779],
         [ 9.4531]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9392, 0.9434,  ..., 0.9258, 0.9859, 0.9866],
        [0.8808, 0.8938, 0.8936,  ..., 0.9072, 0.8814, 0.8804],
        [0.8709, 0.8889, 0.8883,  ..., 0.9050, 0.8716, 0.8705],
        ...,
        [0.8595, 0.8829, 0.8818,  ..., 0.9024, 0.8602, 0.8591],
        [0.8904, 0.8985, 0.8987,  ..., 0.9093, 0.8910, 0.8901],
        [0.9137, 0.9093, 0.9105,  ..., 0.9139, 0.9140, 0.9135]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9320],
         [25.7133],
         [27.3947],
         ...,
         [24.5325],
         [15.2146],
         [14.7894]],
        [[14.0231],
         [15.8717],
         [16.1158],
         ...,
         [14.6495],
         [14.0971],
         [13.9760]],
        [[13.9145],
         [14.9516],
         [15.0914],
         ...,
         [13.7437],
         [13.9646],
         [13.8785]],
        ...,
        [[13.7808],
         [13.8833],
         [13.9100],
         ...,
         [12.6969],
         [13.8018],
         [13.7584]],
        [[14.1241],
         [16.7715],
         [17.1233],
         ...,
         [15.5386],
         [14.2205],
         [14.0667]],
        [[14.3496],
         [18.9415],
         [19.5747],
         ...,
         [17.6963],
         [14.4968],
         [14.2688]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9748, 1.1502, 1.1775,  ..., 1.1310, 0.9794, 0.9725],
        [0.9600, 0.9901, 0.9941,  ..., 0.9702, 0.9612, 0.9593],
        [0.9583, 0.9751, 0.9774,  ..., 0.9555, 0.9591, 0.9577],
        ...,
        [0.9561, 0.9578, 0.9582,  ..., 0.9385, 0.9564, 0.9557],
        [0.9617, 1.0047, 1.0105,  ..., 0.9847, 0.9633, 0.9607],
        [0.9654, 1.0400, 1.0503,  ..., 1.0198, 0.9677, 0.9640]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6636],
         [25.6093],
         [26.0530],
         ...,
         [26.2066],
         [11.7826],
         [11.5821]],
        [[10.8181],
         [23.1213],
         [23.6144],
         ...,
         [24.2641],
         [10.8392],
         [10.8066]],
        [[10.7178],
         [22.8307],
         [23.3289],
         ...,
         [24.0339],
         [10.7278],
         [10.7143]],
        ...,
        [[10.5946],
         [22.4750],
         [22.9793],
         ...,
         [23.7511],
         [10.5911],
         [10.6008]],
        [[10.9116],
         [23.3930],
         [23.8811],
         ...,
         [24.4786],
         [10.9431],
         [10.8925]],
        [[11.1206],
         [24.0038],
         [24.4804],
         ...,
         [24.9587],
         [11.1758],
         [11.0846]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9994, 1.1837, 1.1895,  ..., 1.1915, 1.0009, 0.9983],
        [0.9882, 1.1508, 1.1573,  ..., 1.1659, 0.9885, 0.9880],
        [0.9869, 1.1469, 1.1535,  ..., 1.1628, 0.9870, 0.9868],
        ...,
        [0.9852, 1.1422, 1.1489,  ..., 1.1591, 0.9852, 0.9853],
        [0.9894, 1.1544, 1.1608,  ..., 1.1687, 0.9898, 0.9892],
        [0.9922, 1.1624, 1.1687,  ..., 1.1751, 0.9929, 0.9917]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8642],
         [10.5660],
         [10.7446],
         ...,
         [10.0562],
         [12.7944],
         [12.8602]],
        [[ 7.9054],
         [ 8.5996],
         [ 8.5121],
         ...,
         [ 9.1037],
         [ 8.0038],
         [ 7.9108]],
        [[ 7.4430],
         [ 8.3831],
         [ 8.2702],
         ...,
         [ 8.9922],
         [ 7.5523],
         [ 7.4490]],
        ...,
        [[ 6.9065],
         [ 8.1220],
         [ 7.9795],
         ...,
         [ 8.8558],
         [ 7.0271],
         [ 6.9131]],
        [[ 8.3578],
         [ 8.8044],
         [ 8.7417],
         ...,
         [ 9.2078],
         [ 8.4446],
         [ 8.3626]],
        [[ 9.4497],
         [ 9.2737],
         [ 9.2706],
         ...,
         [ 9.4418],
         [ 9.5051],
         [ 9.4528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 0.9372, 0.9410,  ..., 0.9262, 0.9850, 0.9864],
        [0.8801, 0.8950, 0.8931,  ..., 0.9058, 0.8822, 0.8802],
        [0.8702, 0.8904, 0.8879,  ..., 0.9034, 0.8726, 0.8703],
        ...,
        [0.8587, 0.8848, 0.8817,  ..., 0.9005, 0.8613, 0.8588],
        [0.8898, 0.8994, 0.8981,  ..., 0.9081, 0.8917, 0.8899],
        [0.9132, 0.9095, 0.9094,  ..., 0.9131, 0.9144, 0.9133]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9385],
         [25.6252],
         [27.2190],
         ...,
         [24.6461],
         [15.0798],
         [14.7710]],
        [[13.9909],
         [15.7679],
         [15.9915],
         ...,
         [14.6785],
         [14.0545],
         [13.9709]],
        [[13.8778],
         [14.8480],
         [14.9725],
         ...,
         [13.7664],
         [13.9325],
         [13.8749]],
        ...,
        [[13.7388],
         [13.7805],
         [13.7976],
         ...,
         [12.7128],
         [13.7826],
         [13.7567]],
        [[14.0960],
         [16.6678],
         [16.9936],
         ...,
         [15.5741],
         [14.1680],
         [14.0601]],
        [[14.3310],
         [18.8392],
         [19.4330],
         ...,
         [17.7486],
         [14.4219],
         [14.2589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9749, 1.1487, 1.1746,  ..., 1.1328, 0.9772, 0.9722],
        [0.9595, 0.9884, 0.9920,  ..., 0.9707, 0.9605, 0.9592],
        [0.9577, 0.9734, 0.9755,  ..., 0.9558, 0.9585, 0.9576],
        ...,
        [0.9554, 0.9561, 0.9563,  ..., 0.9387, 0.9561, 0.9557],
        [0.9612, 1.0030, 1.0083,  ..., 0.9852, 0.9624, 0.9606],
        [0.9650, 1.0383, 1.0480,  ..., 1.0206, 0.9665, 0.9639]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6753],
         [25.8567],
         [26.0918],
         ...,
         [26.3147],
         [11.7448],
         [11.5817]],
        [[10.8194],
         [23.6625],
         [23.8608],
         ...,
         [24.4252],
         [10.8259],
         [10.8065]],
        [[10.7179],
         [23.4042],
         [23.5983],
         ...,
         [24.2010],
         [10.7173],
         [10.7142]],
        ...,
        [[10.5933],
         [23.0875],
         [23.2764],
         ...,
         [23.9255],
         [10.5839],
         [10.6008]],
        [[10.9140],
         [23.9036],
         [24.1058],
         ...,
         [24.6341],
         [10.9272],
         [10.8924]],
        [[11.1255],
         [24.4441],
         [24.6554],
         ...,
         [25.1014],
         [11.1540],
         [11.0844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9992, 1.1866, 1.1897,  ..., 1.1927, 1.0001, 0.9980],
        [0.9879, 1.1576, 1.1602,  ..., 1.1677, 0.9880, 0.9877],
        [0.9865, 1.1542, 1.1568,  ..., 1.1647, 0.9865, 0.9865],
        ...,
        [0.9849, 1.1500, 1.1525,  ..., 1.1611, 0.9848, 0.9850],
        [0.9891, 1.1608, 1.1635,  ..., 1.1704, 0.9893, 0.9888],
        [0.9919, 1.1679, 1.1707,  ..., 1.1766, 0.9923, 0.9914]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8530],
         [10.4043],
         [10.5932],
         ...,
         [10.0846],
         [12.7934],
         [12.8566]],
        [[ 7.9206],
         [ 8.6878],
         [ 8.5616],
         ...,
         [ 9.0519],
         [ 8.0053],
         [ 7.9157]],
        [[ 7.4599],
         [ 8.4961],
         [ 8.3388],
         ...,
         [ 8.9316],
         [ 7.5539],
         [ 7.4545]],
        ...,
        [[ 6.9252],
         [ 8.2640],
         [ 8.0704],
         ...,
         [ 8.7845],
         [ 7.0289],
         [ 6.9192]],
        [[ 8.3712],
         [ 8.8687],
         [ 8.7725],
         ...,
         [ 9.1643],
         [ 8.4459],
         [ 8.3669]],
        [[ 9.4582],
         [ 9.2813],
         [ 9.2564],
         ...,
         [ 9.4175],
         [ 9.5059],
         [ 9.4555]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 0.9340, 0.9381,  ..., 0.9272, 0.9853, 0.9866],
        [0.8808, 0.8972, 0.8945,  ..., 0.9050, 0.8826, 0.8807],
        [0.8709, 0.8931, 0.8897,  ..., 0.9025, 0.8729, 0.8708],
        ...,
        [0.8594, 0.8881, 0.8840,  ..., 0.8993, 0.8617, 0.8593],
        [0.8904, 0.9011, 0.8990,  ..., 0.9074, 0.8920, 0.8903],
        [0.9137, 0.9100, 0.9094,  ..., 0.9129, 0.9148, 0.9137]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0097],
         [25.3741],
         [26.9478],
         ...,
         [24.8448],
         [14.8212],
         [14.7725]],
        [[14.0280],
         [15.6434],
         [15.8374],
         ...,
         [14.6879],
         [13.8770],
         [13.9750]],
        [[13.9111],
         [14.7343],
         [14.8289],
         ...,
         [13.7627],
         [13.7644],
         [13.8793]],
        ...,
        [[13.7672],
         [13.6790],
         [13.6660],
         ...,
         [12.6949],
         [13.6259],
         [13.7615]],
        [[14.1369],
         [16.5325],
         [16.8293],
         ...,
         [15.5973],
         [13.9818],
         [14.0639]],
        [[14.3801],
         [18.6773],
         [19.2434],
         ...,
         [17.8081],
         [14.2158],
         [14.2621]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9752, 1.1438, 1.1694,  ..., 1.1352, 0.9722, 0.9714],
        [0.9593, 0.9855, 0.9887,  ..., 0.9700, 0.9568, 0.9584],
        [0.9574, 0.9708, 0.9723,  ..., 0.9549, 0.9550, 0.9568],
        ...,
        [0.9550, 0.9536, 0.9534,  ..., 0.9376, 0.9527, 0.9549],
        [0.9610, 1.0000, 1.0048,  ..., 0.9848, 0.9585, 0.9598],
        [0.9650, 1.0349, 1.0441,  ..., 1.0207, 0.9623, 0.9631]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6634],
         [26.0319],
         [26.1092],
         ...,
         [26.3234],
         [11.7283],
         [11.5924]],
        [[10.8181],
         [23.9815],
         [24.0362],
         ...,
         [24.4379],
         [10.8245],
         [10.8084]],
        [[10.7178],
         [23.7392],
         [23.7913],
         ...,
         [24.2141],
         [10.7176],
         [10.7151]],
        ...,
        [[10.5946],
         [23.4418],
         [23.4908],
         ...,
         [23.9392],
         [10.5863],
         [10.6004]],
        [[10.9115],
         [24.2074],
         [24.2645],
         ...,
         [24.6464],
         [10.9242],
         [10.8953]],
        [[11.1205],
         [24.7135],
         [24.7761],
         ...,
         [25.1127],
         [11.1473],
         [11.0894]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9997, 1.1895, 1.1906,  ..., 1.1934, 1.0005, 0.9987],
        [0.9885, 1.1624, 1.1632,  ..., 1.1685, 0.9886, 0.9884],
        [0.9872, 1.1592, 1.1599,  ..., 1.1655, 0.9872, 0.9871],
        ...,
        [0.9855, 1.1553, 1.1560,  ..., 1.1619, 0.9854, 0.9856],
        [0.9897, 1.1654, 1.1662,  ..., 1.1712, 0.9899, 0.9895],
        [0.9925, 1.1721, 1.1729,  ..., 1.1774, 0.9928, 0.9921]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8249],
         [10.2696],
         [10.4482],
         ...,
         [10.1268],
         [12.7884],
         [12.8676]],
        [[ 7.9599],
         [ 8.7661],
         [ 8.6368],
         ...,
         [ 8.9713],
         [ 8.0127],
         [ 7.9008]],
        [[ 7.5035],
         [ 8.5960],
         [ 8.4356],
         ...,
         [ 8.8377],
         [ 7.5621],
         [ 7.4379]],
        ...,
        [[ 6.9732],
         [ 8.3894],
         [ 8.1924],
         ...,
         [ 8.6747],
         [ 7.0380],
         [ 6.9009]],
        [[ 8.4058],
         [ 8.9261],
         [ 8.8268],
         ...,
         [ 9.0964],
         [ 8.4524],
         [ 8.3537]],
        [[ 9.4803],
         [ 9.2896],
         [ 9.2609],
         ...,
         [ 9.3786],
         [ 9.5101],
         [ 9.4472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 0.9307, 0.9345,  ..., 0.9276, 0.9847, 0.9864],
        [0.8811, 0.8984, 0.8957,  ..., 0.9028, 0.8823, 0.8799],
        [0.8714, 0.8948, 0.8913,  ..., 0.9000, 0.8726, 0.8700],
        ...,
        [0.8600, 0.8904, 0.8861,  ..., 0.8965, 0.8614, 0.8584],
        [0.8907, 0.9019, 0.8997,  ..., 0.9055, 0.8917, 0.8896],
        [0.9137, 0.9097, 0.9090,  ..., 0.9116, 0.9144, 0.9130]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0499],
         [25.3018],
         [26.6018],
         ...,
         [25.0223],
         [14.6585],
         [14.7702]],
        [[14.0683],
         [15.3721],
         [15.6122],
         ...,
         [14.7278],
         [13.7379],
         [13.9408]],
        [[13.9513],
         [14.4525],
         [14.6156],
         ...,
         [13.7925],
         [13.6280],
         [13.8414]],
        ...,
        [[13.8075],
         [13.3873],
         [13.4665],
         ...,
         [12.7138],
         [13.4928],
         [13.7191]],
        [[14.1771],
         [16.2730],
         [16.5927],
         ...,
         [15.6475],
         [13.8401],
         [14.0332]],
        [[14.4204],
         [18.4521],
         [18.9795],
         ...,
         [17.8853],
         [14.0683],
         [14.2392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9758, 1.1425, 1.1636,  ..., 1.1379, 0.9694, 0.9712],
        [0.9598, 0.9810, 0.9849,  ..., 0.9705, 0.9544, 0.9577],
        [0.9579, 0.9660, 0.9687,  ..., 0.9553, 0.9526, 0.9561],
        ...,
        [0.9555, 0.9487, 0.9500,  ..., 0.9378, 0.9504, 0.9541],
        [0.9616, 0.9956, 1.0008,  ..., 0.9855, 0.9561, 0.9592],
        [0.9655, 1.0311, 1.0397,  ..., 1.0219, 0.9598, 0.9626]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6472],
         [26.2757],
         [26.2181],
         ...,
         [26.2916],
         [11.7020],
         [11.6231]],
        [[10.8162],
         [24.3681],
         [24.2870],
         ...,
         [24.3916],
         [10.8221],
         [10.8131]],
        [[10.7176],
         [24.1418],
         [24.0581],
         ...,
         [24.1661],
         [10.7179],
         [10.7168]],
        ...,
        [[10.5964],
         [23.8639],
         [23.7769],
         ...,
         [23.8892],
         [10.5899],
         [10.5985]],
        [[10.9081],
         [24.5789],
         [24.5003],
         ...,
         [24.6016],
         [10.9192],
         [10.9027]],
        [[11.1136],
         [25.0506],
         [24.9776],
         ...,
         [25.0714],
         [11.1366],
         [11.1032]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9999, 1.1932, 1.1925,  ..., 1.1934, 1.0006, 0.9996],
        [0.9889, 1.1680, 1.1669,  ..., 1.1683, 0.9890, 0.9889],
        [0.9876, 1.1650, 1.1639,  ..., 1.1654, 0.9876, 0.9876],
        ...,
        [0.9860, 1.1614, 1.1602,  ..., 1.1617, 0.9859, 0.9860],
        [0.9901, 1.1708, 1.1698,  ..., 1.1711, 0.9903, 0.9901],
        [0.9929, 1.1770, 1.1761,  ..., 1.1773, 0.9932, 0.9927]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8248],
         [10.1358],
         [10.2710],
         ...,
         [10.2052],
         [12.8176],
         [12.8288]],
        [[ 7.9600],
         [ 8.8766],
         [ 8.7636],
         ...,
         [ 8.8739],
         [ 7.9703],
         [ 7.9544]],
        [[ 7.5037],
         [ 8.7320],
         [ 8.5931],
         ...,
         [ 8.7216],
         [ 7.5150],
         [ 7.4974]],
        ...,
        [[ 6.9735],
         [ 8.5559],
         [ 8.3861],
         ...,
         [ 8.5363],
         [ 6.9860],
         [ 6.9665]],
        [[ 8.4060],
         [ 9.0122],
         [ 8.9240],
         ...,
         [ 9.0168],
         [ 8.4150],
         [ 8.4010]],
        [[ 9.4804],
         [ 9.3188],
         [ 9.2885],
         ...,
         [ 9.3403],
         [ 9.4861],
         [ 9.4772]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 0.9279, 0.9308,  ..., 0.9294, 0.9854, 0.9856],
        [0.8812, 0.9009, 0.8984,  ..., 0.9008, 0.8814, 0.8811],
        [0.8714, 0.8978, 0.8948,  ..., 0.8975, 0.8717, 0.8713],
        ...,
        [0.8601, 0.8940, 0.8903,  ..., 0.8936, 0.8603, 0.8599],
        [0.8908, 0.9038, 0.9019,  ..., 0.9039, 0.8910, 0.8907],
        [0.9138, 0.9103, 0.9097,  ..., 0.9108, 0.9139, 0.9137]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0368],
         [25.2491],
         [26.0162],
         ...,
         [25.1973],
         [14.5779],
         [14.8786]],
        [[14.0518],
         [14.9862],
         [15.2699],
         ...,
         [14.8113],
         [13.6213],
         [13.9863]],
        [[13.9344],
         [14.0490],
         [14.2952],
         ...,
         [13.8684],
         [13.5073],
         [13.8796]],
        ...,
        [[13.7901],
         [12.9669],
         [13.1715],
         ...,
         [12.7812],
         [13.3672],
         [13.7484]],
        [[14.1610],
         [15.9068],
         [16.2287],
         ...,
         [15.7386],
         [13.7273],
         [14.0855]],
        [[14.4050],
         [18.1434],
         [18.5627],
         ...,
         [17.9954],
         [13.9643],
         [14.3069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9746, 1.1407, 1.1531,  ..., 1.1398, 0.9671, 0.9720],
        [0.9585, 0.9737, 0.9784,  ..., 0.9709, 0.9515, 0.9575],
        [0.9566, 0.9585, 0.9625,  ..., 0.9556, 0.9497, 0.9557],
        ...,
        [0.9543, 0.9409, 0.9442,  ..., 0.9379, 0.9474, 0.9536],
        [0.9603, 0.9887, 0.9940,  ..., 0.9860, 0.9533, 0.9591],
        [0.9643, 1.0251, 1.0319,  ..., 1.0227, 0.9571, 0.9627]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6257],
         [26.4122],
         [26.3526],
         ...,
         [26.1945],
         [11.6428],
         [11.6818]],
        [[10.8134],
         [24.5632],
         [24.4797],
         ...,
         [24.2455],
         [10.8157],
         [10.8201]],
        [[10.7169],
         [24.3435],
         [24.2573],
         ...,
         [24.0146],
         [10.7174],
         [10.7179]],
        ...,
        [[10.5983],
         [24.0736],
         [23.9841],
         ...,
         [23.7310],
         [10.5968],
         [10.5925]],
        [[10.9033],
         [24.7678],
         [24.6868],
         ...,
         [24.4607],
         [10.9071],
         [10.9153]],
        [[11.1043],
         [25.2253],
         [25.1501],
         ...,
         [24.9424],
         [11.1117],
         [11.1282]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0006, 1.1960, 1.1952,  ..., 1.1931, 1.0008, 1.0013],
        [0.9898, 1.1715, 1.1704,  ..., 1.1673, 0.9899, 0.9899],
        [0.9886, 1.1686, 1.1675,  ..., 1.1643, 0.9886, 0.9886],
        ...,
        [0.9870, 1.1651, 1.1639,  ..., 1.1605, 0.9870, 0.9869],
        [0.9910, 1.1743, 1.1732,  ..., 1.1702, 0.9911, 0.9912],
        [0.9937, 1.1803, 1.1793,  ..., 1.1766, 0.9938, 0.9940]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8182],
         [10.1256],
         [10.1963],
         ...,
         [10.2688],
         [12.7730],
         [12.8424]],
        [[ 7.9694],
         [ 8.9729],
         [ 8.8899],
         ...,
         [ 8.8281],
         [ 8.0355],
         [ 7.9352]],
        [[ 7.5141],
         [ 8.8397],
         [ 8.7403],
         ...,
         [ 8.6645],
         [ 7.5875],
         [ 7.4761]],
        ...,
        [[ 6.9849],
         [ 8.6771],
         [ 8.5581],
         ...,
         [ 8.4655],
         [ 7.0660],
         [ 6.9431]],
        [[ 8.4142],
         [ 9.0977],
         [ 9.0303],
         ...,
         [ 8.9820],
         [ 8.4726],
         [ 8.3841]],
        [[ 9.4857],
         [ 9.3793],
         [ 9.3480],
         ...,
         [ 9.3310],
         [ 9.5231],
         [ 9.4664]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9849, 0.9272, 0.9287,  ..., 0.9303, 0.9839, 0.9854],
        [0.8809, 0.9025, 0.9007,  ..., 0.8994, 0.8824, 0.8802],
        [0.8712, 0.8996, 0.8975,  ..., 0.8958, 0.8728, 0.8704],
        ...,
        [0.8598, 0.8961, 0.8936,  ..., 0.8916, 0.8616, 0.8589],
        [0.8905, 0.9051, 0.9037,  ..., 0.9027, 0.8917, 0.8898],
        [0.9135, 0.9112, 0.9105,  ..., 0.9101, 0.9143, 0.9130]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9588],
         [25.3305],
         [25.4752],
         ...,
         [25.2136],
         [14.7418],
         [14.9672]],
        [[14.0224],
         [14.7172],
         [14.9636],
         ...,
         [14.9189],
         [13.9194],
         [13.9426]],
        [[13.9107],
         [13.7605],
         [14.0097],
         ...,
         [13.9806],
         [13.8208],
         [13.8208]],
        ...,
        [[13.7732],
         [12.6591],
         [12.9099],
         ...,
         [12.8976],
         [13.6994],
         [13.6710]],
        [[14.1264],
         [15.6595],
         [15.9017],
         ...,
         [15.8410],
         [14.0110],
         [14.0561]],
        [[14.3586],
         [17.9576],
         [18.1853],
         ...,
         [18.0824],
         [14.2153],
         [14.3097]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9725, 1.1412, 1.1436,  ..., 1.1393, 0.9690, 0.9727],
        [0.9573, 0.9686, 0.9726,  ..., 0.9719, 0.9556, 0.9560],
        [0.9555, 0.9530, 0.9571,  ..., 0.9566, 0.9540, 0.9540],
        ...,
        [0.9532, 0.9351, 0.9392,  ..., 0.9390, 0.9521, 0.9516],
        [0.9590, 0.9839, 0.9879,  ..., 0.9869, 0.9571, 0.9579],
        [0.9628, 1.0213, 1.0250,  ..., 1.0233, 0.9604, 0.9620]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6350],
         [26.3317],
         [26.2589],
         ...,
         [26.1901],
         [11.6684],
         [11.6602]],
        [[10.8147],
         [24.4498],
         [24.3432],
         ...,
         [24.2387],
         [10.8187],
         [10.8177]],
        [[10.7172],
         [24.2263],
         [24.1160],
         ...,
         [24.0075],
         [10.7179],
         [10.7178]],
        ...,
        [[10.5975],
         [23.9519],
         [23.8369],
         ...,
         [23.7235],
         [10.5941],
         [10.5950]],
        [[10.9054],
         [24.6578],
         [24.5549],
         ...,
         [24.4541],
         [10.9126],
         [10.9108]],
        [[11.1084],
         [25.1233],
         [25.0285],
         ...,
         [24.9364],
         [11.1226],
         [11.1192]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0007, 1.1950, 1.1940,  ..., 1.1931, 1.0012, 1.0011],
        [0.9899, 1.1701, 1.1687,  ..., 1.1673, 0.9899, 0.9899],
        [0.9886, 1.1671, 1.1657,  ..., 1.1642, 0.9886, 0.9886],
        ...,
        [0.9870, 1.1635, 1.1620,  ..., 1.1605, 0.9870, 0.9870],
        [0.9911, 1.1728, 1.1715,  ..., 1.1701, 0.9912, 0.9912],
        [0.9938, 1.1790, 1.1777,  ..., 1.1765, 0.9940, 0.9939]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8292],
         [10.1419],
         [10.2156],
         ...,
         [10.2484],
         [12.8226],
         [12.8285]],
        [[ 7.9538],
         [ 8.9480],
         [ 8.8624],
         ...,
         [ 8.8442],
         [ 7.9632],
         [ 7.9548]],
        [[ 7.4968],
         [ 8.8103],
         [ 8.7079],
         ...,
         [ 8.6843],
         [ 7.5071],
         [ 7.4978]],
        ...,
        [[ 6.9659],
         [ 8.6424],
         [ 8.5198],
         ...,
         [ 8.4899],
         [ 6.9773],
         [ 6.9670]],
        [[ 8.4005],
         [ 9.0770],
         [ 9.0075],
         ...,
         [ 8.9944],
         [ 8.4087],
         [ 8.4013]],
        [[ 9.4769],
         [ 9.3683],
         [ 9.3362],
         ...,
         [ 9.3350],
         [ 9.4821],
         [ 9.4774]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9863, 0.9287, 0.9303,  ..., 0.9310, 0.9862, 0.9863],
        [0.8818, 0.9031, 0.9013,  ..., 0.9009, 0.8820, 0.8818],
        [0.8720, 0.9001, 0.8980,  ..., 0.8974, 0.8722, 0.8720],
        ...,
        [0.8606, 0.8965, 0.8939,  ..., 0.8933, 0.8608, 0.8606],
        [0.8914, 0.9059, 0.9044,  ..., 0.9041, 0.8915, 0.8914],
        [0.9144, 0.9121, 0.9114,  ..., 0.9114, 0.9146, 0.9145]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9607],
         [25.3438],
         [25.6157],
         ...,
         [25.1912],
         [14.6783],
         [14.9505]],
        [[14.0193],
         [14.7846],
         [15.0238],
         ...,
         [14.9017],
         [13.8058],
         [13.9743]],
        [[13.9070],
         [13.8304],
         [14.0636],
         ...,
         [13.9640],
         [13.7015],
         [13.8580]],
        ...,
        [[13.7688],
         [12.7313],
         [12.9566],
         ...,
         [12.8818],
         [13.5731],
         [13.7150]],
        [[14.1238],
         [15.7238],
         [15.9685],
         ...,
         [15.8232],
         [13.9028],
         [14.0826]],
        [[14.3572],
         [18.0131],
         [18.2685],
         ...,
         [18.0633],
         [14.1193],
         [14.3245]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9731, 1.1420, 1.1464,  ..., 1.1395, 0.9685, 0.9730],
        [0.9578, 0.9703, 0.9741,  ..., 0.9722, 0.9543, 0.9571],
        [0.9560, 0.9547, 0.9585,  ..., 0.9569, 0.9526, 0.9552],
        ...,
        [0.9537, 0.9369, 0.9405,  ..., 0.9393, 0.9505, 0.9529],
        [0.9595, 0.9855, 0.9895,  ..., 0.9871, 0.9559, 0.9588],
        [0.9633, 1.0228, 1.0269,  ..., 1.0236, 0.9594, 0.9628]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3418],
         [26.2816],
         ...,
         [26.2403],
         [11.6715],
         [11.6517]],
        [[10.8148],
         [24.4643],
         [24.3810],
         ...,
         [24.3153],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2414],
         [24.1555],
         ...,
         [24.0871],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9676],
         [23.8785],
         ...,
         [23.8068],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6719],
         [24.5911],
         ...,
         [24.5280],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1363],
         [25.0610],
         ...,
         [25.0038],
         [11.1239],
         [11.1155]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1678, 0.9895, 0.9895],
        [0.9881, 1.1669, 1.1657,  ..., 1.1648, 0.9881, 0.9881],
        ...,
        [0.9866, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1726, 1.1715,  ..., 1.1707, 0.9907, 0.9907],
        [0.9933, 1.1787, 1.1777,  ..., 1.1769, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8218],
         [10.1258],
         [10.2277],
         ...,
         [10.2369],
         [12.7967],
         [12.8353]],
        [[ 7.9642],
         [ 8.9236],
         [ 8.8260],
         ...,
         [ 8.8508],
         [ 8.0005],
         [ 7.9452]],
        [[ 7.5083],
         [ 8.7850],
         [ 8.6664],
         ...,
         [ 8.6928],
         [ 7.5486],
         [ 7.4872]],
        ...,
        [[ 6.9786],
         [ 8.6161],
         [ 8.4724],
         ...,
         [ 8.5007],
         [ 7.0230],
         [ 6.9553]],
        [[ 8.4097],
         [ 9.0534],
         [ 8.9759],
         ...,
         [ 8.9992],
         [ 8.4417],
         [ 8.3929]],
        [[ 9.4827],
         [ 9.3466],
         [ 9.3159],
         ...,
         [ 9.3355],
         [ 9.5032],
         [ 9.4720]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9853, 0.9275, 0.9296,  ..., 0.9298, 0.9847, 0.9856],
        [0.8811, 0.9017, 0.8996,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8987, 0.8962,  ..., 0.8967, 0.8722, 0.8709],
        ...,
        [0.8600, 0.8951, 0.8920,  ..., 0.8926, 0.8609, 0.8595],
        [0.8907, 0.9045, 0.9028,  ..., 0.9033, 0.8913, 0.8903],
        [0.9137, 0.9108, 0.9101,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9955],
         [25.2961],
         [25.7536],
         ...,
         [25.2056],
         [14.6518],
         [14.9201]],
        [[14.0365],
         [14.8469],
         [15.1150],
         ...,
         [14.8661],
         [13.7704],
         [13.9654]],
        [[13.9221],
         [13.8992],
         [14.1501],
         ...,
         [13.9255],
         [13.6650],
         [13.8515]],
        ...,
        [[13.7814],
         [12.8065],
         [13.0377],
         ...,
         [12.8405],
         [13.5354],
         [13.7115]],
        [[14.1429],
         [15.7792],
         [16.0642],
         ...,
         [15.7907],
         [13.8684],
         [14.0713]],
        [[14.3806],
         [18.0487],
         [18.3748],
         ...,
         [18.0397],
         [14.0871],
         [14.3080]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1485,  ..., 1.1396, 0.9680, 0.9723],
        [0.9580, 0.9711, 0.9755,  ..., 0.9715, 0.9536, 0.9568],
        [0.9561, 0.9557, 0.9598,  ..., 0.9562, 0.9519, 0.9550],
        ...,
        [0.9538, 0.9380, 0.9417,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9909,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0285,  ..., 1.0231, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2425],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4649],
         [24.3827],
         ...,
         [24.3187],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1572],
         ...,
         [24.0905],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9682],
         [23.8803],
         ...,
         [23.8104],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6725],
         [24.5926],
         ...,
         [24.5312],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0068],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1253],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9226],
         [ 8.8245],
         ...,
         [ 8.8511],
         [ 8.0021],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7840],
         [ 8.6647],
         ...,
         [ 8.6932],
         [ 7.5504],
         [ 7.4868]],
        ...,
        [[ 6.9791],
         [ 8.6150],
         [ 8.4703],
         ...,
         [ 8.5011],
         [ 7.0251],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9746],
         ...,
         [ 8.9994],
         [ 8.4431],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3458],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2940],
         [25.7594],
         ...,
         [25.2062],
         [14.6508],
         [14.9189]],
        [[14.0372],
         [14.8496],
         [15.1189],
         ...,
         [14.8646],
         [13.7688],
         [13.9650]],
        [[13.9227],
         [13.9022],
         [14.1539],
         ...,
         [13.9239],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8098],
         [13.0412],
         ...,
         [12.8387],
         [13.5337],
         [13.7113]],
        [[14.1437],
         [15.7816],
         [16.0683],
         ...,
         [15.7893],
         [13.8669],
         [14.0708]],
        [[14.3816],
         [18.0502],
         [18.3793],
         ...,
         [18.0387],
         [14.0857],
         [14.3073]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0231, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0251],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8497],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6363],
         [26.3423],
         [26.2826],
         ...,
         [26.2426],
         [11.6716],
         [11.6513]],
        [[10.8148],
         [24.4650],
         [24.3827],
         ...,
         [24.3188],
         [10.8190],
         [10.8167]],
        [[10.7173],
         [24.2421],
         [24.1573],
         ...,
         [24.0907],
         [10.7179],
         [10.7176]],
        ...,
        [[10.5974],
         [23.9683],
         [23.8804],
         ...,
         [23.8105],
         [10.5937],
         [10.5959]],
        [[10.9057],
         [24.6726],
         [24.5927],
         ...,
         [24.5313],
         [10.9132],
         [10.9090]],
        [[11.1089],
         [25.1369],
         [25.0625],
         ...,
         [25.0069],
         [11.1240],
         [11.1154]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0003, 1.1946, 1.1938,  ..., 1.1933, 1.0007, 1.0005],
        [0.9894, 1.1698, 1.1687,  ..., 1.1679, 0.9895, 0.9894],
        [0.9881, 1.1669, 1.1657,  ..., 1.1649, 0.9881, 0.9881],
        ...,
        [0.9865, 1.1632, 1.1621,  ..., 1.1611, 0.9865, 0.9865],
        [0.9906, 1.1725, 1.1715,  ..., 1.1707, 0.9907, 0.9906],
        [0.9933, 1.1787, 1.1777,  ..., 1.1770, 0.9935, 0.9934]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8215],
         [10.1252],
         [10.2283],
         ...,
         [10.2364],
         [12.7955],
         [12.8356]],
        [[ 7.9647],
         [ 8.9225],
         [ 8.8244],
         ...,
         [ 8.8511],
         [ 8.0022],
         [ 7.9448]],
        [[ 7.5088],
         [ 8.7839],
         [ 8.6646],
         ...,
         [ 8.6932],
         [ 7.5505],
         [ 7.4868]],
        ...,
        [[ 6.9792],
         [ 8.6149],
         [ 8.4702],
         ...,
         [ 8.5011],
         [ 7.0252],
         [ 6.9548]],
        [[ 8.4101],
         [ 9.0524],
         [ 8.9745],
         ...,
         [ 8.9994],
         [ 8.4432],
         [ 8.3925]],
        [[ 9.4830],
         [ 9.3457],
         [ 9.3150],
         ...,
         [ 9.3355],
         [ 9.5042],
         [ 9.4718]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 0.9274, 0.9296,  ..., 0.9298, 0.9847, 0.9855],
        [0.8811, 0.9016, 0.8995,  ..., 0.9001, 0.8819, 0.8807],
        [0.8713, 0.8986, 0.8961,  ..., 0.8967, 0.8722, 0.8708],
        ...,
        [0.8599, 0.8950, 0.8919,  ..., 0.8926, 0.8609, 0.8594],
        [0.8906, 0.9044, 0.9027,  ..., 0.9033, 0.8913, 0.8903],
        [0.9136, 0.9107, 0.9100,  ..., 0.9105, 0.9141, 0.9134]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9971],
         [25.2939],
         [25.7597],
         ...,
         [25.2062],
         [14.6507],
         [14.9188]],
        [[14.0372],
         [14.8498],
         [15.1191],
         ...,
         [14.8645],
         [13.7688],
         [13.9650]],
        [[13.9228],
         [13.9023],
         [14.1540],
         ...,
         [13.9238],
         [13.6634],
         [13.8512]],
        ...,
        [[13.7820],
         [12.8100],
         [13.0414],
         ...,
         [12.8386],
         [13.5336],
         [13.7113]],
        [[14.1438],
         [15.7817],
         [16.0685],
         ...,
         [15.7893],
         [13.8668],
         [14.0708]],
        [[14.3817],
         [18.0503],
         [18.3795],
         ...,
         [18.0387],
         [14.0856],
         [14.3072]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9736, 1.1411, 1.1486,  ..., 1.1396, 0.9679, 0.9723],
        [0.9580, 0.9712, 0.9756,  ..., 0.9714, 0.9536, 0.9568],
        [0.9561, 0.9558, 0.9599,  ..., 0.9561, 0.9519, 0.9549],
        ...,
        [0.9538, 0.9380, 0.9418,  ..., 0.9385, 0.9498, 0.9527],
        [0.9597, 0.9863, 0.9910,  ..., 0.9865, 0.9552, 0.9585],
        [0.9636, 1.0232, 1.0286,  ..., 1.0230, 0.9588, 0.9624]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[11.6733]],
        [[10.8192]],
        [[10.7179]],
        [[11.0245]],
        [[11.0527]],
        [[10.6395]],
        [[10.9333]],
        [[11.1515]],
        [[11.2105]],
        [[10.8946]],
        [[10.5239]],
        [[11.0990]],
        [[10.9817]],
        [[10.7722]],
        [[10.8599]],
        [[11.3329]],
        [[11.2800]],
        [[10.8399]],
        [[10.7479]],
        [[10.9628]],
        [[11.0760]],
        [[10.4004]],
        [[10.8747]],
        [[11.1784]],
        [[11.1235]],
        [[10.9126]],
        [[10.5911]],
        [[11.0303]],
        [[11.0037]],
        [[10.6864]],
        [[10.7963]],
        [[11.4117]],
        [[11.3595]],
        [[10.7856]],
        [[10.6751]],
        [[10.9894]],
        [[11.0454]],
        [[10.6079]],
        [[10.9216]],
        [[11.1388]],
        [[11.2008]],
        [[10.8813]],
        [[10.4719]],
        [[11.0892]],
        [[10.9515]],
        [[10.7358]],
        [[10.8330]],
        [[11.2489]],
        [[11.2944]],
        [[10.8538]],
        [[10.7618]],
        [[10.9709]],
        [[11.1123]],
        [[10.5546]],
        [[10.9004]],
        [[11.2350]],
        [[11.1673]],
        [[10.9416]],
        [[10.6514]],
        [[11.0677]],
        [[11.0106]],
        [[10.7090]],
        [[10.8097]],
        [[11.4744]],
        [[11.4329]],
        [[10.8036]],
        [[10.7007]],
        [[11.0047]],
        [[11.0612]],
        [[10.6403]],
        [[10.9362]],
        [[11.1588]],
        [[11.2271]],
        [[10.8959]],
        [[10.5391]],
        [[11.1071]],
        [[10.9667]],
        [[10.7558]],
        [[10.8490]],
        [[11.2835]],
        [[11.2377]],
        [[10.8267]],
        [[10.7276]],
        [[10.9460]],
        [[11.0829]],
        [[10.4320]],
        [[10.8755]],
        [[11.1920]],
        [[11.1326]],
        [[10.9174]],
        [[10.5972]],
        [[11.0404]],
        [[10.9849]],
        [[10.6679]],
        [[10.7806]],
        [[11.3434]],
        [[11.3889]],
        [[10.7913]],
        [[10.6792]],
        [[10.9990]],
        [[11.0257]],
        [[10.5798]],
        [[10.9085]],
        [[11.1178]],
        [[11.1700]],
        [[10.8687]],
        [[10.2983]],
        [[11.0696]],
        [[10.9575]],
        [[10.7402]],
        [[10.8339]],
        [[11.2674]],
        [[11.3200]],
        [[10.8553]],
        [[10.7666]],
        [[10.9776]],
        [[11.0939]],
        [[10.5039]],
        [[10.8899]],
        [[11.2031]],
        [[11.1436]],
        [[10.9280]],
        [[10.6281]],
        [[11.0466]],
        [[11.0184]],
        [[10.7097]],
        [[10.8130]],
        [[11.5299]],
        [[11.5238]],
        [[10.8151]],
        [[10.7160]],
        [[11.0155]],
        [[11.0514]],
        [[10.6208]],
        [[10.9271]],
        [[11.1463]],
        [[11.2084]],
        [[10.8858]],
        [[10.4961]],
        [[11.0945]],
        [[10.9755]],
        [[10.7675]],
        [[10.8586]],
        [[11.3067]],
        [[11.2601]],
        [[10.8386]],
        [[10.7429]],
        [[10.9566]],
        [[11.0717]],
        [[10.2838]],
        [[10.8658]],
        [[11.1764]],
        [[11.1187]],
        [[10.9065]],
        [[10.5660]],
        [[11.0291]],
        [[10.9948]],
        [[10.6843]],
        [[10.7919]],
        [[11.3816]],
        [[11.3460]],
        [[10.7780]],
        [[10.6595]],
        [[10.9881]],
        [[11.0360]],
        [[10.6048]],
        [[10.9180]],
        [[11.1305]],
        [[11.1865]],
        [[10.8801]],
        [[10.4467]],
        [[11.0820]],
        [[10.9478]],
        [[10.7271]],
        [[10.8235]],
        [[11.2464]],
        [[11.2910]],
        [[10.8447]],
        [[10.7537]],
        [[10.9672]],
        [[11.1045]],
        [[10.5417]],
        [[10.8991]],
        [[11.2187]],
        [[11.1583]],
        [[10.9379]],
        [[10.6490]],
        [[11.0579]],
        [[11.0093]],
        [[10.6954]],
        [[10.8027]],
        [[11.4454]],
        [[11.4791]],
        [[10.8079]],
        [[10.7026]],
        [[11.0137]],
        [[11.0625]],
        [[10.6575]],
        [[10.9423]],
        [[11.1643]],
        [[11.2295]],
        [[10.9046]],
        [[10.5606]],
        [[11.1117]],
        [[10.9729]],
        [[10.7606]],
        [[10.8503]],
        [[11.3061]],
        [[11.2557]],
        [[10.8280]],
        [[10.7329]],
        [[10.9522]],
        [[11.0873]],
        [[10.4749]],
        [[10.8844]],
        [[11.1939]],
        [[11.1376]],
        [[10.9236]],
        [[10.6182]],
        [[11.0418]],
        [[10.9937]],
        [[10.6702]],
        [[10.7850]],
        [[11.3667]],
        [[11.4074]],
        [[10.7985]],
        [[10.6937]],
        [[11.0002]],
        [[11.0349]],
        [[10.5831]],
        [[10.9123]],
        [[11.1258]],
        [[11.1833]],
        [[10.8700]],
        [[10.3740]],
        [[11.0768]],
        [[10.9612]],
        [[10.7486]],
        [[10.8431]],
        [[11.2703]],
        [[11.3236]],
        [[10.8644]],
        [[10.7743]],
        [[10.9814]],
        [[11.1013]],
        [[10.5207]],
        [[10.8911]],
        [[11.2184]],
        [[11.1523]],
        [[10.9316]],
        [[10.6308]],
        [[11.0561]],
        [[11.0198]],
        [[10.7225]],
        [[10.8200]],
        [[11.5971]],
        [[11.5911]],
        [[10.8225]],
        [[10.7222]],
        [[11.0221]],
         [ 9.3437]]], device='cuda:0', dtype=torch.float64,
        [[11.0549]],ackward0>)
        [[10.6340]],
AFTER NORMALIZATION:
        [[10.9306]],.Size([1000, 10])
tensor([[0.9787, 0.9808, 0.9390,  ..., 0.9258, 0.9743, 0.9838],
        [[11.1544]],733, 0.8837,  ..., 0.8933, 0.8835, 0.8697],
        [0.8665, 0.8633, 0.8778,  ..., 0.8897, 0.8747, 0.8593],
        [[11.2147]],
        [0.8553, 0.8517, 0.8708,  ..., 0.8852, 0.8643, 0.8473],
        [[10.8915]],831, 0.8893,  ..., 0.8968, 0.8921, 0.8799],
        [0.9083, 0.9067, 0.9022,  ..., 0.9046, 0.9126, 0.9048]],
        [[10.5116]],0', dtype=torch.float64, grad_fn=<AddBackward0>)
        [[11.1018]],
        [[10.9797]],.Size([1000, 10, 1])
BEFORE NORMALIZATION:
        [[10.7754]],
         [15.3779],
        [[10.8627]],
         ...,
        [[11.3263]],
         [17.2160],
        [[11.2738]],
        [[10.8421]],
         [14.4738],
        [[10.7506]],
         ...,
        [[10.9602]],
         [14.9352],
        [[11.0794]],
        [[10.3706]],
         [14.3657],
        [[10.8723]],
         ...,
        [[11.1830]],
         [14.6747],
        [[11.1269]],
        [[10.9106]],
        [[10.5855]],
         [14.2325],
        [[11.0332]],
         ...,
        [[11.0006]],
         [14.3577],
        [[10.6903]],
        [[10.7990]],
         [14.5744],
        [[11.3968]],
         ...,
        [[11.3702]],
         [15.1797],
        [[10.7831]],
        [[10.6717]],
         [14.7988],
        [[10.9920]],
         ...,
        [[11.0422]],
         [15.7337],
        [[10.6133]],, device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
        [[10.9240]],
        [[11.1348]],
COST SHAPE IS  torch.Size([1000, 10])
        [[11.1963]],675, 1.1141,  ..., 1.1122, 0.9974, 0.9956],
        [0.9449, 0.9528, 0.9632,  ..., 0.9723, 0.9603, 0.9681],
        [[10.8833]],510, 0.9491,  ..., 0.9589, 0.9560, 0.9649],
        ...,
        [[10.4834]],488, 0.9326,  ..., 0.9432, 0.9509, 0.9610],
        [0.9468, 0.9544, 0.9770,  ..., 0.9854, 0.9642, 0.9711],
        [[11.0861]],580, 1.0103,  ..., 1.0166, 0.9732, 0.9778]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
        [[10.9544]],
        [[10.7326]],
COST SHAPE IS  torch.Size([1000, 10, 1])
        [[10.8305]],:
tensor([[[11.7361],
        [[11.2551]],
        [[11.1924]],
        [[10.8758]],
        [[10.4343]],
        [[11.0833]],
        [[10.9469]],
        [[10.7290]],
        [[10.8277]],
        [[11.2396]],
        [[11.2811]],
        [[10.8480]],
        [[10.7546]],
        [[10.9658]],
        [[11.1067]],
        [[10.5381]],
        [[10.8956]],
        [[11.2266]],
        [[11.1602]],
        [[10.9371]],
        [[10.6423]],
        [[11.0622]],
        [[11.0051]],
        [[10.7011]],
        [[10.8040]],
        [[11.4346]],
        [[11.4663]],
        [[10.8087]],
        [[10.7075]],
        [[11.0097]],
        [[11.0673]],
        [[10.6508]],
        [[10.9413]],
        [[11.1669]],
        [[11.2369]],
        [[10.9013]],
        [[10.5578]],
        [[11.1134]],
        [[10.9712]],
        [[10.7621]],
        [[10.8542]],
        [[11.2951]],
        [[11.2483]],
        [[10.8326]],
        [[10.7354]],
        [[10.9511]],
        [[11.0882]],
        [[10.4659]],
        [[10.8804]],
        [[11.1992]],
        [[11.1392]],
        [[10.9220]],
        [[10.6085]],
        [[11.0457]],
        [[10.9903]],
        [[10.6768]],
        [[10.7867]],
        [[11.3632]],
        [[11.4136]],
        [[10.7966]],
        [[10.6870]],
        [[11.0040]],
        [[11.0314]],
        [[10.5935]],
        [[10.9136]],
        [[11.1247]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.0015],
        [0.9902],
        [0.9888],
        [0.9929],
        [0.9933],
        [0.9878],
        [0.9917],
        [0.9946],
        [0.9954],
        [0.9912],
        [0.9863],
        [0.9939],
        [0.9923],
        [0.9896],
        [0.9907],
        [0.9970],
        [0.9963],
        [0.9905],
        [0.9892],
        [0.9921],
        [0.9936],
        [0.9847],
        [0.9909],
        [0.9949],
        [0.9942],
        [0.9914],
        [0.9872],
        [0.9930],
        [0.9926],
        [0.9884],
        [0.9899],
        [0.9980],
        [0.9973],
        [0.9897],
        [0.9883],
        [0.9924],
        [0.9932],
        [0.9874],
        [0.9915],
        [0.9944],
        [0.9952],
        [0.9910],
        [0.9856],
        [0.9938],
        [0.9919],
        [0.9891],
        [0.9904],
        [0.9959],
        [0.9965],
        [0.9906],
        [0.9894],
        [0.9922],
        [0.9941],
        [0.9867],
        [0.9913],
        [0.9957],
        [0.9948],
        [0.9918],
        [0.9880],
        [0.9935],
        [0.9927],
        [0.9887],
        [0.9901],
        [0.9988],
        [0.9983],
        [0.9900],
        [0.9886],
        [0.9926],
        [0.9934],
        [0.9878],
        [0.9917],
        [0.9947],
        [0.9956],
        [0.9912],
        [0.9865],
        [0.9940],
        [0.9921],
        [0.9894],
        [0.9906],
        [0.9963],
        [0.9957],
        [0.9903],
        [0.9890],
        [0.9919],
        [0.9937],
        [0.9851],
        [0.9909],
        [0.9951],
        [0.9943],
        [0.9915],
        [0.9873],
        [0.9931],
        [0.9924],
        [0.9882],
        [0.9897],
        [0.9971],
        [0.9977],
        [0.9898],
        [0.9883],
        [0.9926],
        [0.9929],
        [0.9870],
        [0.9914],
        [0.9941],
        [0.9948],
        [0.9908],
        [0.9833],
        [0.9935],
        [0.9920],
        [0.9891],
        [0.9904],
        [0.9961],
        [0.9968],
        [0.9907],
        [0.9895],
        [0.9923],
        [0.9938],
        [0.9860],
        [0.9911],
        [0.9953],
        [0.9945],
        [0.9916],
        [0.9877],
        [0.9932],
        [0.9928],
        [0.9887],
        [0.9901],
        [0.9996],
        [0.9995],
        [0.9901],
        [0.9888],
        [0.9928],
        [0.9933],
        [0.9876],
        [0.9916],
        [0.9945],
        [0.9953],
        [0.9911],
        [0.9859],
        [0.9938],
        [0.9923],
        [0.9895],
        [0.9907],
        [0.9966],
        [0.9960],
        [0.9904],
        [0.9892],
        [0.9920],
        [0.9935],
        [0.9831],
        [0.9908],
        [0.9949],
        [0.9941],
        [0.9913],
        [0.9868],
        [0.9930],
        [0.9925],
        [0.9884],
        [0.9898],
        [0.9976],
        [0.9971],
        [0.9896],
        [0.9881],
        [0.9924],
        [0.9931],
        [0.9874],
        [0.9915],
        [0.9943],
        [0.9950],
        [0.9910],
        [0.9853],
        [0.9937],
        [0.9919],
        [0.9890],
        [0.9902],
        [0.9958],
        [0.9964],
        [0.9905],
        [0.9893],
        [0.9921],
        [0.9940],
        [0.9865],
        [0.9912],
        [0.9955],
        [0.9947],
        [0.9918],
        [0.9879],
        [0.9933],
        [0.9927],
        [0.9886],
        [0.9900],
        [0.9985],
        [0.9989],
        [0.9900],
        [0.9886],
        [0.9928],
        [0.9934],
        [0.9881],
        [0.9918],
        [0.9947],
        [0.9956],
        [0.9913],
        [0.9868],
        [0.9941],
        [0.9922],
        [0.9894],
        [0.9906],
        [0.9966],
        [0.9960],
        [0.9903],
        [0.9890],
        [0.9919],
        [0.9937],
        [0.9856],
        [0.9910],
        [0.9951],
        [0.9944],
        [0.9916],
        [0.9875],
        [0.9931],
        [0.9925],
        [0.9882],
        [0.9897],
        [0.9974],
        [0.9980],
        [0.9899],
        [0.9885],
        [0.9926],
        [0.9930],
        [0.9871],
        [0.9914],
        [0.9942],
        [0.9950],
        [0.9909],
        [0.9843],
        [0.9936],
        [0.9921],
        [0.9893],
        [0.9905],
        [0.9961],
        [0.9969],
        [0.9908],
        [0.9896],
        [0.9923],
        [0.9939],
        [0.9862],
        [0.9911],
        [0.9955],
        [0.9946],
        [0.9917],
        [0.9877],
        [0.9933],
        [0.9928],
        [0.9889],
        [0.9902],
        [1.0005],
        [1.0004],
        [0.9902],
        [0.9889],
        [0.9929],
        [0.9933],
        [0.9877],
        [0.9917],
        [0.9946],
        [0.9954],
        [0.9911],
        [0.9861],
        [0.9939],
        [0.9923],
        [0.9896],
        [0.9908],
        [0.9969],
        [0.9962],
        [0.9905],
        [0.9893],
        [0.9921],
        [0.9936],
        [0.9843],
        [0.9909],
        [0.9950],
        [0.9943],
        [0.9914],
        [0.9871],
        [0.9930],
        [0.9926],
        [0.9885],
        [0.9899],
        [0.9978],
        [0.9975],
        [0.9897],
        [0.9882],
        [0.9925],
        [0.9931],
        [0.9875],
        [0.9916],
        [0.9944],
        [0.9952],
        [0.9910],
        [0.9857],
        [0.9937],
        [0.9920],
        [0.9890],
        [0.9903],
        [0.9959],
        [0.9965],
        [0.9906],
        [0.9894],
        [0.9922],
        [0.9940],
        [0.9868],
        [0.9913],
        [0.9956],
        [0.9947],
        [0.9918],
        [0.9880],
        [0.9934],
        [0.9927],
        [0.9887],
        [0.9900],
        [0.9991],
        [0.9985],
        [0.9899],
        [0.9886],
        [0.9927],
        [0.9934],
        [0.9879],
        [0.9918],
        [0.9946],
        [0.9955],
        [0.9912],
        [0.9866],
        [0.9940],
        [0.9922],
        [0.9893],
        [0.9905],
        [0.9964],
        [0.9958],
        [0.9903],
        [0.9889],
        [0.9919],
        [0.9936],
        [0.9853],
        [0.9910],
        [0.9950],
        [0.9943],
        [0.9915],
        [0.9873],
        [0.9931],
        [0.9924],
        [0.9881],
        [0.9896],
        [0.9973],
        [0.9976],
        [0.9898],
        [0.9884],
        [0.9925],
        [0.9930],
        [0.9869],
        [0.9913],
        [0.9942],
        [0.9949],
        [0.9908],
        [0.9817],
        [0.9935],
        [0.9920],
        [0.9892],
        [0.9904],
        [0.9960],
        [0.9967],
        [0.9907],
        [0.9895],
        [0.9923],
        [0.9938],
        [0.9859],
        [0.9911],
        [0.9953],
        [0.9945],
        [0.9916],
        [0.9876],
        [0.9932],
        [0.9928],
        [0.9888],
        [0.9901],
        [0.9992],
        [1.0001],
        [0.9901],
        [0.9888],
        [0.9928],
        [0.9932],
        [0.9876],
        [0.9916],
        [0.9945],
        [0.9953],
        [0.9911],
        [0.9860],
        [0.9938],
        [0.9923],
        [0.9895],
        [0.9907],
        [0.9967],
        [0.9961],
        [0.9904],
        [0.9891],
        [0.9920],
        [0.9935],
        [0.9840],
        [0.9908],
        [0.9949],
        [0.9941],
        [0.9914],
        [0.9870],
        [0.9929],
        [0.9925],
        [0.9883],
        [0.9898],
        [0.9977],
        [0.9970],
        [0.9897],
        [0.9881],
        [0.9924],
        [0.9931],
        [0.9873],
        [0.9915],
        [0.9943],
        [0.9951],
        [0.9910],
        [0.9850],
        [0.9937],
        [0.9919],
        [0.9890],
        [0.9903],
        [0.9958],
        [0.9963],
        [0.9906],
        [0.9894],
        [0.9921],
        [0.9940],
        [0.9864],
        [0.9912],
        [0.9955],
        [0.9947],
        [0.9917],
        [0.9879],
        [0.9934],
        [0.9927],
        [0.9886],
        [0.9900],
        [0.9982],
        [0.9986],
        [0.9901],
        [0.9887],
        [0.9927],
        [0.9934],
        [0.9880],
        [0.9918],
        [0.9948],
        [0.9957],
        [0.9913],
        [0.9867],
        [0.9941],
        [0.9922],
        [0.9895],
        [0.9906],
        [0.9965],
        [0.9959],
        [0.9903],
        [0.9891],
        [0.9919],
        [0.9938],
        [0.9854],
        [0.9910],
        [0.9952],
        [0.9944],
        [0.9915],
        [0.9874],
        [0.9932],
        [0.9925],
        [0.9883],
        [0.9898],
        [0.9973],
        [0.9981],
        [0.9899],
        [0.9885],
        [0.9926],
        [0.9930],
        [0.9872],
        [0.9915],
        [0.9942],
        [0.9950],
        [0.9909],
        [0.9848],
        [0.9936],
        [0.9921],
        [0.9892],
        [0.9905],
        [0.9962],
        [0.9970],
        [0.9908],
        [0.9896],
        [0.9924],
        [0.9939],
        [0.9864],
        [0.9912],
        [0.9954],
        [0.9945],
        [0.9917],
        [0.9878],
        [0.9933],
        [0.9929],
        [0.9889],
        [0.9902],
        [1.0023],
        [1.0028],
        [0.9902],
        [0.9889],
        [0.9929],
        [0.9933],
        [0.9878],
        [0.9917],
        [0.9946],
        [0.9954],
        [0.9912],
        [0.9863],
        [0.9939],
        [0.9924],
        [0.9895],
        [0.9907],
        [0.9969],
        [0.9962],
        [0.9905],
        [0.9892],
        [0.9921],
        [0.9936],
        [0.9848],
        [0.9909],
        [0.9950],
        [0.9942],
        [0.9914],
        [0.9871],
        [0.9930],
        [0.9926],
        [0.9885],
        [0.9899],
        [0.9981],
        [0.9973],
        [0.9898],
        [0.9883],
        [0.9925],
        [0.9932],
        [0.9874],
        [0.9915],
        [0.9944],
        [0.9952],
        [0.9910],
        [0.9855],
        [0.9938],
        [0.9919],
        [0.9891],
        [0.9904],
        [0.9959],
        [0.9965],
        [0.9906],
        [0.9894],
        [0.9922],
        [0.9941],
        [0.9866],
        [0.9913],
        [0.9957],
        [0.9948],
        [0.9918],
        [0.9880],
        [0.9935],
        [0.9927],
        [0.9887],
        [0.9901],
        [0.9987],
        [0.9982],
        [0.9900],
        [0.9886],
        [0.9927],
        [0.9934],
        [0.9879],
        [0.9917],
        [0.9947],
        [0.9955],
        [0.9912],
        [0.9864],
        [0.9940],
        [0.9921],
        [0.9894],
        [0.9906],
        [0.9964],
        [0.9958],
        [0.9903],
        [0.9890],
        [0.9918],
        [0.9937],
        [0.9849],
        [0.9909],
        [0.9951],
        [0.9944],
        [0.9915],
        [0.9873],
        [0.9931],
        [0.9924],
        [0.9882],
        [0.9897],
        [0.9971],
        [0.9978],
        [0.9898],
        [0.9884],
        [0.9925],
        [0.9929],
        [0.9870],
        [0.9914],
        [0.9941],
        [0.9948],
        [0.9908],
        [0.9837],
        [0.9935],
        [0.9920],
        [0.9891],
        [0.9904],
        [0.9961],
        [0.9968],
        [0.9907],
        [0.9895],
        [0.9923],
        [0.9938],
        [0.9861],
        [0.9911],
        [0.9953],
        [0.9945],
        [0.9916],
        [0.9876],
        [0.9932],
        [0.9928],
        [0.9888],
        [0.9901],
        [0.9998],
        [0.9993],
        [0.9901],
        [0.9888],
        [0.9928],
        [0.9932],
        [0.9876],
        [0.9916],
        [0.9945],
        [0.9953],
        [0.9911],
        [0.9858],
        [0.9938],
        [0.9922],
        [0.9895],
        [0.9907],
        [0.9967],
        [0.9961],
        [0.9904],
        [0.9892],
        [0.9920],
        [0.9935],
        [0.9822],
        [0.9908],
        [0.9949],
        [0.9942],
        [0.9913],
        [0.9869],
        [0.9929],
        [0.9925],
        [0.9884],
        [0.9898],
        [0.9975],
        [0.9972],
        [0.9896],
        [0.9881],
        [0.9924],
        [0.9931],
        [0.9873],
        [0.9915],
        [0.9943],
        [0.9951],
        [0.9910],
        [0.9854],
        [0.9936],
        [0.9919],
        [0.9889],
        [0.9903],
        [0.9958],
        [0.9964],
        [0.9905],
        [0.9893],
        [0.9922],
        [0.9939],
        [0.9866],
        [0.9912],
        [0.9955],
        [0.9946],
        [0.9918],
        [0.9879],
        [0.9934],
        [0.9927],
        [0.9886],
        [0.9900],
        [0.9986],
        [0.9991],
        [0.9900],
        [0.9887],
        [0.9927],
        [0.9934],
        [0.9880],
        [0.9918],
        [0.9947],
        [0.9956],
        [0.9913],
        [0.9868],
        [0.9940],
        [0.9922],
        [0.9894],
        [0.9906],
        [0.9966],
        [0.9959],
        [0.9903],
        [0.9890],
        [0.9920],
        [0.9937],
        [0.9857],
        [0.9910],
        [0.9952],
        [0.9944],
        [0.9916],
        [0.9875],
        [0.9931],
        [0.9925],
        [0.9882],
        [0.9897],
        [0.9975],
        [0.9979],
        [0.9899],
        [0.9885],
        [0.9926],
        [0.9930],
        [0.9871],
        [0.9914],
        [0.9943],
        [0.9950],
        [0.9909],
        [0.9841],
        [0.9936],
        [0.9920],
        [0.9893],
        [0.9905],
        [0.9962],
        [0.9969],
        [0.9908],
        [0.9896],
        [0.9923],
        [0.9939],
        [0.9862],
        [0.9912],
        [0.9954],
        [0.9946],
        [0.9917],
        [0.9877],
        [0.9933],
        [0.9929],
        [0.9889],
        [0.9902],
        [1.0001],
        [1.0008],
        [0.9902],
        [0.9889],
        [0.9929],
        [0.9933],
        [0.9877],
        [0.9917],
        [0.9946],
        [0.9954],
        [0.9911],
        [0.9862],
        [0.9939],
        [0.9923],
        [0.9896],
        [0.9908],
        [0.9968],
        [0.9962],
        [0.9905],
        [0.9893],
        [0.9921],
        [0.9936],
        [0.9845],
        [0.9909],
        [0.9950],
        [0.9942],
        [0.9914],
        [0.9871],
        [0.9930],
        [0.9926],
        [0.9885],
        [0.9899],
        [0.9979],
        [0.9974],
        [0.9897],
        [0.9882],
        [0.9925],
        [0.9931],
        [0.9875],
        [0.9916],
        [0.9944],
        [0.9951],
        [0.9911],
        [0.9857],
        [0.9937],
        [0.9920],
        [0.9891],
        [0.9903],
        [0.9960],
        [0.9966],
        [0.9906],
        [0.9894],
        [0.9922],
        [0.9940],
        [0.9868],
        [0.9913],
        [0.9956],
        [0.9948],
        [0.9918],
        [0.9881],
        [0.9934],
        [0.9928],
        [0.9887],
        [0.9900],
        [0.9990],
        [0.9984],
        [0.9900],
        [0.9885],
        [0.9927],
        [0.9933],
        [0.9879],
        [0.9918],
        [0.9947],
        [0.9955],
        [0.9913],
        [0.9866],
        [0.9940],
        [0.9921],
        [0.9893],
        [0.9905],
        [0.9964],
        [0.9958],
        [0.9902],
        [0.9890],
        [0.9919],
        [0.9936],
        [0.9852],
        [0.9910],
        [0.9950],
        [0.9943],
        [0.9915],
        [0.9874],
        [0.9931],
        [0.9924],
        [0.9881],
        [0.9897],
        [0.9972],
        [0.9976],
        [0.9898],
        [0.9884],
        [0.9925],
        [0.9930],
        [0.9869],
        [0.9914],
        [0.9942],
        [0.9949],
        [0.9908],
        [0.9830],
        [0.9935],
        [0.9920],
        [0.9892],
        [0.9904],
        [0.9960],
        [0.9967],
        [0.9907],
        [0.9895],
        [0.9923],
        [0.9938],
        [0.9859],
        [0.9911],
        [0.9953],
        [0.9945],
        [0.9916],
        [0.9875],
        [0.9932],
        [0.9928],
        [0.9888],
        [0.9901],
        [0.9995],
        [0.9997],
        [0.9901],
        [0.9888],
        [0.9928],
        [0.9932],
        [0.9877],
        [0.9916],
        [0.9945],
        [0.9952],
        [0.9911],
        [0.9860],
        [0.9938],
        [0.9923],
        [0.9895],
        [0.9907],
        [0.9968],
        [0.9961],
        [0.9904],
        [0.9891],
        [0.9920],
        [0.9935],
        [0.9836],
        [0.9909],
        [0.9948],
        [0.9941],
        [0.9914],
        [0.9870],
        [0.9929],
        [0.9926],
        [0.9883],
        [0.9898],
        [0.9977],
        [0.9971],
        [0.9897],
        [0.9882],
        [0.9924],
        [0.9931],
        [0.9872],
        [0.9915],
        [0.9943],
        [0.9951],
        [0.9909],
        [0.9851],
        [0.9937],
        [0.9919],
        [0.9890],
        [0.9903],
        [0.9957],
        [0.9963],
        [0.9906],
        [0.9893],
        [0.9921],
        [0.9940],
        [0.9865],
        [0.9912],
        [0.9956],
        [0.9947],
        [0.9917],
        [0.9879],
        [0.9934],
        [0.9926],
        [0.9886],
        [0.9900],
        [0.9983],
        [0.9987],
        [0.9900],
        [0.9887],
        [0.9927],
        [0.9935],
        [0.9880],
        [0.9918],
        [0.9948],
        [0.9957],
        [0.9913],
        [0.9867],
        [0.9941],
        [0.9922],
        [0.9894],
        [0.9906],
        [0.9965],
        [0.9959],
        [0.9904],
        [0.9891],
        [0.9919],
        [0.9937],
        [0.9855],
        [0.9910],
        [0.9952],
        [0.9944],
        [0.9915],
        [0.9874],
        [0.9932],
        [0.9924],
        [0.9883],
        [0.9898],
        [0.9974],
        [0.9980],
        [0.9899],
        [0.9884],
        [0.9926],
        [0.9930],
        [0.9872],
        [0.9914],
        [0.9942]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[12.8408]],
        [[ 7.9375]],
        [[ 7.4786]],
        [[ 8.9409]],
        [[ 9.0866]],
        [[ 7.1388]],
        [[ 8.4824]],
        [[ 9.6130]],
        [[ 9.9394]],
        [[ 8.2942]],
        [[ 6.6620]],
        [[ 9.3302]],
        [[ 8.7231]],
        [[ 7.7216]],
        [[ 8.1284]],
        [[10.6471]],
        [[10.3362]],
        [[ 8.0344]],
        [[ 7.6119]],
        [[ 8.6286]],
        [[ 9.2081]],
        [[ 6.1823]],
        [[ 8.1989]],
        [[ 9.7607]],
        [[ 9.4615]],
        [[ 8.3814]],
        [[ 6.9360]],
        [[ 8.9706]],
        [[ 8.8343]],
        [[ 7.3404]],
        [[ 7.8318]],
        [[11.1247]],
        [[10.8061]],
        [[ 7.7827]],
        [[ 7.2917]],
        [[ 8.7620]],
        [[ 9.0482]],
        [[ 7.0056]],
        [[ 8.4254]],
        [[ 9.5440]],
        [[ 9.8853]],
        [[ 8.2302]],
        [[ 6.4563]],
        [[ 9.2782]],
        [[ 8.5723]],
        [[ 7.5580]],
        [[ 8.0018]],
        [[10.1571]],
        [[10.4199]],
        [[ 8.0996]],
        [[ 7.6744]],
        [[ 8.6689]],
        [[ 9.4010]],
        [[ 6.7857]],
        [[ 8.3223]],
        [[10.0778]],
        [[ 9.6996]],
        [[ 8.5237]],
        [[ 7.1895]],
        [[ 9.1646]],
        [[ 8.8695]],
        [[ 7.4392]],
        [[ 7.8936]],
        [[11.5169]],
        [[11.2560]],
        [[ 7.8654]],
        [[ 7.4030]],
        [[ 8.8397]],
        [[ 9.1306]],
        [[ 7.1425]],
        [[ 8.4970]],
        [[ 9.6528]],
        [[10.0333]],
        [[ 8.3008]],
        [[ 6.7232]],
        [[ 9.3735]],
        [[ 8.6478]],
        [[ 7.6478]],
        [[ 8.0769]],
        [[10.3564]],
        [[10.0933]],
        [[ 7.9724]],
        [[ 7.5215]],
        [[ 8.5454]],
        [[ 9.2448]],
        [[ 6.3021]],
        [[ 8.2026]],
        [[ 9.8360]],
        [[ 9.5106]],
        [[ 8.4048]],
        [[ 6.9610]],
        [[ 9.0228]],
        [[ 8.7395]],
        [[ 7.2604]],
        [[ 7.7600]],
        [[10.7098]],
        [[10.9845]],
        [[ 7.8087]],
        [[ 7.3093]],
        [[ 8.8105]],
        [[ 8.9467]],
        [[ 6.8889]],
        [[ 8.3616]],
        [[ 9.4308]],
        [[ 9.7146]],
        [[ 8.1703]],
        [[ 5.8080]],
        [[ 9.1750]],
        [[ 8.6022]],
        [[ 7.5777]],
        [[ 8.0059]],
        [[10.2633]],
        [[10.5703]],
        [[ 8.1066]],
        [[ 7.6965]],
        [[ 8.7025]],
        [[ 9.3028]],
        [[ 6.5822]],
        [[ 8.2719]],
        [[ 9.8982]],
        [[ 9.5700]],
        [[ 8.4565]],
        [[ 7.0906]],
        [[ 9.0546]],
        [[ 8.9096]],
        [[ 7.4425]],
        [[ 7.9089]],
        [[11.8741]],
        [[11.8343]],
        [[ 7.9185]],
        [[ 7.4702]],
        [[ 8.8947]],
        [[ 9.0794]],
        [[ 7.0598]],
        [[ 8.4521]],
        [[ 9.5849]],
        [[ 9.9277]],
        [[ 8.2518]],
        [[ 6.5514]],
        [[ 9.3060]],
        [[ 8.6920]],
        [[ 7.7004]],
        [[ 8.1224]],
        [[10.4918]],
        [[10.2212]],
        [[ 8.0279]],
        [[ 7.5899]],
        [[ 8.5977]],
        [[ 9.1859]],
        [[ 5.7561]],
        [[ 8.1565]],
        [[ 9.7499]],
        [[ 9.4355]],
        [[ 8.3516]],
        [[ 6.8326]],
        [[ 8.9641]],
        [[ 8.7892]],
        [[ 7.3316]],
        [[ 7.8116]],
        [[10.9401]],
        [[10.7251]],
        [[ 7.7483]],
        [[ 7.2245]],
        [[ 8.7554]],
        [[ 9.0001]],
        [[ 6.9927]],
        [[ 8.4075]],
        [[ 9.4989]],
        [[ 9.8056]],
        [[ 8.2244]],
        [[ 6.3587]],
        [[ 9.2400]],
        [[ 8.5539]],
        [[ 7.5194]],
        [[ 7.9574]],
        [[10.1428]],
        [[10.4005]],
        [[ 8.0566]],
        [[ 7.6381]],
        [[ 8.6506]],
        [[ 9.3596]],
        [[ 6.7335]],
        [[ 8.3162]],
        [[ 9.9857]],
        [[ 9.6502]],
        [[ 8.5053]],
        [[ 7.1796]],
        [[ 9.1136]],
        [[ 8.8631]],
        [[ 7.3796]],
        [[ 7.8611]],
        [[11.3338]],
        [[11.5470]],
        [[ 7.8851]],
        [[ 7.4113]],
        [[ 8.8855]],
        [[ 9.1376]],
        [[ 7.2158]],
        [[ 8.5270]],
        [[ 9.6829]],
        [[10.0469]],
        [[ 8.3427]],
        [[ 6.8101]],
        [[ 9.3981]],
        [[ 8.6790]],
        [[ 7.6691]],
        [[ 8.0833]],
        [[10.4888]],
        [[10.1958]],
        [[ 7.9785]],
        [[ 7.5450]],
        [[ 8.5757]],
        [[ 9.2681]],
        [[ 6.4680]],
        [[ 8.2451]],
        [[ 9.8469]],
        [[ 9.5373]],
        [[ 8.4350]],
        [[ 7.0490]],
        [[ 9.0299]],
        [[ 8.7835]],
        [[ 7.2704]],
        [[ 7.7802]],
        [[10.8496]],
        [[11.0982]],
        [[ 7.8419]],
        [[ 7.3723]],
        [[ 8.8168]],
        [[ 8.9943]],
        [[ 6.9028]],
        [[ 8.3798]],
        [[ 9.4735]],
        [[ 9.7881]],
        [[ 8.1766]],
        [[ 6.0834]],
        [[ 9.2124]],
        [[ 8.6204]],
        [[ 7.6153]],
        [[ 8.0494]],
        [[10.2803]],
        [[10.5921]],
        [[ 8.1496]],
        [[ 7.7314]],
        [[ 8.7214]],
        [[ 9.3423]],
        [[ 6.6491]],
        [[ 8.2777]],
        [[ 9.9843]],
        [[ 9.6174]],
        [[ 8.4745]],
        [[ 7.1021]],
        [[ 9.1039]],
        [[ 8.9164]],
        [[ 7.4989]],
        [[ 7.9413]],
        [[12.3191]],
        [[12.2791]],
        [[ 7.9528]],
        [[ 7.4975]],
        [[ 8.9285]],
        [[ 9.0981]],
        [[ 7.1155]],
        [[ 8.4696]],
        [[ 9.6287]],
        [[ 9.9632]],
        [[ 8.2796]],
        [[ 6.6128]],
        [[ 9.3448]],
        [[ 8.7132]],
        [[ 7.7361]],
        [[ 8.1416]],
        [[10.6079]],
        [[10.3002]],
        [[ 8.0443]],
        [[ 7.6241]],
        [[ 8.6154]],
        [[ 9.2261]],
        [[ 6.0710]],
        [[ 8.1876]],
        [[ 9.7861]],
        [[ 9.4795]],
        [[ 8.3720]],
        [[ 6.9126]],
        [[ 8.9853]],
        [[ 8.8187]],
        [[ 7.3575]],
        [[ 7.8439]],
        [[11.0329]],
        [[10.8707]],
        [[ 7.7713]],
        [[ 7.2769]],
        [[ 8.7752]],
        [[ 9.0320]],
        [[ 7.0284]],
        [[ 8.4370]],
        [[ 9.5222]],
        [[ 9.8604]],
        [[ 8.2402]],
        [[ 6.5012]],
        [[ 9.2619]],
        [[ 8.5868]],
        [[ 7.5436]],
        [[ 7.9900]],
        [[10.1928]],
        [[10.4551]],
        [[ 8.0853]],
        [[ 7.6570]],
        [[ 8.6809]],
        [[ 9.3872]],
        [[ 6.8212]],
        [[ 8.3349]],
        [[10.0562]],
        [[ 9.6810]],
        [[ 8.5380]],
        [[ 7.2139]],
        [[ 9.1508]],
        [[ 8.8802]],
        [[ 7.4214]],
        [[ 7.8798]],
        [[11.6365]],
        [[11.3512]],
        [[ 7.8500]],
        [[ 7.3823]],
        [[ 8.8521]],
        [[ 9.1185]],
        [[ 7.1658]],
        [[ 8.5095]],
        [[ 9.6375]],
        [[10.0088]],
        [[ 8.3150]],
        [[ 6.7659]],
        [[ 9.3582]],
        [[ 8.6580]],
        [[ 7.6322]],
        [[ 8.0639]],
        [[10.3853]],
        [[10.1239]],
        [[ 7.9618]],
        [[ 7.5091]],
        [[ 8.5581]],
        [[ 9.2272]],
        [[ 6.3696]],
        [[ 8.2142]],
        [[ 9.8090]],
        [[ 9.4917]],
        [[ 8.4146]],
        [[ 6.9822]],
        [[ 9.0082]],
        [[ 8.7543]],
        [[ 7.2424]],
        [[ 7.7470]],
        [[10.7737]],
        [[10.9132]],
        [[ 7.8195]],
        [[ 7.3243]],
        [[ 8.7968]],
        [[ 8.9628]],
        [[ 6.8607]],
        [[ 8.3504]],
        [[ 9.4509]],
        [[ 9.7362]],
        [[ 8.1607]],
        [[ 5.3830]],
        [[ 9.1910]],
        [[ 8.5874]],
        [[ 7.5922]],
        [[ 8.0173]],
        [[10.2262]],
        [[10.5295]],
        [[ 8.1212]],
        [[ 7.7132]],
        [[ 8.6909]],
        [[ 9.3155]],
        [[ 6.5311]],
        [[ 8.2589]],
        [[ 9.9179]],
        [[ 9.5879]],
        [[ 8.4420]],
        [[ 7.0635]],
        [[ 9.0675]],
        [[ 8.8992]],
        [[ 7.4595]],
        [[ 7.9229]],
        [[11.7081]],
        [[12.1109]],
        [[ 7.9076]],
        [[ 7.4574]],
        [[ 8.9083]],
        [[ 9.0630]],
        [[ 7.0812]],
        [[ 8.4637]],
        [[ 9.5625]],
        [[ 9.9019]],
        [[ 8.2617]],
        [[ 6.5894]],
        [[ 9.2895]],
        [[ 8.7068]],
        [[ 7.6872]],
        [[ 8.1108]],
        [[10.5417]],
        [[10.2501]],
        [[ 8.0133]],
        [[ 7.5716]],
        [[ 8.6095]],
        [[ 9.1736]],
        [[ 5.9986]],
        [[ 8.1692]],
        [[ 9.7333]],
        [[ 9.4198]],
        [[ 8.3657]],
        [[ 6.8694]],
        [[ 8.9513]],
        [[ 8.7996]],
        [[ 7.3121]],
        [[ 7.7974]],
        [[10.9958]],
        [[10.6767]],
        [[ 7.7647]],
        [[ 7.2477]],
        [[ 8.7438]],
        [[ 9.0112]],
        [[ 6.9651]],
        [[ 8.3947]],
        [[ 9.5134]],
        [[ 9.8269]],
        [[ 8.2097]],
        [[ 6.2686]],
        [[ 9.2539]],
        [[ 8.5443]],
        [[ 7.5357]],
        [[ 7.9711]],
        [[10.1189]],
        [[10.3621]],
        [[ 8.0665]],
        [[ 7.6500]],
        [[ 8.6373]],
        [[ 9.3791]],
        [[ 6.6983]],
        [[ 8.3050]],
        [[10.0161]],
        [[ 9.6706]],
        [[ 8.4958]],
        [[ 7.1620]],
        [[ 9.1293]],
        [[ 8.8474]],
        [[ 7.3961]],
        [[ 7.8731]],
        [[11.2169]],
        [[11.4096]],
        [[ 7.8957]],
        [[ 7.4251]],
        [[ 8.8715]],
        [[ 9.1550]],
        [[ 7.1966]],
        [[ 8.5158]],
        [[ 9.7066]],
        [[10.0752]],
        [[ 8.3332]],
        [[ 6.7825]],
        [[ 9.4162]],
        [[ 8.6639]],
        [[ 7.6829]],
        [[ 8.0945]],
        [[10.4427]],
        [[10.1674]],
        [[ 7.9936]],
        [[ 7.5632]],
        [[ 8.5643]],
        [[ 9.2806]],
        [[ 6.4043]],
        [[ 8.2322]],
        [[ 9.8658]],
        [[ 9.5548]],
        [[ 8.4205]],
        [[ 7.0205]],
        [[ 9.0426]],
        [[ 8.7735]],
        [[ 7.2900]],
        [[ 7.7950]],
        [[10.8005]],
        [[11.1756]],
        [[ 7.8263]],
        [[ 7.3510]],
        [[ 8.8291]],
        [[ 8.9829]],
        [[ 6.9334]],
        [[ 8.3923]],
        [[ 9.4599]],
        [[ 9.7681]],
        [[ 8.1909]],
        [[ 6.2165]],
        [[ 9.1983]],
        [[ 8.6306]],
        [[ 7.5994]],
        [[ 8.0363]],
        [[10.3072]],
        [[10.6424]],
        [[ 8.1394]],
        [[ 7.7203]],
        [[ 8.7345]],
        [[ 9.3237]],
        [[ 6.6858]],
        [[ 8.2893]],
        [[ 9.9539]],
        [[ 9.5971]],
        [[ 8.4843]],
        [[ 7.1202]],
        [[ 9.0888]],
        [[ 8.9321]],
        [[ 7.4841]],
        [[ 7.9291]],
        [[13.3062]],
        [[13.5711]],
        [[ 7.9309]],
        [[ 7.4859]],
        [[ 8.9340]],
        [[ 9.0939]],
        [[ 7.1289]],
        [[ 8.4887]],
        [[ 9.6044]],
        [[ 9.9512]],
        [[ 8.2876]],
        [[ 6.6814]],
        [[ 9.3215]],
        [[ 8.7300]],
        [[ 7.7148]],
        [[ 8.1351]],
        [[10.6241]],
        [[10.3205]],
        [[ 8.0408]],
        [[ 7.6052]],
        [[ 8.6350]],
        [[ 9.2004]],
        [[ 6.2271]],
        [[ 8.1926]],
        [[ 9.7703]],
        [[ 9.4532]],
        [[ 8.3880]],
        [[ 6.9225]],
        [[ 8.9780]],
        [[ 8.8272]],
        [[ 7.3491]],
        [[ 7.8245]],
        [[11.1661]],
        [[10.7805]],
        [[ 7.7897]],
        [[ 7.2832]],
        [[ 8.7686]],
        [[ 9.0411]],
        [[ 7.0170]],
        [[ 8.4192]],
        [[ 9.5523]],
        [[ 9.8740]],
        [[ 8.2369]],
        [[ 6.4271]],
        [[ 9.2867]],
        [[ 8.5656]],
        [[ 7.5653]],
        [[ 7.9949]],
        [[10.1715]],
        [[10.4373]],
        [[ 8.0932]],
        [[ 7.6809]],
        [[ 8.6625]],
        [[ 9.4096]],
        [[ 6.7702]],
        [[ 8.3285]],
        [[10.0654]],
        [[ 9.7095]],
        [[ 8.5171]],
        [[ 7.1995]],
        [[ 9.1566]],
        [[ 8.8766]],
        [[ 7.4311]],
        [[ 7.9007]],
        [[11.4533]],
        [[11.2041]],
        [[ 7.8717]],
        [[ 7.3937]],
        [[ 8.8460]],
        [[ 9.1236]],
        [[ 7.1543]],
        [[ 8.4911]],
        [[ 9.6635]],
        [[10.0197]],
        [[ 8.3063]],
        [[ 6.7038]],
        [[ 9.3810]],
        [[ 8.6422]],
        [[ 7.6553]],
        [[ 8.0713]],
        [[10.3750]],
        [[10.1087]],
        [[ 7.9662]],
        [[ 7.5301]],
        [[ 8.5395]],
        [[ 9.2522]],
        [[ 6.2563]],
        [[ 8.2084]],
        [[ 9.8238]],
        [[ 9.5198]],
        [[ 8.3994]],
        [[ 6.9746]],
        [[ 9.0166]],
        [[ 8.7452]],
        [[ 7.2505]],
        [[ 7.7662]],
        [[10.6837]],
        [[11.0239]],
        [[ 7.8022]],
        [[ 7.3194]],
        [[ 8.8043]],
        [[ 8.9532]],
        [[ 6.8728]],
        [[ 8.3674]],
        [[ 9.4216]],
        [[ 9.7252]],
        [[ 8.1648]],
        [[ 5.9282]],
        [[ 9.1683]],
        [[ 8.6078]],
        [[ 7.5699]],
        [[ 8.0116]],
        [[10.2466]],
        [[10.5463]],
        [[ 8.1125]],
        [[ 7.6888]],
        [[ 8.7086]],
        [[ 9.2952]],
        [[ 6.6072]],
        [[ 8.2660]],
        [[ 9.9112]],
        [[ 9.5605]],
        [[ 8.4620]],
        [[ 7.0787]],
        [[ 9.0610]],
        [[ 8.9036]],
        [[ 7.4510]],
        [[ 7.9030]],
        [[11.9992]],
        [[11.7332]],
        [[ 7.9243]],
        [[ 7.4618]],
        [[ 8.9007]],
        [[ 9.0730]],
        [[ 7.0719]],
        [[ 8.4467]],
        [[ 9.5946]],
        [[ 9.9145]],
        [[ 8.2576]],
        [[ 6.5238]],
        [[ 9.3137]],
        [[ 8.6860]],
        [[ 7.7081]],
        [[ 8.1165]],
        [[10.5144]],
        [[10.2375]],
        [[ 8.0222]],
        [[ 7.5976]],
        [[ 8.5922]],
        [[ 9.1926]],
        [[ 5.5139]],
        [[ 8.1620]],
        [[ 9.7391]],
        [[ 9.4448]],
        [[ 8.3458]],
        [[ 6.8497]],
        [[ 8.9576]],
        [[ 8.7954]],
        [[ 7.3217]],
        [[ 7.8181]],
        [[10.9043]],
        [[10.7525]],
        [[ 7.7420]],
        [[ 7.2347]],
        [[ 8.7497]],
        [[ 9.0063]],
        [[ 6.9793]],
        [[ 8.4130]],
        [[ 9.4898]],
        [[ 9.8176]],
        [[ 8.2186]],
        [[ 6.3960]],
        [[ 9.2326]],
        [[ 8.5598]],
        [[ 7.5108]],
        [[ 7.9635]],
        [[10.1270]],
        [[10.3814]],
        [[ 8.0622]],
        [[ 7.6305]],
        [[ 8.6562]],
        [[ 9.3523]],
        [[ 6.7521]],
        [[ 8.3107]],
        [[ 9.9988]],
        [[ 9.6395]],
        [[ 8.5112]],
        [[ 7.1681]],
        [[ 9.1205]],
        [[ 8.8568]],
        [[ 7.3891]],
        [[ 7.8547]],
        [[11.3952]],
        [[11.6194]],
        [[ 7.8780]],
        [[ 7.4195]],
        [[ 8.8783]],
        [[ 9.1455]],
        [[ 7.2060]],
        [[ 8.5336]],
        [[ 9.6732]],
        [[10.0591]],
        [[ 8.3365]],
        [[ 6.8248]],
        [[ 9.3895]],
        [[ 8.6854]],
        [[ 7.6627]],
        [[ 8.0897]],
        [[10.4705]],
        [[10.1811]],
        [[ 7.9854]],
        [[ 7.5375]],
        [[ 8.5824]],
        [[ 9.2597]],
        [[ 6.4951]],
        [[ 8.2385]],
        [[ 9.8579]],
        [[ 9.5292]],
        [[ 8.4413]],
        [[ 7.0380]],
        [[ 9.0370]],
        [[ 8.7770]],
        [[ 7.2790]],
        [[ 7.7732]],
        [[10.8774]],
        [[11.0600]],
        [[ 7.8491]],
        [[ 7.3638]],
        [[ 8.8238]],
        [[ 8.9869]],
        [[ 6.9166]],
        [[ 8.3732]],
        [[ 9.4819]],
        [[ 9.7784]],
        [[ 8.1828]],
        [[ 6.0187]],
        [[ 9.2201]],
        [[ 8.6141]],
        [[ 7.6220]],
        [[ 8.0430]],
        [[10.2955]],
        [[10.6143]],
        [[ 8.1429]],
        [[ 7.7381]],
        [[ 8.7146]],
        [[ 9.3511]],
        [[ 6.6285]],
        [[ 8.2843]],
        [[ 9.9721]],
        [[ 9.6260]],
        [[ 8.4683]],
        [[ 7.1123]],
        [[ 9.0966]],
        [[ 8.9233]],
        [[ 7.4917]],
        [[ 7.9478]],
        [[12.1501]],
        [[12.5074]],
        [[ 7.9458]],
        [[ 7.5051]],
        [[ 8.9212]],
        [[ 9.1059]],
        [[ 7.1047]],
        [[ 8.4762]],
        [[ 9.6194]],
        [[ 9.9745]],
        [[ 8.2733]],
        [[ 6.6325]],
        [[ 9.3365]],
        [[ 8.7197]],
        [[ 7.7298]],
        [[ 8.1479]],
        [[10.5873]],
        [[10.2839]],
        [[ 8.0511]],
        [[ 7.6170]],
        [[ 8.6222]],
        [[ 9.2178]],
        [[ 6.1320]],
        [[ 8.1809]],
        [[ 9.7966]],
        [[ 9.4716]],
        [[ 8.3782]],
        [[ 6.8996]],
        [[ 8.9923]],
        [[ 8.8121]],
        [[ 7.3654]],
        [[ 7.8371]],
        [[11.0674]],
        [[10.8414]],
        [[ 7.7787]],
        [[ 7.2677]],
        [[ 8.7821]],
        [[ 9.0245]],
        [[ 7.0402]],
        [[ 8.4304]],
        [[ 9.5309]],
        [[ 9.8501]],
        [[ 8.2464]],
        [[ 6.4762]],
        [[ 9.2699]],
        [[ 8.5805]],
        [[ 7.5506]],
        [[ 7.9835]],
        [[10.2068]],
        [[10.4743]],
        [[ 8.0785]],
        [[ 7.6640]],
        [[ 8.6741]],
        [[ 9.3962]],
        [[ 6.8055]],
        [[ 8.3415]],
        [[10.0432]],
        [[ 9.6901]],
        [[ 8.5317]],
        [[ 7.2230]],
        [[ 9.1433]],
        [[ 8.8869]],
        [[ 7.4137]],
        [[ 7.8865]],
        [[11.5670]],
        [[11.2962]],
        [[ 7.8560]],
        [[ 7.3733]],
        [[ 8.8580]],
        [[ 9.1120]],
        [[ 7.1766]],
        [[ 8.5040]],
        [[ 9.6475]],
        [[ 9.9948]],
        [[ 8.3209]],
        [[ 6.7466]],
        [[ 9.3660]],
        [[ 8.6520]],
        [[ 7.6401]],
        [[ 8.0579]],
        [[10.4056]],
        [[10.1388]],
        [[ 7.9560]],
        [[ 7.5172]],
        [[ 8.5525]],
        [[ 9.2340]],
        [[ 6.3325]],
        [[ 8.2197]],
        [[ 9.7977]],
        [[ 9.5014]],
        [[ 8.4088]],
        [[ 6.9963]],
        [[ 9.0016]],
        [[ 8.7604]],
        [[ 7.2317]],
        [[ 7.7536]],
        [[10.7440]],
        [[10.9472]],
        [[ 7.8135]],
        [[ 7.3336]],
        [[ 8.7910]],
        [[ 8.9689]],
        [[ 6.8449]],
        [[ 8.3559]],
        [[ 9.4421]],
        [[ 9.7476]],
        [[ 8.1548]],
        [[ 5.7176]],
        [[ 9.1838]],
        [[ 8.5933]],
        [[ 7.5840]],
        [[ 8.0234]],
        [[10.2091]],
        [[10.5078]],
        [[ 8.1268]],
        [[ 7.7059]],
        [[ 8.6965]],
        [[ 9.3083]],
        [[ 6.5568]],
        [[ 8.2534]],
        [[ 9.9303]],
        [[ 9.5777]],
        [[ 8.4478]],
        [[ 7.0505]],
        [[ 9.0743]],
        [[ 8.8928]],
        [[ 7.4684]],
        [[ 7.9167]],
        [[11.8119]],
        [[11.9584]],
        [[ 7.9139]],
        [[ 7.4484]],
        [[ 8.9148]],
        [[ 9.0562]],
        [[ 7.0938]],
        [[ 8.4578]],
        [[ 9.5726]],
        [[ 9.8898]],
        [[ 8.2672]],
        [[ 6.5652]],
        [[ 9.2966]],
        [[ 8.7011]],
        [[ 7.6945]],
        [[ 8.1053]],
        [[10.5641]],
        [[10.2678]],
        [[ 8.0073]],
        [[ 7.5798]],
        [[ 8.6036]],
        [[ 9.1808]],
        [[ 5.8962]],
        [[ 8.1751]],
        [[ 9.7220]],
        [[ 9.4285]],
        [[ 8.3603]],
        [[ 6.8848]],
        [[ 8.9452]],
        [[ 8.8055]],
        [[ 7.3027]],
        [[ 7.8035]],
        [[10.9598]],
        [[10.7043]],
        [[ 7.7581]],
        [[ 7.2583]],
        [[ 8.7376]],
        [[ 9.0178]],
        [[ 6.9505]],
        [[ 8.4005]],
        [[ 9.5037]],
        [[ 9.8385]],
        [[ 8.2042]],
        [[ 6.3109]],
        [[ 9.2470]],
        [[ 8.5498]],
        [[ 7.5277]],
        [[ 7.9769]],
        [[10.1042]],
        [[10.3427]],
        [[ 8.0725]],
        [[ 7.6421]],
        [[ 8.6433]],
        [[ 9.3712]],
        [[ 6.7190]],
        [[ 8.2991]],
        [[10.0304]],
        [[ 9.6604]],
        [[ 8.5013]],
        [[ 7.1510]],
        [[ 9.1358]],
        [[ 8.8415]],
        [[ 7.4049]],
        [[ 7.8672]],
        [[11.2665]],
        [[11.4656]],
        [[ 7.8890]],
        [[ 7.4327]],
        [[ 8.8648]],
        [[ 9.1625]],
        [[ 7.1872]],
        [[ 8.5220]],
        [[ 9.6974]],
        [[10.0885]],
        [[ 8.3266]],
        [[ 6.7988]],
        [[ 9.4070]],
        [[ 8.6707]],
        [[ 7.6760]],
        [[ 8.1013]],
        [[10.4240]],
        [[10.1540]],
        [[ 8.0001]],
        [[ 7.5563]],
        [[ 8.5706]],
        [[ 9.2726]],
        [[ 6.4328]],
        [[ 8.2259]],
        [[ 9.8762]],
        [[ 9.5460]],
        [[ 8.4271]],
        [[ 7.0084]],
        [[ 9.0502]],
        [[ 8.7666]],
        [[ 7.2990]],
        [[ 7.7876]],
        [[10.8286]],
        [[11.1364]],
        [[ 7.8332]],
        [[ 7.3430]],
        [[ 8.8357]],
        [[ 8.9759]],
        [[ 6.9458]],
        [[ 8.3861]],
        [[ 9.4677]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[0.9870],
        [0.8818],
        [0.8720],
        [0.9033],
        [0.9065],
        [0.8647],
        [0.8935],
        [0.9178],
        [0.9247],
        [0.8895],
        [0.8545],
        [0.9117],
        [0.8987],
        [0.8772],
        [0.8859],
        [0.9399],
        [0.9333],
        [0.8839],
        [0.8748],
        [0.8966],
        [0.9091],
        [0.8442],
        [0.8874],
        [0.9209],
        [0.9145],
        [0.8913],
        [0.8603],
        [0.9040],
        [0.9011],
        [0.8690],
        [0.8796],
        [0.9502],
        [0.9433],
        [0.8785],
        [0.8680],
        [0.8995],
        [0.9056],
        [0.8618],
        [0.8923],
        [0.9163],
        [0.9236],
        [0.8881],
        [0.8501],
        [0.9106],
        [0.8954],
        [0.8737],
        [0.8832],
        [0.9294],
        [0.9351],
        [0.8853],
        [0.8762],
        [0.8975],
        [0.9132],
        [0.8571],
        [0.8901],
        [0.9277],
        [0.9196],
        [0.8944],
        [0.8658],
        [0.9081],
        [0.9018],
        [0.8711],
        [0.8809],
        [0.9586],
        [0.9530],
        [0.8803],
        [0.8704],
        [0.9012],
        [0.9074],
        [0.8648],
        [0.8938],
        [0.9186],
        [0.9268],
        [0.8896],
        [0.8558],
        [0.9126],
        [0.8971],
        [0.8756],
        [0.8848],
        [0.9337],
        [0.9280],
        [0.8826],
        [0.8729],
        [0.8949],
        [0.9099],
        [0.8468],
        [0.8875],
        [0.9225],
        [0.9156],
        [0.8918],
        [0.8609],
        [0.9051],
        [0.8990],
        [0.8673],
        [0.8780],
        [0.9413],
        [0.9472],
        [0.8791],
        [0.8684],
        [0.9005],
        [0.9035],
        [0.8593],
        [0.8909],
        [0.9138],
        [0.9199],
        [0.8868],
        [0.8362],
        [0.9084],
        [0.8961],
        [0.8741],
        [0.8833],
        [0.9317],
        [0.9383],
        [0.8854],
        [0.8767],
        [0.8982],
        [0.9111],
        [0.8528],
        [0.8890],
        [0.9239],
        [0.9168],
        [0.8930],
        [0.8637],
        [0.9058],
        [0.9027],
        [0.8712],
        [0.8812],
        [0.9662],
        [0.9654],
        [0.8814],
        [0.8718],
        [0.9023],
        [0.9063],
        [0.8630],
        [0.8929],
        [0.9171],
        [0.9245],
        [0.8886],
        [0.8521],
        [0.9112],
        [0.8980],
        [0.8767],
        [0.8858],
        [0.9366],
        [0.9308],
        [0.8838],
        [0.8744],
        [0.8960],
        [0.9086],
        [0.8350],
        [0.8865],
        [0.9207],
        [0.9139],
        [0.8907],
        [0.8581],
        [0.9038],
        [0.9001],
        [0.8688],
        [0.8791],
        [0.9462],
        [0.9416],
        [0.8778],
        [0.8665],
        [0.8994],
        [0.9046],
        [0.8616],
        [0.8919],
        [0.9153],
        [0.9219],
        [0.8880],
        [0.8480],
        [0.9098],
        [0.8950],
        [0.8729],
        [0.8822],
        [0.9291],
        [0.9346],
        [0.8844],
        [0.8754],
        [0.8971],
        [0.9123],
        [0.8560],
        [0.8899],
        [0.9257],
        [0.9185],
        [0.8940],
        [0.8656],
        [0.9070],
        [0.9017],
        [0.8699],
        [0.8802],
        [0.9546],
        [0.9592],
        [0.8807],
        [0.8705],
        [0.9021],
        [0.9076],
        [0.8663],
        [0.8945],
        [0.9192],
        [0.9271],
        [0.8905],
        [0.8576],
        [0.9131],
        [0.8977],
        [0.8761],
        [0.8849],
        [0.9365],
        [0.9302],
        [0.8827],
        [0.8734],
        [0.8955],
        [0.9104],
        [0.8503],
        [0.8884],
        [0.9228],
        [0.9161],
        [0.8925],
        [0.8628],
        [0.9052],
        [0.9000],
        [0.8675],
        [0.8784],
        [0.9443],
        [0.9496],
        [0.8798],
        [0.8697],
        [0.9007],
        [0.9045],
        [0.8596],
        [0.8913],
        [0.9148],
        [0.9215],
        [0.8869],
        [0.8421],
        [0.9092],
        [0.8965],
        [0.8749],
        [0.8842],
        [0.9321],
        [0.9387],
        [0.8864],
        [0.8774],
        [0.8986],
        [0.9119],
        [0.8542],
        [0.8891],
        [0.9257],
        [0.9178],
        [0.8933],
        [0.8639],
        [0.9068],
        [0.9028],
        [0.8724],
        [0.8819],
        [0.9758],
        [0.9749],
        [0.8821],
        [0.8724],
        [0.9031],
        [0.9067],
        [0.8642],
        [0.8932],
        [0.9181],
        [0.9253],
        [0.8892],
        [0.8534],
        [0.9120],
        [0.8985],
        [0.8775],
        [0.8862],
        [0.9391],
        [0.9325],
        [0.8841],
        [0.8751],
        [0.8964],
        [0.9095],
        [0.8418],
        [0.8872],
        [0.9215],
        [0.9149],
        [0.8911],
        [0.8598],
        [0.9043],
        [0.9007],
        [0.8694],
        [0.8798],
        [0.9482],
        [0.9447],
        [0.8783],
        [0.8677],
        [0.8998],
        [0.9053],
        [0.8623],
        [0.8925],
        [0.9158],
        [0.9231],
        [0.8883],
        [0.8510],
        [0.9102],
        [0.8957],
        [0.8734],
        [0.8829],
        [0.9302],
        [0.9358],
        [0.8850],
        [0.8758],
        [0.8978],
        [0.9129],
        [0.8579],
        [0.8903],
        [0.9273],
        [0.9192],
        [0.8947],
        [0.8663],
        [0.9078],
        [0.9020],
        [0.8708],
        [0.8806],
        [0.9611],
        [0.9550],
        [0.8799],
        [0.8699],
        [0.9014],
        [0.9071],
        [0.8653],
        [0.8941],
        [0.9183],
        [0.9262],
        [0.8899],
        [0.8567],
        [0.9123],
        [0.8973],
        [0.8753],
        [0.8845],
        [0.9343],
        [0.9287],
        [0.8823],
        [0.8726],
        [0.8951],
        [0.9095],
        [0.8482],
        [0.8878],
        [0.9220],
        [0.9151],
        [0.8921],
        [0.8613],
        [0.9048],
        [0.8993],
        [0.8669],
        [0.8777],
        [0.9426],
        [0.9456],
        [0.8793],
        [0.8687],
        [0.9002],
        [0.9038],
        [0.8587],
        [0.8907],
        [0.9143],
        [0.9204],
        [0.8866],
        [0.8270],
        [0.9087],
        [0.8958],
        [0.8744],
        [0.8835],
        [0.9309],
        [0.9374],
        [0.8858],
        [0.8770],
        [0.8980],
        [0.9114],
        [0.8517],
        [0.8887],
        [0.9243],
        [0.9172],
        [0.8926],
        [0.8631],
        [0.9061],
        [0.9024],
        [0.8716],
        [0.8815],
        [0.9627],
        [0.9713],
        [0.8812],
        [0.8715],
        [0.9026],
        [0.9060],
        [0.8635],
        [0.8931],
        [0.9167],
        [0.9239],
        [0.8888],
        [0.8529],
        [0.9108],
        [0.8983],
        [0.8765],
        [0.8855],
        [0.9377],
        [0.9314],
        [0.8834],
        [0.8740],
        [0.8962],
        [0.9083],
        [0.8402],
        [0.8868],
        [0.9203],
        [0.9136],
        [0.8910],
        [0.8589],
        [0.9036],
        [0.9003],
        [0.8684],
        [0.8788],
        [0.9474],
        [0.9406],
        [0.8781],
        [0.8670],
        [0.8991],
        [0.9048],
        [0.8610],
        [0.8916],
        [0.9156],
        [0.9223],
        [0.8877],
        [0.8460],
        [0.9100],
        [0.8948],
        [0.8732],
        [0.8825],
        [0.9286],
        [0.9338],
        [0.8846],
        [0.8757],
        [0.8968],
        [0.9127],
        [0.8552],
        [0.8897],
        [0.9264],
        [0.9190],
        [0.8938],
        [0.8652],
        [0.9074],
        [0.9013],
        [0.8702],
        [0.8804],
        [0.9521],
        [0.9563],
        [0.8809],
        [0.8708],
        [0.9018],
        [0.9079],
        [0.8659],
        [0.8942],
        [0.9198],
        [0.9277],
        [0.8903],
        [0.8571],
        [0.9135],
        [0.8974],
        [0.8764],
        [0.8852],
        [0.9355],
        [0.9296],
        [0.8830],
        [0.8738],
        [0.8953],
        [0.9106],
        [0.8489],
        [0.8881],
        [0.9232],
        [0.9165],
        [0.8922],
        [0.8622],
        [0.9055],
        [0.8997],
        [0.8679],
        [0.8788],
        [0.9432],
        [0.9513],
        [0.8794],
        [0.8692],
        [0.9009],
        [0.9042],
        [0.8603],
        [0.8916],
        [0.9145],
        [0.9211],
        [0.8873],
        [0.8449],
        [0.9089],
        [0.8967],
        [0.8746],
        [0.8839],
        [0.9326],
        [0.9398],
        [0.8862],
        [0.8772],
        [0.8989],
        [0.9115],
        [0.8550],
        [0.8894],
        [0.9251],
        [0.9174],
        [0.8935],
        [0.8643],
        [0.9065],
        [0.9031],
        [0.8721],
        [0.8816],
        [0.9969],
        [1.0026],
        [0.8817],
        [0.8721],
        [0.9032],
        [0.9066],
        [0.8645],
        [0.8936],
        [0.9176],
        [0.9250],
        [0.8893],
        [0.8549],
        [0.9115],
        [0.8988],
        [0.8770],
        [0.8861],
        [0.9394],
        [0.9329],
        [0.8840],
        [0.8747],
        [0.8968],
        [0.9089],
        [0.8451],
        [0.8873],
        [0.9211],
        [0.9143],
        [0.8915],
        [0.8601],
        [0.9041],
        [0.9009],
        [0.8692],
        [0.8794],
        [0.9511],
        [0.9428],
        [0.8787],
        [0.8678],
        [0.8996],
        [0.9055],
        [0.8621],
        [0.8922],
        [0.9164],
        [0.9233],
        [0.8882],
        [0.8494],
        [0.9108],
        [0.8953],
        [0.8738],
        [0.8831],
        [0.9297],
        [0.9354],
        [0.8852],
        [0.8763],
        [0.8974],
        [0.9134],
        [0.8568],
        [0.8902],
        [0.9275],
        [0.9198],
        [0.8942],
        [0.8660],
        [0.9080],
        [0.9020],
        [0.8710],
        [0.8810],
        [0.9572],
        [0.9519],
        [0.8804],
        [0.8702],
        [0.9013],
        [0.9073],
        [0.8650],
        [0.8937],
        [0.9188],
        [0.9265],
        [0.8897],
        [0.8554],
        [0.9128],
        [0.8969],
        [0.8758],
        [0.8847],
        [0.9341],
        [0.9284],
        [0.8824],
        [0.8731],
        [0.8947],
        [0.9100],
        [0.8458],
        [0.8876],
        [0.9223],
        [0.9158],
        [0.8917],
        [0.8612],
        [0.9050],
        [0.8991],
        [0.8671],
        [0.8781],
        [0.9407],
        [0.9480],
        [0.8789],
        [0.8686],
        [0.9004],
        [0.9036],
        [0.8590],
        [0.8910],
        [0.9136],
        [0.9202],
        [0.8867],
        [0.8387],
        [0.9082],
        [0.8962],
        [0.8739],
        [0.8834],
        [0.9313],
        [0.9378],
        [0.8856],
        [0.8765],
        [0.8984],
        [0.9109],
        [0.8533],
        [0.8889],
        [0.9241],
        [0.9166],
        [0.8931],
        [0.8634],
        [0.9059],
        [0.9025],
        [0.8714],
        [0.8811],
        [0.9689],
        [0.9632],
        [0.8815],
        [0.8716],
        [0.9025],
        [0.9062],
        [0.8633],
        [0.8927],
        [0.9174],
        [0.9242],
        [0.8887],
        [0.8515],
        [0.9113],
        [0.8979],
        [0.8769],
        [0.8857],
        [0.9371],
        [0.9311],
        [0.8836],
        [0.8745],
        [0.8959],
        [0.9087],
        [0.8298],
        [0.8866],
        [0.9205],
        [0.9141],
        [0.8906],
        [0.8585],
        [0.9037],
        [0.9002],
        [0.8686],
        [0.8793],
        [0.9454],
        [0.9422],
        [0.8776],
        [0.8668],
        [0.8992],
        [0.9047],
        [0.8613],
        [0.8920],
        [0.9151],
        [0.9221],
        [0.8878],
        [0.8488],
        [0.9096],
        [0.8952],
        [0.8727],
        [0.8824],
        [0.9288],
        [0.9342],
        [0.8845],
        [0.8752],
        [0.8972],
        [0.9122],
        [0.8564],
        [0.8898],
        [0.9260],
        [0.9183],
        [0.8941],
        [0.8653],
        [0.9072],
        [0.9015],
        [0.8701],
        [0.8800],
        [0.9560],
        [0.9608],
        [0.8805],
        [0.8707],
        [0.9020],
        [0.9077],
        [0.8661],
        [0.8946],
        [0.9190],
        [0.9273],
        [0.8904],
        [0.8580],
        [0.9130],
        [0.8979],
        [0.8759],
        [0.8851],
        [0.9361],
        [0.9299],
        [0.8828],
        [0.8732],
        [0.8956],
        [0.9102],
        [0.8509],
        [0.8883],
        [0.9230],
        [0.9160],
        [0.8926],
        [0.8625],
        [0.9054],
        [0.8998],
        [0.8677],
        [0.8783],
        [0.9449],
        [0.9488],
        [0.8799],
        [0.8695],
        [0.9008],
        [0.9043],
        [0.8599],
        [0.8912],
        [0.9149],
        [0.9213],
        [0.8871],
        [0.8407],
        [0.9093],
        [0.8963],
        [0.8751],
        [0.8841],
        [0.9324],
        [0.9392],
        [0.8862],
        [0.8775],
        [0.8985],
        [0.9121],
        [0.8538],
        [0.8893],
        [0.9255],
        [0.9180],
        [0.8932],
        [0.8641],
        [0.9067],
        [0.9030],
        [0.8723],
        [0.8820],
        [0.9722],
        [0.9798],
        [0.8820],
        [0.8725],
        [0.9029],
        [0.9069],
        [0.8640],
        [0.8934],
        [0.9179],
        [0.9255],
        [0.8890],
        [0.8538],
        [0.9118],
        [0.8986],
        [0.8774],
        [0.8863],
        [0.9386],
        [0.9321],
        [0.8843],
        [0.8749],
        [0.8965],
        [0.9093],
        [0.8431],
        [0.8870],
        [0.9217],
        [0.9147],
        [0.8913],
        [0.8596],
        [0.9044],
        [0.9006],
        [0.8696],
        [0.8797],
        [0.9489],
        [0.9441],
        [0.8784],
        [0.8675],
        [0.8999],
        [0.9051],
        [0.8626],
        [0.8924],
        [0.9160],
        [0.9228],
        [0.8884],
        [0.8505],
        [0.9104],
        [0.8956],
        [0.8735],
        [0.8828],
        [0.9305],
        [0.9362],
        [0.8848],
        [0.8760],
        [0.8976],
        [0.9131],
        [0.8575],
        [0.8905],
        [0.9270],
        [0.9194],
        [0.8946],
        [0.8665],
        [0.9077],
        [0.9022],
        [0.8706],
        [0.8807],
        [0.9597],
        [0.9538],
        [0.8801],
        [0.8697],
        [0.9016],
        [0.9070],
        [0.8655],
        [0.8940],
        [0.9185],
        [0.9259],
        [0.8900],
        [0.8563],
        [0.9125],
        [0.8971],
        [0.8754],
        [0.8844],
        [0.9347],
        [0.9290],
        [0.8822],
        [0.8728],
        [0.8950],
        [0.9096],
        [0.8474],
        [0.8879],
        [0.9217],
        [0.9154],
        [0.8919],
        [0.8616],
        [0.9046],
        [0.8995],
        [0.8667],
        [0.8779],
        [0.9420],
        [0.9464],
        [0.8792],
        [0.8689],
        [0.9001],
        [0.9039],
        [0.8584],
        [0.8908],
        [0.9141],
        [0.9206],
        [0.8865],
        [0.8342],
        [0.9085],
        [0.8959],
        [0.8742],
        [0.8837],
        [0.9305],
        [0.9369],
        [0.8859],
        [0.8769],
        [0.8981],
        [0.9112],
        [0.8522],
        [0.8886],
        [0.9246],
        [0.9170],
        [0.8928],
        [0.8628],
        [0.9062],
        [0.9023],
        [0.8718],
        [0.8814],
        [0.9649],
        [0.9680],
        [0.8813],
        [0.8713],
        [0.9028],
        [0.9058],
        [0.8637],
        [0.8930],
        [0.9169],
        [0.9237],
        [0.8889],
        [0.8524],
        [0.9110],
        [0.8982],
        [0.8766],
        [0.8854],
        [0.9381],
        [0.9318],
        [0.8833],
        [0.8742],
        [0.8961],
        [0.9085],
        [0.8380],
        [0.8869],
        [0.9201],
        [0.9138],
        [0.8909],
        [0.8592],
        [0.9034],
        [0.9004],
        [0.8682],
        [0.8789],
        [0.9466],
        [0.9412],
        [0.8780],
        [0.8673],
        [0.8990],
        [0.9050],
        [0.8607],
        [0.8917],
        [0.9154],
        [0.9226],
        [0.8875],
        [0.8469],
        [0.9099],
        [0.8950],
        [0.8730],
        [0.8827],
        [0.9283],
        [0.9334],
        [0.8847],
        [0.8755],
        [0.8970],
        [0.9126],
        [0.8557],
        [0.8896],
        [0.9267],
        [0.9188],
        [0.8939],
        [0.8650],
        [0.9075],
        [0.9012],
        [0.8704],
        [0.8803],
        [0.9532],
        [0.9575],
        [0.8808],
        [0.8710],
        [0.9017],
        [0.9081],
        [0.8657],
        [0.8944],
        [0.9196],
        [0.9279],
        [0.8902],
        [0.8574],
        [0.9133],
        [0.8975],
        [0.8762],
        [0.8853],
        [0.9351],
        [0.9293],
        [0.8832],
        [0.8736],
        [0.8954],
        [0.9104],
        [0.8496],
        [0.8880],
        [0.9234],
        [0.9163],
        [0.8923],
        [0.8619],
        [0.9057],
        [0.8996],
        [0.8681],
        [0.8786],
        [0.9438],
        [0.9504],
        [0.8796],
        [0.8691],
        [0.9011],
        [0.9041],
        [0.8606],
        [0.8914],
        [0.9146]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[14.8054]],
        [[13.9146]],
        [[13.8082]],
        [[14.1299]],
        [[14.1594]],
        [[13.7256]],
        [[14.0343]],
        [[14.2627]],
        [[14.3242]],
        [[13.9938]],
        [[13.6037]],
        [[14.2078]],
        [[14.0851]],
        [[13.8652]],
        [[13.9574]],
        [[14.4519]],
        [[14.3967]],
        [[13.9364]],
        [[13.8397]],
        [[14.0653]],
        [[14.1837]],
        [[13.4732]],
        [[13.9729]],
        [[14.2907]],
        [[14.2335]],
        [[14.0127]],
        [[13.6747]],
        [[14.1360]],
        [[14.1081]],
        [[13.7750]],
        [[13.8906]],
        [[14.5339]],
        [[14.4795]],
        [[13.8793]],
        [[13.7632]],
        [[14.0932]],
        [[14.1517]],
        [[13.6923]],
        [[14.0221]],
        [[14.2494]],
        [[14.3141]],
        [[13.9798]],
        [[13.5488]],
        [[14.1976]],
        [[14.0534]],
        [[13.8270]],
        [[13.9291]],
        [[14.3643]],
        [[14.4117]],
        [[13.9510]],
        [[13.8543]],
        [[14.0738]],
        [[14.2217]],
        [[13.6361]],
        [[13.9999]],
        [[14.3498]],
        [[14.2792]],
        [[14.0431]],
        [[13.7381]],
        [[14.1751]],
        [[14.1153]],
        [[13.7988]],
        [[13.9047]],
        [[14.5990]],
        [[14.5559]],
        [[13.8983]],
        [[13.7901]],
        [[14.1092]],
        [[14.1683]],
        [[13.7265]],
        [[14.0374]],
        [[14.2703]],
        [[14.3416]],
        [[13.9952]],
        [[13.6198]],
        [[14.2163]],
        [[14.0693]],
        [[13.8481]],
        [[13.9459]],
        [[14.4004]],
        [[14.3526]],
        [[13.9225]],
        [[13.8184]],
        [[14.0477]],
        [[14.1910]],
        [[13.5067]],
        [[13.9737]],
        [[14.3049]],
        [[14.2430]],
        [[14.0177]],
        [[13.6810]],
        [[14.1466]],
        [[14.0885]],
        [[13.7555]],
        [[13.8741]],
        [[14.4628]],
        [[14.5101]],
        [[13.8853]],
        [[13.7675]],
        [[14.1032]],
        [[14.1311]],
        [[13.6627]],
        [[14.0084]],
        [[14.2275]],
        [[14.2820]],
        [[13.9666]],
        [[13.3652]],
        [[14.1771]],
        [[14.0597]],
        [[13.8316]],
        [[13.9301]],
        [[14.3836]],
        [[14.4384]],
        [[13.9525]],
        [[13.8594]],
        [[14.0808]],
        [[14.2024]],
        [[13.5826]],
        [[13.9889]],
        [[14.3166]],
        [[14.2544]],
        [[14.0288]],
        [[13.7136]],
        [[14.1530]],
        [[14.1235]],
        [[13.7995]],
        [[13.9082]],
        [[14.6566]],
        [[14.6503]],
        [[13.9103]],
        [[13.8062]],
        [[14.1205]],
        [[14.1580]],
        [[13.7059]],
        [[14.0279]],
        [[14.2573]],
        [[14.3220]],
        [[13.9845]],
        [[13.5744]],
        [[14.2031]],
        [[14.0786]],
        [[13.8603]],
        [[13.9560]],
        [[14.4245]],
        [[14.3760]],
        [[13.9350]],
        [[13.8345]],
        [[14.0588]],
        [[14.1793]],
        [[13.3497]],
        [[13.9636]],
        [[14.2887]],
        [[14.2284]],
        [[14.0062]],
        [[13.6482]],
        [[14.1347]],
        [[14.0988]],
        [[13.7729]],
        [[13.8860]],
        [[14.5026]],
        [[14.4655]],
        [[13.8714]],
        [[13.7467]],
        [[14.0918]],
        [[14.1420]],
        [[13.6890]],
        [[14.0183]],
        [[14.2407]],
        [[14.2992]],
        [[13.9785]],
        [[13.5222]],
        [[14.1900]],
        [[14.0495]],
        [[13.8179]],
        [[13.9191]],
        [[14.3617]],
        [[14.4082]],
        [[13.9414]],
        [[13.8458]],
        [[14.0699]],
        [[14.2136]],
        [[13.6225]],
        [[13.9985]],
        [[14.3328]],
        [[14.2698]],
        [[14.0392]],
        [[13.7357]],
        [[14.1649]],
        [[14.1140]],
        [[13.7845]],
        [[13.8973]],
        [[14.5689]],
        [[14.6039]],
        [[13.9028]],
        [[13.7921]],
        [[14.1186]],
        [[14.1697]],
        [[13.7446]],
        [[14.0438]],
        [[14.2760]],
        [[14.3441]],
        [[14.0043]],
        [[13.6424]],
        [[14.2211]],
        [[14.0759]],
        [[13.8531]],
        [[13.9474]],
        [[14.4240]],
        [[14.3714]],
        [[13.9239]],
        [[13.8239]],
        [[14.0541]],
        [[14.1956]],
        [[13.5520]],
        [[13.9831]],
        [[14.3070]],
        [[14.2481]],
        [[14.0242]],
        [[13.7032]],
        [[14.1480]],
        [[14.0976]],
        [[13.7580]],
        [[13.8788]],
        [[14.4870]],
        [[14.5294]],
        [[13.8929]],
        [[13.7827]],
        [[14.1045]],
        [[14.1408]],
        [[13.6662]],
        [[14.0123]],
        [[14.2358]],
        [[14.2959]],
        [[13.9680]],
        [[13.4453]],
        [[14.1846]],
        [[14.0636]],
        [[13.8405]],
        [[13.9398]],
        [[14.3867]],
        [[14.4422]],
        [[13.9621]],
        [[13.8675]],
        [[14.0847]],
        [[14.2102]],
        [[13.6003]],
        [[13.9902]],
        [[14.3326]],
        [[14.2635]],
        [[14.0326]],
        [[13.7165]],
        [[14.1629]],
        [[14.1249]],
        [[13.8130]],
        [[13.9155]],
        [[14.7264]],
        [[14.7202]],
        [[13.9181]],
        [[13.8127]],
        [[14.1274]],
        [[14.1618]],
        [[13.7198]],
        [[14.0316]],
        [[14.2657]],
        [[14.3286]],
        [[13.9906]],
        [[13.5907]],
        [[14.2107]],
        [[14.0830]],
        [[13.8686]],
        [[13.9603]],
        [[14.4450]],
        [[14.3902]],
        [[13.9387]],
        [[13.8425]],
        [[14.0625]],
        [[14.1873]],
        [[13.4417]],
        [[13.9704]],
        [[14.2955]],
        [[14.2370]],
        [[14.0106]],
        [[13.6687]],
        [[14.1390]],
        [[14.1049]],
        [[13.7791]],
        [[13.8934]],
        [[14.5184]],
        [[14.4907]],
        [[13.8767]],
        [[13.7595]],
        [[14.0959]],
        [[14.1484]],
        [[13.6980]],
        [[14.0246]],
        [[14.2452]],
        [[14.3095]],
        [[13.9820]],
        [[13.5609]],
        [[14.1944]],
        [[14.0565]],
        [[13.8236]],
        [[13.9265]],
        [[14.3708]],
        [[14.4180]],
        [[13.9478]],
        [[13.8502]],
        [[14.0763]],
        [[14.2190]],
        [[13.6453]],
        [[14.0026]],
        [[14.3458]],
        [[14.2756]],
        [[14.0461]],
        [[13.7441]],
        [[14.1723]],
        [[14.1175]],
        [[13.7945]],
        [[13.9016]],
        [[14.6185]],
        [[14.5717]],
        [[13.8948]],
        [[13.7851]],
        [[14.1118]],
        [[14.1658]],
        [[13.7323]],
        [[14.0401]],
        [[14.2673]],
        [[14.3371]],
        [[13.9983]],
        [[13.6309]],
        [[14.2133]],
        [[14.0715]],
        [[13.8444]],
        [[13.9430]],
        [[14.4055]],
        [[14.3582]],
        [[13.9201]],
        [[13.8154]],
        [[14.0504]],
        [[14.1875]],
        [[13.5252]],
        [[13.9763]],
        [[14.2998]],
        [[14.2393]],
        [[14.0198]],
        [[13.6864]],
        [[14.1436]],
        [[14.0916]],
        [[13.7511]],
        [[13.8711]],
        [[14.4739]],
        [[14.4980]],
        [[13.8878]],
        [[13.7711]],
        [[14.1004]],
        [[14.1344]],
        [[13.6554]],
        [[14.0060]],
        [[14.2314]],
        [[14.2861]],
        [[13.9645]],
        [[13.2348]],
        [[14.1803]],
        [[14.0566]],
        [[13.8350]],
        [[13.9326]],
        [[14.3769]],
        [[14.4312]],
        [[13.9558]],
        [[13.8633]],
        [[14.0783]],
        [[14.2049]],
        [[13.5690]],
        [[13.9861]],
        [[14.3202]],
        [[14.2579]],
        [[14.0257]],
        [[13.7068]],
        [[14.1556]],
        [[14.1214]],
        [[13.8036]],
        [[13.9113]],
        [[14.6300]],
        [[14.6940]],
        [[13.9079]],
        [[13.8031]],
        [[14.1233]],
        [[14.1547]],
        [[13.7113]],
        [[14.0303]],
        [[14.2530]],
        [[14.3172]],
        [[13.9867]],
        [[13.5845]],
        [[14.1998]],
        [[14.0817]],
        [[13.8573]],
        [[13.9535]],
        [[14.4333]],
        [[14.3812]],
        [[13.9317]],
        [[13.8302]],
        [[14.0613]],
        [[14.1769]],
        [[13.4209]],
        [[13.9664]],
        [[14.2856]],
        [[14.2254]],
        [[14.0093]],
        [[13.6577]],
        [[14.1321]],
        [[14.1009]],
        [[13.7681]],
        [[13.8827]],
        [[14.5121]],
        [[14.4571]],
        [[13.8752]],
        [[13.7524]],
        [[14.0894]],
        [[14.1442]],
        [[13.6821]],
        [[14.0155]],
        [[14.2435]],
        [[14.3032]],
        [[13.9753]],
        [[13.4974]],
        [[14.1928]],
        [[14.0475]],
        [[13.8217]],
        [[13.9222]],
        [[14.3573]],
        [[14.4014]],
        [[13.9436]],
        [[13.8486]],
        [[14.0671]],
        [[14.2174]],
        [[13.6133]],
        [[13.9961]],
        [[14.3384]],
        [[14.2737]],
        [[14.0372]],
        [[13.7313]],
        [[14.1680]],
        [[14.1108]],
        [[13.7884]],
        [[13.9000]],
        [[14.5494]],
        [[14.5814]],
        [[13.9052]],
        [[13.7954]],
        [[14.1157]],
        [[14.1731]],
        [[13.7399]],
        [[14.0414]],
        [[14.2805]],
        [[14.3493]],
        [[14.0022]],
        [[13.6353]],
        [[14.2247]],
        [[14.0727]],
        [[13.8563]],
        [[13.9499]],
        [[14.4158]],
        [[14.3662]],
        [[13.9273]],
        [[13.8282]],
        [[14.0517]],
        [[14.1981]],
        [[13.5347]],
        [[13.9802]],
        [[14.3105]],
        [[14.2515]],
        [[14.0211]],
        [[13.6960]],
        [[14.1506]],
        [[14.0955]],
        [[13.7627]],
        [[13.8822]],
        [[14.4786]],
        [[14.5425]],
        [[13.8894]],
        [[13.7776]],
        [[14.1070]],
        [[14.1385]],
        [[13.6740]],
        [[14.0150]],
        [[14.2332]],
        [[14.2921]],
        [[13.9712]],
        [[13.4829]],
        [[14.1818]],
        [[14.0657]],
        [[13.8367]],
        [[13.9369]],
        [[14.3915]],
        [[14.4511]],
        [[13.9598]],
        [[13.8649]],
        [[14.0874]],
        [[14.2066]],
        [[13.6100]],
        [[13.9927]],
        [[14.3269]],
        [[14.2596]],
        [[14.0347]],
        [[13.7210]],
        [[14.1599]],
        [[14.1281]],
        [[13.8095]],
        [[13.9127]],
        [[14.8735]],
        [[14.9114]],
        [[13.9131]],
        [[13.8099]],
        [[14.1285]],
        [[14.1609]],
        [[13.7231]],
        [[14.0357]],
        [[14.2610]],
        [[14.3264]],
        [[13.9923]],
        [[13.6089]],
        [[14.2061]],
        [[14.0865]],
        [[13.8637]],
        [[13.9588]],
        [[14.4478]],
        [[14.3939]],
        [[13.9379]],
        [[13.8381]],
        [[14.0666]],
        [[14.1822]],
        [[13.4858]],
        [[13.9715]],
        [[14.2926]],
        [[14.2319]],
        [[14.0141]],
        [[13.6712]],
        [[14.1375]],
        [[14.1066]],
        [[13.7771]],
        [[13.8889]],
        [[14.5409]],
        [[14.4751]],
        [[13.8809]],
        [[13.7611]],
        [[14.0945]],
        [[14.1503]],
        [[13.6952]],
        [[14.0208]],
        [[14.2510]],
        [[14.3120]],
        [[13.9812]],
        [[13.5409]],
        [[14.1993]],
        [[14.0520]],
        [[13.8287]],
        [[13.9276]],
        [[14.3669]],
        [[14.4148]],
        [[13.9496]],
        [[13.8558]],
        [[14.0724]],
        [[14.2234]],
        [[13.6321]],
        [[14.0012]],
        [[14.3475]],
        [[14.2810]],
        [[14.0417]],
        [[13.7406]],
        [[14.1735]],
        [[14.1168]],
        [[13.7968]],
        [[13.9063]],
        [[14.5886]],
        [[14.5472]],
        [[13.8997]],
        [[13.7878]],
        [[14.1105]],
        [[14.1669]],
        [[13.7294]],
        [[14.0362]],
        [[14.2723]],
        [[14.3391]],
        [[13.9964]],
        [[13.6147]],
        [[14.2178]],
        [[14.0681]],
        [[13.8498]],
        [[13.9447]],
        [[14.4037]],
        [[14.3555]],
        [[13.9211]],
        [[13.8204]],
        [[14.0465]],
        [[14.1925]],
        [[13.4939]],
        [[13.9750]],
        [[14.3026]],
        [[14.2448]],
        [[14.0165]],
        [[13.6845]],
        [[14.1453]],
        [[14.0897]],
        [[13.7531]],
        [[13.8755]],
        [[14.4583]],
        [[14.5168]],
        [[13.8838]],
        [[13.7699]],
        [[14.1019]],
        [[14.1324]],
        [[13.6585]],
        [[14.0096]],
        [[14.2257]],
        [[14.2840]],
        [[13.9654]],
        [[13.4005]],
        [[14.1758]],
        [[14.0609]],
        [[13.8298]],
        [[13.9313]],
        [[14.3806]],
        [[14.4342]],
        [[13.9539]],
        [[13.8576]],
        [[14.0820]],
        [[14.2009]],
        [[13.5893]],
        [[13.9876]],
        [[14.3190]],
        [[14.2526]],
        [[14.0300]],
        [[13.7106]],
        [[14.1543]],
        [[14.1223]],
        [[13.8016]],
        [[13.9068]],
        [[14.6765]],
        [[14.6341]],
        [[13.9117]],
        [[13.8042]],
        [[14.1217]],
        [[14.1567]],
        [[13.7089]],
        [[14.0267]],
        [[14.2591]],
        [[14.3196]],
        [[13.9858]],
        [[13.5670]],
        [[14.2046]],
        [[14.0773]],
        [[13.8621]],
        [[13.9547]],
        [[14.4285]],
        [[14.3789]],
        [[13.9337]],
        [[13.8363]],
        [[14.0576]],
        [[14.1806]],
        [[13.2759]],
        [[13.9648]],
        [[14.2867]],
        [[14.2302]],
        [[14.0050]],
        [[13.6526]],
        [[14.1333]],
        [[14.1001]],
        [[13.7704]],
        [[13.8875]],
        [[14.4964]],
        [[14.4702]],
        [[13.8700]],
        [[13.7492]],
        [[14.0906]],
        [[14.1432]],
        [[13.6857]],
        [[14.0195]],
        [[14.2390]],
        [[14.3015]],
        [[13.9772]],
        [[13.5325]],
        [[14.1886]],
        [[14.0508]],
        [[13.8158]],
        [[13.9205]],
        [[14.3588]],
        [[14.4048]],
        [[13.9426]],
        [[13.8440]],
        [[14.0711]],
        [[14.2122]],
        [[13.6273]],
        [[13.9974]],
        [[14.3352]],
        [[14.2677]],
        [[14.0405]],
        [[13.7329]],
        [[14.1662]],
        [[14.1127]],
        [[13.7867]],
        [[13.8958]],
        [[14.5790]],
        [[14.6157]],
        [[13.9011]],
        [[13.7940]],
        [[14.1171]],
        [[14.1712]],
        [[13.7422]],
        [[14.0452]],
        [[14.2742]],
        [[14.3464]],
        [[14.0030]],
        [[13.6462]],
        [[14.2195]],
        [[14.0772]],
        [[13.8515]],
        [[13.9488]],
        [[14.4207]],
        [[14.3687]],
        [[13.9255]],
        [[13.8222]],
        [[14.0555]],
        [[14.1939]],
        [[13.5593]],
        [[13.9816]],
        [[14.3090]],
        [[14.2466]],
        [[14.0255]],
        [[13.7004]],
        [[14.1494]],
        [[14.0963]],
        [[13.7601]],
        [[13.8772]],
        [[14.4918]],
        [[14.5230]],
        [[13.8946]],
        [[13.7806]],
        [[14.1059]],
        [[14.1393]],
        [[13.6697]],
        [[14.0109]],
        [[14.2374]],
        [[14.2941]],
        [[13.9694]],
        [[13.4267]],
        [[14.1861]],
        [[14.0622]],
        [[13.8420]],
        [[13.9384]],
        [[14.3894]],
        [[14.4461]],
        [[13.9606]],
        [[13.8691]],
        [[14.0833]],
        [[14.2119]],
        [[13.5949]],
        [[13.9916]],
        [[14.3303]],
        [[14.2652]],
        [[14.0313]],
        [[13.7190]],
        [[14.1614]],
        [[14.1263]],
        [[13.8113]],
        [[13.9170]],
        [[14.7001]],
        [[14.7552]],
        [[13.9165]],
        [[13.8145]],
        [[14.1259]],
        [[14.1633]],
        [[13.7171]],
        [[14.0330]],
        [[14.2639]],
        [[14.3307]],
        [[13.9892]],
        [[13.5960]],
        [[14.2091]],
        [[14.0844]],
        [[13.8671]],
        [[13.9617]],
        [[14.4414]],
        [[14.3873]],
        [[13.9402]],
        [[13.8409]],
        [[14.0639]],
        [[14.1856]],
        [[13.4591]],
        [[13.9690]],
        [[14.2975]],
        [[14.2354]],
        [[14.0120]],
        [[13.6654]],
        [[14.1404]],
        [[14.1035]],
        [[13.7810]],
        [[13.8918]],
        [[14.5242]],
        [[14.4856]],
        [[13.8784]],
        [[13.7573]],
        [[14.0973]],
        [[14.1469]],
        [[13.7010]],
        [[14.0232]],
        [[14.2469]],
        [[14.3076]],
        [[13.9833]],
        [[13.5542]],
        [[14.1960]],
        [[14.0551]],
        [[13.8252]],
        [[13.9250]],
        [[14.3734]],
        [[14.4214]],
        [[13.9463]],
        [[13.8518]],
        [[14.0748]],
        [[14.2208]],
        [[13.6412]],
        [[14.0040]],
        [[14.3434]],
        [[14.2774]],
        [[14.0448]],
        [[13.7464]],
        [[14.1708]],
        [[14.1189]],
        [[13.7927]],
        [[13.9031]],
        [[14.6072]],
        [[14.5626]],
        [[13.8961]],
        [[13.7829]],
        [[14.1130]],
        [[14.1645]],
        [[13.7349]],
        [[14.0389]],
        [[14.2693]],
        [[14.3345]],
        [[13.9996]],
        [[13.6259]],
        [[14.2149]],
        [[14.0702]],
        [[13.8463]],
        [[13.9417]],
        [[14.4092]],
        [[14.3610]],
        [[13.9188]],
        [[13.8173]],
        [[14.0492]],
        [[14.1889]],
        [[13.5150]],
        [[13.9775]],
        [[14.2977]],
        [[14.2412]],
        [[14.0186]],
        [[13.6899]],
        [[14.1423]],
        [[14.0928]],
        [[13.7485]],
        [[13.8726]],
        [[14.4688]],
        [[14.5038]],
        [[13.8864]],
        [[13.7733]],
        [[14.0992]],
        [[14.1357]],
        [[13.6514]],
        [[14.0071]],
        [[14.2297]],
        [[14.2883]],
        [[13.9632]],
        [[13.3381]],
        [[14.1789]],
        [[14.0579]],
        [[13.8331]],
        [[13.9340]],
        [[14.3738]],
        [[14.4273]],
        [[13.9570]],
        [[13.8616]],
        [[14.0795]],
        [[14.2035]],
        [[13.5759]],
        [[13.9849]],
        [[14.3225]],
        [[14.2559]],
        [[14.0269]],
        [[13.7036]],
        [[14.1570]],
        [[14.1201]],
        [[13.8057]],
        [[13.9099]],
        [[14.6467]],
        [[14.6700]],
        [[13.9093]],
        [[13.8010]],
        [[14.1246]],
        [[14.1533]],
        [[13.7144]],
        [[14.0291]],
        [[14.2549]],
        [[14.3150]],
        [[13.9879]],
        [[13.5781]],
        [[14.2012]],
        [[14.0805]],
        [[13.8589]],
        [[13.9522]],
        [[14.4373]],
        [[14.3844]],
        [[13.9304]],
        [[13.8321]],
        [[14.0600]],
        [[14.1783]],
        [[13.3912]],
        [[13.9677]],
        [[14.2834]],
        [[14.2271]],
        [[14.0081]],
        [[13.6616]],
        [[14.1308]],
        [[14.1022]],
        [[13.7658]],
        [[13.8841]],
        [[14.5059]],
        [[14.4619]],
        [[13.8737]],
        [[13.7550]],
        [[14.0881]],
        [[14.1456]],
        [[13.6784]],
        [[14.0168]],
        [[14.2416]],
        [[14.3054]],
        [[13.9741]],
        [[13.5091]],
        [[14.1914]],
        [[14.0487]],
        [[13.8198]],
        [[13.9235]],
        [[14.3546]],
        [[14.3979]],
        [[13.9449]],
        [[13.8467]],
        [[14.0684]],
        [[14.2159]],
        [[13.6187]],
        [[13.9948]],
        [[14.3411]],
        [[14.2717]],
        [[14.0383]],
        [[13.7286]],
        [[14.1693]],
        [[14.1096]],
        [[13.7905]],
        [[13.8987]],
        [[14.5577]],
        [[14.5906]],
        [[13.9036]],
        [[13.7972]],
        [[14.1144]],
        [[14.1746]],
        [[13.7376]],
        [[14.0428]],
        [[14.2788]],
        [[14.3518]],
        [[14.0008]],
        [[13.6395]],
        [[14.2229]],
        [[14.0741]],
        [[13.8547]],
        [[13.9513]],
        [[14.4125]],
        [[14.3637]],
        [[13.9287]],
        [[13.8266]],
        [[14.0531]],
        [[14.1965]],
        [[13.5425]],
        [[13.9788]],
        [[14.3124]],
        [[14.2498]],
        [[14.0225]],
        [[13.6930]],
        [[14.1521]],
        [[14.0941]],
        [[13.7649]],
        [[13.8805]],
        [[14.4834]],
        [[14.5359]],
        [[13.8909]],
        [[13.7756]],
        [[14.1084]],
        [[14.1371]],
        [[13.6772]],
        [[14.0137]],
        [[14.2347]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.0309],
        [1.0164],
        [1.0147],
        [1.0199],
        [1.0204],
        [1.0133],
        [1.0183],
        [1.0221],
        [1.0231],
        [1.0177],
        [1.0113],
        [1.0212],
        [1.0192],
        [1.0156],
        [1.0171],
        [1.0251],
        [1.0242],
        [1.0167],
        [1.0152],
        [1.0188],
        [1.0208],
        [1.0092],
        [1.0173],
        [1.0225],
        [1.0216],
        [1.0180],
        [1.0125],
        [1.0200],
        [1.0195],
        [1.0141],
        [1.0160],
        [1.0265],
        [1.0256],
        [1.0158],
        [1.0139],
        [1.0193],
        [1.0203],
        [1.0128],
        [1.0181],
        [1.0218],
        [1.0229],
        [1.0175],
        [1.0104],
        [1.0210],
        [1.0187],
        [1.0150],
        [1.0166],
        [1.0237],
        [1.0245],
        [1.0170],
        [1.0154],
        [1.0190],
        [1.0214],
        [1.0119],
        [1.0178],
        [1.0235],
        [1.0223],
        [1.0185],
        [1.0135],
        [1.0206],
        [1.0197],
        [1.0145],
        [1.0162],
        [1.0275],
        [1.0268],
        [1.0161],
        [1.0144],
        [1.0196],
        [1.0205],
        [1.0133],
        [1.0184],
        [1.0222],
        [1.0233],
        [1.0177],
        [1.0116],
        [1.0213],
        [1.0189],
        [1.0153],
        [1.0169],
        [1.0243],
        [1.0235],
        [1.0165],
        [1.0148],
        [1.0186],
        [1.0209],
        [1.0098],
        [1.0174],
        [1.0227],
        [1.0217],
        [1.0181],
        [1.0126],
        [1.0202],
        [1.0192],
        [1.0138],
        [1.0157],
        [1.0253],
        [1.0261],
        [1.0159],
        [1.0140],
        [1.0195],
        [1.0199],
        [1.0123],
        [1.0179],
        [1.0215],
        [1.0224],
        [1.0172],
        [1.0075],
        [1.0207],
        [1.0188],
        [1.0150],
        [1.0166],
        [1.0240],
        [1.0249],
        [1.0170],
        [1.0155],
        [1.0191],
        [1.0211],
        [1.0110],
        [1.0176],
        [1.0229],
        [1.0219],
        [1.0183],
        [1.0131],
        [1.0203],
        [1.0198],
        [1.0145],
        [1.0163],
        [1.0285],
        [1.0284],
        [1.0163],
        [1.0146],
        [1.0197],
        [1.0204],
        [1.0130],
        [1.0182],
        [1.0220],
        [1.0230],
        [1.0175],
        [1.0109],
        [1.0211],
        [1.0191],
        [1.0155],
        [1.0171],
        [1.0247],
        [1.0239],
        [1.0167],
        [1.0151],
        [1.0187],
        [1.0207],
        [1.0072],
        [1.0172],
        [1.0225],
        [1.0215],
        [1.0179],
        [1.0121],
        [1.0200],
        [1.0194],
        [1.0141],
        [1.0159],
        [1.0260],
        [1.0254],
        [1.0157],
        [1.0137],
        [1.0193],
        [1.0201],
        [1.0127],
        [1.0181],
        [1.0217],
        [1.0226],
        [1.0174],
        [1.0100],
        [1.0209],
        [1.0186],
        [1.0148],
        [1.0165],
        [1.0237],
        [1.0244],
        [1.0168],
        [1.0153],
        [1.0189],
        [1.0213],
        [1.0116],
        [1.0178],
        [1.0232],
        [1.0222],
        [1.0184],
        [1.0135],
        [1.0205],
        [1.0196],
        [1.0143],
        [1.0161],
        [1.0270],
        [1.0276],
        [1.0162],
        [1.0144],
        [1.0197],
        [1.0205],
        [1.0136],
        [1.0185],
        [1.0223],
        [1.0234],
        [1.0179],
        [1.0120],
        [1.0214],
        [1.0190],
        [1.0154],
        [1.0169],
        [1.0247],
        [1.0238],
        [1.0165],
        [1.0149],
        [1.0187],
        [1.0210],
        [1.0105],
        [1.0175],
        [1.0228],
        [1.0218],
        [1.0182],
        [1.0130],
        [1.0202],
        [1.0194],
        [1.0138],
        [1.0158],
        [1.0257],
        [1.0264],
        [1.0160],
        [1.0142],
        [1.0195],
        [1.0201],
        [1.0124],
        [1.0180],
        [1.0216],
        [1.0226],
        [1.0173],
        [1.0088],
        [1.0208],
        [1.0188],
        [1.0152],
        [1.0168],
        [1.0241],
        [1.0250],
        [1.0172],
        [1.0156],
        [1.0192],
        [1.0212],
        [1.0113],
        [1.0176],
        [1.0232],
        [1.0221],
        [1.0183],
        [1.0132],
        [1.0204],
        [1.0198],
        [1.0147],
        [1.0164],
        [1.0296],
        [1.0295],
        [1.0165],
        [1.0147],
        [1.0199],
        [1.0204],
        [1.0132],
        [1.0183],
        [1.0221],
        [1.0231],
        [1.0176],
        [1.0111],
        [1.0212],
        [1.0191],
        [1.0156],
        [1.0171],
        [1.0250],
        [1.0241],
        [1.0168],
        [1.0152],
        [1.0188],
        [1.0208],
        [1.0087],
        [1.0173],
        [1.0226],
        [1.0216],
        [1.0180],
        [1.0124],
        [1.0200],
        [1.0195],
        [1.0142],
        [1.0160],
        [1.0262],
        [1.0258],
        [1.0158],
        [1.0139],
        [1.0193],
        [1.0202],
        [1.0129],
        [1.0182],
        [1.0218],
        [1.0228],
        [1.0175],
        [1.0106],
        [1.0209],
        [1.0187],
        [1.0149],
        [1.0166],
        [1.0238],
        [1.0246],
        [1.0169],
        [1.0153],
        [1.0190],
        [1.0213],
        [1.0120],
        [1.0178],
        [1.0234],
        [1.0223],
        [1.0185],
        [1.0136],
        [1.0206],
        [1.0197],
        [1.0144],
        [1.0162],
        [1.0278],
        [1.0271],
        [1.0161],
        [1.0143],
        [1.0196],
        [1.0205],
        [1.0134],
        [1.0184],
        [1.0221],
        [1.0233],
        [1.0178],
        [1.0118],
        [1.0213],
        [1.0189],
        [1.0153],
        [1.0169],
        [1.0244],
        [1.0236],
        [1.0165],
        [1.0148],
        [1.0186],
        [1.0208],
        [1.0101],
        [1.0174],
        [1.0227],
        [1.0217],
        [1.0181],
        [1.0127],
        [1.0201],
        [1.0193],
        [1.0137],
        [1.0157],
        [1.0255],
        [1.0259],
        [1.0160],
        [1.0141],
        [1.0194],
        [1.0200],
        [1.0122],
        [1.0179],
        [1.0215],
        [1.0224],
        [1.0172],
        [1.0053],
        [1.0207],
        [1.0187],
        [1.0151],
        [1.0167],
        [1.0239],
        [1.0248],
        [1.0171],
        [1.0156],
        [1.0191],
        [1.0211],
        [1.0108],
        [1.0176],
        [1.0230],
        [1.0220],
        [1.0182],
        [1.0130],
        [1.0203],
        [1.0198],
        [1.0146],
        [1.0163],
        [1.0280],
        [1.0291],
        [1.0163],
        [1.0146],
        [1.0198],
        [1.0203],
        [1.0131],
        [1.0183],
        [1.0219],
        [1.0229],
        [1.0176],
        [1.0110],
        [1.0210],
        [1.0191],
        [1.0155],
        [1.0170],
        [1.0248],
        [1.0240],
        [1.0167],
        [1.0150],
        [1.0188],
        [1.0207],
        [1.0084],
        [1.0172],
        [1.0224],
        [1.0214],
        [1.0179],
        [1.0122],
        [1.0199],
        [1.0194],
        [1.0140],
        [1.0159],
        [1.0261],
        [1.0252],
        [1.0158],
        [1.0138],
        [1.0192],
        [1.0201],
        [1.0126],
        [1.0180],
        [1.0217],
        [1.0227],
        [1.0174],
        [1.0096],
        [1.0209],
        [1.0186],
        [1.0149],
        [1.0165],
        [1.0236],
        [1.0243],
        [1.0169],
        [1.0153],
        [1.0189],
        [1.0213],
        [1.0115],
        [1.0177],
        [1.0233],
        [1.0222],
        [1.0184],
        [1.0134],
        [1.0205],
        [1.0196],
        [1.0143],
        [1.0162],
        [1.0267],
        [1.0272],
        [1.0162],
        [1.0145],
        [1.0197],
        [1.0206],
        [1.0136],
        [1.0185],
        [1.0223],
        [1.0235],
        [1.0178],
        [1.0119],
        [1.0214],
        [1.0190],
        [1.0154],
        [1.0170],
        [1.0245],
        [1.0237],
        [1.0166],
        [1.0150],
        [1.0186],
        [1.0210],
        [1.0102],
        [1.0175],
        [1.0228],
        [1.0219],
        [1.0181],
        [1.0128],
        [1.0202],
        [1.0193],
        [1.0139],
        [1.0159],
        [1.0256],
        [1.0266],
        [1.0160],
        [1.0142],
        [1.0195],
        [1.0200],
        [1.0125],
        [1.0180],
        [1.0216],
        [1.0225],
        [1.0173],
        [1.0094],
        [1.0207],
        [1.0189],
        [1.0151],
        [1.0168],
        [1.0242],
        [1.0251],
        [1.0171],
        [1.0156],
        [1.0192],
        [1.0211],
        [1.0114],
        [1.0177],
        [1.0231],
        [1.0220],
        [1.0183],
        [1.0132],
        [1.0204],
        [1.0199],
        [1.0147],
        [1.0164],
        [1.0320],
        [1.0326],
        [1.0164],
        [1.0147],
        [1.0199],
        [1.0204],
        [1.0133],
        [1.0184],
        [1.0220],
        [1.0231],
        [1.0177],
        [1.0114],
        [1.0211],
        [1.0192],
        [1.0156],
        [1.0171],
        [1.0251],
        [1.0242],
        [1.0168],
        [1.0152],
        [1.0189],
        [1.0207],
        [1.0094],
        [1.0173],
        [1.0225],
        [1.0216],
        [1.0180],
        [1.0124],
        [1.0200],
        [1.0195],
        [1.0142],
        [1.0160],
        [1.0266],
        [1.0255],
        [1.0158],
        [1.0139],
        [1.0193],
        [1.0202],
        [1.0128],
        [1.0181],
        [1.0219],
        [1.0229],
        [1.0175],
        [1.0103],
        [1.0210],
        [1.0186],
        [1.0150],
        [1.0166],
        [1.0238],
        [1.0245],
        [1.0170],
        [1.0154],
        [1.0190],
        [1.0214],
        [1.0118],
        [1.0178],
        [1.0234],
        [1.0224],
        [1.0185],
        [1.0136],
        [1.0206],
        [1.0197],
        [1.0145],
        [1.0163],
        [1.0274],
        [1.0267],
        [1.0162],
        [1.0143],
        [1.0196],
        [1.0205],
        [1.0134],
        [1.0184],
        [1.0222],
        [1.0233],
        [1.0177],
        [1.0115],
        [1.0213],
        [1.0189],
        [1.0153],
        [1.0169],
        [1.0243],
        [1.0236],
        [1.0165],
        [1.0149],
        [1.0185],
        [1.0209],
        [1.0096],
        [1.0174],
        [1.0227],
        [1.0218],
        [1.0181],
        [1.0127],
        [1.0201],
        [1.0192],
        [1.0138],
        [1.0158],
        [1.0252],
        [1.0262],
        [1.0159],
        [1.0140],
        [1.0194],
        [1.0199],
        [1.0122],
        [1.0179],
        [1.0215],
        [1.0224],
        [1.0172],
        [1.0080],
        [1.0206],
        [1.0188],
        [1.0150],
        [1.0167],
        [1.0240],
        [1.0248],
        [1.0170],
        [1.0155],
        [1.0191],
        [1.0211],
        [1.0111],
        [1.0176],
        [1.0230],
        [1.0219],
        [1.0183],
        [1.0131],
        [1.0203],
        [1.0198],
        [1.0146],
        [1.0163],
        [1.0288],
        [1.0281],
        [1.0163],
        [1.0146],
        [1.0198],
        [1.0203],
        [1.0130],
        [1.0182],
        [1.0220],
        [1.0230],
        [1.0176],
        [1.0107],
        [1.0211],
        [1.0190],
        [1.0155],
        [1.0170],
        [1.0248],
        [1.0239],
        [1.0167],
        [1.0151],
        [1.0187],
        [1.0207],
        [1.0060],
        [1.0172],
        [1.0224],
        [1.0215],
        [1.0179],
        [1.0121],
        [1.0200],
        [1.0194],
        [1.0140],
        [1.0160],
        [1.0259],
        [1.0254],
        [1.0157],
        [1.0137],
        [1.0193],
        [1.0201],
        [1.0127],
        [1.0181],
        [1.0217],
        [1.0227],
        [1.0174],
        [1.0102],
        [1.0209],
        [1.0186],
        [1.0148],
        [1.0165],
        [1.0236],
        [1.0244],
        [1.0169],
        [1.0152],
        [1.0189],
        [1.0212],
        [1.0117],
        [1.0177],
        [1.0232],
        [1.0221],
        [1.0184],
        [1.0134],
        [1.0205],
        [1.0196],
        [1.0143],
        [1.0161],
        [1.0272],
        [1.0278],
        [1.0162],
        [1.0144],
        [1.0197],
        [1.0206],
        [1.0136],
        [1.0185],
        [1.0222],
        [1.0234],
        [1.0178],
        [1.0120],
        [1.0214],
        [1.0190],
        [1.0154],
        [1.0170],
        [1.0246],
        [1.0238],
        [1.0166],
        [1.0149],
        [1.0187],
        [1.0209],
        [1.0106],
        [1.0175],
        [1.0228],
        [1.0218],
        [1.0182],
        [1.0129],
        [1.0202],
        [1.0193],
        [1.0139],
        [1.0158],
        [1.0258],
        [1.0263],
        [1.0161],
        [1.0142],
        [1.0195],
        [1.0200],
        [1.0124],
        [1.0180],
        [1.0216],
        [1.0226],
        [1.0173],
        [1.0085],
        [1.0208],
        [1.0188],
        [1.0152],
        [1.0168],
        [1.0241],
        [1.0250],
        [1.0171],
        [1.0157],
        [1.0191],
        [1.0212],
        [1.0112],
        [1.0176],
        [1.0232],
        [1.0221],
        [1.0183],
        [1.0132],
        [1.0204],
        [1.0198],
        [1.0147],
        [1.0164],
        [1.0292],
        [1.0301],
        [1.0164],
        [1.0148],
        [1.0198],
        [1.0204],
        [1.0132],
        [1.0183],
        [1.0221],
        [1.0232],
        [1.0176],
        [1.0112],
        [1.0212],
        [1.0192],
        [1.0156],
        [1.0172],
        [1.0250],
        [1.0241],
        [1.0168],
        [1.0152],
        [1.0188],
        [1.0208],
        [1.0090],
        [1.0173],
        [1.0226],
        [1.0216],
        [1.0180],
        [1.0123],
        [1.0201],
        [1.0195],
        [1.0142],
        [1.0160],
        [1.0263],
        [1.0257],
        [1.0158],
        [1.0138],
        [1.0194],
        [1.0202],
        [1.0129],
        [1.0182],
        [1.0218],
        [1.0228],
        [1.0175],
        [1.0105],
        [1.0210],
        [1.0187],
        [1.0149],
        [1.0166],
        [1.0239],
        [1.0246],
        [1.0169],
        [1.0154],
        [1.0190],
        [1.0214],
        [1.0119],
        [1.0178],
        [1.0234],
        [1.0223],
        [1.0185],
        [1.0137],
        [1.0206],
        [1.0197],
        [1.0144],
        [1.0162],
        [1.0277],
        [1.0269],
        [1.0161],
        [1.0143],
        [1.0196],
        [1.0205],
        [1.0135],
        [1.0184],
        [1.0222],
        [1.0232],
        [1.0178],
        [1.0117],
        [1.0213],
        [1.0189],
        [1.0153],
        [1.0168],
        [1.0244],
        [1.0237],
        [1.0165],
        [1.0148],
        [1.0186],
        [1.0209],
        [1.0099],
        [1.0174],
        [1.0226],
        [1.0217],
        [1.0181],
        [1.0127],
        [1.0201],
        [1.0193],
        [1.0137],
        [1.0157],
        [1.0254],
        [1.0260],
        [1.0159],
        [1.0141],
        [1.0194],
        [1.0200],
        [1.0121],
        [1.0179],
        [1.0215],
        [1.0225],
        [1.0172],
        [1.0070],
        [1.0207],
        [1.0187],
        [1.0151],
        [1.0167],
        [1.0239],
        [1.0247],
        [1.0171],
        [1.0155],
        [1.0191],
        [1.0211],
        [1.0109],
        [1.0175],
        [1.0230],
        [1.0219],
        [1.0182],
        [1.0130],
        [1.0203],
        [1.0197],
        [1.0146],
        [1.0163],
        [1.0283],
        [1.0287],
        [1.0163],
        [1.0145],
        [1.0198],
        [1.0203],
        [1.0131],
        [1.0183],
        [1.0219],
        [1.0229],
        [1.0176],
        [1.0109],
        [1.0211],
        [1.0191],
        [1.0155],
        [1.0170],
        [1.0249],
        [1.0240],
        [1.0167],
        [1.0151],
        [1.0188],
        [1.0207],
        [1.0079],
        [1.0173],
        [1.0224],
        [1.0215],
        [1.0179],
        [1.0123],
        [1.0199],
        [1.0194],
        [1.0140],
        [1.0159],
        [1.0260],
        [1.0253],
        [1.0157],
        [1.0138],
        [1.0192],
        [1.0202],
        [1.0126],
        [1.0181],
        [1.0217],
        [1.0228],
        [1.0174],
        [1.0098],
        [1.0209],
        [1.0186],
        [1.0149],
        [1.0165],
        [1.0236],
        [1.0243],
        [1.0169],
        [1.0153],
        [1.0189],
        [1.0213],
        [1.0116],
        [1.0177],
        [1.0233],
        [1.0222],
        [1.0184],
        [1.0134],
        [1.0205],
        [1.0196],
        [1.0144],
        [1.0161],
        [1.0269],
        [1.0274],
        [1.0162],
        [1.0145],
        [1.0196],
        [1.0206],
        [1.0135],
        [1.0185],
        [1.0223],
        [1.0235],
        [1.0178],
        [1.0119],
        [1.0214],
        [1.0190],
        [1.0154],
        [1.0170],
        [1.0245],
        [1.0237],
        [1.0166],
        [1.0150],
        [1.0186],
        [1.0210],
        [1.0103],
        [1.0174],
        [1.0229],
        [1.0218],
        [1.0181],
        [1.0128],
        [1.0203],
        [1.0193],
        [1.0140],
        [1.0158],
        [1.0256],
        [1.0265],
        [1.0160],
        [1.0141],
        [1.0195],
        [1.0200],
        [1.0125],
        [1.0180],
        [1.0216]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[29.7373],
         [54.5701],
         [23.5866],
         ...,
         [69.3646],
         [15.9055],
         [40.9107]],
        [[13.1637],
         [42.9078],
         [17.0007],
         ...,
         [58.1622],
         [12.4129],
         [38.3472]],
        [[11.9005],
         [41.6495],
         [16.3254],
         ...,
         [56.9077],
         [12.0377],
         [38.0413]],
        ...,
        [[10.4999],
         [40.1390],
         [15.5244],
         ...,
         [55.3882],
         [11.5878],
         [37.6649]],
        [[14.4486],
         [44.1031],
         [17.6489],
         ...,
         [59.3449],
         [12.7696],
         [38.6318]],
        [[17.7452],
         [46.8601],
         [19.1681],
         ...,
         [62.0405],
         [13.5936],
         [39.2674]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.1783, 1.5065, 1.0970,  ..., 1.7020, 0.9955, 1.3260],
        [0.9593, 1.3524, 1.0100,  ..., 1.5540, 0.9494, 1.2921],
        [0.9426, 1.3357, 1.0011,  ..., 1.5374, 0.9444, 1.2880],
        ...,
        [0.9241, 1.3158, 0.9905,  ..., 1.5173, 0.9384, 1.2831],
        [0.9763, 1.3682, 1.0185,  ..., 1.5696, 0.9541, 1.2959],
        [1.0198, 1.4046, 1.0386,  ..., 1.6052, 0.9650, 1.3042]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[ 80.1188],
         [ 39.8673],
         [ 23.8250],
         ...,
         [106.5735],
         [ 13.4915],
         [128.8446]],
        [[ 18.4923],
         [ 29.1841],
         [ 10.1644],
         ...,
         [ 31.8070],
         [ 11.0588],
         [ 49.9080]],
        [[ 15.4230],
         [ 28.0787],
         [  9.1472],
         ...,
         [ 27.3854],
         [ 10.7899],
         [ 44.3795]],
        ...,
        [[ 12.3122],
         [ 26.7647],
         [  8.0250],
         ...,
         [ 22.7423],
         [ 10.4652],
         [ 38.3615]],
        [[ 21.8656],
         [ 30.2433],
         [ 11.2037],
         ...,
         [ 36.5206],
         [ 11.3129],
         [ 55.6217]],
        [[ 31.6477],
         [ 32.7185],
         [ 13.8887],
         ...,
         [ 49.5416],
         [ 11.8947],
         [ 70.6514]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[2.3817, 1.5186, 1.1746,  ..., 2.9490, 0.9530, 3.4266],
        [1.0602, 1.2895, 0.8816,  ..., 1.3457, 0.9008, 1.7339],
        [0.9944, 1.2658, 0.8598,  ..., 1.2509, 0.8950, 1.6153],
        ...,
        [0.9277, 1.2376, 0.8358,  ..., 1.1513, 0.8881, 1.4863],
        [1.1325, 1.3122, 0.9039,  ..., 1.4468, 0.9063, 1.8564],
        [1.3423, 1.3653, 0.9615,  ..., 1.7260, 0.9187, 2.1787]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.8114],
         [39.6539],
         [52.2050],
         ...,
         [22.1631],
         [26.8124],
         [71.2646]],
        [[10.8635],
         [25.0911],
         [34.1760],
         ...,
         [12.8682],
         [15.3732],
         [58.4115]],
        [[10.3703],
         [23.7091],
         [32.4298],
         ...,
         [12.0307],
         [14.3503],
         [56.9909]],
        ...,
        [[ 9.7892],
         [22.0991],
         [30.3861],
         ...,
         [11.0666],
         [13.1748],
         [55.2757]],
        [[11.3396],
         [26.4385],
         [35.8714],
         ...,
         [13.6932],
         [16.3822],
         [59.7544]],
        [[12.4654],
         [29.6731],
         [39.9162],
         ...,
         [15.7054],
         [18.8493],
         [62.8280]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.9111, 1.2989, 1.5031,  ..., 1.0145, 1.0901, 1.8131],
        [0.8307, 1.0621, 1.2098,  ..., 0.8633, 0.9040, 1.6040],
        [0.8226, 1.0396, 1.1814,  ..., 0.8497, 0.8874, 1.5809],
        ...,
        [0.8132, 1.0134, 1.1482,  ..., 0.8340, 0.8683, 1.5530],
        [0.8384, 1.0840, 1.2374,  ..., 0.8767, 0.9204, 1.6259],
        [0.8567, 1.1366, 1.3032,  ..., 0.9094, 0.9606, 1.6759]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.6329],
         [26.9029],
         [24.6572],
         ...,
         [16.5096],
         [26.6021],
         [67.1390]],
        [[15.1852],
         [22.7604],
         [23.1410],
         ...,
         [11.1499],
         [21.8188],
         [59.2520]],
        [[14.4533],
         [22.2941],
         [22.9599],
         ...,
         [10.6211],
         [21.2899],
         [58.3425]],
        ...,
        [[13.5936],
         [21.7287],
         [22.7371],
         ...,
         [ 9.9995],
         [20.6513],
         [57.2329]],
        [[15.8938],
         [23.1995],
         [23.3094],
         ...,
         [11.6614],
         [22.3187],
         [60.1043]],
        [[17.5768],
         [24.1988],
         [23.6855],
         ...,
         [12.8749],
         [23.4628],
         [62.0287]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1192, 1.1756, 1.1459,  ..., 1.0382, 1.1716, 1.7073],
        [1.0207, 1.1209, 1.1259,  ..., 0.9674, 1.1084, 1.6031],
        [1.0111, 1.1147, 1.1235,  ..., 0.9604, 1.1014, 1.5911],
        ...,
        [0.9997, 1.1072, 1.1205,  ..., 0.9522, 1.0930, 1.5764],
        [1.0301, 1.1267, 1.1281,  ..., 0.9742, 1.1150, 1.6144],
        [1.0524, 1.1399, 1.1331,  ..., 0.9902, 1.1301, 1.6398]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[30.3451],
         [15.2552],
         [16.3790],
         ...,
         [12.8839],
         [18.3614],
         [14.0628]],
        [[20.9653],
         [ 9.9672],
         [ 9.3479],
         ...,
         [10.5695],
         [12.6023],
         [10.3553]],
        [[20.0273],
         [ 9.4556],
         [ 8.7209],
         ...,
         [10.3136],
         [12.0286],
         [ 9.9704]],
        ...,
        [[18.9212],
         [ 8.8571],
         [ 8.0008],
         ...,
         [10.0045],
         [11.3528],
         [ 9.5124]],
        [[21.8703],
         [10.4640],
         [ 9.9667],
         ...,
         [10.8114],
         [13.1562],
         [10.7239]],
        [[24.0078],
         [11.6497],
         [11.4809],
         ...,
         [11.3650],
         [14.4662],
         [11.5844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.3743, 1.0508, 1.0749,  ..., 0.9999, 1.1174, 1.0252],
        [1.1732, 0.9374, 0.9241,  ..., 0.9503, 0.9939, 0.9457],
        [1.1531, 0.9264, 0.9106,  ..., 0.9448, 0.9816, 0.9374],
        ...,
        [1.1294, 0.9136, 0.8952,  ..., 0.9382, 0.9671, 0.9276],
        [1.1926, 0.9480, 0.9374,  ..., 0.9555, 1.0058, 0.9536],
        [1.2385, 0.9734, 0.9698,  ..., 0.9673, 1.0338, 0.9720]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1854],
         [31.6523],
         [18.6425],
         ...,
         [77.9892],
         [27.9537],
         [21.6341]],
        [[12.3014],
         [22.8639],
         [14.4717],
         ...,
         [61.2843],
         [16.0521],
         [16.6637]],
        [[11.9848],
         [21.9616],
         [14.0251],
         ...,
         [59.4827],
         [14.9869],
         [16.1338]],
        ...,
        [[11.6031],
         [20.8910],
         [13.4899],
         ...,
         [57.3200],
         [13.7625],
         [15.4995]],
        [[12.6011],
         [23.7297],
         [14.8967],
         ...,
         [62.9961],
         [17.1027],
         [17.1683]],
        [[13.2885],
         [25.7583],
         [15.8791],
         ...,
         [66.9444],
         [19.6707],
         [18.3365]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9566, 1.2244, 1.0128,  ..., 1.9781, 1.1643, 1.0615],
        [0.9097, 1.0815, 0.9450,  ..., 1.7064, 0.9707, 0.9807],
        [0.9046, 1.0668, 0.9377,  ..., 1.6771, 0.9534, 0.9720],
        ...,
        [0.8983, 1.0494, 0.9290,  ..., 1.6419, 0.9335, 0.9617],
        [0.9146, 1.0956, 0.9519,  ..., 1.7342, 0.9878, 0.9889],
        [0.9258, 1.1286, 0.9679,  ..., 1.7985, 1.0296, 1.0079]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.5003],
         [26.9296],
         [24.7521],
         ...,
         [16.1907],
         [26.6353],
         [63.1931]],
        [[14.0913],
         [22.8078],
         [23.3841],
         ...,
         [11.0400],
         [21.8739],
         [57.0033]],
        [[13.3732],
         [22.3435],
         [23.2201],
         ...,
         [10.5289],
         [21.3471],
         [56.2805]],
        ...,
        [[12.5326],
         [21.7804],
         [23.0182],
         ...,
         [ 9.9273],
         [20.7108],
         [55.3961]],
        [[14.7884],
         [23.2449],
         [23.5365],
         ...,
         [11.5338],
         [22.3718],
         [57.6788]],
        [[16.4511],
         [24.2395],
         [23.8764],
         ...,
         [12.7032],
         [23.5110],
         [59.1980]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1040, 1.1757, 1.1469,  ..., 1.0338, 1.1718, 1.6550],
        [1.0061, 1.1213, 1.1289,  ..., 0.9657, 1.1089, 1.5732],
        [0.9966, 1.1151, 1.1267,  ..., 0.9590, 1.1019, 1.5636],
        ...,
        [0.9855, 1.1077, 1.1240,  ..., 0.9510, 1.0935, 1.5519],
        [1.0153, 1.1270, 1.1309,  ..., 0.9723, 1.1155, 1.5821],
        [1.0372, 1.1402, 1.1354,  ..., 0.9877, 1.1305, 1.6022]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[26.5103],
         [15.1656],
         [15.9536],
         ...,
         [12.8227],
         [17.6642],
         [14.0249]],
        [[18.8345],
         [ 9.9478],
         [ 9.3241],
         ...,
         [10.4958],
         [12.4769],
         [10.4008]],
        [[18.0542],
         [ 9.4418],
         [ 8.7243],
         ...,
         [10.2388],
         [11.9513],
         [10.0229]],
        ...,
        [[17.1304],
         [ 8.8495],
         [ 8.0333],
         ...,
         [ 9.9286],
         [11.3297],
         [ 9.5729]],
        [[19.5849],
         [10.4389],
         [ 9.9143],
         ...,
         [10.7388],
         [12.9826],
         [10.7623]],
        [[21.3483],
         [11.6102],
         [11.3524],
         ...,
         [11.2950],
         [14.1723],
         [11.6050]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2943, 1.0510, 1.0679,  ..., 1.0007, 1.1046, 1.0265],
        [1.1297, 0.9391, 0.9257,  ..., 0.9508, 0.9933, 0.9488],
        [1.1129, 0.9282, 0.9129,  ..., 0.9453, 0.9821, 0.9407],
        ...,
        [1.0931, 0.9155, 0.8980,  ..., 0.9387, 0.9687, 0.9311],
        [1.1457, 0.9496, 0.9384,  ..., 0.9561, 1.0042, 0.9566],
        [1.1836, 0.9747, 0.9692,  ..., 0.9680, 1.0297, 0.9746]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0567],
         [30.2280],
         [18.8665],
         ...,
         [77.4679],
         [27.7646],
         [21.6724]],
        [[12.3258],
         [22.4376],
         [14.5298],
         ...,
         [58.9317],
         [15.8191],
         [16.7094]],
        [[12.0242],
         [21.6249],
         [14.0676],
         ...,
         [56.9700],
         [14.7550],
         [16.1800]],
        ...,
        [[11.6601],
         [20.6570],
         [13.5142],
         ...,
         [54.6257],
         [13.5332],
         [15.5462]],
        [[12.6110],
         [23.2150],
         [14.9701],
         ...,
         [60.8028],
         [16.8695],
         [17.2135]],
        [[13.2638],
         [25.0271],
         [15.9893],
         ...,
         [65.1443],
         [19.4409],
         [18.3803]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9562, 1.2030, 1.0182,  ..., 1.9713, 1.1629, 1.0638],
        [0.9118, 1.0763, 0.9476,  ..., 1.6698, 0.9686, 0.9831],
        [0.9069, 1.0630, 0.9401,  ..., 1.6379, 0.9513, 0.9745],
        ...,
        [0.9010, 1.0473, 0.9311,  ..., 1.5998, 0.9314, 0.9642],
        [0.9164, 1.0889, 0.9548,  ..., 1.7003, 0.9857, 0.9913],
        [0.9271, 1.1184, 0.9714,  ..., 1.7709, 1.0275, 1.0103]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.0539],
         [26.9561],
         [24.8326],
         ...,
         [15.8783],
         [26.6684],
         [59.5402]],
        [[13.0385],
         [22.8575],
         [23.5803],
         ...,
         [10.9430],
         [21.9305],
         [54.7988]],
        [[12.3619],
         [22.3955],
         [23.4298],
         ...,
         [10.4501],
         [21.4059],
         [54.2388]],
        ...,
        [[11.5706],
         [21.8351],
         [23.2442],
         ...,
         [ 9.8692],
         [20.7722],
         [53.5516]],
        [[13.6961],
         [23.2924],
         [23.7202],
         ...,
         [11.4186],
         [22.4263],
         [55.3210]],
        [[15.2668],
         [24.2817],
         [24.0318],
         ...,
         [12.5424],
         [23.5603],
         [56.4909]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0848, 1.1760, 1.1480,  ..., 1.0296, 1.1722, 1.6067],
        [0.9921, 1.1219, 1.1314,  ..., 0.9644, 1.1096, 1.5440],
        [0.9832, 1.1158, 1.1294,  ..., 0.9579, 1.1027, 1.5366],
        ...,
        [0.9727, 1.1084, 1.1270,  ..., 0.9502, 1.0943, 1.5275],
        [1.0008, 1.1276, 1.1333,  ..., 0.9707, 1.1162, 1.5509],
        [1.0216, 1.1407, 1.1374,  ..., 0.9856, 1.1312, 1.5664]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.5526],
         [15.0707],
         [15.5541],
         ...,
         [12.7568],
         [17.0162],
         [13.9788]],
        [[16.6320],
         [ 9.9276],
         [ 9.3020],
         ...,
         [10.4243],
         [12.3414],
         [10.4295]],
        [[16.0167],
         [ 9.4276],
         [ 8.7284],
         ...,
         [10.1670],
         [11.8604],
         [10.0581]],
        ...,
        [[15.2846],
         [ 8.8419],
         [ 8.0655],
         ...,
         [ 9.8564],
         [11.2892],
         [ 9.6155]],
        [[17.2211],
         [10.4127],
         [ 9.8649],
         ...,
         [10.6677],
         [12.8029],
         [10.7845]],
        [[18.5957],
         [11.5686],
         [11.2305],
         ...,
         [11.2250],
         [13.8832],
         [11.6113]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2115, 1.0511, 1.0614,  ..., 1.0014, 1.0928, 1.0276],
        [1.0845, 0.9408, 0.9274,  ..., 0.9514, 0.9925, 0.9515],
        [1.0713, 0.9301, 0.9151,  ..., 0.9459, 0.9822, 0.9436],
        ...,
        [1.0556, 0.9175, 0.9008,  ..., 0.9392, 0.9700, 0.9341],
        [1.0972, 0.9512, 0.9394,  ..., 0.9566, 1.0024, 0.9592],
        [1.1267, 0.9760, 0.9687,  ..., 0.9686, 1.0256, 0.9769]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9131],
         [28.8670],
         [19.0705],
         ...,
         [76.7021],
         [27.5841],
         [21.7154]],
        [[12.4070],
         [22.0316],
         [14.5797],
         ...,
         [56.4447],
         [15.5986],
         [16.7404]],
        [[12.1277],
         [21.3068],
         [14.1030],
         ...,
         [54.3421],
         [14.5358],
         [16.2098]],
        ...,
        [[11.7897],
         [20.4403],
         [13.5330],
         ...,
         [51.8410],
         [13.3168],
         [15.5745]],
        [[12.6707],
         [22.7226],
         [15.0340],
         ...,
         [58.4581],
         [16.6486],
         [17.2456]],
        [[13.2724],
         [24.3251],
         [16.0874],
         ...,
         [63.1586],
         [19.2227],
         [18.4153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9536, 1.1806, 1.0213,  ..., 1.9586, 1.1597, 1.0643],
        [0.9129, 1.0694, 0.9482,  ..., 1.6291, 0.9648, 0.9834],
        [0.9083, 1.0576, 0.9405,  ..., 1.5949, 0.9475, 0.9747],
        ...,
        [0.9028, 1.0435, 0.9312,  ..., 1.5543, 0.9277, 0.9644],
        [0.9172, 1.0807, 0.9556,  ..., 1.6619, 0.9819, 0.9916],
        [0.9270, 1.1067, 0.9727,  ..., 1.7383, 1.0237, 1.0106]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6071],
         [27.1333],
         [25.4274],
         ...,
         [14.0094],
         [26.8892],
         [42.9341]],
        [[10.1544],
         [23.1692],
         [24.7004],
         ...,
         [10.4564],
         [22.2696],
         [40.8359]],
        [[ 9.9877],
         [22.7206],
         [24.6118],
         ...,
         [10.0845],
         [21.7560],
         [40.5834]],
        ...,
        [[ 9.7845],
         [22.1759],
         [24.5023],
         ...,
         [ 9.6413],
         [21.1349],
         [40.2721]],
        [[10.3107],
         [23.5912],
         [24.7824],
         ...,
         [10.8118],
         [22.7546],
         [41.0704]],
        [[10.6644],
         [24.5498],
         [24.9644],
         ...,
         [11.6396],
         [23.8624],
         [41.5927]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9752, 1.1804, 1.1579,  ..., 1.0070, 1.1772, 1.3892],
        [0.9560, 1.1280, 1.1483,  ..., 0.9600, 1.1162, 1.3615],
        [0.9538, 1.1221, 1.1471,  ..., 0.9551, 1.1094, 1.3582],
        ...,
        [0.9512, 1.1149, 1.1457,  ..., 0.9493, 1.1012, 1.3541],
        [0.9581, 1.1336, 1.1494,  ..., 0.9647, 1.1226, 1.3646],
        [0.9628, 1.1463, 1.1518,  ..., 0.9757, 1.1372, 1.3715]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8197],
         [14.4861],
         [13.2227],
         ...,
         [12.3509],
         [14.4138],
         [13.7045]],
        [[10.3548],
         [ 9.8014],
         [ 9.2103],
         ...,
         [10.1248],
         [11.3034],
         [10.5812]],
        [[10.1866],
         [ 9.3386],
         [ 8.8071],
         ...,
         [ 9.8788],
         [10.9683],
         [10.2478]],
        ...,
        [[ 9.9816],
         [ 8.7946],
         [ 8.3311],
         ...,
         [ 9.5817],
         [10.5662],
         [ 9.8485]],
        [[10.5126],
         [10.2489],
         [ 9.5989],
         ...,
         [10.3574],
         [11.6218],
         [10.8986]],
        [[10.8693],
         [11.3100],
         [10.5155],
         ...,
         [10.8897],
         [12.3566],
         [11.6332]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9847, 1.0419, 1.0148,  ..., 0.9961, 1.0404, 1.0252],
        [0.9533, 0.9415, 0.9288,  ..., 0.9484, 0.9737, 0.9582],
        [0.9497, 0.9315, 0.9201,  ..., 0.9431, 0.9665, 0.9510],
        ...,
        [0.9453, 0.9199, 0.9099,  ..., 0.9368, 0.9579, 0.9425],
        [0.9567, 0.9511, 0.9371,  ..., 0.9534, 0.9805, 0.9650],
        [0.9644, 0.9738, 0.9568,  ..., 0.9648, 0.9963, 0.9807]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.1402],
         [22.7122],
         [20.2549],
         ...,
         [63.9811],
         [26.5649],
         [22.0060]],
        [[13.2302],
         [19.8502],
         [14.8701],
         ...,
         [42.1120],
         [14.4981],
         [16.8804]],
        [[13.1217],
         [19.5220],
         [14.3119],
         ...,
         [39.9871],
         [13.4510],
         [16.3353]],
        ...,
        [[12.9882],
         [19.1221],
         [13.6482],
         ...,
         [37.4982],
         [12.2559],
         [15.6832]],
        [[13.3311],
         [20.1581],
         [15.4047],
         ...,
         [44.1739],
         [15.5370],
         [17.3998]],
        [[13.5567],
         [20.8546],
         [16.6533],
         ...,
         [49.0880],
         [18.1006],
         [18.6031]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9401, 1.0796, 1.0396,  ..., 1.7508, 1.1422, 1.0681],
        [0.9253, 1.0330, 0.9520,  ..., 1.3951, 0.9460, 0.9847],
        [0.9236, 1.0277, 0.9429,  ..., 1.3605, 0.9289, 0.9758],
        ...,
        [0.9214, 1.0212, 0.9321,  ..., 1.3201, 0.9095, 0.9652],
        [0.9270, 1.0380, 0.9607,  ..., 1.4286, 0.9629, 0.9932],
        [0.9307, 1.0493, 0.9810,  ..., 1.5086, 1.0046, 1.0127]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0761],
         [27.2037],
         [25.5258],
         ...,
         [13.3521],
         [26.9807],
         [38.2825]],
        [[ 9.7993],
         [23.3046],
         [24.8435],
         ...,
         [10.3543],
         [22.4111],
         [36.1913]],
        [[ 9.5491],
         [22.8625],
         [24.7604],
         ...,
         [10.0334],
         [21.9021],
         [35.9405]],
        ...,
        [[ 9.2474],
         [22.3255],
         [24.6575],
         ...,
         [ 9.6490],
         [21.2865],
         [35.6317]],
        [[10.0361],
         [23.7203],
         [24.9206],
         ...,
         [10.6596],
         [22.8914],
         [36.4244]],
        [[10.5790],
         [24.6640],
         [25.0914],
         ...,
         [11.3655],
         [23.9882],
         [36.9441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9545, 1.1545, 1.1323,  ..., 0.9714, 1.1515, 1.3009],
        [0.9244, 1.1029, 1.1233,  ..., 0.9318, 1.0911, 1.2732],
        [0.9211, 1.0971, 1.1222,  ..., 0.9275, 1.0844, 1.2699],
        ...,
        [0.9172, 1.0900, 1.1208,  ..., 0.9225, 1.0763, 1.2658],
        [0.9276, 1.1084, 1.1243,  ..., 0.9358, 1.0975, 1.2763],
        [0.9347, 1.1209, 1.1265,  ..., 0.9451, 1.1120, 1.2832]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9086],
         [14.2408],
         [12.5603],
         ...,
         [12.2149],
         [13.9005],
         [13.6206]],
        [[10.3940],
         [ 9.7497],
         [ 9.1835],
         ...,
         [10.0782],
         [10.8375],
         [10.6186]],
        [[10.2205],
         [ 9.3030],
         [ 8.8343],
         ...,
         [ 9.8412],
         [10.5087],
         [10.2963]],
        ...,
        [[10.0091],
         [ 8.7769],
         [ 8.4193],
         ...,
         [ 9.5547],
         [10.1144],
         [ 9.9098]],
        [[10.5569],
         [10.1811],
         [ 9.5181],
         ...,
         [10.3022],
         [11.1503],
         [10.9251]],
        [[10.9253],
         [11.2019],
         [10.3002],
         ...,
         [10.8140],
         [11.8726],
         [11.6331]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9826, 1.0326, 0.9966,  ..., 0.9892, 1.0253, 1.0193],
        [0.9501, 0.9363, 0.9242,  ..., 0.9434, 0.9597, 0.9550],
        [0.9464, 0.9267, 0.9167,  ..., 0.9383, 0.9526, 0.9480],
        ...,
        [0.9419, 0.9155, 0.9078,  ..., 0.9321, 0.9441, 0.9398],
        [0.9536, 0.9456, 0.9314,  ..., 0.9482, 0.9664, 0.9615],
        [0.9615, 0.9675, 0.9481,  ..., 0.9591, 0.9818, 0.9767]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.3437],
         [21.9283],
         [20.6120],
         ...,
         [55.5882],
         [26.1901],
         [22.1659]],
        [[13.8068],
         [19.0451],
         [14.9221],
         ...,
         [37.0429],
         [14.1910],
         [16.8450]],
        [[13.7417],
         [18.7156],
         [14.3372],
         ...,
         [35.2277],
         [13.1544],
         [16.2822]],
        ...,
        [[13.6614],
         [18.3146],
         [13.6429],
         ...,
         [33.0978],
         [11.9724],
         [15.6097]],
        [[13.8671],
         [19.3544],
         [15.4833],
         ...,
         [38.8017],
         [15.2205],
         [17.3818]],
        [[14.0012],
         [20.0548],
         [16.7974],
         ...,
         [42.9840],
         [17.7641],
         [18.6277]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9434, 1.0667, 1.0453,  ..., 1.6142, 1.1361, 1.0706],
        [0.9346, 1.0198, 0.9528,  ..., 1.3126, 0.9409, 0.9841],
        [0.9336, 1.0145, 0.9433,  ..., 1.2830, 0.9240, 0.9749],
        ...,
        [0.9323, 1.0080, 0.9320,  ..., 1.2484, 0.9048, 0.9640],
        [0.9356, 1.0249, 0.9619,  ..., 1.3412, 0.9576, 0.9928],
        [0.9378, 1.0363, 0.9833,  ..., 1.4092, 0.9990, 1.0131]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7641],
         [27.2671],
         [25.3861],
         ...,
         [12.7601],
         [27.0697],
         [34.5267]],
        [[ 9.1024],
         [23.4595],
         [24.6510],
         ...,
         [10.3398],
         [22.5739],
         [32.6107]],
        [[ 8.6481],
         [23.0268],
         [24.5615],
         ...,
         [10.0740],
         [22.0721],
         [32.3810]],
        ...,
        [[ 8.1157],
         [22.5007],
         [24.4509],
         ...,
         [ 9.7537],
         [21.4647],
         [32.0982]],
        [[ 9.5429],
         [23.8662],
         [24.7339],
         ...,
         [10.5913],
         [23.0474],
         [32.8242]],
        [[10.5918],
         [24.7889],
         [24.9179],
         ...,
         [11.1683],
         [24.1276],
         [33.3002]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9722, 1.1507, 1.1258,  ..., 0.9590, 1.1481, 1.2466],
        [0.9106, 1.1004, 1.1161,  ..., 0.9270, 1.0887, 1.2213],
        [0.9046, 1.0946, 1.1149,  ..., 0.9235, 1.0820, 1.2183],
        ...,
        [0.8976, 1.0877, 1.1135,  ..., 0.9192, 1.0740, 1.2145],
        [0.9164, 1.1057, 1.1172,  ..., 0.9303, 1.0949, 1.2241],
        [0.9303, 1.1179, 1.1196,  ..., 0.9379, 1.1092, 1.2304]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2717],
         [13.9732],
         [12.1289],
         ...,
         [12.1090],
         [13.4772],
         [13.5473]],
        [[10.6025],
         [ 9.6954],
         [ 9.1514],
         ...,
         [10.0851],
         [10.3896],
         [10.6195]],
        [[10.4123],
         [ 9.2665],
         [ 8.8378],
         ...,
         [ 9.8593],
         [10.0603],
         [10.3042]],
        ...,
        [[10.1810],
         [ 8.7605],
         [ 8.4635],
         ...,
         [ 9.5861],
         [ 9.6661],
         [ 9.9258]],
        [[10.7811],
         [10.1090],
         [ 9.4508],
         ...,
         [10.2981],
         [10.7032],
         [10.9192]],
        [[11.1861],
         [11.0850],
         [10.1466],
         ...,
         [10.7842],
         [11.4291],
         [11.6107]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 1.0236, 0.9840,  ..., 0.9836, 1.0129, 1.0144],
        [0.9513, 0.9318, 0.9202,  ..., 0.9402, 0.9467, 0.9517],
        [0.9472, 0.9226, 0.9134,  ..., 0.9354, 0.9397, 0.9449],
        ...,
        [0.9423, 0.9118, 0.9054,  ..., 0.9295, 0.9312, 0.9368],
        [0.9551, 0.9407, 0.9266,  ..., 0.9448, 0.9535, 0.9581],
        [0.9638, 0.9616, 0.9415,  ..., 0.9552, 0.9690, 0.9729]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.4049],
         [22.0199],
         [20.8722],
         ...,
         [45.2771],
         [25.8272],
         [22.3672]],
        [[14.7204],
         [18.2629],
         [14.8987],
         ...,
         [32.2300],
         [13.9540],
         [16.7265]],
        [[14.6378],
         [17.8448],
         [14.2897],
         ...,
         [30.9020],
         [12.9300],
         [16.1355]],
        ...,
        [[14.5359],
         [17.3392],
         [13.5684],
         ...,
         [29.3296],
         [11.7630],
         [15.4308]],
        [[14.7970],
         [18.6575],
         [15.4840],
         ...,
         [33.5067],
         [14.9712],
         [17.2913]],
        [[14.9676],
         [19.5589],
         [16.8581],
         ...,
         [36.5056],
         [17.4858],
         [18.6062]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9608, 1.0684, 1.0497,  ..., 1.4466, 1.1303, 1.0740],
        [0.9497, 1.0073, 0.9526,  ..., 1.2344, 0.9372, 0.9823],
        [0.9483, 1.0005, 0.9426,  ..., 1.2128, 0.9205, 0.9727],
        ...,
        [0.9467, 0.9922, 0.9309,  ..., 1.1873, 0.9016, 0.9612],
        [0.9509, 1.0137, 0.9621,  ..., 1.2552, 0.9537, 0.9915],
        [0.9537, 1.0283, 0.9844,  ..., 1.3040, 0.9946, 1.0129]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6527],
         [27.3675],
         [25.2650],
         ...,
         [11.9203],
         [27.2173],
         [29.0883]],
        [[ 8.8971],
         [23.7123],
         [24.4751],
         ...,
         [10.3845],
         [22.8339],
         [27.9849]],
        [[ 8.3643],
         [23.2952],
         [24.3790],
         ...,
         [10.2087],
         [22.3429],
         [27.8512]],
        ...,
        [[ 7.7471],
         [22.7877],
         [24.2603],
         ...,
         [ 9.9946],
         [21.7481],
         [27.6862]],
        [[ 9.4191],
         [24.1040],
         [24.5641],
         ...,
         [10.5495],
         [23.2968],
         [28.1088]],
        [[10.6820],
         [24.9915],
         [24.7617],
         ...,
         [10.9229],
         [24.3517],
         [28.3843]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9780, 1.1460, 1.1183,  ..., 0.9419, 1.1441, 1.1688],
        [0.9020, 1.0977, 1.1078,  ..., 0.9216, 1.0861, 1.1542],
        [0.8949, 1.0922, 1.1066,  ..., 0.9193, 1.0796, 1.1524],
        ...,
        [0.8868, 1.0855, 1.1050,  ..., 0.9165, 1.0718, 1.1503],
        [0.9089, 1.1029, 1.1090,  ..., 0.9238, 1.0923, 1.1558],
        [0.9255, 1.1146, 1.1116,  ..., 0.9287, 1.1062, 1.1595]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3857],
         [13.5671],
         [11.6112],
         ...,
         [12.0063],
         [12.8076],
         [13.4260]],
        [[10.7682],
         [ 9.6139],
         [ 9.1301],
         ...,
         [10.1553],
         [ 9.8026],
         [10.5708]],
        [[10.5833],
         [ 9.2126],
         [ 8.8624],
         ...,
         [ 9.9470],
         [ 9.4835],
         [10.2625]],
        ...,
        [[10.3581],
         [ 8.7377],
         [ 8.5410],
         ...,
         [ 9.6943],
         [ 9.1018],
         [ 9.8923]],
        [[10.9418],
         [ 9.9999],
         [ 9.3844],
         ...,
         [10.3515],
         [10.1068],
         [10.8636]],
        [[11.3349],
         [10.9074],
         [ 9.9710],
         ...,
         [10.7979],
         [10.8119],
         [11.5389]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.0105, 0.9686,  ..., 0.9771, 0.9942, 1.0075],
        [0.9505, 0.9257, 0.9154,  ..., 0.9374, 0.9298, 0.9463],
        [0.9465, 0.9171, 0.9096,  ..., 0.9329, 0.9230, 0.9397],
        ...,
        [0.9417, 0.9070, 0.9027,  ..., 0.9275, 0.9148, 0.9317],
        [0.9542, 0.9340, 0.9208,  ..., 0.9416, 0.9363, 0.9525],
        [0.9627, 0.9535, 0.9334,  ..., 0.9511, 0.9514, 0.9670]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.2590],
         [22.9292],
         [21.2794],
         ...,
         [30.0897],
         [25.2417],
         [22.6871]],
        [[15.4393],
         [17.2159],
         [14.8587],
         ...,
         [25.7193],
         [13.6937],
         [16.5437]],
        [[15.3408],
         [16.6159],
         [14.2125],
         ...,
         [25.2245],
         [12.6953],
         [15.9094]],
        ...,
        [[15.2194],
         [15.9002],
         [13.4495],
         ...,
         [24.6235],
         [11.5567],
         [15.1559]],
        [[15.5309],
         [17.7891],
         [15.4813],
         ...,
         [26.1848],
         [14.6850],
         [17.1516]],
        [[15.7348],
         [19.1224],
         [16.9490],
         ...,
         [27.2419],
         [17.1339],
         [18.5735]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9752, 1.0837, 1.0569,  ..., 1.2002, 1.1213, 1.0798],
        [0.9619, 0.9908, 0.9524,  ..., 1.1291, 0.9335, 0.9798],
        [0.9603, 0.9810, 0.9419,  ..., 1.1210, 0.9172, 0.9695],
        ...,
        [0.9583, 0.9694, 0.9295,  ..., 1.1112, 0.8987, 0.9573],
        [0.9634, 1.0001, 0.9626,  ..., 1.1366, 0.9496, 0.9897],
        [0.9667, 1.0218, 0.9864,  ..., 1.1538, 0.9894, 1.0128]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6466],
         [27.4056],
         [25.0102],
         ...,
         [11.5455],
         [27.2902],
         [27.4241]],
        [[ 8.8983],
         [23.9244],
         [24.0558],
         ...,
         [10.5703],
         [23.0525],
         [26.6448]],
        [[ 8.3660],
         [23.5254],
         [23.9402],
         ...,
         [10.4555],
         [22.5760],
         [26.5499]],
        ...,
        [[ 7.7493],
         [23.0395],
         [23.7975],
         ...,
         [10.3146],
         [21.9981],
         [26.4326]],
        [[ 9.4198],
         [24.2987],
         [24.1630],
         ...,
         [10.6774],
         [23.5014],
         [26.7327]],
        [[10.6813],
         [25.1456],
         [24.4012],
         ...,
         [10.9178],
         [24.5232],
         [26.9278]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9849, 1.1536, 1.1219,  ..., 0.9440, 1.1520, 1.1538],
        [0.9090, 1.1075, 1.1093,  ..., 0.9311, 1.0960, 1.1435],
        [0.9019, 1.1023, 1.1078,  ..., 0.9295, 1.0897, 1.1422],
        ...,
        [0.8938, 1.0959, 1.1059,  ..., 0.9277, 1.0821, 1.1407],
        [0.9159, 1.1125, 1.1107,  ..., 0.9325, 1.1020, 1.1447],
        [0.9325, 1.1237, 1.1139,  ..., 0.9357, 1.1155, 1.1472]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4113],
         [13.2746],
         [11.5317],
         ...,
         [11.8522],
         [12.3592],
         [13.2796]],
        [[10.8072],
         [ 9.5600],
         [ 9.1222],
         ...,
         [10.2777],
         [ 9.5365],
         [10.3655]],
        [[10.6237],
         [ 9.1793],
         [ 8.8613],
         ...,
         [10.0980],
         [ 9.2352],
         [10.0524]],
        ...,
        [[10.4001],
         [ 8.7278],
         [ 8.5479],
         ...,
         [ 9.8792],
         [ 8.8746],
         [ 9.6769]],
        [[10.9795],
         [ 9.9254],
         [ 9.3699],
         ...,
         [10.4465],
         [ 9.8233],
         [10.6632]],
        [[11.3695],
         [10.7821],
         [ 9.9404],
         ...,
         [10.8288],
         [10.4870],
         [11.3507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9839, 1.0024, 0.9651,  ..., 0.9719, 0.9828, 1.0025],
        [0.9495, 0.9228, 0.9134,  ..., 0.9382, 0.9223, 0.9401],
        [0.9456, 0.9146, 0.9078,  ..., 0.9343, 0.9158, 0.9333],
        ...,
        [0.9408, 0.9049, 0.9011,  ..., 0.9296, 0.9081, 0.9253],
        [0.9532, 0.9306, 0.9187,  ..., 0.9418, 0.9284, 0.9464],
        [0.9616, 0.9490, 0.9309,  ..., 0.9500, 0.9427, 0.9612]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9118],
         [23.6908],
         [21.4215],
         ...,
         [23.3887],
         [24.9121],
         [22.8902]],
        [[15.0994],
         [16.6969],
         [14.7618],
         ...,
         [21.5209],
         [13.6049],
         [16.3672]],
        [[15.0018],
         [15.9892],
         [14.0968],
         ...,
         [21.3003],
         [12.6234],
         [15.7015]],
        ...,
        [[14.8815],
         [15.1523],
         [13.3130],
         ...,
         [21.0297],
         [11.5030],
         [14.9128]],
        [[15.1901],
         [17.3780],
         [15.4035],
         ...,
         [21.7266],
         [14.5788],
         [17.0068]],
        [[15.3922],
         [18.9810],
         [16.9201],
         ...,
         [22.1874],
         [16.9815],
         [18.5081]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9694, 1.0959, 1.0590,  ..., 1.0910, 1.1158, 1.0829],
        [0.9562, 0.9822, 0.9507,  ..., 1.0606, 0.9319, 0.9768],
        [0.9546, 0.9707, 0.9399,  ..., 1.0570, 0.9159, 0.9660],
        ...,
        [0.9526, 0.9570, 0.9271,  ..., 1.0526, 0.8977, 0.9532],
        [0.9577, 0.9932, 0.9611,  ..., 1.0640, 0.9477, 0.9872],
        [0.9610, 1.0193, 0.9858,  ..., 1.0715, 0.9868, 1.0116]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0944],
         [27.4800],
         [24.4196],
         ...,
         [11.2250],
         [27.5172],
         [25.0444]],
        [[ 9.3126],
         [24.9726],
         [22.7265],
         ...,
         [11.0006],
         [24.0942],
         [24.0235]],
        [[ 8.9279],
         [24.6786],
         [22.5253],
         ...,
         [10.9731],
         [23.7012],
         [23.9001]],
        ...,
        [[ 8.4724],
         [24.3185],
         [22.2779],
         ...,
         [10.9392],
         [23.2224],
         [23.7477]],
        [[ 9.6825],
         [25.2472],
         [22.9139],
         ...,
         [11.0260],
         [24.4628],
         [24.1380]],
        [[10.5515],
         [25.8638],
         [23.3329],
         ...,
         [11.0823],
         [25.2962],
         [24.3927]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1694, 1.1289,  ..., 0.9545, 1.1699, 1.1372],
        [0.9293, 1.1362, 1.1065,  ..., 0.9516, 1.1246, 1.1237],
        [0.9242, 1.1323, 1.1039,  ..., 0.9512, 1.1194, 1.1221],
        ...,
        [0.9182, 1.1276, 1.1006,  ..., 0.9508, 1.1131, 1.1200],
        [0.9342, 1.1399, 1.1090,  ..., 0.9519, 1.1295, 1.1252],
        [0.9456, 1.1480, 1.1146,  ..., 0.9527, 1.1405, 1.1286]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3980],
         [12.1845],
         [11.4715],
         ...,
         [13.6912],
         [10.9898],
         [12.3454]],
        [[10.7871],
         [ 9.3908],
         [ 9.1647],
         ...,
         [11.6616],
         [ 9.2065],
         [ 9.5032]],
        [[10.6029],
         [ 9.0929],
         [ 8.9135],
         ...,
         [11.4322],
         [ 9.0069],
         [ 9.2003]],
        ...,
        [[10.3785],
         [ 8.7363],
         [ 8.6113],
         ...,
         [11.1538],
         [ 8.7652],
         [ 8.8378]],
        [[10.9601],
         [ 9.6745],
         [ 9.4029],
         ...,
         [11.8774],
         [ 9.3947],
         [ 9.7916]],
        [[11.3516],
         [10.3313],
         [ 9.9506],
         ...,
         [12.3679],
         [ 9.8237],
         [10.4596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9794, 0.9748, 0.9595,  ..., 1.0071, 0.9492, 0.9783],
        [0.9449, 0.9149, 0.9101,  ..., 0.9636, 0.9110, 0.9173],
        [0.9409, 0.9085, 0.9047,  ..., 0.9587, 0.9067, 0.9108],
        ...,
        [0.9361, 0.9009, 0.8982,  ..., 0.9527, 0.9015, 0.9031],
        [0.9486, 0.9210, 0.9152,  ..., 0.9682, 0.9150, 0.9235],
        [0.9570, 0.9351, 0.9269,  ..., 0.9788, 0.9242, 0.9378]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5249],
         [26.7679],
         [21.9034],
         ...,
         [16.2242],
         [23.6272],
         [23.5629]],
        [[13.5501],
         [15.5015],
         [14.4637],
         ...,
         [14.8601],
         [13.5976],
         [15.6896]],
        [[13.4341],
         [14.4879],
         [13.7394],
         ...,
         [14.6994],
         [12.6987],
         [14.9193]],
        ...,
        [[13.2914],
         [13.3215],
         [12.8907],
         ...,
         [14.5024],
         [11.6652],
         [14.0156]],
        [[13.6581],
         [16.5001],
         [15.1662],
         ...,
         [15.0100],
         [14.4839],
         [16.4361]],
        [[13.8995],
         [18.9373],
         [16.8396],
         ...,
         [15.3461],
         [16.6494],
         [18.2112]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9526, 1.1518, 1.0726,  ..., 0.9803, 1.1007, 1.0996],
        [0.9368, 0.9685, 0.9516,  ..., 0.9581, 0.9376, 0.9716],
        [0.9349, 0.9520, 0.9399,  ..., 0.9555, 0.9229, 0.9591],
        ...,
        [0.9326, 0.9331, 0.9261,  ..., 0.9523, 0.9061, 0.9444],
        [0.9385, 0.9848, 0.9631,  ..., 0.9605, 0.9520, 0.9837],
        [0.9425, 1.0244, 0.9903,  ..., 0.9660, 0.9872, 1.0126]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.2482],
         [27.4194],
         [24.8453],
         ...,
         [11.4277],
         [27.3356],
         [26.7171]],
        [[ 8.9823],
         [24.1619],
         [23.7433],
         ...,
         [10.6700],
         [23.2863],
         [26.0327]],
        [[ 8.4837],
         [23.7866],
         [23.6103],
         ...,
         [10.5797],
         [22.8287],
         [25.9492]],
        ...,
        [[ 7.9031],
         [23.3288],
         [23.4463],
         ...,
         [10.4688],
         [22.2732],
         [25.8460]],
        [[ 9.4686],
         [24.5137],
         [23.8667],
         ...,
         [10.7540],
         [23.7169],
         [26.1101]],
        [[10.6370],
         [25.3082],
         [24.1414],
         ...,
         [10.9417],
         [24.6955],
         [26.2815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9828, 1.1569, 1.1229,  ..., 0.9455, 1.1558, 1.1476],
        [0.9132, 1.1138, 1.1083,  ..., 0.9355, 1.1023, 1.1386],
        [0.9066, 1.1089, 1.1065,  ..., 0.9343, 1.0962, 1.1375],
        ...,
        [0.8990, 1.1028, 1.1044,  ..., 0.9329, 1.0889, 1.1361],
        [0.9197, 1.1185, 1.1099,  ..., 0.9366, 1.1080, 1.1396],
        [0.9351, 1.1290, 1.1136,  ..., 0.9391, 1.1209, 1.1418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4082],
         [12.9921],
         [11.4928],
         ...,
         [11.9248],
         [11.9691],
         [13.0974]],
        [[10.8026],
         [ 9.5113],
         [ 9.1244],
         ...,
         [10.4143],
         [ 9.3682],
         [10.1266]],
        [[10.6188],
         [ 9.1511],
         [ 8.8675],
         ...,
         [10.2412],
         [ 9.0883],
         [ 9.8092]],
        ...,
        [[10.3951],
         [ 8.7230],
         [ 8.5586],
         ...,
         [10.0302],
         [ 8.7525],
         [ 9.4291]],
        [[10.9750],
         [ 9.8564],
         [ 9.3683],
         ...,
         [10.5768],
         [ 9.6342],
         [10.4287]],
        [[11.3653],
         [10.6629],
         [ 9.9297],
         ...,
         [10.9443],
         [10.2483],
         [11.1277]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9826, 0.9951, 0.9630,  ..., 0.9723, 0.9732, 0.9974],
        [0.9482, 0.9205, 0.9122,  ..., 0.9399, 0.9174, 0.9337],
        [0.9443, 0.9128, 0.9067,  ..., 0.9362, 0.9114, 0.9269],
        ...,
        [0.9395, 0.9036, 0.9001,  ..., 0.9316, 0.9042, 0.9187],
        [0.9519, 0.9279, 0.9174,  ..., 0.9434, 0.9231, 0.9402],
        [0.9603, 0.9452, 0.9295,  ..., 0.9512, 0.9363, 0.9552]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.4794],
         [24.4521],
         [21.5283],
         ...,
         [22.5424],
         [24.6415],
         [23.0518]],
        [[14.7222],
         [16.3004],
         [14.6905],
         ...,
         [19.5412],
         [13.5634],
         [16.2035]],
        [[14.6311],
         [15.5023],
         [14.0117],
         ...,
         [19.1987],
         [12.5971],
         [15.5117]],
        ...,
        [[14.5188],
         [14.5659],
         [13.2126],
         ...,
         [18.7818],
         [11.4929],
         [14.6939]],
        [[14.8069],
         [17.0736],
         [15.3463],
         ...,
         [19.8629],
         [14.5212],
         [16.8697]],
        [[14.9953],
         [18.9122],
         [16.8990],
         ...,
         [20.5917],
         [16.8809],
         [18.4381]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9628, 1.1088, 1.0612,  ..., 1.0777, 1.1118, 1.0860],
        [0.9505, 0.9762, 0.9500,  ..., 1.0289, 0.9317, 0.9746],
        [0.9490, 0.9632, 0.9389,  ..., 1.0233, 0.9159, 0.9633],
        ...,
        [0.9472, 0.9480, 0.9259,  ..., 1.0165, 0.8980, 0.9500],
        [0.9519, 0.9887, 0.9607,  ..., 1.0341, 0.9472, 0.9854],
        [0.9549, 1.0187, 0.9859,  ..., 1.0460, 0.9856, 1.0109]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9373],
         [27.3972],
         [24.6214],
         ...,
         [11.6348],
         [27.3668],
         [26.5644]],
        [[ 9.3717],
         [24.7143],
         [23.2458],
         ...,
         [10.6016],
         [23.8083],
         [25.8562]],
        [[ 9.0051],
         [24.4010],
         [23.0810],
         ...,
         [10.4803],
         [23.4012],
         [25.7699]],
        ...,
        [[ 8.5698],
         [24.0177],
         [22.8780],
         ...,
         [10.3316],
         [22.9057],
         [25.6631]],
        [[ 9.7235],
         [25.0071],
         [23.3990],
         ...,
         [10.7149],
         [24.1903],
         [25.9362]],
        [[10.5471],
         [25.6656],
         [23.7408],
         ...,
         [10.9692],
         [25.0552],
         [26.1135]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1703, 1.1336,  ..., 0.9620, 1.1699, 1.1593],
        [0.9321, 1.1348, 1.1154,  ..., 0.9483, 1.1228, 1.1499],
        [0.9272, 1.1307, 1.1132,  ..., 0.9467, 1.1175, 1.1488],
        ...,
        [0.9215, 1.1256, 1.1105,  ..., 0.9447, 1.1109, 1.1474],
        [0.9367, 1.1387, 1.1174,  ..., 0.9498, 1.1279, 1.1510],
        [0.9476, 1.1474, 1.1219,  ..., 0.9532, 1.1393, 1.1533]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2880],
         [12.4512],
         [11.4614],
         ...,
         [12.4528],
         [11.3540],
         [12.6163]],
        [[10.6229],
         [ 9.4306],
         [ 9.1317],
         ...,
         [10.8113],
         [ 9.2082],
         [ 9.6634]],
        [[10.4332],
         [ 9.1117],
         [ 8.8784],
         ...,
         [10.6238],
         [ 8.9725],
         [ 9.3497]],
        ...,
        [[10.2023],
         [ 8.7309],
         [ 8.5737],
         ...,
         [10.3955],
         [ 8.6883],
         [ 8.9744]],
        [[10.8012],
         [ 9.7348],
         [ 9.3719],
         ...,
         [10.9874],
         [ 9.4313],
         [ 9.9624]],
        [[11.2052],
         [10.4415],
         [ 9.9247],
         ...,
         [11.3861],
         [ 9.9429],
         [10.6554]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 0.9820, 0.9608,  ..., 0.9820, 0.9585, 0.9856],
        [0.9428, 0.9172, 0.9108,  ..., 0.9468, 0.9125, 0.9222],
        [0.9387, 0.9104, 0.9054,  ..., 0.9428, 0.9074, 0.9155],
        ...,
        [0.9338, 0.9022, 0.8989,  ..., 0.9379, 0.9013, 0.9075],
        [0.9466, 0.9238, 0.9160,  ..., 0.9506, 0.9173, 0.9286],
        [0.9553, 0.9389, 0.9278,  ..., 0.9592, 0.9282, 0.9435]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5859],
         [25.9252],
         [21.6751],
         ...,
         [23.4613],
         [24.1882],
         [23.3078]],
        [[13.8749],
         [15.7369],
         [14.5742],
         ...,
         [20.0357],
         [13.5659],
         [15.8845]],
        [[13.7894],
         [14.7939],
         [13.8755],
         ...,
         [19.6480],
         [12.6287],
         [15.1482]],
        ...,
        [[13.6839],
         [13.7016],
         [13.0546],
         ...,
         [19.1773],
         [11.5549],
         [14.2815]],
        [[13.9544],
         [16.6609],
         [15.2506],
         ...,
         [20.4004],
         [14.4928],
         [16.5961]],
        [[14.1314],
         [18.8961],
         [16.8561],
         ...,
         [21.2288],
         [16.7684],
         [18.2811]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9504, 1.1348, 1.0657,  ..., 1.0947, 1.1066, 1.0922],
        [0.9388, 0.9691, 0.9502,  ..., 1.0390, 0.9338, 0.9715],
        [0.9374, 0.9538, 0.9388,  ..., 1.0327, 0.9186, 0.9595],
        ...,
        [0.9357, 0.9360, 0.9255,  ..., 1.0251, 0.9011, 0.9454],
        [0.9401, 0.9841, 0.9612,  ..., 1.0450, 0.9489, 0.9831],
        [0.9430, 1.0205, 0.9873,  ..., 1.0584, 0.9859, 1.0105]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7566],
         [27.4250],
         [24.6297],
         ...,
         [11.4727],
         [27.4360],
         [25.1741]],
        [[ 9.4455],
         [25.0261],
         [23.2429],
         ...,
         [10.5554],
         [24.0918],
         [24.2361]],
        [[ 9.1006],
         [24.7441],
         [23.0768],
         ...,
         [10.4470],
         [23.7072],
         [24.1225]],
        ...,
        [[ 8.6899],
         [24.3985],
         [22.8722],
         ...,
         [10.3141],
         [23.2384],
         [23.9821]],
        [[ 9.7755],
         [25.2893],
         [23.3974],
         ...,
         [10.6564],
         [24.4523],
         [24.3415]],
        [[10.5452],
         [25.8799],
         [23.7419],
         ...,
         [10.8827],
         [25.2672],
         [24.5757]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9759, 1.1698, 1.1328,  ..., 0.9589, 1.1699, 1.1400],
        [0.9322, 1.1381, 1.1145,  ..., 0.9468, 1.1257, 1.1276],
        [0.9276, 1.1343, 1.1123,  ..., 0.9454, 1.1206, 1.1261],
        ...,
        [0.9222, 1.1298, 1.1096,  ..., 0.9436, 1.1144, 1.1243],
        [0.9365, 1.1415, 1.1165,  ..., 0.9482, 1.1305, 1.1290],
        [0.9467, 1.1493, 1.1211,  ..., 0.9512, 1.1412, 1.1321]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2703],
         [12.1788],
         [11.3256],
         ...,
         [12.2963],
         [11.0481],
         [12.4022]],
        [[10.6008],
         [ 9.3931],
         [ 9.1486],
         ...,
         [10.6339],
         [ 9.1949],
         [ 9.5417]],
        [[10.4106],
         [ 9.0959],
         [ 8.9101],
         ...,
         [10.4444],
         [ 8.9883],
         [ 9.2370]],
        ...,
        [[10.1792],
         [ 8.7400],
         [ 8.6226],
         ...,
         [10.2139],
         [ 8.7383],
         [ 8.8722]],
        [[10.7794],
         [ 9.6761],
         [ 9.3746],
         ...,
         [10.8119],
         [ 9.3899],
         [ 9.8320]],
        [[11.1845],
         [10.3311],
         [ 9.8931],
         ...,
         [11.2153],
         [ 9.8349],
         [10.5041]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9769, 0.9750, 0.9567,  ..., 0.9775, 0.9507, 0.9798],
        [0.9411, 0.9152, 0.9100,  ..., 0.9418, 0.9110, 0.9184],
        [0.9371, 0.9089, 0.9049,  ..., 0.9378, 0.9066, 0.9119],
        ...,
        [0.9321, 0.9012, 0.8987,  ..., 0.9328, 0.9012, 0.9041],
        [0.9450, 0.9213, 0.9148,  ..., 0.9457, 0.9152, 0.9247],
        [0.9537, 0.9354, 0.9260,  ..., 0.9543, 0.9247, 0.9391]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6844],
         [26.7473],
         [21.9278],
         ...,
         [20.8654],
         [23.7620],
         [23.4925]],
        [[14.0876],
         [15.5062],
         [14.5694],
         ...,
         [17.7772],
         [13.6059],
         [15.7528]],
        [[14.0155],
         [14.4943],
         [13.8504],
         ...,
         [17.4282],
         [12.6985],
         [14.9924]],
        ...,
        [[13.9264],
         [13.3296],
         [13.0072],
         ...,
         [17.0045],
         [11.6559],
         [14.0994]],
        [[14.1546],
         [16.5031],
         [15.2663],
         ...,
         [18.1056],
         [14.5012],
         [16.4890]],
        [[14.3034],
         [18.9356],
         [16.9243],
         ...,
         [18.8520],
         [16.6906],
         [18.2376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9547, 1.1509, 1.0726,  ..., 1.0553, 1.1024, 1.0980],
        [0.9450, 0.9681, 0.9529,  ..., 1.0050, 0.9372, 0.9721],
        [0.9439, 0.9516, 0.9412,  ..., 0.9994, 0.9224, 0.9597],
        ...,
        [0.9424, 0.9327, 0.9275,  ..., 0.9925, 0.9055, 0.9452],
        [0.9461, 0.9843, 0.9642,  ..., 1.0104, 0.9518, 0.9841],
        [0.9485, 1.0239, 0.9912,  ..., 1.0225, 0.9874, 1.0125]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3896],
         [27.4328],
         [24.6593],
         ...,
         [11.7268],
         [27.4833],
         [24.4481]],
        [[ 9.6188],
         [25.7533],
         [23.2345],
         ...,
         [10.2396],
         [24.7297],
         [22.8074]],
        [[ 9.3221],
         [25.5527],
         [23.0640],
         ...,
         [10.0692],
         [24.4087],
         [22.6121]],
        ...,
        [[ 8.9664],
         [25.3059],
         [22.8540],
         ...,
         [ 9.8615],
         [24.0159],
         [22.3721]],
        [[ 9.9011],
         [25.9399],
         [23.3931],
         ...,
         [10.3996],
         [25.0299],
         [22.9892]],
        [[10.5538],
         [26.3565],
         [23.7468],
         ...,
         [10.7614],
         [25.7053],
         [23.3955]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9674, 1.1662, 1.1295,  ..., 0.9586, 1.1668, 1.1267],
        [0.9307, 1.1440, 1.1107,  ..., 0.9389, 1.1304, 1.1050],
        [0.9268, 1.1413, 1.1084,  ..., 0.9367, 1.1262, 1.1025],
        ...,
        [0.9221, 1.1381, 1.1057,  ..., 0.9339, 1.1210, 1.0993],
        [0.9345, 1.1464, 1.1128,  ..., 0.9411, 1.1344, 1.1074],
        [0.9431, 1.1519, 1.1175,  ..., 0.9458, 1.1433, 1.1128]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2190],
         [11.6871],
         [11.2039],
         ...,
         [12.2011],
         [11.0077],
         [11.8476]],
        [[10.5469],
         [ 9.3568],
         [ 9.1712],
         ...,
         [10.5314],
         [ 9.3557],
         [ 9.2928]],
        [[10.3565],
         [ 9.1027],
         [ 8.9467],
         ...,
         [10.3413],
         [ 9.1693],
         [ 9.0176]],
        ...,
        [[10.1250],
         [ 8.7969],
         [ 8.6757],
         ...,
         [10.1100],
         [ 8.9430],
         [ 8.6873]],
        [[10.7258],
         [ 9.5976],
         [ 9.3834],
         ...,
         [10.7100],
         [ 9.5312],
         [ 9.5544]],
        [[11.1313],
         [10.1513],
         [ 9.8693],
         ...,
         [11.1150],
         [ 9.9302],
         [10.1579]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9748, 0.9634, 0.9531,  ..., 0.9744, 0.9489, 0.9669],
        [0.9390, 0.9135, 0.9095,  ..., 0.9386, 0.9134, 0.9121],
        [0.9349, 0.9080, 0.9047,  ..., 0.9346, 0.9094, 0.9062],
        ...,
        [0.9299, 0.9014, 0.8988,  ..., 0.9296, 0.9046, 0.8991],
        [0.9428, 0.9186, 0.9140,  ..., 0.9425, 0.9172, 0.9177],
        [0.9515, 0.9305, 0.9244,  ..., 0.9512, 0.9257, 0.9306]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6662],
         [27.7392],
         [22.3083],
         ...,
         [19.3027],
         [23.0285],
         [23.7868]],
        [[14.1614],
         [15.3501],
         [14.5526],
         ...,
         [16.2121],
         [13.8094],
         [15.4773]],
        [[14.1001],
         [14.2659],
         [13.8030],
         ...,
         [15.8657],
         [12.9623],
         [14.6754]],
        ...,
        [[14.0244],
         [13.0261],
         [12.9261],
         ...,
         [15.4460],
         [11.9828],
         [13.7377]],
        [[14.2182],
         [16.4241],
         [15.2807],
         ...,
         [16.5386],
         [14.6405],
         [16.2564]],
        [[14.3443],
         [19.0673],
         [17.0189],
         ...,
         [17.2827],
         [16.6558],
         [18.1173]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 1.1746, 1.0863,  ..., 1.0374, 1.0980, 1.1103],
        [0.9538, 0.9731, 0.9601,  ..., 0.9871, 0.9481, 0.9752],
        [0.9528, 0.9555, 0.9480,  ..., 0.9815, 0.9343, 0.9621],
        ...,
        [0.9516, 0.9353, 0.9337,  ..., 0.9747, 0.9183, 0.9469],
        [0.9547, 0.9906, 0.9720,  ..., 0.9924, 0.9616, 0.9879],
        [0.9568, 1.0336, 1.0003,  ..., 1.0045, 0.9944, 1.0181]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3175],
         [27.7610],
         [24.6783],
         ...,
         [12.0125],
         [27.5878],
         [24.0109]],
        [[ 9.6573],
         [26.9376],
         [23.1036],
         ...,
         [ 9.8742],
         [25.8405],
         [20.9978]],
        [[ 9.3707],
         [26.8374],
         [22.9158],
         ...,
         [ 9.6375],
         [25.6320],
         [20.6521]],
        ...,
        [[ 9.0269],
         [26.7135],
         [22.6848],
         ...,
         [ 9.3516],
         [25.3757],
         [20.2310]],
        [[ 9.9296],
         [27.0305],
         [23.2783],
         ...,
         [10.0979],
         [26.0344],
         [21.3220]],
        [[10.5580],
         [27.2365],
         [23.6687],
         ...,
         [10.6097],
         [26.4676],
         [22.0554]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9664, 1.1705, 1.1298,  ..., 0.9624, 1.1682, 1.1210],
        [0.9313, 1.1596, 1.1090,  ..., 0.9341, 1.1451, 1.0811],
        [0.9275, 1.1583, 1.1065,  ..., 0.9310, 1.1424, 1.0766],
        ...,
        [0.9229, 1.1567, 1.1034,  ..., 0.9272, 1.1390, 1.0710],
        [0.9349, 1.1609, 1.1113,  ..., 0.9371, 1.1477, 1.0854],
        [0.9432, 1.1636, 1.1164,  ..., 0.9439, 1.1534, 1.0951]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2209],
         [11.1701],
         [11.3013],
         ...,
         [12.3367],
         [12.2082],
         [11.0015]],
        [[10.5487],
         [ 9.4382],
         [ 9.2128],
         ...,
         [10.6922],
         [10.0832],
         [ 9.1719]],
        [[10.3583],
         [ 9.2434],
         [ 8.9828],
         ...,
         [10.5045],
         [ 9.8473],
         [ 8.9677]],
        ...,
        [[10.1267],
         [ 9.0072],
         [ 8.7051],
         ...,
         [10.2761],
         [ 9.5621],
         [ 8.7205]],
        [[10.7276],
         [ 9.6217],
         [ 9.4305],
         ...,
         [10.8684],
         [10.3060],
         [ 9.3645]],
        [[11.1331],
         [10.0393],
         [ 9.9292],
         ...,
         [11.2677],
         [10.8152],
         [ 9.8041]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9759, 0.9534, 0.9562,  ..., 0.9784, 0.9756, 0.9497],
        [0.9400, 0.9162, 0.9114,  ..., 0.9431, 0.9300, 0.9105],
        [0.9359, 0.9120, 0.9064,  ..., 0.9391, 0.9250, 0.9061],
        ...,
        [0.9310, 0.9070, 0.9005,  ..., 0.9342, 0.9189, 0.9008],
        [0.9439, 0.9201, 0.9160,  ..., 0.9469, 0.9348, 0.9146],
        [0.9526, 0.9291, 0.9267,  ..., 0.9554, 0.9457, 0.9241]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6327],
         [26.5368],
         [22.9521],
         ...,
         [17.1684],
         [21.6827],
         [24.2562]],
        [[14.1677],
         [15.7951],
         [14.5057],
         ...,
         [13.9435],
         [14.4736],
         [15.0370]],
        [[14.1112],
         [14.8125],
         [13.7047],
         ...,
         [13.5889],
         [13.7673],
         [14.1728]],
        ...,
        [[14.0413],
         [13.6775],
         [12.7718],
         ...,
         [13.1614],
         [12.9383],
         [13.1689]],
        [[14.2201],
         [16.7600],
         [15.2867],
         ...,
         [14.2790],
         [15.1579],
         [15.8816]],
        [[14.3363],
         [19.1029],
         [17.1622],
         ...,
         [15.0482],
         [16.7844],
         [17.9170]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9757, 1.1693, 1.1110,  ..., 1.0169, 1.0904, 1.1322],
        [0.9681, 0.9946, 0.9736,  ..., 0.9645, 0.9731, 0.9823],
        [0.9672, 0.9786, 0.9606,  ..., 0.9587, 0.9616, 0.9682],
        ...,
        [0.9661, 0.9602, 0.9454,  ..., 0.9518, 0.9481, 0.9519],
        [0.9690, 1.0103, 0.9863,  ..., 0.9700, 0.9842, 0.9960],
        [0.9709, 1.0484, 1.0168,  ..., 0.9825, 1.0107, 1.0291]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4977],
         [28.6710],
         [24.9142],
         ...,
         [12.4059],
         [27.6863],
         [24.2790]],
        [[ 9.5641],
         [27.3584],
         [23.2497],
         ...,
         [ 9.6104],
         [26.8177],
         [20.0047]],
        [[ 9.2525],
         [27.2002],
         [23.0515],
         ...,
         [ 9.3114],
         [26.7121],
         [19.5308]],
        ...,
        [[ 8.8799],
         [27.0051],
         [22.8079],
         ...,
         [ 8.9532],
         [26.5816],
         [18.9583]],
        [[ 9.8610],
         [27.5054],
         [23.4341],
         ...,
         [ 9.8949],
         [26.9156],
         [20.4523]],
        [[10.5493],
         [27.8323],
         [23.8464],
         ...,
         [10.5530],
         [27.1328],
         [21.4759]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9713, 1.1850, 1.1354,  ..., 0.9701, 1.1720, 1.1270],
        [0.9325, 1.1677, 1.1134,  ..., 0.9331, 1.1605, 1.0705],
        [0.9284, 1.1656, 1.1107,  ..., 0.9292, 1.1591, 1.0642],
        ...,
        [0.9235, 1.1630, 1.1075,  ..., 0.9244, 1.1574, 1.0567],
        [0.9364, 1.1696, 1.1158,  ..., 0.9369, 1.1618, 1.0764],
        [0.9455, 1.1739, 1.1213,  ..., 0.9456, 1.1647, 1.0899]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2402],
         [11.0546],
         [11.6501],
         ...,
         [12.4229],
         [13.9006],
         [11.0520]],
        [[10.5674],
         [ 9.7262],
         [ 9.2635],
         ...,
         [10.8244],
         [11.2257],
         [ 9.6789]],
        [[10.3769],
         [ 9.5732],
         [ 9.0044],
         ...,
         [10.6414],
         [10.9326],
         [ 9.5213]],
        ...,
        [[10.1452],
         [ 9.3868],
         [ 8.6927],
         ...,
         [10.4185],
         [10.5794],
         [ 9.3292]],
        [[10.7464],
         [ 9.8695],
         [ 9.5094],
         ...,
         [10.9961],
         [11.5033],
         [ 9.8268]],
        [[11.1521],
         [10.1934],
         [10.0753],
         ...,
         [11.3848],
         [12.1403],
         [10.1611]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9848, 0.9594, 0.9721,  ..., 0.9887, 1.0204, 0.9593],
        [0.9489, 0.9309, 0.9210,  ..., 0.9544, 0.9630, 0.9299],
        [0.9448, 0.9276, 0.9154,  ..., 0.9505, 0.9567, 0.9265],
        ...,
        [0.9399, 0.9236, 0.9087,  ..., 0.9457, 0.9492, 0.9224],
        [0.9528, 0.9340, 0.9262,  ..., 0.9581, 0.9690, 0.9330],
        [0.9615, 0.9409, 0.9384,  ..., 0.9664, 0.9826, 0.9402]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5374],
         [21.4145],
         [23.7542],
         ...,
         [15.9189],
         [20.6302],
         [24.6831]],
        [[14.1258],
         [16.7174],
         [14.5069],
         ...,
         [12.2689],
         [15.8152],
         [14.5625]],
        [[14.0757],
         [16.2128],
         [13.6478],
         ...,
         [11.8797],
         [15.3034],
         [13.6417]],
        ...,
        [[14.0137],
         [15.6076],
         [12.6520],
         ...,
         [11.4137],
         [14.6910],
         [12.5793]],
        [[14.1723],
         [17.1973],
         [15.3480],
         ...,
         [12.6396],
         [16.3030],
         [15.4677]],
        [[14.2753],
         [18.3055],
         [17.3805],
         ...,
         [13.4976],
         [17.4332],
         [17.6693]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9660, 1.0778, 1.1159,  ..., 0.9884, 1.0651, 1.1310],
        [0.9593, 1.0014, 0.9655,  ..., 0.9291, 0.9867, 0.9664],
        [0.9584, 0.9932, 0.9515,  ..., 0.9227, 0.9784, 0.9514],
        ...,
        [0.9574, 0.9834, 0.9353,  ..., 0.9152, 0.9685, 0.9341],
        [0.9600, 1.0092, 0.9791,  ..., 0.9351, 0.9947, 0.9811],
        [0.9617, 1.0272, 1.0122,  ..., 0.9490, 1.0131, 1.0169]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3864],
         [28.0732],
         [24.7670],
         ...,
         [12.1573],
         [27.5422],
         [24.0887]],
        [[ 9.6205],
         [27.1310],
         [23.1609],
         ...,
         [ 9.7684],
         [26.2487],
         [20.5998]],
        [[ 9.3242],
         [27.0166],
         [22.9695],
         ...,
         [ 9.5074],
         [26.0929],
         [20.2047]],
        ...,
        [[ 8.9691],
         [26.8752],
         [22.7341],
         ...,
         [ 9.1931],
         [25.9008],
         [19.7248]],
        [[ 9.9024],
         [27.2370],
         [23.3391],
         ...,
         [10.0157],
         [26.3934],
         [20.9715]],
        [[10.5540],
         [27.4726],
         [23.7370],
         ...,
         [10.5838],
         [26.7155],
         [21.8155]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9683, 1.1756, 1.1319,  ..., 0.9653, 1.1686, 1.1229],
        [0.9317, 1.1631, 1.1107,  ..., 0.9337, 1.1515, 1.0768],
        [0.9278, 1.1616, 1.1081,  ..., 0.9302, 1.1494, 1.0716],
        ...,
        [0.9231, 1.1598, 1.1050,  ..., 0.9261, 1.1469, 1.0653],
        [0.9355, 1.1645, 1.1130,  ..., 0.9370, 1.1534, 1.0817],
        [0.9441, 1.1677, 1.1183,  ..., 0.9445, 1.1577, 1.0929]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2285],
         [11.0461],
         [11.4008],
         ...,
         [12.3678],
         [12.8840],
         [10.7628]],
        [[10.5558],
         [ 9.5225],
         [ 9.2291],
         ...,
         [10.7403],
         [10.5324],
         [ 9.2808]],
        [[10.3654],
         [ 9.3491],
         [ 8.9908],
         ...,
         [10.5544],
         [10.2729],
         [ 9.1121]],
        ...,
        [[10.1337],
         [ 9.1383],
         [ 8.7036],
         ...,
         [10.3280],
         [ 9.9596],
         [ 8.9070]],
        [[10.7348],
         [ 9.6854],
         [ 9.4547],
         ...,
         [10.9149],
         [10.7778],
         [ 9.4392]],
        [[11.1405],
         [10.0548],
         [ 9.9723],
         ...,
         [11.3103],
         [11.3397],
         [ 9.7986]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9784, 0.9530, 0.9606,  ..., 0.9814, 0.9925, 0.9470],
        [0.9425, 0.9204, 0.9141,  ..., 0.9465, 0.9420, 0.9152],
        [0.9384, 0.9167, 0.9090,  ..., 0.9425, 0.9365, 0.9116],
        ...,
        [0.9335, 0.9121, 0.9028,  ..., 0.9376, 0.9297, 0.9072],
        [0.9464, 0.9239, 0.9189,  ..., 0.9502, 0.9473, 0.9186],
        [0.9551, 0.9318, 0.9300,  ..., 0.9587, 0.9593, 0.9263]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5951],
         [24.5623],
         [23.2689],
         ...,
         [16.5628],
         [21.1157],
         [24.4340]],
        [[14.1513],
         [16.1857],
         [14.5054],
         ...,
         [13.2286],
         [14.9551],
         [14.8385]],
        [[14.0974],
         [15.3713],
         [13.6811],
         ...,
         [12.8656],
         [14.3299],
         [13.9501]],
        ...,
        [[14.0306],
         [14.4171],
         [12.7229],
         ...,
         [12.4289],
         [13.5902],
         [12.9210]],
        [[14.2014],
         [16.9759],
         [15.3104],
         ...,
         [13.5729],
         [15.5565],
         [15.7088]],
        [[14.3124],
         [18.8589],
         [17.2484],
         ...,
         [14.3645],
         [16.9705],
         [17.8144]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9733, 1.1354, 1.1144,  ..., 1.0053, 1.0793, 1.1333],
        [0.9661, 0.9992, 0.9718,  ..., 0.9511, 0.9791, 0.9773],
        [0.9652, 0.9859, 0.9584,  ..., 0.9452, 0.9690, 0.9628],
        ...,
        [0.9641, 0.9704, 0.9428,  ..., 0.9381, 0.9569, 0.9461],
        [0.9669, 1.0120, 0.9849,  ..., 0.9567, 0.9889, 0.9914],
        [0.9687, 1.0426, 1.0164,  ..., 0.9695, 1.0119, 1.0257]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9468],
         [26.7589],
         [25.2216],
         ...,
         [11.9435],
         [27.0721],
         [24.6881]],
        [[ 9.3680],
         [24.7798],
         [23.7395],
         ...,
         [ 9.8875],
         [25.4852],
         [21.5935]],
        [[ 9.0002],
         [24.5452],
         [23.5622],
         ...,
         [ 9.6589],
         [25.2953],
         [21.2385]],
        ...,
        [[ 8.5637],
         [24.2571],
         [23.3440],
         ...,
         [ 9.3826],
         [25.0616],
         [20.8059]],
        [[ 9.7209],
         [24.9983],
         [23.9044],
         ...,
         [10.1033],
         [25.6617],
         [21.9266]],
        [[10.5473],
         [25.4875],
         [24.2723],
         ...,
         [10.5963],
         [26.0556],
         [22.6798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9785, 1.1611, 1.1407,  ..., 0.9653, 1.1652, 1.1337],
        [0.9312, 1.1349, 1.1212,  ..., 0.9381, 1.1442, 1.0928],
        [0.9264, 1.1318, 1.1188,  ..., 0.9351, 1.1417, 1.0881],
        ...,
        [0.9206, 1.1280, 1.1159,  ..., 0.9314, 1.1386, 1.0824],
        [0.9359, 1.1378, 1.1233,  ..., 0.9409, 1.1466, 1.0972],
        [0.9468, 1.1443, 1.1282,  ..., 0.9475, 1.1518, 1.1071]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2618],
         [10.7854],
         [11.3401],
         ...,
         [12.2721],
         [13.2145],
         [11.0037]],
        [[10.5908],
         [ 9.3548],
         [ 9.2395],
         ...,
         [10.6030],
         [10.7400],
         [ 9.6321]],
        [[10.4004],
         [ 9.1914],
         [ 9.0081],
         ...,
         [10.4128],
         [10.4679],
         [ 9.4746]],
        ...,
        [[10.1689],
         [ 8.9927],
         [ 8.7290],
         ...,
         [10.1815],
         [10.1396],
         [ 9.2828]],
        [[10.7696],
         [ 9.5082],
         [ 9.4584],
         ...,
         [10.7816],
         [10.9976],
         [ 9.7797]],
        [[11.1749],
         [ 9.8556],
         [ 9.9599],
         ...,
         [11.1865],
         [11.5879],
         [10.1137]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9858, 0.9541, 0.9660,  ..., 0.9860, 1.0062, 0.9588],
        [0.9500, 0.9234, 0.9210,  ..., 0.9502, 0.9532, 0.9294],
        [0.9459, 0.9199, 0.9160,  ..., 0.9461, 0.9473, 0.9260],
        ...,
        [0.9409, 0.9157, 0.9100,  ..., 0.9412, 0.9403, 0.9219],
        [0.9538, 0.9267, 0.9257,  ..., 0.9540, 0.9587, 0.9326],
        [0.9625, 0.9342, 0.9364,  ..., 0.9627, 0.9713, 0.9397]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5679],
         [21.8234],
         [23.6150],
         ...,
         [16.5946],
         [20.8035],
         [24.4357]],
        [[14.1932],
         [16.0967],
         [14.6008],
         ...,
         [13.6030],
         [15.6018],
         [14.6441]],
        [[14.1475],
         [15.5015],
         [13.7571],
         ...,
         [13.2723],
         [15.0559],
         [13.7447]],
        ...,
        [[14.0909],
         [14.7933],
         [12.7775],
         ...,
         [12.8731],
         [14.4048],
         [12.7049]],
        [[14.2355],
         [16.6665],
         [15.4255],
         ...,
         [13.9156],
         [16.1234],
         [15.5266]],
        [[14.3294],
         [17.9962],
         [17.4141],
         ...,
         [14.6310],
         [17.3369],
         [17.6666]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9693, 1.0873, 1.1164,  ..., 1.0023, 1.0707, 1.1298],
        [0.9632, 0.9942, 0.9698,  ..., 0.9536, 0.9861, 0.9705],
        [0.9625, 0.9845, 0.9561,  ..., 0.9482, 0.9772, 0.9559],
        ...,
        [0.9615, 0.9730, 0.9402,  ..., 0.9417, 0.9666, 0.9390],
        [0.9639, 1.0034, 0.9832,  ..., 0.9587, 0.9946, 0.9849],
        [0.9654, 1.0251, 1.0156,  ..., 0.9703, 1.0143, 1.0197]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4812],
         [27.7665],
         [24.8444],
         ...,
         [12.1171],
         [27.4260],
         [24.1885]],
        [[ 9.5722],
         [26.6963],
         [23.2657],
         ...,
         [ 9.7896],
         [26.1250],
         [20.7773]],
        [[ 9.2629],
         [26.5667],
         [23.0774],
         ...,
         [ 9.5345],
         [25.9682],
         [20.3899]],
        ...,
        [[ 8.8928],
         [26.4068],
         [22.8458],
         ...,
         [ 9.2271],
         [25.7751],
         [19.9192]],
        [[ 9.8670],
         [26.8165],
         [23.4409],
         ...,
         [10.0312],
         [26.2705],
         [21.1414]],
        [[10.5499],
         [27.0836],
         [23.8323],
         ...,
         [10.5855],
         [26.5944],
         [21.9676]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9700, 1.1721, 1.1334,  ..., 0.9652, 1.1676, 1.1248],
        [0.9316, 1.1579, 1.1126,  ..., 0.9345, 1.1504, 1.0797],
        [0.9275, 1.1562, 1.1101,  ..., 0.9311, 1.1483, 1.0746],
        ...,
        [0.9226, 1.1541, 1.1070,  ..., 0.9270, 1.1457, 1.0683],
        [0.9355, 1.1595, 1.1149,  ..., 0.9377, 1.1523, 1.0845],
        [0.9445, 1.1630, 1.1201,  ..., 0.9450, 1.1566, 1.0954]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2347],
         [10.9806],
         [11.3835],
         ...,
         [12.3497],
         [12.9547],
         [10.7504]],
        [[10.5619],
         [ 9.4888],
         [ 9.2283],
         ...,
         [10.7121],
         [10.5735],
         [ 9.3287]],
        [[10.3714],
         [ 9.3189],
         [ 8.9917],
         ...,
         [10.5252],
         [10.3110],
         [ 9.1663]],
        ...,
        [[10.1397],
         [ 9.1121],
         [ 8.7063],
         ...,
         [10.2976],
         [ 9.9942],
         [ 8.9687]],
        [[10.7409],
         [ 9.6485],
         [ 9.4524],
         ...,
         [10.8877],
         [10.8218],
         [ 9.4812]],
        [[11.1466],
         [10.0104],
         [ 9.9662],
         ...,
         [11.2854],
         [11.3906],
         [ 9.8265]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9795, 0.9526, 0.9613,  ..., 0.9820, 0.9950, 0.9477],
        [0.9437, 0.9206, 0.9151,  ..., 0.9469, 0.9439, 0.9172],
        [0.9396, 0.9170, 0.9100,  ..., 0.9429, 0.9383, 0.9137],
        ...,
        [0.9346, 0.9126, 0.9039,  ..., 0.9380, 0.9315, 0.9095],
        [0.9475, 0.9241, 0.9199,  ..., 0.9506, 0.9492, 0.9205],
        [0.9562, 0.9318, 0.9309,  ..., 0.9592, 0.9614, 0.9279]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5898],
         [24.0578],
         [23.3331],
         ...,
         [16.5641],
         [21.0429],
         [24.4356]],
        [[14.1590],
         [16.1920],
         [14.5229],
         ...,
         [13.2951],
         [15.0677],
         [14.8022]],
        [[14.1065],
         [15.4175],
         [13.6950],
         ...,
         [12.9382],
         [14.4574],
         [13.9116]],
        ...,
        [[14.0417],
         [14.5076],
         [12.7327],
         ...,
         [12.5084],
         [13.7342],
         [12.8803]],
        [[14.2076],
         [16.9416],
         [15.3315],
         ...,
         [13.6334],
         [15.6540],
         [15.6749]],
        [[14.3154],
         [18.7206],
         [17.2790],
         ...,
         [14.4106],
         [17.0298],
         [17.7872]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9727, 1.1267, 1.1149,  ..., 1.0049, 1.0777, 1.1329],
        [0.9657, 0.9988, 0.9717,  ..., 0.9517, 0.9805, 0.9762],
        [0.9649, 0.9862, 0.9582,  ..., 0.9459, 0.9706, 0.9617],
        ...,
        [0.9638, 0.9714, 0.9425,  ..., 0.9389, 0.9588, 0.9449],
        [0.9665, 1.0110, 0.9848,  ..., 0.9572, 0.9901, 0.9904],
        [0.9683, 1.0399, 1.0165,  ..., 0.9698, 1.0124, 1.0247]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2021],
         [26.7166],
         [25.1607],
         ...,
         [11.7903],
         [26.9129],
         [24.9748]],
        [[ 9.2745],
         [24.5237],
         [23.7890],
         ...,
         [10.0003],
         [24.8568],
         [22.9081]],
        [[ 8.8779],
         [24.2651],
         [23.6244],
         ...,
         [ 9.7985],
         [24.6134],
         [22.6645]],
        ...,
        [[ 8.4090],
         [23.9479],
         [23.4218],
         ...,
         [ 9.5537],
         [24.3147],
         [22.3657]],
        [[ 9.6564],
         [24.7649],
         [23.9419],
         ...,
         [10.1903],
         [25.0836],
         [23.1354]],
        [[10.5558],
         [25.3056],
         [24.2828],
         ...,
         [10.6224],
         [25.5914],
         [23.6449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9794, 1.1580, 1.1374,  ..., 0.9607, 1.1606, 1.1350],
        [0.9275, 1.1290, 1.1193,  ..., 0.9371, 1.1334, 1.1076],
        [0.9222, 1.1256, 1.1171,  ..., 0.9344, 1.1302, 1.1044],
        ...,
        [0.9160, 1.1214, 1.1144,  ..., 0.9312, 1.1262, 1.1005],
        [0.9325, 1.1322, 1.1213,  ..., 0.9396, 1.1364, 1.1106],
        [0.9444, 1.1393, 1.1258,  ..., 0.9453, 1.1431, 1.1174]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2767],
         [11.0480],
         [11.0642],
         ...,
         [12.3118],
         [12.1898],
         [10.7682]],
        [[10.6086],
         [ 9.2864],
         [ 9.2060],
         ...,
         [10.6554],
         [ 9.9977],
         [ 9.2722]],
        [[10.4185],
         [ 9.0889],
         [ 8.9988],
         ...,
         [10.4665],
         [ 9.7553],
         [ 9.1021]],
        ...,
        [[10.1873],
         [ 8.8495],
         [ 8.7482],
         ...,
         [10.2367],
         [ 9.4627],
         [ 8.8953]],
        [[10.7871],
         [ 9.4726],
         [ 9.4015],
         ...,
         [10.8328],
         [10.2268],
         [ 9.4321]],
        [[11.1918],
         [ 9.8968],
         [ 9.8477],
         ...,
         [11.2348],
         [10.7511],
         [ 9.7947]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9804, 0.9540, 0.9544,  ..., 0.9811, 0.9785, 0.9480],
        [0.9446, 0.9162, 0.9145,  ..., 0.9456, 0.9315, 0.9159],
        [0.9405, 0.9120, 0.9101,  ..., 0.9415, 0.9263, 0.9123],
        ...,
        [0.9356, 0.9069, 0.9047,  ..., 0.9366, 0.9200, 0.9079],
        [0.9484, 0.9202, 0.9187,  ..., 0.9494, 0.9364, 0.9194],
        [0.9571, 0.9293, 0.9283,  ..., 0.9580, 0.9477, 0.9271]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6027],
         [25.1642],
         [23.0980],
         ...,
         [18.2656],
         [21.6551],
         [24.1157]],
        [[14.1592],
         [15.6482],
         [14.6283],
         ...,
         [15.3572],
         [14.7670],
         [14.9428]],
        [[14.1052],
         [14.7545],
         [13.8241],
         ...,
         [15.0311],
         [14.0835],
         [14.0832]],
        ...,
        [[14.0385],
         [13.7159],
         [12.8871],
         ...,
         [14.6358],
         [13.2790],
         [13.0846]],
        [[14.2092],
         [16.5213],
         [15.4123],
         ...,
         [15.6647],
         [15.4275],
         [15.7829]],
        [[14.3201],
         [18.6241],
         [17.2940],
         ...,
         [16.3650],
         [16.9913],
         [17.8078]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9769, 1.1486, 1.1150,  ..., 1.0364, 1.0916, 1.1316],
        [0.9697, 0.9939, 0.9773,  ..., 0.9891, 0.9795, 0.9824],
        [0.9688, 0.9793, 0.9642,  ..., 0.9838, 0.9684, 0.9684],
        ...,
        [0.9677, 0.9624, 0.9490,  ..., 0.9774, 0.9553, 0.9522],
        [0.9705, 1.0081, 0.9900,  ..., 0.9941, 0.9903, 0.9961],
        [0.9723, 1.0423, 1.0206,  ..., 1.0055, 1.0157, 1.0290]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9381],
         [26.6822],
         [25.1580],
         ...,
         [11.8945],
         [26.8582],
         [25.0724]],
        [[ 9.3714],
         [24.5109],
         [23.7097],
         ...,
         [ 9.9222],
         [24.8298],
         [22.9743]],
        [[ 9.0046],
         [24.2547],
         [23.5363],
         ...,
         [ 9.7020],
         [24.5897],
         [22.7271]],
        ...,
        [[ 8.5693],
         [23.9404],
         [23.3228],
         ...,
         [ 9.4354],
         [24.2948],
         [22.4240]],
        [[ 9.7233],
         [24.7498],
         [23.8709],
         ...,
         [10.1299],
         [25.0537],
         [23.2049]],
        [[10.5472],
         [25.2853],
         [24.2305],
         ...,
         [10.6038],
         [25.5548],
         [23.7220]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9771, 1.1587, 1.1385,  ..., 0.9633, 1.1610, 1.1374],
        [0.9299, 1.1300, 1.1194,  ..., 0.9372, 1.1342, 1.1097],
        [0.9251, 1.1266, 1.1171,  ..., 0.9343, 1.1310, 1.1064],
        ...,
        [0.9193, 1.1225, 1.1143,  ..., 0.9308, 1.1271, 1.1024],
        [0.9346, 1.1332, 1.1215,  ..., 0.9399, 1.1372, 1.1127],
        [0.9455, 1.1402, 1.1263,  ..., 0.9462, 1.1438, 1.1196]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2584],
         [10.9837],
         [11.0741],
         ...,
         [12.4537],
         [12.2596],
         [10.7548]],
        [[10.5870],
         [ 9.2919],
         [ 9.2086],
         ...,
         [10.8679],
         [10.0401],
         [ 9.3114]],
        [[10.3966],
         [ 9.1015],
         [ 9.0007],
         ...,
         [10.6862],
         [ 9.7949],
         [ 9.1467]],
        ...,
        [[10.1651],
         [ 8.8705],
         [ 8.7492],
         ...,
         [10.4649],
         [ 9.4989],
         [ 8.9464]],
        [[10.7658],
         [ 9.4712],
         [ 9.4048],
         ...,
         [11.0384],
         [10.2719],
         [ 9.4660]],
        [[11.1713],
         [ 9.8793],
         [ 9.8526],
         ...,
         [11.4242],
         [10.8025],
         [ 9.8164]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9813, 0.9539, 0.9559,  ..., 0.9854, 0.9813, 0.9490],
        [0.9454, 0.9176, 0.9159,  ..., 0.9514, 0.9337, 0.9181],
        [0.9413, 0.9136, 0.9114,  ..., 0.9475, 0.9284, 0.9145],
        ...,
        [0.9364, 0.9086, 0.9060,  ..., 0.9428, 0.9221, 0.9102],
        [0.9493, 0.9215, 0.9201,  ..., 0.9551, 0.9387, 0.9214],
        [0.9579, 0.9302, 0.9297,  ..., 0.9634, 0.9500, 0.9289]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5172],
         [24.5247],
         [23.1611],
         ...,
         [18.3884],
         [21.5928],
         [24.1215]],
        [[14.0796],
         [15.6617],
         [14.6204],
         ...,
         [15.5574],
         [14.8902],
         [14.8688]],
        [[14.0263],
         [14.8159],
         [13.8111],
         ...,
         [15.2387],
         [14.2206],
         [14.0044]],
        ...,
        [[13.9605],
         [13.8294],
         [12.8685],
         ...,
         [14.8523],
         [13.4313],
         [13.0010]],
        [[14.1289],
         [16.4853],
         [15.4097],
         ...,
         [15.8575],
         [15.5363],
         [15.7141]],
        [[14.2384],
         [18.4593],
         [17.3054],
         ...,
         [16.5404],
         [17.0629],
         [17.7535]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9746, 1.1373, 1.1152,  ..., 1.0375, 1.0897, 1.1308],
        [0.9675, 0.9932, 0.9763,  ..., 0.9915, 0.9806, 0.9803],
        [0.9666, 0.9794, 0.9631,  ..., 0.9863, 0.9697, 0.9662],
        ...,
        [0.9655, 0.9634, 0.9478,  ..., 0.9800, 0.9569, 0.9499],
        [0.9683, 1.0066, 0.9891,  ..., 0.9964, 0.9911, 0.9940],
        [0.9700, 1.0387, 1.0199,  ..., 1.0075, 1.0160, 1.0272]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9159],
         [26.7243],
         [25.1527],
         ...,
         [11.9299],
         [26.8344],
         [25.1054]],
        [[ 9.3801],
         [24.6476],
         [23.6902],
         ...,
         [ 9.8969],
         [24.7857],
         [23.0449]],
        [[ 9.0160],
         [24.4021],
         [23.5151],
         ...,
         [ 9.6707],
         [24.5432],
         [22.8019]],
        ...,
        [[ 8.5836],
         [24.1006],
         [23.2997],
         ...,
         [ 9.3970],
         [24.2455],
         [22.5039]],
        [[ 9.7294],
         [24.8766],
         [23.8529],
         ...,
         [10.1105],
         [25.0117],
         [23.2716]],
        [[10.5467],
         [25.3893],
         [24.2160],
         ...,
         [10.5983],
         [25.5177],
         [23.7796]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9775, 1.1600, 1.1392,  ..., 0.9645, 1.1615, 1.1386],
        [0.9308, 1.1326, 1.1199,  ..., 0.9376, 1.1344, 1.1114],
        [0.9260, 1.1293, 1.1176,  ..., 0.9346, 1.1312, 1.1082],
        ...,
        [0.9203, 1.1253, 1.1148,  ..., 0.9310, 1.1273, 1.1042],
        [0.9354, 1.1356, 1.1221,  ..., 0.9405, 1.1374, 1.1144],
        [0.9462, 1.1424, 1.1269,  ..., 0.9469, 1.1441, 1.1211]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2609],
         [11.0013],
         [11.0570],
         ...,
         [12.4752],
         [12.1241],
         [10.7667]],
        [[10.5898],
         [ 9.2987],
         [ 9.2062],
         ...,
         [10.8965],
         [ 9.9461],
         [ 9.2791]],
        [[10.3995],
         [ 9.1072],
         [ 8.9998],
         ...,
         [10.7156],
         [ 9.7053],
         [ 9.1098]],
        ...,
        [[10.1680],
         [ 8.8749],
         [ 8.7501],
         ...,
         [10.4951],
         [ 9.4144],
         [ 8.9041]],
        [[10.7686],
         [ 9.4791],
         [ 9.4010],
         ...,
         [11.0663],
         [10.1738],
         [ 9.4381]],
        [[11.1740],
         [ 9.8897],
         [ 9.8455],
         ...,
         [11.4505],
         [10.6947],
         [ 9.7988]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9812, 0.9542, 0.9554,  ..., 0.9858, 0.9783, 0.9492],
        [0.9454, 0.9177, 0.9157,  ..., 0.9520, 0.9316, 0.9173],
        [0.9413, 0.9136, 0.9113,  ..., 0.9481, 0.9264, 0.9136],
        ...,
        [0.9363, 0.9086, 0.9059,  ..., 0.9433, 0.9202, 0.9092],
        [0.9492, 0.9216, 0.9199,  ..., 0.9556, 0.9365, 0.9207],
        [0.9579, 0.9304, 0.9294,  ..., 0.9638, 0.9476, 0.9284]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5716],
         [24.7429],
         [23.1210],
         ...,
         [18.5726],
         [21.7408],
         [24.0781]],
        [[14.1344],
         [15.6189],
         [14.6250],
         ...,
         [15.7226],
         [14.8298],
         [14.8825]],
        [[14.0812],
         [14.7542],
         [13.8189],
         ...,
         [15.4017],
         [14.1439],
         [14.0221]],
        ...,
        [[14.0154],
         [13.7473],
         [12.8799],
         ...,
         [15.0125],
         [13.3365],
         [13.0229]],
        [[14.1837],
         [16.4620],
         [15.4110],
         ...,
         [16.0248],
         [15.4925],
         [15.7238]],
        [[14.2931],
         [18.4872],
         [17.2979],
         ...,
         [16.7124],
         [17.0617],
         [17.7521]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9760, 1.1414, 1.1150,  ..., 1.0410, 1.0926, 1.1306],
        [0.9689, 0.9930, 0.9768,  ..., 0.9947, 0.9802, 0.9810],
        [0.9680, 0.9789, 0.9637,  ..., 0.9895, 0.9690, 0.9670],
        ...,
        [0.9669, 0.9626, 0.9485,  ..., 0.9831, 0.9559, 0.9508],
        [0.9697, 1.0067, 0.9896,  ..., 0.9996, 0.9909, 0.9947],
        [0.9714, 1.0397, 1.0203,  ..., 1.0108, 1.0165, 1.0277]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0041],
         [26.7169],
         [25.1794],
         ...,
         [11.9283],
         [26.7936],
         [25.1212]],
        [[ 9.3460],
         [24.6483],
         [23.7120],
         ...,
         [ 9.8981],
         [24.7045],
         [23.0656]],
        [[ 8.9716],
         [24.4037],
         [23.5364],
         ...,
         [ 9.6721],
         [24.4575],
         [22.8232]],
        ...,
        [[ 8.5276],
         [24.1034],
         [23.3202],
         ...,
         [ 9.3988],
         [24.1543],
         [22.5258]],
        [[ 9.7056],
         [24.8764],
         [23.8752],
         ...,
         [10.1114],
         [24.9348],
         [23.2918]],
        [[10.5487],
         [25.3872],
         [24.2395],
         ...,
         [10.5985],
         [25.4505],
         [23.7986]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9786, 1.1598, 1.1395,  ..., 0.9644, 1.1608, 1.1387],
        [0.9303, 1.1325, 1.1201,  ..., 0.9376, 1.1332, 1.1116],
        [0.9253, 1.1293, 1.1178,  ..., 0.9346, 1.1300, 1.1084],
        ...,
        [0.9194, 1.1253, 1.1149,  ..., 0.9310, 1.1260, 1.1044],
        [0.9350, 1.1355, 1.1223,  ..., 0.9404, 1.1363, 1.1146],
        [0.9462, 1.1422, 1.1271,  ..., 0.9468, 1.1431, 1.1213]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2641],
         [11.0125],
         [11.0426],
         ...,
         [12.4289],
         [12.0130],
         [10.7833]],
        [[10.5935],
         [ 9.2978],
         [ 9.2060],
         ...,
         [10.8331],
         [ 9.8686],
         [ 9.2586]],
        [[10.4032],
         [ 9.1050],
         [ 9.0010],
         ...,
         [10.6503],
         [ 9.6313],
         [ 9.0855]],
        ...,
        [[10.1717],
         [ 8.8712],
         [ 8.7530],
         ...,
         [10.4278],
         [ 9.3447],
         [ 8.8752]],
        [[10.7723],
         [ 9.4794],
         [ 9.3994],
         ...,
         [11.0046],
         [10.0929],
         [ 9.4213]],
        [[11.1775],
         [ 9.8927],
         [ 9.8406],
         ...,
         [11.3926],
         [10.6060],
         [ 9.7906]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9815, 0.9547, 0.9553,  ..., 0.9851, 0.9761, 0.9498],
        [0.9457, 0.9179, 0.9159,  ..., 0.9508, 0.9302, 0.9171],
        [0.9416, 0.9138, 0.9116,  ..., 0.9469, 0.9251, 0.9134],
        ...,
        [0.9367, 0.9088, 0.9062,  ..., 0.9421, 0.9189, 0.9089],
        [0.9495, 0.9218, 0.9201,  ..., 0.9545, 0.9350, 0.9206],
        [0.9582, 0.9307, 0.9296,  ..., 0.9628, 0.9460, 0.9285]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.6387],
         [24.8149],
         [23.1075],
         ...,
         [18.5678],
         [21.8581],
         [24.0365]],
        [[14.2018],
         [15.5699],
         [14.6375],
         ...,
         [15.7198],
         [14.8008],
         [14.8893]],
        [[14.1487],
         [14.6969],
         [13.8331],
         ...,
         [15.3991],
         [14.1034],
         [14.0322]],
        ...,
        [[14.0829],
         [13.6812],
         [12.8960],
         ...,
         [15.0101],
         [13.2834],
         [13.0367]],
        [[14.2511],
         [16.4217],
         [15.4215],
         ...,
         [16.0218],
         [15.4753],
         [15.7270]],
        [[14.3604],
         [18.4701],
         [17.3035],
         ...,
         [16.7089],
         [17.0742],
         [17.7460]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9774, 1.1429, 1.1152,  ..., 1.0413, 1.0948, 1.1303],
        [0.9703, 0.9926, 0.9774,  ..., 0.9950, 0.9801, 0.9815],
        [0.9695, 0.9784, 0.9643,  ..., 0.9898, 0.9687, 0.9676],
        ...,
        [0.9684, 0.9619, 0.9491,  ..., 0.9835, 0.9554, 0.9514],
        [0.9711, 1.0064, 0.9902,  ..., 0.9999, 0.9910, 0.9951],
        [0.9729, 1.0397, 1.0208,  ..., 1.0111, 1.0170, 1.0280]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0607],
         [26.6512],
         [25.2526],
         ...,
         [11.9615],
         [26.6615],
         [25.2858]],
        [[ 9.3249],
         [24.5536],
         [23.7426],
         ...,
         [ 9.8750],
         [24.4534],
         [23.3123]],
        [[ 8.9440],
         [24.3057],
         [23.5621],
         ...,
         [ 9.6434],
         [24.1931],
         [23.0790]],
        ...,
        [[ 8.4928],
         [24.0015],
         [23.3399],
         ...,
         [ 9.3635],
         [23.8739],
         [22.7926]],
        [[ 9.6910],
         [24.7847],
         [23.9105],
         ...,
         [10.0937],
         [24.6962],
         [23.5298]],
        [[10.5504],
         [25.3024],
         [24.2852],
         ...,
         [10.5936],
         [25.2405],
         [24.0170]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1588, 1.1403,  ..., 0.9647, 1.1590, 1.1408],
        [0.9299, 1.1311, 1.1204,  ..., 0.9371, 1.1298, 1.1147],
        [0.9248, 1.1278, 1.1180,  ..., 0.9341, 1.1263, 1.1116],
        ...,
        [0.9189, 1.1238, 1.1151,  ..., 0.9304, 1.1221, 1.1078],
        [0.9347, 1.1342, 1.1226,  ..., 0.9400, 1.1330, 1.1176],
        [0.9460, 1.1410, 1.1276,  ..., 0.9466, 1.1402, 1.1240]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2464],
         [11.0278],
         [10.9985],
         ...,
         [12.3730],
         [11.7483],
         [10.8319]],
        [[10.5738],
         [ 9.2927],
         [ 9.2064],
         ...,
         [10.7485],
         [ 9.6835],
         [ 9.2279]],
        [[10.3833],
         [ 9.0979],
         [ 9.0059],
         ...,
         [10.5628],
         [ 9.4546],
         [ 9.0467]],
        ...,
        [[10.1517],
         [ 8.8617],
         [ 8.7631],
         ...,
         [10.3368],
         [ 9.1779],
         [ 8.8266]],
        [[10.7528],
         [ 9.4763],
         [ 9.3954],
         ...,
         [10.9228],
         [ 9.8998],
         [ 9.3985]],
        [[11.1585],
         [ 9.8944],
         [ 9.8265],
         ...,
         [11.3175],
         [10.3943],
         [ 9.7861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9822, 0.9561, 0.9555,  ..., 0.9849, 0.9715, 0.9519],
        [0.9464, 0.9189, 0.9170,  ..., 0.9501, 0.9273, 0.9175],
        [0.9423, 0.9147, 0.9127,  ..., 0.9461, 0.9224, 0.9136],
        ...,
        [0.9373, 0.9096, 0.9075,  ..., 0.9413, 0.9164, 0.9089],
        [0.9502, 0.9228, 0.9211,  ..., 0.9538, 0.9319, 0.9212],
        [0.9589, 0.9318, 0.9303,  ..., 0.9623, 0.9425, 0.9295]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.7234],
         [24.8082],
         [23.0784],
         ...,
         [18.7646],
         [22.1693],
         [23.9145]],
        [[14.2897],
         [15.4315],
         [14.6668],
         ...,
         [15.9142],
         [14.7603],
         [14.8837]],
        [[14.2370],
         [14.5507],
         [13.8664],
         ...,
         [15.5929],
         [14.0355],
         [14.0351]],
        ...,
        [[14.1717],
         [13.5271],
         [12.9335],
         ...,
         [15.2031],
         [13.1851],
         [13.0489]],
        [[14.3386],
         [16.2919],
         [15.4467],
         ...,
         [16.2167],
         [15.4627],
         [15.7126]],
        [[14.4472],
         [18.3642],
         [17.3174],
         ...,
         [16.9047],
         [17.1331],
         [17.7087]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9794, 1.1434, 1.1153,  ..., 1.0451, 1.1005, 1.1289],
        [0.9723, 0.9909, 0.9784,  ..., 0.9987, 0.9800, 0.9820],
        [0.9715, 0.9766, 0.9654,  ..., 0.9935, 0.9682, 0.9682],
        ...,
        [0.9704, 0.9599, 0.9503,  ..., 0.9872, 0.9543, 0.9521],
        [0.9731, 1.0049, 0.9911,  ..., 1.0037, 0.9914, 0.9955],
        [0.9749, 1.0386, 1.0216,  ..., 1.0148, 1.0186, 1.0279]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2617],
         [26.2822],
         [25.4696],
         ...,
         [12.2162],
         [26.0266],
         [25.9166]],
        [[ 9.2542],
         [24.2329],
         [23.7208],
         ...,
         [ 9.7143],
         [23.6172],
         [24.1432]],
        [[ 8.8511],
         [23.9907],
         [23.5128],
         ...,
         [ 9.4425],
         [23.3349],
         [23.9323]],
        ...,
        [[ 8.3751],
         [23.6933],
         [23.2572],
         ...,
         [ 9.1158],
         [22.9892],
         [23.6730]],
        [[ 9.6427],
         [24.4588],
         [23.9144],
         ...,
         [ 9.9720],
         [23.8809],
         [24.3395]],
        [[10.5586],
         [24.9647],
         [24.3473],
         ...,
         [10.5653],
         [24.4731],
         [24.7785]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9795, 1.1515, 1.1408,  ..., 0.9656, 1.1482, 1.1467],
        [0.9265, 1.1245, 1.1177,  ..., 0.9326, 1.1163, 1.1233],
        [0.9212, 1.1213, 1.1149,  ..., 0.9290, 1.1126, 1.1205],
        ...,
        [0.9149, 1.1173, 1.1116,  ..., 0.9247, 1.1080, 1.1171],
        [0.9316, 1.1274, 1.1202,  ..., 0.9360, 1.1198, 1.1259],
        [0.9437, 1.1341, 1.1260,  ..., 0.9438, 1.1276, 1.1317]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1869],
         [11.0559],
         [10.8879],
         ...,
         [12.2163],
         [11.2428],
         [11.1422]],
        [[10.5201],
         [ 9.2816],
         [ 9.2130],
         ...,
         [10.5445],
         [ 9.2669],
         [ 9.1970]],
        [[10.3303],
         [ 9.0827],
         [ 9.0244],
         ...,
         [10.3541],
         [ 9.0478],
         [ 8.9812]],
        ...,
        [[10.0995],
         [ 8.8419],
         [ 8.7958],
         ...,
         [10.1226],
         [ 8.7830],
         [ 8.7203]],
        [[10.6985],
         [ 9.4690],
         [ 9.3905],
         ...,
         [10.7233],
         [ 9.4738],
         [ 9.4009]],
        [[11.1027],
         [ 9.8961],
         [ 9.7946],
         ...,
         [11.1288],
         [ 9.9471],
         [ 9.8670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9862, 0.9620, 0.9584,  ..., 0.9868, 0.9660, 0.9638],
        [0.9505, 0.9239, 0.9224,  ..., 0.9510, 0.9236, 0.9221],
        [0.9464, 0.9197, 0.9184,  ..., 0.9469, 0.9189, 0.9175],
        ...,
        [0.9415, 0.9145, 0.9135,  ..., 0.9420, 0.9132, 0.9119],
        [0.9543, 0.9279, 0.9263,  ..., 0.9548, 0.9280, 0.9265],
        [0.9630, 0.9371, 0.9349,  ..., 0.9635, 0.9382, 0.9365]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0795],
         [24.4643],
         [22.9960],
         ...,
         [19.4605],
         [23.2991],
         [23.4514]],
        [[14.6021],
         [14.9462],
         [14.7556],
         ...,
         [16.5626],
         [14.6781],
         [14.8287]],
        [[14.5440],
         [14.0617],
         [13.9670],
         ...,
         [16.2353],
         [13.8621],
         [14.0107]],
        ...,
        [[14.4723],
         [13.0364],
         [13.0465],
         ...,
         [15.8380],
         [12.9121],
         [13.0579]],
        [[14.6558],
         [15.8120],
         [15.5231],
         ...,
         [16.8706],
         [15.4740],
         [15.6262]],
        [[14.7752],
         [17.9043],
         [17.3610],
         ...,
         [17.5708],
         [17.3864],
         [17.5411]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9834, 1.1360, 1.1121,  ..., 1.0546, 1.1171, 1.1196],
        [0.9756, 0.9812, 0.9781,  ..., 1.0075, 0.9769, 0.9793],
        [0.9747, 0.9668, 0.9653,  ..., 1.0022, 0.9636, 0.9660],
        ...,
        [0.9735, 0.9502, 0.9503,  ..., 0.9957, 0.9481, 0.9505],
        [0.9765, 0.9953, 0.9906,  ..., 1.0125, 0.9898, 0.9923],
        [0.9784, 1.0293, 1.0205,  ..., 1.0239, 1.0209, 1.0234]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0250],
         [26.1049],
         [25.5004],
         ...,
         [12.2471],
         [25.9205],
         [26.0219]],
        [[ 9.3382],
         [24.0909],
         [23.6594],
         ...,
         [ 9.6965],
         [23.6785],
         [24.2394]],
        [[ 8.9613],
         [23.8527],
         [23.4409],
         ...,
         [ 9.4202],
         [23.4148],
         [24.0275]],
        ...,
        [[ 8.5146],
         [23.5603],
         [23.1726],
         ...,
         [ 9.0882],
         [23.0916],
         [23.7669]],
        [[ 9.7001],
         [24.3130],
         [23.8629],
         ...,
         [ 9.9588],
         [23.9246],
         [24.4368]],
        [[10.5493],
         [24.8103],
         [24.3181],
         ...,
         [10.5629],
         [24.4767],
         [24.8780]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1520, 1.1440,  ..., 0.9689, 1.1496, 1.1509],
        [0.9304, 1.1254, 1.1197,  ..., 0.9352, 1.1199, 1.1274],
        [0.9254, 1.1222, 1.1168,  ..., 0.9315, 1.1165, 1.1246],
        ...,
        [0.9195, 1.1184, 1.1133,  ..., 0.9271, 1.1122, 1.1211],
        [0.9352, 1.1283, 1.1224,  ..., 0.9386, 1.1232, 1.1300],
        [0.9464, 1.1349, 1.1284,  ..., 0.9466, 1.1305, 1.1358]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1543],
         [11.0200],
         [10.8876],
         ...,
         [12.2069],
         [11.2056],
         [11.1274]],
        [[10.4972],
         [ 9.2758],
         [ 9.2151],
         ...,
         [10.5362],
         [ 9.2552],
         [ 9.2003]],
        [[10.3085],
         [ 9.0800],
         [ 9.0268],
         ...,
         [10.3460],
         [ 9.0387],
         [ 8.9862]],
        ...,
        [[10.0789],
         [ 8.8428],
         [ 8.7984],
         ...,
         [10.1147],
         [ 8.7770],
         [ 8.7275]],
        [[10.6746],
         [ 9.4602],
         [ 9.3924],
         ...,
         [10.7149],
         [ 9.4597],
         [ 9.4025]],
        [[11.0765],
         [ 9.8804],
         [ 9.7959],
         ...,
         [11.1201],
         [ 9.9271],
         [ 9.8644]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9878, 0.9635, 0.9607,  ..., 0.9890, 0.9675, 0.9658],
        [0.9523, 0.9261, 0.9248,  ..., 0.9531, 0.9257, 0.9245],
        [0.9483, 0.9219, 0.9208,  ..., 0.9491, 0.9210, 0.9199],
        ...,
        [0.9433, 0.9168, 0.9159,  ..., 0.9441, 0.9154, 0.9144],
        [0.9561, 0.9301, 0.9286,  ..., 0.9570, 0.9301, 0.9288],
        [0.9647, 0.9391, 0.9373,  ..., 0.9657, 0.9401, 0.9387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0502],
         [23.9432],
         [23.0366],
         ...,
         [19.3929],
         [23.3799],
         [23.3795]],
        [[14.5937],
         [14.8599],
         [14.7574],
         ...,
         [16.5590],
         [14.7636],
         [14.7841]],
        [[14.5382],
         [14.0079],
         [13.9659],
         ...,
         [16.2383],
         [13.9469],
         [13.9687]],
        ...,
        [[14.4696],
         [13.0179],
         [13.0422],
         ...,
         [15.8489],
         [12.9957],
         [13.0189]],
        [[14.6452],
         [15.6925],
         [15.5280],
         ...,
         [16.8607],
         [15.5600],
         [15.5791]],
        [[14.7594],
         [17.6986],
         [17.3736],
         ...,
         [17.5460],
         [17.4727],
         [17.4880]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9840, 1.1287, 1.1139,  ..., 1.0547, 1.1195, 1.1195],
        [0.9766, 0.9810, 0.9793,  ..., 1.0086, 0.9794, 0.9797],
        [0.9757, 0.9671, 0.9664,  ..., 1.0034, 0.9661, 0.9665],
        ...,
        [0.9746, 0.9510, 0.9514,  ..., 0.9970, 0.9506, 0.9510],
        [0.9775, 0.9945, 0.9918,  ..., 1.0135, 0.9923, 0.9926],
        [0.9793, 1.0271, 1.0218,  ..., 1.0246, 1.0234, 1.0237]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0230],
         [25.5840],
         [25.6070],
         ...,
         [12.4752],
         [25.3811],
         [26.3675]],
        [[ 9.3389],
         [23.7636],
         [23.5854],
         ...,
         [ 9.5752],
         [23.4937],
         [24.6371]],
        [[ 8.9623],
         [23.5474],
         [23.3465],
         ...,
         [ 9.2667],
         [23.2700],
         [24.4310]],
        ...,
        [[ 8.5159],
         [23.2819],
         [23.0534],
         ...,
         [ 8.8975],
         [22.9953],
         [24.1775]],
        [[ 9.7007],
         [23.9649],
         [23.8081],
         ...,
         [ 9.8691],
         [23.7021],
         [24.8290]],
        [[10.5492],
         [24.4152],
         [24.3070],
         ...,
         [10.5501],
         [24.1685],
         [25.2577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 1.1447, 1.1450,  ..., 0.9714, 1.1420, 1.1550],
        [0.9300, 1.1206, 1.1183,  ..., 0.9331, 1.1171, 1.1322],
        [0.9250, 1.1178, 1.1151,  ..., 0.9290, 1.1141, 1.1294],
        ...,
        [0.9191, 1.1143, 1.1112,  ..., 0.9242, 1.1105, 1.1261],
        [0.9348, 1.1233, 1.1212,  ..., 0.9370, 1.1198, 1.1347],
        [0.9460, 1.1292, 1.1278,  ..., 0.9460, 1.1260, 1.1404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1005],
         [10.9964],
         [10.8598],
         ...,
         [12.1470],
         [11.2631],
         [11.2494]],
        [[10.4666],
         [ 9.2617],
         [ 9.2217],
         ...,
         [10.4925],
         [ 9.2143],
         [ 9.2116]],
        [[10.2803],
         [ 9.0670],
         [ 9.0369],
         ...,
         [10.3041],
         [ 8.9881],
         [ 8.9865]],
        ...,
        [[10.0537],
         [ 8.8310],
         [ 8.8127],
         ...,
         [10.0749],
         [ 8.7150],
         [ 8.7148]],
        [[10.6415],
         [ 9.4453],
         [ 9.3957],
         ...,
         [10.6696],
         [ 9.4281],
         [ 9.4244]],
        [[11.0380],
         [ 9.8632],
         [ 9.7912],
         ...,
         [11.0709],
         [ 9.9178],
         [ 9.9116]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9928, 0.9691, 0.9662,  ..., 0.9938, 0.9749, 0.9746],
        [0.9578, 0.9319, 0.9311,  ..., 0.9583, 0.9309, 0.9309],
        [0.9538, 0.9278, 0.9271,  ..., 0.9543, 0.9261, 0.9260],
        ...,
        [0.9489, 0.9227, 0.9223,  ..., 0.9494, 0.9202, 0.9202],
        [0.9615, 0.9359, 0.9348,  ..., 0.9621, 0.9355, 0.9354],
        [0.9700, 0.9448, 0.9433,  ..., 0.9707, 0.9460, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1788],
         [23.1265],
         [23.0548],
         ...,
         [19.7385],
         [23.8455],
         [23.1213]],
        [[14.7090],
         [14.5809],
         [14.7888],
         ...,
         [16.8982],
         [14.8343],
         [14.7208]],
        [[14.6518],
         [13.7717],
         [13.9979],
         ...,
         [16.5763],
         [13.9878],
         [13.9206]],
        ...,
        [[14.5812],
         [12.8294],
         [13.0748],
         ...,
         [16.1853],
         [13.0040],
         [12.9876]],
        [[14.7619],
         [15.3702],
         [15.5586],
         ...,
         [17.2009],
         [15.6612],
         [15.5003]],
        [[14.8795],
         [17.2663],
         [17.4020],
         ...,
         [17.8883],
         [17.6528],
         [17.3696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9851, 1.1144, 1.1132,  ..., 1.0593, 1.1261, 1.1143],
        [0.9775, 0.9754, 0.9788,  ..., 1.0131, 0.9795, 0.9777],
        [0.9765, 0.9622, 0.9659,  ..., 1.0078, 0.9657, 0.9647],
        ...,
        [0.9754, 0.9469, 0.9509,  ..., 1.0015, 0.9497, 0.9495],
        [0.9783, 0.9882, 0.9913,  ..., 1.0180, 0.9930, 0.9903],
        [0.9802, 1.0191, 1.0213,  ..., 1.0292, 1.0254, 1.0207]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0245],
         [25.9736],
         [25.5307],
         ...,
         [12.3082],
         [25.7885],
         [26.1166]],
        [[ 9.3384],
         [24.0006],
         [23.6388],
         ...,
         [ 9.6624],
         [23.6280],
         [24.3487]],
        [[ 8.9616],
         [23.7671],
         [23.4146],
         ...,
         [ 9.3772],
         [23.3735],
         [24.1384]],
        ...,
        [[ 8.5150],
         [23.4803],
         [23.1392],
         ...,
         [ 9.0349],
         [23.0614],
         [23.8798]],
        [[ 9.7003],
         [24.2183],
         [23.8477],
         ...,
         [ 9.9334],
         [23.8655],
         [24.5446]],
        [[10.5493],
         [24.7057],
         [24.3153],
         ...,
         [10.5586],
         [24.3979],
         [24.9823]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1502, 1.1443,  ..., 0.9696, 1.1477, 1.1520],
        [0.9303, 1.1241, 1.1193,  ..., 0.9346, 1.1192, 1.1287],
        [0.9253, 1.1210, 1.1163,  ..., 0.9308, 1.1158, 1.1259],
        ...,
        [0.9194, 1.1172, 1.1127,  ..., 0.9263, 1.1117, 1.1225],
        [0.9351, 1.1270, 1.1221,  ..., 0.9382, 1.1223, 1.1313],
        [0.9463, 1.1334, 1.1282,  ..., 0.9464, 1.1293, 1.1370]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1399],
         [11.0130],
         [10.8797],
         ...,
         [12.1910],
         [11.2017],
         [11.1590]],
        [[10.4882],
         [ 9.2718],
         [ 9.2168],
         ...,
         [10.5233],
         [ 9.2368],
         [ 9.2029]],
        [[10.3001],
         [ 9.0764],
         [ 9.0295],
         ...,
         [10.3334],
         [ 9.0189],
         [ 8.9860]],
        ...,
        [[10.0712],
         [ 8.8395],
         [ 8.8023],
         ...,
         [10.1024],
         [ 8.7556],
         [ 8.7238]],
        [[10.6650],
         [ 9.4560],
         [ 9.3932],
         ...,
         [10.7017],
         [ 9.4427],
         [ 9.4079]],
        [[11.0657],
         [ 9.8754],
         [ 9.7944],
         ...,
         [11.1062],
         [ 9.9133],
         [ 9.8764]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9891, 0.9649, 0.9620,  ..., 0.9902, 0.9689, 0.9680],
        [0.9536, 0.9276, 0.9264,  ..., 0.9544, 0.9268, 0.9261],
        [0.9496, 0.9234, 0.9224,  ..., 0.9503, 0.9221, 0.9214],
        ...,
        [0.9447, 0.9183, 0.9175,  ..., 0.9454, 0.9165, 0.9158],
        [0.9574, 0.9315, 0.9302,  ..., 0.9582, 0.9312, 0.9305],
        [0.9660, 0.9405, 0.9388,  ..., 0.9669, 0.9413, 0.9405]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0852],
         [23.7288],
         [23.0417],
         ...,
         [19.4853],
         [23.5104],
         [23.3091]],
        [[14.6254],
         [14.7838],
         [14.7661],
         ...,
         [16.6517],
         [14.7833],
         [14.7667]],
        [[14.5694],
         [13.9428],
         [13.9747],
         ...,
         [16.3309],
         [13.9582],
         [13.9555]],
        ...,
        [[14.5003],
         [12.9651],
         [13.0512],
         ...,
         [15.9413],
         [12.9979],
         [13.0103]],
        [[14.6772],
         [15.6053],
         [15.5364],
         ...,
         [16.9535],
         [15.5883],
         [15.5575]],
        [[14.7922],
         [17.5831],
         [17.3815],
         ...,
         [17.6388],
         [17.5232],
         [17.4556]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9843, 1.1249, 1.1137,  ..., 1.0558, 1.1213, 1.1180],
        [0.9768, 0.9794, 0.9791,  ..., 1.0098, 0.9794, 0.9791],
        [0.9759, 0.9657, 0.9662,  ..., 1.0045, 0.9660, 0.9659],
        ...,
        [0.9748, 0.9498, 0.9512,  ..., 0.9982, 0.9503, 0.9505],
        [0.9776, 0.9927, 0.9916,  ..., 1.0147, 0.9925, 0.9920],
        [0.9795, 1.0249, 1.0216,  ..., 1.0258, 1.0239, 1.0228]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0658],
         [25.0249],
         [25.7198],
         ...,
         [12.7034],
         [24.8899],
         [26.6257]],
        [[ 9.3230],
         [23.4712],
         [23.5490],
         ...,
         [ 9.4686],
         [23.5124],
         [24.9279]],
        [[ 8.9416],
         [23.2857],
         [23.2934],
         ...,
         [ 9.1303],
         [23.3473],
         [24.7254]],
        ...,
        [[ 8.4897],
         [23.0575],
         [22.9799],
         ...,
         [ 8.7272],
         [23.1440],
         [24.4763]],
        [[ 9.6897],
         [23.6438],
         [23.7875],
         ...,
         [ 9.7920],
         [23.6659],
         [25.1163]],
        [[10.5506],
         [24.0291],
         [24.3225],
         ...,
         [10.5453],
         [24.0082],
         [25.5371]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1373, 1.1465,  ..., 0.9744, 1.1355, 1.1584],
        [0.9298, 1.1167, 1.1178,  ..., 0.9317, 1.1173, 1.1360],
        [0.9247, 1.1143, 1.1144,  ..., 0.9272, 1.1151, 1.1333],
        ...,
        [0.9187, 1.1113, 1.1102,  ..., 0.9219, 1.1124, 1.1300],
        [0.9346, 1.1190, 1.1209,  ..., 0.9360, 1.1193, 1.1385],
        [0.9460, 1.1241, 1.1280,  ..., 0.9459, 1.1238, 1.1440]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0444],
         [10.9725],
         [10.8439],
         ...,
         [12.0594],
         [11.4051],
         [11.3215]],
        [[10.4413],
         [ 9.2453],
         [ 9.2284],
         ...,
         [10.4475],
         [ 9.2254],
         [ 9.2210]],
        [[10.2583],
         [ 9.0514],
         [ 9.0460],
         ...,
         [10.2636],
         [ 8.9863],
         [ 8.9897]],
        ...,
        [[10.0357],
         [ 8.8163],
         [ 8.8245],
         ...,
         [10.0398],
         [ 8.6982],
         [ 8.7106]],
        [[10.6132],
         [ 9.4281],
         [ 9.4001],
         ...,
         [10.6203],
         [ 9.4517],
         [ 9.4398]],
        [[11.0024],
         [ 9.8442],
         [ 9.7904],
         ...,
         [11.0116],
         [ 9.9711],
         [ 9.9412]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0006, 0.9776, 0.9748,  ..., 1.0009, 0.9869, 0.9851],
        [0.9662, 0.9406, 0.9402,  ..., 0.9663, 0.9401, 0.9400],
        [0.9623, 0.9364, 0.9363,  ..., 0.9624, 0.9350, 0.9351],
        ...,
        [0.9575, 0.9314, 0.9315,  ..., 0.9576, 0.9288, 0.9291],
        [0.9699, 0.9445, 0.9439,  ..., 0.9701, 0.9450, 0.9447],
        [0.9782, 0.9534, 0.9523,  ..., 0.9784, 0.9561, 0.9555]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.3935],
         [22.2344],
         [23.0864],
         ...,
         [19.8146],
         [24.2435],
         [22.8731]],
        [[14.8951],
         [14.3256],
         [14.8153],
         ...,
         [17.0438],
         [14.9137],
         [14.6769]],
        [[14.8345],
         [13.5669],
         [14.0237],
         ...,
         [16.7289],
         [14.0431],
         [13.8926]],
        ...,
        [[14.7597],
         [12.6808],
         [13.0997],
         ...,
         [16.3462],
         [13.0329],
         [12.9770]],
        [[14.9512],
         [15.0637],
         [15.5857],
         ...,
         [17.3398],
         [15.7652],
         [15.4403]],
        [[15.0758],
         [16.8298],
         [17.4305],
         ...,
         [18.0111],
         [17.8203],
         [17.2684]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9886, 1.0998, 1.1137,  ..., 1.0605, 1.1325, 1.1102],
        [0.9805, 0.9712, 0.9792,  ..., 1.0154, 0.9808, 0.9769],
        [0.9795, 0.9589, 0.9663,  ..., 1.0103, 0.9666, 0.9642],
        ...,
        [0.9783, 0.9445, 0.9513,  ..., 1.0041, 0.9502, 0.9493],
        [0.9814, 0.9832, 0.9917,  ..., 1.0202, 0.9946, 0.9893],
        [0.9834, 1.0119, 1.0217,  ..., 1.0312, 1.0281, 1.0191]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0298],
         [25.8647],
         [25.5567],
         ...,
         [12.3560],
         [25.6880],
         [26.1817]],
        [[ 9.3364],
         [23.9324],
         [23.6271],
         ...,
         [ 9.6365],
         [23.6128],
         [24.4226]],
        [[ 8.9590],
         [23.7034],
         [23.3986],
         ...,
         [ 9.3445],
         [23.3679],
         [24.2133]],
        ...,
        [[ 8.5117],
         [23.4223],
         [23.1181],
         ...,
         [ 8.9943],
         [23.0674],
         [23.9559]],
        [[ 9.6989],
         [24.1457],
         [23.8401],
         ...,
         [ 9.9142],
         [23.8412],
         [24.6175]],
        [[10.5494],
         [24.6231],
         [24.3168],
         ...,
         [10.5557],
         [24.3531],
         [25.0531]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9791, 1.1487, 1.1446,  ..., 0.9702, 1.1464, 1.1529],
        [0.9303, 1.1232, 1.1191,  ..., 0.9342, 1.1189, 1.1296],
        [0.9253, 1.1201, 1.1161,  ..., 0.9304, 1.1157, 1.1269],
        ...,
        [0.9194, 1.1164, 1.1124,  ..., 0.9257, 1.1117, 1.1235],
        [0.9351, 1.1260, 1.1219,  ..., 0.9379, 1.1220, 1.1322],
        [0.9463, 1.1323, 1.1282,  ..., 0.9464, 1.1287, 1.1380]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1282],
         [11.0065],
         [10.8748],
         ...,
         [12.1755],
         [11.1992],
         [11.1775]],
        [[10.4814],
         [ 9.2682],
         [ 9.2181],
         ...,
         [10.5116],
         [ 9.2261],
         [ 9.2049]],
        [[10.2937],
         [ 9.0730],
         [ 9.0315],
         ...,
         [10.3222],
         [ 9.0074],
         [ 8.9863]],
        ...,
        [[10.0655],
         [ 8.8365],
         [ 8.8050],
         ...,
         [10.0917],
         [ 8.7432],
         [ 8.7222]],
        [[10.6577],
         [ 9.4521],
         [ 9.3939],
         ...,
         [10.6897],
         [ 9.4328],
         [ 9.4115]],
        [[11.0572],
         [ 9.8708],
         [ 9.7937],
         ...,
         [11.0932],
         [ 9.9052],
         [ 9.8838]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9902, 0.9661, 0.9633,  ..., 0.9912, 0.9702, 0.9698],
        [0.9548, 0.9288, 0.9278,  ..., 0.9555, 0.9279, 0.9275],
        [0.9508, 0.9246, 0.9238,  ..., 0.9514, 0.9232, 0.9228],
        ...,
        [0.9459, 0.9196, 0.9189,  ..., 0.9465, 0.9176, 0.9171],
        [0.9586, 0.9328, 0.9315,  ..., 0.9593, 0.9324, 0.9319],
        [0.9672, 0.9417, 0.9401,  ..., 0.9680, 0.9425, 0.9420]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1238],
         [23.5536],
         [23.0475],
         ...,
         [19.5271],
         [23.6079],
         [23.2541]],
        [[14.6594],
         [14.7260],
         [14.7724],
         ...,
         [16.7012],
         [14.8006],
         [14.7553]],
        [[14.6029],
         [13.8942],
         [13.9810],
         ...,
         [16.3812],
         [13.9694],
         [13.9474]],
        ...,
        [[14.5331],
         [12.9269],
         [13.0574],
         ...,
         [15.9924],
         [13.0023],
         [13.0059]],
        [[14.7117],
         [15.5380],
         [15.5427],
         ...,
         [17.0023],
         [15.6118],
         [15.5427]],
        [[14.8279],
         [17.4918],
         [17.3878],
         ...,
         [17.6860],
         [17.5627],
         [17.4320]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9847, 1.1218, 1.1136,  ..., 1.0563, 1.1227, 1.1170],
        [0.9772, 0.9783, 0.9790,  ..., 1.0104, 0.9795, 0.9787],
        [0.9763, 0.9647, 0.9661,  ..., 1.0052, 0.9660, 0.9656],
        ...,
        [0.9751, 0.9490, 0.9511,  ..., 0.9989, 0.9502, 0.9503],
        [0.9780, 0.9915, 0.9915,  ..., 1.0153, 0.9927, 0.9915],
        [0.9799, 1.0232, 1.0216,  ..., 1.0264, 1.0244, 1.0223]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0256],
         [25.9509],
         [25.5363],
         ...,
         [12.3183],
         [25.7677],
         [26.1305]],
        [[ 9.3379],
         [23.9861],
         [23.6363],
         ...,
         [ 9.6569],
         [23.6248],
         [24.3645]],
        [[ 8.9610],
         [23.7534],
         [23.4112],
         ...,
         [ 9.3702],
         [23.3722],
         [24.1543]],
        ...,
        [[ 8.5143],
         [23.4678],
         [23.1347],
         ...,
         [ 9.0262],
         [23.0625],
         [23.8960]],
        [[ 9.7000],
         [24.2029],
         [23.8461],
         ...,
         [ 9.9293],
         [23.8604],
         [24.5601]],
        [[10.5493],
         [24.6882],
         [24.3156],
         ...,
         [10.5579],
         [24.3886],
         [24.9974]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1498, 1.1444,  ..., 0.9697, 1.1474, 1.1522],
        [0.9303, 1.1239, 1.1193,  ..., 0.9345, 1.1191, 1.1289],
        [0.9253, 1.1208, 1.1163,  ..., 0.9307, 1.1158, 1.1261],
        ...,
        [0.9194, 1.1170, 1.1126,  ..., 0.9262, 1.1117, 1.1227],
        [0.9351, 1.1267, 1.1220,  ..., 0.9381, 1.1222, 1.1315],
        [0.9463, 1.1332, 1.1282,  ..., 0.9464, 1.1292, 1.1372]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1374],
         [11.0116],
         [10.8786],
         ...,
         [12.1877],
         [11.2005],
         [11.1629]],
        [[10.4867],
         [ 9.2710],
         [ 9.2171],
         ...,
         [10.5207],
         [ 9.2343],
         [ 9.2034]],
        [[10.2987],
         [ 9.0757],
         [ 9.0299],
         ...,
         [10.3309],
         [ 9.0163],
         [ 8.9861]],
        ...,
        [[10.0699],
         [ 8.8389],
         [ 8.8029],
         ...,
         [10.1001],
         [ 8.7528],
         [ 8.7235]],
        [[10.6634],
         [ 9.4551],
         [ 9.3933],
         ...,
         [10.6991],
         [ 9.4403],
         [ 9.4086]],
        [[11.0639],
         [ 9.8744],
         [ 9.7943],
         ...,
         [11.1034],
         [ 9.9112],
         [ 9.8780]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9893, 0.9651, 0.9623,  ..., 0.9904, 0.9692, 0.9684],
        [0.9539, 0.9278, 0.9267,  ..., 0.9546, 0.9270, 0.9264],
        [0.9499, 0.9236, 0.9226,  ..., 0.9505, 0.9224, 0.9217],
        ...,
        [0.9449, 0.9186, 0.9178,  ..., 0.9456, 0.9167, 0.9161],
        [0.9577, 0.9318, 0.9304,  ..., 0.9584, 0.9314, 0.9308],
        [0.9663, 0.9408, 0.9390,  ..., 0.9671, 0.9415, 0.9408]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0934],
         [23.6919],
         [23.0429],
         ...,
         [19.4941],
         [23.5313],
         [23.2974]],
        [[14.6326],
         [14.7715],
         [14.7674],
         ...,
         [16.6622],
         [14.7870],
         [14.7643]],
        [[14.5766],
         [13.9324],
         [13.9761],
         ...,
         [16.3416],
         [13.9606],
         [13.9538]],
        ...,
        [[14.5073],
         [12.9569],
         [13.0525],
         ...,
         [15.9522],
         [12.9988],
         [13.0093]],
        [[14.6845],
         [15.5910],
         [15.5378],
         ...,
         [16.9638],
         [15.5934],
         [15.5544]],
        [[14.7998],
         [17.5637],
         [17.3828],
         ...,
         [17.6489],
         [17.5317],
         [17.4506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9844, 1.1242, 1.1137,  ..., 1.0560, 1.1216, 1.1178],
        [0.9769, 0.9791, 0.9791,  ..., 1.0099, 0.9794, 0.9790],
        [0.9760, 0.9655, 0.9662,  ..., 1.0047, 0.9660, 0.9658],
        ...,
        [0.9748, 0.9496, 0.9512,  ..., 0.9983, 0.9503, 0.9505],
        [0.9777, 0.9925, 0.9916,  ..., 1.0148, 0.9925, 0.9919],
        [0.9796, 1.0246, 1.0216,  ..., 1.0259, 1.0240, 1.0227]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0284],
         [25.8944],
         [25.5498],
         ...,
         [12.3431],
         [25.7156],
         [26.1643]],
        [[ 9.3369],
         [23.9506],
         [23.6302],
         ...,
         [ 9.6434],
         [23.6169],
         [24.4029]],
        [[ 8.9597],
         [23.7204],
         [23.4029],
         ...,
         [ 9.3532],
         [23.3693],
         [24.1932]],
        ...,
        [[ 8.5126],
         [23.4377],
         [23.1237],
         ...,
         [ 9.0052],
         [23.0656],
         [23.9355]],
        [[ 9.6993],
         [24.1652],
         [23.8421],
         ...,
         [ 9.9193],
         [23.8478],
         [24.5980]],
        [[10.5494],
         [24.6454],
         [24.3164],
         ...,
         [10.5564],
         [24.3654],
         [25.0342]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9791, 1.1491, 1.1445,  ..., 0.9700, 1.1467, 1.1527],
        [0.9303, 1.1234, 1.1192,  ..., 0.9343, 1.1190, 1.1294],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1157, 1.1266],
        ...,
        [0.9194, 1.1166, 1.1125,  ..., 0.9259, 1.1117, 1.1232],
        [0.9351, 1.1262, 1.1220,  ..., 0.9380, 1.1220, 1.1320],
        [0.9463, 1.1326, 1.1282,  ..., 0.9464, 1.1289, 1.1377]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1313],
         [11.0082],
         [10.8761],
         ...,
         [12.1797],
         [11.1991],
         [11.1725]],
        [[10.4832],
         [ 9.2691],
         [ 9.2178],
         ...,
         [10.5147],
         [ 9.2287],
         [ 9.2044]],
        [[10.2954],
         [ 9.0739],
         [ 9.0309],
         ...,
         [10.3251],
         [ 9.0103],
         [ 8.9862]],
        ...,
        [[10.0670],
         [ 8.8373],
         [ 8.8043],
         ...,
         [10.0945],
         [ 8.7463],
         [ 8.7226]],
        [[10.6596],
         [ 9.4531],
         [ 9.3937],
         ...,
         [10.6928],
         [ 9.4351],
         [ 9.4105]],
        [[11.0595],
         [ 9.8720],
         [ 9.7939],
         ...,
         [11.0967],
         [ 9.9070],
         [ 9.8818]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9899, 0.9658, 0.9629,  ..., 0.9909, 0.9699, 0.9693],
        [0.9545, 0.9285, 0.9274,  ..., 0.9552, 0.9276, 0.9271],
        [0.9505, 0.9243, 0.9234,  ..., 0.9511, 0.9229, 0.9224],
        ...,
        [0.9456, 0.9192, 0.9185,  ..., 0.9462, 0.9173, 0.9168],
        [0.9583, 0.9324, 0.9311,  ..., 0.9590, 0.9320, 0.9315],
        [0.9669, 0.9414, 0.9397,  ..., 0.9677, 0.9422, 0.9416]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1134],
         [23.6009],
         [23.0460],
         ...,
         [19.5159],
         [23.5819],
         [23.2688]],
        [[14.6503],
         [14.7415],
         [14.7707],
         ...,
         [16.6880],
         [14.7960],
         [14.7584]],
        [[14.5940],
         [13.9072],
         [13.9793],
         ...,
         [16.3677],
         [13.9664],
         [13.9496]],
        ...,
        [[14.5243],
         [12.9371],
         [13.0557],
         ...,
         [15.9787],
         [13.0011],
         [13.0071]],
        [[14.7025],
         [15.5561],
         [15.5410],
         ...,
         [16.9892],
         [15.6055],
         [15.5467]],
        [[14.8183],
         [17.5164],
         [17.3861],
         ...,
         [17.6733],
         [17.5522],
         [17.4383]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1227, 1.1136,  ..., 1.0562, 1.1223, 1.1173],
        [0.9771, 0.9786, 0.9790,  ..., 1.0102, 0.9794, 0.9788],
        [0.9762, 0.9650, 0.9662,  ..., 1.0050, 0.9660, 0.9657],
        ...,
        [0.9750, 0.9492, 0.9511,  ..., 0.9987, 0.9503, 0.9503],
        [0.9779, 0.9918, 0.9916,  ..., 1.0151, 0.9926, 0.9917],
        [0.9798, 1.0237, 1.0216,  ..., 1.0262, 1.0243, 1.0224]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0262],
         [25.9391],
         [25.5391],
         ...,
         [12.3235],
         [25.7569],
         [26.1376]],
        [[ 9.3377],
         [23.9786],
         [23.6350],
         ...,
         [ 9.6540],
         [23.6231],
         [24.3726]],
        [[ 8.9607],
         [23.7464],
         [23.4094],
         ...,
         [ 9.3666],
         [23.3716],
         [24.1625]],
        ...,
        [[ 8.5139],
         [23.4614],
         [23.1324],
         ...,
         [ 9.0218],
         [23.0631],
         [23.9044]],
        [[ 9.6998],
         [24.1949],
         [23.8452],
         ...,
         [ 9.9272],
         [23.8578],
         [24.5681]],
        [[10.5493],
         [24.6793],
         [24.3158],
         ...,
         [10.5576],
         [24.3838],
         [25.0051]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1497, 1.1444,  ..., 0.9698, 1.1473, 1.1523],
        [0.9303, 1.1238, 1.1192,  ..., 0.9345, 1.1191, 1.1290],
        [0.9253, 1.1207, 1.1163,  ..., 0.9307, 1.1158, 1.1262],
        ...,
        [0.9194, 1.1169, 1.1126,  ..., 0.9261, 1.1117, 1.1228],
        [0.9351, 1.1266, 1.1220,  ..., 0.9381, 1.1222, 1.1316],
        [0.9463, 1.1330, 1.1282,  ..., 0.9464, 1.1291, 1.1373]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1361],
         [11.0108],
         [10.8781],
         ...,
         [12.1860],
         [11.2000],
         [11.1649]],
        [[10.4860],
         [ 9.2706],
         [ 9.2172],
         ...,
         [10.5194],
         [ 9.2331],
         [ 9.2036]],
        [[10.2980],
         [ 9.0753],
         [ 9.0301],
         ...,
         [10.3297],
         [ 9.0150],
         [ 8.9861]],
        ...,
        [[10.0693],
         [ 8.8386],
         [ 8.8032],
         ...,
         [10.0989],
         [ 8.7514],
         [ 8.7233]],
        [[10.6626],
         [ 9.4547],
         [ 9.3934],
         ...,
         [10.6977],
         [ 9.4391],
         [ 9.4090]],
        [[11.0629],
         [ 9.8739],
         [ 9.7942],
         ...,
         [11.1020],
         [ 9.9102],
         [ 9.8788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9894, 0.9653, 0.9624,  ..., 0.9905, 0.9693, 0.9686],
        [0.9540, 0.9280, 0.9268,  ..., 0.9547, 0.9271, 0.9265],
        [0.9500, 0.9238, 0.9228,  ..., 0.9507, 0.9225, 0.9219],
        ...,
        [0.9451, 0.9187, 0.9179,  ..., 0.9457, 0.9168, 0.9162],
        [0.9578, 0.9319, 0.9306,  ..., 0.9586, 0.9316, 0.9309],
        [0.9664, 0.9409, 0.9392,  ..., 0.9672, 0.9417, 0.9410]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0976],
         [23.6728],
         [23.0436],
         ...,
         [19.4987],
         [23.5420],
         [23.2913]],
        [[14.6363],
         [14.7652],
         [14.7681],
         ...,
         [16.6677],
         [14.7889],
         [14.7631]],
        [[14.5802],
         [13.9271],
         [13.9767],
         ...,
         [16.3471],
         [13.9618],
         [13.9529]],
        ...,
        [[14.5109],
         [12.9527],
         [13.0532],
         ...,
         [15.9578],
        [[10.6114]],
        [[11.0443]],
        [[10.9917]],
        [[10.6747]],
        [[10.7883]],
        [[11.3586]],
        [[11.4200]],
        [[10.7951]],
        [[10.6888]],
        [[11.0027]],
        [[11.0327]],
        [[10.5905]],
        [[10.9148]],
        [[11.1232]],
        [[11.1797]],
        [[10.8730]],
        [[10.4095]],
        [[11.0741]],
        [[10.9632]],
        [[10.7451]],
        [[10.8404]],
        [[11.2750]],
        [[11.3321]],
        [[10.8622]],
        [[10.7719]],
        [[10.9840]],
        [[11.0978]],
        [[10.5299]],
        [[10.8936]],
        [[11.2130]],
        [[11.1486]],
        [[10.9337]],
        [[10.6351]],
        [[11.0532]],
        [[11.0228]],
        [[10.7191]],
        [[10.8174]],
        [[11.7391]],
        [[11.7757]],
        [[10.8178]],
        [[10.7196]],
        [[11.0232]],
        [[11.0541]],
        [[10.6371]],
        [[10.9345]],
        [[11.1499]],
        [[11.2126]],
        [[10.8932]],
        [[10.5288]],
        [[11.0974]],
        [[10.9831]],
        [[10.7707]],
        [[10.8613]],
        [[11.3290]],
        [[11.2773]],
        [[10.8413]],
        [[10.7464]],
        [[10.9641]],
        [[11.0745]],
        [[10.4123]],
        [[10.8734]],
        [[11.1801]],
        [[11.1220]],
        [[10.9139]],
        [[10.5879]],
        [[11.0318]],
        [[11.0023]],
        [[10.6884]],
        [[10.7947]],
        [[11.4184]],
        [[11.3552]],
        [[10.7871]],
        [[10.6732]],
        [[10.9907]],
        [[11.0440]],
        [[10.6106]],
        [[10.9204]],
        [[11.1403]],
        [[11.1988]],
        [[10.8826]],
        [[10.4644]],
        [[11.0908]],
        [[10.9501]],
        [[10.7374]],
        [[10.8315]],
        [[11.2514]],
        [[11.2974]],
        [[10.8524]],
        [[10.7632]],
        [[10.9696]],
        [[11.1139]],
        [[10.5507]],
        [[10.9017]],
        [[11.2328]],
        [[11.1691]],
        [[10.9403]],
        [[10.6537]],
        [[11.0661]],
        [[11.0120]],
        [[10.7071]],
        [[10.8113]],
        [[11.4643]],
        [[11.4246]],
        [[10.8050]],
        [[10.6986]],
        [[11.0060]],
        [[11.0598]],
        [[10.6431]],
        [[10.9350]],
        [[11.1607]],
        [[11.2247]],
        [[10.8971]],
        [[10.5343]],
        [[11.1085]],
        [[10.9655]],
        [[10.7575]],
        [[10.8478]],
        [[11.2867]],
        [[11.2404]],
        [[10.8254]],
        [[10.7295]],
        [[10.9448]],
        [[11.0843]],
        [[10.4200]],
        [[10.8767]],
        [[11.1898]],
        [[11.1343]],
        [[10.9163]],
        [[10.6004]],
        [[11.0392]],
        [[10.9861]],
        [[10.6656]],
        [[10.7820]],
        [[11.3391]],
        [[11.3953]],
        [[10.7898]],
        [[10.6815]],
        [[10.9978]],
        [[11.0269]],
        [[10.5758]],
        [[10.9097]],
        [[11.1161]],
        [[11.1720]],
        [[10.8676]],
        [[10.3317]],
        [[11.0684]],
        [[10.9586]],
        [[10.7385]],
        [[10.8351]],
        [[11.2645]],
        [[11.3159]],
        [[10.8565]],
        [[10.7649]],
        [[10.9788]],
        [[11.0924]],
        [[10.5102]],
        [[10.8887]],
        [[11.2054]],
        [[11.1419]],
        [[10.9291]],
        [[10.6253]],
        [[11.0478]],
        [[11.0173]],
        [[10.7116]],
        [[10.8118]],
        [[11.5490]],
        [[11.5081]],
        [[10.8163]],
        [[10.7141]],
        [[11.0167]],
        [[11.0501]],
        [[10.6237]],
        [[10.9260]],
        [[11.1481]],
        [[11.2060]],
        [[10.8870]],
        [[10.4891]],
        [[11.0959]],
        [[10.9743]],
        [[10.7692]],
        [[10.8574]],
        [[11.3105]],
        [[11.2629]],
        [[10.8374]],
        [[10.7447]],
        [[10.9555]],
        [[11.0730]],
        [[10.2142]],
        [[10.8670]],
        [[11.1745]],
        [[11.1204]],
        [[10.9052]],
        [[10.5702]],
        [[11.0278]],
        [[10.9960]],
        [[10.6821]],
        [[10.7933]],
        [[11.3757]],
        [[11.3506]],
        [[10.7767]],
        [[10.6619]],
        [[10.9870]],
        [[11.0372]],
        [[10.6016]],
        [[10.9191]],
        [[11.1288]],
        [[11.1887]],
        [[10.8788]],
        [[10.4564]],
        [[11.0806]],
        [[10.9490]],
        [[10.7252]],
        [[10.8248]],
        [[11.2436]],
        [[11.2878]],
        [[10.8459]],
        [[10.7520]],
        [[10.9683]],
        [[11.1032]],
        [[10.5463]],
        [[10.8980]],
        [[11.2210]],
        [[11.1563]],
        [[10.9391]],
        [[10.6464]],
        [[11.0592]],
        [[11.0081]],
        [[10.6975]],
        [[10.8013]],
        [[11.4551]],
        [[11.4904]],
        [[10.8063]],
        [[10.7045]],
        [[11.0123]],
        [[11.0640]],
        [[10.6552]],
        [[10.9437]],
        [[11.1625]],
        [[11.2317]],
        [[10.9033]],
        [[10.5641]],
        [[11.1101]],
        [[10.9742]],
        [[10.7591]],
        [[10.8517]],
        [[11.3030]],
        [[11.2531]],
        [[10.8295]],
        [[10.7312]],
        [[10.9535]],
        [[11.0857]],
        [[10.4818]],
        [[10.8830]],
        [[11.1959]],
        [[11.1361]],
        [[10.9249]],
        [[10.6156]],
        [[11.0432]],
        [[10.9924]],
        [[10.6722]],
        [[10.7835]],
        [[11.3713]],
        [[11.4012]],
        [[10.8001]],
        [[10.6917]],
        [[11.0016]],
        [[11.0335]],
        [[10.5865]],
        [[10.9109]],
        [[11.1273]],
        [[11.1816]],
        [[10.8713]],
        [[10.3565]],
        [[11.0782]],
        [[10.9599]],
        [[10.7501]],
        [[10.8418]],
        [[11.2730]],
        [[11.3274]],
        [[10.8630]],
        [[10.7758]],
        [[10.9800]],
        [[11.1029]],
        [[10.5156]],
        [[10.8925]],
        [[11.2163]],
        [[11.1539]],
        [[10.9304]],
        [[10.6332]],
        [[11.0546]],
        [[11.0211]],
        [[10.7209]],
        [[10.8214]],
        [[11.5718]],
        [[11.6249]],
        [[10.8210]],
        [[10.7239]],
        [[11.0207]],
        [[11.0564]],
        [[10.6314]],
        [[10.9320]],
        [[11.1527]],
        [[11.2167]],
        [[10.8902]],
        [[10.5166]],
        [[11.1002]],
        [[10.9810]],
        [[10.7740]],
        [[10.8640]],
        [[11.3228]],
        [[11.2710]],
        [[10.8435]],
        [[10.7490]],
        [[10.9615]],
        [[11.0778]],
        [[10.3870]],
        [[10.8709]],
        [[11.1849]],
        [[11.1254]],
        [[10.9119]],
        [[10.5823]],
        [[11.0345]],
        [[10.9993]],
        [[10.6921]],
        [[10.7975]],
        [[11.4024]],
        [[11.3653]],
        [[10.7847]],
        [[10.6696]],
        [[10.9934]],
        [[11.0408]],
        [[10.6161]],
        [[10.9226]],
        [[11.1364]],
        [[11.1945]],
        [[10.8846]],
        [[10.4770]],
        [[11.0876]],
        [[10.9531]],
        [[10.7341]],
        [[10.8291]],
        [[11.2576]],
        [[11.3037]],
        [[10.8493]],
        [[10.7594]],
        [[10.9719]],
        [[11.1114]],
        [[10.5594]],
        [[10.9044]],
        [[11.2289]],
        [[11.1656]],
        [[10.9433]],
        [[10.6592]],
        [[11.0636]],
        [[11.0140]],
        [[10.7032]],
        [[10.8082]],
        [[11.4822]],
        [[11.4394]],
        [[10.8016]],
        [[10.6939]],
        [[11.0083]],
        [[11.0576]],
        [[10.6483]],
        [[10.9376]],
        [[11.1578]],
        [[11.2203]],
        [[10.9001]],
        [[10.5449]],
        [[11.1057]],
        [[10.9675]],
        [[10.7541]],
        [[10.8450]],
        [[11.2919]],
        [[11.2457]],
        [[10.8232]],
        [[10.7266]],
        [[10.9475]],
        [[11.0809]],
        [[10.4399]],
        [[10.8791]],
        [[11.1851]],
        [[11.1309]],
        [[10.9182]],
        [[10.6056]],
        [[11.0363]],
        [[10.9891]],
        [[10.6612]],
        [[10.7792]],
        [[11.3491]],
        [[11.3828]],
        [[10.7923]],
        [[10.6848]],
        [[10.9952]],
        [[11.0300]],
        [[10.5690]],
        [[10.9073]],
        [[11.1199]],
        [[11.1760]],
        [[10.8654]],
        [[10.2728]],
        [[11.0713]],
        [[10.9557]],
        [[10.7416]],
        [[10.8376]],
        [[11.2580]],
        [[11.3094]],
        [[10.8595]],
        [[10.7687]],
        [[10.9764]],
        [[11.0949]],
        [[10.4975]],
        [[10.8861]],
        [[11.2088]],
        [[11.1450]],
        [[10.9262]],
        [[10.6186]],
        [[11.0504]],
        [[11.0152]],
        [[10.7156]],
        [[10.8147]],
        [[11.5203]],
        [[11.5428]],
        [[10.8141]],
        [[10.7111]],
        [[11.0195]],
        [[11.0469]],
        [[10.6288]],
        [[10.9282]],
        [[11.1441]],
        [[11.2016]],
        [[10.8890]],
        [[10.4996]],
        [[11.0927]],
        [[10.9773]],
        [[10.7662]],
        [[10.8550]],
        [[11.3189]],
        [[11.2682]],
        [[10.8342]],
        [[10.7407]],
        [[10.9578]],
        [[11.0707]],
        [[10.3229]],
        [[10.8697]],
        [[11.1714]],
        [[11.1174]],
        [[10.9082]],
        [[10.5787]],
        [[11.0254]],
        [[10.9980]],
        [[10.6777]],
        [[10.7901]],
        [[11.3849]],
        [[11.3425]],
        [[10.7802]],
        [[10.6674]],
        [[10.9846]],
        [[11.0395]],
        [[10.5946]],
        [[10.9165]],
        [[11.1314]],
        [[10.4856],
         [ 9.2704],
         [ 9.2173],
         ...,
         [10.5188],
         [ 9.2325],
         [ 9.2037]],
        [[10.2976],
         [ 9.0751],
         [ 9.0302],
         ...,
         [10.3290],
         [ 9.0143],
         [ 8.9861]],
        ...,
        [[10.0690],
         [ 8.8384],
         [ 8.8033],
         ...,
         [10.0983],
         [ 8.7507],
         [ 8.7232]],
        [[10.6622],
         [ 9.4545],
         [ 9.3935],
         ...,
         [10.6971],
         [ 9.4385],
         [ 9.4092]],
        [[11.0624],
         [ 9.8736],
         [ 9.7942],
         ...,
         [11.1012],
         [ 9.9097],
         [ 9.8792]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9895, 0.9653, 0.9625,  ..., 0.9905, 0.9694, 0.9687],
        [0.9541, 0.9280, 0.9269,  ..., 0.9548, 0.9272, 0.9266],
        [0.9501, 0.9238, 0.9229,  ..., 0.9507, 0.9225, 0.9219],
        ...,
        [0.9451, 0.9188, 0.9180,  ..., 0.9458, 0.9169, 0.9163],
        [0.9579, 0.9320, 0.9307,  ..., 0.9586, 0.9316, 0.9310],
        [0.9665, 0.9410, 0.9393,  ..., 0.9673, 0.9417, 0.9411]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0998],
         [23.6629],
         [23.0439],
         ...,
         [19.5011],
         [23.5475],
         [23.2882]],
        [[14.6383],
         [14.7619],
         [14.7685],
         ...,
         [16.6705],
         [14.7899],
         [14.7624]],
        [[14.5821],
         [13.9244],
         [13.9771],
         ...,
         [16.3500],
         [13.9625],
         [13.9524]],
        ...,
        [[14.5127],
         [12.9506],
         [13.0536],
         ...,
         [15.9607],
         [12.9995],
         [13.0086]],
        [[14.6903],
         [15.5798],
         [15.5388],
         ...,
         [16.9720],
         [15.5973],
         [15.5519]],
        [[14.8057],
         [17.5486],
         [17.3839],
         ...,
         [17.6567],
         [17.5382],
         [17.4467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9844, 1.1237, 1.1137,  ..., 1.0560, 1.1218, 1.1176],
        [0.9769, 0.9790, 0.9791,  ..., 1.0100, 0.9794, 0.9790],
        [0.9760, 0.9653, 0.9662,  ..., 1.0048, 0.9660, 0.9658],
        ...,
        [0.9749, 0.9495, 0.9512,  ..., 0.9985, 0.9503, 0.9504],
        [0.9778, 0.9923, 0.9916,  ..., 1.0149, 0.9925, 0.9918],
        [0.9797, 1.0243, 1.0216,  ..., 1.0260, 1.0241, 1.0226]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0272],
         [25.9177],
         [25.5443],
         ...,
         [12.3330],
         [25.7371],
         [26.1505]],
        [[ 9.3373],
         [23.9651],
         [23.6327],
         ...,
         [ 9.6489],
         [23.6201],
         [24.3872]],
        [[ 8.9602],
         [23.7339],
         [23.4063],
         ...,
         [ 9.3602],
         [23.3705],
         [24.1774]],
        ...,
        [[ 8.5133],
         [23.4499],
         [23.1282],
         ...,
         [ 9.0138],
         [23.0643],
         [23.9194]],
        [[ 9.6996],
         [24.1806],
         [23.8437],
         ...,
         [ 9.9234],
         [23.8530],
         [24.5825]],
        [[10.5494],
         [24.6630],
         [24.3161],
         ...,
         [10.5570],
         [24.3750],
         [25.0191]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1494, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1236, 1.1192,  ..., 0.9344, 1.1190, 1.1292],
        [0.9253, 1.1205, 1.1162,  ..., 0.9306, 1.1157, 1.1264],
        ...,
        [0.9194, 1.1168, 1.1125,  ..., 0.9260, 1.1117, 1.1230],
        [0.9351, 1.1264, 1.1220,  ..., 0.9380, 1.1221, 1.1318],
        [0.9463, 1.1328, 1.1282,  ..., 0.9464, 1.1290, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1338],
         [11.0096],
         [10.8771],
         ...,
         [12.1830],
         [11.1994],
         [11.1686]],
        [[10.4846],
         [ 9.2699],
         [ 9.2175],
         ...,
         [10.5171],
         [ 9.2309],
         [ 9.2040]],
        [[10.2967],
         [ 9.0746],
         [ 9.0305],
         ...,
         [10.3274],
         [ 9.0127],
         [ 8.9862]],
        ...,
        [[10.0682],
         [ 8.8380],
         [ 8.8037],
         ...,
         [10.0967],
         [ 8.7489],
         [ 8.7230]],
        [[10.6611],
         [ 9.4539],
         [ 9.3936],
         ...,
         [10.6954],
         [ 9.4371],
         [ 9.4097]],
        [[11.0612],
         [ 9.8730],
         [ 9.7941],
         ...,
         [11.0994],
         [ 9.9086],
         [ 9.8802]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9896, 0.9655, 0.9627,  ..., 0.9907, 0.9696, 0.9689],
        [0.9543, 0.9282, 0.9271,  ..., 0.9549, 0.9274, 0.9268],
        [0.9502, 0.9240, 0.9231,  ..., 0.9509, 0.9227, 0.9221],
        ...,
        [0.9453, 0.9189, 0.9182,  ..., 0.9459, 0.9170, 0.9165],
        [0.9580, 0.9322, 0.9309,  ..., 0.9588, 0.9318, 0.9312],
        [0.9666, 0.9411, 0.9394,  ..., 0.9674, 0.9419, 0.9413]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1052],
         [23.6382],
         [23.0447],
         ...,
         [19.5070],
         [23.5613],
         [23.2805]],
        [[14.6431],
         [14.7538],
         [14.7694],
         ...,
         [16.6775],
         [14.7923],
         [14.7608]],
        [[14.5868],
         [13.9175],
         [13.9780],
         ...,
         [16.3570],
         [13.9640],
         [13.9513]],
        ...,
        [[14.5174],
         [12.9452],
         [13.0544],
         ...,
         [15.9679],
         [13.0002],
         [13.0080]],
        [[14.6952],
         [15.5704],
         [15.5397],
         ...,
         [16.9788],
         [15.6006],
         [15.5498]],
        [[14.8108],
         [17.5358],
         [17.3848],
         ...,
         [17.6633],
         [17.5438],
         [17.4433]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9845, 1.1233, 1.1136,  ..., 1.0561, 1.1220, 1.1175],
        [0.9770, 0.9788, 0.9790,  ..., 1.0101, 0.9794, 0.9789],
        [0.9761, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9657],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9985, 0.9503, 0.9504],
        [0.9778, 0.9921, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9797, 1.0240, 1.0216,  ..., 1.0261, 1.0242, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0266],
         [25.9298],
         [25.5414],
         ...,
         [12.3276],
         [25.7483],
         [26.1432]],
        [[ 9.3376],
         [23.9727],
         [23.6340],
         ...,
         [ 9.6518],
         [23.6218],
         [24.3789]],
        [[ 8.9605],
         [23.7410],
         [23.4080],
         ...,
         [ 9.3638],
         [23.3711],
         [24.1690]],
        ...,
        [[ 8.5137],
         [23.4564],
         [23.1306],
         ...,
         [ 9.0183],
         [23.0636],
         [23.9109]],
        [[ 9.6997],
         [24.1887],
         [23.8446],
         ...,
         [ 9.9255],
         [23.8557],
         [24.5744]],
        [[10.5493],
         [24.6722],
         [24.3159],
         ...,
         [10.5573],
         [24.3800],
         [25.0112]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1496, 1.1444,  ..., 0.9698, 1.1472, 1.1524],
        [0.9303, 1.1237, 1.1192,  ..., 0.9344, 1.1191, 1.1291],
        [0.9253, 1.1206, 1.1162,  ..., 0.9306, 1.1158, 1.1263],
        ...,
        [0.9194, 1.1169, 1.1126,  ..., 0.9261, 1.1117, 1.1229],
        [0.9351, 1.1266, 1.1220,  ..., 0.9381, 1.1222, 1.1317],
        [0.9463, 1.1329, 1.1282,  ..., 0.9464, 1.1291, 1.1374]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1351],
         [11.0103],
         [10.8776],
         ...,
         [12.1847],
         [11.1997],
         [11.1665]],
        [[10.4854],
         [ 9.2703],
         [ 9.2173],
         ...,
         [10.5184],
         [ 9.2321],
         [ 9.2037]],
        [[10.2974],
         [ 9.0750],
         [ 9.0303],
         ...,
         [10.3287],
         [ 9.0140],
         [ 8.9861]],
        ...,
        [[10.0688],
         [ 8.8383],
         [ 8.8034],
         ...,
         [10.0979],
         [ 8.7503],
         [ 8.7232]],
        [[10.6620],
         [ 9.4544],
         [ 9.3935],
         ...,
         [10.6967],
         [ 9.4382],
         [ 9.4093]],
        [[11.0622],
         [ 9.8735],
         [ 9.7941],
         ...,
         [11.1008],
         [ 9.9095],
         [ 9.8794]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9895, 0.9654, 0.9625,  ..., 0.9906, 0.9694, 0.9687],
        [0.9541, 0.9281, 0.9269,  ..., 0.9548, 0.9272, 0.9266],
        [0.9501, 0.9239, 0.9229,  ..., 0.9508, 0.9226, 0.9220],
        ...,
        [0.9452, 0.9188, 0.9181,  ..., 0.9458, 0.9169, 0.9163],
        [0.9579, 0.9320, 0.9307,  ..., 0.9586, 0.9317, 0.9310],
        [0.9665, 0.9410, 0.9393,  ..., 0.9673, 0.9418, 0.9411]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1009],
         [23.6578],
         [23.0441],
         ...,
         [19.5023],
         [23.5504],
         [23.2866]],
        [[14.6393],
         [14.7602],
         [14.7686],
         ...,
         [16.6719],
         [14.7904],
         [14.7621]],
        [[14.5831],
         [13.9229],
         [13.9773],
         ...,
         [16.3514],
         [13.9628],
         [13.9522]],
        ...,
        [[14.5137],
         [12.9494],
         [13.0537],
         ...,
         [15.9622],
         [12.9997],
         [13.0085]],
        [[14.6913],
         [15.5779],
         [15.5390],
         ...,
         [16.9734],
         [15.5980],
         [15.5515]],
        [[14.8068],
         [17.5460],
         [17.3841],
         ...,
         [17.6581],
         [17.5394],
         [17.4460]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9845, 1.1236, 1.1137,  ..., 1.0561, 1.1219, 1.1176],
        [0.9770, 0.9789, 0.9791,  ..., 1.0100, 0.9794, 0.9790],
        [0.9760, 0.9653, 0.9662,  ..., 1.0048, 0.9660, 0.9658],
        ...,
        [0.9749, 0.9495, 0.9512,  ..., 0.9985, 0.9503, 0.9504],
        [0.9778, 0.9922, 0.9916,  ..., 1.0149, 0.9925, 0.9918],
        [0.9797, 1.0242, 1.0216,  ..., 1.0261, 1.0241, 1.0226]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0265],
         [25.9330],
         [25.5406],
         ...,
         [12.3262],
         [25.7513],
         [26.1413]],
        [[ 9.3376],
         [23.9747],
         [23.6344],
         ...,
         [ 9.6525],
         [23.6223],
         [24.3768]],
        [[ 8.9606],
         [23.7428],
         [23.4085],
         ...,
         [ 9.3648],
         [23.3713],
         [24.1668]],
        ...,
        [[ 8.5137],
         [23.4581],
         [23.1312],
         ...,
         [ 9.0195],
         [23.0635],
         [23.9087]],
        [[ 9.6998],
         [24.1908],
         [23.8448],
         ...,
         [ 9.9261],
         [23.8564],
         [24.5722]],
        [[10.5493],
         [24.6746],
         [24.3159],
         ...,
         [10.5574],
         [24.3813],
         [25.0092]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1496, 1.1444,  ..., 0.9698, 1.1472, 1.1524],
        [0.9303, 1.1237, 1.1192,  ..., 0.9345, 1.1191, 1.1290],
        [0.9253, 1.1207, 1.1162,  ..., 0.9307, 1.1158, 1.1263],
        ...,
        [0.9194, 1.1169, 1.1126,  ..., 0.9261, 1.1117, 1.1229],
        [0.9351, 1.1266, 1.1220,  ..., 0.9381, 1.1222, 1.1316],
        [0.9463, 1.1330, 1.1282,  ..., 0.9464, 1.1291, 1.1374]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1355],
         [11.0105],
         [10.8778],
         ...,
         [12.1851],
         [11.1998],
         [11.1659]],
        [[10.4856],
         [ 9.2704],
         [ 9.2173],
         ...,
         [10.5188],
         [ 9.2325],
         [ 9.2037]],
        [[10.2976],
         [ 9.0751],
         [ 9.0302],
         ...,
         [10.3290],
         [ 9.0143],
         [ 8.9861]],
        ...,
        [[10.0690],
         [ 8.8384],
         [ 8.8033],
         ...,
         [10.0983],
         [ 8.7507],
         [ 8.7232]],
        [[10.6622],
         [ 9.4545],
         [ 9.3935],
         ...,
         [10.6971],
         [ 9.4385],
         [ 9.4092]],
        [[11.0624],
         [ 9.8736],
         [ 9.7942],
         ...,
         [11.1012],
         [ 9.9097],
         [ 9.8792]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9895, 0.9653, 0.9625,  ..., 0.9905, 0.9694, 0.9687],
        [0.9541, 0.9280, 0.9269,  ..., 0.9548, 0.9272, 0.9266],
        [0.9501, 0.9238, 0.9229,  ..., 0.9507, 0.9225, 0.9219],
        ...,
        [0.9451, 0.9188, 0.9180,  ..., 0.9458, 0.9169, 0.9163],
        [0.9579, 0.9320, 0.9307,  ..., 0.9586, 0.9316, 0.9310],
        [0.9665, 0.9410, 0.9393,  ..., 0.9673, 0.9417, 0.9411]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.0998],
         [23.6629],
         [23.0439],
         ...,
         [19.5011],
         [23.5475],
         [23.2882]],
        [[14.6383],
         [14.7619],
         [14.7685],
         ...,
         [16.6705],
         [14.7899],
         [14.7624]],
        [[14.5821],
         [13.9244],
         [13.9771],
         ...,
         [16.3500],
         [13.9625],
         [13.9524]],
        ...,
        [[14.5127],
         [12.9506],
         [13.0536],
         ...,
         [15.9607],
         [12.9995],
         [13.0086]],
        [[14.6903],
         [15.5798],
         [15.5388],
         ...,
         [16.9720],
         [15.5973],
         [15.5519]],
        [[14.8057],
         [17.5486],
         [17.3839],
         ...,
         [17.6567],
         [17.5382],
         [17.4467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9844, 1.1237, 1.1137,  ..., 1.0560, 1.1218, 1.1176],
        [0.9769, 0.9790, 0.9791,  ..., 1.0100, 0.9794, 0.9790],
        [0.9760, 0.9653, 0.9662,  ..., 1.0048, 0.9660, 0.9658],
        ...,
        [0.9749, 0.9495, 0.9512,  ..., 0.9985, 0.9503, 0.9504],
        [0.9778, 0.9923, 0.9916,  ..., 1.0149, 0.9925, 0.9918],
        [0.9797, 1.0243, 1.0216,  ..., 1.0260, 1.0241, 1.0226]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1280],
         [24.6399],
         [25.8420],
         ...,
         [13.0029],
         [24.9491],
         [26.6781]],
        [[ 9.3005],
         [23.2234],
         [23.6030],
         ...,
         [ 9.3465],
         [23.9442],
         [24.9651]],
        [[ 8.9121],
         [23.0538],
         [23.3397],
         ...,
         [ 8.9722],
         [23.8226],
         [24.7609]],
        ...,
        [[ 8.4524],
         [22.8451],
         [23.0170],
         ...,
         [ 8.5284],
         [23.6726],
         [24.5097]],
        [[ 9.6742],
         [23.3811],
         [23.8487],
         ...,
         [ 9.7059],
         [24.0569],
         [25.1552]],
        [[10.5527],
         [23.7328],
         [24.4001],
         ...,
         [10.5487],
         [24.3077],
         [25.5798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9775, 1.1296, 1.1455,  ..., 0.9758, 1.1337, 1.1565],
        [0.9269, 1.1109, 1.1159,  ..., 0.9275, 1.1204, 1.1339],
        [0.9217, 1.1086, 1.1124,  ..., 0.9225, 1.1188, 1.1312],
        ...,
        [0.9157, 1.1059, 1.1081,  ..., 0.9167, 1.1168, 1.1279],
        [0.9318, 1.1130, 1.1191,  ..., 0.9322, 1.1219, 1.1364],
        [0.9434, 1.1176, 1.1264,  ..., 0.9434, 1.1252, 1.1420]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9774],
         [10.9499],
         [10.8456],
         ...,
         [12.0015],
         [11.4880],
         [11.2671]],
        [[10.4166],
         [ 9.2262],
         [ 9.2350],
         ...,
         [10.4250],
         [ 9.2278],
         [ 9.2228]],
        [[10.2382],
         [ 9.0326],
         [ 9.0530],
         ...,
         [10.2449],
         [ 8.9810],
         [ 8.9970]],
        ...,
        [[10.0209],
         [ 8.7980],
         [ 8.8322],
         ...,
         [10.0256],
         [ 8.6837],
         [ 8.7245]],
        [[10.5842],
         [ 9.4086],
         [ 9.4062],
         ...,
         [10.5942],
         [ 9.4618],
         [ 9.4362]],
        [[10.9635],
         [ 9.8239],
         [ 9.7954],
         ...,
         [10.9772],
         [ 9.9993],
         [ 9.9249]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0118, 0.9898, 0.9875,  ..., 1.0123, 1.0013, 0.9966],
        [0.9783, 0.9528, 0.9530,  ..., 0.9785, 0.9528, 0.9527],
        [0.9745, 0.9486, 0.9491,  ..., 0.9746, 0.9475, 0.9479],
        ...,
        [0.9698, 0.9436, 0.9443,  ..., 0.9699, 0.9412, 0.9420],
        [0.9819, 0.9567, 0.9566,  ..., 0.9821, 0.9578, 0.9573],
        [0.9900, 0.9656, 0.9650,  ..., 0.9903, 0.9694, 0.9678]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.5821],
         [21.3447],
         [23.1487],
         ...,
         [19.6523],
         [24.4394],
         [22.7084]],
        [[15.0696],
         [14.1567],
         [14.8305],
         ...,
         [17.0421],
         [14.9978],
         [14.6553]],
        [[15.0073],
         [13.4551],
         [14.0352],
         ...,
         [16.7441],
         [14.1181],
         [13.8819]],
        ...,
        [[14.9304],
         [12.6324],
         [13.1071],
         ...,
         [16.3815],
         [13.0977],
         [12.9786]],
        [[15.1273],
         [14.8369],
         [15.6047],
         ...,
         [17.3219],
         [15.8586],
         [15.4074]],
        [[15.2554],
         [16.4556],
         [17.4591],
         ...,
         [17.9558],
         [17.9368],
         [17.2066]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9927, 1.0864, 1.1158,  ..., 1.0589, 1.1368, 1.1086],
        [0.9844, 0.9695, 0.9805,  ..., 1.0165, 0.9832, 0.9776],
        [0.9834, 0.9581, 0.9676,  ..., 1.0116, 0.9689, 0.9651],
        ...,
        [0.9821, 0.9447, 0.9525,  ..., 1.0057, 0.9523, 0.9504],
        [0.9853, 0.9806, 0.9931,  ..., 1.0210, 0.9972, 0.9899],
        [0.9874, 1.0069, 1.0232,  ..., 1.0313, 1.0310, 1.0191]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0374],
         [25.8014],
         [25.5769],
         ...,
         [12.3929],
         [25.6684],
         [26.2005]],
        [[ 9.3335],
         [23.8933],
         [23.6309],
         ...,
         [ 9.6171],
         [23.6557],
         [24.4403]],
        [[ 8.9553],
         [23.6672],
         [23.4005],
         ...,
         [ 9.3199],
         [23.4178],
         [24.2308]],
        ...,
        [[ 8.5070],
         [23.3894],
         [23.1177],
         ...,
         [ 8.9638],
         [23.1258],
         [23.9733]],
        [[ 9.6969],
         [24.1040],
         [23.8456],
         ...,
         [ 9.8999],
         [23.8775],
         [24.6353]],
        [[10.5497],
         [24.5756],
         [24.3263],
         ...,
         [10.5537],
         [24.3743],
         [25.0712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1477, 1.1448,  ..., 0.9705, 1.1460, 1.1530],
        [0.9301, 1.1225, 1.1190,  ..., 0.9338, 1.1194, 1.1297],
        [0.9251, 1.1195, 1.1160,  ..., 0.9299, 1.1162, 1.1270],
        ...,
        [0.9192, 1.1158, 1.1123,  ..., 0.9252, 1.1124, 1.1236],
        [0.9349, 1.1253, 1.1219,  ..., 0.9376, 1.1223, 1.1323],
        [0.9462, 1.1315, 1.1282,  ..., 0.9462, 1.1289, 1.1381]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1193],
         [11.0002],
         [10.8739],
         ...,
         [12.1671],
         [11.1878],
         [11.1739]],
        [[10.4764],
         [ 9.2650],
         [ 9.2190],
         ...,
         [10.5058],
         [ 9.2216],
         [ 9.2056]],
        [[10.2892],
         [ 9.0702],
         [ 9.0326],
         ...,
         [10.3166],
         [ 9.0036],
         [ 8.9874]],
        ...,
        [[10.0614],
         [ 8.8341],
         [ 8.8063],
         ...,
         [10.0864],
         [ 8.7401],
         [ 8.7238]],
        [[10.6523],
         [ 9.4486],
         [ 9.3946],
         ...,
         [10.6835],
         [ 9.4276],
         [ 9.4117]],
        [[11.0509],
         [ 9.8666],
         [ 9.7940],
         ...,
         [11.0865],
         [ 9.8985],
         [ 9.8831]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9909, 0.9669, 0.9642,  ..., 0.9919, 0.9709, 0.9706],
        [0.9557, 0.9297, 0.9287,  ..., 0.9563, 0.9288, 0.9284],
        [0.9517, 0.9255, 0.9247,  ..., 0.9523, 0.9241, 0.9238],
        ...,
        [0.9468, 0.9205, 0.9199,  ..., 0.9473, 0.9185, 0.9181],
        [0.9595, 0.9336, 0.9325,  ..., 0.9601, 0.9332, 0.9329],
        [0.9680, 0.9426, 0.9411,  ..., 0.9688, 0.9433, 0.9430]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1504],
         [23.4388],
         [23.0555],
         ...,
         [19.5224],
         [23.6497],
         [23.2267]],
        [[14.6837],
         [14.6978],
         [14.7752],
         ...,
         [16.7095],
         [14.8132],
         [14.7509]],
        [[14.6270],
         [13.8727],
         [13.9834],
         ...,
         [16.3907],
         [13.9798],
         [13.9448]],
        ...,
        [[14.5568],
         [12.9128],
         [13.0593],
         ...,
         [16.0036],
         [13.0101],
         [13.0052]],
        [[14.7363],
         [15.5030],
         [15.5460],
         ...,
         [17.0093],
         [15.6268],
         [15.5365]],
        [[14.8531],
         [17.4394],
         [17.3921],
         ...,
         [17.6899],
         [17.5837],
         [17.4212]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1201, 1.1138,  ..., 1.0564, 1.1235, 1.1166],
        [0.9777, 0.9779, 0.9791,  ..., 1.0106, 0.9798, 0.9787],
        [0.9767, 0.9645, 0.9663,  ..., 1.0054, 0.9662, 0.9656],
        ...,
        [0.9756, 0.9488, 0.9512,  ..., 0.9991, 0.9504, 0.9504],
        [0.9785, 0.9910, 0.9917,  ..., 1.0155, 0.9930, 0.9915],
        [0.9804, 1.0225, 1.0217,  ..., 1.0265, 1.0248, 1.0222]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0344],
         [25.8380],
         [25.5671],
         ...,
         [12.3746],
         [25.6916],
         [26.1844]],
        [[ 9.3346],
         [23.9154],
         [23.6318],
         ...,
         [ 9.6267],
         [23.6466],
         [24.4230]],
        [[ 8.9567],
         [23.6876],
         [23.4027],
         ...,
         [ 9.3321],
         [23.4050],
         [24.2134]],
        ...,
        [[ 8.5089],
         [23.4079],
         [23.1214],
         ...,
         [ 8.9789],
         [23.1086],
         [23.9557]],
        [[ 9.6977],
         [24.1277],
         [23.8454],
         ...,
         [ 9.9070],
         [23.8718],
         [24.6182]],
        [[10.5496],
         [24.6028],
         [24.3235],
         ...,
         [10.5546],
         [24.3764],
         [25.0543]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1482, 1.1447,  ..., 0.9703, 1.1463, 1.1528],
        [0.9301, 1.1228, 1.1191,  ..., 0.9340, 1.1193, 1.1295],
        [0.9251, 1.1198, 1.1161,  ..., 0.9301, 1.1161, 1.1268],
        ...,
        [0.9192, 1.1161, 1.1123,  ..., 0.9254, 1.1122, 1.1234],
        [0.9349, 1.1256, 1.1219,  ..., 0.9377, 1.1223, 1.1321],
        [0.9462, 1.1319, 1.1282,  ..., 0.9463, 1.1289, 1.1379]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1237],
         [11.0029],
         [10.8749],
         ...,
         [12.1721],
         [11.1901],
         [11.1717]],
        [[10.4788],
         [ 9.2665],
         [ 9.2186],
         ...,
         [10.5092],
         [ 9.2243],
         [ 9.2051]],
        [[10.2914],
         [ 9.0715],
         [ 9.0319],
         ...,
         [10.3199],
         [ 9.0063],
         [ 8.9871]],
        ...,
        [[10.0634],
         [ 8.8353],
         [ 8.8055],
         ...,
         [10.0895],
         [ 8.7429],
         [ 8.7236]],
        [[10.6549],
         [ 9.4502],
         [ 9.3943],
         ...,
         [10.6871],
         [ 9.4302],
         [ 9.4110]],
        [[11.0540],
         [ 9.8685],
         [ 9.7941],
         ...,
         [11.0905],
         [ 9.9010],
         [ 9.8820]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9905, 0.9665, 0.9637,  ..., 0.9915, 0.9705, 0.9701],
        [0.9552, 0.9292, 0.9282,  ..., 0.9559, 0.9283, 0.9279],
        [0.9512, 0.9251, 0.9242,  ..., 0.9518, 0.9237, 0.9232],
        ...,
        [0.9463, 0.9200, 0.9193,  ..., 0.9469, 0.9180, 0.9176],
        [0.9590, 0.9332, 0.9320,  ..., 0.9597, 0.9327, 0.9323],
        [0.9676, 0.9421, 0.9405,  ..., 0.9683, 0.9428, 0.9424]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1366],
         [23.5004],
         [23.0523],
         ...,
         [19.5166],
         [23.6220],
         [23.2434]],
        [[14.6714],
         [14.7153],
         [14.7734],
         ...,
         [16.6989],
         [14.8069],
         [14.7541]],
        [[14.6148],
         [13.8868],
         [13.9817],
         ...,
         [16.3796],
         [13.9751],
         [13.9469]],
        ...,
        [[14.5448],
         [12.9230],
         [13.0578],
         ...,
         [15.9919],
         [13.0073],
         [13.0061]],
        [[14.7238],
         [15.5240],
         [15.5440],
         ...,
         [16.9991],
         [15.6188],
         [15.5407]],
        [[14.8402],
         [17.4693],
         [17.3898],
         ...,
         [17.6809],
         [17.5714],
         [17.4281]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9850, 1.1211, 1.1138,  ..., 1.0563, 1.1230, 1.1169],
        [0.9775, 0.9782, 0.9791,  ..., 1.0104, 0.9797, 0.9788],
        [0.9765, 0.9647, 0.9662,  ..., 1.0052, 0.9661, 0.9657],
        ...,
        [0.9754, 0.9490, 0.9512,  ..., 0.9989, 0.9504, 0.9504],
        [0.9783, 0.9913, 0.9916,  ..., 1.0153, 0.9929, 0.9916],
        [0.9802, 1.0230, 1.0217,  ..., 1.0264, 1.0246, 1.0223]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0298],
         [25.8936],
         [25.5518],
         ...,
         [12.3464],
         [25.7267],
         [26.1594]],
        [[ 9.3364],
         [23.9498],
         [23.6333],
         ...,
         [ 9.6417],
         [23.6325],
         [24.3962]],
        [[ 8.9590],
         [23.7196],
         [23.4061],
         ...,
         [ 9.3510],
         [23.3854],
         [24.1863]],
        ...,
        [[ 8.5117],
         [23.4369],
         [23.1270],
         ...,
         [ 9.0024],
         [23.0823],
         [23.9284]],
        [[ 9.6989],
         [24.1644],
         [23.8451],
         ...,
         [ 9.9180],
         [23.8629],
         [24.5915]],
        [[10.5494],
         [24.6446],
         [24.3191],
         ...,
         [10.5562],
         [24.3794],
         [25.0281]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1490, 1.1445,  ..., 0.9700, 1.1468, 1.1526],
        [0.9302, 1.1234, 1.1192,  ..., 0.9343, 1.1192, 1.1293],
        [0.9252, 1.1203, 1.1162,  ..., 0.9304, 1.1159, 1.1265],
        ...,
        [0.9193, 1.1166, 1.1125,  ..., 0.9258, 1.1119, 1.1231],
        [0.9350, 1.1262, 1.1220,  ..., 0.9379, 1.1222, 1.1318],
        [0.9463, 1.1325, 1.1282,  ..., 0.9463, 1.1290, 1.1376]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1306],
         [11.0073],
         [10.8766],
         ...,
         [12.1797],
         [11.1951],
         [11.1683]],
        [[10.4827],
         [ 9.2687],
         [ 9.2178],
         ...,
         [10.5147],
         [ 9.2289],
         [ 9.2043]],
        [[10.2950],
         [ 9.0736],
         [ 9.0309],
         ...,
         [10.3251],
         [ 9.0108],
         [ 8.9865]],
        ...,
        [[10.0666],
         [ 8.8371],
         [ 8.8042],
         ...,
         [10.0945],
         [ 8.7474],
         [ 8.7234]],
        [[10.6591],
         [ 9.4526],
         [ 9.3938],
         ...,
         [10.6928],
         [ 9.4348],
         [ 9.4100]],
        [[11.0589],
         [ 9.8715],
         [ 9.7941],
         ...,
         [11.0967],
         [ 9.9058],
         [ 9.8804]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9899, 0.9658, 0.9630,  ..., 0.9909, 0.9698, 0.9693],
        [0.9546, 0.9285, 0.9274,  ..., 0.9552, 0.9277, 0.9271],
        [0.9505, 0.9243, 0.9234,  ..., 0.9512, 0.9230, 0.9225],
        ...,
        [0.9456, 0.9193, 0.9186,  ..., 0.9462, 0.9173, 0.9168],
        [0.9583, 0.9325, 0.9312,  ..., 0.9591, 0.9321, 0.9315],
        [0.9669, 0.9414, 0.9398,  ..., 0.9677, 0.9422, 0.9416]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1152],
         [23.5951],
         [23.0474],
         ...,
         [19.5076],
         [23.5789],
         [23.2695]],
        [[14.6521],
         [14.7424],
         [14.7705],
         ...,
         [16.6824],
         [14.7970],
         [14.7589]],
        [[14.5958],
         [13.9086],
         [13.9790],
         ...,
         [16.3624],
         [13.9678],
         [13.9501]],
        ...,
        [[14.5262],
         [12.9390],
         [13.0553],
         ...,
         [15.9738],
         [13.0028],
         [13.0076]],
        [[14.7043],
         [15.5565],
         [15.5410],
         ...,
         [16.9834],
         [15.6063],
         [15.5472]],
        [[14.8202],
         [17.5155],
         [17.3864],
         ...,
         [17.6668],
         [17.5522],
         [17.4389]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9847, 1.1226, 1.1137,  ..., 1.0561, 1.1223, 1.1173],
        [0.9772, 0.9786, 0.9791,  ..., 1.0102, 0.9795, 0.9789],
        [0.9762, 0.9651, 0.9662,  ..., 1.0050, 0.9660, 0.9657],
        ...,
        [0.9751, 0.9493, 0.9512,  ..., 0.9987, 0.9503, 0.9504],
        [0.9780, 0.9919, 0.9916,  ..., 1.0151, 0.9927, 0.9917],
        [0.9799, 1.0237, 1.0216,  ..., 1.0262, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0289],
         [25.9044],
         [25.5488],
         ...,
         [12.3409],
         [25.7334],
         [26.1545]],
        [[ 9.3367],
         [23.9566],
         [23.6336],
         ...,
         [ 9.6446],
         [23.6297],
         [24.3909]],
        [[ 8.9594],
         [23.7259],
         [23.4067],
         ...,
         [ 9.3547],
         [23.3815],
         [24.1810]],
        ...,
        [[ 8.5123],
         [23.4427],
         [23.1282],
         ...,
         [ 9.0070],
         [23.0772],
         [23.9230]],
        [[ 9.6991],
         [24.1716],
         [23.8450],
         ...,
         [ 9.9202],
         [23.8612],
         [24.5863]],
        [[10.5494],
         [24.6528],
         [24.3182],
         ...,
         [10.5565],
         [24.3799],
         [25.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1469, 1.1525],
        [0.9302, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1159, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1319],
         [11.0081],
         [10.8769],
         ...,
         [12.1812],
         [11.1963],
         [11.1677]],
        [[10.4835],
         [ 9.2692],
         [ 9.2177],
         ...,
         [10.5158],
         [ 9.2298],
         [ 9.2041]],
        [[10.2957],
         [ 9.0740],
         [ 9.0307],
         ...,
         [10.3262],
         [ 9.0118],
         [ 8.9864]],
        ...,
        [[10.0672],
         [ 8.8374],
         [ 8.8040],
         ...,
         [10.0955],
         [ 8.7483],
         [ 8.7233]],
        [[10.6599],
         [ 9.4531],
         [ 9.3937],
         ...,
         [10.6940],
         [ 9.4358],
         [ 9.4098]],
        [[11.0599],
         [ 9.8721],
         [ 9.7941],
         ...,
         [11.0979],
         [ 9.9068],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9898, 0.9657, 0.9629,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9284, 0.9273,  ..., 0.9551, 0.9275, 0.9270],
        [0.9504, 0.9242, 0.9233,  ..., 0.9511, 0.9229, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9167],
        [0.9582, 0.9323, 0.9311,  ..., 0.9589, 0.9320, 0.9314],
        [0.9668, 0.9413, 0.9396,  ..., 0.9676, 0.9421, 0.9415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1110],
         [23.6137],
         [23.0465],
         ...,
         [19.5058],
         [23.5704],
         [23.2746]],
        [[14.6484],
         [14.7477],
         [14.7700],
         ...,
         [16.6791],
         [14.7951],
         [14.7599]],
        [[14.5921],
         [13.9129],
         [13.9785],
         ...,
         [16.3590],
         [13.9663],
         [13.9507]],
        ...,
        [[14.5225],
         [12.9421],
         [13.0548],
         ...,
         [15.9702],
         [13.0019],
         [13.0078]],
        [[14.7005],
         [15.5628],
         [15.5404],
         ...,
         [16.9803],
         [15.6039],
         [15.5485]],
        [[14.8162],
         [17.5245],
         [17.3857],
         ...,
         [17.6641],
         [17.5484],
         [17.4410]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1229, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9651, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9751, 0.9493, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1148],
         [24.8737],
         [25.9937],
         ...,
         [13.3576],
         [25.6573],
         [26.7843]],
        [[ 9.3052],
         [23.7996],
         [23.6408],
         ...,
         [ 9.2227],
         [25.0008],
         [25.0562]],
        [[ 8.9182],
         [23.6699],
         [23.3648],
         ...,
         [ 8.8093],
         [24.9207],
         [24.8502]],
        ...,
        [[ 8.4602],
         [23.5099],
         [23.0267],
         ...,
         [ 8.3219],
         [24.8217],
         [24.5968]],
        [[ 9.6774],
         [23.9199],
         [23.8986],
         ...,
         [ 9.6215],
         [25.0750],
         [25.2479]],
        [[10.5523],
         [24.1877],
         [24.4773],
         ...,
         [10.5636],
         [25.2394],
         [25.6762]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9725, 1.1279, 1.1427,  ..., 0.9758, 1.1383, 1.1532],
        [0.9222, 1.1137, 1.1117,  ..., 0.9211, 1.1296, 1.1304],
        [0.9171, 1.1120, 1.1080,  ..., 0.9156, 1.1286, 1.1276],
        ...,
        [0.9110, 1.1099, 1.1035,  ..., 0.9092, 1.1273, 1.1243],
        [0.9271, 1.1153, 1.1151,  ..., 0.9264, 1.1306, 1.1329],
        [0.9387, 1.1189, 1.1227,  ..., 0.9388, 1.1328, 1.1385]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8963],
         [10.9450],
         [10.8418],
         ...,
         [11.8698],
         [11.9568],
         [11.3058]],
        [[10.3900],
         [ 9.2054],
         [ 9.2461],
         ...,
         [10.3806],
         [ 9.3107],
         [ 9.2343]],
        [[10.2173],
         [ 9.0103],
         [ 9.0657],
         ...,
         [10.2097],
         [ 9.0268],
         [ 9.0058]],
        ...,
        [[10.0069],
         [ 8.7738],
         [ 8.8466],
         ...,
         [10.0016],
         [ 8.6865],
         [ 8.7301]],
        [[10.5520],
         [ 9.3894],
         [ 9.4159],
         ...,
         [10.5409],
         [ 9.5807],
         [ 9.4504]],
        [[10.9185],
         [ 9.8083],
         [ 9.8016],
         ...,
         [10.9033],
         [10.2046],
         [ 9.9453]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0144, 0.9940, 0.9918,  ..., 1.0139, 1.0157, 1.0018],
        [0.9821, 0.9567, 0.9576,  ..., 0.9819, 0.9590, 0.9573],
        [0.9784, 0.9525, 0.9537,  ..., 0.9783, 0.9529, 0.9524],
        ...,
        [0.9739, 0.9475, 0.9490,  ..., 0.9738, 0.9456, 0.9465],
        [0.9856, 0.9607, 0.9612,  ..., 0.9854, 0.9648, 0.9620],
        [0.9935, 0.9697, 0.9695,  ..., 0.9931, 0.9782, 0.9726]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9154],
         [19.9330],
         [23.2213],
         ...,
         [19.0540],
         [24.8398],
         [22.4153]],
        [[15.3875],
         [13.8657],
         [14.8619],
         ...,
         [16.9046],
         [15.0712],
         [14.6026]],
        [[15.3233],
         [13.2565],
         [14.0632],
         ...,
         [16.6559],
         [14.1673],
         [13.8481]],
        ...,
        [[15.2441],
         [12.5375],
         [13.1312],
         ...,
         [16.3524],
         [13.1203],
         [12.9656]],
        [[15.4469],
         [14.4530],
         [15.6396],
         ...,
         [17.1374],
         [15.9569],
         [15.3356]],
        [[15.5789],
         [15.8384],
         [17.5026],
         ...,
         [17.6626],
         [18.0998],
         [17.0858]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9974, 1.0628, 1.1163,  ..., 1.0485, 1.1426, 1.1032],
        [0.9888, 0.9641, 0.9803,  ..., 1.0135, 0.9837, 0.9761],
        [0.9878, 0.9542, 0.9673,  ..., 1.0095, 0.9690, 0.9638],
        ...,
        [0.9865, 0.9425, 0.9522,  ..., 1.0045, 0.9520, 0.9495],
        [0.9898, 0.9736, 0.9929,  ..., 1.0173, 0.9981, 0.9880],
        [0.9920, 0.9962, 1.0233,  ..., 1.0259, 1.0330, 1.0165]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0430],
         [25.7419],
         [25.6357],
         ...,
         [12.4901],
         [25.6833],
         [26.2648]],
        [[ 9.3314],
         [23.9315],
         [23.6352],
         ...,
         [ 9.5678],
         [23.8482],
         [24.5011]],
        [[ 8.9525],
         [23.7164],
         [23.3986],
         ...,
         [ 9.2573],
         [23.6303],
         [24.2911]],
        ...,
        [[ 8.5036],
         [23.4522],
         [23.1084],
         ...,
         [ 8.8859],
         [23.3627],
         [24.0331]],
        [[ 9.6955],
         [24.1318],
         [23.8557],
         ...,
         [ 9.8638],
         [24.0511],
         [24.6965]],
        [[10.5498],
         [24.5797],
         [24.3495],
         ...,
         [10.5496],
         [24.5050],
         [25.1332]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1470, 1.1456,  ..., 0.9719, 1.1463, 1.1539],
        [0.9302, 1.1231, 1.1192,  ..., 0.9333, 1.1220, 1.1306],
        [0.9252, 1.1203, 1.1161,  ..., 0.9292, 1.1191, 1.1279],
        ...,
        [0.9192, 1.1168, 1.1122,  ..., 0.9243, 1.1156, 1.1244],
        [0.9350, 1.1258, 1.1221,  ..., 0.9372, 1.1247, 1.1332],
        [0.9463, 1.1317, 1.1286,  ..., 0.9463, 1.1307, 1.1390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0936],
         [10.9835],
         [10.8695],
         ...,
         [12.1321],
         [11.1882],
         [11.1817]],
        [[10.4631],
         [ 9.2566],
         [ 9.2219],
         ...,
         [10.4836],
         [ 9.2098],
         [ 9.2083]],
        [[10.2772],
         [ 9.0627],
         [ 9.0362],
         ...,
         [10.2958],
         [ 8.9906],
         [ 8.9896]],
        ...,
        [[10.0511],
         [ 8.8276],
         [ 8.8108],
         ...,
         [10.0674],
         [ 8.7257],
         [ 8.7254]],
        [[10.6377],
         [ 9.4394],
         [ 9.3968],
         ...,
         [10.6601],
         [ 9.4169],
         [ 9.4149]],
        [[11.0334],
         [ 9.8555],
         [ 9.7945],
         ...,
         [11.0600],
         [ 9.8905],
         [ 9.8875]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9937, 0.9699, 0.9674,  ..., 0.9945, 0.9743, 0.9741],
        [0.9587, 0.9328, 0.9321,  ..., 0.9591, 0.9318, 0.9318],
        [0.9547, 0.9287, 0.9281,  ..., 0.9551, 0.9271, 0.9271],
        ...,
        [0.9499, 0.9236, 0.9233,  ..., 0.9502, 0.9214, 0.9214],
        [0.9624, 0.9368, 0.9358,  ..., 0.9629, 0.9363, 0.9362],
        [0.9709, 0.9457, 0.9444,  ..., 0.9715, 0.9464, 0.9464]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.2421],
         [23.0816],
         [23.0762],
         ...,
         [19.4678],
         [23.7978],
         [23.1355]],
        [[14.7657],
         [14.6028],
         [14.7853],
         ...,
         [16.7092],
         [14.8436],
         [14.7341]],
        [[14.7078],
         [13.7982],
         [13.9926],
         ...,
         [16.3961],
         [14.0012],
         [13.9337]],
        ...,
        [[14.6362],
         [12.8610],
         [13.0675],
         ...,
         [16.0156],
         [13.0217],
         [13.0004]],
        [[14.8194],
         [15.3872],
         [15.5570],
         ...,
         [17.0035],
         [15.6664],
         [15.5138]],
        [[14.9385],
         [17.2704],
         [17.4054],
         ...,
         [17.6716],
         [17.6468],
         [17.3835]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9868, 1.1144, 1.1143,  ..., 1.0556, 1.1260, 1.1152],
        [0.9791, 0.9764, 0.9794,  ..., 1.0107, 0.9804, 0.9786],
        [0.9782, 0.9634, 0.9665,  ..., 1.0056, 0.9667, 0.9656],
        ...,
        [0.9770, 0.9481, 0.9515,  ..., 0.9994, 0.9507, 0.9504],
        [0.9800, 0.9892, 0.9920,  ..., 1.0155, 0.9937, 0.9913],
        [0.9819, 1.0198, 1.0220,  ..., 1.0264, 1.0260, 1.0217]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0307],
         [25.8852],
         [25.5606],
         ...,
         [12.3602],
         [25.7282],
         [26.1690]],
        [[ 9.3360],
         [23.9546],
         [23.6339],
         ...,
         [ 9.6343],
         [23.6596],
         [24.4052]],
        [[ 8.9585],
         [23.7258],
         [23.4057],
         ...,
         [ 9.3417],
         [23.4154],
         [24.1953]],
        ...,
        [[ 8.5112],
         [23.4449],
         [23.1255],
         ...,
         [ 8.9909],
         [23.1157],
         [23.9373]],
        [[ 9.6987],
         [24.1677],
         [23.8465],
         ...,
         [ 9.9126],
         [23.8873],
         [24.6006]],
        [[10.5495],
         [24.6448],
         [24.3225],
         ...,
         [10.5554],
         [24.3976],
         [25.0373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9791, 1.1490, 1.1447,  ..., 0.9702, 1.1469, 1.1527],
        [0.9303, 1.1235, 1.1192,  ..., 0.9342, 1.1196, 1.1294],
        [0.9253, 1.1204, 1.1162,  ..., 0.9303, 1.1163, 1.1266],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9257, 1.1124, 1.1232],
        [0.9351, 1.1263, 1.1220,  ..., 0.9379, 1.1226, 1.1320],
        [0.9463, 1.1326, 1.1283,  ..., 0.9464, 1.1293, 1.1378]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1269],
         [11.0045],
         [10.8759],
         ...,
         [12.1749],
         [11.1920],
         [11.1692]],
        [[10.4807],
         [ 9.2675],
         [ 9.2182],
         ...,
         [10.5112],
         [ 9.2264],
         [ 9.2046]],
        [[10.2931],
         [ 9.0725],
         [ 9.0315],
         ...,
         [10.3217],
         [ 9.0084],
         [ 8.9868]],
        ...,
        [[10.0649],
         [ 8.8361],
         [ 8.8049],
         ...,
         [10.0913],
         [ 8.7450],
         [ 8.7236]],
        [[10.6569],
         [ 9.4512],
         [ 9.3941],
         ...,
         [10.6892],
         [ 9.4323],
         [ 9.4104]],
        [[11.0563],
         [ 9.8697],
         [ 9.7942],
         ...,
         [11.0927],
         [ 9.9031],
         [ 9.8809]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9902, 0.9662, 0.9634,  ..., 0.9913, 0.9702, 0.9697],
        [0.9549, 0.9289, 0.9279,  ..., 0.9556, 0.9280, 0.9276],
        [0.9509, 0.9247, 0.9238,  ..., 0.9515, 0.9234, 0.9229],
        ...,
        [0.9460, 0.9197, 0.9190,  ..., 0.9466, 0.9177, 0.9172],
        [0.9587, 0.9328, 0.9316,  ..., 0.9594, 0.9324, 0.9320],
        [0.9673, 0.9418, 0.9402,  ..., 0.9680, 0.9425, 0.9421]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1282],
         [23.5452],
         [23.0505],
         ...,
         [19.5006],
         [23.6008],
         [23.2563]],
        [[14.6639],
         [14.7287],
         [14.7720],
         ...,
         [16.6826],
         [14.8015],
         [14.7565]],
        [[14.6074],
         [13.8978],
         [13.9804],
         ...,
         [16.3633],
         [13.9709],
         [13.9485]],
        ...,
        [[14.5376],
         [12.9313],
         [13.0565],
         ...,
         [15.9756],
         [13.0045],
         [13.0069]],
        [[14.7162],
         [15.5399],
         [15.5426],
         ...,
         [16.9828],
         [15.6122],
         [15.5439]],
        [[14.8324],
         [17.4916],
         [17.3883],
         ...,
         [17.6646],
         [17.5616],
         [17.4334]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9849, 1.1218, 1.1138,  ..., 1.0560, 1.1227, 1.1171],
        [0.9774, 0.9784, 0.9791,  ..., 1.0102, 0.9796, 0.9789],
        [0.9764, 0.9649, 0.9662,  ..., 1.0050, 0.9661, 0.9657],
        ...,
        [0.9753, 0.9492, 0.9512,  ..., 0.9987, 0.9504, 0.9504],
        [0.9782, 0.9916, 0.9916,  ..., 1.0151, 0.9928, 0.9917],
        [0.9801, 1.0233, 1.0217,  ..., 1.0262, 1.0245, 1.0224]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0290],
         [25.9038],
         [25.5500],
         ...,
         [12.3428],
         [25.7341],
         [26.1557]],
        [[ 9.3367],
         [23.9578],
         [23.6337],
         ...,
         [ 9.6436],
         [23.6338],
         [24.3920]],
        [[ 8.9594],
         [23.7273],
         [23.4067],
         ...,
         [ 9.3535],
         [23.3861],
         [24.1821]],
        ...,
        [[ 8.5122],
         [23.4443],
         [23.1280],
         ...,
         [ 9.0055],
         [23.0821],
         [23.9241]],
        [[ 9.6991],
         [24.1726],
         [23.8452],
         ...,
         [ 9.9195],
         [23.8649],
         [24.5874]],
        [[10.5494],
         [24.6534],
         [24.3187],
         ...,
         [10.5564],
         [24.3829],
         [25.0241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9700, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1192, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1159, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1119, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1223, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1376]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1314],
         [11.0077],
         [10.8768],
         ...,
         [12.1805],
         [11.1958],
         [11.1678]],
        [[10.4832],
         [ 9.2690],
         [ 9.2177],
         ...,
         [10.5153],
         [ 9.2295],
         [ 9.2042]],
        [[10.2954],
         [ 9.0739],
         [ 9.0308],
         ...,
         [10.3257],
         [ 9.0114],
         [ 8.9864]],
        ...,
        [[10.0670],
         [ 8.8373],
         [ 8.8041],
         ...,
         [10.0951],
         [ 8.7479],
         [ 8.7234]],
        [[10.6596],
         [ 9.4529],
         [ 9.3938],
         ...,
         [10.6935],
         [ 9.4355],
         [ 9.4098]],
        [[11.0595],
         [ 9.8718],
         [ 9.7941],
         ...,
         [11.0974],
         [ 9.9064],
         [ 9.8801]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9898, 0.9657, 0.9629,  ..., 0.9909, 0.9698, 0.9692],
        [0.9545, 0.9284, 0.9273,  ..., 0.9552, 0.9276, 0.9270],
        [0.9504, 0.9243, 0.9233,  ..., 0.9511, 0.9229, 0.9224],
        ...,
        [0.9455, 0.9192, 0.9185,  ..., 0.9461, 0.9173, 0.9167],
        [0.9583, 0.9324, 0.9311,  ..., 0.9590, 0.9320, 0.9315],
        [0.9668, 0.9414, 0.9397,  ..., 0.9676, 0.9421, 0.9415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1128],
         [23.6069],
         [23.0469],
         ...,
         [19.5046],
         [23.5733],
         [23.2728]],
        [[14.6500],
         [14.7459],
         [14.7702],
         ...,
         [16.6790],
         [14.7957],
         [14.7595]],
        [[14.5937],
         [13.9114],
         [13.9787],
         ...,
         [16.3589],
         [13.9667],
         [13.9505]],
        ...,
        [[14.5241],
         [12.9411],
         [13.0550],
         ...,
         [15.9703],
         [13.0021],
         [13.0078]],
        [[14.7021],
         [15.5606],
         [15.5406],
         ...,
         [16.9800],
         [15.6046],
         [15.5480]],
        [[14.8179],
         [17.5213],
         [17.3860],
         ...,
         [17.6636],
         [17.5496],
         [17.4403]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9847, 1.1228, 1.1137,  ..., 1.0561, 1.1223, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9651, 0.9662,  ..., 1.0049, 0.9660, 0.9657],
        ...,
        [0.9751, 0.9493, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9780, 0.9919, 0.9916,  ..., 1.0150, 0.9927, 0.9917],
        [0.9799, 1.0238, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9067],
         [25.5483],
         ...,
         [12.3400],
         [25.7350],
         [26.1536]],
        [[ 9.3368],
         [23.9583],
         [23.6337],
         ...,
         [ 9.6451],
         [23.6298],
         [24.3899]],
        [[ 8.9595],
         [23.7275],
         [23.4069],
         ...,
         [ 9.3554],
         [23.3814],
         [24.1800]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1284],
         ...,
         [ 9.0078],
         [23.0768],
         [23.9220]],
        [[ 9.6992],
         [24.1733],
         [23.8450],
         ...,
         [ 9.9206],
         [23.8614],
         [24.5853]],
        [[10.5494],
         [24.6547],
         [24.3181],
         ...,
         [10.5566],
         [24.3805],
         [25.0220]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1159, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1321],
         [11.0083],
         [10.8770],
         ...,
         [12.1814],
         [11.1965],
         [11.1675]],
        [[10.4836],
         [ 9.2693],
         [ 9.2177],
         ...,
         [10.5160],
         [ 9.2300],
         [ 9.2041]],
        [[10.2958],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3263],
         [ 9.0119],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0957],
         [ 8.7484],
         [ 8.7233]],
        [[10.6601],
         [ 9.4532],
         [ 9.3937],
         ...,
         [10.6942],
         [ 9.4360],
         [ 9.4097]],
        [[11.0600],
         [ 9.8721],
         [ 9.7941],
         ...,
         [11.0981],
         [ 9.9070],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9898, 0.9657, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9284, 0.9273,  ..., 0.9551, 0.9275, 0.9270],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9167],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9668, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1103],
         [23.6167],
         [23.0463],
         ...,
         [19.5052],
         [23.5690],
         [23.2754]],
        [[14.6478],
         [14.7486],
         [14.7699],
         ...,
         [16.6784],
         [14.7948],
         [14.7600]],
        [[14.5915],
         [13.9136],
         [13.9784],
         ...,
         [16.3583],
         [13.9661],
         [13.9508]],
        ...,
        [[14.5220],
         [12.9427],
         [13.0548],
         ...,
         [15.9694],
         [13.0017],
         [13.0079]],
        [[14.6999],
         [15.5639],
         [15.5403],
         ...,
         [16.9795],
         [15.6034],
         [15.5487]],
        [[14.8156],
         [17.5260],
         [17.3856],
         ...,
         [17.6634],
         [17.5478],
         [17.4413]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9651, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9071],
         [25.5480],
         ...,
         [12.3396],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6453],
         [23.6291],
         [24.3896]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3807],
         [24.1797]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1284],
         ...,
         [ 9.0082],
         [23.0760],
         [23.9217]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9207],
         [23.8608],
         [24.5850]],
        [[10.5494],
         [24.6549],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0217]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1322],
         [11.0083],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2177],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3264],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6601],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9284, 0.9272,  ..., 0.9551, 0.9275, 0.9270],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9668, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6182],
         [23.0462],
         ...,
         [19.5054],
         [23.5683],
         [23.2758]],
        [[14.6474],
         [14.7490],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5912],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9660],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9429],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6996],
         [15.5644],
         [15.5403],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8153],
         [17.5268],
         [17.3855],
         ...,
         [17.6633],
         [17.5475],
         [17.4415]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3806],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0082],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1322],
         [11.0083],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3264],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9668, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5403],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0287],
         [25.9072],
         [25.5480],
         ...,
         [12.3395],
         [25.7352],
         [26.1532]],
        [[ 9.3368],
         [23.9584],
         [23.6337],
         ...,
         [ 9.6454],
         [23.6290],
         [24.3895]],
        [[ 8.9595],
         [23.7276],
         [23.4069],
         ...,
         [ 9.3557],
         [23.3805],
         [24.1796]],
        ...,
        [[ 8.5124],
         [23.4442],
         [23.1285],
         ...,
         [ 9.0083],
         [23.0758],
         [23.9216]],
        [[ 9.6992],
         [24.1735],
         [23.8450],
         ...,
         [ 9.9208],
         [23.8607],
         [24.5849]],
        [[10.5494],
         [24.6550],
         [24.3180],
         ...,
         [10.5566],
         [24.3801],
         [25.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9790, 1.1492, 1.1445,  ..., 0.9699, 1.1470, 1.1525],
        [0.9303, 1.1235, 1.1192,  ..., 0.9343, 1.1191, 1.1292],
        [0.9253, 1.1204, 1.1162,  ..., 0.9305, 1.1158, 1.1264],
        ...,
        [0.9194, 1.1167, 1.1125,  ..., 0.9259, 1.1118, 1.1230],
        [0.9350, 1.1263, 1.1220,  ..., 0.9380, 1.1222, 1.1318],
        [0.9463, 1.1327, 1.1282,  ..., 0.9464, 1.1291, 1.1375]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1323],
         [11.0084],
         [10.8770],
         ...,
         [12.1816],
         [11.1966],
         [11.1675]],
        [[10.4837],
         [ 9.2693],
         [ 9.2176],
         ...,
         [10.5161],
         [ 9.2301],
         [ 9.2041]],
        [[10.2959],
         [ 9.0741],
         [ 9.0307],
         ...,
         [10.3265],
         [ 9.0120],
         [ 8.9864]],
        ...,
        [[10.0674],
         [ 8.8375],
         [ 8.8039],
         ...,
         [10.0958],
         [ 8.7485],
         [ 8.7233]],
        [[10.6602],
         [ 9.4533],
         [ 9.3937],
         ...,
         [10.6943],
         [ 9.4361],
         [ 9.4097]],
        [[11.0601],
         [ 9.8722],
         [ 9.7941],
         ...,
         [11.0982],
         [ 9.9071],
         [ 9.8800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9897, 0.9656, 0.9628,  ..., 0.9908, 0.9697, 0.9691],
        [0.9544, 0.9283, 0.9272,  ..., 0.9551, 0.9275, 0.9269],
        [0.9504, 0.9242, 0.9232,  ..., 0.9510, 0.9228, 0.9223],
        ...,
        [0.9455, 0.9191, 0.9184,  ..., 0.9461, 0.9172, 0.9166],
        [0.9582, 0.9323, 0.9310,  ..., 0.9589, 0.9319, 0.9314],
        [0.9667, 0.9413, 0.9396,  ..., 0.9676, 0.9420, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1099],
         [23.6185],
         [23.0462],
         ...,
         [19.5054],
         [23.5681],
         [23.2759]],
        [[14.6474],
         [14.7491],
         [14.7698],
         ...,
         [16.6783],
         [14.7946],
         [14.7601]],
        [[14.5911],
         [13.9140],
         [13.9784],
         ...,
         [16.3581],
         [13.9659],
         [13.9509]],
        ...,
        [[14.5216],
         [12.9430],
         [13.0547],
         ...,
         [15.9693],
         [13.0017],
         [13.0079]],
        [[14.6995],
         [15.5645],
         [15.5402],
         ...,
         [16.9794],
         [15.6032],
         [15.5488]],
        [[14.8152],
         [17.5269],
         [17.3855],
         ...,
         [17.6633],
         [17.5474],
         [17.4416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9846, 1.1230, 1.1137,  ..., 1.0561, 1.1222, 1.1174],
        [0.9771, 0.9787, 0.9791,  ..., 1.0101, 0.9795, 0.9789],
        [0.9762, 0.9652, 0.9662,  ..., 1.0049, 0.9660, 0.9658],
        ...,
        [0.9750, 0.9494, 0.9512,  ..., 0.9986, 0.9503, 0.9504],
        [0.9779, 0.9920, 0.9916,  ..., 1.0150, 0.9926, 0.9917],
        [0.9798, 1.0239, 1.0216,  ..., 1.0261, 1.0243, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0815],
         [25.8932],
         [25.5490],
         ...,
         [12.3920],
         [25.7798],
         [26.1394]],
        [[ 9.3173],
         [23.9319],
         [23.6296],
         ...,
         [ 9.6176],
         [23.7207],
         [24.3741]],
        [[ 8.9340],
         [23.6997],
         [23.4022],
         ...,
         [ 9.3205],
         [23.4775],
         [24.1641]],
        ...,
        [[ 8.4801],
         [23.4146],
         [23.1231],
         ...,
         [ 8.9645],
         [23.1791],
         [23.9059]],
        [[ 9.6857],
         [24.1484],
         [23.8414],
         ...,
         [ 9.9002],
         [23.9474],
         [24.5697]],
        [[10.5511],
         [24.6328],
         [24.3157],
         ...,
         [10.5537],
         [24.4555],
         [25.0068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1486, 1.1440,  ..., 0.9701, 1.1471, 1.1518],
        [0.9295, 1.1226, 1.1186,  ..., 0.9335, 1.1198, 1.1285],
        [0.9244, 1.1196, 1.1156,  ..., 0.9295, 1.1166, 1.1257],
        ...,
        [0.9184, 1.1158, 1.1119,  ..., 0.9248, 1.1127, 1.1223],
        [0.9344, 1.1255, 1.1214,  ..., 0.9372, 1.1228, 1.1311],
        [0.9458, 1.1319, 1.1277,  ..., 0.9458, 1.1296, 1.1368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1304],
         [11.0070],
         [10.8820],
         ...,
         [12.1951],
         [11.1642],
         [11.1425]],
        [[10.4826],
         [ 9.2659],
         [ 9.2169],
         ...,
         [10.5266],
         [ 9.2312],
         [ 9.2035]],
        [[10.2949],
         [ 9.0705],
         [ 9.0294],
         ...,
         [10.3366],
         [ 9.0165],
         [ 8.9882]],
        ...,
        [[10.0665],
         [ 8.8337],
         [ 8.8019],
         ...,
         [10.1055],
         [ 8.7569],
         [ 8.7281]],
        [[10.6590],
         [ 9.4501],
         [ 9.3935],
         ...,
         [10.7051],
         [ 9.4340],
         [ 9.4068]],
        [[11.0588],
         [ 9.8695],
         [ 9.7953],
         ...,
         [11.1098],
         [ 9.8973],
         [ 9.8715]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9900, 0.9659, 0.9632,  ..., 0.9914, 0.9693, 0.9688],
        [0.9546, 0.9286, 0.9275,  ..., 0.9556, 0.9278, 0.9272],
        [0.9506, 0.9244, 0.9235,  ..., 0.9515, 0.9232, 0.9226],
        ...,
        [0.9457, 0.9193, 0.9186,  ..., 0.9466, 0.9176, 0.9170],
        [0.9584, 0.9325, 0.9313,  ..., 0.9594, 0.9322, 0.9316],
        [0.9670, 0.9415, 0.9399,  ..., 0.9681, 0.9421, 0.9415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1140],
         [23.6020],
         [23.0521],
         ...,
         [19.5743],
         [23.5530],
         [23.2759]],
        [[14.6508],
         [14.7514],
         [14.7656],
         ...,
         [16.7339],
         [14.8051],
         [14.7647]],
        [[14.5944],
         [13.9177],
         [13.9735],
         ...,
         [16.4123],
         [13.9782],
         [13.9558]],
        ...,
        [[14.5248],
         [12.9481],
         [13.0491],
         ...,
         [16.0217],
         [13.0158],
         [13.0131]],
        [[14.7030],
         [15.5655],
         [15.5368],
         ...,
         [17.0365],
         [15.6119],
         [15.5531]],
        [[14.8188],
         [17.5242],
         [17.3840],
         ...,
         [17.7236],
         [17.5512],
         [17.4450]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9848, 1.1229, 1.1139,  ..., 1.0574, 1.1221, 1.1176],
        [0.9773, 0.9789, 0.9791,  ..., 1.0112, 0.9798, 0.9791],
        [0.9764, 0.9654, 0.9663,  ..., 1.0059, 0.9663, 0.9660],
        ...,
        [0.9752, 0.9496, 0.9512,  ..., 0.9996, 0.9507, 0.9506],
        [0.9781, 0.9922, 0.9917,  ..., 1.0161, 0.9929, 0.9920],
        [0.9800, 1.0240, 1.0217,  ..., 1.0273, 1.0245, 1.0227]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0953],
         [25.8728],
         [25.5534],
         ...,
         [12.4255],
         [25.8458],
         [26.1106]],
        [[ 9.3123],
         [23.8934],
         [23.6275],
         ...,
         [ 9.6003],
         [23.8522],
         [24.3391]],
        [[ 8.9274],
         [23.6591],
         [23.3994],
         ...,
         [ 9.2986],
         [23.6164],
         [24.1284]],
        ...,
        [[ 8.4718],
         [23.3715],
         [23.1193],
         ...,
         [ 8.9372],
         [23.3269],
         [23.8693]],
        [[ 9.6823],
         [24.1117],
         [23.8400],
         ...,
         [ 9.8875],
         [24.0720],
         [24.5353]],
        [[10.5516],
         [24.6006],
         [24.3158],
         ...,
         [10.5521],
         [24.5643],
         [24.9739]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1513],
        [0.9293, 1.1220, 1.1184,  ..., 0.9331, 1.1214, 1.1278],
        [0.9242, 1.1189, 1.1154,  ..., 0.9291, 1.1183, 1.1251],
        ...,
        [0.9181, 1.1151, 1.1117,  ..., 0.9243, 1.1145, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9369, 1.1243, 1.1304],
        [0.9456, 1.1313, 1.1275,  ..., 0.9456, 1.1308, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1248],
         [11.0045],
         [10.8903],
         ...,
         [12.1981],
         [11.1164],
         [11.1037]],
        [[10.4795],
         [ 9.2607],
         [ 9.2159],
         ...,
         [10.5289],
         [ 9.2339],
         [ 9.2036]],
        [[10.2920],
         [ 9.0650],
         [ 9.0274],
         ...,
         [10.3389],
         [ 9.0243],
         [ 8.9923]],
        ...,
        [[10.0639],
         [ 8.8278],
         [ 8.7988],
         ...,
         [10.1078],
         [ 8.7706],
         [ 8.7367]],
        [[10.6556],
         [ 9.4451],
         [ 9.3934],
         ...,
         [10.7075],
         [ 9.4318],
         [ 9.4032]],
        [[11.0548],
         [ 9.8651],
         [ 9.7973],
         ...,
         [11.1123],
         [ 9.8836],
         [ 9.8590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9639,  ..., 0.9920, 0.9688, 0.9685],
        [0.9551, 0.9290, 0.9280,  ..., 0.9562, 0.9284, 0.9277],
        [0.9511, 0.9248, 0.9240,  ..., 0.9521, 0.9239, 0.9232],
        ...,
        [0.9462, 0.9197, 0.9191,  ..., 0.9471, 0.9185, 0.9177],
        [0.9589, 0.9329, 0.9318,  ..., 0.9600, 0.9326, 0.9320],
        [0.9674, 0.9419, 0.9405,  ..., 0.9687, 0.9423, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1212],
         [23.5731],
         [23.0623],
         ...,
         [19.5404],
         [23.5280],
         [23.2760]],
        [[14.6594],
         [14.7560],
         [14.7593],
         ...,
         [16.7146],
         [14.8200],
         [14.7713]],
        [[14.6033],
         [13.9247],
         [13.9660],
         ...,
         [16.3945],
         [13.9959],
         [13.9627]],
        ...,
        [[14.5339],
         [12.9577],
         [13.0403],
         ...,
         [16.0057],
         [13.0364],
         [13.0205]],
        [[14.7115],
         [15.5676],
         [15.5317],
         ...,
         [17.0157],
         [15.6239],
         [15.5592]],
        [[14.8270],
         [17.5198],
         [17.3821],
         ...,
         [17.6993],
         [17.5555],
         [17.4499]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1227, 1.1143,  ..., 1.0571, 1.1219, 1.1178],
        [0.9777, 0.9792, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9657, 0.9664,  ..., 1.0059, 0.9669, 0.9663],
        ...,
        [0.9756, 0.9500, 0.9513,  ..., 0.9996, 0.9513, 0.9510],
        [0.9785, 0.9924, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1276],
         [25.8015],
         [25.5816],
         ...,
         [12.5459],
         [26.0985],
         [25.9714]],
        [[ 9.3006],
         [23.7554],
         [23.6366],
         ...,
         [ 9.5407],
         [24.3118],
         [24.1587]],
        [[ 8.9122],
         [23.5137],
         [23.4064],
         ...,
         [ 9.2227],
         [24.0993],
         [23.9433]],
        ...,
        [[ 8.4526],
         [23.2171],
         [23.1237],
         ...,
         [ 8.8428],
         [23.8382],
         [23.6786]],
        [[ 9.6743],
         [23.9808],
         [23.8512],
         ...,
         [ 9.8440],
         [24.5096],
         [24.3593]],
        [[10.5527],
         [24.4857],
         [24.3316],
         ...,
         [10.5478],
         [24.9519],
         [24.8078]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1468, 1.1439,  ..., 0.9716, 1.1507, 1.1490],
        [0.9287, 1.1197, 1.1182,  ..., 0.9319, 1.1271, 1.1251],
        [0.9236, 1.1165, 1.1151,  ..., 0.9277, 1.1243, 1.1222],
        ...,
        [0.9175, 1.1126, 1.1114,  ..., 0.9227, 1.1208, 1.1187],
        [0.9336, 1.1227, 1.1210,  ..., 0.9359, 1.1297, 1.1277],
        [0.9453, 1.1294, 1.1273,  ..., 0.9452, 1.1355, 1.1336]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1037],
         [10.9976],
         [10.9260],
         ...,
         [12.1979],
         [10.9627],
         [10.9703]],
        [[10.4682],
         [ 9.2414],
         [ 9.2134],
         ...,
         [10.5288],
         [ 9.2560],
         [ 9.2171]],
        [[10.2818],
         [ 9.0445],
         [ 9.0210],
         ...,
         [10.3387],
         [ 9.0641],
         [ 9.0206]],
        ...,
        [[10.0550],
         [ 8.8059],
         [ 8.7877],
         ...,
         [10.1076],
         [ 8.8315],
         [ 8.7824]],
        [[10.6433],
         [ 9.4270],
         [ 9.3946],
         ...,
         [10.7074],
         [ 9.4368],
         [ 9.4024]],
        [[11.0402],
         [ 9.8498],
         [ 9.8074],
         ...,
         [11.1122],
         [ 9.8482],
         [ 9.8245]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9927, 0.9690, 0.9675,  ..., 0.9948, 0.9683, 0.9684],
        [0.9577, 0.9314, 0.9308,  ..., 0.9590, 0.9317, 0.9308],
        [0.9537, 0.9271, 0.9266,  ..., 0.9549, 0.9276, 0.9266],
        ...,
        [0.9488, 0.9220, 0.9216,  ..., 0.9499, 0.9226, 0.9215],
        [0.9614, 0.9353, 0.9347,  ..., 0.9628, 0.9356, 0.9348],
        [0.9699, 0.9444, 0.9435,  ..., 0.9715, 0.9444, 0.9439]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1681],
         [23.4483],
         [23.1054],
         ...,
         [19.2992],
         [23.4255],
         [23.2764]],
        [[14.7096],
         [14.7779],
         [14.7354],
         ...,
         [16.5654],
         [14.8709],
         [14.7943]],
        [[14.6538],
         [13.9570],
         [13.9374],
         ...,
         [16.2551],
         [14.0574],
         [13.9872]],
        ...,
        [[14.5849],
         [13.0013],
         [13.0066],
         ...,
         [15.8780],
         [13.1094],
         [13.0463]],
        [[14.7613],
         [15.5785],
         [15.5127],
         ...,
         [16.8571],
         [15.6636],
         [15.5807]],
        [[14.8760],
         [17.5021],
         [17.3762],
         ...,
         [17.5191],
         [17.5655],
         [17.4673]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9871, 1.1218, 1.1162,  ..., 1.0543, 1.1214, 1.1190],
        [0.9796, 0.9807, 0.9801,  ..., 1.0098, 0.9823, 0.9810],
        [0.9787, 0.9674, 0.9671,  ..., 1.0048, 0.9690, 0.9679],
        ...,
        [0.9776, 0.9519, 0.9519,  ..., 0.9986, 0.9536, 0.9526],
        [0.9805, 0.9938, 0.9927,  ..., 1.0146, 0.9952, 0.9938],
        [0.9823, 1.0251, 1.0230,  ..., 1.0253, 1.0261, 1.0245]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1008],
         [25.8604],
         [25.5582],
         ...,
         [12.4457],
         [25.8860],
         [26.0866]],
        [[ 9.3103],
         [23.8698],
         [23.6290],
         ...,
         [ 9.5900],
         [23.9300],
         [24.3083]],
        [[ 8.9248],
         [23.6342],
         [23.4006],
         ...,
         [ 9.2855],
         [23.6984],
         [24.0967]],
        ...,
        [[ 8.4685],
         [23.3452],
         [23.1201],
         ...,
         [ 8.9210],
         [23.4140],
         [23.8367]],
        [[ 9.6809],
         [24.0893],
         [23.8419],
         ...,
         [ 9.8800],
         [24.1458],
         [24.5052]],
        [[10.5517],
         [24.5808],
         [24.3185],
         ...,
         [10.5513],
         [24.6290],
         [24.9454]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1479, 1.1439,  ..., 0.9706, 1.1482, 1.1509],
        [0.9292, 1.1216, 1.1184,  ..., 0.9329, 1.1224, 1.1274],
        [0.9241, 1.1185, 1.1154,  ..., 0.9288, 1.1193, 1.1246],
        ...,
        [0.9180, 1.1146, 1.1117,  ..., 0.9240, 1.1155, 1.1211],
        [0.9341, 1.1245, 1.1212,  ..., 0.9367, 1.1252, 1.1300],
        [0.9456, 1.1310, 1.1275,  ..., 0.9456, 1.1316, 1.1358]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1212],
         [11.0026],
         [10.8960],
         ...,
         [12.1981],
         [11.0868],
         [11.0784]],
        [[10.4775],
         [ 9.2572],
         [ 9.2154],
         ...,
         [10.5289],
         [ 9.2362],
         [ 9.2045]],
        [[10.2902],
         [ 9.0613],
         [ 9.0263],
         ...,
         [10.3389],
         [ 9.0298],
         [ 8.9957]],
        ...,
        [[10.0623],
         [ 8.8240],
         [ 8.7969],
         ...,
         [10.1077],
         [ 8.7799],
         [ 8.7432]],
        [[10.6534],
         [ 9.4417],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4310],
         [ 9.4015]],
        [[11.0523],
         [ 9.8621],
         [ 9.7989],
         ...,
         [11.1123],
         [ 9.8756],
         [ 9.8513]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9907, 0.9667, 0.9645,  ..., 0.9924, 0.9686, 0.9684],
        [0.9555, 0.9293, 0.9284,  ..., 0.9566, 0.9289, 0.9282],
        [0.9515, 0.9251, 0.9244,  ..., 0.9525, 0.9244, 0.9237],
        ...,
        [0.9466, 0.9200, 0.9194,  ..., 0.9476, 0.9191, 0.9183],
        [0.9593, 0.9333, 0.9322,  ..., 0.9604, 0.9330, 0.9324],
        [0.9678, 0.9423, 0.9409,  ..., 0.9691, 0.9426, 0.9421]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1291],
         [23.5518],
         [23.0696],
         ...,
         [19.4999],
         [23.5106],
         [23.2761]],
        [[14.6680],
         [14.7597],
         [14.7552],
         ...,
         [16.6888],
         [14.8286],
         [14.7752]],
        [[14.6119],
         [13.9302],
         [13.9611],
         ...,
         [16.3703],
         [14.0062],
         [13.9669]],
        ...,
        [[14.5426],
         [12.9650],
         [13.0345],
         ...,
         [15.9834],
         [13.0487],
         [13.0249]],
        [[14.7200],
         [15.5694],
         [15.5284],
         ...,
         [16.9884],
         [15.6306],
         [15.5629]],
        [[14.8353],
         [17.5168],
         [17.3811],
         ...,
         [17.6686],
         [17.5572],
         [17.4529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 1.1225, 1.1147,  ..., 1.0566, 1.1218, 1.1180],
        [0.9780, 0.9795, 0.9794,  ..., 1.0109, 0.9806, 0.9798],
        [0.9771, 0.9660, 0.9665,  ..., 1.0057, 0.9672, 0.9666],
        ...,
        [0.9760, 0.9503, 0.9514,  ..., 0.9994, 0.9517, 0.9513],
        [0.9789, 0.9927, 0.9920,  ..., 1.0157, 0.9937, 0.9926],
        [0.9807, 1.0243, 1.0221,  ..., 1.0268, 1.0250, 1.0233]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0965],
         [25.8703],
         [25.5544],
         ...,
         [12.4296],
         [25.8539],
         [26.1056]],
        [[ 9.3119],
         [23.8885],
         [23.6278],
         ...,
         [ 9.5982],
         [23.8681],
         [24.3328]],
        [[ 8.9269],
         [23.6540],
         [23.3996],
         ...,
         [ 9.2959],
         [23.6332],
         [24.1219]],
        ...,
        [[ 8.4712],
         [23.3661],
         [23.1195],
         ...,
         [ 8.9339],
         [23.3448],
         [23.8626]],
        [[ 9.6820],
         [24.1071],
         [23.8404],
         ...,
         [ 9.8860],
         [24.0871],
         [24.5292]],
        [[10.5516],
         [24.5965],
         [24.3164],
         ...,
         [10.5519],
         [24.5775],
         [24.9681]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1277],
        [0.9241, 1.1188, 1.1154,  ..., 0.9290, 1.1185, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9242, 1.1147, 1.1215],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1245, 1.1303],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1310, 1.1361]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1241],
         [11.0041],
         [10.8914],
         ...,
         [12.1981],
         [11.1102],
         [11.0984]],
        [[10.4790],
         [ 9.2599],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2344],
         [ 9.2038]],
        [[10.2916],
         [ 9.0642],
         [ 9.0272],
         ...,
         [10.3389],
         [ 9.0254],
         [ 8.9929]],
        ...,
        [[10.0636],
         [ 8.8271],
         [ 8.7984],
         ...,
         [10.1077],
         [ 8.7725],
         [ 8.7380]],
        [[10.6551],
         [ 9.4444],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4316],
         [ 9.4028]],
        [[11.0543],
         [ 9.8645],
         [ 9.7977],
         ...,
         [11.1123],
         [ 9.8819],
         [ 9.8573]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9905, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9563, 0.9285, 0.9278],
        [0.9512, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9198, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9590, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9688, 0.9424, 0.9419]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1228],
         [23.5687],
         [23.0638],
         ...,
         [19.5321],
         [23.5244],
         [23.2760]],
        [[14.6612],
         [14.7568],
         [14.7585],
         ...,
         [16.7093],
         [14.8218],
         [14.7721]],
        [[14.6050],
         [13.9258],
         [13.9650],
         ...,
         [16.3895],
         [13.9980],
         [13.9636]],
        ...,
        [[14.5356],
         [12.9592],
         [13.0391],
         ...,
         [16.0011],
         [13.0389],
         [13.0214]],
        [[14.7132],
         [15.5680],
         [15.5310],
         ...,
         [17.0101],
         [15.6253],
         [15.5600]],
        [[14.8287],
         [17.5192],
         [17.3819],
         ...,
         [17.6930],
         [17.5559],
         [17.4505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1179],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9804, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9670, 0.9664],
        ...,
        [0.9757, 0.9501, 0.9514,  ..., 0.9995, 0.9514, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0159, 0.9934, 0.9924],
        [0.9805, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0956],
         [25.8723],
         [25.5536],
         ...,
         [12.4264],
         [25.8475],
         [26.1095]],
        [[ 9.3122],
         [23.8923],
         [23.6275],
         ...,
         [ 9.5998],
         [23.8556],
         [24.3378]],
        [[ 8.9273],
         [23.6580],
         [23.3994],
         ...,
         [ 9.2980],
         [23.6199],
         [24.1270]],
        ...,
        [[ 8.4717],
         [23.3704],
         [23.1194],
         ...,
         [ 8.9365],
         [23.3307],
         [23.8679]],
        [[ 9.6822],
         [24.1107],
         [23.8401],
         ...,
         [ 9.8872],
         [24.0752],
         [24.5340]],
        [[10.5516],
         [24.5997],
         [24.3159],
         ...,
         [10.5521],
         [24.5671],
         [24.9727]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9293, 1.1219, 1.1184,  ..., 0.9331, 1.1214, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9291, 1.1183, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1145, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1313, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1246],
         [11.0044],
         [10.8905],
         ...,
         [12.1981],
         [11.1151],
         [11.1026]],
        [[10.4794],
         [ 9.2605],
         [ 9.2159],
         ...,
         [10.5289],
         [ 9.2340],
         [ 9.2037]],
        [[10.2919],
         [ 9.0648],
         [ 9.0274],
         ...,
         [10.3389],
         [ 9.0245],
         [ 8.9924]],
        ...,
        [[10.0638],
         [ 8.8277],
         [ 8.7987],
         ...,
         [10.1078],
         [ 8.7710],
         [ 8.7369]],
        [[10.6555],
         [ 9.4449],
         [ 9.3934],
         ...,
         [10.7075],
         [ 9.4318],
         [ 9.4031]],
        [[11.0547],
         [ 9.8650],
         [ 9.7974],
         ...,
         [11.1123],
         [ 9.8833],
         [ 9.8586]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9639,  ..., 0.9920, 0.9688, 0.9685],
        [0.9551, 0.9290, 0.9280,  ..., 0.9562, 0.9284, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9521, 0.9239, 0.9232],
        ...,
        [0.9462, 0.9197, 0.9191,  ..., 0.9472, 0.9185, 0.9178],
        [0.9589, 0.9329, 0.9318,  ..., 0.9600, 0.9327, 0.9320],
        [0.9675, 0.9419, 0.9405,  ..., 0.9687, 0.9423, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1215],
         [23.5722],
         [23.0626],
         ...,
         [19.5386],
         [23.5273],
         [23.2760]],
        [[14.6598],
         [14.7562],
         [14.7591],
         ...,
         [16.7135],
         [14.8204],
         [14.7714]],
        [[14.6036],
         [13.9249],
         [13.9658],
         ...,
         [16.3934],
         [13.9963],
         [13.9629]],
        ...,
        [[14.5342],
         [12.9580],
         [13.0401],
         ...,
         [16.0047],
         [13.0369],
         [13.0207]],
        [[14.7119],
         [15.5677],
         [15.5315],
         ...,
         [17.0145],
         [15.6242],
         [15.5594]],
        [[14.8274],
         [17.5196],
         [17.3821],
         ...,
         [17.6980],
         [17.5556],
         [17.4501]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9657, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9756, 0.9500, 0.9513,  ..., 0.9996, 0.9513, 0.9510],
        [0.9785, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0964],
         [25.8705],
         [25.5543],
         ...,
         [12.4292],
         [25.8532],
         [26.1061]],
        [[ 9.3119],
         [23.8890],
         [23.6278],
         ...,
         [ 9.5984],
         [23.8667],
         [24.3334]],
        [[ 8.9270],
         [23.6545],
         [23.3996],
         ...,
         [ 9.2961],
         [23.6316],
         [24.1225]],
        ...,
        [[ 8.4712],
         [23.3666],
         [23.1195],
         ...,
         [ 8.9342],
         [23.3431],
         [23.8632]],
        [[ 9.6820],
         [24.1075],
         [23.8404],
         ...,
         [ 9.8861],
         [24.0858],
         [24.5297]],
        [[10.5516],
         [24.5969],
         [24.3163],
         ...,
         [10.5520],
         [24.5763],
         [24.9686]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9241, 1.1188, 1.1154,  ..., 0.9290, 1.1185, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9242, 1.1147, 1.1215],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1245, 1.1303],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1310, 1.1361]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1241],
         [11.0041],
         [10.8913],
         ...,
         [12.1981],
         [11.1108],
         [11.0989]],
        [[10.4791],
         [ 9.2600],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2343],
         [ 9.2038]],
        [[10.2916],
         [ 9.0643],
         [ 9.0272],
         ...,
         [10.3389],
         [ 9.0253],
         [ 8.9929]],
        ...,
        [[10.0636],
         [ 8.8271],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7723],
         [ 8.7379]],
        [[10.6552],
         [ 9.4445],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4316],
         [ 9.4028]],
        [[11.0543],
         [ 9.8645],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8821],
         [ 9.8575]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9905, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9512, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9198, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9590, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9688, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1226],
         [23.5691],
         [23.0637],
         ...,
         [19.5329],
         [23.5248],
         [23.2760]],
        [[14.6610],
         [14.7567],
         [14.7585],
         ...,
         [16.7098],
         [14.8216],
         [14.7720]],
        [[14.6049],
         [13.9257],
         [13.9650],
         ...,
         [16.3900],
         [13.9978],
         [13.9635]],
        ...,
        [[14.5355],
         [12.9590],
         [13.0392],
         ...,
         [16.0015],
         [13.0387],
         [13.0213]],
        [[14.7131],
         [15.5679],
         [15.5311],
         ...,
         [17.0106],
         [15.6252],
         [15.5599]],
        [[14.8285],
         [17.5192],
         [17.3819],
         ...,
         [17.6936],
         [17.5558],
         [17.4505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1179],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9501, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9924],
        [0.9805, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8708],
         [25.5542],
         ...,
         [12.4287],
         [25.8520],
         [26.1068]],
        [[ 9.3120],
         [23.8896],
         [23.6277],
         ...,
         [ 9.5986],
         [23.8645],
         [24.3343]],
        [[ 8.9270],
         [23.6552],
         [23.3996],
         ...,
         [ 9.2965],
         [23.6293],
         [24.1234]],
        ...,
        [[ 8.4713],
         [23.3674],
         [23.1195],
         ...,
         [ 8.9347],
         [23.3406],
         [23.8642]],
        [[ 9.6820],
         [24.1081],
         [23.8403],
         ...,
         [ 9.8863],
         [24.0836],
         [24.5306]],
        [[10.5516],
         [24.5974],
         [24.3163],
         ...,
         [10.5520],
         [24.5745],
         [24.9694]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1185, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1245, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8912],
         ...,
         [12.1981],
         [11.1117],
         [11.0997]],
        [[10.4791],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2343],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8272],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7721],
         [ 8.7377]],
        [[10.6552],
         [ 9.4445],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8646],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8823],
         [ 9.8577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5697],
         [23.0634],
         ...,
         [19.5340],
         [23.5253],
         [23.2760]],
        [[14.6608],
         [14.7566],
         [14.7586],
         ...,
         [16.7105],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9256],
         [13.9652],
         ...,
         [16.3907],
         [13.9975],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0394],
         ...,
         [16.0022],
         [13.0383],
         [13.0212]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0113],
         [15.6250],
         [15.5598]],
        [[14.8283],
         [17.5193],
         [17.3819],
         ...,
         [17.6945],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1179],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9805, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1907],
         [25.6227],
         [25.7271],
         ...,
         [12.9933],
         [26.9057],
         [25.4392]],
        [[ 9.2785],
         [23.3880],
         [23.7556],
         ...,
         [ 9.3501],
         [25.4647],
         [23.3737]],
        [[ 8.8830],
         [23.1253],
         [23.5223],
         ...,
         [ 8.9769],
         [25.2918],
         [23.1299]],
        ...,
        [[ 8.4156],
         [22.8033],
         [23.2359],
         ...,
         [ 8.5344],
         [25.0788],
         [22.8310]],
        [[ 9.6591],
         [23.6332],
         [23.9730],
         ...,
         [ 9.7084],
         [25.6254],
         [23.6010]],
        [[10.5553],
         [24.1834],
         [24.4599],
         ...,
         [10.5484],
         [25.9836],
         [24.1104]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9794, 1.1437, 1.1450,  ..., 0.9767, 1.1606, 1.1412],
        [0.9277, 1.1141, 1.1190,  ..., 0.9286, 1.1416, 1.1139],
        [0.9224, 1.1106, 1.1159,  ..., 0.9237, 1.1393, 1.1107],
        ...,
        [0.9162, 1.1064, 1.1121,  ..., 0.9178, 1.1365, 1.1068],
        [0.9327, 1.1174, 1.1218,  ..., 0.9333, 1.1437, 1.1169],
        [0.9445, 1.1246, 1.1283,  ..., 0.9444, 1.1484, 1.1237]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0238],
         [11.0385],
         [11.0788],
         ...,
         [12.1795],
         [10.7884],
         [10.8337]],
        [[10.4332],
         [ 9.1980],
         [ 9.2149],
         ...,
         [10.5145],
         [ 9.4279],
         [ 9.4033]],
        [[10.2516],
         [ 8.9926],
         [ 9.0071],
         ...,
         [10.3249],
         [ 9.2719],
         [ 9.2399]],
        ...,
        [[10.0305],
         [ 8.7441],
         [ 8.7557],
         ...,
         [10.0944],
         [ 9.0818],
         [ 9.0410]],
        [[10.6038],
         [ 9.3917],
         [ 9.4109],
         ...,
         [10.6927],
         [ 9.5743],
         [ 9.5567]],
        [[10.9901],
         [ 9.8339],
         [ 9.8584],
         ...,
         [11.0965],
         [ 9.9054],
         [ 9.9042]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0090, 0.9879, 0.9888,  ..., 1.0124, 0.9825, 0.9835],
        [0.9749, 0.9484, 0.9488,  ..., 0.9767, 0.9534, 0.9528],
        [0.9710, 0.9440, 0.9443,  ..., 0.9726, 0.9500, 0.9493],
        ...,
        [0.9663, 0.9387, 0.9390,  ..., 0.9677, 0.9460, 0.9451],
        [0.9786, 0.9526, 0.9530,  ..., 0.9805, 0.9565, 0.9561],
        [0.9869, 0.9621, 0.9626,  ..., 0.9892, 0.9636, 0.9636]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.3650],
         [22.9901],
         [23.2610],
         ...,
         [18.1996],
         [23.0745],
         [23.2772]],
        [[14.9084],
         [14.8693],
         [14.6663],
         ...,
         [15.9717],
         [14.9899],
         [14.8526]],
        [[14.8528],
         [14.0885],
         [13.8524],
         ...,
         [15.7156],
         [14.2105],
         [14.0491]],
        ...,
        [[14.7841],
         [13.1761],
         [12.9047],
         ...,
         [15.4034],
         [13.2992],
         [13.1119]],
        [[14.9599],
         [15.6286],
         [15.4601],
         ...,
         [16.2118],
         [15.7474],
         [15.6352]],
        [[15.0741],
         [17.4440],
         [17.3672],
         ...,
         [16.7546],
         [17.5571],
         [17.5111]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9891, 1.1131, 1.1175,  ..., 1.0352, 1.1145, 1.1178],
        [0.9817, 0.9810, 0.9777,  ..., 0.9990, 0.9830, 0.9808],
        [0.9808, 0.9683, 0.9645,  ..., 0.9948, 0.9703, 0.9677],
        ...,
        [0.9797, 0.9535, 0.9491,  ..., 0.9897, 0.9555, 0.9525],
        [0.9825, 0.9934, 0.9907,  ..., 1.0029, 0.9953, 0.9935],
        [0.9844, 1.0229, 1.0217,  ..., 1.0117, 1.0248, 1.0240]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1097],
         [25.8321],
         [25.5797],
         ...,
         [12.5045],
         [25.9714],
         [26.0022]],
        [[ 9.3071],
         [23.8162],
         [23.6463],
         ...,
         [ 9.5607],
         [24.0903],
         [24.1929]],
        [[ 8.9206],
         [23.5779],
         [23.4173],
         ...,
         [ 9.2483],
         [23.8671],
         [23.9779]],
        ...,
        [[ 8.4632],
         [23.2854],
         [23.1362],
         ...,
         [ 8.8746],
         [23.5930],
         [23.7137]],
        [[ 9.6787],
         [24.0384],
         [23.8596],
         ...,
         [ 9.8586],
         [24.2982],
         [24.3931]],
        [[10.5521],
         [24.5361],
         [24.3372],
         ...,
         [10.5491],
         [24.7633],
         [24.8409]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1474, 1.1441,  ..., 0.9713, 1.1492, 1.1496],
        [0.9290, 1.1208, 1.1185,  ..., 0.9324, 1.1244, 1.1257],
        [0.9239, 1.1176, 1.1155,  ..., 0.9282, 1.1214, 1.1229],
        ...,
        [0.9179, 1.1137, 1.1118,  ..., 0.9233, 1.1178, 1.1194],
        [0.9339, 1.1237, 1.1213,  ..., 0.9363, 1.1271, 1.1284],
        [0.9455, 1.1303, 1.1276,  ..., 0.9454, 1.1333, 1.1343]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1102],
         [10.9959],
         [10.9123],
         ...,
         [12.1954],
         [11.0161],
         [11.0137]],
        [[10.4716],
         [ 9.2479],
         [ 9.2146],
         ...,
         [10.5268],
         [ 9.2434],
         [ 9.2100]],
        [[10.2848],
         [ 9.0518],
         [ 9.0238],
         ...,
         [10.3368],
         [ 9.0448],
         [ 9.0083]],
        ...,
        [[10.0576],
         [ 8.8141],
         [ 8.7923],
         ...,
         [10.1057],
         [ 8.8042],
         [ 8.7642]],
        [[10.6470],
         [ 9.4327],
         [ 9.3945],
         ...,
         [10.7053],
         [ 9.4306],
         [ 9.4002]],
        [[11.0446],
         [ 9.8536],
         [ 9.8037],
         ...,
         [11.1100],
         [ 9.8572],
         [ 9.8339]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9920, 0.9681, 0.9663,  ..., 0.9938, 0.9686, 0.9685],
        [0.9569, 0.9306, 0.9299,  ..., 0.9581, 0.9305, 0.9298],
        [0.9529, 0.9264, 0.9258,  ..., 0.9540, 0.9263, 0.9255],
        ...,
        [0.9480, 0.9213, 0.9209,  ..., 0.9490, 0.9211, 0.9203],
        [0.9606, 0.9346, 0.9338,  ..., 0.9619, 0.9346, 0.9339],
        [0.9692, 0.9436, 0.9426,  ..., 0.9706, 0.9437, 0.9432]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1554],
         [23.4861],
         [23.0921],
         ...,
         [19.3537],
         [23.4601],
         [23.2763]],
        [[14.6963],
         [14.7721],
         [14.7449],
         ...,
         [16.5961],
         [14.8447],
         [14.7835]],
        [[14.6404],
         [13.9481],
         [13.9485],
         ...,
         [16.2833],
         [14.0271],
         [13.9757]],
        ...,
        [[14.5714],
         [12.9890],
         [13.0195],
         ...,
         [15.9033],
         [13.0746],
         [13.0342]],
        [[14.7481],
         [15.5760],
         [15.5206],
         ...,
         [16.8903],
         [15.6418],
         [15.5707]],
        [[14.8629],
         [17.5081],
         [17.3796],
         ...,
         [17.5579],
         [17.5555],
         [17.4592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9866, 1.1221, 1.1156,  ..., 1.0548, 1.1216, 1.1186],
        [0.9791, 0.9803, 0.9799,  ..., 1.0100, 0.9815, 0.9805],
        [0.9782, 0.9669, 0.9669,  ..., 1.0049, 0.9682, 0.9674],
        ...,
        [0.9771, 0.9513, 0.9518,  ..., 0.9987, 0.9527, 0.9521],
        [0.9799, 0.9934, 0.9925,  ..., 1.0148, 0.9945, 0.9933],
        [0.9818, 1.0248, 1.0227,  ..., 1.0256, 1.0256, 1.0240]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0986],
         [25.8640],
         [25.5587],
         ...,
         [12.4418],
         [25.8722],
         [26.0882]],
        [[ 9.3111],
         [23.8768],
         [23.6310],
         ...,
         [ 9.5920],
         [23.9038],
         [24.3094]],
        [[ 8.9259],
         [23.6416],
         [23.4027],
         ...,
         [ 9.2880],
         [23.6707],
         [24.0978]],
        ...,
        [[ 8.4699],
         [23.3530],
         [23.1224],
         ...,
         [ 8.9241],
         [23.3847],
         [23.8377]],
        [[ 9.6815],
         [24.0959],
         [23.8437],
         ...,
         [ 9.8814],
         [24.1209],
         [24.5064]],
        [[10.5517],
         [24.5867],
         [24.3200],
         ...,
         [10.5514],
         [24.6071],
         [24.9468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1480, 1.1439,  ..., 0.9706, 1.1481, 1.1509],
        [0.9292, 1.1217, 1.1184,  ..., 0.9329, 1.1220, 1.1274],
        [0.9241, 1.1186, 1.1154,  ..., 0.9289, 1.1190, 1.1246],
        ...,
        [0.9181, 1.1148, 1.1117,  ..., 0.9241, 1.1152, 1.1212],
        [0.9341, 1.1246, 1.1213,  ..., 0.9367, 1.1249, 1.1300],
        [0.9456, 1.1311, 1.1275,  ..., 0.9456, 1.1313, 1.1358]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1218],
         [11.0024],
         [10.8947],
         ...,
         [12.1976],
         [11.0938],
         [11.0836]],
        [[10.4778],
         [ 9.2579],
         [ 9.2156],
         ...,
         [10.5286],
         [ 9.2354],
         [ 9.2043]],
        [[10.2904],
         [ 9.0621],
         [ 9.0266],
         ...,
         [10.3385],
         [ 9.0281],
         [ 8.9950]],
        ...,
        [[10.0626],
         [ 8.8249],
         [ 8.7974],
         ...,
         [10.1074],
         [ 8.7774],
         [ 8.7418]],
        [[10.6538],
         [ 9.4424],
         [ 9.3936],
         ...,
         [10.7071],
         [ 9.4310],
         [ 9.4018]],
        [[11.0527],
         [ 9.8625],
         [ 9.7986],
         ...,
         [11.1119],
         [ 9.8773],
         [ 9.8528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9907, 0.9667, 0.9644,  ..., 0.9923, 0.9686, 0.9684],
        [0.9554, 0.9293, 0.9284,  ..., 0.9565, 0.9288, 0.9281],
        [0.9514, 0.9251, 0.9243,  ..., 0.9524, 0.9244, 0.9236],
        ...,
        [0.9465, 0.9200, 0.9194,  ..., 0.9475, 0.9190, 0.9182],
        [0.9592, 0.9332, 0.9322,  ..., 0.9604, 0.9330, 0.9324],
        [0.9678, 0.9422, 0.9409,  ..., 0.9690, 0.9426, 0.9420]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1281],
         [23.5551],
         [23.0685],
         ...,
         [19.5027],
         [23.5139],
         [23.2761]],
        [[14.6670],
         [14.7593],
         [14.7562],
         ...,
         [16.6903],
         [14.8254],
         [14.7739]],
        [[14.6109],
         [13.9295],
         [13.9623],
         ...,
         [16.3716],
         [14.0026],
         [13.9655]],
        ...,
        [[14.5416],
         [12.9641],
         [13.0359],
         ...,
         [15.9845],
         [13.0446],
         [13.0234]],
        [[14.7190],
         [15.5693],
         [15.5293],
         ...,
         [16.9900],
         [15.6279],
         [15.5617]],
        [[14.8343],
         [17.5173],
         [17.3815],
         ...,
         [17.6705],
         [17.5557],
         [17.4519]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 1.1225, 1.1146,  ..., 1.0566, 1.1219, 1.1180],
        [0.9780, 0.9795, 0.9794,  ..., 1.0109, 0.9805, 0.9797],
        [0.9771, 0.9660, 0.9665,  ..., 1.0057, 0.9672, 0.9666],
        ...,
        [0.9759, 0.9503, 0.9514,  ..., 0.9994, 0.9516, 0.9512],
        [0.9788, 0.9926, 0.9920,  ..., 1.0157, 0.9936, 0.9925],
        [0.9807, 1.0243, 1.0221,  ..., 1.0268, 1.0249, 1.0233]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0966],
         [25.8696],
         [25.5550],
         ...,
         [12.4311],
         [25.8557],
         [26.1033]],
        [[ 9.3118],
         [23.8872],
         [23.6283],
         ...,
         [ 9.5974],
         [23.8717],
         [24.3295]],
        [[ 8.9268],
         [23.6527],
         [23.4002],
         ...,
         [ 9.2949],
         [23.6370],
         [24.1185]],
        ...,
        [[ 8.4711],
         [23.3647],
         [23.1200],
         ...,
         [ 8.9327],
         [23.3488],
         [23.8592]],
        [[ 9.6819],
         [24.1059],
         [23.8410],
         ...,
         [ 9.8854],
         [24.0905],
         [24.5260]],
        [[10.5516],
         [24.5954],
         [24.3170],
         ...,
         [10.5519],
         [24.5805],
         [24.9651]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9705, 1.1479, 1.1511],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1277],
        [0.9241, 1.1188, 1.1154,  ..., 0.9290, 1.1185, 1.1249],
        ...,
        [0.9181, 1.1149, 1.1117,  ..., 0.9242, 1.1147, 1.1215],
        [0.9341, 1.1247, 1.1212,  ..., 0.9368, 1.1245, 1.1303],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1310, 1.1361]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1238],
         [11.0039],
         [10.8918],
         ...,
         [12.1980],
         [11.1083],
         [11.0966]],
        [[10.4789],
         [ 9.2597],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2345],
         [ 9.2038]],
        [[10.2914],
         [ 9.0640],
         [ 9.0271],
         ...,
         [10.3388],
         [ 9.0257],
         [ 8.9932]],
        ...,
        [[10.0635],
         [ 8.8268],
         [ 8.7983],
         ...,
         [10.1077],
         [ 8.7731],
         [ 8.7384]],
        [[10.6550],
         [ 9.4441],
         [ 9.3935],
         ...,
         [10.7074],
         [ 9.4315],
         [ 9.4027]],
        [[11.0540],
         [ 9.8642],
         [ 9.7978],
         ...,
         [11.1123],
         [ 9.8813],
         [ 9.8568]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9905, 0.9665, 0.9641,  ..., 0.9921, 0.9687, 0.9685],
        [0.9552, 0.9291, 0.9281,  ..., 0.9563, 0.9285, 0.9279],
        [0.9512, 0.9249, 0.9241,  ..., 0.9522, 0.9241, 0.9234],
        ...,
        [0.9463, 0.9198, 0.9192,  ..., 0.9473, 0.9186, 0.9179],
        [0.9590, 0.9330, 0.9319,  ..., 0.9601, 0.9328, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9688, 0.9424, 0.9419]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1235],
         [23.5670],
         [23.0644],
         ...,
         [19.5281],
         [23.5231],
         [23.2760]],
        [[14.6620],
         [14.7571],
         [14.7582],
         ...,
         [16.7067],
         [14.8221],
         [14.7723]],
        [[14.6058],
         [13.9263],
         [13.9646],
         ...,
         [16.3871],
         [13.9984],
         [13.9638]],
        ...,
        [[14.5364],
         [12.9598],
         [13.0388],
         ...,
         [15.9988],
         [13.0395],
         [13.0216]],
        [[14.7140],
         [15.5681],
         [15.5308],
         ...,
         [17.0073],
         [15.6255],
         [15.5602]],
        [[14.8294],
         [17.5189],
         [17.3819],
         ...,
         [17.6899],
         [17.5558],
         [17.4507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9853, 1.1226, 1.1144,  ..., 1.0569, 1.1219, 1.1179],
        [0.9778, 0.9793, 0.9793,  ..., 1.0110, 0.9804, 0.9796],
        [0.9769, 0.9658, 0.9664,  ..., 1.0058, 0.9670, 0.9664],
        ...,
        [0.9757, 0.9501, 0.9514,  ..., 0.9995, 0.9514, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0159, 0.9934, 0.9924],
        [0.9805, 1.0242, 1.0220,  ..., 1.0270, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8707],
         [25.5543],
         ...,
         [12.4290],
         [25.8525],
         [26.1062]],
        [[ 9.3119],
         [23.8893],
         [23.6278],
         ...,
         [ 9.5985],
         [23.8654],
         [24.3335]],
        [[ 8.9270],
         [23.6548],
         [23.3997],
         ...,
         [ 9.2963],
         [23.6303],
         [24.1226]],
        ...,
        [[ 8.4713],
         [23.3670],
         [23.1196],
         ...,
         [ 8.9344],
         [23.3417],
         [23.8634]],
        [[ 9.6820],
         [24.1078],
         [23.8404],
         ...,
         [ 9.8862],
         [24.0846],
         [24.5298]],
        [[10.5516],
         [24.5972],
         [24.3164],
         ...,
         [10.5520],
         [24.5753],
         [24.9687]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1185, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9242, 1.1146, 1.1215],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1245, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1310, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0041],
         [10.8913],
         ...,
         [12.1981],
         [11.1112],
         [11.0992]],
        [[10.4791],
         [ 9.2600],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2343],
         [ 9.2037]],
        [[10.2916],
         [ 9.0643],
         [ 9.0272],
         ...,
         [10.3389],
         [ 9.0252],
         [ 8.9928]],
        ...,
        [[10.0636],
         [ 8.8272],
         [ 8.7985],
         ...,
         [10.1077],
         [ 8.7722],
         [ 8.7378]],
        [[10.6552],
         [ 9.4445],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4316],
         [ 9.4028]],
        [[11.0543],
         [ 9.8646],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8822],
         [ 9.8576]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9512, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9688, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1226],
         [23.5693],
         [23.0636],
         ...,
         [19.5331],
         [23.5249],
         [23.2760]],
        [[14.6610],
         [14.7567],
         [14.7586],
         ...,
         [16.7099],
         [14.8214],
         [14.7719]],
        [[14.6048],
         [13.9257],
         [13.9651],
         ...,
         [16.3901],
         [13.9976],
         [13.9635]],
        ...,
        [[14.5354],
         [12.9590],
         [13.0393],
         ...,
         [16.0016],
         [13.0385],
         [13.0212]],
        [[14.7130],
         [15.5679],
         [15.5311],
         ...,
         [17.0107],
         [15.6250],
         [15.5599]],
        [[14.8285],
         [17.5192],
         [17.3819],
         ...,
         [17.6938],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1179],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9501, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9924],
        [0.9805, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5542],
         ...,
         [12.4286],
         [25.8519],
         [26.1068]],
        [[ 9.3120],
         [23.8897],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8642],
         [24.3343]],
        [[ 8.9270],
         [23.6553],
         [23.3996],
         ...,
         [ 9.2965],
         [23.6290],
         [24.1234]],
        ...,
        [[ 8.4713],
         [23.3675],
         [23.1195],
         ...,
         [ 8.9347],
         [23.3403],
         [23.8642]],
        [[ 9.6820],
         [24.1082],
         [23.8403],
         ...,
         [ 9.8863],
         [24.0834],
         [24.5306]],
        [[10.5516],
         [24.5975],
         [24.3163],
         ...,
         [10.5520],
         [24.5742],
         [24.9695]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1245, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1117],
         [11.0997]],
        [[10.4791],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2343],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8272],
         [ 8.7985],
         ...,
         [10.1077],
         [ 8.7721],
         [ 8.7377]],
        [[10.6552],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8646],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8823],
         [ 9.8577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5698],
         [23.0634],
         ...,
         [19.5341],
         [23.5253],
         [23.2760]],
        [[14.6608],
         [14.7566],
         [14.7587],
         ...,
         [16.7105],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3907],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0394],
         ...,
         [16.0022],
         [13.0383],
         [13.0212]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0114],
         [15.6249],
         [15.5598]],
        [[14.8283],
         [17.5193],
         [17.3820],
         ...,
         [17.6945],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9805, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8518],
         [26.1069]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3344]],
        [[ 8.9271],
         [23.6553],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3675],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0998]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3908],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0394],
         ...,
         [16.0023],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0115],
         [15.6249],
         [15.5598]],
        [[14.8283],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1069]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0998]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0023],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0115],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0998]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0721],
         [25.8660],
         [25.5599],
         ...,
         [12.4203],
         [25.8640],
         [26.0859]],
        [[ 9.3207],
         [23.8807],
         [23.6336],
         ...,
         [ 9.6029],
         [23.8883],
         [24.3053]],
        [[ 8.9385],
         [23.6458],
         [23.4054],
         ...,
         [ 9.3019],
         [23.6544],
         [24.0935]],
        ...,
        [[ 8.4859],
         [23.3575],
         [23.1253],
         ...,
         [ 8.9414],
         [23.3674],
         [23.8332]],
        [[ 9.6881],
         [24.0997],
         [23.8462],
         ...,
         [ 9.8895],
         [24.1062],
         [24.5025]],
        [[10.5508],
         [24.5900],
         [24.3221],
         ...,
         [10.5524],
         [24.5942],
         [24.9433]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1483, 1.1443,  ..., 0.9706, 1.1483, 1.1512],
        [0.9297, 1.1221, 1.1188,  ..., 0.9334, 1.1222, 1.1277],
        [0.9246, 1.1190, 1.1158,  ..., 0.9294, 1.1191, 1.1249],
        ...,
        [0.9186, 1.1152, 1.1121,  ..., 0.9246, 1.1153, 1.1214],
        [0.9345, 1.1250, 1.1216,  ..., 0.9372, 1.1251, 1.1303],
        [0.9459, 1.1314, 1.1279,  ..., 0.9459, 1.1315, 1.1361]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1217],
         [11.0020],
         [10.8942],
         ...,
         [12.1899],
         [11.0967],
         [11.0853]],
        [[10.4777],
         [ 9.2581],
         [ 9.2157],
         ...,
         [10.5224],
         [ 9.2349],
         [ 9.2042]],
        [[10.2904],
         [ 9.0624],
         [ 9.0268],
         ...,
         [10.3326],
         [ 9.0273],
         [ 8.9947]],
        ...,
        [[10.0625],
         [ 8.8253],
         [ 8.7977],
         ...,
         [10.1017],
         [ 8.7762],
         [ 8.7414]],
        [[10.6537],
         [ 9.4425],
         [ 9.3937],
         ...,
         [10.7008],
         [ 9.4308],
         [ 9.4019]],
        [[11.0526],
         [ 9.8626],
         [ 9.7985],
         ...,
         [11.1053],
         [ 9.8779],
         [ 9.8533]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9907, 0.9667, 0.9644,  ..., 0.9922, 0.9687, 0.9685],
        [0.9554, 0.9293, 0.9284,  ..., 0.9564, 0.9288, 0.9281],
        [0.9514, 0.9251, 0.9243,  ..., 0.9523, 0.9243, 0.9236],
        ...,
        [0.9465, 0.9200, 0.9194,  ..., 0.9474, 0.9189, 0.9182],
        [0.9592, 0.9332, 0.9322,  ..., 0.9602, 0.9330, 0.9324],
        [0.9678, 0.9422, 0.9409,  ..., 0.9689, 0.9426, 0.9420]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1303],
         [23.5552],
         [23.0683],
         ...,
         [19.4458],
         [23.5148],
         [23.2761]],
        [[14.6695],
         [14.7596],
         [14.7567],
         ...,
         [16.6476],
         [14.8235],
         [14.7732]],
        [[14.6135],
         [13.9298],
         [13.9628],
         ...,
         [16.3305],
         [14.0006],
         [13.9647]],
        ...,
        [[14.5442],
         [12.9644],
         [13.0365],
         ...,
         [15.9453],
         [13.0424],
         [13.0226]],
        [[14.7215],
         [15.5695],
         [15.5297],
         ...,
         [16.9459],
         [15.6262],
         [15.5610]],
        [[14.8367],
         [17.5176],
         [17.3819],
         ...,
         [17.6230],
         [17.5546],
         [17.4514]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9855, 1.1225, 1.1146,  ..., 1.0557, 1.1219, 1.1180],
        [0.9780, 0.9795, 0.9794,  ..., 1.0102, 0.9805, 0.9797],
        [0.9771, 0.9660, 0.9665,  ..., 1.0050, 0.9671, 0.9665],
        ...,
        [0.9760, 0.9503, 0.9514,  ..., 0.9988, 0.9515, 0.9512],
        [0.9789, 0.9926, 0.9920,  ..., 1.0150, 0.9936, 0.9925],
        [0.9807, 1.0243, 1.0221,  ..., 1.0260, 1.0249, 1.0233]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0921],
         [25.8701],
         [25.5551],
         ...,
         [12.4272],
         [25.8538],
         [26.1035]],
        [[ 9.3134],
         [23.8883],
         [23.6287],
         ...,
         [ 9.5994],
         [23.8679],
         [24.3296]],
        [[ 8.9290],
         [23.6538],
         [23.4005],
         ...,
         [ 9.2975],
         [23.6330],
         [24.1186]],
        ...,
        [[ 8.4738],
         [23.3659],
         [23.1204],
         ...,
         [ 8.9359],
         [23.3445],
         [23.8592]],
        [[ 9.6831],
         [24.1069],
         [23.8413],
         ...,
         [ 9.8869],
         [24.0869],
         [24.5261]],
        [[10.5514],
         [24.5963],
         [24.3172],
         ...,
         [10.5521],
         [24.5773],
         [24.9653]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1481, 1.1440,  ..., 0.9705, 1.1479, 1.1512],
        [0.9293, 1.1219, 1.1185,  ..., 0.9331, 1.1217, 1.1278],
        [0.9242, 1.1188, 1.1155,  ..., 0.9291, 1.1185, 1.1250],
        ...,
        [0.9182, 1.1150, 1.1118,  ..., 0.9243, 1.1147, 1.1215],
        [0.9342, 1.1248, 1.1213,  ..., 0.9369, 1.1245, 1.1304],
        [0.9457, 1.1313, 1.1276,  ..., 0.9457, 1.1310, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1238],
         [11.0038],
         [10.8916],
         ...,
         [12.1968],
         [11.1094],
         [11.0974]],
        [[10.4789],
         [ 9.2598],
         [ 9.2158],
         ...,
         [10.5279],
         [ 9.2343],
         [ 9.2038]],
        [[10.2915],
         [ 9.0641],
         [ 9.0272],
         ...,
         [10.3378],
         [ 9.0254],
         [ 8.9931]],
        ...,
        [[10.0635],
         [ 8.8269],
         [ 8.7984],
         ...,
         [10.1067],
         [ 8.7727],
         [ 8.7382]],
        [[10.6550],
         [ 9.4442],
         [ 9.3935],
         ...,
         [10.7064],
         [ 9.4315],
         [ 9.4027]],
        [[11.0541],
         [ 9.8643],
         [ 9.7977],
         ...,
         [11.1112],
         [ 9.8816],
         [ 9.8570]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9905, 0.9665, 0.9641,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9291, 0.9281,  ..., 0.9563, 0.9285, 0.9279],
        [0.9512, 0.9249, 0.9241,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9198, 0.9192,  ..., 0.9472, 0.9186, 0.9179],
        [0.9590, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9688, 0.9424, 0.9419]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1237],
         [23.5675],
         [23.0642],
         ...,
         [19.5197],
         [23.5236],
         [23.2760]],
        [[14.6622],
         [14.7571],
         [14.7584],
         ...,
         [16.7002],
         [14.8217],
         [14.7721]],
        [[14.6060],
         [13.9262],
         [13.9648],
         ...,
         [16.3808],
         [13.9979],
         [13.9636]],
        ...,
        [[14.5367],
         [12.9597],
         [13.0390],
         ...,
         [15.9928],
         [13.0389],
         [13.0214]],
        [[14.7142],
         [15.5681],
         [15.5310],
         ...,
         [17.0006],
         [15.6251],
         [15.5600]],
        [[14.8296],
         [17.5190],
         [17.3819],
         ...,
         [17.6828],
         [17.5556],
         [17.4505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9853, 1.1226, 1.1144,  ..., 1.0568, 1.1219, 1.1179],
        [0.9778, 0.9793, 0.9793,  ..., 1.0109, 0.9804, 0.9796],
        [0.9769, 0.9658, 0.9664,  ..., 1.0057, 0.9670, 0.9664],
        ...,
        [0.9757, 0.9501, 0.9514,  ..., 0.9994, 0.9514, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0158, 0.9934, 0.9924],
        [0.9805, 1.0242, 1.0220,  ..., 1.0269, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0954],
         [25.8708],
         [25.5543],
         ...,
         [12.4283],
         [25.8521],
         [26.1063]],
        [[ 9.3122],
         [23.8895],
         [23.6279],
         ...,
         [ 9.5989],
         [23.8646],
         [24.3336]],
        [[ 8.9274],
         [23.6551],
         [23.3997],
         ...,
         [ 9.2968],
         [23.6294],
         [24.1227]],
        ...,
        [[ 8.4718],
         [23.3673],
         [23.1196],
         ...,
         [ 8.9350],
         [23.3408],
         [23.8635]],
        [[ 9.6822],
         [24.1081],
         [23.8405],
         ...,
         [ 9.8865],
         [24.0838],
         [24.5300]],
        [[10.5516],
         [24.5974],
         [24.3164],
         ...,
         [10.5520],
         [24.5746],
         [24.9688]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9293, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1185, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1213,  ..., 0.9368, 1.1245, 1.1304],
        [0.9456, 1.1313, 1.1275,  ..., 0.9456, 1.1310, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0041],
         [10.8912],
         ...,
         [12.1979],
         [11.1114],
         [11.0994]],
        [[10.4791],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5287],
         [ 9.2343],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0272],
         ...,
         [10.3387],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0636],
         [ 8.8272],
         [ 8.7985],
         ...,
         [10.1076],
         [ 8.7721],
         [ 8.7377]],
        [[10.6552],
         [ 9.4445],
         [ 9.3935],
         ...,
         [10.7073],
         [ 9.4316],
         [ 9.4029]],
        [[11.0543],
         [ 9.8646],
         [ 9.7976],
         ...,
         [11.1121],
         [ 9.8822],
         [ 9.8576]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9512, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9406,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1226],
         [23.5695],
         [23.0635],
         ...,
         [19.5317],
         [23.5251],
         [23.2760]],
        [[14.6610],
         [14.7567],
         [14.7586],
         ...,
         [16.7088],
         [14.8214],
         [14.7719]],
        [[14.6048],
         [13.9256],
         [13.9652],
         ...,
         [16.3890],
         [13.9975],
         [13.9634]],
        ...,
        [[14.5354],
         [12.9589],
         [13.0394],
         ...,
         [16.0006],
         [13.0383],
         [13.0212]],
        [[14.7130],
         [15.5679],
         [15.5312],
         ...,
         [17.0096],
         [15.6249],
         [15.5598]],
        [[14.8285],
         [17.5193],
         [17.3820],
         ...,
         [17.6926],
         [17.5557],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1179],
        [0.9777, 0.9793, 0.9793,  ..., 1.0110, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0058, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0159, 0.9934, 0.9924],
        [0.9805, 1.0242, 1.0220,  ..., 1.0270, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0960],
         [25.8709],
         [25.5542],
         ...,
         [12.4285],
         [25.8518],
         [26.1068]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5988],
         [23.8640],
         [24.3343]],
        [[ 8.9271],
         [23.6553],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6288],
         [24.1235]],
        ...,
        [[ 8.4714],
         [23.3675],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3401],
         [23.8643]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0832],
         [24.5307]],
        [[10.5516],
         [24.5976],
         [24.3163],
         ...,
         [10.5520],
         [24.5741],
         [24.9695]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1245, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1118],
         [11.0998]],
        [[10.4791],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1077],
         [ 8.7720],
         [ 8.7376]],
        [[10.6552],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8646],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8823],
         [ 9.8577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5698],
         [23.0634],
         ...,
         [19.5338],
         [23.5253],
         [23.2760]],
        [[14.6608],
         [14.7566],
         [14.7587],
         ...,
         [16.7104],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3905],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0394],
         ...,
         [16.0020],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0112],
         [15.6249],
         [15.5598]],
        [[14.8283],
         [17.5193],
         [17.3820],
         ...,
         [17.6943],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9805, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0961],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1069]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4714],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0998]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1077],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5342],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7106],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3908],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0023],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0115],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6946],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0961],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1242],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0998]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1077],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3908],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0023],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0115],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0962],
         [25.8709],
         [25.5541],
         ...,
         [12.4285],
         [25.8517],
         [26.1070]],
        [[ 9.3120],
         [23.8898],
         [23.6277],
         ...,
         [ 9.5987],
         [23.8639],
         [24.3345]],
        [[ 8.9271],
         [23.6554],
         [23.3996],
         ...,
         [ 9.2966],
         [23.6287],
         [24.1236]],
        ...,
        [[ 8.4713],
         [23.3676],
         [23.1195],
         ...,
         [ 8.9348],
         [23.3400],
         [23.8644]],
        [[ 9.6821],
         [24.1083],
         [23.8403],
         ...,
         [ 9.8864],
         [24.0831],
         [24.5308]],
        [[10.5516],
         [24.5976],
         [24.3162],
         ...,
         [10.5520],
         [24.5740],
         [24.9696]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 1.1481, 1.1439,  ..., 0.9704, 1.1478, 1.1512],
        [0.9292, 1.1219, 1.1184,  ..., 0.9330, 1.1216, 1.1278],
        [0.9242, 1.1188, 1.1154,  ..., 0.9290, 1.1184, 1.1250],
        ...,
        [0.9181, 1.1150, 1.1117,  ..., 0.9243, 1.1146, 1.1216],
        [0.9341, 1.1248, 1.1212,  ..., 0.9368, 1.1244, 1.1304],
        [0.9456, 1.1312, 1.1275,  ..., 0.9456, 1.1309, 1.1362]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1243],
         [11.0042],
         [10.8911],
         ...,
         [12.1981],
         [11.1119],
         [11.0999]],
        [[10.4792],
         [ 9.2601],
         [ 9.2158],
         ...,
         [10.5289],
         [ 9.2342],
         [ 9.2037]],
        [[10.2917],
         [ 9.0644],
         [ 9.0273],
         ...,
         [10.3389],
         [ 9.0251],
         [ 8.9928]],
        ...,
        [[10.0637],
         [ 8.8273],
         [ 8.7985],
         ...,
         [10.1078],
         [ 8.7720],
         [ 8.7376]],
        [[10.6553],
         [ 9.4446],
         [ 9.3935],
         ...,
         [10.7075],
         [ 9.4317],
         [ 9.4029]],
        [[11.0544],
         [ 9.8647],
         [ 9.7976],
         ...,
         [11.1123],
         [ 9.8824],
         [ 9.8578]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9904, 0.9664, 0.9640,  ..., 0.9920, 0.9687, 0.9685],
        [0.9552, 0.9290, 0.9281,  ..., 0.9562, 0.9285, 0.9278],
        [0.9511, 0.9248, 0.9240,  ..., 0.9522, 0.9240, 0.9233],
        ...,
        [0.9463, 0.9197, 0.9191,  ..., 0.9472, 0.9186, 0.9178],
        [0.9589, 0.9330, 0.9319,  ..., 0.9601, 0.9327, 0.9321],
        [0.9675, 0.9420, 0.9405,  ..., 0.9687, 0.9424, 0.9418]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1224],
         [23.5699],
         [23.0634],
         ...,
         [19.5343],
         [23.5254],
         [23.2760]],
        [[14.6607],
         [14.7566],
         [14.7587],
         ...,
         [16.7107],
         [14.8213],
         [14.7719]],
        [[14.6046],
         [13.9255],
         [13.9652],
         ...,
         [16.3909],
         [13.9974],
         [13.9634]],
        ...,
        [[14.5352],
         [12.9588],
         [13.0395],
         ...,
         [16.0024],
         [13.0382],
         [13.0211]],
        [[14.7128],
         [15.5679],
         [15.5312],
         ...,
         [17.0116],
         [15.6249],
         [15.5598]],
        [[14.8282],
         [17.5193],
         [17.3820],
         ...,
         [17.6947],
         [17.5558],
         [17.4504]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9852, 1.1226, 1.1144,  ..., 1.0570, 1.1219, 1.1178],
        [0.9777, 0.9793, 0.9793,  ..., 1.0111, 0.9803, 0.9795],
        [0.9768, 0.9658, 0.9664,  ..., 1.0059, 0.9669, 0.9664],
        ...,
        [0.9757, 0.9500, 0.9514,  ..., 0.9995, 0.9513, 0.9511],
        [0.9786, 0.9925, 0.9919,  ..., 1.0160, 0.9934, 0.9923],
        [0.9804, 1.0242, 1.0220,  ..., 1.0271, 1.0248, 1.0231]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[29.7373],
         [54.5701],
         [23.5866],
         ...,
         [69.3646],
         [15.9055],
         [40.9107]],
        [[13.1637],
         [42.9078],
         [17.0007],
         ...,
         [58.1622],
         [12.4129],
         [38.3472]],
        [[11.9005],
         [41.6495],
         [16.3254],
         ...,
         [56.9077],
         [12.0377],
         [38.0413]],
        ...,
        [[10.4999],
         [40.1390],
         [15.5244],
         ...,
         [55.3882],
         [11.5878],
         [37.6649]],
        [[14.4486],
         [44.1031],
         [17.6489],
         ...,
         [59.3449],
         [12.7696],
         [38.6318]],
        [[17.7452],
         [46.8601],
         [19.1681],
         ...,
         [62.0405],
         [13.5936],
         [39.2674]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.1783, 1.5065, 1.0970,  ..., 1.7020, 0.9955, 1.3260],
        [0.9593, 1.3524, 1.0100,  ..., 1.5540, 0.9494, 1.2921],
        [0.9426, 1.3357, 1.0011,  ..., 1.5374, 0.9444, 1.2880],
        ...,
        [0.9241, 1.3158, 0.9905,  ..., 1.5173, 0.9384, 1.2831],
        [0.9763, 1.3682, 1.0185,  ..., 1.5696, 0.9541, 1.2959],
        [1.0198, 1.4046, 1.0386,  ..., 1.6052, 0.9650, 1.3042]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[ 80.1188],
         [ 39.8673],
         [ 23.8250],
         ...,
         [106.5735],
         [ 13.4915],
         [128.8446]],
        [[ 18.4923],
         [ 29.1841],
         [ 10.1644],
         ...,
         [ 31.8070],
         [ 11.0588],
         [ 49.9080]],
        [[ 15.4230],
         [ 28.0787],
         [  9.1472],
         ...,
         [ 27.3854],
         [ 10.7899],
         [ 44.3795]],
        ...,
        [[ 12.3122],
         [ 26.7647],
         [  8.0250],
         ...,
         [ 22.7423],
         [ 10.4652],
         [ 38.3615]],
        [[ 21.8656],
         [ 30.2433],
         [ 11.2037],
         ...,
         [ 36.5206],
         [ 11.3129],
         [ 55.6217]],
        [[ 31.6477],
         [ 32.7185],
         [ 13.8887],
         ...,
         [ 49.5416],
         [ 11.8947],
         [ 70.6514]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[2.3817, 1.5186, 1.1746,  ..., 2.9490, 0.9530, 3.4266],
        [1.0602, 1.2895, 0.8816,  ..., 1.3457, 0.9008, 1.7339],
        [0.9944, 1.2658, 0.8598,  ..., 1.2509, 0.8950, 1.6153],
        ...,
        [0.9277, 1.2376, 0.8358,  ..., 1.1513, 0.8881, 1.4863],
        [1.1325, 1.3122, 0.9039,  ..., 1.4468, 0.9063, 1.8564],
        [1.3423, 1.3653, 0.9615,  ..., 1.7260, 0.9187, 2.1787]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.8114],
         [39.6539],
         [52.2050],
         ...,
         [22.1631],
         [26.8124],
         [71.2646]],
        [[10.8635],
         [25.0911],
         [34.1760],
         ...,
         [12.8682],
         [15.3732],
         [58.4115]],
        [[10.3703],
         [23.7091],
         [32.4298],
         ...,
         [12.0307],
         [14.3503],
         [56.9909]],
        ...,
        [[ 9.7892],
         [22.0991],
         [30.3861],
         ...,
         [11.0666],
         [13.1748],
         [55.2757]],
        [[11.3396],
         [26.4385],
         [35.8714],
         ...,
         [13.6932],
         [16.3822],
         [59.7544]],
        [[12.4654],
         [29.6731],
         [39.9162],
         ...,
         [15.7054],
         [18.8493],
         [62.8280]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.9111, 1.2989, 1.5031,  ..., 1.0145, 1.0901, 1.8131],
        [0.8307, 1.0621, 1.2098,  ..., 0.8633, 0.9040, 1.6040],
        [0.8226, 1.0396, 1.1814,  ..., 0.8497, 0.8874, 1.5809],
        ...,
        [0.8132, 1.0134, 1.1482,  ..., 0.8340, 0.8683, 1.5530],
        [0.8384, 1.0840, 1.2374,  ..., 0.8767, 0.9204, 1.6259],
        [0.8567, 1.1366, 1.3032,  ..., 0.9094, 0.9606, 1.6759]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3024],
         [15.1455],
         [11.9087],
         ...,
         [24.7816],
         [21.2848],
         [21.3240]],
        [[ 9.6150],
         [ 8.8419],
         [10.1058],
         ...,
         [16.6756],
         [12.6505],
         [14.2201]],
        [[ 9.2363],
         [ 8.2720],
         [ 9.9025],
         ...,
         [15.8776],
         [11.8614],
         [13.5244]],
        ...,
        [[ 8.7869],
         [ 7.6155],
         [ 9.6559],
         ...,
         [14.9400],
         [10.9501],
         [12.7082]],
        [[ 9.9784],
         [ 9.4028],
         [10.2972],
         ...,
         [17.4480],
         [13.4256],
         [14.8940]],
        [[10.8297],
         [10.7698],
         [10.7324],
         ...,
         [19.2812],
         [15.3080],
         [16.4964]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9642, 0.9886, 0.9458,  ..., 1.1159, 1.0697, 1.0702],
        [0.9155, 0.9053, 0.9220,  ..., 1.0088, 0.9556, 0.9763],
        [0.9105, 0.8977, 0.9193,  ..., 0.9982, 0.9452, 0.9671],
        ...,
        [0.9045, 0.8890, 0.9160,  ..., 0.9858, 0.9331, 0.9563],
        [0.9203, 0.9127, 0.9245,  ..., 1.0190, 0.9658, 0.9852],
        [0.9315, 0.9307, 0.9302,  ..., 1.0432, 0.9907, 1.0064]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[38.7248],
         [18.2966],
         [24.8547],
         ...,
         [94.3153],
         [15.9774],
         [15.0976]],
        [[11.1353],
         [13.6920],
         [12.9808],
         ...,
         [24.8556],
         [11.1308],
         [13.2081]],
        [[ 9.5432],
         [13.2094],
         [11.9779],
         ...,
         [21.0732],
         [10.6437],
         [12.9913]],
        ...,
        [[ 7.8800],
         [12.6339],
         [10.8402],
         ...,
         [17.1690],
         [10.0687],
         [12.7272]],
        [[12.8399],
         [14.1533],
         [13.9811],
         ...,
         [28.9477],
         [11.6002],
         [13.4115]],
        [[17.5821],
         [15.2268],
         [16.4698],
         ...,
         [40.5203],
         [12.7074],
         [13.8714]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.5139, 1.0758, 1.2165,  ..., 2.7059, 1.0261, 1.0072],
        [0.9223, 0.9771, 0.9618,  ..., 1.2165, 0.9222, 0.9667],
        [0.8881, 0.9667, 0.9403,  ..., 1.1354, 0.9117, 0.9621],
        ...,
        [0.8525, 0.9544, 0.9159,  ..., 1.0516, 0.8994, 0.9564],
        [0.9588, 0.9870, 0.9833,  ..., 1.3042, 0.9322, 0.9711],
        [1.0605, 1.0100, 1.0366,  ..., 1.5524, 0.9560, 0.9809]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5244],
         [32.4904],
         [29.0762],
         ...,
         [16.1493],
         [18.2219],
         [15.9771]],
        [[13.2637],
         [19.6363],
         [25.8806],
         ...,
         [14.9083],
         [15.3843],
         [15.0333]],
        [[12.7264],
         [18.4497],
         [25.5102],
         ...,
         [14.7614],
         [15.0653],
         [14.9204]],
        ...,
        [[12.0897],
         [17.0760],
         [25.0580],
         ...,
         [14.5812],
         [14.6785],
         [14.7815]],
        [[13.7799],
         [20.7996],
         [26.2272],
         ...,
         [15.0451],
         [15.6849],
         [15.1383]],
        [[14.9911],
         [23.6161],
         [27.0087],
         ...,
         [15.3516],
         [16.3690],
         [15.3725]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0066, 1.2338, 1.1782,  ..., 0.9680, 1.0017, 0.9652],
        [0.9211, 1.0247, 1.1263,  ..., 0.9478, 0.9555, 0.9498],
        [0.9123, 1.0054, 1.1202,  ..., 0.9454, 0.9504, 0.9480],
        ...,
        [0.9020, 0.9831, 1.1129,  ..., 0.9425, 0.9441, 0.9457],
        [0.9294, 1.0436, 1.1319,  ..., 0.9500, 0.9604, 0.9515],
        [0.9491, 1.0894, 1.1446,  ..., 0.9550, 0.9716, 0.9554]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2632],
         [14.8028],
         [11.7815],
         ...,
         [24.2277],
         [19.9407],
         [18.9550]],
        [[ 9.6061],
         [ 8.9027],
         [10.0953],
         ...,
         [16.2853],
         [12.1783],
         [13.4031]],
        [[ 9.2300],
         [ 8.3596],
         [ 9.9041],
         ...,
         [15.5038],
         [11.4571],
         [12.8402]],
        ...,
        [[ 8.7837],
         [ 7.7313],
         [ 9.6718],
         ...,
         [14.5858],
         [10.6211],
         [12.1744]],
        [[ 9.9668],
         [ 9.4353],
         [10.2751],
         ...,
         [17.0416],
         [12.8843],
         [13.9446]],
        [[10.8116],
         [10.7262],
         [10.6832],
         ...,
         [18.8373],
         [14.5904],
         [15.2183]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9661, 0.9864, 0.9465,  ..., 1.1110, 1.0543, 1.0413],
        [0.9177, 0.9084, 0.9242,  ..., 1.0060, 0.9517, 0.9679],
        [0.9128, 0.9012, 0.9217,  ..., 0.9957, 0.9422, 0.9605],
        ...,
        [0.9069, 0.8929, 0.9186,  ..., 0.9835, 0.9311, 0.9517],
        [0.9225, 0.9155, 0.9266,  ..., 1.0160, 0.9610, 0.9751],
        [0.9337, 0.9325, 0.9320,  ..., 1.0397, 0.9836, 0.9919]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[37.7970],
         [17.1686],
         [21.1246],
         ...,
         [93.2270],
         [15.7541],
         [14.2780]],
        [[11.1058],
         [13.1735],
         [12.4666],
         ...,
         [24.4202],
         [10.6022],
         [11.8672]],
        [[ 9.5434],
         [12.7486],
         [11.6788],
         ...,
         [20.6886],
         [10.0950],
         [11.5986]],
        ...,
        [[ 7.9064],
         [12.2402],
         [10.7697],
         ...,
         [16.8399],
         [ 9.4990],
         [11.2736]],
        [[12.7744],
         [13.5784],
         [13.2411],
         ...,
         [28.4604],
         [11.0931],
         [12.1207]],
        [[17.3973],
         [14.5164],
         [15.1247],
         ...,
         [39.8992],
         [12.2583],
         [12.6994]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.4953, 1.0529, 1.1378,  ..., 2.6839, 1.0226, 0.9910],
        [0.9229, 0.9673, 0.9521,  ..., 1.2084, 0.9121, 0.9393],
        [0.8894, 0.9582, 0.9352,  ..., 1.1284, 0.9013, 0.9335],
        ...,
        [0.8543, 0.9473, 0.9157,  ..., 1.0459, 0.8885, 0.9265],
        [0.9587, 0.9759, 0.9687,  ..., 1.2951, 0.9227, 0.9447],
        [1.0578, 0.9961, 1.0091,  ..., 1.5404, 0.9476, 0.9571]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.4848],
         [32.8941],
         [28.0507],
         ...,
         [16.1252],
         [18.1737],
         [15.5396]],
        [[13.2394],
         [19.6821],
         [24.6418],
         ...,
         [14.7638],
         [15.4380],
         [14.8016]],
        [[12.7036],
         [18.4697],
         [24.2497],
         ...,
         [14.6034],
         [15.1293],
         [14.7127]],
        ...,
        [[12.0686],
         [17.0683],
         [23.7717],
         ...,
         [14.4069],
         [14.7548],
         [14.6031]],
        [[13.7542],
         [20.8719],
         [25.0094],
         ...,
         [14.9133],
         [15.7285],
         [14.8841]],
        [[14.9620],
         [23.7582],
         [25.8401],
         ...,
         [15.2488],
         [16.3892],
         [15.0679]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0064, 1.2408, 1.1620,  ..., 0.9680, 1.0013, 0.9585],
        [0.9211, 1.0259, 1.1065,  ..., 0.9459, 0.9568, 0.9465],
        [0.9124, 1.0062, 1.1002,  ..., 0.9433, 0.9518, 0.9451],
        ...,
        [0.9020, 0.9834, 1.0924,  ..., 0.9401, 0.9457, 0.9433],
        [0.9295, 1.0452, 1.1125,  ..., 0.9483, 0.9616, 0.9478],
        [0.9491, 1.0922, 1.1260,  ..., 0.9538, 0.9723, 0.9508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2241],
         [14.4469],
         [11.6586],
         ...,
         [23.6752],
         [18.5532],
         [16.6253]],
        [[ 9.5977],
         [ 8.9745],
         [10.1087],
         ...,
         [15.9091],
         [11.7347],
         [12.6553]],
        [[ 9.2243],
         [ 8.4608],
         [ 9.9317],
         ...,
         [15.1451],
         [11.0878],
         [12.2350]],
        ...,
        [[ 8.7811],
         [ 7.8640],
         [ 9.7164],
         ...,
         [14.2477],
         [10.3342],
         [11.7327]],
        [[ 9.9558],
         [ 9.4763],
         [10.2748],
         ...,
         [16.6486],
         [12.3654],
         [13.0561]],
        [[10.7939],
         [10.6852],
         [10.6512],
         ...,
         [18.4042],
         [13.8798],
         [13.9862]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9682, 0.9844, 0.9476,  ..., 1.1064, 1.0387, 1.0132],
        [0.9203, 0.9121, 0.9271,  ..., 1.0037, 0.9486, 0.9607],
        [0.9154, 0.9053, 0.9247,  ..., 0.9936, 0.9400, 0.9552],
        ...,
        [0.9095, 0.8974, 0.9219,  ..., 0.9818, 0.9301, 0.9485],
        [0.9251, 0.9187, 0.9293,  ..., 1.0135, 0.9569, 0.9660],
        [0.9361, 0.9347, 0.9342,  ..., 1.0367, 0.9769, 0.9783]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[36.8657],
         [16.0995],
         [17.5726],
         ...,
         [91.9930],
         [15.2909],
         [13.7878]],
        [[11.0763],
         [12.7020],
         [11.9442],
         ...,
         [23.9851],
         [10.1241],
         [11.1583]],
        [[ 9.5444],
         [12.3348],
         [11.3868],
         ...,
         [20.3083],
         [ 9.6203],
         [10.8698]],
        ...,
        [[ 7.9343],
         [11.8936],
         [10.7309],
         ...,
         [16.5185],
         [ 9.0297],
         [10.5220]],
        [[12.7080],
         [13.0508],
         [12.4830],
         ...,
         [27.9682],
         [10.6126],
         [11.4314]],
        [[17.2099],
         [13.8548],
         [13.7597],
         ...,
         [39.2552],
         [11.7756],
         [12.0580]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.4767, 1.0314, 1.0630,  ..., 2.6588, 1.0140, 0.9818],
        [0.9237, 0.9585, 0.9423,  ..., 1.2005, 0.9032, 0.9254],
        [0.8908, 0.9507, 0.9303,  ..., 1.1216, 0.8924, 0.9192],
        ...,
        [0.8563, 0.9412, 0.9163,  ..., 1.0404, 0.8798, 0.9118],
        [0.9587, 0.9660, 0.9538,  ..., 1.2859, 0.9137, 0.9313],
        [1.0552, 0.9832, 0.9812,  ..., 1.5279, 0.9387, 0.9447]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.4451],
         [33.1325],
         [26.8835],
         ...,
         [16.1051],
         [18.1503],
         [15.3871]],
        [[13.2158],
         [19.7343],
         [23.3092],
         ...,
         [14.6242],
         [15.5281],
         [14.7783]],
        [[12.6814],
         [18.5082],
         [22.9012],
         ...,
         [14.4506],
         [15.2310],
         [14.7046]],
        ...,
        [[12.0482],
         [17.0919],
         [22.4046],
         ...,
         [14.2380],
         [14.8702],
         [14.6137]],
        [[13.7290],
         [20.9382],
         [23.6924],
         ...,
         [14.7863],
         [15.8075],
         [14.8466]],
        [[14.9332],
         [23.8611],
         [24.5603],
         ...,
         [15.1504],
         [16.4419],
         [14.9986]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0062, 1.2451, 1.1435,  ..., 0.9681, 1.0014, 0.9565],
        [0.9212, 1.0272, 1.0853,  ..., 0.9441, 0.9588, 0.9466],
        [0.9125, 1.0072, 1.0787,  ..., 0.9412, 0.9539, 0.9454],
        ...,
        [0.9022, 0.9842, 1.0706,  ..., 0.9378, 0.9481, 0.9439],
        [0.9295, 1.0468, 1.0916,  ..., 0.9467, 0.9633, 0.9477],
        [0.9491, 1.0943, 1.1057,  ..., 0.9526, 0.9736, 0.9502]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9523],
         [12.3698],
         [11.1669],
         ...,
         [19.6898],
         [11.1333],
         [12.8637]],
        [[ 9.5397],
         [ 9.6846],
         [10.6603],
         ...,
         [13.5657],
         [10.9494],
         [ 9.4010]],
        [[ 9.1854],
         [ 9.3957],
         [10.5992],
         ...,
         [12.9543],
         [10.9269],
         [ 9.0430]],
        ...,
        [[ 8.7638],
         [ 9.0489],
         [10.5238],
         ...,
         [12.2335],
         [10.8989],
         [ 8.6177]],
        [[ 9.8791],
         [ 9.9593],
         [10.7170],
         ...,
         [14.1558],
         [10.9703],
         [ 9.7440]],
        [[10.6711],
         [10.5933],
         [10.8432],
         ...,
         [15.5503],
         [11.0165],
         [10.5459]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 0.9700, 0.9541,  ..., 1.0667, 0.9536, 0.9765],
        [0.9326, 0.9345, 0.9474,  ..., 0.9858, 0.9512, 0.9307],
        [0.9279, 0.9307, 0.9466,  ..., 0.9777, 0.9509, 0.9260],
        ...,
        [0.9223, 0.9261, 0.9456,  ..., 0.9682, 0.9505, 0.9204],
        [0.9370, 0.9381, 0.9481,  ..., 0.9936, 0.9515, 0.9353],
        [0.9475, 0.9465, 0.9498,  ..., 1.0120, 0.9521, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[30.5411],
         [12.4031],
         [12.6254],
         ...,
         [80.9756],
         [11.9869],
         [12.2545]],
        [[10.8812],
         [10.7949],
         [10.0118],
         ...,
         [20.8908],
         [10.4199],
         [10.5826]],
        [[ 9.5762],
         [10.6109],
         [ 9.7285],
         ...,
         [17.6652],
         [10.2407],
         [10.3922]],
        ...,
        [[ 8.1720],
         [10.3869],
         [ 9.3879],
         ...,
         [14.3454],
         [10.0227],
         [10.1606]],
        [[12.2434],
         [10.9676],
         [10.2808],
         ...,
         [24.3894],
         [10.5881],
         [10.7615]],
        [[11.1314]],
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
        ...,.1314]],
        [[ 8.7670],
         [10.2753],
         [ 9.4521],
         ...,
         [11.2369],
         [11.0961],
         [ 7.7908]],
        [[ 9.8362],
         [10.6079],
         [10.1875],
         ...,
         [12.7528],
         [11.9220],
         [ 9.4326]],
        [[10.5925],
         [10.8276],
         [10.6910],
         ...,
         [13.8353],
         [12.4860],
         [10.6683]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9608, 0.9429, 0.9517,  ..., 1.0166, 0.9776, 0.9843],
        [0.9179, 0.9311, 0.9239,  ..., 0.9547, 0.9465, 0.9101],
        [0.9134, 0.9297, 0.9209,  ..., 0.9483, 0.9431, 0.9032],
        ...,
        [0.9081, 0.9280, 0.9171,  ..., 0.9407, 0.9389, 0.8952],
        [0.9222, 0.9324, 0.9269,  ..., 0.9608, 0.9498, 0.9169],
        [0.9322, 0.9353, 0.9335,  ..., 0.9751, 0.9572, 0.9332]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[26.1787],
         [12.1274],
         [12.4634],
         ...,
         [69.3073],
         [12.2105],
         [12.0004]],
        [[10.7493],
         [10.4809],
         [10.1459],
         ...,
         [18.6965],
         [10.5393],
         [10.4246]],
        [[ 9.6279],
         [10.2933],
         [ 9.8907],
         ...,
         [15.8973],
         [10.3491],
         [10.2446]],
        ...,
        [[ 8.3972],
         [10.0651],
         [ 9.5830],
         ...,
         [12.9986],
         [10.1176],
         [10.0254]],
        [[11.9004],
         [10.6572],
         [10.3872],
         ...,
         [21.7166],
         [10.7181],
         [10.5937]],
        [[14.8953],
         [11.0566],
         [10.9404],
         ...,
         [30.2200],
         [11.1234],
         [10.9766]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2674, 0.9661, 0.9733,  ..., 2.1923, 0.9679, 0.9634],
        [0.9366, 0.9308, 0.9236,  ..., 1.1070, 0.9321, 0.9296],
        [0.9125, 0.9268, 0.9181,  ..., 1.0469, 0.9280, 0.9257],
        ...,
        [0.8861, 0.9219, 0.9115,  ..., 0.9848, 0.9230, 0.9210],
        [0.9612, 0.9346, 0.9288,  ..., 1.1717, 0.9359, 0.9332],
        [1.0255, 0.9431, 0.9407,  ..., 1.3541, 0.9446, 0.9414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9416],
         [21.0642],
         [26.0222],
         ...,
         [15.7289],
         [27.0897],
         [15.4032]],
        [[12.9390],
         [17.9039],
         [22.2906],
         ...,
         [13.1645],
         [23.5195],
         [14.3880]],
        [[12.4259],
         [17.5472],
         [21.8675],
         ...,
         [12.8776],
         [23.1116],
         [14.2671]],
        ...,
        [[11.8172],
         [17.1143],
         [21.3536],
         ...,
         [12.5302],
         [22.6152],
         [14.1184]],
        [[13.4315],
         [18.2396],
         [22.6884],
         ...,
         [13.4350],
         [23.9025],
         [14.5006]],
        [[14.5856],
         [19.0029],
         [23.5915],
         ...,
         [14.0517],
         [24.7697],
         [14.7520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0050, 1.0558, 1.1364,  ..., 0.9690, 1.1538, 0.9637],
        [0.9236, 1.0044, 1.0757,  ..., 0.9273, 1.0957, 0.9472],
        [0.9153, 0.9986, 1.0688,  ..., 0.9226, 1.0891, 0.9452],
        ...,
        [0.9054, 0.9915, 1.0605,  ..., 0.9170, 1.0810, 0.9428],
        [0.9316, 1.0098, 1.0822,  ..., 0.9317, 1.1019, 0.9490],
        [0.9504, 1.0222, 1.0969,  ..., 0.9417, 1.1160, 0.9531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6703],
         [11.3772],
         [12.2001],
         ...,
         [16.0442],
         [11.9289],
         [11.9938]],
        [[ 9.5163],
         [10.5870],
         [ 9.8649],
         ...,
         [11.9133],
         [11.1822],
         [ 9.8531]],
        [[ 9.1850],
         [10.4931],
         [ 9.6088],
         ...,
         [11.4823],
         [11.0930],
         [ 9.6161]],
        ...,
        [[ 8.7898],
         [10.3777],
         [ 9.3002],
         ...,
         [10.9689],
         [10.9834],
         [ 9.3300]],
        [[ 9.8328],
         [10.6745],
         [10.1073],
         ...,
         [12.3256],
         [11.2651],
         [10.0770]],
        [[10.5689],
         [10.8700],
         [10.6637],
         ...,
         [13.2866],
         [11.4503],
         [10.5892]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9800, 0.9629, 0.9738,  ..., 1.0246, 0.9702, 0.9710],
        [0.9383, 0.9524, 0.9429,  ..., 0.9700, 0.9603, 0.9427],
        [0.9339, 0.9512, 0.9395,  ..., 0.9643, 0.9591, 0.9396],
        ...,
        [0.9287, 0.9497, 0.9354,  ..., 0.9575, 0.9577, 0.9358],
        [0.9425, 0.9536, 0.9461,  ..., 0.9754, 0.9614, 0.9457],
        [0.9522, 0.9562, 0.9535,  ..., 0.9881, 0.9639, 0.9525]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[24.2282],
         [12.3939],
         [12.2195],
         ...,
         [61.8210],
         [12.1505],
         [11.8139]],
        [[10.6839],
         [10.7808],
         [10.1950],
         ...,
         [17.7749],
         [10.2107],
         [10.3312]],
        [[ 9.6541],
         [10.5963],
         [ 9.9689],
         ...,
         [15.2334],
         [ 9.9932],
         [10.1611]],
        ...,
        [[ 8.5129],
         [10.3717],
         [ 9.6953],
         ...,
         [12.5783],
         [ 9.7297],
         [ 9.9539]],
        [[11.7319],
         [10.9540],
         [10.4082],
         ...,
         [20.4962],
         [10.4157],
         [10.4908]],
        [[14.4227],
         [11.3460],
         [10.8947],
         ...,
         [28.0667],
         [10.8828],
         [10.8517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2256, 0.9718, 0.9681,  ..., 2.0317, 0.9666, 0.9594],
        [0.9352, 0.9373, 0.9247,  ..., 1.0872, 0.9250, 0.9276],
        [0.9131, 0.9333, 0.9198,  ..., 1.0327, 0.9204, 0.9240],
        ...,
        [0.8886, 0.9285, 0.9140,  ..., 0.9758, 0.9147, 0.9195],
        [0.9577, 0.9410, 0.9293,  ..., 1.1456, 0.9294, 0.9310],
        [1.0154, 0.9494, 0.9397,  ..., 1.3079, 0.9394, 0.9388]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.8439],
         [21.1910],
         [27.8784],
         ...,
         [15.7209],
         [23.3131],
         [14.4241]],
        [[12.9125],
         [18.0629],
         [23.6245],
         ...,
         [13.0352],
         [20.5159],
         [13.8242]],
        [[12.4057],
         [17.7093],
         [23.1453],
         ...,
         [12.7364],
         [20.1938],
         [13.7517]],
        ...,
        [[11.8042],
         [17.2800],
         [22.5639],
         ...,
         [12.3750],
         [19.8011],
         [13.6622]],
        [[13.3988],
         [18.3957],
         [24.0758],
         ...,
         [13.3173],
         [20.8178],
         [13.8915]],
        [[14.5376],
         [19.1517],
         [25.1024],
         ...,
         [13.9615],
         [21.4997],
         [14.0411]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0050, 1.0594, 1.1682,  ..., 0.9704, 1.0939, 0.9493],
        [0.9248, 1.0085, 1.0990,  ..., 0.9268, 1.0484, 0.9396],
        [0.9165, 1.0028, 1.0912,  ..., 0.9219, 1.0432, 0.9384],
        ...,
        [0.9067, 0.9958, 1.0817,  ..., 0.9160, 1.0368, 0.9370],
        [0.9327, 1.0139, 1.1063,  ..., 0.9313, 1.0533, 0.9407],
        [0.9512, 1.0262, 1.1230,  ..., 0.9418, 1.0644, 0.9431]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5970],
         [11.2768],
         [12.1377],
         ...,
         [15.0432],
         [12.5835],
         [13.2850]],
        [[ 9.5166],
         [10.7709],
         [ 9.9573],
         ...,
         [11.5216],
         [11.3433],
         [ 9.2464]],
        [[ 9.1919],
         [10.7099],
         [ 9.7162],
         ...,
         [11.1474],
         [11.1986],
         [ 8.8408]],
        ...,
        [[ 8.8043],
         [10.6346],
         [ 9.4251],
         ...,
         [10.6998],
         [11.0215],
         [ 8.3620]],
        [[ 9.8266],
         [10.8275],
         [10.1852],
         ...,
         [11.8782],
         [11.4786],
         [ 9.6374]],
        [[10.5467],
         [10.9536],
         [10.7067],
         ...,
         [12.7046],
         [11.7830],
         [10.5597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9704, 0.9530, 0.9643,  ..., 1.0027, 0.9702, 0.9795],
        [0.9297, 0.9463, 0.9355,  ..., 0.9562, 0.9538, 0.9261],
        [0.9254, 0.9455, 0.9323,  ..., 0.9513, 0.9519, 0.9208],
        ...,
        [0.9203, 0.9445, 0.9285,  ..., 0.9453, 0.9496, 0.9144],
        [0.9338, 0.9470, 0.9385,  ..., 0.9609, 0.9556, 0.9313],
        [0.9433, 0.9487, 0.9454,  ..., 0.9718, 0.9596, 0.9435]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.6636],
         [12.2869],
         [12.0819],
         ...,
         [56.0517],
         [11.8164],
         [11.8823]],
        [[10.6335],
         [10.6215],
         [10.2275],
         ...,
         [16.8692],
         [10.3274],
         [10.3851]],
        [[ 9.6827],
         [10.4317],
         [10.0187],
         ...,
         [14.5391],
         [10.1566],
         [10.2134]],
        ...,
        [[ 8.6198],
         [10.2008],
         [ 9.7654],
         ...,
         [12.0896],
         [ 9.9486],
         [10.0042]],
        [[11.5941],
         [10.7997],
         [10.4241],
         ...,
         [19.3506],
         [10.4876],
         [10.5462]],
        [[14.0320],
         [11.2038],
         [10.8715],
         ...,
         [26.1945],
         [10.8499],
         [10.9105]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1915, 0.9690, 0.9646,  ..., 1.9075, 0.9589, 0.9603],
        [0.9336, 0.9333, 0.9249,  ..., 1.0673, 0.9270, 0.9282],
        [0.9132, 0.9292, 0.9204,  ..., 1.0173, 0.9233, 0.9245],
        ...,
        [0.8904, 0.9243, 0.9149,  ..., 0.9648, 0.9189, 0.9201],
        [0.9542, 0.9371, 0.9291,  ..., 1.1205, 0.9304, 0.9317],
        [1.0064, 0.9458, 0.9387,  ..., 1.2672, 0.9382, 0.9395]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7513],
         [20.0584],
         [25.9993],
         ...,
         [15.7067],
         [23.9557],
         [14.9981]],
        [[12.8735],
         [17.1677],
         [22.2860],
         ...,
         [12.8522],
         [21.1654],
         [14.0773]],
        [[12.3715],
         [16.8401],
         [21.8648],
         ...,
         [12.5370],
         [20.8434],
         [13.9673]],
        ...,
        [[11.7757],
         [16.4423],
         [21.3532],
         ...,
         [12.1565],
         [20.4506],
         [13.8320]],
        [[13.3550],
         [17.4757],
         [22.6820],
         ...,
         [13.1502],
         [21.4671],
         [14.1796]],
        [[14.4821],
         [18.1752],
         [23.5809],
         ...,
         [13.8325],
         [22.1481],
         [14.4080]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0051, 1.0426, 1.1392,  ..., 0.9718, 1.1060, 0.9603],
        [0.9257, 0.9956, 1.0788,  ..., 0.9254, 1.0606, 0.9453],
        [0.9176, 0.9902, 1.0720,  ..., 0.9202, 1.0553, 0.9435],
        ...,
        [0.9079, 0.9838, 1.0636,  ..., 0.9141, 1.0490, 0.9413],
        [0.9335, 1.0006, 1.0852,  ..., 0.9302, 1.0655, 0.9470],
        [0.9519, 1.0119, 1.0999,  ..., 0.9413, 1.0766, 0.9507]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5264],
         [11.4929],
         [11.9608],
         ...,
         [14.0942],
         [12.1951],
         [14.0382]],
        [[ 9.5501],
         [10.6571],
         [10.1121],
         ...,
         [11.1814],
         [11.3198],
         [ 9.0317]],
        [[ 9.2347],
         [10.5579],
         [ 9.9041],
         ...,
         [10.8655],
         [11.2159],
         [ 8.5518]],
        ...,
        [[ 8.8577],
         [10.4361],
         [ 9.6518],
         ...,
         [10.4857],
         [11.0883],
         [ 7.9915]],
        [[ 9.8508],
         [10.7494],
         [10.3080],
         ...,
         [11.4811],
         [11.4165],
         [ 9.4986]],
        [[10.5484],
         [10.9561],
         [10.7539],
         ...,
         [12.1714],
         [11.6330],
         [10.6161]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9619, 0.9482, 0.9544,  ..., 0.9826, 0.9575, 0.9819],
        [0.9225, 0.9372, 0.9300,  ..., 0.9441, 0.9459, 0.9157],
        [0.9184, 0.9359, 0.9272,  ..., 0.9399, 0.9446, 0.9093],
        ...,
        [0.9134, 0.9343, 0.9239,  ..., 0.9349, 0.9429, 0.9019],
        [0.9265, 0.9384, 0.9326,  ..., 0.9481, 0.9472, 0.9219],
        [0.9357, 0.9411, 0.9385,  ..., 0.9572, 0.9501, 0.9366]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.9602],
         [12.2647],
         [12.0694],
         ...,
         [48.3012],
         [11.8562],
         [12.0882]],
        [[10.5684],
         [10.5941],
         [10.2307],
         ...,
         [15.8618],
         [10.3753],
         [10.4606]],
        [[ 9.7095],
         [10.4038],
         [10.0235],
         ...,
         [13.8194],
         [10.2053],
         [10.2750]],
        ...,
        [[ 8.7398],
         [10.1724],
         [ 9.7721],
         ...,
         [11.6462],
         [ 9.9982],
         [10.0492]],
        [[11.4287],
         [10.7729],
         [10.4258],
         ...,
         [18.0145],
         [10.5347],
         [10.6349]],
        [[13.5830],
         [11.1782],
         [10.8695],
         ...,
         [23.8552],
         [10.8952],
         [11.0299]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1552, 0.9687, 0.9645,  ..., 1.7414, 0.9599, 0.9649],
        [0.9323, 0.9329, 0.9251,  ..., 1.0458, 0.9282, 0.9300],
        [0.9139, 0.9288, 0.9206,  ..., 1.0020, 0.9245, 0.9260],
        ...,
        [0.8931, 0.9238, 0.9152,  ..., 0.9554, 0.9201, 0.9212],
        [0.9508, 0.9367, 0.9293,  ..., 1.0920, 0.9316, 0.9337],
        [0.9970, 0.9454, 0.9388,  ..., 1.2172, 0.9393, 0.9422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6440],
         [20.9008],
         [23.0263],
         ...,
         [15.6901],
         [23.7490],
         [15.6651]],
        [[12.8440],
         [17.8183],
         [20.0983],
         ...,
         [12.7174],
         [20.6877],
         [14.5163]],
        [[12.3489],
         [17.4699],
         [19.7628],
         ...,
         [12.3910],
         [20.3373],
         [14.3801]],
        ...,
        [[11.7609],
         [17.0468],
         [19.3541],
         ...,
         [11.9975],
         [19.9107],
         [14.2128]],
        [[13.3186],
         [18.1463],
         [20.4131],
         ...,
         [13.0264],
         [21.0166],
         [14.6432]],
        [[14.4290],
         [18.8914],
         [21.1254],
         ...,
         [13.7351],
         [21.7609],
         [14.9272]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0052, 1.0582, 1.0927,  ..., 0.9734, 1.1045, 0.9730],
        [0.9271, 1.0080, 1.0451,  ..., 0.9251, 1.0547, 0.9543],
        [0.9191, 1.0024, 1.0397,  ..., 0.9198, 1.0490, 0.9521],
        ...,
        [0.9095, 0.9955, 1.0330,  ..., 0.9134, 1.0421, 0.9494],
        [0.9348, 1.0134, 1.0502,  ..., 0.9301, 1.0600, 0.9564],
        [0.9529, 1.0255, 1.0618,  ..., 0.9416, 1.0722, 0.9610]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1893],
         [11.9078],
         [12.0648],
         ...,
         [11.6062],
         [11.8446],
         [15.3805]],
        [[ 9.7300],
         [10.6883],
         [10.2881],
         ...,
         [10.1552],
         [10.9379],
         [ 8.7706]],
        [[ 9.4623],
         [10.5463],
         [10.0872],
         ...,
         [ 9.9887],
         [10.8306],
         [ 8.1814]],
        ...,
        [[ 9.1403],
         [10.3727],
         [ 9.8433],
         ...,
         [ 9.7859],
         [10.6989],
         [ 7.5050]],
        [[ 9.9838],
         [10.8211],
         [10.4771],
         ...,
         [10.3114],
         [11.0379],
         [ 9.3521]],
        [[10.5676],
         [11.1200],
         [10.9066],
         ...,
         [10.6646],
         [11.2618],
         [10.7752]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9475, 0.9437, 0.9458,  ..., 0.9398, 0.9429, 0.9896],
        [0.9150, 0.9276, 0.9223,  ..., 0.9206, 0.9309, 0.9023],
        [0.9114, 0.9258, 0.9197,  ..., 0.9184, 0.9295, 0.8945],
        ...,
        [0.9072, 0.9235, 0.9165,  ..., 0.9157, 0.9278, 0.8856],
        [0.9183, 0.9294, 0.9248,  ..., 0.9227, 0.9323, 0.9100],
        [0.9260, 0.9333, 0.9305,  ..., 0.9273, 0.9352, 0.9288]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1974],
         [12.2418],
         [11.8850],
         ...,
         [20.5646],
         [12.1257],
         [12.3436]],
        [[10.1778],
         [10.5690],
         [10.2875],
         ...,
         [11.0522],
         [10.4800],
         [10.7027]],
        [[ 9.6089],
         [10.3785],
         [10.1053],
         ...,
         [10.2345],
         [10.2925],
         [10.5154]],
        ...,
        [[ 8.9468],
         [10.1468],
         [ 9.8836],
         ...,
         [ 9.3032],
         [10.0644],
         [10.2874]],
        [[10.7329],
         [10.7480],
         [10.4586],
         ...,
         [11.8650],
         [10.6562],
         [10.8786]],
        [[12.0672],
         [11.1537],
         [10.8463],
         ...,
         [13.8764],
         [11.0554],
         [11.2771]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0552, 0.9704, 0.9628,  ..., 1.1489, 0.9679, 0.9726],
        [0.9262, 0.9345, 0.9285,  ..., 0.9449, 0.9326, 0.9374],
        [0.9140, 0.9305, 0.9246,  ..., 0.9274, 0.9286, 0.9334],
        ...,
        [0.8998, 0.9255, 0.9198,  ..., 0.9074, 0.9237, 0.9285],
        [0.9381, 0.9384, 0.9322,  ..., 0.9623, 0.9364, 0.9412],
        [0.9667, 0.9471, 0.9405,  ..., 1.0055, 0.9450, 0.9497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.0912],
         [20.8931],
         [18.1227],
         ...,
         [15.7256],
         [22.5238],
         [16.3520]],
        [[12.6844],
         [17.7991],
         [16.5887],
         ...,
         [12.0395],
         [19.3981],
         [15.1399]],
        [[12.2248],
         [17.4494],
         [16.4081],
         ...,
         [11.6480],
         [19.0426],
         [14.9962]],
        ...,
        [[11.6773],
         [17.0249],
         [16.1866],
         ...,
         [11.1796],
         [18.6105],
         [14.8198]],
        [[13.1242],
         [18.1281],
         [16.7572],
         ...,
         [12.4127],
         [19.7321],
         [15.2737]],
        [[14.1492],
         [18.8758],
         [17.1352],
         ...,
         [13.2776],
         [20.4898],
         [15.5733]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0072, 1.0691, 1.0240,  ..., 0.9850, 1.0956, 0.9952],
        [0.9356, 1.0188, 0.9991,  ..., 0.9251, 1.0448, 0.9755],
        [0.9281, 1.0131, 0.9961,  ..., 0.9187, 1.0390, 0.9732],
        ...,
        [0.9192, 1.0062, 0.9925,  ..., 0.9111, 1.0320, 0.9703],
        [0.9427, 1.0241, 1.0018,  ..., 0.9312, 1.0502, 0.9777],
        [0.9594, 1.0363, 1.0080,  ..., 0.9452, 1.0625, 0.9826]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3802],
         [11.6602],
         [11.9970],
         ...,
         [12.7797],
         [11.7510],
         [14.5657]],
        [[ 9.6238],
         [10.6696],
         [10.1856],
         ...,
         [10.7224],
         [11.1997],
         [ 8.9144]],
        [[ 9.3284],
         [10.5530],
         [ 9.9813],
         ...,
         [10.4920],
         [11.1332],
         [ 8.3887]],
        ...,
        [[ 8.9743],
         [10.4100],
         [ 9.7334],
         ...,
         [10.2128],
         [11.0513],
         [ 7.7792]],
        [[ 9.9048],
         [10.7784],
         [10.3779],
         ...,
         [10.9397],
         [11.2613],
         [ 9.4289]],
        [[10.5543],
         [11.0225],
         [10.8153],
         ...,
         [11.4348],
         [11.3987],
         [10.6719]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9556, 0.9461, 0.9505,  ..., 0.9609, 0.9473, 0.9845],
        [0.9192, 0.9330, 0.9266,  ..., 0.9337, 0.9400, 0.9098],
        [0.9153, 0.9314, 0.9239,  ..., 0.9306, 0.9391, 0.9028],
        ...,
        [0.9106, 0.9296, 0.9206,  ..., 0.9270, 0.9380, 0.8948],
        [0.9229, 0.9344, 0.9291,  ..., 0.9366, 0.9408, 0.9166],
        [0.9315, 0.9377, 0.9349,  ..., 0.9431, 0.9426, 0.9330]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.1405],
         [12.2552],
         [11.9790],
         ...,
         [33.9126],
         [11.9607],
         [12.2080]],
        [[10.4254],
         [10.5833],
         [10.2556],
         ...,
         [13.7026],
         [10.4110],
         [10.5372]],
        [[ 9.7346],
         [10.3929],
         [10.0603],
         ...,
         [12.2485],
         [10.2337],
         [10.3470]],
        ...,
        [[ 8.9404],
         [10.1613],
         [ 9.8231],
         ...,
         [10.6565],
         [10.0179],
         [10.1156]],
        [[11.1067],
         [10.7622],
         [10.4393],
         ...,
         [15.1978],
         [10.5774],
         [10.7159]],
        [[12.7718],
         [11.1678],
         [10.8564],
         ...,
         [19.1000],
         [10.9541],
         [11.1212]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0953, 0.9691, 0.9631,  ..., 1.4335, 0.9627, 0.9680],
        [0.9298, 0.9332, 0.9262,  ..., 1.0001, 0.9295, 0.9322],
        [0.9150, 0.9291, 0.9220,  ..., 0.9689, 0.9257, 0.9281],
        ...,
        [0.8980, 0.9242, 0.9169,  ..., 0.9348, 0.9211, 0.9232],
        [0.9444, 0.9370, 0.9301,  ..., 1.0322, 0.9331, 0.9360],
        [0.9801, 0.9457, 0.9391,  ..., 1.1158, 0.9412, 0.9447]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.4113],
         [20.8984],
         [20.8167],
         ...,
         [15.6791],
         [23.2301],
         [15.9451]],
        [[12.7767],
         [17.8104],
         [18.4967],
         ...,
         [12.4226],
         [20.1333],
         [14.7711]],
        [[12.2964],
         [17.4614],
         [18.2281],
         ...,
         [12.0697],
         [19.7798],
         [14.6319]],
        ...,
        [[11.7254],
         [17.0377],
         [17.9002],
         ...,
         [11.6456],
         [19.3497],
         [14.4610]],
        [[13.2367],
         [18.1389],
         [18.7482],
         ...,
         [12.7576],
         [20.4652],
         [14.9008]],
        [[14.3113],
         [18.8852],
         [19.3153],
         ...,
         [13.5291],
         [21.2171],
         [15.1909]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0058, 1.0625, 1.0612,  ..., 0.9776, 1.1004, 0.9819],
        [0.9304, 1.0123, 1.0234,  ..., 0.9246, 1.0501, 0.9628],
        [0.9226, 1.0066, 1.0191,  ..., 0.9189, 1.0443, 0.9606],
        ...,
        [0.9133, 0.9997, 1.0137,  ..., 0.9120, 1.0373, 0.9578],
        [0.9379, 1.0176, 1.0275,  ..., 0.9301, 1.0555, 0.9650],
        [0.9554, 1.0298, 1.0368,  ..., 0.9426, 1.0677, 0.9697]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0405],
         [12.3034],
         [12.6187],
         ...,
         [11.5307],
         [12.6895],
         [15.2153]],
        [[ 9.8222],
         [10.4300],
         [10.1344],
         ...,
         [10.2261],
         [10.6559],
         [ 8.7967]],
        [[ 9.5777],
         [10.2189],
         [ 9.8631],
         ...,
         [10.0752],
         [10.4279],
         [ 8.2198]],
        ...,
        [[ 9.2826],
         [ 9.9628],
         [ 9.5363],
         ...,
         [ 9.8911],
         [10.1518],
         [ 7.5561]],
        [[10.0534],
         [10.6288],
         [10.3915],
         ...,
         [10.3674],
         [10.8707],
         [ 9.3652]],
        [[10.5832],
         [11.0809],
         [10.9823],
         ...,
         [10.6861],
         [11.3603],
         [10.7529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9465, 0.9500, 0.9542,  ..., 0.9398, 0.9551, 0.9885],
        [0.9172, 0.9253, 0.9214,  ..., 0.9226, 0.9282, 0.9037],
        [0.9140, 0.9225, 0.9178,  ..., 0.9206, 0.9252, 0.8961],
        ...,
        [0.9101, 0.9191, 0.9135,  ..., 0.9181, 0.9216, 0.8873],
        [0.9203, 0.9279, 0.9248,  ..., 0.9244, 0.9311, 0.9112],
        [0.9273, 0.9339, 0.9326,  ..., 0.9286, 0.9376, 0.9295]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0359],
         [12.2398],
         [11.9066],
         ...,
         [14.1221],
         [12.2783],
         [12.4398]],
        [[ 9.9214],
         [10.5670],
         [10.2792],
         ...,
         [ 9.6573],
         [10.6106],
         [10.8487]],
        [[ 9.3489],
         [10.3765],
         [10.0939],
         ...,
         [ 9.2135],
         [10.4205],
         [10.6664]],
        ...,
        [[ 8.6841],
         [10.1448],
         [ 9.8685],
         ...,
         [ 8.6909],
         [10.1894],
         [10.4445]],
        [[10.4810],
         [10.7460],
         [10.4533],
         ...,
         [10.0859],
         [10.7891],
         [11.0197]],
        [[11.8302],
         [11.1517],
         [10.8481],
         ...,
         [11.1004],
         [11.1937],
         [11.4067]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0542, 0.9728, 0.9657,  ..., 1.0132, 0.9737, 0.9771],
        [0.9231, 0.9370, 0.9308,  ..., 0.9175, 0.9379, 0.9430],
        [0.9109, 0.9329, 0.9268,  ..., 0.9080, 0.9338, 0.9391],
        ...,
        [0.8966, 0.9279, 0.9220,  ..., 0.8967, 0.9289, 0.9343],
        [0.9351, 0.9408, 0.9345,  ..., 0.9267, 0.9417, 0.9467],
        [0.9641, 0.9495, 0.9430,  ..., 0.9484, 0.9504, 0.9550]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.8532],
         [21.4556],
         [17.5299],
         ...,
         [15.6612],
         [22.0142],
         [16.5133]],
        [[12.6525],
         [18.5189],
         [16.1260],
         ...,
         [11.9347],
         [18.8191],
         [15.4797]],
        [[12.2114],
         [18.1845],
         [15.9602],
         ...,
         [11.5399],
         [18.4573],
         [15.3563]],
        ...,
        [[11.6852],
         [17.7779],
         [15.7568],
         ...,
         [11.0680],
         [18.0179],
         [15.2045]],
        [[13.0740],
         [18.8330],
         [16.2805],
         ...,
         [12.3112],
         [19.1594],
         [15.5944]],
        [[14.0542],
         [19.5453],
         [16.6269],
         ...,
         [13.1844],
         [19.9323],
         [15.8507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0048, 1.0797, 1.0158,  ..., 0.9854, 1.0887, 0.9993],
        [0.9365, 1.0319, 0.9930,  ..., 0.9248, 1.0368, 0.9825],
        [0.9293, 1.0265, 0.9903,  ..., 0.9184, 1.0309, 0.9805],
        ...,
        [0.9208, 1.0198, 0.9870,  ..., 0.9107, 1.0238, 0.9780],
        [0.9433, 1.0370, 0.9955,  ..., 0.9309, 1.0423, 0.9843],
        [0.9593, 1.0486, 1.0011,  ..., 0.9451, 1.0549, 0.9885]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3154],
         [11.7701],
         [12.1032],
         ...,
         [12.4883],
         [11.7593],
         [14.6783]],
        [[ 9.6584],
         [10.6232],
         [10.1748],
         ...,
         [10.6297],
         [11.1112],
         [ 8.8921]],
        [[ 9.3722],
         [10.4892],
         [ 9.9586],
         ...,
         [10.4198],
         [11.0335],
         [ 8.3572]],
        ...,
        [[ 9.0287],
         [10.3253],
         [ 9.6965],
         ...,
         [10.1650],
         [10.9378],
         [ 7.7378]],
        [[ 9.9304],
         [10.7484],
         [10.3787],
         ...,
         [10.8273],
         [11.1834],
         [ 9.4163]],
        [[10.5581],
         [11.0299],
         [10.8430],
         ...,
         [11.2764],
         [11.3445],
         [10.6850]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9539, 0.9467, 0.9511,  ..., 0.9562, 0.9465, 0.9851],
        [0.9188, 0.9315, 0.9256,  ..., 0.9316, 0.9380, 0.9087],
        [0.9150, 0.9298, 0.9227,  ..., 0.9288, 0.9370, 0.9016],
        ...,
        [0.9105, 0.9276, 0.9193,  ..., 0.9255, 0.9357, 0.8934],
        [0.9224, 0.9332, 0.9283,  ..., 0.9342, 0.9389, 0.9156],
        [0.9307, 0.9369, 0.9344,  ..., 0.9402, 0.9411, 0.9323]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2976],
         [12.2524],
         [11.9645],
         ...,
         [28.4778],
         [12.0249],
         [12.2504]],
        [[10.3498],
         [10.5803],
         [10.2600],
         ...,
         [12.8247],
         [10.4337],
         [10.5781]],
        [[ 9.7123],
         [10.3899],
         [10.0667],
         ...,
         [11.6188],
         [10.2519],
         [10.3876]],
        ...,
        [[ 8.9753],
         [10.1583],
         [ 9.8318],
         ...,
         [10.2784],
         [10.0308],
         [10.1560]],
        [[10.9755],
         [10.7592],
         [10.4418],
         ...,
         [14.0489],
         [10.6043],
         [10.7570]],
        [[12.4933],
         [11.1648],
         [10.8545],
         ...,
         [17.1797],
         [10.9908],
         [11.1627]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0778, 0.9696, 0.9634,  ..., 1.3175, 0.9647, 0.9695],
        [0.9288, 0.9337, 0.9269,  ..., 0.9818, 0.9306, 0.9337],
        [0.9151, 0.9296, 0.9227,  ..., 0.9560, 0.9267, 0.9296],
        ...,
        [0.8993, 0.9247, 0.9177,  ..., 0.9272, 0.9219, 0.9246],
        [0.9422, 0.9376, 0.9307,  ..., 1.0081, 0.9342, 0.9375],
        [0.9747, 0.9463, 0.9396,  ..., 1.0752, 0.9425, 0.9462]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.3100],
         [21.0172],
         [20.1813],
         ...,
         [15.6665],
         [23.0175],
         [16.0433]],
        [[12.7540],
         [17.9385],
         [18.0255],
         ...,
         [12.3311],
         [19.8856],
         [14.8944]],
        [[12.2808],
         [17.5902],
         [17.7752],
         ...,
         [11.9710],
         [19.5288],
         [14.7580]],
        ...,
        [[11.7178],
         [17.1673],
         [17.4694],
         ...,
         [11.5386],
         [19.0948],
         [14.5905]],
        [[13.2071],
         [18.2662],
         [18.2598],
         ...,
         [12.6731],
         [20.2207],
         [15.0214]],
        [[14.2646],
         [19.0106],
         [18.7874],
         ...,
         [13.4618],
         [20.9805],
         [15.3056]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0061, 1.0664, 1.0528,  ..., 0.9794, 1.0990, 0.9855],
        [0.9320, 1.0164, 1.0178,  ..., 0.9251, 1.0480, 0.9668],
        [0.9243, 1.0107, 1.0137,  ..., 0.9193, 1.0422, 0.9646],
        ...,
        [0.9152, 1.0038, 1.0087,  ..., 0.9123, 1.0352, 0.9619],
        [0.9394, 1.0217, 1.0216,  ..., 0.9307, 1.0535, 0.9689],
        [0.9566, 1.0338, 1.0302,  ..., 0.9435, 1.0658, 0.9735]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2182],
         [11.8958],
         [12.7119],
         ...,
         [12.2964],
         [12.0423],
         [13.9537]],
        [[ 9.7131],
         [10.4831],
         [ 9.9691],
         ...,
         [10.6260],
         [10.9505],
         [ 9.0527]],
        [[ 9.4411],
         [10.3203],
         [ 9.6736],
         ...,
         [10.4357],
         [10.8224],
         [ 8.5805]],
        ...,
        [[ 9.1140],
         [10.1218],
         [ 9.3190],
         ...,
         [10.2042],
         [10.6655],
         [ 8.0286]],
        [[ 9.9712],
         [10.6357],
         [10.2499],
         ...,
         [10.8048],
         [11.0701],
         [ 9.5116]],
        [[10.5652],
         [10.9802],
         [10.8978],
         ...,
         [11.2100],
         [11.3386],
         [10.6082]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9586, 0.9543, 0.9651,  ..., 0.9596, 0.9562, 0.9815],
        [0.9255, 0.9356, 0.9288,  ..., 0.9375, 0.9418, 0.9167],
        [0.9219, 0.9335, 0.9249,  ..., 0.9350, 0.9401, 0.9105],
        ...,
        [0.9175, 0.9309, 0.9203,  ..., 0.9319, 0.9380, 0.9032],
        [0.9289, 0.9377, 0.9326,  ..., 0.9399, 0.9434, 0.9228],
        [0.9367, 0.9422, 0.9411,  ..., 0.9452, 0.9469, 0.9373]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.5977],
         [12.2503],
         [11.9665],
         ...,
         [21.3510],
         [12.1295],
         [12.1972]],
        [[10.2072],
         [10.5780],
         [10.2594],
         ...,
         [11.7745],
         [10.4822],
         [10.5282]],
        [[ 9.6110],
         [10.3876],
         [10.0658],
         ...,
         [10.9382],
         [10.2944],
         [10.3382]],
        ...,
        [[ 8.9192],
         [10.1559],
         [ 9.8305],
         ...,
         [ 9.9823],
         [10.0661],
         [10.1070]],
        [[10.7904],
         [10.7570],
         [10.4415],
         ...,
         [12.6032],
         [10.6585],
         [10.7067]],
        [[12.1979],
         [11.1626],
         [10.8547],
         ...,
         [14.6443],
         [11.0582],
         [11.1115]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0642, 0.9709, 0.9649,  ..., 1.1661, 0.9684, 0.9698],
        [0.9271, 0.9351, 0.9283,  ..., 0.9607, 0.9330, 0.9340],
        [0.9143, 0.9310, 0.9241,  ..., 0.9428, 0.9290, 0.9299],
        ...,
        [0.8995, 0.9260, 0.9191,  ..., 0.9223, 0.9241, 0.9250],
        [0.9396, 0.9389, 0.9322,  ..., 0.9785, 0.9368, 0.9378],
        [0.9698, 0.9476, 0.9410,  ..., 1.0223, 0.9454, 0.9465]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1697],
         [21.1265],
         [20.8055],
         ...,
         [15.5715],
         [22.9880],
         [15.7395]],
        [[12.7469],
         [18.0880],
         [18.4821],
         ...,
         [12.3367],
         [19.8297],
         [14.7742]],
        [[12.2855],
         [17.7437],
         [18.2131],
         ...,
         [11.9862],
         [19.4702],
         [14.6590]],
        ...,
        [[11.7359],
         [17.3254],
         [17.8847],
         ...,
         [11.5649],
         [19.0330],
         [14.5171]],
        [[13.1883],
         [18.4119],
         [18.7339],
         ...,
         [12.6695],
         [20.1675],
         [14.8815]],
        [[14.2171],
         [19.1472],
         [19.3018],
         ...,
         [13.4358],
         [20.9333],
         [15.1209]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0066, 1.0709, 1.0657,  ..., 0.9806, 1.1012, 0.9833],
        [0.9346, 1.0215, 1.0279,  ..., 0.9280, 1.0498, 0.9676],
        [0.9271, 1.0159, 1.0235,  ..., 0.9223, 1.0440, 0.9657],
        ...,
        [0.9182, 1.0091, 1.0182,  ..., 0.9154, 1.0369, 0.9634],
        [0.9418, 1.0268, 1.0320,  ..., 0.9334, 1.0553, 0.9693],
        [0.9585, 1.0387, 1.0412,  ..., 0.9458, 1.0678, 0.9732]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0945],
         [11.9270],
         [13.3028],
         ...,
         [11.7938],
         [12.2627],
         [12.9585]],
        [[ 9.7877],
         [10.3992],
         [ 9.7974],
         ...,
         [10.5400],
         [10.7387],
         [ 9.3635]],
        [[ 9.5346],
         [10.2243],
         [ 9.4334],
         ...,
         [10.3944],
         [10.5637],
         [ 8.9943]],
        ...,
        [[ 9.2296],
         [10.0112],
         [ 9.0003],
         ...,
         [10.2164],
         [10.3505],
         [ 8.5563]],
        [[10.0273],
         [10.5634],
         [10.1459],
         ...,
         [10.6763],
         [10.9028],
         [ 9.7177]],
        [[10.5770],
         [10.9350],
         [10.9595],
         ...,
         [10.9832],
         [11.2739],
         [10.5476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9678, 0.9655, 0.9837,  ..., 0.9638, 0.9700, 0.9792],
        [0.9373, 0.9454, 0.9374,  ..., 0.9472, 0.9498, 0.9317],
        [0.9339, 0.9430, 0.9326,  ..., 0.9453, 0.9475, 0.9268],
        ...,
        [0.9299, 0.9402, 0.9269,  ..., 0.9429, 0.9447, 0.9210],
        [0.9404, 0.9475, 0.9420,  ..., 0.9490, 0.9520, 0.9363],
        [0.9477, 0.9524, 0.9528,  ..., 0.9531, 0.9569, 0.9473]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3468],
         [12.2530],
         [11.9108],
         ...,
         [14.6334],
         [12.1361],
         [12.0170]],
        [[ 9.9882],
         [10.5809],
         [10.2777],
         ...,
         [10.6373],
         [10.4860],
         [10.4307]],
        [[ 9.3973],
         [10.3905],
         [10.0918],
         ...,
         [10.2255],
         [10.2980],
         [10.2495]],
        ...,
        [[ 8.7123],
         [10.1588],
         [ 9.8657],
         ...,
         [ 9.7364],
         [10.0693],
         [10.0289]],
        [[10.5667],
         [10.7598],
         [10.4524],
         ...,
         [11.0322],
         [10.6626],
         [10.6008]],
        [[11.9645],
         [11.1654],
         [10.8485],
         ...,
         [11.9562],
         [11.0629],
         [10.9861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0608, 0.9730, 0.9656,  ..., 1.0240, 0.9705, 0.9679],
        [0.9244, 0.9371, 0.9306,  ..., 0.9383, 0.9351, 0.9339],
        [0.9118, 0.9330, 0.9266,  ..., 0.9295, 0.9311, 0.9300],
        ...,
        [0.8971, 0.9281, 0.9218,  ..., 0.9190, 0.9262, 0.9253],
        [0.9368, 0.9410, 0.9344,  ..., 0.9468, 0.9389, 0.9376],
        [0.9668, 0.9497, 0.9429,  ..., 0.9666, 0.9475, 0.9458]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.9885],
         [20.9966],
         [21.5472],
         ...,
         [15.4023],
         [22.8427],
         [15.1356]],
        [[12.7514],
         [17.9401],
         [19.0482],
         ...,
         [12.4449],
         [19.7879],
         [14.3777]],
        [[12.3065],
         [17.5941],
         [18.7597],
         ...,
         [12.1208],
         [19.4393],
         [14.2866]],
        ...,
        [[11.7758],
         [17.1739],
         [18.4078],
         ...,
         [11.7302],
         [19.0152],
         [14.1743]],
        [[13.1765],
         [18.2656],
         [19.3185],
         ...,
         [12.7519],
         [20.1152],
         [14.4624]],
        [[14.1651],
         [19.0048],
         [19.9285],
         ...,
         [13.4563],
         [20.8568],
         [14.6510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0071, 1.0723, 1.0813,  ..., 0.9813, 1.1023, 0.9770],
        [0.9382, 1.0226, 1.0406,  ..., 0.9332, 1.0526, 0.9646],
        [0.9310, 1.0170, 1.0359,  ..., 0.9279, 1.0470, 0.9632],
        ...,
        [0.9223, 1.0101, 1.0302,  ..., 0.9216, 1.0401, 0.9613],
        [0.9451, 1.0279, 1.0450,  ..., 0.9382, 1.0580, 0.9660],
        [0.9612, 1.0399, 1.0549,  ..., 0.9497, 1.0700, 0.9691]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7561],
         [12.0477],
         [14.4223],
         ...,
         [11.1735],
         [12.7321],
         [11.8162]],
        [[10.0274],
         [10.2357],
         [ 9.5539],
         ...,
         [10.6501],
         [10.2717],
         [ 9.9803]],
        [[ 9.8319],
         [10.0313],
         [ 9.0790],
         ...,
         [10.5870],
         [10.0022],
         [ 9.7739]],
        ...,
        [[ 9.5945],
         [ 9.7832],
         [ 8.5223],
         ...,
         [10.5092],
         [ 9.6776],
         [ 9.5236]],
        [[10.2113],
         [10.4282],
         [10.0143],
         ...,
         [10.7086],
         [10.5269],
         [10.1748]],
        [[10.6292],
         [10.8657],
         [11.1103],
         ...,
         [10.8390],
         [11.1127],
         [10.6174]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9586, 0.9625, 0.9939,  ..., 0.9509, 0.9715, 0.9594],
        [0.9358, 0.9385, 0.9295,  ..., 0.9440, 0.9390, 0.9352],
        [0.9332, 0.9358, 0.9233,  ..., 0.9432, 0.9355, 0.9324],
        ...,
        [0.9301, 0.9326, 0.9159,  ..., 0.9422, 0.9312, 0.9291],
        [0.9382, 0.9411, 0.9356,  ..., 0.9448, 0.9424, 0.9377],
        [0.9437, 0.9469, 0.9501,  ..., 0.9465, 0.9501, 0.9436]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1112],
         [12.2520],
         [11.8273],
         ...,
         [13.1010],
         [12.1956],
         [11.8154]],
        [[ 9.4421],
         [10.5799],
         [10.3170],
         ...,
         [ 9.7767],
         [10.5269],
         [10.3287]],
        [[ 8.8377],
         [10.3894],
         [10.1440],
         ...,
         [ 9.4288],
         [10.3369],
         [10.1582]],
        ...,
        [[ 8.1411],
         [10.1578],
         [ 9.9333],
         ...,
         [ 9.0142],
         [10.1059],
         [ 9.9505]],
        [[10.0366],
         [10.7588],
         [10.4794],
         ...,
         [10.1093],
         [10.7055],
         [10.4887]],
        [[11.4845],
         [11.1644],
         [10.8467],
         ...,
         [10.8837],
         [11.1102],
         [10.8505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0615, 0.9788, 0.9697,  ..., 0.9970, 0.9776, 0.9694],
        [0.9185, 0.9429, 0.9373,  ..., 0.9257, 0.9418, 0.9375],
        [0.9056, 0.9388, 0.9336,  ..., 0.9182, 0.9377, 0.9339],
        ...,
        [0.8906, 0.9339, 0.9291,  ..., 0.9093, 0.9328, 0.9294],
        [0.9313, 0.9468, 0.9408,  ..., 0.9328, 0.9456, 0.9410],
        [0.9623, 0.9555, 0.9486,  ..., 0.9494, 0.9543, 0.9487]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4374],
         [20.6890],
         [22.2242],
         ...,
         [14.9978],
         [22.1646],
         [14.2787]],
        [[12.7829],
         [17.6157],
         [19.6162],
         ...,
         [13.0272],
         [19.1720],
         [13.7237]],
        [[12.3911],
         [17.2685],
         [19.3154],
         ...,
         [12.8020],
         [18.8309],
         [13.6565]],
        ...,
        [[11.9215],
         [16.8470],
         [18.9485],
         ...,
         [12.5279],
         [18.4159],
         [13.5736]],
        [[13.1555],
         [17.9425],
         [19.8981],
         ...,
         [13.2386],
         [19.4925],
         [13.7860]],
        [[14.0168],
         [18.6851],
         [20.5344],
         ...,
         [13.7174],
         [20.2187],
         [13.9245]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0087, 1.0778, 1.1028,  ..., 0.9853, 1.1018, 0.9736],
        [0.9492, 1.0278, 1.0604,  ..., 0.9532, 1.0532, 0.9645],
        [0.9429, 1.0222, 1.0555,  ..., 0.9495, 1.0476, 0.9634],
        ...,
        [0.9352, 1.0153, 1.0495,  ..., 0.9451, 1.0409, 0.9621],
        [0.9553, 1.0332, 1.0650,  ..., 0.9566, 1.0584, 0.9656],
        [0.9693, 1.0452, 1.0753,  ..., 0.9644, 1.0702, 0.9678]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9632],
         [11.9681],
         [13.6876],
         ...,
         [11.5437],
         [12.3975],
         [12.4805]],
        [[ 9.8738],
         [10.3383],
         [ 9.7002],
         ...,
         [10.5791],
         [10.5602],
         [ 9.5726]],
        [[ 9.6420],
         [10.1526],
         [ 9.2954],
         ...,
         [10.4655],
         [10.3525],
         [ 9.2633]],
        ...,
        [[ 9.3617],
         [ 9.9268],
         [ 8.8164],
         ...,
         [10.3261],
         [10.1005],
         [ 8.8934]],
        [[10.0928],
         [10.5127],
         [10.0895],
         ...,
         [10.6852],
         [10.7555],
         [ 9.8672]],
        [[10.5934],
         [10.9081],
         [11.0049],
         ...,
         [10.9229],
         [11.1996],
         [10.5499]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9679, 0.9680, 0.9907,  ..., 0.9624, 0.9737, 0.9747],
        [0.9403, 0.9464, 0.9380,  ..., 0.9496, 0.9494, 0.9363],
        [0.9372, 0.9440, 0.9327,  ..., 0.9481, 0.9466, 0.9322],
        ...,
        [0.9335, 0.9410, 0.9263,  ..., 0.9463, 0.9433, 0.9273],
        [0.9432, 0.9487, 0.9432,  ..., 0.9510, 0.9520, 0.9402],
        [0.9498, 0.9540, 0.9552,  ..., 0.9542, 0.9578, 0.9492]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4306],
         [12.2526],
         [11.8714],
         ...,
         [11.1219],
         [12.1588],
         [11.9003]],
        [[ 9.7463],
         [10.5805],
         [10.2931],
         ...,
         [ 9.8054],
         [10.5001],
         [10.3913]],
        [[ 9.1361],
         [10.3901],
         [10.1129],
         ...,
         [ 9.6536],
         [10.3112],
         [10.2183]],
        ...,
        [[ 8.4316],
         [10.1585],
         [ 9.8937],
         ...,
         [ 9.4686],
         [10.0814],
         [10.0076]],
        [[10.3457],
         [10.7594],
         [10.4623],
         ...,
         [ 9.9476],
         [10.6776],
         [10.5536]],
        [[11.8021],
         [11.1650],
         [10.8456],
         ...,
         [10.2687],
         [11.0799],
         [10.9207]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0647, 0.9751, 0.9670,  ..., 0.9509, 0.9731, 0.9676],
        [0.9214, 0.9393, 0.9331,  ..., 0.9226, 0.9375, 0.9352],
        [0.9083, 0.9352, 0.9292,  ..., 0.9194, 0.9335, 0.9315],
        ...,
        [0.8932, 0.9302, 0.9245,  ..., 0.9154, 0.9286, 0.9270],
        [0.9342, 0.9431, 0.9367,  ..., 0.9257, 0.9414, 0.9387],
        [0.9655, 0.9518, 0.9450,  ..., 0.9326, 0.9500, 0.9466]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.7854],
         [20.8878],
         [21.7927],
         ...,
         [15.2349],
         [22.5841],
         [14.7821]],
        [[12.7623],
         [17.8195],
         [19.2556],
         ...,
         [12.6516],
         [19.5582],
         [14.1309]],
        [[12.3367],
         [17.4724],
         [18.9628],
         ...,
         [12.3639],
         [19.2131],
         [14.0523]],
        ...,
        [[11.8281],
         [17.0511],
         [18.6056],
         ...,
         [12.0160],
         [18.7931],
         [13.9553]],
        [[13.1683],
         [18.1460],
         [19.5299],
         ...,
         [12.9232],
         [19.8824],
         [14.2038]],
        [[14.1105],
         [18.8878],
         [20.1492],
         ...,
         [13.5431],
         [20.6170],
         [14.3661]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0077, 1.0744, 1.0892,  ..., 0.9825, 1.1020, 0.9751],
        [0.9423, 1.0245, 1.0479,  ..., 0.9405, 1.0528, 0.9645],
        [0.9354, 1.0189, 1.0431,  ..., 0.9358, 1.0472, 0.9633],
        ...,
        [0.9271, 1.0120, 1.0373,  ..., 0.9301, 1.0404, 0.9617],
        [0.9489, 1.0299, 1.0524,  ..., 0.9449, 1.0581, 0.9657],
        [0.9642, 1.0419, 1.0624,  ..., 0.9550, 1.0700, 0.9684]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7513],
         [12.0112],
         [13.8364],
         ...,
         [11.3173],
         [12.2867],
         [12.2513]],
        [[10.0312],
         [10.2308],
         [ 9.6023],
         ...,
         [10.6562],
         [10.3756],
         [ 9.6941]],
        [[ 9.8366],
         [10.0296],
         [ 9.1777],
         ...,
         [10.5771],
         [10.1607],
         [ 9.4172]],
        ...,
        [[ 9.6003],
         [ 9.7854],
         [ 8.6768],
         ...,
         [10.4797],
         [ 9.9002],
         [ 9.0845]],
        [[10.2143],
         [10.4201],
         [10.0116],
         ...,
         [10.7298],
         [10.5780],
         [ 9.9570]],
        [[10.6302],
         [10.8504],
         [10.9778],
         ...,
         [10.8939],
         [11.0388],
         [10.5626]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9625, 0.9660, 0.9901,  ..., 0.9568, 0.9696, 0.9691],
        [0.9398, 0.9424, 0.9341,  ..., 0.9480, 0.9443, 0.9353],
        [0.9372, 0.9398, 0.9285,  ..., 0.9470, 0.9415, 0.9317],
        ...,
        [0.9341, 0.9365, 0.9219,  ..., 0.9457, 0.9381, 0.9273],
        [0.9422, 0.9449, 0.9395,  ..., 0.9490, 0.9470, 0.9388],
        [0.9477, 0.9506, 0.9523,  ..., 0.9512, 0.9531, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1566],
         [12.2689],
         [11.8609],
         ...,
         [12.1568],
         [12.1666],
         [11.8411]],
        [[ 9.4044],
         [10.5991],
         [10.2978],
         ...,
         [ 9.9645],
         [10.5054],
         [10.3685]],
        [[ 8.7950],
         [10.4089],
         [10.1192],
         ...,
         [ 9.7222],
         [10.3162],
         [10.1994]],
        ...,
        [[ 8.0933],
         [10.1776],
         [ 9.9019],
         ...,
         [ 9.4297],
         [10.0861],
         [ 9.9934]],
        [[10.0044],
         [10.7779],
         [10.4655],
         ...,
         [10.1936],
         [10.6831],
         [10.5271]],
        [[11.4672],
         [11.1829],
         [10.8452],
         ...,
         [10.7178],
         [11.0861],
         [10.8856]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0627, 0.9794, 0.9706,  ..., 0.9770, 0.9772, 0.9702],
        [0.9180, 0.9436, 0.9371,  ..., 0.9300, 0.9416, 0.9386],
        [0.9049, 0.9395, 0.9333,  ..., 0.9248, 0.9375, 0.9350],
        ...,
        [0.8898, 0.9345, 0.9286,  ..., 0.9185, 0.9326, 0.9306],
        [0.9308, 0.9474, 0.9407,  ..., 0.9349, 0.9454, 0.9420],
        [0.9622, 0.9561, 0.9489,  ..., 0.9461, 0.9540, 0.9497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4513],
         [20.8563],
         [22.3653],
         ...,
         [15.6063],
         [22.0093],
         [14.6075]],
        [[12.8524],
         [17.7797],
         [19.6946],
         ...,
         [13.7578],
         [18.9246],
         [13.9360]],
        [[12.4655],
         [17.4319],
         [19.3869],
         ...,
         [13.5448],
         [18.5741],
         [13.8550]],
        ...,
        [[12.0015],
         [17.0096],
         [19.0118],
         ...,
         [13.2850],
         [18.1481],
         [13.7552]],
        [[13.2201],
         [18.1070],
         [19.9829],
         ...,
         [13.9575],
         [19.2540],
         [14.0111]],
        [[14.0694],
         [18.8506],
         [20.6341],
         ...,
         [14.4083],
         [20.0014],
         [14.1784]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0079, 1.0796, 1.1041,  ..., 0.9942, 1.0983, 0.9779],
        [0.9494, 1.0295, 1.0607,  ..., 0.9641, 1.0482, 0.9670],
        [0.9431, 1.0239, 1.0557,  ..., 0.9607, 1.0425, 0.9657],
        ...,
        [0.9356, 1.0170, 1.0496,  ..., 0.9564, 1.0355, 0.9641],
        [0.9554, 1.0349, 1.0654,  ..., 0.9674, 1.0535, 0.9682],
        [0.9692, 1.0470, 1.0760,  ..., 0.9747, 1.0657, 0.9710]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7204],
         [11.9310],
         [13.2310],
         ...,
         [11.6095],
         [11.9403],
         [12.6447]],
        [[10.0564],
         [10.2440],
         [ 9.6844],
         ...,
         [10.4351],
         [10.4482],
         [ 9.4948]],
        [[ 9.8676],
         [10.0525],
         [ 9.3175],
         ...,
         [10.2983],
         [10.2770],
         [ 9.1640]],
        ...,
        [[ 9.6381],
         [ 9.8198],
         [ 8.8813],
         ...,
         [10.1309],
         [10.0684],
         [ 8.7693]],
        [[10.2339],
         [10.4241],
         [10.0361],
         ...,
         [10.5631],
         [10.6088],
         [ 9.8108]],
        [[10.6369],
         [10.8327],
         [10.8577],
         ...,
         [10.8510],
         [10.9720],
         [10.5459]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9671, 0.9699, 0.9871,  ..., 0.9656, 0.9700, 0.9793],
        [0.9451, 0.9476, 0.9402,  ..., 0.9501, 0.9503, 0.9377],
        [0.9426, 0.9451, 0.9354,  ..., 0.9483, 0.9480, 0.9333],
        ...,
        [0.9396, 0.9420, 0.9296,  ..., 0.9461, 0.9453, 0.9281],
        [0.9475, 0.9500, 0.9448,  ..., 0.9518, 0.9524, 0.9419],
        [0.9528, 0.9554, 0.9557,  ..., 0.9556, 0.9572, 0.9516]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0262],
         [12.2714],
         [11.8795],
         ...,
         [12.8096],
         [12.1141],
         [11.8951]],
        [[ 9.3334],
         [10.6021],
         [10.2897],
         ...,
         [10.4418],
         [10.4736],
         [10.3895]],
        [[ 8.7293],
         [10.4120],
         [10.1083],
         ...,
         [10.1809],
         [10.2867],
         [10.2169]],
        ...,
        [[ 8.0335],
         [10.1806],
         [ 9.8876],
         ...,
         [ 9.8662],
         [10.0592],
         [10.0067]],
        [[ 9.9283],
         [10.7808],
         [10.4601],
         ...,
         [10.6886],
         [10.6493],
         [10.5515]],
        [[11.3786],
         [11.1858],
         [10.8460],
         ...,
         [11.2539],
         [11.0473],
         [10.9178]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0608, 0.9803, 0.9719,  ..., 0.9918, 0.9769, 0.9722],
        [0.9173, 0.9445, 0.9378,  ..., 0.9411, 0.9418, 0.9400],
        [0.9044, 0.9404, 0.9339,  ..., 0.9355, 0.9377, 0.9363],
        ...,
        [0.8894, 0.9355, 0.9292,  ..., 0.9287, 0.9329, 0.9317],
        [0.9301, 0.9483, 0.9415,  ..., 0.9464, 0.9455, 0.9434],
        [0.9612, 0.9570, 0.9497,  ..., 0.9585, 0.9541, 0.9513]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4205],
         [20.8090],
         [22.1461],
         ...,
         [16.1448],
         [21.8434],
         [14.8748]],
        [[12.9434],
         [17.7284],
         [19.5227],
         ...,
         [14.6755],
         [18.7325],
         [14.0376]],
        [[12.5678],
         [17.3803],
         [19.2203],
         ...,
         [14.5031],
         [18.3796],
         [13.9373]],
        ...,
        [[12.1166],
         [16.9577],
         [18.8516],
         ...,
         [14.2921],
         [17.9508],
         [13.8138]],
        [[13.3002],
         [18.0561],
         [19.8060],
         ...,
         [14.8364],
         [19.0643],
         [14.1308]],
        [[14.1228],
         [18.8005],
         [20.4459],
         ...,
         [15.1977],
         [19.8175],
         [14.3388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0072, 1.0786, 1.1004,  ..., 1.0028, 1.0954, 0.9821],
        [0.9507, 1.0285, 1.0577,  ..., 0.9789, 1.0449, 0.9685],
        [0.9446, 1.0229, 1.0528,  ..., 0.9761, 1.0391, 0.9669],
        ...,
        [0.9372, 1.0160, 1.0468,  ..., 0.9726, 1.0321, 0.9649],
        [0.9565, 1.0338, 1.0623,  ..., 0.9815, 1.0502, 0.9700],
        [0.9699, 1.0460, 1.0727,  ..., 0.9874, 1.0625, 0.9734]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5575],
         [11.9366],
         [12.6941],
         ...,
         [11.7879],
         [11.8974],
         [13.2610]],
        [[10.2004],
         [10.2132],
         [ 9.8148],
         ...,
         [10.0041],
         [10.3945],
         [ 9.2545]],
        [[10.0438],
         [10.0180],
         [ 9.5072],
         ...,
         [ 9.8029],
         [10.2222],
         [ 8.8514]],
        ...,
        [[ 9.8529],
         [ 9.7808],
         [ 9.1388],
         ...,
         [ 9.5589],
         [10.0123],
         [ 8.3755]],
        [[10.3470],
         [10.3968],
         [10.1077],
         ...,
         [10.1935],
         [10.5562],
         [ 9.6428]],
        [[10.6782],
         [10.8138],
         [10.7851],
         ...,
         [10.6241],
         [10.9219],
         [10.5585]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9569, 0.9620, 0.9720,  ..., 0.9600, 0.9614, 0.9795],
        [0.9390, 0.9392, 0.9339,  ..., 0.9364, 0.9416, 0.9265],
        [0.9369, 0.9366, 0.9299,  ..., 0.9338, 0.9393, 0.9212],
        ...,
        [0.9344, 0.9335, 0.9250,  ..., 0.9305, 0.9365, 0.9149],
        [0.9409, 0.9416, 0.9378,  ..., 0.9389, 0.9437, 0.9316],
        [0.9453, 0.9471, 0.9467,  ..., 0.9446, 0.9485, 0.9437]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.2282],
         [12.2528],
         [11.8712],
         ...,
         [13.3989],
         [12.1279],
         [12.0390]],
        [[ 9.1538],
         [10.5807],
         [10.2932],
         ...,
         [10.8692],
         [10.4812],
         [10.4391]],
        [[ 8.6674],
         [10.3903],
         [10.1131],
         ...,
         [10.5913],
         [10.2936],
         [10.2565]],
        ...,
        [[ 8.0995],
         [10.1587],
         [ 9.8938],
         ...,
         [10.2562],
         [10.0653],
         [10.0342]],
        [[ 9.6270],
         [10.7597],
         [10.4624],
         ...,
         [11.1322],
         [10.6575],
         [10.6106]],
        [[10.7597],
         [11.1652],
         [10.8455],
         ...,
         [11.7354],
         [11.0570],
         [10.9991]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0255, 0.9831, 0.9749,  ..., 1.0077, 0.9804, 0.9785],
        [0.9167, 0.9473, 0.9411,  ..., 0.9534, 0.9451, 0.9442],
        [0.9062, 0.9432, 0.9372,  ..., 0.9475, 0.9411, 0.9403],
        ...,
        [0.8940, 0.9382, 0.9325,  ..., 0.9403, 0.9362, 0.9355],
        [0.9268, 0.9511, 0.9447,  ..., 0.9591, 0.9489, 0.9479],
        [0.9511, 0.9598, 0.9529,  ..., 0.9720, 0.9575, 0.9562]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1448],
         [20.6155],
         [20.6932],
         ...,
         [16.8648],
         [21.5335],
         [15.2942]],
        [[13.1207],
         [17.5471],
         [18.4612],
         ...,
         [16.1385],
         [18.4326],
         [14.2822]],
        [[12.7881],
         [17.2006],
         [18.2023],
         ...,
         [16.0508],
         [18.0812],
         [14.1616]],
        ...,
        [[12.3870],
         [16.7799],
         [17.8858],
         ...,
         [15.9426],
         [17.6543],
         [14.0134]],
        [[13.4354],
         [17.8733],
         [18.7036],
         ...,
         [16.2199],
         [18.7630],
         [14.3943]],
        [[14.1569],
         [18.6147],
         [19.2498],
         ...,
         [16.4009],
         [19.5134],
         [14.6450]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0065, 1.0792, 1.0805,  ..., 1.0182, 1.0941, 0.9926],
        [0.9573, 1.0293, 1.0442,  ..., 1.0064, 1.0437, 0.9762],
        [0.9519, 1.0237, 1.0399,  ..., 1.0050, 1.0380, 0.9742],
        ...,
        [0.9454, 1.0168, 1.0348,  ..., 1.0032, 1.0310, 0.9718],
        [0.9624, 1.0346, 1.0481,  ..., 1.0077, 1.0491, 0.9780],
        [0.9741, 1.0467, 1.0570,  ..., 1.0106, 1.0613, 0.9821]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.3126],
         [12.0594],
         [12.4148],
         ...,
         [12.3279],
         [11.9491],
         [13.5992]],
        [[10.4803],
         [10.0667],
         [ 9.8484],
         ...,
         [ 9.6516],
         [10.2249],
         [ 9.1488]],
        [[10.3816],
         [ 9.8442],
         [ 9.5701],
         ...,
         [ 9.3636],
         [10.0295],
         [ 8.7107]],
        ...,
        [[10.2604],
         [ 9.5748],
         [ 9.2355],
         ...,
         [ 9.0180],
         [ 9.7922],
         [ 8.1960]],
        [[10.5722],
         [10.2767],
         [10.1125],
         ...,
         [ 9.9254],
         [10.4086],
         [ 9.5727]],
        [[10.7780],
         [10.7556],
         [10.7207],
         ...,
         [10.5573],
         [10.8258],
         [10.5792]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 0.9599, 0.9646,  ..., 0.9634, 0.9584, 0.9802],
        [0.9390, 0.9336, 0.9307,  ..., 0.9281, 0.9357, 0.9214],
        [0.9377, 0.9306, 0.9270,  ..., 0.9243, 0.9331, 0.9156],
        ...,
        [0.9361, 0.9271, 0.9226,  ..., 0.9197, 0.9299, 0.9088],
        [0.9402, 0.9363, 0.9342,  ..., 0.9317, 0.9381, 0.9270],
        [0.9430, 0.9427, 0.9422,  ..., 0.9400, 0.9436, 0.9403]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.9764],
         [12.2286],
         [11.8684],
         ...,
         [12.8691],
         [12.1782],
         [12.1187]],
        [[ 9.1834],
         [10.5559],
         [10.2944],
         ...,
         [10.6849],
         [10.5136],
         [10.4761]],
        [[ 8.9829],
         [10.3655],
         [10.1147],
         ...,
         [10.4417],
         [10.3241],
         [10.2889]],
        ...,
        [[ 8.7401],
         [10.1338],
         [ 9.8960],
         ...,
         [10.1476],
         [10.0935],
         [10.0612]],
        [[ 9.3725],
         [10.7349],
         [10.4632],
         ...,
         [10.9145],
         [10.6917],
         [10.6520]],
        [[ 9.8037],
         [11.1406],
         [10.8454],
         ...,
         [11.4387],
         [11.0955],
         [11.0505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9892, 0.9815,  ..., 1.0030, 0.9881, 0.9869],
        [0.9239, 0.9534, 0.9477,  ..., 0.9561, 0.9524, 0.9516],
        [0.9196, 0.9493, 0.9439,  ..., 0.9509, 0.9484, 0.9476],
        ...,
        [0.9144, 0.9443, 0.9392,  ..., 0.9446, 0.9434, 0.9427],
        [0.9280, 0.9572, 0.9514,  ..., 0.9610, 0.9563, 0.9554],
        [0.9372, 0.9659, 0.9596,  ..., 0.9723, 0.9649, 0.9640]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.7386],
         [20.4189],
         [19.6168],
         ...,
         [18.3002],
         [21.1394],
         [15.5290]],
        [[13.5700],
         [17.3747],
         [17.6654],
         ...,
         [17.8445],
         [18.0422],
         [14.4107]],
        [[13.3232],
         [17.0309],
         [17.4377],
         ...,
         [17.7888],
         [17.6918],
         [14.2780]],
        ...,
        [[13.0231],
         [16.6136],
         [17.1592],
         ...,
         [17.7201],
         [17.2663],
         [14.1150]],
        [[13.8018],
         [17.6982],
         [17.8782],
         ...,
         [17.8960],
         [18.3718],
         [14.5343]],
        [[14.3276],
         [18.4337],
         [18.3569],
         ...,
         [18.0101],
         [19.1207],
         [14.8109]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0045, 1.0806, 1.0675,  ..., 1.0461, 1.0923, 1.0011],
        [0.9692, 1.0311, 1.0358,  ..., 1.0387, 1.0419, 0.9829],
        [0.9652, 1.0255, 1.0321,  ..., 1.0378, 1.0362, 0.9807],
        ...,
        [0.9603, 1.0187, 1.0276,  ..., 1.0367, 1.0293, 0.9781],
        [0.9730, 1.0363, 1.0393,  ..., 1.0396, 1.0473, 0.9849],
        [0.9815, 1.0483, 1.0471,  ..., 1.0414, 1.0595, 0.9894]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.1569],
         [12.3143],
         [12.3937],
         ...,
         [13.7881],
         [12.1504],
         [14.1046]],
        [[10.8352],
         [ 9.8131],
         [ 9.7106],
         ...,
         [ 9.0959],
         [ 9.9374],
         [ 9.0156]],
        [[10.7960],
         [ 9.5412],
         [ 9.4217],
         ...,
         [ 8.6394],
         [ 9.6931],
         [ 8.5298]],
        ...,
        [[10.7476],
         [ 9.2141],
         [ 9.0751],
         ...,
         [ 8.1044],
         [ 9.3982],
         [ 7.9629]],
        [[10.8715],
         [10.0711],
         [ 9.9852],
         ...,
         [ 9.5388],
         [10.1683],
         [ 9.4888]],
        [[10.9520],
         [10.6646],
         [10.6188],
         ...,
         [10.5938],
         [10.6972],
         [10.6225]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9432, 0.9585, 0.9595,  ..., 0.9780, 0.9563, 0.9821],
        [0.9389, 0.9254, 0.9241,  ..., 0.9160, 0.9271, 0.9149],
        [0.9384, 0.9218, 0.9203,  ..., 0.9099, 0.9238, 0.9085],
        ...,
        [0.9378, 0.9175, 0.9157,  ..., 0.9029, 0.9200, 0.9010],
        [0.9394, 0.9288, 0.9277,  ..., 0.9218, 0.9301, 0.9211],
        [0.9405, 0.9367, 0.9361,  ..., 0.9358, 0.9371, 0.9361]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8689],
         [12.1848],
         [11.8446],
         ...,
         [11.8211],
         [12.2466],
         [12.2141]],
        [[10.2914],
         [10.5185],
         [10.3061],
         ...,
         [10.3223],
         [10.5740],
         [10.5425]],
        [[10.1114],
         [10.3288],
         [10.1301],
         ...,
         [10.1505],
         [10.3835],
         [10.3521]],
        ...,
        [[ 9.8922],
         [10.0980],
         [ 9.9158],
         ...,
         [ 9.9412],
         [10.1519],
         [10.1207]],
        [[10.4605],
         [10.6968],
         [10.4713],
         ...,
         [10.4835],
         [10.7530],
         [10.7213]],
        [[10.8436],
         [11.1009],
         [10.8452],
         ...,
         [10.8481],
         [11.1587],
         [11.1267]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9983, 1.0051, 0.9978,  ..., 0.9973, 1.0064, 1.0057],
        [0.9645, 0.9693, 0.9648,  ..., 0.9651, 0.9705, 0.9698],
        [0.9606, 0.9653, 0.9610,  ..., 0.9614, 0.9664, 0.9658],
        ...,
        [0.9559, 0.9603, 0.9564,  ..., 0.9569, 0.9615, 0.9608],
        [0.9681, 0.9731, 0.9683,  ..., 0.9686, 0.9744, 0.9737],
        [0.9763, 0.9818, 0.9763,  ..., 0.9764, 0.9831, 0.9824]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.7224],
         [20.0573],
         [18.7106],
         ...,
         [20.7400],
         [20.4777],
         [15.8626]],
        [[15.2569],
         [17.0723],
         [17.0270],
         ...,
         [19.2346],
         [17.4219],
         [14.6136]],
        [[15.0846],
         [16.7352],
         [16.8294],
         ...,
         [19.0561],
         [17.0768],
         [14.4660]],
        ...,
        [[14.8735],
         [16.3259],
         [16.5873],
         ...,
         [18.8367],
         [16.6580],
         [14.2849]],
        [[15.4176],
         [17.3896],
         [17.2115],
         ...,
         [19.4010],
         [17.7467],
         [14.7512]],
        [[15.7784],
         [18.1108],
         [17.6257],
         ...,
         [19.7732],
         [18.4849],
         [15.0595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0228, 1.0770, 1.0551,  ..., 1.0881, 1.0838, 1.0088],
        [0.9989, 1.0284, 1.0277,  ..., 1.0636, 1.0341, 0.9885],
        [0.9961, 1.0230, 1.0245,  ..., 1.0607, 1.0285, 0.9861],
        ...,
        [0.9927, 1.0163, 1.0206,  ..., 1.0571, 1.0217, 0.9831],
        [1.0015, 1.0336, 1.0307,  ..., 1.0663, 1.0394, 0.9907],
        [1.0074, 1.0453, 1.0374,  ..., 1.0724, 1.0514, 0.9957]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.2578],
         [12.1217],
         [12.4061],
         ...,
         [12.6657],
         [11.9949],
         [13.7304]],
        [[10.5748],
         [ 9.9967],
         [ 9.8110],
         ...,
         [ 9.4853],
         [10.1457],
         [ 9.1116]],
        [[10.4932],
         [ 9.7610],
         [ 9.5300],
         ...,
         [ 9.1518],
         [ 9.9376],
         [ 8.6606]],
        ...,
        [[10.3927],
         [ 9.4762],
         [ 9.1925],
         ...,
         [ 8.7541],
         [ 9.6852],
         [ 8.1318]],
        [[10.6507],
         [10.2194],
         [10.0777],
         ...,
         [ 9.8040],
         [10.3417],
         [ 9.5488]],
        [[10.8201],
         [10.7284],
         [10.6922],
         ...,
         [10.5456],
         [10.7877],
         [10.5891]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9480, 0.9594, 0.9632,  ..., 0.9666, 0.9577, 0.9807],
        [0.9390, 0.9313, 0.9289,  ..., 0.9246, 0.9333, 0.9196],
        [0.9379, 0.9282, 0.9252,  ..., 0.9202, 0.9305, 0.9137],
        ...,
        [0.9366, 0.9244, 0.9207,  ..., 0.9149, 0.9272, 0.9067],
        [0.9400, 0.9343, 0.9324,  ..., 0.9288, 0.9359, 0.9254],
        [0.9422, 0.9410, 0.9405,  ..., 0.9386, 0.9418, 0.9392]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.3099],
         [12.2172],
         [11.8613],
         ...,
         [12.4073],
         [12.1976],
         [12.1459]],
        [[ 9.3368],
         [10.5453],
         [10.2976],
         ...,
         [10.5205],
         [10.5285],
         [10.4919]],
        [[ 9.1179],
         [10.3549],
         [10.1190],
         ...,
         [10.3078],
         [10.3385],
         [10.3035]],
        ...,
        [[ 8.8532],
         [10.1234],
         [ 9.9016],
         ...,
         [10.0498],
         [10.1073],
         [10.0743]],
        [[ 9.5437],
         [10.7241],
         [10.4654],
         ...,
         [10.7207],
         [10.7071],
         [10.6689]],
        [[10.0164],
         [11.1296],
         [10.8452],
         ...,
         [11.1761],
         [11.1119],
         [11.0702]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9733, 0.9928, 0.9851,  ..., 0.9968, 0.9923, 0.9912],
        [0.9310, 0.9569, 0.9516,  ..., 0.9564, 0.9565, 0.9558],
        [0.9263, 0.9528, 0.9478,  ..., 0.9518, 0.9525, 0.9517],
        ...,
        [0.9206, 0.9479, 0.9431,  ..., 0.9463, 0.9475, 0.9468],
        [0.9354, 0.9607, 0.9552,  ..., 0.9607, 0.9604, 0.9596],
        [0.9456, 0.9694, 0.9633,  ..., 0.9704, 0.9691, 0.9682]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.8235],
         [20.3225],
         [19.3685],
         ...,
         [18.8885],
         [20.9628],
         [15.6174]],
        [[13.9998],
         [17.2921],
         [17.4892],
         ...,
         [18.2044],
         [17.8711],
         [14.4647]],
        [[13.7892],
         [16.9499],
         [17.2696],
         ...,
         [18.1215],
         [17.5216],
         [14.3281]],
        ...,
        [[13.5322],
         [16.5345],
         [17.0009],
         ...,
         [18.0191],
         [17.0972],
         [14.1603]],
        [[14.1971],
         [17.6142],
         [17.6944],
         ...,
         [18.2814],
         [18.2000],
         [14.5920]],
        [[14.6424],
         [18.3463],
         [18.1557],
         ...,
         [18.4522],
         [18.9473],
         [14.8769]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0070, 1.0802, 1.0647,  ..., 1.0568, 1.0906, 1.0036],
        [0.9773, 1.0309, 1.0341,  ..., 1.0457, 1.0403, 0.9849],
        [0.9739, 1.0253, 1.0305,  ..., 1.0444, 1.0346, 0.9827],
        ...,
        [0.9697, 1.0186, 1.0261,  ..., 1.0427, 1.0277, 0.9799],
        [0.9805, 1.0361, 1.0374,  ..., 1.0470, 1.0456, 0.9870],
        [0.9878, 1.0480, 1.0449,  ..., 1.0498, 1.0578, 0.9916]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.3485],
         [12.3330],
         [12.6622],
         ...,
         [13.2116],
         [12.1666],
         [13.5967]],
        [[10.5790],
         [ 9.7893],
         [ 9.5901],
         ...,
         [ 9.2712],
         [ 9.9333],
         [ 9.1495]],
        [[10.4875],
         [ 9.5134],
         [ 9.2659],
         ...,
         [ 8.8735],
         [ 9.6870],
         [ 8.7116]],
        ...,
        [[10.3749],
         [ 9.1816],
         [ 8.8786],
         ...,
         [ 8.4035],
         [ 9.3898],
         [ 8.1972]],
        [[10.6642],
         [10.0512],
         [ 9.8996],
         ...,
         [ 9.6542],
         [10.1662],
         [ 9.5732]],
        [[10.8548],
         [10.6541],
         [10.6183],
         ...,
         [10.5562],
         [10.6997],
         [10.5790]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9505, 0.9635, 0.9679,  ..., 0.9751, 0.9613, 0.9802],
        [0.9404, 0.9299, 0.9273,  ..., 0.9231, 0.9318, 0.9215],
        [0.9391, 0.9263, 0.9230,  ..., 0.9178, 0.9286, 0.9157],
        ...,
        [0.9377, 0.9219, 0.9179,  ..., 0.9116, 0.9246, 0.9089],
        [0.9415, 0.9334, 0.9314,  ..., 0.9281, 0.9349, 0.9271],
        [0.9440, 0.9414, 0.9409,  ..., 0.9401, 0.9420, 0.9404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7819],
         [12.1898],
         [11.8409],
         ...,
         [11.8694],
         [12.2466],
         [12.1432]],
        [[10.4989],
         [10.5224],
         [10.3081],
         ...,
         [10.2935],
         [10.5741],
         [10.4902]],
        [[10.2462],
         [10.3325],
         [10.1328],
         ...,
         [10.1136],
         [10.3836],
         [10.3019]],
        ...,
        [[ 9.9411],
         [10.1016],
         [ 9.9192],
         ...,
         [ 9.8946],
         [10.1519],
         [10.0729]],
        [[10.7376],
         [10.7007],
         [10.4727],
         ...,
         [10.4624],
         [10.7530],
         [10.6671]],
        [[11.2839],
         [11.1052],
         [10.8453],
         ...,
         [10.8451],
         [11.1587],
         [11.0681]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0177, 1.0050, 0.9976,  ..., 0.9982, 1.0063, 1.0040],
        [0.9688, 0.9693, 0.9647,  ..., 0.9644, 0.9704, 0.9686],
        [0.9634, 0.9652, 0.9609,  ..., 0.9605, 0.9663, 0.9646],
        ...,
        [0.9568, 0.9603, 0.9564,  ..., 0.9558, 0.9613, 0.9596],
        [0.9739, 0.9731, 0.9682,  ..., 0.9680, 0.9742, 0.9724],
        [0.9856, 0.9818, 0.9762,  ..., 0.9762, 0.9829, 0.9810]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.6408],
         [20.1483],
         [19.2109],
         ...,
         [18.9301],
         [20.5979],
         [15.6123]],
        [[16.4971],
         [17.1377],
         [17.3891],
         ...,
         [18.2242],
         [17.5315],
         [14.4844]],
        [[16.2495],
         [16.7978],
         [17.1759],
         ...,
         [18.1387],
         [17.1851],
         [14.3505]],
        ...,
        [[15.9474],
         [16.3853],
         [16.9149],
         ...,
         [18.0331],
         [16.7648],
         [14.1861]],
        [[16.7291],
         [17.4576],
         [17.5882],
         ...,
         [18.3035],
         [17.8574],
         [14.6090]],
        [[17.2525],
         [18.1849],
         [18.0358],
         ...,
         [18.4798],
         [18.5983],
         [14.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0534, 1.0779, 1.0626,  ..., 1.0581, 1.0852, 1.0041],
        [1.0185, 1.0289, 1.0330,  ..., 1.0466, 1.0353, 0.9858],
        [1.0145, 1.0234, 1.0295,  ..., 1.0452, 1.0297, 0.9836],
        ...,
        [1.0095, 1.0167, 1.0253,  ..., 1.0435, 1.0228, 0.9809],
        [1.0223, 1.0341, 1.0362,  ..., 1.0479, 1.0406, 0.9878],
        [1.0308, 1.0459, 1.0435,  ..., 1.0507, 1.0527, 0.9923]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9472],
         [12.4903],
         [12.9246],
         ...,
         [13.2378],
         [12.2628],
         [13.0379]],
        [[10.1708],
         [ 9.6071],
         [ 9.3767],
         ...,
         [ 9.2623],
         [ 9.7410],
         [ 9.3334]],
        [[ 9.9701],
         [ 9.3000],
         [ 9.0115],
         ...,
         [ 8.8617],
         [ 9.4673],
         [ 8.9550]],
        ...,
        [[ 9.7266],
         [ 8.9324],
         [ 8.5779],
         ...,
         [ 8.3886],
         [ 9.1383],
         [ 8.5067]],
        [[10.3597],
         [ 9.8996],
         [ 9.7270],
         ...,
         [ 9.6481],
         [10.0007],
         [ 9.6968]],
        [[10.7889],
         [10.5770],
         [10.5469],
         ...,
         [10.5574],
         [10.5986],
         [10.5497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9695, 0.9753,  ..., 0.9794, 0.9665, 0.9768],
        [0.9389, 0.9314, 0.9284,  ..., 0.9269, 0.9332, 0.9278],
        [0.9362, 0.9274, 0.9236,  ..., 0.9216, 0.9296, 0.9228],
        ...,
        [0.9330, 0.9225, 0.9178,  ..., 0.9153, 0.9252, 0.9169],
        [0.9414, 0.9353, 0.9330,  ..., 0.9320, 0.9366, 0.9326],
        [0.9471, 0.9443, 0.9439,  ..., 0.9440, 0.9445, 0.9439]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4836],
         [12.1642],
         [11.8159],
         ...,
         [12.9731],
         [12.2700],
         [12.0616]],
        [[13.0829],
         [10.5037],
         [10.3281],
         ...,
         [10.0660],
         [10.6005],
         [10.4485]],
        [[12.7140],
         [10.3146],
         [10.1575],
         ...,
         [ 9.7548],
         [10.4103],
         [10.2644]],
        ...,
        [[12.2706],
         [10.0846],
         [ 9.9496],
         ...,
         [ 9.3819],
         [10.1789],
         [10.0405]],
        [[13.4330],
         [10.6814],
         [10.4882],
         ...,
         [10.3622],
         [10.7792],
         [10.6213]],
        [[14.2390],
         [11.0841],
         [10.8503],
         ...,
         [11.0468],
         [11.1842],
         [11.0130]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1149, 1.0222, 1.0148,  ..., 1.0396, 1.0245, 1.0200],
        [1.0419, 0.9866, 0.9829,  ..., 0.9773, 0.9887, 0.9855],
        [1.0340, 0.9826, 0.9792,  ..., 0.9706, 0.9846, 0.9815],
        ...,
        [1.0245, 0.9777, 0.9748,  ..., 0.9626, 0.9797, 0.9767],
        [1.0495, 0.9904, 0.9863,  ..., 0.9836, 0.9925, 0.9892],
        [1.0667, 0.9991, 0.9941,  ..., 0.9983, 1.0012, 0.9976]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[28.8350],
         [19.8951],
         [18.8286],
         ...,
         [17.3733],
         [20.0491],
         [15.3591]],
        [[24.3723],
         [16.9275],
         [17.1343],
         ...,
         [16.6935],
         [17.0752],
         [14.3927]],
        [[23.8703],
         [16.5924],
         [16.9354],
         ...,
         [16.6112],
         [16.7392],
         [14.2774]],
        ...,
        [[23.2615],
         [16.1857],
         [16.6918],
         ...,
         [16.5096],
         [16.3313],
         [14.1356]],
        [[24.8452],
         [17.2429],
         [17.3199],
         ...,
         [16.7698],
         [17.3914],
         [14.5000]],
        [[25.9214],
         [17.9599],
         [17.7367],
         ...,
         [16.9395],
         [18.1100],
         [14.7396]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.2183, 1.0729, 1.0555,  ..., 1.0319, 1.0754, 0.9991],
        [1.1457, 1.0246, 1.0280,  ..., 1.0208, 1.0270, 0.9834],
        [1.1375, 1.0192, 1.0248,  ..., 1.0195, 1.0216, 0.9815],
        ...,
        [1.1276, 1.0126, 1.0208,  ..., 1.0178, 1.0149, 0.9792],
        [1.1534, 1.0298, 1.0310,  ..., 1.0221, 1.0322, 0.9851],
        [1.1709, 1.0414, 1.0378,  ..., 1.0248, 1.0439, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.4356],
         [12.3561],
         [12.7012],
         ...,
         [13.2159],
         [12.1794],
         [13.5010]],
        [[10.5088],
         [ 9.7592],
         [ 9.5546],
         ...,
         [ 9.2698],
         [ 9.9016],
         [ 9.1779]],
        [[10.3994],
         [ 9.4783],
         [ 9.2237],
         ...,
         [ 8.8716],
         [ 9.6511],
         [ 8.7497]],
        ...,
        [[10.2653],
         [ 9.1408],
         [ 8.8290],
         ...,
         [ 8.4011],
         [ 9.3489],
         [ 8.2459]],
        [[10.6108],
         [10.0259],
         [ 9.8705],
         ...,
         [ 9.6532],
         [10.1387],
         [ 9.5918]],
        [[10.8394],
         [10.6406],
         [10.6052],
         ...,
         [10.5564],
         [10.6822],
         [10.5724]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9527, 0.9648, 0.9694,  ..., 0.9762, 0.9625, 0.9800],
        [0.9404, 0.9305, 0.9278,  ..., 0.9241, 0.9324, 0.9228],
        [0.9390, 0.9268, 0.9234,  ..., 0.9188, 0.9291, 0.9172],
        ...,
        [0.9372, 0.9224, 0.9182,  ..., 0.9126, 0.9251, 0.9105],
        [0.9418, 0.9340, 0.9320,  ..., 0.9291, 0.9355, 0.9283],
        [0.9448, 0.9422, 0.9417,  ..., 0.9411, 0.9427, 0.9413]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2245],
         [12.1857],
         [11.8352],
         ...,
         [11.9604],
         [12.2505],
         [12.1305]],
        [[10.8027],
         [10.5192],
         [10.3115],
         ...,
         [10.2608],
         [10.5782],
         [10.4827]],
        [[10.5356],
         [10.3295],
         [10.1371],
         ...,
         [10.0680],
         [10.3878],
         [10.2949]],
        ...,
        [[10.2132],
         [10.0987],
         [ 9.9247],
         ...,
         [ 9.8337],
         [10.1561],
         [10.0666]],
        [[11.0553],
         [10.6975],
         [10.4752],
         ...,
         [10.4421],
         [10.7571],
         [10.6591]],
        [[11.6339],
         [11.1017],
         [10.8457],
         ...,
         [10.8536],
         [11.1628],
         [11.0588]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0304, 1.0081, 1.0006,  ..., 1.0033, 1.0095, 1.0069],
        [0.9785, 0.9724, 0.9679,  ..., 0.9668, 0.9737, 0.9716],
        [0.9727, 0.9683, 0.9642,  ..., 0.9627, 0.9696, 0.9676],
        ...,
        [0.9658, 0.9634, 0.9596,  ..., 0.9577, 0.9646, 0.9627],
        [0.9839, 0.9762, 0.9714,  ..., 0.9707, 0.9775, 0.9754],
        [0.9963, 0.9849, 0.9794,  ..., 0.9796, 0.9862, 0.9840]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.9404],
         [20.1074],
         [19.1484],
         ...,
         [18.6278],
         [20.5119],
         [15.5705]],
        [[17.5184],
         [17.1033],
         [17.3472],
         ...,
         [17.9695],
         [17.4557],
         [14.4694]],
        [[17.2398],
         [16.7641],
         [17.1364],
         ...,
         [17.8897],
         [17.1105],
         [14.3386]],
        ...,
        [[16.9002],
         [16.3524],
         [16.8782],
         ...,
         [17.7911],
         [16.6916],
         [14.1779]],
        [[17.7796],
         [17.4225],
         [17.5442],
         ...,
         [18.0436],
         [17.7805],
         [14.5912]],
        [[18.3698],
         [18.1482],
         [17.9868],
         ...,
         [18.2080],
         [18.5189],
         [14.8636]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0743, 1.0770, 1.0614,  ..., 1.0529, 1.0836, 1.0032],
        [1.0349, 1.0281, 1.0321,  ..., 1.0422, 1.0338, 0.9853],
        [1.0303, 1.0226, 1.0287,  ..., 1.0409, 1.0282, 0.9831],
        ...,
        [1.0248, 1.0159, 1.0245,  ..., 1.0393, 1.0214, 0.9805],
        [1.0391, 1.0333, 1.0353,  ..., 1.0434, 1.0391, 0.9873],
        [1.0487, 1.0451, 1.0425,  ..., 1.0461, 1.0511, 0.9917]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7003],
         [12.2850],
         [12.9193],
         ...,
         [12.6871],
         [12.1519],
         [13.0304]],
        [[10.2452],
         [ 9.7813],
         [ 9.4862],
         ...,
         [ 9.4757],
         [ 9.9055],
         [ 9.3362]],
        [[10.0782],
         [ 9.5092],
         [ 9.1303],
         ...,
         [ 9.1395],
         [ 9.6580],
         [ 8.9587]],
        ...,
        [[ 9.8746],
         [ 9.1819],
         [ 8.7071],
         ...,
         [ 8.7387],
         [ 9.3594],
         [ 8.5114]],
        [[10.4019],
         [10.0394],
         [ 9.8270],
         ...,
         [ 9.7971],
         [10.1396],
         [ 9.6987]],
        [[10.7562],
         [10.6333],
         [10.6231],
         ...,
         [10.5454],
         [10.6760],
         [10.5495]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9616, 0.9694, 0.9777,  ..., 0.9747, 0.9676, 0.9792],
        [0.9424, 0.9363, 0.9324,  ..., 0.9322, 0.9379, 0.9304],
        [0.9402, 0.9327, 0.9277,  ..., 0.9278, 0.9346, 0.9254],
        ...,
        [0.9375, 0.9283, 0.9221,  ..., 0.9225, 0.9307, 0.9195],
        [0.9445, 0.9397, 0.9369,  ..., 0.9365, 0.9410, 0.9352],
        [0.9491, 0.9475, 0.9474,  ..., 0.9464, 0.9481, 0.9464]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3509],
         [12.1991],
         [11.8238],
         ...,
         [12.1661],
         [12.2314],
         [12.0272]],
        [[10.8372],
         [10.5297],
         [10.3198],
         ...,
         [10.2071],
         [10.5586],
         [10.4345]],
        [[10.5609],
         [10.3397],
         [10.1474],
         ...,
         [ 9.9876],
         [10.3681],
         [10.2526]],
        ...,
        [[10.2278],
         [10.1085],
         [ 9.9375],
         ...,
         [ 9.7218],
         [10.1365],
         [10.0313]],
        [[11.0986],
         [10.7083],
         [10.4815],
         ...,
         [10.4140],
         [10.7376],
         [10.6053]],
        [[11.6981],
         [11.1132],
         [10.8474],
         ...,
         [10.8854],
         [11.1433],
         [10.9921]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0344, 1.0097, 1.0017,  ..., 1.0090, 1.0104, 1.0060],
        [0.9805, 0.9739, 0.9694,  ..., 0.9670, 0.9745, 0.9719],
        [0.9746, 0.9698, 0.9657,  ..., 0.9623, 0.9704, 0.9680],
        ...,
        [0.9674, 0.9649, 0.9612,  ..., 0.9566, 0.9655, 0.9632],
        [0.9861, 0.9777, 0.9729,  ..., 0.9714, 0.9784, 0.9755],
        [0.9990, 0.9864, 0.9807,  ..., 0.9815, 0.9871, 0.9838]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.3242],
         [20.1265],
         [19.5486],
         ...,
         [17.2488],
         [20.4551],
         [15.2586]],
        [[18.3528],
         [17.1221],
         [17.6510],
         ...,
         [16.8395],
         [17.4082],
         [14.2916]],
        [[18.0150],
         [16.7829],
         [17.4293],
         ...,
         [16.7895],
         [17.0641],
         [14.1762]],
        ...,
        [[17.6044],
         [16.3711],
         [17.1580],
         ...,
         [16.7276],
         [16.6464],
         [14.0344]],
        [[18.6702],
         [17.4414],
         [17.8582],
         ...,
         [16.8858],
         [17.7321],
         [14.3989]],
        [[19.3904],
         [18.1672],
         [18.3240],
         ...,
         [16.9884],
         [18.4682],
         [14.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0962, 1.0767, 1.0673,  ..., 1.0299, 1.0820, 0.9975],
        [1.0478, 1.0278, 1.0364,  ..., 1.0232, 1.0325, 0.9818],
        [1.0423, 1.0223, 1.0328,  ..., 1.0224, 1.0269, 0.9799],
        ...,
        [1.0357, 1.0156, 1.0284,  ..., 1.0214, 1.0201, 0.9776],
        [1.0530, 1.0330, 1.0398,  ..., 1.0240, 1.0377, 0.9835],
        [1.0647, 1.0448, 1.0474,  ..., 1.0256, 1.0497, 0.9874]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7124],
         [12.2440],
         [12.8420],
         ...,
         [12.6403],
         [12.1355],
         [12.9838]],
        [[10.1845],
         [ 9.7766],
         [ 9.4911],
         ...,
         [ 9.4968],
         [ 9.8719],
         [ 9.3538]],
        [[10.0098],
         [ 9.5080],
         [ 9.1424],
         ...,
         [ 9.1665],
         [ 9.6228],
         [ 8.9817]],
        ...,
        [[ 9.7971],
         [ 9.1848],
         [ 8.7274],
         ...,
         [ 8.7725],
         [ 9.3223],
         [ 8.5403]],
        [[10.3485],
         [10.0313],
         [ 9.8248],
         ...,
         [ 9.8122],
         [10.1076],
         [ 9.7110]],
        [[10.7198],
         [10.6171],
         [10.6033],
         ...,
         [10.5459],
         [10.6477],
         [10.5482]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9694, 0.9773,  ..., 0.9746, 0.9680, 0.9792],
        [0.9422, 0.9368, 0.9330,  ..., 0.9331, 0.9381, 0.9312],
        [0.9399, 0.9332, 0.9284,  ..., 0.9287, 0.9348, 0.9263],
        ...,
        [0.9371, 0.9290, 0.9229,  ..., 0.9235, 0.9308, 0.9205],
        [0.9444, 0.9402, 0.9374,  ..., 0.9373, 0.9412, 0.9359],
        [0.9493, 0.9479, 0.9477,  ..., 0.9470, 0.9483, 0.9470]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3158],
         [12.2073],
         [11.8175],
         ...,
         [11.9944],
         [12.2149],
         [12.0041]],
        [[10.8204],
         [10.5366],
         [10.3260],
         ...,
         [10.2511],
         [10.5432],
         [10.4260]],
        [[10.5460],
         [10.3464],
         [10.1550],
         ...,
         [10.0537],
         [10.3529],
         [10.2456]],
        ...,
        [[10.2151],
         [10.1150],
         [ 9.9466],
         ...,
         [ 9.8140],
         [10.1214],
         [10.0261]],
        [[11.0801],
         [10.7154],
         [10.4865],
         ...,
         [10.4368],
         [10.7221],
         [10.5953]],
        [[11.6754],
         [11.1206],
         [10.8494],
         ...,
         [10.8584],
         [11.1275],
         [10.9787]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0375, 1.0138, 1.0054,  ..., 1.0092, 1.0139, 1.0094],
        [0.9840, 0.9779, 0.9734,  ..., 0.9718, 0.9781, 0.9756],
        [0.9781, 0.9739, 0.9698,  ..., 0.9676, 0.9740, 0.9717],
        ...,
        [0.9710, 0.9689, 0.9653,  ..., 0.9624, 0.9690, 0.9670],
        [0.9896, 0.9818, 0.9769,  ..., 0.9758, 0.9819, 0.9792],
        [1.0024, 0.9905, 0.9846,  ..., 0.9848, 0.9906, 0.9874]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6863],
         [20.0500],
         [19.3809],
         ...,
         [17.3448],
         [20.2554],
         [15.2022]],
        [[18.6707],
         [17.0719],
         [17.5372],
         ...,
         [16.9728],
         [17.2360],
         [14.2483]],
        [[18.3279],
         [16.7354],
         [17.3215],
         ...,
         [16.9274],
         [16.8950],
         [14.1344]],
        ...,
        [[17.9111],
         [16.3270],
         [17.0575],
         ...,
         [16.8711],
         [16.4811],
         [13.9944]],
        [[18.9930],
         [17.3885],
         [17.7387],
         ...,
         [17.0149],
         [17.5569],
         [14.3542]],
        [[19.7238],
         [18.1081],
         [18.1916],
         ...,
         [17.1082],
         [18.2864],
         [14.5907]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1018, 1.0752, 1.0643,  ..., 1.0312, 1.0785, 0.9963],
        [1.0528, 1.0267, 1.0343,  ..., 1.0251, 1.0294, 0.9808],
        [1.0472, 1.0213, 1.0308,  ..., 1.0244, 1.0239, 0.9790],
        ...,
        [1.0404, 1.0146, 1.0265,  ..., 1.0235, 1.0171, 0.9767],
        [1.0580, 1.0319, 1.0376,  ..., 1.0258, 1.0346, 0.9825],
        [1.0699, 1.0436, 1.0450,  ..., 1.0273, 1.0465, 0.9864]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8107],
         [12.2295],
         [12.7705],
         ...,
         [12.6458],
         [12.1821],
         [13.0631]],
        [[ 9.9973],
         [ 9.7334],
         [ 9.4824],
         ...,
         [ 9.4942],
         [ 9.7863],
         [ 9.3240]],
        [[ 9.7931],
         [ 9.4622],
         [ 9.1393],
         ...,
         [ 9.1633],
         [ 9.5245],
         [ 8.9428]],
        ...,
        [[ 9.5455],
         [ 9.1360],
         [ 8.7307],
         ...,
         [ 8.7685],
         [ 9.2094],
         [ 8.4913]],
        [[10.1896],
         [ 9.9907],
         [ 9.8106],
         ...,
         [ 9.8104],
         [10.0343],
         [ 9.6904]],
        [[10.6271],
         [10.5827],
         [10.5755],
         ...,
         [10.5459],
         [10.6040],
         [10.5505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9627, 0.9682, 0.9754,  ..., 0.9737, 0.9676, 0.9792],
        [0.9387, 0.9352, 0.9319,  ..., 0.9321, 0.9359, 0.9298],
        [0.9360, 0.9316, 0.9274,  ..., 0.9277, 0.9325, 0.9248],
        ...,
        [0.9327, 0.9273, 0.9220,  ..., 0.9225, 0.9283, 0.9188],
        [0.9412, 0.9386, 0.9362,  ..., 0.9362, 0.9392, 0.9347],
        [0.9470, 0.9464, 0.9463,  ..., 0.9460, 0.9467, 0.9460]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0066],
         [12.2114],
         [11.8123],
         ...,
         [11.9143],
         [12.2081],
         [12.0050]],
        [[10.6757],
         [10.5402],
         [10.3349],
         ...,
         [10.2765],
         [10.5372],
         [10.4263]],
        [[10.4178],
         [10.3499],
         [10.1654],
         ...,
         [10.0901],
         [10.3470],
         [10.2459]],
        ...,
        [[10.1065],
         [10.1184],
         [ 9.9588],
         ...,
         [ 9.8634],
         [10.1156],
         [10.0263]],
        [[10.9194],
         [10.7189],
         [10.4939],
         ...,
         [10.4516],
         [10.7160],
         [10.5957]],
        [[11.4770],
         [11.1243],
         [10.8536],
         ...,
         [10.8488],
         [11.1212],
         [10.9792]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0380, 1.0210, 1.0124,  ..., 1.0146, 1.0209, 1.0166],
        [0.9880, 0.9851, 0.9807,  ..., 0.9795, 0.9851, 0.9827],
        [0.9825, 0.9811, 0.9771,  ..., 0.9755, 0.9810, 0.9788],
        ...,
        [0.9758, 0.9761, 0.9727,  ..., 0.9706, 0.9760, 0.9741],
        [0.9933, 0.9890, 0.9842,  ..., 0.9832, 0.9889, 0.9863],
        [1.0052, 0.9977, 0.9919,  ..., 0.9918, 0.9976, 0.9946]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.2194],
         [19.9199],
         [18.9853],
         ...,
         [17.3031],
         [20.0632],
         [15.2156]],
        [[19.0954],
         [16.9849],
         [17.2561],
         ...,
         [16.9205],
         [17.0742],
         [14.2604]],
        [[18.7406],
         [16.6530],
         [17.0533],
         ...,
         [16.8737],
         [16.7366],
         [14.1464]],
        ...,
        [[18.3093],
         [16.2501],
         [16.8049],
         ...,
         [16.8159],
         [16.3268],
         [14.0062]],
        [[19.4289],
         [17.2971],
         [17.4455],
         ...,
         [16.9638],
         [17.3919],
         [14.3665]],
        [[20.1857],
         [18.0066],
         [17.8707],
         ...,
         [17.0597],
         [18.1140],
         [14.6033]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1103, 1.0729, 1.0577,  ..., 1.0303, 1.0752, 0.9964],
        [1.0595, 1.0251, 1.0296,  ..., 1.0241, 1.0266, 0.9808],
        [1.0537, 1.0198, 1.0263,  ..., 1.0233, 1.0211, 0.9790],
        ...,
        [1.0467, 1.0132, 1.0222,  ..., 1.0224, 1.0144, 0.9767],
        [1.0649, 1.0302, 1.0326,  ..., 1.0248, 1.0318, 0.9826],
        [1.0772, 1.0418, 1.0396,  ..., 1.0264, 1.0435, 0.9864]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3525],
         [12.3543],
         [12.8174],
         ...,
         [12.7702],
         [12.3097],
         [13.0505]],
        [[ 9.6384],
         [ 9.6375],
         [ 9.4199],
         ...,
         [ 9.4397],
         [ 9.6615],
         [ 9.3287]],
        [[ 9.3469],
         [ 9.3457],
         [ 9.0676],
         ...,
         [ 9.0932],
         [ 9.3761],
         [ 8.9489]],
        ...,
        [[ 8.9973],
         [ 8.9958],
         [ 8.6485],
         ...,
         [ 8.6806],
         [ 9.0336],
         [ 8.4990]],
        [[ 9.9156],
         [ 9.9149],
         [ 9.7574],
         ...,
         [ 9.7714],
         [ 9.9328],
         [ 9.6936]],
        [[10.5559],
         [10.5557],
         [10.5454],
         ...,
         [10.5452],
         [10.5585],
         [10.5501]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9700, 0.9700, 0.9761,  ..., 0.9755, 0.9694, 0.9792],
        [0.9341, 0.9341, 0.9312,  ..., 0.9315, 0.9344, 0.9300],
        [0.9303, 0.9303, 0.9266,  ..., 0.9269, 0.9307, 0.9250],
        ...,
        [0.9256, 0.9256, 0.9210,  ..., 0.9215, 0.9261, 0.9191],
        [0.9378, 0.9378, 0.9357,  ..., 0.9359, 0.9380, 0.9349],
        [0.9462, 0.9462, 0.9461,  ..., 0.9461, 0.9463, 0.9462]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1676],
         [12.2022],
         [11.8171],
         ...,
         [11.8127],
         [12.2055],
         [12.0062]],
        [[10.4053],
         [10.5323],
         [10.3522],
         ...,
         [10.3338],
         [10.5351],
         [10.4267]],
        [[10.2057],
         [10.3422],
         [10.1840],
         ...,
         [10.1641],
         [10.3449],
         [10.2462]],
        ...,
        [[ 9.9633],
         [10.1109],
         [ 9.9790],
         ...,
         [ 9.9574],
         [10.1136],
         [10.0266]],
        [[10.5930],
         [10.7109],
         [10.5100],
         ...,
         [10.4930],
         [10.7138],
         [10.5961]],
        [[11.0194],
         [11.1160],
         [10.8667],
         ...,
         [10.8530],
         [11.1189],
         [10.9798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0314, 1.0322, 1.0239,  ..., 1.0238, 1.0322, 1.0280],
        [0.9936, 0.9964, 0.9925,  ..., 0.9921, 0.9964, 0.9941],
        [0.9894, 0.9923, 0.9889,  ..., 0.9885, 0.9923, 0.9902],
        ...,
        [0.9842, 0.9873, 0.9845,  ..., 0.9840, 0.9874, 0.9855],
        [0.9977, 1.0002, 0.9959,  ..., 0.9955, 1.0003, 0.9977],
        [1.0068, 1.0089, 1.0035,  ..., 1.0032, 1.0089, 1.0060]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[23.3987],
         [19.6205],
         [18.3141],
         ...,
         [17.3570],
         [19.6411],
         [15.2349]],
        [[19.9913],
         [16.7814],
         [16.7845],
         ...,
         [16.8818],
         [16.7512],
         [14.3227]],
        [[19.6056],
         [16.4599],
         [16.6043],
         ...,
         [16.8238],
         [16.4244],
         [14.2136]],
        ...,
        [[19.1372],
         [16.0693],
         [16.3832],
         ...,
         [16.7522],
         [16.0277],
         [14.0794]],
        [[20.3541],
         [17.0839],
         [16.9526],
         ...,
         [16.9354],
         [17.0587],
         [14.4241]],
        [[21.1782],
         [17.7708],
         [17.3296],
         ...,
         [17.0544],
         [17.7573],
         [14.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1283, 1.0669, 1.0456,  ..., 1.0301, 1.0672, 0.9955],
        [1.0729, 1.0207, 1.0207,  ..., 1.0223, 1.0202, 0.9807],
        [1.0666, 1.0155, 1.0178,  ..., 1.0214, 1.0149, 0.9789],
        ...,
        [1.0590, 1.0091, 1.0142,  ..., 1.0202, 1.0084, 0.9767],
        [1.0788, 1.0256, 1.0235,  ..., 1.0232, 1.0252, 0.9823],
        [1.0922, 1.0368, 1.0296,  ..., 1.0251, 1.0366, 0.9860]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8534],
         [12.2649],
         [12.8230],
         ...,
         [12.6705],
         [12.1797],
         [13.0127]],
        [[10.0197],
         [ 9.7369],
         [ 9.4732],
         ...,
         [ 9.4831],
         [ 9.8080],
         [ 9.3428]],
        [[ 9.8134],
         [ 9.4626],
         [ 9.1247],
         ...,
         [ 9.1490],
         [ 9.5485],
         [ 8.9674]],
        ...,
        [[ 9.5633],
         [ 9.1329],
         [ 8.7099],
         ...,
         [ 8.7506],
         [ 9.2360],
         [ 8.5223]],
        [[10.2140],
         [ 9.9971],
         [ 9.8067],
         ...,
         [ 9.8024],
         [10.0538],
         [ 9.7033]],
        [[10.6562],
         [10.5964],
         [10.5849],
         ...,
         [10.5456],
         [10.6182],
         [10.5490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9639, 0.9693, 0.9767,  ..., 0.9747, 0.9682, 0.9792],
        [0.9396, 0.9359, 0.9324,  ..., 0.9325, 0.9368, 0.9307],
        [0.9369, 0.9323, 0.9278,  ..., 0.9281, 0.9334, 0.9257],
        ...,
        [0.9336, 0.9279, 0.9223,  ..., 0.9229, 0.9293, 0.9199],
        [0.9422, 0.9393, 0.9368,  ..., 0.9368, 0.9401, 0.9355],
        [0.9481, 0.9473, 0.9471,  ..., 0.9466, 0.9475, 0.9466]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9941],
         [12.2069],
         [11.8127],
         ...,
         [11.9126],
         [12.2116],
         [12.0047]],
        [[10.6574],
         [10.5362],
         [10.3339],
         ...,
         [10.2771],
         [10.5403],
         [10.4262]],
        [[10.3991],
         [10.3460],
         [10.1642],
         ...,
         [10.0909],
         [10.3500],
         [10.2458]],
        ...,
        [[10.0871],
         [10.1147],
         [ 9.9575],
         ...,
         [ 9.8645],
         [10.1186],
         [10.0263]],
        [[10.9016],
         [10.7150],
         [10.4931],
         ...,
         [10.4520],
         [10.7191],
         [10.5955]],
        [[11.4605],
         [11.1201],
         [10.8530],
         ...,
         [10.8486],
         [11.1244],
         [10.9790]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0372, 1.0203, 1.0119,  ..., 1.0140, 1.0204, 1.0160],
        [0.9871, 0.9845, 0.9802,  ..., 0.9789, 0.9846, 0.9821],
        [0.9815, 0.9804, 0.9765,  ..., 0.9749, 0.9805, 0.9783],
        ...,
        [0.9749, 0.9755, 0.9721,  ..., 0.9701, 0.9755, 0.9736],
        [0.9923, 0.9883, 0.9836,  ..., 0.9827, 0.9884, 0.9858],
        [1.0043, 0.9970, 0.9913,  ..., 0.9912, 0.9971, 0.9940]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.1606],
         [19.9332],
         [19.0632],
         ...,
         [17.3203],
         [20.0840],
         [15.2118]],
        [[19.0355],
         [16.9891],
         [17.3111],
         ...,
         [16.9461],
         [17.0945],
         [14.2673]],
        [[18.6807],
         [16.6563],
         [17.1058],
         ...,
         [16.9004],
         [16.7569],
         [14.1546]],
        ...,
        [[18.2494],
         [16.2523],
         [16.8542],
         ...,
         [16.8438],
         [16.3470],
         [14.0159]],
        [[19.3691],
         [17.3023],
         [17.5029],
         ...,
         [16.9885],
         [17.4123],
         [14.3722]],
        [[20.1261],
         [18.0139],
         [17.9337],
         ...,
         [17.0823],
         [18.1346],
         [14.6065]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1092, 1.0730, 1.0589,  ..., 1.0305, 1.0755, 0.9962],
        [1.0584, 1.0251, 1.0304,  ..., 1.0244, 1.0268, 0.9809],
        [1.0526, 1.0197, 1.0270,  ..., 1.0237, 1.0213, 0.9790],
        ...,
        [1.0456, 1.0131, 1.0229,  ..., 1.0228, 1.0147, 0.9768],
        [1.0638, 1.0302, 1.0335,  ..., 1.0251, 1.0320, 0.9826],
        [1.0761, 1.0418, 1.0405,  ..., 1.0266, 1.0438, 0.9864]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7544],
         [12.2451],
         [12.8251],
         ...,
         [12.6471],
         [12.1518],
         [13.0037]],
        [[10.1176],
         [ 9.7610],
         [ 9.4860],
         ...,
         [ 9.4937],
         [ 9.8437],
         [ 9.3462]],
        [[ 9.9316],
         [ 9.4908],
         [ 9.1384],
         ...,
         [ 9.1625],
         [ 9.5904],
         [ 8.9718]],
        ...,
        [[ 9.7054],
         [ 9.1659],
         [ 8.7246],
         ...,
         [ 8.7675],
         [ 9.2849],
         [ 8.5279]],
        [[10.2925],
         [10.0172],
         [ 9.8187],
         ...,
         [ 9.8100],
         [10.0836],
         [ 9.7057]],
        [[10.6892],
         [10.6067],
         [10.5946],
         ...,
         [10.5458],
         [10.6337],
         [10.5487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9627, 0.9692, 0.9768,  ..., 0.9745, 0.9679, 0.9792],
        [0.9410, 0.9363, 0.9327,  ..., 0.9328, 0.9374, 0.9309],
        [0.9386, 0.9328, 0.9281,  ..., 0.9284, 0.9341, 0.9259],
        ...,
        [0.9356, 0.9285, 0.9226,  ..., 0.9232, 0.9300, 0.9200],
        [0.9434, 0.9397, 0.9371,  ..., 0.9370, 0.9406, 0.9356],
        [0.9486, 0.9475, 0.9474,  ..., 0.9467, 0.9479, 0.9467]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1999],
         [12.2080],
         [11.8151],
         ...,
         [11.9613],
         [12.2130],
         [12.0044]],
        [[10.7576],
         [10.5372],
         [10.3292],
         ...,
         [10.2610],
         [10.5416],
         [10.4261]],
        [[10.4885],
         [10.3469],
         [10.1588],
         ...,
         [10.0681],
         [10.3512],
         [10.2457]],
        ...,
        [[10.1640],
         [10.1156],
         [ 9.9512],
         ...,
         [ 9.8337],
         [10.1198],
         [10.0262]],
        [[11.0121],
         [10.7159],
         [10.4891],
         ...,
         [10.4424],
         [10.7204],
         [10.5954]],
        [[11.5952],
         [11.1212],
         [10.8507],
         ...,
         [10.8541],
         [11.1258],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0376, 1.0164, 1.0079,  ..., 1.0111, 1.0165, 1.0120],
        [0.9853, 0.9805, 0.9761,  ..., 0.9746, 0.9806, 0.9782],
        [0.9795, 0.9765, 0.9724,  ..., 0.9705, 0.9766, 0.9743],
        ...,
        [0.9725, 0.9715, 0.9680,  ..., 0.9655, 0.9716, 0.9696],
        [0.9907, 0.9844, 0.9795,  ..., 0.9785, 0.9845, 0.9818],
        [1.0032, 0.9931, 0.9873,  ..., 0.9873, 0.9932, 0.9900]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8740],
         [20.0043],
         [19.2464],
         ...,
         [17.3284],
         [20.1873],
         [15.2065]],
        [[18.8174],
         [17.0398],
         [17.4414],
         ...,
         [16.9588],
         [17.1788],
         [14.2542]],
        [[18.4701],
         [16.7048],
         [17.2300],
         ...,
         [16.9136],
         [16.8390],
         [14.1405]],
        ...,
        [[18.0478],
         [16.2982],
         [16.9713],
         ...,
         [16.8577],
         [16.4266],
         [14.0007]],
        [[19.1439],
         [17.3551],
         [17.6388],
         ...,
         [17.0006],
         [17.4985],
         [14.3599]],
        [[19.8846],
         [18.0715],
         [18.0823],
         ...,
         [17.0933],
         [18.2254],
         [14.5960]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1047, 1.0743, 1.0620,  ..., 1.0308, 1.0773, 0.9963],
        [1.0550, 1.0261, 1.0326,  ..., 1.0248, 1.0283, 0.9808],
        [1.0493, 1.0206, 1.0292,  ..., 1.0240, 1.0228, 0.9789],
        ...,
        [1.0425, 1.0140, 1.0250,  ..., 1.0231, 1.0161, 0.9766],
        [1.0603, 1.0312, 1.0358,  ..., 1.0254, 1.0335, 0.9825],
        [1.0723, 1.0429, 1.0430,  ..., 1.0269, 1.0454, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7364],
         [12.2414],
         [12.8255],
         ...,
         [12.6427],
         [12.1467],
         [13.0020]],
        [[10.1366],
         [ 9.7656],
         [ 9.4885],
         ...,
         [ 9.4957],
         [ 9.8506],
         [ 9.3468]],
        [[ 9.9544],
         [ 9.4962],
         [ 9.1410],
         ...,
         [ 9.1651],
         [ 9.5984],
         [ 8.9726]],
        ...,
        [[ 9.7328],
         [ 9.1722],
         [ 8.7274],
         ...,
         [ 8.7707],
         [ 9.2943],
         [ 8.5289]],
        [[10.3078],
         [10.0210],
         [ 9.8209],
         ...,
         [ 9.8114],
         [10.0893],
         [ 9.7061]],
        [[10.6959],
         [10.6087],
         [10.5964],
         ...,
         [10.5459],
         [10.6368],
         [10.5487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9625, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9413, 0.9364, 0.9328,  ..., 0.9329, 0.9375, 0.9309],
        [0.9389, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9360, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9371,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2390],
         [12.2082],
         [11.8157],
         ...,
         [11.9716],
         [12.2133],
         [12.0043]],
        [[10.7787],
         [10.5374],
         [10.3283],
         ...,
         [10.2578],
         [10.5418],
         [10.4260]],
        [[10.5078],
         [10.3471],
         [10.1577],
         ...,
         [10.0635],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1810],
         [10.1158],
         [ 9.9499],
         ...,
         [ 9.8275],
         [10.1200],
         [10.0262]],
        [[11.0349],
         [10.7161],
         [10.4883],
         ...,
         [10.4406],
         [10.7206],
         [10.5954]],
        [[11.6222],
         [11.1213],
         [10.8503],
         ...,
         [10.8554],
         [11.1260],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0156, 1.0072,  ..., 1.0105, 1.0157, 1.0112],
        [0.9850, 0.9798, 0.9753,  ..., 0.9738, 0.9799, 0.9774],
        [0.9791, 0.9757, 0.9716,  ..., 0.9696, 0.9758, 0.9735],
        ...,
        [0.9721, 0.9707, 0.9672,  ..., 0.9646, 0.9708, 0.9688],
        [0.9904, 0.9836, 0.9787,  ..., 0.9777, 0.9837, 0.9810],
        [1.0030, 0.9923, 0.9865,  ..., 0.9866, 0.9924, 0.9892]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8197],
         [20.0178],
         [19.2816],
         ...,
         [17.3308],
         [20.2069],
         [15.2055]],
        [[18.7762],
         [17.0496],
         [17.4664],
         ...,
         [16.9611],
         [17.1949],
         [14.2517]],
        [[18.4303],
         [16.7142],
         [17.2540],
         ...,
         [16.9158],
         [16.8548],
         [14.1378]],
        ...,
        [[18.0098],
         [16.3070],
         [16.9938],
         ...,
         [16.8599],
         [16.4419],
         [13.9978]],
        [[19.1014],
         [17.3652],
         [17.6649],
         ...,
         [17.0029],
         [17.5151],
         [14.3576]],
        [[19.8389],
         [18.0825],
         [18.1109],
         ...,
         [17.0956],
         [18.2428],
         [14.5941]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1039, 1.0746, 1.0626,  ..., 1.0309, 1.0776, 0.9963],
        [1.0544, 1.0263, 1.0331,  ..., 1.0248, 1.0286, 0.9808],
        [1.0487, 1.0208, 1.0296,  ..., 1.0241, 1.0231, 0.9789],
        ...,
        [1.0419, 1.0142, 1.0254,  ..., 1.0232, 1.0164, 0.9766],
        [1.0597, 1.0314, 1.0363,  ..., 1.0255, 1.0339, 0.9825],
        [1.0716, 1.0431, 1.0435,  ..., 1.0270, 1.0457, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7327],
         [12.2406],
         [12.8256],
         ...,
         [12.6418],
         [12.1456],
         [13.0017]],
        [[10.1406],
         [ 9.7665],
         [ 9.4890],
         ...,
         [ 9.4961],
         [ 9.8520],
         [ 9.3470]],
        [[ 9.9592],
         [ 9.4973],
         [ 9.1416],
         ...,
         [ 9.1656],
         [ 9.6000],
         [ 8.9728]],
        ...,
        [[ 9.7385],
         [ 9.1735],
         [ 8.7280],
         ...,
         [ 8.7714],
         [ 9.2962],
         [ 8.5291]],
        [[10.3110],
         [10.0218],
         [ 9.8214],
         ...,
         [ 9.8117],
         [10.0905],
         [ 9.7062]],
        [[10.6973],
         [10.6091],
         [10.5968],
         ...,
         [10.5459],
         [10.6374],
         [10.5487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2470],
         [12.2082],
         [11.8159],
         ...,
         [11.9738],
         [12.2134],
         [12.0043]],
        [[10.7831],
         [10.5374],
         [10.3281],
         ...,
         [10.2572],
         [10.5419],
         [10.4260]],
        [[10.5119],
         [10.3472],
         [10.1575],
         ...,
         [10.0626],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1847],
         [10.1158],
         [ 9.9496],
         ...,
         [ 9.8262],
         [10.1201],
         [10.0262]],
        [[11.0397],
         [10.7162],
         [10.4882],
         ...,
         [10.4402],
         [10.7207],
         [10.5954]],
        [[11.6278],
         [11.1214],
         [10.8502],
         ...,
         [10.8557],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0156, 1.0111],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9715,  ..., 0.9694, 0.9756, 0.9734],
        ...,
        [0.9721, 0.9706, 0.9670,  ..., 0.9644, 0.9707, 0.9687],
        [0.9904, 0.9835, 0.9786,  ..., 0.9775, 0.9836, 0.9809],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8085],
         [20.0205],
         [19.2888],
         ...,
         [17.3314],
         [20.2110],
         [15.2053]],
        [[18.7678],
         [17.0516],
         [17.4716],
         ...,
         [16.9615],
         [17.1983],
         [14.2511]],
        [[18.4221],
         [16.7161],
         [17.2589],
         ...,
         [16.9163],
         [16.8581],
         [14.1373]],
        ...,
        [[18.0020],
         [16.3089],
         [16.9985],
         ...,
         [16.8603],
         [16.4451],
         [13.9972]],
        [[19.0926],
         [17.3673],
         [17.6703],
         ...,
         [17.0034],
         [17.5185],
         [14.3571]],
        [[19.8295],
         [18.0847],
         [18.1168],
         ...,
         [17.0961],
         [18.2464],
         [14.5937]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1037, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0142, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7320],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1454],
         [13.0016]],
        [[10.1414],
         [ 9.7667],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8523],
         [ 9.3470]],
        [[ 9.9601],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1657],
         [ 9.6004],
         [ 8.9728]],
        ...,
        [[ 9.7397],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7715],
         [ 9.2967],
         [ 8.5292]],
        [[10.3117],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6976],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6375],
         [10.5487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2487],
         [12.2083],
         [11.8159],
         ...,
         [11.9743],
         [12.2134],
         [12.0043]],
        [[10.7840],
         [10.5374],
         [10.3281],
         ...,
         [10.2571],
         [10.5419],
         [10.4260]],
        [[10.5127],
         [10.3472],
         [10.1574],
         ...,
         [10.0624],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1854],
         [10.1158],
         [ 9.9496],
         ...,
         [ 9.8259],
         [10.1201],
         [10.0262]],
        [[11.0407],
         [10.7162],
         [10.4882],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6290],
         [11.1214],
         [10.8502],
         ...,
         [10.8557],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9891]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8061],
         [20.0211],
         [19.2903],
         ...,
         [17.3315],
         [20.2118],
         [15.2052]],
        [[18.7660],
         [17.0520],
         [17.4727],
         ...,
         [16.9616],
         [17.1990],
         [14.2510]],
        [[18.4204],
         [16.7165],
         [17.2599],
         ...,
         [16.9164],
         [16.8587],
         [14.1372]],
        ...,
        [[18.0003],
         [16.3093],
         [16.9995],
         ...,
         [16.8604],
         [16.4458],
         [13.9971]],
        [[19.0908],
         [17.3677],
         [17.6714],
         ...,
         [17.0035],
         [17.5192],
         [14.3570]],
        [[19.8275],
         [18.0852],
         [18.1180],
         ...,
         [17.0962],
         [18.2471],
         [14.5936]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1037, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7399],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2967],
         [ 8.5292]],
        [[10.3118],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2491],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7842],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0409],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6292],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8057],
         [20.0212],
         [19.2907],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7656],
         [17.0521],
         [17.4729],
         ...,
         [16.9616],
         [17.1991],
         [14.2510]],
        [[18.4201],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[18.0000],
         [16.3093],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0904],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8271],
         [18.0853],
         [18.1183],
         ...,
         [17.0963],
         [18.2473],
         [14.5936]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1037, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3118],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2491],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0212],
         [19.2907],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1183],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1037, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3118],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0212],
         [19.2907],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1037, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2907],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2907],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7318],
         [12.2404],
         [12.8256],
         ...,
         [12.6416],
         [12.1453],
         [13.0016]],
        [[10.1416],
         [ 9.7668],
         [ 9.4891],
         ...,
         [ 9.4962],
         [ 9.8524],
         [ 9.3470]],
        [[ 9.9604],
         [ 9.4976],
         [ 9.1417],
         ...,
         [ 9.1658],
         [ 9.6005],
         [ 8.9728]],
        ...,
        [[ 9.7400],
         [ 9.1738],
         [ 8.7281],
         ...,
         [ 8.7716],
         [ 9.2968],
         [ 8.5292]],
        [[10.3119],
         [10.0220],
         [ 9.8215],
         ...,
         [ 9.8118],
         [10.0908],
         [ 9.7063]],
        [[10.6977],
         [10.6092],
         [10.5969],
         ...,
         [10.5459],
         [10.6376],
         [10.5486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9691, 0.9769,  ..., 0.9744, 0.9679, 0.9792],
        [0.9414, 0.9364, 0.9328,  ..., 0.9329, 0.9376, 0.9309],
        [0.9390, 0.9329, 0.9282,  ..., 0.9285, 0.9342, 0.9259],
        ...,
        [0.9361, 0.9286, 0.9227,  ..., 0.9233, 0.9302, 0.9201],
        [0.9436, 0.9398, 0.9372,  ..., 0.9370, 0.9407, 0.9356],
        [0.9487, 0.9476, 0.9474,  ..., 0.9467, 0.9479, 0.9468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2492],
         [12.2083],
         [11.8159],
         ...,
         [11.9744],
         [12.2134],
         [12.0043]],
        [[10.7843],
         [10.5374],
         [10.3281],
         ...,
         [10.2570],
         [10.5419],
         [10.4260]],
        [[10.5129],
         [10.3472],
         [10.1574],
         ...,
         [10.0623],
         [10.3515],
         [10.2457]],
        ...,
        [[10.1856],
         [10.1158],
         [ 9.9495],
         ...,
         [ 9.8258],
         [10.1201],
         [10.0262]],
        [[11.0410],
         [10.7162],
         [10.4881],
         ...,
         [10.4401],
         [10.7207],
         [10.5954]],
        [[11.6293],
         [11.1214],
         [10.8502],
         ...,
         [10.8558],
         [11.1261],
         [10.9788]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0377, 1.0154, 1.0070,  ..., 1.0104, 1.0155, 1.0110],
        [0.9849, 0.9796, 0.9751,  ..., 0.9736, 0.9797, 0.9772],
        [0.9791, 0.9755, 0.9714,  ..., 0.9694, 0.9756, 0.9733],
        ...,
        [0.9720, 0.9705, 0.9670,  ..., 0.9643, 0.9706, 0.9686],
        [0.9904, 0.9834, 0.9785,  ..., 0.9775, 0.9835, 0.9808],
        [1.0030, 0.9921, 0.9863,  ..., 0.9864, 0.9922, 0.9890]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8055],
         [20.0213],
         [19.2908],
         ...,
         [17.3315],
         [20.2120],
         [15.2052]],
        [[18.7655],
         [17.0521],
         [17.4730],
         ...,
         [16.9616],
         [17.1992],
         [14.2510]],
        [[18.4200],
         [16.7166],
         [17.2602],
         ...,
         [16.9164],
         [16.8589],
         [14.1371]],
        ...,
        [[17.9999],
         [16.3094],
         [16.9997],
         ...,
         [16.8604],
         [16.4459],
         [13.9971]],
        [[19.0903],
         [17.3678],
         [17.6717],
         ...,
         [17.0035],
         [17.5194],
         [14.3570]],
        [[19.8270],
         [18.0853],
         [18.1184],
         ...,
         [17.0963],
         [18.2473],
         [14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0746, 1.0627,  ..., 1.0309, 1.0777, 0.9963],
        [1.0542, 1.0263, 1.0332,  ..., 1.0249, 1.0287, 0.9808],
        [1.0486, 1.0209, 1.0297,  ..., 1.0241, 1.0232, 0.9789],
        ...,
        [1.0418, 1.0143, 1.0255,  ..., 1.0232, 1.0165, 0.9766],
        [1.0595, 1.0315, 1.0364,  ..., 1.0255, 1.0339, 0.9825],
        [1.0715, 1.0431, 1.0437,  ..., 1.0271, 1.0458, 0.9863]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7648],
         [12.2469],
         [12.8039],
         ...,
         [12.6620],
         [12.1626],
         [13.0678]],
        [[10.0642],
         [ 9.7448],
         [ 9.4861],
         ...,
         [ 9.4870],
         [ 9.8244],
         [ 9.3223]],
        [[ 9.8716],
         [ 9.4730],
         [ 9.1404],
         ...,
         [ 9.1539],
         [ 9.5682],
         [ 8.9406]],
        ...,
        [[ 9.6376],
         [ 9.1461],
         [ 8.7287],
         ...,
         [ 8.7568],
         [ 9.2594],
         [ 8.4885]],
        [[10.2454],
         [10.0027],
         [ 9.8169],
         ...,
         [ 9.8052],
         [10.0671],
         [ 9.6892]],
        [[10.6569],
         [10.5961],
         [10.5882],
         ...,
         [10.5457],
         [10.6239],
         [10.5506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9620, 0.9684, 0.9757,  ..., 0.9739, 0.9673, 0.9792],
        [0.9395, 0.9353, 0.9319,  ..., 0.9319, 0.9364, 0.9297],
        [0.9370, 0.9317, 0.9273,  ..., 0.9275, 0.9330, 0.9247],
        ...,
        [0.9339, 0.9274, 0.9219,  ..., 0.9223, 0.9289, 0.9187],
        [0.9419, 0.9387, 0.9363,  ..., 0.9361, 0.9396, 0.9346],
        [0.9474, 0.9466, 0.9465,  ..., 0.9459, 0.9469, 0.9460]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9820],
         [12.2069],
         [11.8148],
         ...,
         [11.9372],
         [12.2159],
         [12.0166]],
        [[10.6208],
         [10.5363],
         [10.3296],
         ...,
         [10.2687],
         [10.5441],
         [10.4305]],
        [[10.3601],
         [10.3461],
         [10.1593],
         ...,
         [10.0791],
         [10.3537],
         [10.2494]],
        ...,
        [[10.0454],
         [10.1147],
         [ 9.9517],
         ...,
         [ 9.8486],
         [10.1222],
         [10.0289]],
        [[10.8673],
         [10.7150],
         [10.4894],
         ...,
         [10.4469],
         [10.7229],
         [10.6007]],
        [[11.4316],
         [11.1202],
         [10.8509],
         ...,
         [10.8512],
         [11.1284],
         [10.9859]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0340, 1.0174, 1.0090,  ..., 1.0116, 1.0176, 1.0133],
        [0.9834, 0.9816, 0.9772,  ..., 0.9759, 0.9818, 0.9793],
        [0.9778, 0.9775, 0.9735,  ..., 0.9718, 0.9777, 0.9754],
        ...,
        [0.9711, 0.9726, 0.9691,  ..., 0.9668, 0.9727, 0.9707],
        [0.9887, 0.9854, 0.9806,  ..., 0.9797, 0.9856, 0.9830],
        [1.0008, 0.9941, 0.9883,  ..., 0.9883, 0.9943, 0.9912]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6616],
         [19.9911],
         [19.1583],
         ...,
         [17.3248],
         [20.2113],
         [15.2462]],
        [[18.6247],
         [17.0292],
         [17.3737],
         ...,
         [16.9524],
         [17.1996],
         [14.2810]],
        [[18.2797],
         [16.6945],
         [17.1647],
         ...,
         [16.9069],
         [16.8594],
         [14.1659]],
        ...,
        [[17.8603],
         [16.2882],
         [16.9087],
         ...,
         [16.8505],
         [16.4466],
         [14.0242]],
        [[18.9490],
         [17.3442],
         [17.5689],
         ...,
         [16.9946],
         [17.5197],
         [14.3882]],
        [[19.6848],
         [18.0600],
         [18.0075],
         ...,
         [17.0880],
         [18.2473],
         [14.6274]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1011, 1.0740, 1.0604,  ..., 1.0306, 1.0776, 0.9968],
        [1.0517, 1.0258, 1.0314,  ..., 1.0245, 1.0286, 0.9811],
        [1.0461, 1.0204, 1.0280,  ..., 1.0238, 1.0230, 0.9792],
        ...,
        [1.0393, 1.0137, 1.0238,  ..., 1.0229, 1.0163, 0.9769],
        [1.0570, 1.0309, 1.0346,  ..., 1.0252, 1.0338, 0.9828],
        [1.0690, 1.0426, 1.0417,  ..., 1.0268, 1.0456, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9839],
         [12.2728],
         [12.8057],
         ...,
         [12.7172],
         [12.1957],
         [13.1072]],
        [[ 9.8597],
         [ 9.6820],
         [ 9.4467],
         ...,
         [ 9.4625],
         [ 9.7472],
         [ 9.3080]],
        [[ 9.6244],
         [ 9.4019],
         [ 9.0975],
         ...,
         [ 9.1225],
         [ 9.4805],
         [ 8.9218]],
        ...,
        [[ 9.3402],
         [ 9.0655],
         [ 8.6821],
         ...,
         [ 8.7174],
         [ 9.1596],
         [ 8.4647]],
        [[10.0820],
         [ 9.9479],
         [ 9.7809],
         ...,
         [ 9.7877],
         [10.0001],
         [ 9.6793]],
        [[10.5905],
         [10.5610],
         [10.5609],
         ...,
         [10.5453],
         [10.5815],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9644, 0.9682, 0.9753,  ..., 0.9741, 0.9672, 0.9793],
        [0.9363, 0.9340, 0.9309,  ..., 0.9311, 0.9349, 0.9291],
        [0.9332, 0.9303, 0.9263,  ..., 0.9266, 0.9313, 0.9239],
        ...,
        [0.9295, 0.9258, 0.9208,  ..., 0.9212, 0.9271, 0.9179],
        [0.9393, 0.9375, 0.9353,  ..., 0.9354, 0.9382, 0.9340],
        [0.9460, 0.9456, 0.9456,  ..., 0.9454, 0.9459, 0.9455]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5156],
         [12.2028],
         [11.8118],
         ...,
         [11.8771],
         [12.2150],
         [12.0260]],
        [[10.3810],
         [10.5328],
         [10.3370],
         ...,
         [10.2907],
         [10.5433],
         [10.4341]],
        [[10.1435],
         [10.3427],
         [10.1677],
         ...,
         [10.1096],
         [10.3530],
         [10.2523]],
        ...,
        [[ 9.8562],
         [10.1114],
         [ 9.9615],
         ...,
         [ 9.8894],
         [10.1215],
         [10.0310]],
        [[10.6053],
         [10.7115],
         [10.4958],
         ...,
         [10.4607],
         [10.7222],
         [10.6048]],
        [[11.1174],
         [11.1165],
         [10.8548],
         ...,
         [10.8459],
         [11.1276],
         [10.9914]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0306, 1.0239, 1.0155,  ..., 1.0169, 1.0242, 1.0201],
        [0.9849, 0.9881, 0.9839,  ..., 0.9829, 0.9883, 0.9860],
        [0.9798, 0.9840, 0.9803,  ..., 0.9790, 0.9843, 0.9821],
        ...,
        [0.9736, 0.9791, 0.9759,  ..., 0.9743, 0.9793, 0.9773],
        [0.9897, 0.9919, 0.9873,  ..., 0.9866, 0.9922, 0.9897],
        [1.0006, 1.0006, 0.9950,  ..., 0.9948, 1.0009, 0.9979]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7830],
         [19.8800],
         [18.8486],
         ...,
         [17.2021],
         [20.1235],
         [15.2837]],
        [[18.6866],
         [16.9471],
         [17.1485],
         ...,
         [16.8067],
         [17.1309],
         [14.3287]],
        [[18.3353],
         [16.6155],
         [16.9490],
         ...,
         [16.7584],
         [16.7928],
         [14.2147]],
        ...,
        [[17.9084],
         [16.2129],
         [16.7047],
         ...,
         [16.6987],
         [16.3825],
         [14.0745]],
        [[19.0169],
         [17.2591],
         [17.3348],
         ...,
         [16.8515],
         [17.4490],
         [14.4348]],
        [[19.7666],
         [17.9680],
         [17.7530],
         ...,
         [16.9506],
         [18.1721],
         [14.6716]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1030, 1.0720, 1.0552,  ..., 1.0285, 1.0760, 0.9973],
        [1.0526, 1.0243, 1.0276,  ..., 1.0220, 1.0273, 0.9817],
        [1.0469, 1.0189, 1.0243,  ..., 1.0212, 1.0218, 0.9799],
        ...,
        [1.0399, 1.0124, 1.0204,  ..., 1.0203, 1.0151, 0.9776],
        [1.0580, 1.0294, 1.0306,  ..., 1.0228, 1.0325, 0.9834],
        [1.0702, 1.0409, 1.0374,  ..., 1.0244, 1.0442, 0.9873]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8025],
         [12.2513],
         [12.8040],
         ...,
         [12.6720],
         [12.1682],
         [13.0750]],
        [[10.0257],
         [ 9.7332],
         [ 9.4788],
         ...,
         [ 9.4825],
         [ 9.8101],
         [ 9.3197]],
        [[ 9.8253],
         [ 9.4599],
         [ 9.1325],
         ...,
         [ 9.1481],
         [ 9.5520],
         [ 8.9371]],
        ...,
        [[ 9.5820],
         [ 9.1313],
         [ 8.7202],
         ...,
         [ 8.7495],
         [ 9.2410],
         [ 8.4841]],
        [[10.2144],
         [ 9.9925],
         [ 9.8103],
         ...,
         [ 9.8020],
         [10.0546],
         [ 9.6873]],
        [[10.6435],
         [10.5895],
         [10.5831],
         ...,
         [10.5456],
         [10.6159],
         [10.5509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9683, 0.9757,  ..., 0.9739, 0.9672, 0.9792],
        [0.9389, 0.9351, 0.9317,  ..., 0.9318, 0.9361, 0.9296],
        [0.9363, 0.9315, 0.9271,  ..., 0.9273, 0.9327, 0.9245],
        ...,
        [0.9331, 0.9271, 0.9217,  ..., 0.9221, 0.9286, 0.9186],
        [0.9414, 0.9385, 0.9361,  ..., 0.9360, 0.9393, 0.9345],
        [0.9471, 0.9464, 0.9463,  ..., 0.9458, 0.9467, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8896],
         [12.2062],
         [11.8140],
         ...,
         [11.9247],
         [12.2157],
         [12.0183]],
        [[10.5699],
         [10.5357],
         [10.3310],
         ...,
         [10.2729],
         [10.5440],
         [10.4312]],
        [[10.3135],
         [10.3454],
         [10.1609],
         ...,
         [10.0850],
         [10.3536],
         [10.2499]],
        ...,
        [[10.0038],
         [10.1141],
         [ 9.9536],
         ...,
         [ 9.8566],
         [10.1221],
         [10.0292]],
        [[10.8123],
         [10.7144],
         [10.4906],
         ...,
         [10.4494],
         [10.7228],
         [10.6014]],
        [[11.3671],
         [11.1195],
         [10.8516],
         ...,
         [10.8498],
         [11.1283],
         [10.9869]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0333, 1.0186, 1.0102,  ..., 1.0126, 1.0188, 1.0146],
        [0.9835, 0.9828, 0.9784,  ..., 0.9772, 0.9830, 0.9805],
        [0.9780, 0.9787, 0.9747,  ..., 0.9731, 0.9789, 0.9767],
        ...,
        [0.9714, 0.9737, 0.9703,  ..., 0.9682, 0.9739, 0.9719],
        [0.9887, 0.9866, 0.9818,  ..., 0.9809, 0.9868, 0.9842],
        [1.0006, 0.9953, 0.9896,  ..., 0.9895, 0.9955, 0.9925]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6842],
         [19.9709],
         [19.1010],
         ...,
         [17.3017],
         [20.1953],
         [15.2531]],
        [[18.6360],
         [17.0141],
         [17.3319],
         ...,
         [16.9256],
         [17.1869],
         [14.2898]],
        [[18.2897],
         [16.6799],
         [17.1247],
         ...,
         [16.8796],
         [16.8471],
         [14.1748]],
        ...,
        [[17.8689],
         [16.2743],
         [16.8708],
         ...,
         [16.8227],
         [16.4347],
         [14.0335]],
        [[18.9614],
         [17.3285],
         [17.5255],
         ...,
         [16.9682],
         [17.5067],
         [14.3967]],
        [[19.6998],
         [18.0431],
         [17.9604],
         ...,
         [17.0625],
         [18.2335],
         [14.6355]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1014, 1.0736, 1.0594,  ..., 1.0301, 1.0772, 0.9968],
        [1.0518, 1.0255, 1.0306,  ..., 1.0240, 1.0283, 0.9812],
        [1.0462, 1.0200, 1.0273,  ..., 1.0233, 1.0228, 0.9793],
        ...,
        [1.0394, 1.0134, 1.0231,  ..., 1.0224, 1.0160, 0.9770],
        [1.0571, 1.0306, 1.0338,  ..., 1.0247, 1.0335, 0.9829],
        [1.0692, 1.0422, 1.0409,  ..., 1.0263, 1.0453, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7730],
         [12.2479],
         [12.8039],
         ...,
         [12.6642],
         [12.1638],
         [13.0694]],
        [[10.0558],
         [ 9.7423],
         [ 9.4845],
         ...,
         [ 9.4860],
         [ 9.8213],
         [ 9.3217]],
        [[ 9.8614],
         [ 9.4701],
         [ 9.1387],
         ...,
         [ 9.1527],
         [ 9.5646],
         [ 8.9398]],
        ...,
        [[ 9.6254],
         [ 9.1429],
         [ 8.7269],
         ...,
         [ 8.7552],
         [ 9.2554],
         [ 8.4875]],
        [[10.2386],
         [10.0005],
         [ 9.8154],
         ...,
         [ 9.8045],
         [10.0643],
         [ 9.6888]],
        [[10.6539],
         [10.5947],
         [10.5871],
         ...,
         [10.5456],
         [10.6222],
         [10.5507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9621, 0.9684, 0.9757,  ..., 0.9739, 0.9673, 0.9792],
        [0.9394, 0.9353, 0.9319,  ..., 0.9319, 0.9363, 0.9297],
        [0.9368, 0.9317, 0.9273,  ..., 0.9275, 0.9329, 0.9247],
        ...,
        [0.9337, 0.9273, 0.9218,  ..., 0.9222, 0.9288, 0.9187],
        [0.9418, 0.9387, 0.9362,  ..., 0.9361, 0.9395, 0.9346],
        [0.9473, 0.9465, 0.9464,  ..., 0.9459, 0.9469, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9616],
         [12.2068],
         [11.8147],
         ...,
         [11.9344],
         [12.2158],
         [12.0170]],
        [[10.6094],
         [10.5361],
         [10.3299],
         ...,
         [10.2696],
         [10.5441],
         [10.4307]],
        [[10.3496],
         [10.3459],
         [10.1596],
         ...,
         [10.0804],
         [10.3537],
         [10.2495]],
        ...,
        [[10.0360],
         [10.1146],
         [ 9.9521],
         ...,
         [ 9.8504],
         [10.1222],
         [10.0289]],
        [[10.8550],
         [10.7149],
         [10.4897],
         ...,
         [10.4475],
         [10.7229],
         [10.6008]],
        [[11.4173],
         [11.1201],
         [10.8510],
         ...,
         [10.8509],
         [11.1284],
         [10.9861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0339, 1.0177, 1.0093,  ..., 1.0118, 1.0179, 1.0136],
        [0.9834, 0.9819, 0.9774,  ..., 0.9761, 0.9820, 0.9796],
        [0.9779, 0.9778, 0.9738,  ..., 0.9721, 0.9779, 0.9757],
        ...,
        [0.9711, 0.9728, 0.9693,  ..., 0.9671, 0.9730, 0.9710],
        [0.9887, 0.9857, 0.9809,  ..., 0.9800, 0.9859, 0.9832],
        [1.0007, 0.9944, 0.9886,  ..., 0.9886, 0.9946, 0.9915]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6665],
         [19.9867],
         [19.1458],
         ...,
         [17.3198],
         [20.2078],
         [15.2477]],
        [[18.6271],
         [17.0259],
         [17.3646],
         ...,
         [16.9466],
         [17.1968],
         [14.2829]],
        [[18.2819],
         [16.6913],
         [17.1559],
         ...,
         [16.9009],
         [16.8567],
         [14.1678]],
        ...,
        [[17.8622],
         [16.2852],
         [16.9004],
         ...,
         [16.8445],
         [16.4440],
         [14.0262]],
        [[18.9517],
         [17.3408],
         [17.5594],
         ...,
         [16.9888],
         [17.5168],
         [14.3900]],
        [[19.6880],
         [18.0563],
         [17.9972],
         ...,
         [17.0824],
         [18.2443],
         [14.6292]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1012, 1.0739, 1.0602,  ..., 1.0305, 1.0775, 0.9968],
        [1.0518, 1.0257, 1.0312,  ..., 1.0244, 1.0285, 0.9811],
        [1.0462, 1.0203, 1.0278,  ..., 1.0237, 1.0230, 0.9792],
        ...,
        [1.0393, 1.0137, 1.0237,  ..., 1.0228, 1.0163, 0.9769],
        [1.0570, 1.0308, 1.0344,  ..., 1.0251, 1.0337, 0.9829],
        [1.0690, 1.0425, 1.0415,  ..., 1.0266, 1.0455, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7924],
         [12.2502],
         [12.8040],
         ...,
         [12.6694],
         [12.1667],
         [13.0731]],
        [[10.0359],
         [ 9.7363],
         [ 9.4808],
         ...,
         [ 9.4837],
         [ 9.8139],
         [ 9.3204]],
        [[ 9.8375],
         [ 9.4634],
         [ 9.1346],
         ...,
         [ 9.1497],
         [ 9.5563],
         [ 8.9380]],
        ...,
        [[ 9.5968],
         [ 9.1352],
         [ 8.7224],
         ...,
         [ 8.7515],
         [ 9.2459],
         [ 8.4852]],
        [[10.2226],
         [ 9.9952],
         [ 9.8120],
         ...,
         [ 9.8028],
         [10.0579],
         [ 9.6878]],
        [[10.6470],
         [10.5913],
         [10.5845],
         ...,
         [10.5456],
         [10.6181],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9684, 0.9757,  ..., 0.9739, 0.9673, 0.9792],
        [0.9391, 0.9351, 0.9318,  ..., 0.9318, 0.9362, 0.9296],
        [0.9365, 0.9315, 0.9272,  ..., 0.9274, 0.9328, 0.9246],
        ...,
        [0.9333, 0.9272, 0.9217,  ..., 0.9221, 0.9287, 0.9186],
        [0.9416, 0.9386, 0.9361,  ..., 0.9360, 0.9394, 0.9345],
        [0.9472, 0.9464, 0.9463,  ..., 0.9458, 0.9468, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9139],
         [12.2064],
         [11.8142],
         ...,
         [11.9280],
         [12.2158],
         [12.0179]],
        [[10.5831],
         [10.5358],
         [10.3306],
         ...,
         [10.2718],
         [10.5440],
         [10.4310]],
        [[10.3255],
         [10.3456],
         [10.1605],
         ...,
         [10.0834],
         [10.3536],
         [10.2497]],
        ...,
        [[10.0145],
         [10.1143],
         [ 9.9531],
         ...,
         [ 9.8545],
         [10.1221],
         [10.0291]],
        [[10.8266],
         [10.7145],
         [10.4903],
         ...,
         [10.4488],
         [10.7228],
         [10.6012]],
        [[11.3840],
         [11.1197],
         [10.8514],
         ...,
         [10.8502],
         [11.1283],
         [10.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0335, 1.0183, 1.0099,  ..., 1.0123, 1.0185, 1.0142],
        [0.9835, 0.9825, 0.9781,  ..., 0.9768, 0.9826, 0.9802],
        [0.9780, 0.9784, 0.9744,  ..., 0.9728, 0.9786, 0.9763],
        ...,
        [0.9713, 0.9734, 0.9700,  ..., 0.9679, 0.9736, 0.9716],
        [0.9887, 0.9863, 0.9815,  ..., 0.9806, 0.9865, 0.9839],
        [1.0007, 0.9950, 0.9892,  ..., 0.9892, 0.9952, 0.9921]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6782],
         [19.9763],
         [19.1162],
         ...,
         [17.3078],
         [20.1996],
         [15.2513]],
        [[18.6330],
         [17.0181],
         [17.3430],
         ...,
         [16.9327],
         [17.1903],
         [14.2874]],
        [[18.2871],
         [16.6838],
         [17.1353],
         ...,
         [16.8869],
         [16.8504],
         [14.1724]],
        ...,
        [[17.8666],
         [16.2780],
         [16.8809],
         ...,
         [16.8301],
         [16.4379],
         [14.0310]],
        [[18.9581],
         [17.3327],
         [17.5370],
         ...,
         [16.9752],
         [17.5101],
         [14.3944]],
        [[19.6958],
         [18.0476],
         [17.9729],
         ...,
         [17.0692],
         [18.2372],
         [14.6334]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1013, 1.0737, 1.0597,  ..., 1.0303, 1.0773, 0.9968],
        [1.0518, 1.0256, 1.0308,  ..., 1.0242, 1.0284, 0.9811],
        [1.0462, 1.0201, 1.0275,  ..., 1.0234, 1.0228, 0.9793],
        ...,
        [1.0394, 1.0135, 1.0233,  ..., 1.0225, 1.0161, 0.9770],
        [1.0571, 1.0307, 1.0340,  ..., 1.0249, 1.0336, 0.9829],
        [1.0691, 1.0423, 1.0411,  ..., 1.0264, 1.0454, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7991],
         [12.2509],
         [12.8040],
         ...,
         [12.6711],
         [12.1677],
         [13.0744]],
        [[10.0292],
         [ 9.7342],
         [ 9.4795],
         ...,
         [ 9.4829],
         [ 9.8114],
         [ 9.3199]],
        [[ 9.8294],
         [ 9.4611],
         [ 9.1332],
         ...,
         [ 9.1487],
         [ 9.5535],
         [ 8.9374]],
        ...,
        [[ 9.5870],
         [ 9.1326],
         [ 8.7209],
         ...,
         [ 8.7502],
         [ 9.2427],
         [ 8.4845]],
        [[10.2172],
         [ 9.9935],
         [ 9.8109],
         ...,
         [ 9.8022],
         [10.0558],
         [ 9.6875]],
        [[10.6447],
         [10.5901],
         [10.5836],
         ...,
         [10.5456],
         [10.6167],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9624, 0.9683, 0.9757,  ..., 0.9739, 0.9672, 0.9792],
        [0.9390, 0.9351, 0.9317,  ..., 0.9318, 0.9361, 0.9296],
        [0.9363, 0.9315, 0.9271,  ..., 0.9274, 0.9327, 0.9246],
        ...,
        [0.9331, 0.9271, 0.9217,  ..., 0.9221, 0.9286, 0.9186],
        [0.9415, 0.9385, 0.9361,  ..., 0.9360, 0.9393, 0.9345],
        [0.9471, 0.9464, 0.9463,  ..., 0.9458, 0.9468, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8978],
         [12.2063],
         [11.8141],
         ...,
         [11.9258],
         [12.2157],
         [12.0182]],
        [[10.5744],
         [10.5357],
         [10.3309],
         ...,
         [10.2725],
         [10.5440],
         [10.4311]],
        [[10.3175],
         [10.3455],
         [10.1607],
         ...,
         [10.0845],
         [10.3536],
         [10.2498]],
        ...,
        [[10.0074],
         [10.1142],
         [ 9.9534],
         ...,
         [ 9.8559],
         [10.1221],
         [10.0292]],
        [[10.8172],
         [10.7144],
         [10.4905],
         ...,
         [10.4492],
         [10.7228],
         [10.6013]],
        [[11.3728],
         [11.1196],
         [10.8515],
         ...,
         [10.8500],
         [11.1283],
         [10.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0333, 1.0185, 1.0101,  ..., 1.0125, 1.0187, 1.0145],
        [0.9835, 0.9827, 0.9783,  ..., 0.9770, 0.9829, 0.9804],
        [0.9780, 0.9786, 0.9746,  ..., 0.9730, 0.9788, 0.9765],
        ...,
        [0.9713, 0.9736, 0.9702,  ..., 0.9681, 0.9738, 0.9718],
        [0.9887, 0.9865, 0.9817,  ..., 0.9808, 0.9867, 0.9841],
        [1.0006, 0.9952, 0.9894,  ..., 0.9894, 0.9954, 0.9924]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6821],
         [19.9727],
         [19.1062],
         ...,
         [17.3038],
         [20.1967],
         [15.2525]],
        [[18.6349],
         [17.0154],
         [17.3357],
         ...,
         [16.9280],
         [17.1880],
         [14.2890]],
        [[18.2888],
         [16.6812],
         [17.1283],
         ...,
         [16.8821],
         [16.8482],
         [14.1740]],
        ...,
        [[17.8682],
         [16.2755],
         [16.8743],
         ...,
         [16.8252],
         [16.4358],
         [14.0326]],
        [[18.9603],
         [17.3299],
         [17.5294],
         ...,
         [16.9705],
         [17.5078],
         [14.3959]],
        [[19.6985],
         [18.0446],
         [17.9646],
         ...,
         [17.0648],
         [18.2348],
         [14.6348]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1014, 1.0736, 1.0595,  ..., 1.0302, 1.0772, 0.9968],
        [1.0518, 1.0255, 1.0307,  ..., 1.0241, 1.0283, 0.9812],
        [1.0462, 1.0201, 1.0273,  ..., 1.0233, 1.0228, 0.9793],
        ...,
        [1.0394, 1.0135, 1.0232,  ..., 1.0224, 1.0161, 0.9770],
        [1.0571, 1.0306, 1.0339,  ..., 1.0248, 1.0335, 0.9829],
        [1.0691, 1.0422, 1.0409,  ..., 1.0263, 1.0453, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7937],
         [12.2503],
         [12.8040],
         ...,
         [12.6697],
         [12.1669],
         [13.0734]],
        [[10.0346],
         [ 9.7359],
         [ 9.4805],
         ...,
         [ 9.4835],
         [ 9.8134],
         [ 9.3203]],
        [[ 9.8359],
         [ 9.4629],
         [ 9.1343],
         ...,
         [ 9.1495],
         [ 9.5557],
         [ 8.9379]],
        ...,
        [[ 9.5948],
         [ 9.1347],
         [ 8.7221],
         ...,
         [ 8.7512],
         [ 9.2453],
         [ 8.4851]],
        [[10.2215],
         [ 9.9949],
         [ 9.8118],
         ...,
         [ 9.8027],
         [10.0575],
         [ 9.6878]],
        [[10.6465],
         [10.5911],
         [10.5843],
         ...,
         [10.5456],
         [10.6178],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9684, 0.9757,  ..., 0.9739, 0.9673, 0.9792],
        [0.9391, 0.9351, 0.9317,  ..., 0.9318, 0.9361, 0.9296],
        [0.9364, 0.9315, 0.9272,  ..., 0.9274, 0.9327, 0.9246],
        ...,
        [0.9333, 0.9272, 0.9217,  ..., 0.9221, 0.9286, 0.9186],
        [0.9415, 0.9385, 0.9361,  ..., 0.9360, 0.9394, 0.9345],
        [0.9472, 0.9464, 0.9463,  ..., 0.9458, 0.9468, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9106],
         [12.2064],
         [11.8142],
         ...,
         [11.9275],
         [12.2158],
         [12.0179]],
        [[10.5813],
         [10.5358],
         [10.3307],
         ...,
         [10.2719],
         [10.5440],
         [10.4310]],
        [[10.3239],
         [10.3456],
         [10.1605],
         ...,
         [10.0836],
         [10.3536],
         [10.2498]],
        ...,
        [[10.0131],
         [10.1143],
         [ 9.9532],
         ...,
         [ 9.8548],
         [10.1221],
         [10.0292]],
        [[10.8247],
         [10.7145],
         [10.4903],
         ...,
         [10.4488],
         [10.7228],
         [10.6012]],
        [[11.3817],
         [11.1197],
         [10.8514],
         ...,
         [10.8501],
         [11.1283],
         [10.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0334, 1.0183, 1.0099,  ..., 1.0124, 1.0185, 1.0143],
        [0.9835, 0.9825, 0.9781,  ..., 0.9769, 0.9827, 0.9803],
        [0.9780, 0.9784, 0.9745,  ..., 0.9728, 0.9786, 0.9764],
        ...,
        [0.9713, 0.9735, 0.9700,  ..., 0.9679, 0.9736, 0.9716],
        [0.9887, 0.9863, 0.9815,  ..., 0.9806, 0.9865, 0.9839],
        [1.0006, 0.9950, 0.9893,  ..., 0.9893, 0.9952, 0.9922]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6790],
         [19.9755],
         [19.1142],
         ...,
         [17.3070],
         [20.1990],
         [15.2515]],
        [[18.6334],
         [17.0175],
         [17.3415],
         ...,
         [16.9318],
         [17.1898],
         [14.2877]],
        [[18.2874],
         [16.6833],
         [17.1339],
         ...,
         [16.8859],
         [16.8500],
         [14.1728]],
        ...,
        [[17.8669],
         [16.2775],
         [16.8796],
         ...,
         [16.8291],
         [16.4375],
         [14.0313]],
        [[18.9585],
         [17.3321],
         [17.5355],
         ...,
         [16.9742],
         [17.5097],
         [14.3947]],
        [[19.6964],
         [18.0470],
         [17.9712],
         ...,
         [17.0683],
         [18.2367],
         [14.6337]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1014, 1.0737, 1.0596,  ..., 1.0302, 1.0773, 0.9968],
        [1.0518, 1.0255, 1.0308,  ..., 1.0241, 1.0283, 0.9811],
        [1.0462, 1.0201, 1.0274,  ..., 1.0234, 1.0228, 0.9793],
        ...,
        [1.0394, 1.0135, 1.0233,  ..., 1.0225, 1.0161, 0.9770],
        [1.0571, 1.0307, 1.0340,  ..., 1.0248, 1.0335, 0.9829],
        [1.0691, 1.0423, 1.0411,  ..., 1.0264, 1.0454, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7924],
         [12.2502],
         [12.8040],
         ...,
         [12.6694],
         [12.1667],
         [13.0731]],
        [[10.0359],
         [ 9.7363],
         [ 9.4808],
         ...,
         [ 9.4837],
         [ 9.8139],
         [ 9.3204]],
        [[ 9.8375],
         [ 9.4634],
         [ 9.1346],
         ...,
         [ 9.1497],
         [ 9.5563],
         [ 8.9380]],
        ...,
        [[ 9.5968],
         [ 9.1352],
         [ 8.7224],
         ...,
         [ 8.7515],
         [ 9.2459],
         [ 8.4852]],
        [[10.2226],
         [ 9.9952],
         [ 9.8120],
         ...,
         [ 9.8028],
         [10.0579],
         [ 9.6878]],
        [[10.6470],
         [10.5913],
         [10.5845],
         ...,
         [10.5456],
         [10.6181],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9623, 0.9684, 0.9757,  ..., 0.9739, 0.9673, 0.9792],
        [0.9391, 0.9351, 0.9318,  ..., 0.9318, 0.9362, 0.9296],
        [0.9365, 0.9315, 0.9272,  ..., 0.9274, 0.9328, 0.9246],
        ...,
        [0.9333, 0.9272, 0.9217,  ..., 0.9221, 0.9287, 0.9186],
        [0.9416, 0.9386, 0.9361,  ..., 0.9360, 0.9394, 0.9345],
        [0.9472, 0.9464, 0.9463,  ..., 0.9458, 0.9468, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9139],
         [12.2064],
         [11.8142],
         ...,
         [11.9280],
         [12.2158],
         [12.0179]],
        [[10.5831],
         [10.5358],
         [10.3306],
         ...,
         [10.2718],
         [10.5440],
         [10.4310]],
        [[10.3255],
         [10.3456],
         [10.1605],
         ...,
         [10.0834],
         [10.3536],
         [10.2497]],
        ...,
        [[10.0145],
         [10.1143],
         [ 9.9531],
         ...,
         [ 9.8545],
         [10.1221],
         [10.0291]],
        [[10.8266],
         [10.7145],
         [10.4903],
         ...,
         [10.4488],
         [10.7228],
         [10.6012]],
        [[11.3840],
         [11.1197],
         [10.8514],
         ...,
         [10.8502],
         [11.1283],
         [10.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0335, 1.0183, 1.0099,  ..., 1.0123, 1.0185, 1.0142],
        [0.9835, 0.9825, 0.9781,  ..., 0.9768, 0.9826, 0.9802],
        [0.9780, 0.9784, 0.9744,  ..., 0.9728, 0.9786, 0.9763],
        ...,
        [0.9713, 0.9734, 0.9700,  ..., 0.9679, 0.9736, 0.9716],
        [0.9887, 0.9863, 0.9815,  ..., 0.9806, 0.9865, 0.9839],
        [1.0007, 0.9950, 0.9892,  ..., 0.9892, 0.9952, 0.9921]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.6782],
         [19.9763],
         [19.1162],
         ...,
         [17.3078],
         [20.1996],
         [15.2513]],
        [[18.6330],
         [17.0181],
         [17.3430],
         ...,
         [16.9327],
         [17.1903],
         [14.2874]],
        [[18.2871],
         [16.6838],
         [17.1353],
         ...,
         [16.8869],
         [16.8504],
         [14.1724]],
        ...,
        [[17.8666],
         [16.2780],
         [16.8809],
         ...,
         [16.8301],
         [16.4379],
         [14.0310]],
        [[18.9581],
         [17.3327],
         [17.5370],
         ...,
         [16.9752],
         [17.5101],
         [14.3944]],
        [[19.6958],
         [18.0476],
         [17.9729],
         ...,
         [17.0692],
         [18.2372],
         [14.6334]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1013, 1.0737, 1.0597,  ..., 1.0303, 1.0773, 0.9968],
        [1.0518, 1.0256, 1.0308,  ..., 1.0242, 1.0284, 0.9811],
        [1.0462, 1.0201, 1.0275,  ..., 1.0234, 1.0228, 0.9793],
        ...,
        [1.0394, 1.0135, 1.0233,  ..., 1.0225, 1.0161, 0.9770],
        [1.0571, 1.0307, 1.0340,  ..., 1.0249, 1.0336, 0.9829],
        [1.0691, 1.0423, 1.0411,  ..., 1.0264, 1.0454, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5809],
         [12.3931],
         [12.8787],
         ...,
         [12.8516],
         [12.3234],
         [13.1678]],
        [[ 9.5242],
         [ 9.6170],
         [ 9.3949],
         ...,
         [ 9.4059],
         [ 9.6541],
         [ 9.2864]],
        [[ 9.2016],
         [ 9.3198],
         [ 9.0352],
         ...,
         [ 9.0494],
         [ 9.3667],
         [ 8.8935]],
        ...,
        [[ 8.8164],
         [ 8.9636],
         [ 8.6078],
         ...,
         [ 8.6256],
         [ 9.0219],
         [ 8.4289]],
        [[ 9.8320],
         [ 9.8998],
         [ 9.7398],
         ...,
         [ 9.7475],
         [ 9.9272],
         [ 9.6646]],
        [[10.5470],
         [10.5537],
         [10.5461],
         ...,
         [10.5458],
         [10.5576],
         [10.5543]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9716, 0.9691, 0.9755,  ..., 0.9751, 0.9682, 0.9793],
        [0.9312, 0.9324, 0.9295,  ..., 0.9296, 0.9329, 0.9280],
        [0.9269, 0.9285, 0.9247,  ..., 0.9249, 0.9291, 0.9228],
        ...,
        [0.9218, 0.9238, 0.9191,  ..., 0.9193, 0.9245, 0.9167],
        [0.9352, 0.9361, 0.9340,  ..., 0.9341, 0.9365, 0.9330],
        [0.9447, 0.9448, 0.9447,  ..., 0.9447, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9347],
         [12.1943],
         [11.8197],
         ...,
         [11.8236],
         [12.2088],
         [12.0267]],
        [[10.2394],
         [10.5259],
         [10.3548],
         ...,
         [10.3200],
         [10.5379],
         [10.4344]],
        [[10.0470],
         [10.3359],
         [10.1866],
         ...,
         [10.1477],
         [10.3477],
         [10.2525]],
        ...,
        [[ 9.8132],
         [10.1048],
         [ 9.9816],
         ...,
         [ 9.9378],
         [10.1163],
         [10.0312]],
        [[10.4202],
         [10.7043],
         [10.5126],
         ...,
         [10.4817],
         [10.7167],
         [10.6051]],
        [[10.8307],
         [11.1090],
         [10.8693],
         ...,
         [10.8474],
         [11.1219],
         [10.9918]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0266, 1.0322, 1.0242,  ..., 1.0242, 1.0325, 1.0286],
        [0.9903, 0.9964, 0.9927,  ..., 0.9920, 0.9967, 0.9945],
        [0.9861, 0.9923, 0.9891,  ..., 0.9883, 0.9926, 0.9906],
        ...,
        [0.9811, 0.9874, 0.9847,  ..., 0.9838, 0.9876, 0.9858],
        [0.9941, 1.0002, 0.9961,  ..., 0.9955, 1.0005, 0.9981],
        [1.0030, 1.0089, 1.0038,  ..., 1.0033, 1.0092, 1.0064]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.2196],
         [19.6059],
         [18.2125],
         ...,
         [16.8553],
         [19.8612],
         [15.3135]],
        [[19.0298],
         [16.7557],
         [16.6999],
         ...,
         [16.3829],
         [16.9346],
         [14.3921]],
        [[18.6683],
         [16.4330],
         [16.5217],
         ...,
         [16.3253],
         [16.6037],
         [14.2820]],
        ...,
        [[18.2290],
         [16.0411],
         [16.3030],
         ...,
         [16.2542],
         [16.2020],
         [14.1465]],
        [[19.3699],
         [17.0592],
         [16.8662],
         ...,
         [16.4362],
         [17.2460],
         [14.4945]],
        [[20.1418],
         [17.7486],
         [17.2391],
         ...,
         [16.5545],
         [17.9534],
         [14.7232]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1065, 1.0640, 1.0414,  ..., 1.0193, 1.0682, 0.9942],
        [1.0547, 1.0177, 1.0168,  ..., 1.0116, 1.0206, 0.9792],
        [1.0488, 1.0124, 1.0139,  ..., 1.0107, 1.0152, 0.9774],
        ...,
        [1.0416, 1.0060, 1.0103,  ..., 1.0095, 1.0087, 0.9752],
        [1.0602, 1.0226, 1.0195,  ..., 1.0125, 1.0256, 0.9809],
        [1.0727, 1.0338, 1.0255,  ..., 1.0144, 1.0371, 0.9846]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0101],
         [12.2934],
         [12.8264],
         ...,
         [12.7254],
         [12.2131],
         [13.1026]],
        [[ 9.8652],
         [ 9.6984],
         [ 9.4536],
         ...,
         [ 9.4590],
         [ 9.7631],
         [ 9.3097]],
        [[ 9.6278],
         [ 9.4179],
         [ 9.1033],
         ...,
         [ 9.1179],
         [ 9.4962],
         [ 8.9240]],
        ...,
        [[ 9.3412],
         [ 9.0810],
         [ 8.6863],
         ...,
         [ 8.7117],
         [ 9.1751],
         [ 8.4675]],
        [[10.0895],
         [ 9.9648],
         [ 9.7891],
         ...,
         [ 9.7851],
         [10.0161],
         [ 9.6805]],
        [[10.6027],
         [10.5788],
         [10.5721],
         ...,
         [10.5452],
         [10.5980],
         [10.5518]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9648, 0.9686, 0.9756,  ..., 0.9743, 0.9675, 0.9793],
        [0.9365, 0.9343, 0.9310,  ..., 0.9311, 0.9351, 0.9291],
        [0.9333, 0.9306, 0.9264,  ..., 0.9266, 0.9316, 0.9240],
        ...,
        [0.9295, 0.9261, 0.9209,  ..., 0.9212, 0.9274, 0.9180],
        [0.9394, 0.9378, 0.9355,  ..., 0.9354, 0.9385, 0.9340],
        [0.9462, 0.9459, 0.9458,  ..., 0.9455, 0.9462, 0.9455]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5183],
         [12.2026],
         [11.8116],
         ...,
         [11.8834],
         [12.2136],
         [12.0207]],
        [[10.4109],
         [10.5326],
         [10.3386],
         ...,
         [10.2881],
         [10.5421],
         [10.4320]],
        [[10.1760],
         [10.3425],
         [10.1696],
         ...,
         [10.1062],
         [10.3517],
         [10.2506]],
        ...,
        [[ 9.8919],
         [10.1113],
         [ 9.9635],
         ...,
         [ 9.8848],
         [10.1203],
         [10.0298]],
        [[10.6326],
         [10.7113],
         [10.4972],
         ...,
         [10.4590],
         [10.7209],
         [10.6024]],
        [[11.1385],
         [11.1163],
         [10.8558],
         ...,
         [10.8462],
         [11.1263],
         [10.9883]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0309, 1.0241, 1.0157,  ..., 1.0173, 1.0244, 1.0202],
        [0.9857, 0.9883, 0.9841,  ..., 0.9831, 0.9885, 0.9861],
        [0.9807, 0.9842, 0.9805,  ..., 0.9792, 0.9844, 0.9823],
        ...,
        [0.9746, 0.9793, 0.9761,  ..., 0.9744, 0.9795, 0.9775],
        [0.9904, 0.9921, 0.9875,  ..., 0.9867, 0.9923, 0.9898],
        [1.0013, 1.0008, 0.9952,  ..., 0.9950, 1.0010, 0.9981]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8472],
         [19.8626],
         [18.8284],
         ...,
         [17.1593],
         [20.0959],
         [15.2704]],
        [[18.7558],
         [16.9346],
         [17.1365],
         ...,
         [16.7579],
         [17.1091],
         [14.3201]],
        [[18.4049],
         [16.6036],
         [16.9379],
         ...,
         [16.7089],
         [16.7717],
         [14.2067]],
        ...,
        [[17.9785],
         [16.2017],
         [16.6946],
         ...,
         [16.6482],
         [16.3621],
         [14.0671]],
        [[19.0858],
         [17.2461],
         [17.3219],
         ...,
         [16.8033],
         [17.4266],
         [14.4257]],
        [[19.8344],
         [17.9539],
         [17.7381],
         ...,
         [16.9039],
         [18.1483],
         [14.6613]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1038, 1.0715, 1.0547,  ..., 1.0276, 1.0753, 0.9968],
        [1.0535, 1.0239, 1.0272,  ..., 1.0210, 1.0268, 0.9814],
        [1.0478, 1.0185, 1.0240,  ..., 1.0202, 1.0213, 0.9795],
        ...,
        [1.0409, 1.0120, 1.0200,  ..., 1.0193, 1.0146, 0.9773],
        [1.0589, 1.0290, 1.0302,  ..., 1.0218, 1.0319, 0.9831],
        [1.0711, 1.0405, 1.0370,  ..., 1.0234, 1.0437, 0.9869]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8331],
         [12.2585],
         [12.8083],
         ...,
         [12.6803],
         [12.1756],
         [13.0789]],
        [[10.0016],
         [ 9.7288],
         [ 9.4754],
         ...,
         [ 9.4788],
         [ 9.8039],
         [ 9.3182]],
        [[ 9.7956],
         [ 9.4544],
         [ 9.1284],
         ...,
         [ 9.1434],
         [ 9.5444],
         [ 8.9353]],
        ...,
        [[ 9.5458],
         [ 9.1245],
         [ 8.7153],
         ...,
         [ 8.7436],
         [ 9.2319],
         [ 8.4818]],
        [[10.1957],
         [ 9.9892],
         [ 9.8075],
         ...,
         [ 9.7993],
         [10.0497],
         [ 9.6864]],
        [[10.6374],
         [10.5888],
         [10.5820],
         ...,
         [10.5455],
         [10.6140],
         [10.5510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9628, 0.9684, 0.9757,  ..., 0.9740, 0.9673, 0.9792],
        [0.9386, 0.9350, 0.9316,  ..., 0.9317, 0.9360, 0.9295],
        [0.9358, 0.9313, 0.9270,  ..., 0.9272, 0.9325, 0.9245],
        ...,
        [0.9325, 0.9270, 0.9216,  ..., 0.9219, 0.9284, 0.9185],
        [0.9411, 0.9384, 0.9360,  ..., 0.9359, 0.9392, 0.9344],
        [0.9470, 0.9463, 0.9462,  ..., 0.9458, 0.9467, 0.9458]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8332],
         [12.2057],
         [11.8134],
         ...,
         [11.9184],
         [12.2153],
         [12.0184]],
        [[10.5437],
         [10.5352],
         [10.3322],
         ...,
         [10.2751],
         [10.5436],
         [10.4312]],
        [[10.2903],
         [10.3450],
         [10.1623],
         ...,
         [10.0881],
         [10.3533],
         [10.2499]],
        ...,
        [[ 9.9842],
         [10.1137],
         [ 9.9553],
         ...,
         [ 9.8607],
         [10.1218],
         [10.0293]],
        [[10.7832],
         [10.7139],
         [10.4917],
         ...,
         [10.4508],
         [10.7225],
         [10.6014]],
        [[11.3310],
         [11.1190],
         [10.8522],
         ...,
         [10.8492],
         [11.1279],
         [10.9870]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0329, 1.0194, 1.0110,  ..., 1.0133, 1.0196, 1.0154],
        [0.9838, 0.9836, 0.9793,  ..., 0.9780, 0.9838, 0.9814],
        [0.9784, 0.9795, 0.9756,  ..., 0.9740, 0.9797, 0.9775],
        ...,
        [0.9718, 0.9746, 0.9712,  ..., 0.9692, 0.9748, 0.9728],
        [0.9889, 0.9875, 0.9827,  ..., 0.9818, 0.9876, 0.9850],
        [1.0007, 0.9961, 0.9904,  ..., 0.9904, 0.9963, 0.9933]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7113],
         [19.9541],
         [19.0593],
         ...,
         [17.2780],
         [20.1794],
         [15.2550]],
        [[18.6570],
         [17.0016],
         [17.3021],
         ...,
         [16.8982],
         [17.1742],
         [14.2938]],
        [[18.3101],
         [16.6679],
         [17.0962],
         ...,
         [16.8518],
         [16.8348],
         [14.1792]],
        ...,
        [[17.8885],
         [16.2628],
         [16.8440],
         ...,
         [16.7944],
         [16.4229],
         [14.0381]],
        [[18.9831],
         [17.3156],
         [17.4944],
         ...,
         [16.9412],
         [17.4937],
         [14.4006]],
        [[19.7230],
         [18.0292],
         [17.9264],
         ...,
         [17.0364],
         [18.2197],
         [14.6388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1018, 1.0732, 1.0587,  ..., 1.0297, 1.0769, 0.9968],
        [1.0521, 1.0252, 1.0301,  ..., 1.0235, 1.0280, 0.9811],
        [1.0465, 1.0198, 1.0267,  ..., 1.0228, 1.0225, 0.9793],
        ...,
        [1.0396, 1.0132, 1.0226,  ..., 1.0218, 1.0158, 0.9770],
        [1.0574, 1.0303, 1.0332,  ..., 1.0242, 1.0332, 0.9829],
        [1.0695, 1.0419, 1.0402,  ..., 1.0258, 1.0450, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9481],
         [12.2815],
         [12.8202],
         ...,
         [12.7100],
         [12.2002],
         [13.0945]],
        [[ 9.9109],
         [ 9.7087],
         [ 9.4610],
         ...,
         [ 9.4657],
         [ 9.7769],
         [ 9.3126]],
        [[ 9.6842],
         [ 9.4303],
         [ 9.1118],
         ...,
         [ 9.1266],
         [ 9.5125],
         [ 8.9278]],
        ...,
        [[ 9.4100],
         [ 9.0958],
         [ 8.6962],
         ...,
         [ 8.7225],
         [ 9.1944],
         [ 8.4723]],
        [[10.1249],
         [ 9.9731],
         [ 9.7953],
         ...,
         [ 9.7899],
         [10.0275],
         [ 9.6825]],
        [[10.6137],
         [10.5822],
         [10.5754],
         ...,
         [10.5453],
         [10.6034],
         [10.5515]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9641, 0.9685, 0.9756,  ..., 0.9742, 0.9674, 0.9792],
        [0.9372, 0.9345, 0.9312,  ..., 0.9313, 0.9354, 0.9293],
        [0.9342, 0.9308, 0.9266,  ..., 0.9268, 0.9319, 0.9242],
        ...,
        [0.9306, 0.9264, 0.9211,  ..., 0.9215, 0.9277, 0.9182],
        [0.9400, 0.9380, 0.9356,  ..., 0.9356, 0.9387, 0.9342],
        [0.9465, 0.9460, 0.9460,  ..., 0.9456, 0.9463, 0.9456]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6221],
         [12.2037],
         [11.8119],
         ...,
         [11.8945],
         [12.2142],
         [12.0199]],
        [[10.4511],
         [10.5335],
         [10.3365],
         ...,
         [10.2838],
         [10.5426],
         [10.4318]],
        [[10.2097],
         [10.3433],
         [10.1672],
         ...,
         [10.1002],
         [10.3523],
         [10.2504]],
        ...,
        [[ 9.9179],
         [10.1121],
         [ 9.9608],
         ...,
         [ 9.8769],
         [10.1208],
         [10.0296]],
        [[10.6790],
         [10.7122],
         [10.4953],
         ...,
         [10.4562],
         [10.7214],
         [10.6021]],
        [[11.1996],
         [11.1172],
         [10.8545],
         ...,
         [10.8470],
         [11.1268],
         [10.9878]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0315, 1.0225, 1.0141,  ..., 1.0159, 1.0228, 1.0186],
        [0.9850, 0.9867, 0.9825,  ..., 0.9814, 0.9869, 0.9845],
        [0.9798, 0.9826, 0.9789,  ..., 0.9774, 0.9828, 0.9807],
        ...,
        [0.9735, 0.9777, 0.9744,  ..., 0.9726, 0.9779, 0.9759],
        [0.9898, 0.9906, 0.9859,  ..., 0.9851, 0.9908, 0.9882],
        [1.0010, 0.9992, 0.9936,  ..., 0.9934, 0.9994, 0.9965]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8010],
         [19.8939],
         [18.9066],
         ...,
         [17.1991],
         [20.1244],
         [15.2651]],
        [[18.7221],
         [16.9573],
         [17.1925],
         ...,
         [16.8055],
         [17.1312],
         [14.3112]],
        [[18.3726],
         [16.6254],
         [16.9914],
         ...,
         [16.7574],
         [16.7931],
         [14.1973]],
        ...,
        [[17.9478],
         [16.2224],
         [16.7451],
         ...,
         [16.6979],
         [16.3827],
         [14.0572]],
        [[19.0507],
         [17.2697],
         [17.3802],
         ...,
         [16.8500],
         [17.4494],
         [14.4171]],
        [[19.7964],
         [17.9795],
         [17.8019],
         ...,
         [16.9487],
         [18.1726],
         [14.6537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1031, 1.0721, 1.0560,  ..., 1.0283, 1.0759, 0.9968],
        [1.0530, 1.0243, 1.0282,  ..., 1.0219, 1.0272, 0.9813],
        [1.0474, 1.0189, 1.0249,  ..., 1.0211, 1.0217, 0.9795],
        ...,
        [1.0405, 1.0124, 1.0209,  ..., 1.0201, 1.0150, 0.9772],
        [1.0584, 1.0294, 1.0312,  ..., 1.0226, 1.0323, 0.9830],
        [1.0705, 1.0410, 1.0381,  ..., 1.0242, 1.0441, 0.9869]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8540],
         [12.2628],
         [12.8105],
         ...,
         [12.6858],
         [12.1801],
         [13.0818]],
        [[ 9.9845],
         [ 9.7251],
         [ 9.4727],
         ...,
         [ 9.4763],
         [ 9.7988],
         [ 9.3172]],
        [[ 9.7746],
         [ 9.4499],
         [ 9.1253],
         ...,
         [ 9.1403],
         [ 9.5385],
         [ 8.9339]],
        ...,
        [[ 9.5202],
         [ 9.1192],
         [ 8.7118],
         ...,
         [ 8.7397],
         [ 9.2249],
         [ 8.4800]],
        [[10.1823],
         [ 9.9862],
         [ 9.8052],
         ...,
         [ 9.7976],
         [10.0455],
         [ 9.6856]],
        [[10.6327],
         [10.5875],
         [10.5808],
         ...,
         [10.5454],
         [10.6120],
         [10.5511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9630, 0.9684, 0.9757,  ..., 0.9740, 0.9673, 0.9792],
        [0.9383, 0.9349, 0.9315,  ..., 0.9316, 0.9359, 0.9295],
        [0.9355, 0.9312, 0.9270,  ..., 0.9271, 0.9324, 0.9244],
        ...,
        [0.9322, 0.9269, 0.9215,  ..., 0.9219, 0.9283, 0.9184],
        [0.9409, 0.9383, 0.9359,  ..., 0.9358, 0.9391, 0.9344],
        [0.9469, 0.9463, 0.9462,  ..., 0.9457, 0.9466, 0.9458]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7930],
         [12.2053],
         [11.8130],
         ...,
         [11.9137],
         [12.2151],
         [12.0187]],
        [[10.5249],
         [10.5349],
         [10.3330],
         ...,
         [10.2767],
         [10.5434],
         [10.4313]],
        [[10.2737],
         [10.3447],
         [10.1632],
         ...,
         [10.0904],
         [10.3531],
         [10.2500]],
        ...,
        [[ 9.9702],
         [10.1134],
         [ 9.9563],
         ...,
         [ 9.8638],
         [10.1216],
         [10.0293]],
        [[10.7623],
         [10.7136],
         [10.4923],
         ...,
         [10.4518],
         [10.7223],
         [10.6016]],
        [[11.3052],
         [11.1187],
         [10.8526],
         ...,
         [10.8487],
         [11.1277],
         [10.9871]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0326, 1.0200, 1.0116,  ..., 1.0138, 1.0202, 1.0160],
        [0.9840, 0.9842, 0.9799,  ..., 0.9787, 0.9844, 0.9820],
        [0.9786, 0.9801, 0.9762,  ..., 0.9747, 0.9803, 0.9781],
        ...,
        [0.9721, 0.9752, 0.9718,  ..., 0.9698, 0.9753, 0.9734],
        [0.9891, 0.9880, 0.9833,  ..., 0.9824, 0.9882, 0.9856],
        [1.0007, 0.9967, 0.9910,  ..., 0.9909, 0.9969, 0.9939]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7281],
         [19.9429],
         [19.0307],
         ...,
         [17.2631],
         [20.1692],
         [15.2569]],
        [[18.6691],
         [16.9933],
         [17.2815],
         ...,
         [16.8809],
         [17.1662],
         [14.2971]],
        [[18.3217],
         [16.6599],
         [17.0765],
         ...,
         [16.8342],
         [16.8270],
         [14.1825]],
        ...,
        [[17.8995],
         [16.2552],
         [16.8254],
         ...,
         [16.7764],
         [16.4153],
         [14.0417]],
        [[18.9957],
         [17.3070],
         [17.4730],
         ...,
         [16.9241],
         [17.4854],
         [14.4036]],
        [[19.7367],
         [18.0199],
         [17.9031],
         ...,
         [17.0200],
         [18.2109],
         [14.6416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1020, 1.0730, 1.0582,  ..., 1.0294, 1.0767, 0.9968],
        [1.0523, 1.0250, 1.0297,  ..., 1.0232, 1.0278, 0.9812],
        [1.0466, 1.0196, 1.0264,  ..., 1.0224, 1.0223, 0.9793],
        ...,
        [1.0398, 1.0130, 1.0223,  ..., 1.0215, 1.0156, 0.9770],
        [1.0576, 1.0301, 1.0328,  ..., 1.0239, 1.0330, 0.9829],
        [1.0696, 1.0417, 1.0398,  ..., 1.0255, 1.0448, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8373],
         [12.2594],
         [12.8088],
         ...,
         [12.6814],
         [12.1765],
         [13.0795]],
        [[ 9.9982],
         [ 9.7281],
         [ 9.4749],
         ...,
         [ 9.4783],
         [ 9.8029],
         [ 9.3180]],
        [[ 9.7914],
         [ 9.4535],
         [ 9.1278],
         ...,
         [ 9.1428],
         [ 9.5432],
         [ 8.9350]],
        ...,
        [[ 9.5407],
         [ 9.1235],
         [ 8.7146],
         ...,
         [ 8.7428],
         [ 9.2305],
         [ 8.4814]],
        [[10.1930],
         [ 9.9886],
         [ 9.8070],
         ...,
         [ 9.7990],
         [10.0488],
         [ 9.6862]],
        [[10.6364],
         [10.5885],
         [10.5818],
         ...,
         [10.5455],
         [10.6136],
         [10.5510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9628, 0.9684, 0.9757,  ..., 0.9740, 0.9673, 0.9792],
        [0.9385, 0.9349, 0.9316,  ..., 0.9316, 0.9359, 0.9295],
        [0.9358, 0.9313, 0.9270,  ..., 0.9272, 0.9325, 0.9245],
        ...,
        [0.9325, 0.9270, 0.9216,  ..., 0.9219, 0.9284, 0.9185],
        [0.9411, 0.9384, 0.9360,  ..., 0.9359, 0.9392, 0.9344],
        [0.9470, 0.9463, 0.9462,  ..., 0.9457, 0.9466, 0.9458]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8252],
         [12.2056],
         [11.8133],
         ...,
         [11.9174],
         [12.2153],
         [12.0185]],
        [[10.5399],
         [10.5351],
         [10.3324],
         ...,
         [10.2754],
         [10.5436],
         [10.4312]],
        [[10.2869],
         [10.3449],
         [10.1625],
         ...,
         [10.0885],
         [10.3532],
         [10.2499]],
        ...,
        [[ 9.9814],
         [10.1136],
         [ 9.9555],
         ...,
         [ 9.8613],
         [10.1217],
         [10.0293]],
        [[10.7789],
         [10.7138],
         [10.4918],
         ...,
         [10.4510],
         [10.7224],
         [10.6015]],
        [[11.3258],
         [11.1190],
         [10.8522],
         ...,
         [10.8491],
         [11.1279],
         [10.9870]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0328, 1.0196, 1.0111,  ..., 1.0134, 1.0198, 1.0155],
        [0.9838, 0.9837, 0.9794,  ..., 0.9782, 0.9839, 0.9815],
        [0.9784, 0.9797, 0.9757,  ..., 0.9742, 0.9798, 0.9776],
        ...,
        [0.9719, 0.9747, 0.9713,  ..., 0.9693, 0.9749, 0.9729],
        [0.9890, 0.9876, 0.9828,  ..., 0.9819, 0.9878, 0.9852],
        [1.0007, 0.9963, 0.9905,  ..., 0.9905, 0.9964, 0.9934]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7147],
         [19.9519],
         [19.0537],
         ...,
         [17.2750],
         [20.1773],
         [15.2554]],
        [[18.6594],
         [17.0000],
         [17.2980],
         ...,
         [16.8948],
         [17.1726],
         [14.2945]],
        [[18.3124],
         [16.6663],
         [17.0923],
         ...,
         [16.8483],
         [16.8333],
         [14.1798]],
        ...,
        [[17.8907],
         [16.2613],
         [16.8403],
         ...,
         [16.7908],
         [16.4214],
         [14.0388]],
        [[18.9856],
         [17.3139],
         [17.4902],
         ...,
         [16.9378],
         [17.4920],
         [14.4012]],
        [[19.7257],
         [18.0273],
         [17.9218],
         ...,
         [17.0332],
         [18.2180],
         [14.6394]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1018, 1.0732, 1.0586,  ..., 1.0296, 1.0768, 0.9968],
        [1.0521, 1.0252, 1.0300,  ..., 1.0234, 1.0280, 0.9812],
        [1.0465, 1.0197, 1.0267,  ..., 1.0227, 1.0224, 0.9793],
        ...,
        [1.0396, 1.0131, 1.0226,  ..., 1.0218, 1.0157, 0.9770],
        [1.0575, 1.0303, 1.0331,  ..., 1.0241, 1.0332, 0.9829],
        [1.0695, 1.0419, 1.0401,  ..., 1.0257, 1.0450, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8331],
         [12.2585],
         [12.8083],
         ...,
         [12.6803],
         [12.1756],
         [13.0789]],
        [[10.0016],
         [ 9.7288],
         [ 9.4754],
         ...,
         [ 9.4788],
         [ 9.8039],
         [ 9.3182]],
        [[ 9.7956],
         [ 9.4544],
         [ 9.1284],
         ...,
         [ 9.1434],
         [ 9.5444],
         [ 8.9353]],
        ...,
        [[ 9.5458],
         [ 9.1245],
         [ 8.7153],
         ...,
         [ 8.7436],
         [ 9.2319],
         [ 8.4818]],
        [[10.1957],
         [ 9.9892],
         [ 9.8075],
         ...,
         [ 9.7993],
         [10.0497],
         [ 9.6864]],
        [[10.6374],
         [10.5888],
         [10.5820],
         ...,
         [10.5455],
         [10.6140],
         [10.5510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9628, 0.9684, 0.9757,  ..., 0.9740, 0.9673, 0.9792],
        [0.9386, 0.9350, 0.9316,  ..., 0.9317, 0.9360, 0.9295],
        [0.9358, 0.9313, 0.9270,  ..., 0.9272, 0.9325, 0.9245],
        ...,
        [0.9325, 0.9270, 0.9216,  ..., 0.9219, 0.9284, 0.9185],
        [0.9411, 0.9384, 0.9360,  ..., 0.9359, 0.9392, 0.9344],
        [0.9470, 0.9463, 0.9462,  ..., 0.9458, 0.9467, 0.9458]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.8332],
         [12.2057],
         [11.8134],
         ...,
         [11.9184],
         [12.2153],
         [12.0184]],
        [[10.5437],
         [10.5352],
         [10.3322],
         ...,
         [10.2751],
         [10.5436],
         [10.4312]],
        [[10.2903],
         [10.3450],
         [10.1623],
         ...,
         [10.0881],
         [10.3533],
         [10.2499]],
        ...,
        [[ 9.9842],
         [10.1137],
         [ 9.9553],
         ...,
         [ 9.8607],
         [10.1218],
         [10.0293]],
        [[10.7832],
         [10.7139],
         [10.4917],
         ...,
         [10.4508],
         [10.7225],
         [10.6014]],
        [[11.3310],
         [11.1190],
         [10.8522],
         ...,
         [10.8492],
         [11.1279],
         [10.9870]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0329, 1.0194, 1.0110,  ..., 1.0133, 1.0196, 1.0154],
        [0.9838, 0.9836, 0.9793,  ..., 0.9780, 0.9838, 0.9814],
        [0.9784, 0.9795, 0.9756,  ..., 0.9740, 0.9797, 0.9775],
        ...,
        [0.9718, 0.9746, 0.9712,  ..., 0.9692, 0.9748, 0.9728],
        [0.9889, 0.9875, 0.9827,  ..., 0.9818, 0.9876, 0.9850],
        [1.0007, 0.9961, 0.9904,  ..., 0.9904, 0.9963, 0.9933]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7113],
         [19.9541],
         [19.0593],
         ...,
         [17.2780],
         [20.1794],
         [15.2550]],
        [[18.6570],
         [17.0016],
         [17.3021],
         ...,
         [16.8982],
         [17.1742],
         [14.2938]],
        [[18.3101],
         [16.6679],
         [17.0962],
         ...,
         [16.8518],
         [16.8348],
         [14.1792]],
        ...,
        [[17.8885],
         [16.2628],
         [16.8440],
         ...,
         [16.7944],
         [16.4229],
         [14.0381]],
        [[18.9831],
         [17.3156],
         [17.4944],
         ...,
         [16.9412],
         [17.4937],
         [14.4006]],
        [[19.7230],
         [18.0292],
         [17.9264],
         ...,
         [17.0364],
         [18.2197],
         [14.6388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1018, 1.0732, 1.0587,  ..., 1.0297, 1.0769, 0.9968],
        [1.0521, 1.0252, 1.0301,  ..., 1.0235, 1.0280, 0.9811],
        [1.0465, 1.0198, 1.0267,  ..., 1.0228, 1.0225, 0.9793],
        ...,
        [1.0396, 1.0132, 1.0226,  ..., 1.0218, 1.0158, 0.9770],
        [1.0574, 1.0303, 1.0332,  ..., 1.0242, 1.0332, 0.9829],
        [1.0695, 1.0419, 1.0402,  ..., 1.0258, 1.0450, 0.9868]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3584],
         [12.5138],
         [13.0015],
         ...,
         [12.9572],
         [12.4496],
         [13.0158]],
        [[ 9.2224],
         [ 9.5562],
         [ 9.3470],
         ...,
         [ 9.3640],
         [ 9.5880],
         [ 9.3416]],
        [[ 8.8090],
         [ 9.2425],
         [ 8.9729],
         ...,
         [ 8.9950],
         [ 9.2830],
         [ 8.9658]],
        ...,
        [[ 8.3215],
         [ 8.8674],
         [ 8.5292],
         ...,
         [ 8.5571],
         [ 8.9179],
         [ 8.5203]],
        [[ 9.6213],
         [ 9.8553],
         [ 9.7063],
         ...,
         [ 9.7181],
         [ 9.8785],
         [ 9.7025]],
        [[10.5637],
         [10.5488],
         [10.5486],
         ...,
         [10.5476],
         [10.5511],
         [10.5490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9796, 0.9685, 0.9749,  ..., 0.9743, 0.9676, 0.9751],
        [0.9250, 0.9294, 0.9266,  ..., 0.9269, 0.9298, 0.9266],
        [0.9195, 0.9252, 0.9217,  ..., 0.9220, 0.9258, 0.9216],
        ...,
        [0.9131, 0.9203, 0.9158,  ..., 0.9162, 0.9210, 0.9157],
        [0.9303, 0.9333, 0.9314,  ..., 0.9315, 0.9337, 0.9313],
        [0.9427, 0.9425, 0.9425,  ..., 0.9425, 0.9425, 0.9425]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9771],
         [12.1791],
         [11.8458],
         ...,
         [11.8130],
         [12.1920],
         [12.0103]],
        [[10.2562],
         [10.5143],
         [10.3707],
         ...,
         [10.3460],
         [10.5241],
         [10.4282]],
        [[10.0611],
         [10.3247],
         [10.2014],
         ...,
         [10.1776],
         [10.3342],
         [10.2475]],
        ...,
        [[ 9.8242],
         [10.0941],
         [ 9.9951],
         ...,
         [ 9.9723],
         [10.1032],
         [10.0275]],
        [[10.4396],
         [10.6924],
         [10.5296],
         ...,
         [10.5040],
         [10.7025],
         [10.5979]],
        [[10.8561],
         [11.0962],
         [10.8887],
         ...,
         [10.8612],
         [11.1071],
         [10.9823]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0249, 1.0292, 1.0221,  ..., 1.0214, 1.0295, 1.0256],
        [0.9880, 0.9935, 0.9904,  ..., 0.9899, 0.9937, 0.9917],
        [0.9838, 0.9895, 0.9868,  ..., 0.9863, 0.9897, 0.9878],
        ...,
        [0.9787, 0.9845, 0.9824,  ..., 0.9819, 0.9847, 0.9831],
        [0.9919, 0.9973, 0.9938,  ..., 0.9933, 0.9976, 0.9953],
        [1.0008, 1.0060, 1.0015,  ..., 1.0010, 1.0062, 1.0036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.7134],
         [19.2949],
         [17.6322],
         ...,
         [16.5169],
         [19.5201],
         [15.2800]],
        [[19.4312],
         [16.5531],
         [16.3005],
         ...,
         [15.9709],
         [16.6958],
         [14.4419]],
        [[19.0594],
         [16.2420],
         [16.1428],
         ...,
         [15.9046],
         [16.3759],
         [14.3414]],
        ...,
        [[18.6078],
         [15.8640],
         [15.9492],
         ...,
         [15.8227],
         [15.9873],
         [14.2177]],
        [[19.7809],
         [16.8456],
         [16.4474],
         ...,
         [16.0324],
         [16.9967],
         [14.5353]],
        [[20.5750],
         [17.5095],
         [16.7764],
         ...,
         [16.1689],
         [17.6800],
         [14.7436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1108, 1.0552, 1.0282,  ..., 1.0100, 1.0589, 0.9899],
        [1.0574, 1.0106, 1.0065,  ..., 1.0012, 1.0130, 0.9763],
        [1.0514, 1.0056, 1.0040,  ..., 1.0001, 1.0078, 0.9747],
        ...,
        [1.0441, 0.9994, 1.0008,  ..., 0.9988, 1.0014, 0.9727],
        [1.0631, 1.0154, 1.0089,  ..., 1.0022, 1.0179, 0.9778],
        [1.0761, 1.0262, 1.0143,  ..., 1.0044, 1.0290, 0.9812]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4956],
         [12.3824],
         [12.9026],
         ...,
         [12.8162],
         [12.3070],
         [13.0472]],
        [[ 9.5785],
         [ 9.6410],
         [ 9.4104],
         ...,
         [ 9.4204],
         [ 9.6939],
         [ 9.3299]],
        [[ 9.2684],
         [ 9.3470],
         [ 9.0498],
         ...,
         [ 9.0682],
         [ 9.4117],
         [ 8.9505]],
        ...,
        [[ 8.8974],
         [ 8.9944],
         [ 8.6214],
         ...,
         [ 8.6493],
         [ 9.0728],
         [ 8.5011]],
        [[ 9.8740],
         [ 9.9207],
         [ 9.7560],
         ...,
         [ 9.7577],
         [ 9.9619],
         [ 9.6944]],
        [[10.5587],
         [10.5670],
         [10.5643],
         ...,
         [10.5454],
         [10.5800],
         [10.5500]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9719, 0.9704, 0.9773,  ..., 0.9762, 0.9694, 0.9792],
        [0.9334, 0.9342, 0.9312,  ..., 0.9313, 0.9349, 0.9301],
        [0.9293, 0.9303, 0.9264,  ..., 0.9266, 0.9312, 0.9251],
        ...,
        [0.9244, 0.9257, 0.9207,  ..., 0.9211, 0.9267, 0.9191],
        [0.9373, 0.9379, 0.9357,  ..., 0.9357, 0.9384, 0.9349],
        [0.9463, 0.9464, 0.9464,  ..., 0.9462, 0.9466, 0.9462]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0565],
         [12.1925],
         [11.8174],
         ...,
         [11.8312],
         [12.2038],
         [12.0144]],
        [[10.3032],
         [10.5245],
         [10.3525],
         ...,
         [10.3142],
         [10.5336],
         [10.4297]],
        [[10.1048],
         [10.3345],
         [10.1843],
         ...,
         [10.1405],
         [10.3435],
         [10.2487]],
        ...,
        [[ 9.8637],
         [10.1035],
         [ 9.9793],
         ...,
         [ 9.9289],
         [10.1122],
         [10.0284]],
        [[10.4900],
         [10.7029],
         [10.5103],
         ...,
         [10.4772],
         [10.7123],
         [10.5997]],
        [[10.9140],
         [11.1075],
         [10.8670],
         ...,
         [10.8461],
         [11.1174],
         [10.9846]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0277, 1.0306, 1.0226,  ..., 1.0229, 1.0309, 1.0268],
        [0.9901, 0.9949, 0.9912,  ..., 0.9904, 0.9951, 0.9928],
        [0.9859, 0.9908, 0.9876,  ..., 0.9866, 0.9910, 0.9889],
        ...,
        [0.9807, 0.9858, 0.9832,  ..., 0.9821, 0.9860, 0.9842],
        [0.9941, 0.9987, 0.9946,  ..., 0.9939, 0.9989, 0.9965],
        [1.0032, 1.0074, 1.0022,  ..., 1.0018, 1.0076, 1.0047]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.2083],
         [19.6319],
         [18.3321],
         ...,
         [16.8843],
         [19.8579],
         [15.2662]],
        [[19.0390],
         [16.7728],
         [16.7856],
         ...,
         [16.4235],
         [16.9302],
         [14.3678]],
        [[18.6796],
         [16.4491],
         [16.6035],
         ...,
         [16.3674],
         [16.5992],
         [14.2603]],
        ...,
        [[18.2428],
         [16.0561],
         [16.3801],
         ...,
         [16.2979],
         [16.1973],
         [14.1280]],
        [[19.3770],
         [17.0772],
         [16.9555],
         ...,
         [16.4755],
         [17.2416],
         [14.4677]],
        [[20.1442],
         [17.7687],
         [17.3366],
         ...,
         [16.5909],
         [17.9493],
         [14.6907]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1066, 1.0647, 1.0436,  ..., 1.0200, 1.0684, 0.9937],
        [1.0551, 1.0182, 1.0184,  ..., 1.0125, 1.0208, 0.9791],
        [1.0492, 1.0130, 1.0155,  ..., 1.0116, 1.0154, 0.9774],
        ...,
        [1.0421, 1.0066, 1.0118,  ..., 1.0105, 1.0089, 0.9752],
        [1.0606, 1.0232, 1.0212,  ..., 1.0134, 1.0258, 0.9807],
        [1.0731, 1.0344, 1.0274,  ..., 1.0153, 1.0374, 0.9844]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9966],
         [12.2918],
         [12.8338],
         ...,
         [12.7172],
         [12.2106],
         [13.0701]],
        [[ 9.8786],
         [ 9.7044],
         [ 9.4574],
         ...,
         [ 9.4626],
         [ 9.7732],
         [ 9.3215]],
        [[ 9.6438],
         [ 9.4246],
         [ 9.1066],
         ...,
         [ 9.1225],
         [ 9.5075],
         [ 8.9395]],
        ...,
        [[ 9.3603],
         [ 9.0885],
         [ 8.6894],
         ...,
         [ 8.7175],
         [ 9.1878],
         [ 8.4871]],
        [[10.1003],
         [ 9.9701],
         [ 9.7932],
         ...,
         [ 9.7877],
         [10.0251],
         [ 9.6886]],
        [[10.6074],
         [10.5825],
         [10.5769],
         ...,
         [10.5453],
         [10.6042],
         [10.5507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9650, 0.9689, 0.9761,  ..., 0.9746, 0.9679, 0.9792],
        [0.9371, 0.9347, 0.9315,  ..., 0.9316, 0.9357, 0.9297],
        [0.9339, 0.9311, 0.9268,  ..., 0.9271, 0.9321, 0.9246],
        ...,
        [0.9302, 0.9266, 0.9213,  ..., 0.9217, 0.9279, 0.9187],
        [0.9400, 0.9383, 0.9359,  ..., 0.9358, 0.9390, 0.9345],
        [0.9467, 0.9464, 0.9463,  ..., 0.9459, 0.9466, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.5956],
         [12.2021],
         [11.8117],
         ...,
         [11.8872],
         [12.2122],
         [12.0173]],
        [[10.4475],
         [10.5322],
         [10.3381],
         ...,
         [10.2866],
         [10.5408],
         [10.4308]],
        [[10.2084],
         [10.3421],
         [10.1690],
         ...,
         [10.1040],
         [10.3505],
         [10.2496]],
        ...,
        [[ 9.9193],
         [10.1108],
         [ 9.9629],
         ...,
         [ 9.8820],
         [10.1191],
         [10.0290]],
        [[10.6731],
         [10.7108],
         [10.4967],
         ...,
         [10.4580],
         [10.7196],
         [10.6010]],
        [[11.1885],
         [11.1158],
         [10.8555],
         ...,
         [10.8465],
         [11.1250],
         [10.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0313, 1.0229, 1.0145,  ..., 1.0161, 1.0231, 1.0189],
        [0.9852, 0.9871, 0.9829,  ..., 0.9818, 0.9872, 0.9849],
        [0.9801, 0.9830, 0.9793,  ..., 0.9779, 0.9832, 0.9810],
        ...,
        [0.9739, 0.9780, 0.9748,  ..., 0.9731, 0.9782, 0.9763],
        [0.9901, 0.9909, 0.9863,  ..., 0.9855, 0.9911, 0.9885],
        [1.0011, 0.9996, 0.9940,  ..., 0.9938, 0.9998, 0.9968]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8471],
         [19.8671],
         [18.8565],
         ...,
         [17.1654],
         [20.0927],
         [15.2578]],
        [[18.7609],
         [16.9378],
         [17.1570],
         ...,
         [16.7659],
         [17.1062],
         [14.3141]],
        [[18.4106],
         [16.6066],
         [16.9576],
         ...,
         [16.7171],
         [16.7689],
         [14.2015]],
        ...,
        [[17.9848],
         [16.2046],
         [16.7133],
         ...,
         [16.6567],
         [16.3593],
         [14.0628]],
        [[19.0903],
         [17.2494],
         [17.3432],
         ...,
         [16.8111],
         [17.4237],
         [14.4190]],
        [[19.8378],
         [17.9575],
         [17.7613],
         ...,
         [16.9112],
         [18.1454],
         [14.6530]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1036, 1.0714, 1.0550,  ..., 1.0275, 1.0751, 0.9965],
        [1.0534, 1.0238, 1.0274,  ..., 1.0210, 1.0265, 0.9811],
        [1.0477, 1.0184, 1.0241,  ..., 1.0202, 1.0210, 0.9793],
        ...,
        [1.0408, 1.0119, 1.0201,  ..., 1.0192, 1.0144, 0.9770],
        [1.0588, 1.0289, 1.0304,  ..., 1.0217, 1.0317, 0.9828],
        [1.0710, 1.0404, 1.0372,  ..., 1.0234, 1.0434, 0.9866]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8666],
         [12.2655],
         [12.8137],
         ...,
         [12.6881],
         [12.1829],
         [13.0770]],
        [[ 9.9752],
         [ 9.7236],
         [ 9.4716],
         ...,
         [ 9.4753],
         [ 9.7974],
         [ 9.3189]],
        [[ 9.7631],
         [ 9.4481],
         [ 9.1238],
         ...,
         [ 9.1390],
         [ 9.5366],
         [ 8.9362]],
        ...,
        [[ 9.5060],
         [ 9.1169],
         [ 8.7098],
         ...,
         [ 8.7381],
         [ 9.2226],
         [ 8.4829]],
        [[10.1751],
         [ 9.9852],
         [ 9.8045],
         ...,
         [ 9.7968],
         [10.0444],
         [ 9.6868]],
        [[10.6305],
         [10.5874],
         [10.5809],
         ...,
         [10.5454],
         [10.6119],
         [10.5509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9632, 0.9685, 0.9758,  ..., 0.9741, 0.9674, 0.9792],
        [0.9382, 0.9349, 0.9316,  ..., 0.9316, 0.9359, 0.9296],
        [0.9354, 0.9313, 0.9270,  ..., 0.9272, 0.9324, 0.9245],
        ...,
        [0.9320, 0.9269, 0.9215,  ..., 0.9219, 0.9283, 0.9185],
        [0.9409, 0.9384, 0.9360,  ..., 0.9359, 0.9392, 0.9344],
        [0.9469, 0.9463, 0.9462,  ..., 0.9458, 0.9467, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7822],
         [12.2049],
         [11.8128],
         ...,
         [11.9113],
         [12.2147],
         [12.0182]],
        [[10.5212],
         [10.5346],
         [10.3335],
         ...,
         [10.2775],
         [10.5430],
         [10.4311]],
        [[10.2707],
         [10.3444],
         [10.1638],
         ...,
         [10.0916],
         [10.3527],
         [10.2498]],
        ...,
        [[ 9.9680],
         [10.1131],
         [ 9.9570],
         ...,
         [ 9.8654],
         [10.1212],
         [10.0292]],
        [[10.7579],
         [10.7132],
         [10.4927],
         ...,
         [10.4523],
         [10.7219],
         [10.6013]],
        [[11.2992],
         [11.1184],
         [10.8528],
         ...,
         [10.8485],
         [11.1273],
         [10.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0326, 1.0202, 1.0118,  ..., 1.0139, 1.0204, 1.0162],
        [0.9841, 0.9844, 0.9800,  ..., 0.9788, 0.9845, 0.9821],
        [0.9787, 0.9803, 0.9764,  ..., 0.9749, 0.9805, 0.9782],
        ...,
        [0.9722, 0.9753, 0.9720,  ..., 0.9700, 0.9755, 0.9735],
        [0.9891, 0.9882, 0.9835,  ..., 0.9826, 0.9884, 0.9858],
        [1.0008, 0.9969, 0.9912,  ..., 0.9911, 0.9971, 0.9941]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7400],
         [19.9358],
         [19.0162],
         ...,
         [17.2538],
         [20.1611],
         [15.2556]],
        [[18.6789],
         [16.9881],
         [17.2712],
         ...,
         [16.8701],
         [17.1598],
         [14.2981]],
        [[18.3313],
         [16.6549],
         [17.0666],
         ...,
         [16.8232],
         [16.8208],
         [14.1839]],
        ...,
        [[17.9088],
         [16.2504],
         [16.8161],
         ...,
         [16.7652],
         [16.4093],
         [14.0433]],
        [[19.0057],
         [17.3016],
         [17.4622],
         ...,
         [16.9135],
         [17.4788],
         [14.4044]],
        [[19.7472],
         [18.0140],
         [17.8913],
         ...,
         [17.0097],
         [18.2040],
         [14.6418]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1022, 1.0728, 1.0579,  ..., 1.0292, 1.0765, 0.9967],
        [1.0524, 1.0249, 1.0295,  ..., 1.0229, 1.0277, 0.9811],
        [1.0467, 1.0194, 1.0261,  ..., 1.0222, 1.0221, 0.9793],
        ...,
        [1.0398, 1.0129, 1.0221,  ..., 1.0212, 1.0155, 0.9770],
        [1.0577, 1.0300, 1.0326,  ..., 1.0237, 1.0328, 0.9828],
        [1.0697, 1.0416, 1.0396,  ..., 1.0252, 1.0446, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9514],
         [12.2829],
         [12.8269],
         ...,
         [12.7072],
         [12.2011],
         [13.0725]],
        [[ 9.9111],
         [ 9.7109],
         [ 9.4622],
         ...,
         [ 9.4669],
         [ 9.7814],
         [ 9.3206]],
        [[ 9.6840],
         [ 9.4325],
         [ 9.1125],
         ...,
         [ 9.1281],
         [ 9.5174],
         [ 8.9384]],
        ...,
        [[ 9.4095],
         [ 9.0981],
         [ 8.6963],
         ...,
         [ 8.7245],
         [ 9.1996],
         [ 8.4856]],
        [[10.1254],
         [ 9.9752],
         [ 9.7970],
         ...,
         [ 9.7908],
         [10.0317],
         [ 9.6880]],
        [[10.6149],
         [10.5841],
         [10.5783],
         ...,
         [10.5453],
         [10.6068],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9644, 0.9688, 0.9760,  ..., 0.9744, 0.9677, 0.9792],
        [0.9375, 0.9348, 0.9315,  ..., 0.9316, 0.9357, 0.9296],
        [0.9345, 0.9311, 0.9269,  ..., 0.9271, 0.9322, 0.9246],
        ...,
        [0.9308, 0.9267, 0.9214,  ..., 0.9218, 0.9280, 0.9186],
        [0.9403, 0.9383, 0.9359,  ..., 0.9359, 0.9390, 0.9345],
        [0.9468, 0.9463, 0.9463,  ..., 0.9458, 0.9466, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6583],
         [12.2030],
         [11.8119],
         ...,
         [11.8951],
         [12.2130],
         [12.0176]],
        [[10.4708],
         [10.5330],
         [10.3365],
         ...,
         [10.2835],
         [10.5416],
         [10.4309]],
        [[10.2277],
         [10.3428],
         [10.1672],
         ...,
         [10.0999],
         [10.3512],
         [10.2497]],
        ...,
        [[ 9.9339],
         [10.1116],
         [ 9.9609],
         ...,
         [ 9.8765],
         [10.1198],
         [10.0291]],
        [[10.7003],
         [10.7117],
         [10.4954],
         ...,
         [10.4561],
         [10.7204],
         [10.6011]],
        [[11.2247],
         [11.1167],
         [10.8545],
         ...,
         [10.8471],
         [11.1258],
         [10.9865]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0317, 1.0220, 1.0136,  ..., 1.0154, 1.0222, 1.0180],
        [0.9848, 0.9861, 0.9819,  ..., 0.9808, 0.9863, 0.9840],
        [0.9796, 0.9821, 0.9783,  ..., 0.9769, 0.9822, 0.9801],
        ...,
        [0.9733, 0.9771, 0.9739,  ..., 0.9721, 0.9773, 0.9753],
        [0.9897, 0.9900, 0.9853,  ..., 0.9845, 0.9902, 0.9876],
        [1.0010, 0.9987, 0.9930,  ..., 0.9929, 0.9989, 0.9959]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.8106],
         [19.8906],
         [18.9107],
         ...,
         [17.1951],
         [20.1161],
         [15.2570]],
        [[18.7330],
         [16.9549],
         [17.1957],
         ...,
         [16.8012],
         [17.1244],
         [14.3087]],
        [[18.3836],
         [16.6230],
         [16.9945],
         ...,
         [16.7531],
         [16.7865],
         [14.1955]],
        ...,
        [[17.9589],
         [16.2201],
         [16.7481],
         ...,
         [16.6936],
         [16.3763],
         [14.0562]],
        [[19.0615],
         [17.2671],
         [17.3835],
         ...,
         [16.8458],
         [17.4424],
         [14.4140]],
        [[19.8069],
         [17.9767],
         [17.8053],
         ...,
         [16.9445],
         [18.1653],
         [14.6492]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1031, 1.0719, 1.0559,  ..., 1.0280, 1.0755, 0.9965],
        [1.0531, 1.0241, 1.0281,  ..., 1.0216, 1.0269, 0.9811],
        [1.0474, 1.0187, 1.0248,  ..., 1.0209, 1.0214, 0.9793],
        ...,
        [1.0405, 1.0122, 1.0208,  ..., 1.0199, 1.0147, 0.9770],
        [1.0584, 1.0292, 1.0311,  ..., 1.0224, 1.0321, 0.9828],
        [1.0705, 1.0408, 1.0380,  ..., 1.0240, 1.0438, 0.9866]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8839],
         [12.2691],
         [12.8164],
         ...,
         [12.6920],
         [12.1867],
         [13.0761]],
        [[ 9.9618],
         [ 9.7210],
         [ 9.4696],
         ...,
         [ 9.4736],
         [ 9.7941],
         [ 9.3193]],
        [[ 9.7465],
         [ 9.4448],
         [ 9.1215],
         ...,
         [ 9.1367],
         [ 9.5326],
         [ 8.9366]],
        ...,
        [[ 9.4859],
         [ 9.1130],
         [ 8.7070],
         ...,
         [ 8.7352],
         [ 9.2178],
         [ 8.4834]],
        [[10.1647],
         [ 9.9831],
         [ 9.8029],
         ...,
         [ 9.7956],
         [10.0418],
         [ 9.6871]],
        [[10.6271],
         [10.5867],
         [10.5804],
         ...,
         [10.5454],
         [10.6108],
         [10.5509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9635, 0.9686, 0.9758,  ..., 0.9742, 0.9675, 0.9792],
        [0.9381, 0.9349, 0.9316,  ..., 0.9316, 0.9359, 0.9296],
        [0.9352, 0.9312, 0.9270,  ..., 0.9272, 0.9324, 0.9245],
        ...,
        [0.9318, 0.9269, 0.9215,  ..., 0.9219, 0.9282, 0.9185],
        [0.9408, 0.9384, 0.9360,  ..., 0.9359, 0.9391, 0.9344],
        [0.9469, 0.9463, 0.9463,  ..., 0.9458, 0.9467, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7563],
         [12.2045],
         [11.8126],
         ...,
         [11.9078],
         [12.2143],
         [12.0181]],
        [[10.5101],
         [10.5342],
         [10.3341],
         ...,
         [10.2788],
         [10.5427],
         [10.4311]],
        [[10.2611],
         [10.3441],
         [10.1645],
         ...,
         [10.0933],
         [10.3524],
         [10.2498]],
        ...,
        [[ 9.9603],
         [10.1128],
         [ 9.9578],
         ...,
         [ 9.8677],
         [10.1209],
         [10.0292]],
        [[10.7454],
         [10.7129],
         [10.4933],
         ...,
         [10.4531],
         [10.7215],
         [10.6013]],
        [[11.2833],
         [11.1180],
         [10.8532],
         ...,
         [10.8482],
         [11.1270],
         [10.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0324, 1.0205, 1.0121,  ..., 1.0142, 1.0208, 1.0165],
        [0.9842, 0.9847, 0.9804,  ..., 0.9793, 0.9849, 0.9825],
        [0.9789, 0.9807, 0.9768,  ..., 0.9753, 0.9808, 0.9786],
        ...,
        [0.9724, 0.9757, 0.9724,  ..., 0.9704, 0.9759, 0.9739],
        [0.9893, 0.9886, 0.9839,  ..., 0.9830, 0.9887, 0.9862],
        [1.0008, 0.9972, 0.9916,  ..., 0.9915, 0.9974, 0.9944]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7546],
         [19.9264],
         [18.9943],
         ...,
         [17.2415],
         [20.1518],
         [15.2559]],
        [[18.6901],
         [16.9812],
         [17.2555],
         ...,
         [16.8558],
         [17.1524],
         [14.3003]],
        [[18.3421],
         [16.6482],
         [17.0516],
         ...,
         [16.8087],
         [16.8137],
         [14.1863]],
        ...,
        [[17.9192],
         [16.2441],
         [16.8019],
         ...,
         [16.7504],
         [16.4024],
         [14.0460]],
        [[19.0173],
         [17.2944],
         [17.4459],
         ...,
         [16.8995],
         [17.4713],
         [14.4064]],
        [[19.7596],
         [18.0063],
         [17.8734],
         ...,
         [16.9962],
         [18.1960],
         [14.6434]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1023, 1.0726, 1.0575,  ..., 1.0289, 1.0763, 0.9966],
        [1.0525, 1.0247, 1.0292,  ..., 1.0227, 1.0275, 0.9811],
        [1.0468, 1.0193, 1.0259,  ..., 1.0219, 1.0220, 0.9793],
        ...,
        [1.0400, 1.0127, 1.0218,  ..., 1.0210, 1.0153, 0.9770],
        [1.0578, 1.0298, 1.0323,  ..., 1.0234, 1.0327, 0.9828],
        [1.0699, 1.0414, 1.0392,  ..., 1.0250, 1.0445, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9282],
         [12.2782],
         [12.8233],
         ...,
         [12.7021],
         [12.1962],
         [13.0737]],
        [[ 9.9282],
         [ 9.7143],
         [ 9.4647],
         ...,
         [ 9.4692],
         [ 9.7857],
         [ 9.3201]],
        [[ 9.7052],
         [ 9.4367],
         [ 9.1155],
         ...,
         [ 9.1311],
         [ 9.5226],
         [ 8.9378]],
        ...,
        [[ 9.4353],
         [ 9.1032],
         [ 8.6999],
         ...,
         [ 8.7281],
         [ 9.2058],
         [ 8.4849]],
        [[10.1386],
         [ 9.9779],
         [ 9.7990],
         ...,
         [ 9.7924],
         [10.0351],
         [ 9.6877]],
        [[10.6189],
         [10.5850],
         [10.5790],
         ...,
         [10.5453],
         [10.6081],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9641, 0.9687, 0.9759,  ..., 0.9743, 0.9676, 0.9792],
        [0.9377, 0.9348, 0.9315,  ..., 0.9316, 0.9358, 0.9296],
        [0.9347, 0.9312, 0.9269,  ..., 0.9271, 0.9323, 0.9246],
        ...,
        [0.9311, 0.9268, 0.9214,  ..., 0.9218, 0.9281, 0.9186],
        [0.9404, 0.9383, 0.9360,  ..., 0.9359, 0.9391, 0.9345],
        [0.9468, 0.9463, 0.9463,  ..., 0.9458, 0.9466, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6915],
         [12.2035],
         [11.8121],
         ...,
         [11.8993],
         [12.2135],
         [12.0178]],
        [[10.4837],
         [10.5334],
         [10.3357],
         ...,
         [10.2819],
         [10.5420],
         [10.4310]],
        [[10.2386],
         [10.3433],
         [10.1663],
         ...,
         [10.0977],
         [10.3516],
         [10.2497]],
        ...,
        [[ 9.9423],
         [10.1120],
         [ 9.9599],
         ...,
         [ 9.8735],
         [10.1202],
         [10.0291]],
        [[10.7152],
         [10.7121],
         [10.4947],
         ...,
         [10.4550],
         [10.7208],
         [10.6012]],
        [[11.2443],
         [11.1171],
         [10.8540],
         ...,
         [10.8474],
         [11.1262],
         [10.9866]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0319, 1.0215, 1.0131,  ..., 1.0150, 1.0217, 1.0175],
        [0.9846, 0.9857, 0.9814,  ..., 0.9803, 0.9858, 0.9835],
        [0.9793, 0.9816, 0.9778,  ..., 0.9763, 0.9818, 0.9796],
        ...,
        [0.9730, 0.9766, 0.9734,  ..., 0.9715, 0.9768, 0.9749],
        [0.9896, 0.9895, 0.9848,  ..., 0.9840, 0.9897, 0.9871],
        [1.0009, 0.9982, 0.9925,  ..., 0.9924, 0.9984, 0.9954]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7916],
         [19.9028],
         [18.9390],
         ...,
         [17.2108],
         [20.1283],
         [15.2566]],
        [[18.7184],
         [16.9638],
         [17.2160],
         ...,
         [16.8198],
         [17.1339],
         [14.3058]],
        [[18.3694],
         [16.6316],
         [17.0139],
         ...,
         [16.7720],
         [16.7957],
         [14.1924]],
        ...,
        [[17.9454],
         [16.2282],
         [16.7664],
         ...,
         [16.7129],
         [16.3851],
         [14.0527]],
        [[19.0464],
         [17.2764],
         [17.4047],
         ...,
         [16.8640],
         [17.4522],
         [14.4114]],
        [[19.7908],
         [17.9868],
         [17.8285],
         ...,
         [16.9620],
         [18.1757],
         [14.6472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1028, 1.0721, 1.0564,  ..., 1.0283, 1.0758, 0.9966],
        [1.0529, 1.0243, 1.0284,  ..., 1.0220, 1.0271, 0.9811],
        [1.0472, 1.0189, 1.0251,  ..., 1.0212, 1.0216, 0.9792],
        ...,
        [1.0403, 1.0124, 1.0211,  ..., 1.0202, 1.0149, 0.9770],
        [1.0582, 1.0294, 1.0315,  ..., 1.0227, 1.0323, 0.9828],
        [1.0703, 1.0410, 1.0384,  ..., 1.0243, 1.0440, 0.9866]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8929],
         [12.2710],
         [12.8178],
         ...,
         [12.6941],
         [12.1886],
         [13.0756]],
        [[ 9.9548],
         [ 9.7196],
         [ 9.4686],
         ...,
         [ 9.4727],
         [ 9.7923],
         [ 9.3195]],
        [[ 9.7380],
         [ 9.4432],
         [ 9.1202],
         ...,
         [ 9.1356],
         [ 9.5306],
         [ 8.9369]],
        ...,
        [[ 9.4755],
         [ 9.1110],
         [ 8.7056],
         ...,
         [ 8.7338],
         [ 9.2153],
         [ 8.4837]],
        [[10.1593],
         [ 9.9820],
         [ 9.8021],
         ...,
         [ 9.7949],
         [10.0404],
         [ 9.6872]],
        [[10.6254],
         [10.5864],
         [10.5801],
         ...,
         [10.5454],
         [10.6103],
         [10.5509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9636, 0.9686, 0.9758,  ..., 0.9742, 0.9675, 0.9792],
        [0.9380, 0.9349, 0.9316,  ..., 0.9316, 0.9358, 0.9296],
        [0.9351, 0.9312, 0.9270,  ..., 0.9272, 0.9324, 0.9245],
        ...,
        [0.9317, 0.9268, 0.9215,  ..., 0.9219, 0.9282, 0.9185],
        [0.9407, 0.9383, 0.9360,  ..., 0.9359, 0.9391, 0.9345],
        [0.9469, 0.9463, 0.9463,  ..., 0.9458, 0.9467, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7430],
         [12.2043],
         [11.8125],
         ...,
         [11.9060],
         [12.2142],
         [12.0180]],
        [[10.5045],
         [10.5341],
         [10.3345],
         ...,
         [10.2794],
         [10.5426],
         [10.4311]],
        [[10.2563],
         [10.3439],
         [10.1649],
         ...,
         [10.0942],
         [10.3522],
         [10.2498]],
        ...,
        [[ 9.9564],
         [10.1126],
         [ 9.9582],
         ...,
         [ 9.8689],
         [10.1208],
         [10.0292]],
        [[10.7390],
         [10.7127],
         [10.4936],
         ...,
         [10.4535],
         [10.7214],
         [10.6013]],
        [[11.2752],
         [11.1178],
         [10.8533],
         ...,
         [10.8480],
         [11.1268],
         [10.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0323, 1.0207, 1.0123,  ..., 1.0143, 1.0209, 1.0167],
        [0.9843, 0.9849, 0.9806,  ..., 0.9795, 0.9851, 0.9827],
        [0.9790, 0.9808, 0.9770,  ..., 0.9755, 0.9810, 0.9788],
        ...,
        [0.9725, 0.9759, 0.9726,  ..., 0.9707, 0.9761, 0.9741],
        [0.9893, 0.9888, 0.9841,  ..., 0.9832, 0.9889, 0.9864],
        [1.0008, 0.9974, 0.9918,  ..., 0.9917, 0.9976, 0.9946]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7622],
         [19.9216],
         [18.9829],
         ...,
         [17.2352],
         [20.1470],
         [15.2560]],
        [[18.6959],
         [16.9776],
         [17.2474],
         ...,
         [16.8484],
         [17.1486],
         [14.3015]],
        [[18.3477],
         [16.6448],
         [17.0439],
         ...,
         [16.8011],
         [16.8100],
         [14.1875]],
        ...,
        [[17.9245],
         [16.2408],
         [16.7946],
         ...,
         [16.7427],
         [16.3989],
         [14.0474]],
        [[19.0232],
         [17.2907],
         [17.4374],
         ...,
         [16.8922],
         [17.4674],
         [14.4075]],
        [[19.7660],
         [18.0023],
         [17.8642],
         ...,
         [16.9891],
         [18.1918],
         [14.6441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1024, 1.0725, 1.0572,  ..., 1.0288, 1.0762, 0.9966],
        [1.0526, 1.0246, 1.0290,  ..., 1.0225, 1.0274, 0.9811],
        [1.0469, 1.0192, 1.0257,  ..., 1.0218, 1.0219, 0.9792],
        ...,
        [1.0400, 1.0126, 1.0217,  ..., 1.0208, 1.0152, 0.9770],
        [1.0579, 1.0297, 1.0321,  ..., 1.0232, 1.0326, 0.9828],
        [1.0700, 1.0413, 1.0390,  ..., 1.0248, 1.0444, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8858],
         [12.2695],
         [12.8167],
         ...,
         [12.6925],
         [12.1871],
         [13.0760]],
        [[ 9.9603],
         [ 9.7207],
         [ 9.4694],
         ...,
         [ 9.4734],
         [ 9.7937],
         [ 9.3193]],
        [[ 9.7448],
         [ 9.4445],
         [ 9.1212],
         ...,
         [ 9.1365],
         [ 9.5322],
         [ 8.9367]],
        ...,
        [[ 9.4837],
         [ 9.1126],
         [ 8.7067],
         ...,
         [ 8.7349],
         [ 9.2173],
         [ 8.4835]],
        [[10.1635],
         [ 9.9829],
         [ 9.8027],
         ...,
         [ 9.7955],
         [10.0415],
         [ 9.6871]],
        [[10.6268],
         [10.5867],
         [10.5803],
         ...,
         [10.5454],
         [10.6107],
         [10.5509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9635, 0.9686, 0.9758,  ..., 0.9742, 0.9675, 0.9792],
        [0.9381, 0.9349, 0.9316,  ..., 0.9316, 0.9359, 0.9296],
        [0.9352, 0.9312, 0.9270,  ..., 0.9272, 0.9324, 0.9245],
        ...,
        [0.9318, 0.9269, 0.9215,  ..., 0.9219, 0.9282, 0.9185],
        [0.9407, 0.9384, 0.9360,  ..., 0.9359, 0.9391, 0.9344],
        [0.9469, 0.9463, 0.9463,  ..., 0.9458, 0.9467, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7535],
         [12.2045],
         [11.8126],
         ...,
         [11.9075],
         [12.2143],
         [12.0181]],
        [[10.5090],
         [10.5342],
         [10.3342],
         ...,
         [10.2789],
         [10.5427],
         [10.4311]],
        [[10.2601],
         [10.3440],
         [10.1646],
         ...,
         [10.0935],
         [10.3523],
         [10.2498]],
        ...,
        [[ 9.9595],
         [10.1127],
         [ 9.9579],
         ...,
         [ 9.8680],
         [10.1209],
         [10.0292]],
        [[10.7440],
         [10.7129],
         [10.4933],
         ...,
         [10.4532],
         [10.7215],
         [10.6013]],
        [[11.2816],
         [11.1180],
         [10.8532],
         ...,
         [10.8481],
         [11.1269],
         [10.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0324, 1.0206, 1.0122,  ..., 1.0142, 1.0208, 1.0166],
        [0.9842, 0.9848, 0.9805,  ..., 0.9793, 0.9850, 0.9826],
        [0.9789, 0.9807, 0.9768,  ..., 0.9753, 0.9809, 0.9787],
        ...,
        [0.9724, 0.9757, 0.9724,  ..., 0.9705, 0.9759, 0.9739],
        [0.9893, 0.9886, 0.9839,  ..., 0.9830, 0.9888, 0.9862],
        [1.0008, 0.9973, 0.9916,  ..., 0.9915, 0.9975, 0.9945]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7562],
         [19.9254],
         [18.9919],
         ...,
         [17.2402],
         [20.1508],
         [15.2559]],
        [[18.6913],
         [16.9804],
         [17.2538],
         ...,
         [16.8543],
         [17.1516],
         [14.3006]],
        [[18.3433],
         [16.6475],
         [17.0500],
         ...,
         [16.8071],
         [16.8129],
         [14.1865]],
        ...,
        [[17.9203],
         [16.2434],
         [16.8004],
         ...,
         [16.7487],
         [16.4017],
         [14.0463]],
        [[19.0185],
         [17.2936],
         [17.4441],
         ...,
         [16.8979],
         [17.4705],
         [14.4066]],
        [[19.7609],
         [18.0054],
         [17.8715],
         ...,
         [16.9947],
         [18.1951],
         [14.6435]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1024, 1.0726, 1.0574,  ..., 1.0289, 1.0763, 0.9966],
        [1.0525, 1.0247, 1.0291,  ..., 1.0226, 1.0275, 0.9811],
        [1.0469, 1.0193, 1.0258,  ..., 1.0219, 1.0220, 0.9792],
        ...,
        [1.0400, 1.0127, 1.0218,  ..., 1.0209, 1.0153, 0.9770],
        [1.0578, 1.0298, 1.0322,  ..., 1.0233, 1.0327, 0.9828],
        [1.0699, 1.0414, 1.0392,  ..., 1.0249, 1.0444, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8839],
         [12.2691],
         [12.8164],
         ...,
         [12.6920],
         [12.1867],
         [13.0761]],
        [[ 9.9618],
         [ 9.7210],
         [ 9.4696],
         ...,
         [ 9.4736],
         [ 9.7941],
         [ 9.3193]],
        [[ 9.7465],
         [ 9.4448],
         [ 9.1215],
         ...,
         [ 9.1367],
         [ 9.5326],
         [ 8.9366]],
        ...,
        [[ 9.4859],
         [ 9.1130],
         [ 8.7070],
         ...,
         [ 8.7352],
         [ 9.2178],
         [ 8.4834]],
        [[10.1647],
         [ 9.9831],
         [ 9.8029],
         ...,
         [ 9.7956],
         [10.0418],
         [ 9.6871]],
        [[10.6271],
         [10.5867],
         [10.5804],
         ...,
         [10.5454],
         [10.6108],
         [10.5509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9635, 0.9686, 0.9758,  ..., 0.9742, 0.9675, 0.9792],
        [0.9381, 0.9349, 0.9316,  ..., 0.9316, 0.9359, 0.9296],
        [0.9352, 0.9312, 0.9270,  ..., 0.9272, 0.9324, 0.9245],
        ...,
        [0.9318, 0.9269, 0.9215,  ..., 0.9219, 0.9282, 0.9185],
        [0.9408, 0.9384, 0.9360,  ..., 0.9359, 0.9391, 0.9344],
        [0.9469, 0.9463, 0.9463,  ..., 0.9458, 0.9467, 0.9459]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7563],
         [12.2045],
         [11.8126],
         ...,
         [11.9078],
         [12.2143],
         [12.0181]],
        [[10.5101],
         [10.5342],
         [10.3341],
         ...,
         [10.2788],
         [10.5427],
         [10.4311]],
        [[10.2611],
         [10.3441],
         [10.1645],
         ...,
         [10.0933],
         [10.3524],
         [10.2498]],
        ...,
        [[ 9.9603],
         [10.1128],
         [ 9.9578],
         ...,
         [ 9.8677],
         [10.1209],
         [10.0292]],
        [[10.7454],
         [10.7129],
         [10.4933],
         ...,
         [10.4531],
         [10.7215],
         [10.6013]],
        [[11.2833],
         [11.1180],
         [10.8532],
         ...,
         [10.8482],
         [11.1270],
         [10.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0324, 1.0205, 1.0121,  ..., 1.0142, 1.0208, 1.0165],
        [0.9842, 0.9847, 0.9804,  ..., 0.9793, 0.9849, 0.9825],
        [0.9789, 0.9807, 0.9768,  ..., 0.9753, 0.9808, 0.9786],
        ...,
        [0.9724, 0.9757, 0.9724,  ..., 0.9704, 0.9759, 0.9739],
        [0.9893, 0.9886, 0.9839,  ..., 0.9830, 0.9887, 0.9862],
        [1.0008, 0.9972, 0.9916,  ..., 0.9915, 0.9974, 0.9944]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.7546],
         [19.9264],
         [18.9943],
         ...,
         [17.2415],
         [20.1518],
         [15.2559]],
        [[18.6901],
         [16.9812],
         [17.2555],
         ...,
         [16.8558],
         [17.1524],
         [14.3003]],
        [[18.3421],
         [16.6482],
         [17.0516],
         ...,
         [16.8087],
         [16.8137],
         [14.1863]],
        ...,
        [[17.9192],
         [16.2441],
         [16.8019],
         ...,
         [16.7504],
         [16.4024],
         [14.0460]],
        [[19.0173],
         [17.2944],
         [17.4459],
         ...,
         [16.8995],
         [17.4713],
         [14.4064]],
        [[19.7596],
         [18.0063],
         [17.8734],
         ...,
         [16.9962],
         [18.1960],
         [14.6434]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1023, 1.0726, 1.0575,  ..., 1.0289, 1.0763, 0.9966],
        [1.0525, 1.0247, 1.0292,  ..., 1.0227, 1.0275, 0.9811],
        [1.0468, 1.0193, 1.0259,  ..., 1.0219, 1.0220, 0.9793],
        ...,
        [1.0400, 1.0127, 1.0218,  ..., 1.0210, 1.0153, 0.9770],
        [1.0578, 1.0298, 1.0323,  ..., 1.0234, 1.0327, 0.9828],
        [1.0699, 1.0414, 1.0392,  ..., 1.0250, 1.0445, 0.9867]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.8895],
         [12.7183],
         [13.1181],
         ...,
         [13.2083],
         [12.6838],
         [13.5194]],
        [[ 9.0691],
         [ 9.4621],
         [ 9.3041],
         ...,
         [ 9.2724],
         [ 9.4772],
         [ 9.1723]],
        [[ 8.6029],
         [ 9.1219],
         [ 8.9167],
         ...,
         [ 8.8750],
         [ 9.1414],
         [ 8.7423]],
        ...,
        [[ 8.0576],
         [ 8.7167],
         [ 8.4582],
         ...,
         [ 8.4055],
         [ 8.7411],
         [ 8.2364]],
        [[ 9.5218],
         [ 9.7873],
         [ 9.6766],
         ...,
         [ 9.6550],
         [ 9.7982],
         [ 9.5882]],
        [[10.6025],
         [10.5453],
         [10.5524],
         ...,
         [10.5561],
         [10.5455],
         [10.5736]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9812, 0.9658, 0.9710,  ..., 0.9722, 0.9653, 0.9764],
        [0.9175, 0.9227, 0.9206,  ..., 0.9202, 0.9229, 0.9189],
        [0.9114, 0.9182, 0.9155,  ..., 0.9150, 0.9185, 0.9132],
        ...,
        [0.9042, 0.9129, 0.9095,  ..., 0.9088, 0.9132, 0.9065],
        [0.9235, 0.9270, 0.9256,  ..., 0.9253, 0.9272, 0.9244],
        [0.9378, 0.9370, 0.9371,  ..., 0.9372, 0.9371, 0.9374]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9182],
         [12.1753],
         [11.9166],
         ...,
         [11.8260],
         [12.1894],
         [12.0173]],
        [[10.2751],
         [10.5115],
         [10.3967],
         ...,
         [10.3598],
         [10.5220],
         [10.4308]],
        [[10.0882],
         [10.3220],
         [10.2225],
         ...,
         [10.1914],
         [10.3322],
         [10.2496]],
        ...,
        [[ 9.8608],
         [10.0916],
         [10.0104],
         ...,
         [ 9.9863],
         [10.1013],
         [10.0290]],
        [[10.4508],
         [10.6895],
         [10.5601],
         ...,
         [10.5177],
         [10.7004],
         [10.6010]],
        [[10.8492],
         [11.0931],
         [10.9298],
         ...,
         [10.8747],
         [11.1048],
         [10.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0210, 1.0265, 1.0209,  ..., 1.0190, 1.0268, 1.0231],
        [0.9857, 0.9908, 0.9883,  ..., 0.9876, 0.9910, 0.9891],
        [0.9817, 0.9867, 0.9846,  ..., 0.9839, 0.9870, 0.9852],
        ...,
        [0.9769, 0.9818, 0.9801,  ..., 0.9795, 0.9820, 0.9805],
        [0.9895, 0.9946, 0.9918,  ..., 0.9909, 0.9949, 0.9927],
        [0.9980, 1.0033, 0.9998,  ..., 0.9986, 1.0035, 1.0010]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.1799],
         [18.9509],
         [16.8308],
         ...,
         [15.9863],
         [19.1888],
         [15.3740]],
        [[18.3964],
         [16.3669],
         [15.7777],
         ...,
         [15.3637],
         [16.5014],
         [14.5019]],
        [[18.0784],
         [16.0726],
         [15.6520],
         ...,
         [15.2883],
         [16.1961],
         [14.3974]],
        ...,
        [[17.6912],
         [15.7146],
         [15.4973],
         ...,
         [15.1953],
         [15.8249],
         [14.2688]],
        [[18.6951],
         [16.6434],
         [15.8946],
         ...,
         [15.4336],
         [16.7884],
         [14.5990]],
        [[19.3713],
         [17.2702],
         [16.1557],
         ...,
         [15.5890],
         [17.4395],
         [14.8156]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0818, 1.0455, 1.0110,  ..., 0.9973, 1.0494, 0.9873],
        [1.0365, 1.0035, 0.9939,  ..., 0.9872, 1.0057, 0.9731],
        [1.0313, 0.9987, 0.9919,  ..., 0.9859, 1.0007, 0.9714],
        ...,
        [1.0250, 0.9929, 0.9893,  ..., 0.9844, 0.9947, 0.9694],
        [1.0413, 1.0080, 0.9958,  ..., 0.9883, 1.0103, 0.9747],
        [1.0523, 1.0182, 1.0000,  ..., 0.9908, 1.0209, 0.9783]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3706],
         [12.3984],
         [12.9051],
         ...,
         [12.8427],
         [12.3273],
         [13.2072]],
        [[ 9.6472],
         [ 9.6387],
         [ 9.4177],
         ...,
         [ 9.4095],
         [ 9.6929],
         [ 9.2728]],
        [[ 9.3548],
         [ 9.3429],
         [ 9.0575],
         ...,
         [ 9.0541],
         [ 9.4087],
         [ 8.8756]],
        ...,
        [[ 9.0042],
         [ 8.9884],
         [ 8.6295],
         ...,
         [ 8.6315],
         [ 9.0675],
         [ 8.4061]],
        [[ 9.9253],
         [ 9.9201],
         [ 9.7629],
         ...,
         [ 9.7500],
         [ 9.9629],
         [ 9.6553]],
        [[10.5676],
         [10.5704],
         [10.5702],
         ...,
         [10.5457],
         [10.5857],
         [10.5560]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9683, 0.9687, 0.9754,  ..., 0.9746, 0.9677, 0.9794],
        [0.9323, 0.9322, 0.9293,  ..., 0.9292, 0.9329, 0.9274],
        [0.9285, 0.9283, 0.9245,  ..., 0.9245, 0.9292, 0.9221],
        ...,
        [0.9238, 0.9236, 0.9189,  ..., 0.9189, 0.9247, 0.9159],
        [0.9360, 0.9359, 0.9339,  ..., 0.9337, 0.9365, 0.9324],
        [0.9445, 0.9445, 0.9445,  ..., 0.9442, 0.9447, 0.9443]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2914],
         [12.1957],
         [11.8196],
         ...,
         [11.8413],
         [12.2068],
         [12.0178]],
        [[10.3631],
         [10.5270],
         [10.3547],
         ...,
         [10.3079],
         [10.5362],
         [10.4310]],
        [[10.1465],
         [10.3370],
         [10.1865],
         ...,
         [10.1325],
         [10.3460],
         [10.2497]],
        ...,
        [[ 9.8839],
         [10.1059],
         [ 9.9815],
         ...,
         [ 9.9189],
         [10.1146],
         [10.0291]],
        [[10.5672],
         [10.7055],
         [10.5125],
         ...,
         [10.4726],
         [10.7149],
         [10.6012]],
        [[11.0319],
         [11.1103],
         [10.8692],
         ...,
         [10.8453],
         [11.1201],
         [10.9866]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0314, 1.0294, 1.0213,  ..., 1.0218, 1.0296, 1.0256],
        [0.9901, 0.9936, 0.9899,  ..., 0.9889, 0.9938, 0.9915],
        [0.9854, 0.9895, 0.9863,  ..., 0.9851, 0.9897, 0.9876],
        ...,
        [0.9798, 0.9846, 0.9819,  ..., 0.9805, 0.9847, 0.9829],
        [0.9944, 0.9974, 0.9933,  ..., 0.9924, 0.9976, 0.9952],
        [1.0044, 1.0061, 1.0009,  ..., 1.0004, 1.0063, 1.0034]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.5837],
         [19.6437],
         [18.3067],
         ...,
         [16.8386],
         [19.8738],
         [15.2908]],
        [[18.5978],
         [16.7852],
         [16.7725],
         ...,
         [16.3721],
         [16.9451],
         [14.3617]],
        [[18.2581],
         [16.4616],
         [16.5918],
         ...,
         [16.3152],
         [16.6139],
         [14.2507]],
        ...,
        [[17.8451],
         [16.0687],
         [16.3702],
         ...,
         [16.2449],
         [16.2119],
         [14.1141]],
        [[18.9169],
         [17.0896],
         [16.9412],
         ...,
         [16.4247],
         [17.2566],
         [14.4649]],
        [[19.6408],
         [17.7810],
         [17.3193],
         ...,
         [16.5415],
         [17.9646],
         [14.6954]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0964, 1.0648, 1.0431,  ..., 1.0192, 1.0686, 0.9941],
        [1.0478, 1.0184, 1.0182,  ..., 1.0116, 1.0210, 0.9789],
        [1.0423, 1.0131, 1.0152,  ..., 1.0107, 1.0156, 0.9771],
        ...,
        [1.0356, 1.0067, 1.0116,  ..., 1.0096, 1.0090, 0.9749],
        [1.0530, 1.0233, 1.0209,  ..., 1.0125, 1.0260, 0.9806],
        [1.0648, 1.0346, 1.0270,  ..., 1.0144, 1.0375, 0.9844]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9824],
         [12.6008],
         [13.0518],
         ...,
         [12.9821],
         [12.5418],
         [12.8109]],
        [[ 9.3543],
         [ 9.5149],
         [ 9.3282],
         ...,
         [ 9.3544],
         [ 9.5427],
         [ 9.4226]],
        [[ 8.9823],
         [ 9.1897],
         [ 8.9483],
         ...,
         [ 8.9825],
         [ 9.2253],
         [ 9.0711]],
        ...,
        [[ 8.5412],
         [ 8.8016],
         [ 8.4982],
         ...,
         [ 8.5414],
         [ 8.8459],
         [ 8.6529]],
        [[ 9.7113],
         [ 9.8253],
         [ 9.6932],
         ...,
         [ 9.7114],
         [ 9.8454],
         [ 9.7593]],
        [[10.5482],
         [10.5466],
         [10.5501],
         ...,
         [10.5482],
         [10.5479],
         [10.5454]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9783, 0.9733, 0.9792,  ..., 0.9783, 0.9725, 0.9760],
        [0.9304, 0.9325, 0.9300,  ..., 0.9304, 0.9328, 0.9313],
        [0.9254, 0.9282, 0.9250,  ..., 0.9254, 0.9286, 0.9266],
        ...,
        [0.9196, 0.9230, 0.9190,  ..., 0.9196, 0.9236, 0.9211],
        [0.9351, 0.9366, 0.9348,  ..., 0.9351, 0.9368, 0.9357],
        [0.9461, 0.9461, 0.9462,  ..., 0.9461, 0.9461, 0.9461]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8546],
         [12.1597],
         [11.8842],
         ...,
         [11.8429],
         [12.1721],
         [11.9943]],
        [[10.3008],
         [10.5007],
         [10.3858],
         ...,
         [10.3694],
         [10.5092],
         [10.4225]],
        [[10.1232],
         [10.3118],
         [10.2139],
         ...,
         [10.2002],
         [10.3198],
         [10.2428]],
        ...,
        [[ 9.9071],
         [10.0820],
         [10.0046],
         ...,
         [ 9.9941],
         [10.0895],
         [10.0241]],
        [[10.4676],
         [10.6782],
         [10.5470],
         ...,
         [10.5280],
         [10.6871],
         [10.5912]],
        [[10.8451],
         [11.0806],
         [10.9116],
         ...,
         [10.8868],
         [11.0904],
         [10.9731]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0208, 1.0273, 1.0214,  ..., 1.0205, 1.0276, 1.0238],
        [0.9875, 0.9917, 0.9893,  ..., 0.9889, 0.9919, 0.9901],
        [0.9836, 0.9877, 0.9856,  ..., 0.9853, 0.9879, 0.9862],
        ...,
        [0.9790, 0.9828, 0.9811,  ..., 0.9809, 0.9829, 0.9815],
        [0.9910, 0.9955, 0.9927,  ..., 0.9923, 0.9957, 0.9937],
        [0.9991, 1.0042, 1.0006,  ..., 1.0000, 1.0044, 1.0019]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.1665],
         [18.9437],
         [17.0454],
         ...,
         [16.2055],
         [19.1553],
         [15.2386]],
        [[17.7044],
         [16.3440],
         [15.9097],
         ...,
         [15.6116],
         [16.4649],
         [14.4847]],
        [[17.4213],
         [16.0480],
         [15.7745],
         ...,
         [15.5396],
         [16.1593],
         [14.3940]],
        ...,
        ...,.1314]],
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:545: RuntimeWarning: Optimization failed on the second try, after generating a new set of initial conditions.
         [15.5218],,
         [14.3585]],
        [[16.8944],
         [16.2931],
         [15.5371],
         ...,
         [15.1184],
         [16.3846],
         [14.6344]],
        [[17.3313],
         [16.8512],
         [15.7442],
         ...,
         [15.2736],
         [16.9653],
         [14.8149]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0401, 1.0378, 1.0043,  ..., 0.9944, 1.0407, 0.9880],
        [1.0112, 1.0005, 0.9907,  ..., 0.9843, 1.0019, 0.9762],
        [1.0078, 0.9962, 0.9891,  ..., 0.9831, 0.9974, 0.9748],
        ...,
        [1.0036, 0.9910, 0.9871,  ..., 0.9816, 0.9920, 0.9731],
        [1.0143, 1.0045, 0.9922,  ..., 0.9854, 1.0060, 0.9776],
        [1.0214, 1.0136, 0.9956,  ..., 0.9880, 1.0155, 0.9805]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1335],
         [12.8731],
         [13.1116],
         ...,
         [13.0833],
         [12.8357],
         [13.1319]],
        [[ 9.2985],
         [ 9.3972],
         [ 9.3064],
         ...,
         [ 9.3166],
         [ 9.4124],
         [ 9.2991]],
        [[ 8.9094],
         [ 9.0381],
         [ 8.9198],
         ...,
         [ 8.9332],
         [ 9.0578],
         [ 8.9102]],
        ...,
        [[ 8.4491],
         [ 8.6114],
         [ 8.4621],
         ...,
         [ 8.4791],
         [ 8.6362],
         [ 8.4501]],
        [[ 9.6728],
         [ 9.7413],
         [ 9.6782],
         ...,
         [ 9.6853],
         [ 9.7521],
         [ 9.6733]],
        [[10.5530],
         [10.5460],
         [10.5521],
         ...,
         [10.5511],
         [10.5456],
         [10.5529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9793, 0.9758, 0.9790,  ..., 0.9786, 0.9754, 0.9793],
        [0.9286, 0.9299, 0.9287,  ..., 0.9288, 0.9301, 0.9286],
        [0.9235, 0.9252, 0.9236,  ..., 0.9238, 0.9254, 0.9235],
        ...,
        [0.9174, 0.9195, 0.9176,  ..., 0.9178, 0.9199, 0.9174],
        [0.9336, 0.9345, 0.9336,  ..., 0.9337, 0.9346, 0.9336],
        [0.9452, 0.9451, 0.9452,  ..., 0.9452, 0.9451, 0.9452]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9253],
         [12.1178],
         [12.0052],
         ...,
         [11.9504],
         [12.1255],
         [11.9860]],
        [[10.3995],
         [10.4756],
         [10.4264],
         ...,
         [10.4077],
         [10.4799],
         [10.4196]],
        [[10.2247],
         [10.2885],
         [10.2460],
         ...,
         [10.2311],
         [10.2923],
         [10.2405]],
        ...,
        [[10.0119],
         [10.0608],
         [10.0264],
         ...,
         [10.0161],
         [10.0643],
         [10.0225]],
        [[10.5635],
         [10.6514],
         [10.5958],
         ...,
         [10.5734],
         [10.6560],
         [10.5877]],
        [[10.9346],
         [11.0499],
         [10.9793],
         ...,
         [10.9485],
         [11.0553],
         [10.9684]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0211, 1.0253, 1.0228,  ..., 1.0217, 1.0254, 1.0224],
        [0.9884, 0.9900, 0.9890,  ..., 0.9886, 0.9901, 0.9888],
        [0.9847, 0.9860, 0.9851,  ..., 0.9848, 0.9861, 0.9850],
        ...,
        [0.9801, 0.9811, 0.9804,  ..., 0.9802, 0.9812, 0.9803],
        [0.9919, 0.9938, 0.9926,  ..., 0.9921, 0.9939, 0.9924],
        [0.9999, 1.0024, 1.0008,  ..., 1.0002, 1.0025, 1.0006]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.3370],
         [17.8141],
         [15.7822],
         ...,
         [15.3876],
         [17.9524],
         [15.2938]],
        [[15.9946],
         [15.8114],
         [15.1498],
         ...,
         [14.7627],
         [15.8636],
         [14.6194]],
        [[15.8358],
         [15.5797],
         [15.0733],
         ...,
         [14.6871],
         [15.6225],
         [14.5380]],
        ...,
        [[15.6409],
         [15.2968],
         [14.9789],
         ...,
         [14.5938],
         [15.3284],
         [14.4376]],
        [[16.1426],
         [16.0284],
         [15.2208],
         ...,
         [14.8328],
         [16.0894],
         [14.6949]],
        [[16.4740],
         [16.5178],
         [15.3786],
         ...,
         [14.9887],
         [16.5992],
         [14.8630]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0205, 1.0283, 0.9952,  ..., 0.9888, 1.0305, 0.9873],
        [0.9987, 0.9957, 0.9849,  ..., 0.9786, 0.9965, 0.9763],
        [0.9961, 0.9919, 0.9837,  ..., 0.9774, 0.9926, 0.9750],
        ...,
        [0.9929, 0.9873, 0.9822,  ..., 0.9759, 0.9878, 0.9733],
        [1.0011, 0.9992, 0.9861,  ..., 0.9798, 1.0002, 0.9775],
        [1.0065, 1.0072, 0.9887,  ..., 0.9823, 1.0085, 0.9803]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0269],
         [12.9614],
         [13.0698],
         ...,
         [13.0825],
         [12.9505],
         [13.0970]],
        [[ 9.3374],
         [ 9.3623],
         [ 9.3216],
         ...,
         [ 9.3169],
         [ 9.3666],
         [ 9.3116]],
        [[ 8.9604],
         [ 8.9929],
         [ 8.9396],
         ...,
         [ 8.9336],
         [ 8.9983],
         [ 8.9266]],
        ...,
        [[ 8.5135],
         [ 8.5544],
         [ 8.4872],
         ...,
         [ 8.4796],
         [ 8.5614],
         [ 8.4708]],
        [[ 9.6996],
         [ 9.7169],
         [ 9.6887],
         ...,
         [ 9.6855],
         [ 9.7199],
         [ 9.6818]],
        [[10.5494],
         [10.5477],
         [10.5507],
         ...,
         [10.5511],
         [10.5474],
         [10.5516]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9783, 0.9775, 0.9789,  ..., 0.9791, 0.9773, 0.9793],
        [0.9296, 0.9299, 0.9294,  ..., 0.9293, 0.9300, 0.9292],
        [0.9246, 0.9250, 0.9243,  ..., 0.9242, 0.9251, 0.9241],
        ...,
        [0.9187, 0.9192, 0.9183,  ..., 0.9182, 0.9193, 0.9181],
        [0.9344, 0.9346, 0.9342,  ..., 0.9342, 0.9346, 0.9341],
        [0.9456, 0.9456, 0.9456,  ..., 0.9456, 0.9456, 0.9456]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9980],
         [12.0879],
         [12.0394],
         ...,
         [12.0107],
         [12.0975],
         [11.9827]],
        [[10.4238],
         [10.4604],
         [10.4393],
         ...,
         [10.4284],
         [10.4651],
         [10.4184]],
        [[10.2439],
         [10.2748],
         [10.2566],
         ...,
         [10.2476],
         [10.2789],
         [10.2396]],
        ...,
        [[10.0249],
         [10.0490],
         [10.0344],
         ...,
         [10.0275],
         [10.0525],
         [10.0219]],
        [[10.5927],
         [10.6347],
         [10.6109],
         ...,
         [10.5981],
         [10.6399],
         [10.5863]],
        [[10.9752],
         [11.0297],
         [10.9994],
         ...,
         [10.9825],
         [11.0360],
         [10.9665]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0263, 1.0282, 1.0272,  ..., 1.0266, 1.0284, 1.0260],
        [0.9926, 0.9933, 0.9929,  ..., 0.9927, 0.9934, 0.9924],
        [0.9887, 0.9894, 0.9890,  ..., 0.9888, 0.9894, 0.9886],
        ...,
        [0.9840, 0.9845, 0.9842,  ..., 0.9841, 0.9846, 0.9839],
        [0.9962, 0.9971, 0.9966,  ..., 0.9963, 0.9972, 0.9960],
        [1.0044, 1.0055, 1.0049,  ..., 1.0045, 1.0057, 1.0042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3154],
         [17.1297],
         [15.3222],
         ...,
         [15.1793],
         [17.2568],
         [15.2897]],
        [[15.3670],
         [15.5474],
         [14.8799],
         ...,
         [14.5657],
         [15.5914],
         [14.6741]],
        [[15.2535],
         [15.3620],
         [14.8261],
         ...,
         [14.4915],
         [15.3968],
         [14.5997]],
        ...,
        [[15.1138],
         [15.1349],
         [14.7595],
         ...,
         [14.3999],
         [15.1585],
         [14.5078]],
        [[15.4725],
         [15.7206],
         [14.9298],
         ...,
         [14.6346],
         [15.7733],
         [14.7432]],
        [[15.7080],
         [16.1096],
         [15.0405],
         ...,
         [14.7876],
         [16.1822],
         [14.8968]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0015, 1.0148, 0.9854,  ..., 0.9830, 1.0168, 0.9848],
        [0.9861, 0.9890, 0.9782,  ..., 0.9731, 0.9897, 0.9748],
        [0.9842, 0.9860, 0.9773,  ..., 0.9719, 0.9866, 0.9736],
        ...,
        [0.9820, 0.9823, 0.9762,  ..., 0.9704, 0.9827, 0.9721],
        [0.9878, 0.9918, 0.9790,  ..., 0.9742, 0.9927, 0.9759],
        [0.9916, 0.9982, 0.9808,  ..., 0.9767, 0.9994, 0.9784]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1096],
         [13.0437],
         [13.0673],
         ...,
         [13.1604],
         [13.0613],
         [13.1079]],
        [[ 9.3071],
         [ 9.3312],
         [ 9.3225],
         ...,
         [ 9.2890],
         [ 9.3247],
         [ 9.3077]],
        [[ 8.9207],
         [ 8.9522],
         [ 8.9408],
         ...,
         [ 8.8970],
         [ 8.9437],
         [ 8.9215]],
        ...,
        [[ 8.4633],
         [ 8.5032],
         [ 8.4888],
         ...,
         [ 8.4333],
         [ 8.4924],
         [ 8.4643]],
        [[ 9.6787],
         [ 9.6953],
         [ 9.6893],
         ...,
         [ 9.6663],
         [ 9.6908],
         [ 9.6791]],
        [[10.5521],
         [10.5499],
         [10.5506],
         ...,
         [10.5540],
         [10.5504],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9786, 0.9778, 0.9781,  ..., 0.9793, 0.9780, 0.9786],
        [0.9284, 0.9287, 0.9286,  ..., 0.9282, 0.9286, 0.9284],
        [0.9233, 0.9237, 0.9236,  ..., 0.9230, 0.9236, 0.9233],
        ...,
        [0.9172, 0.9178, 0.9176,  ..., 0.9168, 0.9176, 0.9173],
        [0.9333, 0.9335, 0.9334,  ..., 0.9331, 0.9335, 0.9333],
        [0.9448, 0.9448, 0.9448,  ..., 0.9449, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0124],
         [12.0869],
         [12.0521],
         ...,
         [12.0336],
         [12.0984],
         [11.9795]],
        [[10.4290],
         [10.4599],
         [10.4445],
         ...,
         [10.4370],
         [10.4655],
         [10.4173]],
        [[10.2481],
         [10.2744],
         [10.2610],
         ...,
         [10.2547],
         [10.2794],
         [10.2387]],
        ...,
        [[10.0279],
         [10.0487],
         [10.0378],
         ...,
         [10.0329],
         [10.0529],
         [10.0213]],
        [[10.5988],
         [10.6342],
         [10.6168],
         ...,
         [10.6082],
         [10.6404],
         [10.5850]],
        [[10.9835],
         [11.0290],
         [11.0071],
         ...,
         [10.9959],
         [11.0367],
         [10.9647]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0254, 1.0270, 1.0262,  ..., 1.0258, 1.0272, 1.0247],
        [0.9914, 0.9921, 0.9917,  ..., 0.9916, 0.9922, 0.9912],
        [0.9875, 0.9881, 0.9878,  ..., 0.9877, 0.9882, 0.9873],
        ...,
        [0.9828, 0.9833, 0.9830,  ..., 0.9829, 0.9833, 0.9827],
        [0.9951, 0.9958, 0.9954,  ..., 0.9953, 0.9959, 0.9948],
        [1.0033, 1.0043, 1.0038,  ..., 1.0036, 1.0044, 1.0029]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0356],
         [17.0832],
         [15.1909],
         ...,
         [15.1047],
         [17.2202],
         [15.2933]],
        [[15.2224],
         [15.5296],
         [14.7909],
         ...,
         [14.4718],
         [15.5783],
         [14.6866]],
        [[15.1247],
         [15.3474],
         [14.7421],
         ...,
         [14.3953],
         [15.3863],
         [14.6132]],
        ...,
        [[15.0042],
         [15.1241],
         [14.6818],
         ...,
         [14.3009],
         [15.1512],
         [14.5226]],
        [[15.3132],
         [15.6997],
         [14.8361],
         ...,
         [14.5428],
         [15.7578],
         [14.7547]],
        [[15.5155],
         [16.0818],
         [14.9362],
         ...,
         [14.7006],
         [16.1610],
         [14.9061]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9960, 1.0131, 0.9823,  ..., 0.9809, 1.0153, 0.9840],
        [0.9828, 0.9878, 0.9758,  ..., 0.9706, 0.9886, 0.9741],
        [0.9812, 0.9848, 0.9750,  ..., 0.9694, 0.9855, 0.9729],
        ...,
        [0.9793, 0.9812, 0.9740,  ..., 0.9678, 0.9817, 0.9714],
        [0.9843, 0.9906, 0.9765,  ..., 0.9718, 0.9915, 0.9752],
        [0.9876, 0.9968, 0.9782,  ..., 0.9743, 0.9981, 0.9777]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1159],
         [13.0500],
         [13.0671],
         ...,
         [13.1664],
         [13.0699],
         [13.1087]],
        [[ 9.3048],
         [ 9.3289],
         [ 9.3226],
         ...,
         [ 9.2869],
         [ 9.3215],
         [ 9.3074]],
        [[ 8.9177],
         [ 8.9492],
         [ 8.9409],
         ...,
         [ 8.8942],
         [ 8.9396],
         [ 8.9211]],
        ...,
        [[ 8.4595],
         [ 8.4993],
         [ 8.4889],
         ...,
         [ 8.4298],
         [ 8.4872],
         [ 8.4638]],
        [[ 9.6772],
         [ 9.6937],
         [ 9.6894],
         ...,
         [ 9.6649],
         [ 9.6887],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9780, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9281, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9331, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9448,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0135],
         [12.0868],
         [12.0531],
         ...,
         [12.0353],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2484],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0380],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5993],
         [10.6341],
         [10.6172],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9841],
         [11.0290],
         [11.0077],
         ...,
         [10.9969],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0246],
        [0.9913, 0.9920, 0.9917,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9832, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9947],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0147],
         [17.0797],
         [15.1811],
         ...,
         [15.0992],
         [17.2174],
         [15.2936]],
        [[15.2116],
         [15.5282],
         [14.7842],
         ...,
         [14.4647],
         [15.5774],
         [14.6876]],
        [[15.1151],
         [15.3462],
         [14.7358],
         ...,
         [14.3880],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9961],
         [15.1233],
         [14.6760],
         ...,
         [14.2934],
         [15.1507],
         [14.5237]],
        [[15.3013],
         [15.6982],
         [14.8290],
         ...,
         [14.5359],
         [15.7566],
         [14.7556]],
        [[15.5012],
         [16.0797],
         [14.9284],
         ...,
         [14.6941],
         [16.1594],
         [14.9068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0130, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9826, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9729],
        ...,
        [0.9791, 0.9811, 0.9739,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9752],
        [0.9873, 0.9967, 0.9780,  ..., 0.9742, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1164],
         [13.0505],
         [13.0671],
         ...,
         [13.1668],
         [13.0705],
         [13.1088]],
        [[ 9.3047],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2484],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5993],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0077],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0131],
         [17.0794],
         [15.1803],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2108],
         [15.5281],
         [14.7837],
         ...,
         [14.4642],
         [15.5773],
         [14.6877]],
        [[15.1143],
         [15.3462],
         [14.7353],
         ...,
         [14.3875],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2929],
         [15.1506],
         [14.5238]],
        [[15.3004],
         [15.6980],
         [14.8285],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.5000],
         [16.0796],
         [14.9278],
         ...,
         [14.6936],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9826, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1143],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0748],
         [12.9772],
         [13.1004],
         ...,
         [13.0664],
         [12.9564],
         [13.0735]],
        [[ 9.3197],
         [ 9.3563],
         [ 9.3104],
         ...,
         [ 9.3228],
         [ 9.3643],
         [ 9.3202]],
        [[ 8.9372],
         [ 8.9849],
         [ 8.9250],
         ...,
         [ 8.9413],
         [ 8.9954],
         [ 8.9379]],
        ...,
        [[ 8.4842],
         [ 8.5445],
         [ 8.4688],
         ...,
         [ 8.4893],
         [ 8.5576],
         [ 8.4850]],
        [[ 9.6874],
         [ 9.7127],
         [ 9.6810],
         ...,
         [ 9.6895],
         [ 9.7183],
         [ 9.6877]],
        [[10.5508],
         [10.5480],
         [10.5517],
         ...,
         [10.5506],
         [10.5475],
         [10.5508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9789, 0.9776, 0.9793,  ..., 0.9788, 0.9774, 0.9789],
        [0.9293, 0.9298, 0.9292,  ..., 0.9293, 0.9299, 0.9293],
        [0.9242, 0.9249, 0.9241,  ..., 0.9243, 0.9250, 0.9242],
        ...,
        [0.9182, 0.9190, 0.9180,  ..., 0.9183, 0.9192, 0.9183],
        [0.9341, 0.9345, 0.9341,  ..., 0.9342, 0.9346, 0.9342],
        [0.9456, 0.9455, 0.9456,  ..., 0.9456, 0.9455, 0.9456]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0168],
         [12.0822],
         [12.0562],
         ...,
         [12.0297],
         [12.0895],
         [11.9794]],
        [[10.4306],
         [10.4577],
         [10.4462],
         ...,
         [10.4355],
         [10.4612],
         [10.4173]],
        [[10.2494],
         [10.2725],
         [10.2625],
         ...,
         [10.2534],
         [10.2755],
         [10.2387]],
        ...,
        [[10.0289],
         [10.0471],
         [10.0389],
         ...,
         [10.0319],
         [10.0496],
         [10.0212]],
        [[10.6008],
         [10.6317],
         [10.6187],
         ...,
         [10.6064],
         [10.6356],
         [10.5850]],
        [[10.9860],
         [11.0260],
         [11.0096],
         ...,
         [10.9936],
         [11.0308],
         [10.9646]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0256, 1.0270, 1.0264,  ..., 1.0259, 1.0271, 1.0248],
        [0.9916, 0.9922, 0.9919,  ..., 0.9917, 0.9922, 0.9913],
        [0.9877, 0.9882, 0.9880,  ..., 0.9878, 0.9882, 0.9875],
        ...,
        [0.9830, 0.9833, 0.9832,  ..., 0.9830, 0.9834, 0.9828],
        [0.9952, 0.9959, 0.9956,  ..., 0.9953, 0.9960, 0.9949],
        [1.0035, 1.0043, 1.0040,  ..., 1.0036, 1.0044, 1.0030]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0046],
         [17.0194],
         [15.1967],
         ...,
         [15.0869],
         [17.1229],
         [15.2897]],
        [[15.2118],
         [15.5022],
         [14.7965],
         ...,
         [14.4668],
         [15.5326],
         [14.6886]],
        [[15.1164],
         [15.3241],
         [14.7477],
         ...,
         [14.3918],
         [15.3463],
         [14.6158]],
        ...,
        [[14.9988],
         [15.1058],
         [14.6874],
         ...,
         [14.2993],
         [15.1181],
         [14.5260]],
        [[15.3003],
         [15.6685],
         [14.8417],
         ...,
         [14.5363],
         [15.7066],
         [14.7561]],
        [[15.4977],
         [16.0419],
         [14.9419],
         ...,
         [14.6910],
         [16.0975],
         [14.9061]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9960, 1.0125, 0.9829,  ..., 0.9811, 1.0142, 0.9844],
        [0.9831, 0.9879, 0.9764,  ..., 0.9710, 0.9884, 0.9746],
        [0.9816, 0.9850, 0.9756,  ..., 0.9698, 0.9853, 0.9734],
        ...,
        [0.9797, 0.9814, 0.9746,  ..., 0.9683, 0.9816, 0.9720],
        [0.9846, 0.9906, 0.9771,  ..., 0.9722, 0.9912, 0.9757],
        [0.9878, 0.9966, 0.9788,  ..., 0.9747, 0.9975, 0.9782]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1100],
         [13.0392],
         [13.0722],
         ...,
         [13.1512],
         [13.0528],
         [13.1033]],
        [[ 9.3070],
         [ 9.3329],
         [ 9.3207],
         ...,
         [ 9.2923],
         [ 9.3278],
         [ 9.3094]],
        [[ 8.9205],
         [ 8.9544],
         [ 8.9385],
         ...,
         [ 8.9012],
         [ 8.9478],
         [ 8.9237]],
        ...,
        [[ 8.4631],
         [ 8.5060],
         [ 8.4858],
         ...,
         [ 8.4386],
         [ 8.4976],
         [ 8.4670]],
        [[ 9.6786],
         [ 9.6965],
         [ 9.6881],
         ...,
         [ 9.6686],
         [ 9.6930],
         [ 9.6803]],
        [[10.5521],
         [10.5497],
         [10.5508],
         ...,
         [10.5537],
         [10.5501],
         [10.5518]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9788, 0.9778, 0.9783,  ..., 0.9793, 0.9780, 0.9787],
        [0.9285, 0.9288, 0.9287,  ..., 0.9283, 0.9288, 0.9285],
        [0.9234, 0.9238, 0.9236,  ..., 0.9231, 0.9238, 0.9234],
        ...,
        [0.9173, 0.9179, 0.9177,  ..., 0.9170, 0.9178, 0.9174],
        [0.9334, 0.9337, 0.9335,  ..., 0.9333, 0.9336, 0.9334],
        [0.9450, 0.9449, 0.9449,  ..., 0.9450, 0.9449, 0.9450]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0141],
         [12.0861],
         [12.0536],
         ...,
         [12.0346],
         [12.0971],
         [11.9792]],
        [[10.4296],
         [10.4595],
         [10.4451],
         ...,
         [10.4374],
         [10.4649],
         [10.4173]],
        [[10.2486],
         [10.2741],
         [10.2616],
         ...,
         [10.2550],
         [10.2788],
         [10.2387]],
        ...,
        [[10.0283],
         [10.0484],
         [10.0382],
         ...,
         [10.0331],
         [10.0524],
         [10.0212]],
        [[10.5996],
         [10.6338],
         [10.6175],
         ...,
         [10.6086],
         [10.6397],
         [10.5849]],
        [[10.9845],
         [11.0285],
         [11.0080],
         ...,
         [10.9965],
         [11.0358],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0262,  ..., 1.0258, 1.0271, 1.0246],
        [0.9914, 0.9920, 0.9917,  ..., 0.9915, 0.9921, 0.9911],
        [0.9875, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9873],
        ...,
        [0.9827, 0.9832, 0.9830,  ..., 0.9829, 0.9833, 0.9826],
        [0.9950, 0.9957, 0.9954,  ..., 0.9952, 0.9959, 0.9947],
        [1.0033, 1.0042, 1.0038,  ..., 1.0035, 1.0044, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0116],
         [17.0702],
         [15.1828],
         ...,
         [15.0969],
         [17.2027],
         [15.2930]],
        [[15.2109],
         [15.5241],
         [14.7856],
         ...,
         [14.4645],
         [15.5704],
         [14.6878]],
        [[15.1146],
         [15.3427],
         [14.7372],
         ...,
         [14.3881],
         [15.3794],
         [14.6146]],
        ...,
        [[14.9959],
         [15.1206],
         [14.6773],
         ...,
         [14.2938],
         [15.1456],
         [14.5242]],
        [[15.3003],
         [15.6935],
         [14.8305],
         ...,
         [14.5354],
         [15.7488],
         [14.7557]],
        [[15.4996],
         [16.0737],
         [14.9299],
         ...,
         [14.6932],
         [16.1498],
         [14.9068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9957, 1.0129, 0.9822,  ..., 0.9808, 1.0150, 0.9840],
        [0.9826, 0.9877, 0.9757,  ..., 0.9705, 0.9885, 0.9741],
        [0.9811, 0.9848, 0.9749,  ..., 0.9693, 0.9854, 0.9729],
        ...,
        [0.9791, 0.9812, 0.9740,  ..., 0.9677, 0.9816, 0.9715],
        [0.9841, 0.9905, 0.9765,  ..., 0.9717, 0.9914, 0.9752],
        [0.9873, 0.9967, 0.9781,  ..., 0.9742, 0.9979, 0.9777]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1155],
         [13.0489],
         [13.0678],
         ...,
         [13.1646],
         [13.0680],
         [13.1080]],
        [[ 9.3050],
         [ 9.3293],
         [ 9.3223],
         ...,
         [ 9.2876],
         [ 9.3222],
         [ 9.3077]],
        [[ 8.9179],
         [ 8.9497],
         [ 8.9406],
         ...,
         [ 8.8950],
         [ 8.9405],
         [ 8.9214]],
        ...,
        [[ 8.4598],
         [ 8.5000],
         [ 8.4885],
         ...,
         [ 8.4308],
         [ 8.4883],
         [ 8.4642]],
        [[ 9.6773],
         [ 9.6940],
         [ 9.6892],
         ...,
         [ 9.6653],
         [ 9.6891],
         [ 9.6791]],
        [[10.5523],
         [10.5500],
         [10.5506],
         ...,
         [10.5542],
         [10.5506],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9780, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9281, 0.9285, 0.9284],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9177, 0.9175,  ..., 0.9168, 0.9175, 0.9172],
        [0.9332, 0.9335, 0.9334,  ..., 0.9331, 0.9334, 0.9333],
        [0.9448, 0.9448, 0.9448,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0137],
         [12.0867],
         [12.0532],
         ...,
         [12.0353],
         [12.0983],
         [11.9792]],
        [[10.4295],
         [10.4598],
         [10.4449],
         ...,
         [10.4377],
         [10.4655],
         [10.4173]],
        [[10.2485],
         [10.2743],
         [10.2614],
         ...,
         [10.2553],
         [10.2793],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0486],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6403],
         [10.5849]],
        [[10.9842],
         [11.0289],
         [11.0078],
         ...,
         [10.9970],
         [11.0366],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0246],
        [0.9913, 0.9920, 0.9917,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9832, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9947],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0127],
         [17.0781],
         [15.1806],
         ...,
         [15.0985],
         [17.2151],
         [15.2936]],
        [[15.2107],
         [15.5275],
         [14.7839],
         ...,
         [14.4642],
         [15.5763],
         [14.6877]],
        [[15.1143],
         [15.3457],
         [14.7355],
         ...,
         [14.3875],
         [15.3846],
         [14.6144]],
        ...,
        [[14.9954],
         [15.1229],
         [14.6757],
         ...,
         [14.2929],
         [15.1499],
         [14.5239]],
        [[15.3003],
         [15.6974],
         [14.8287],
         ...,
         [14.5353],
         [15.7554],
         [14.7557]],
        [[15.4999],
         [16.0787],
         [14.9281],
         ...,
         [14.6935],
         [16.1579],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9826, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9741],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9729],
        ...,
        [0.9791, 0.9811, 0.9739,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9752],
        [0.9873, 0.9967, 0.9780,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1163],
         [13.0503],
         [13.0672],
         ...,
         [13.1665],
         [13.0702],
         [13.1087]],
        [[ 9.3047],
         [ 9.3287],
         [ 9.3225],
         ...,
         [ 9.2869],
         [ 9.3214],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9490],
         [ 8.9409],
         ...,
         [ 8.8941],
         [ 8.9394],
         [ 8.9211]],
        ...,
        [[ 8.4593],
         [ 8.4991],
         [ 8.4888],
         ...,
         [ 8.4297],
         [ 8.4870],
         [ 8.4638]],
        [[ 9.6771],
         [ 9.6936],
         [ 9.6893],
         ...,
         [ 9.6649],
         [ 9.6886],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9281, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9448,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0354],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2743],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0486],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0792],
         [15.1803],
         ...,
         [15.0987],
         [17.2169],
         [15.2936]],
        [[15.2107],
         [15.5280],
         [14.7837],
         ...,
         [14.4641],
         [15.5771],
         [14.6877]],
        [[15.1143],
         [15.3461],
         [14.7353],
         ...,
         [14.3874],
         [15.3853],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1232],
         [14.6755],
         ...,
         [14.2928],
         [15.1505],
         [14.5238]],
        [[15.3003],
         [15.6979],
         [14.8285],
         ...,
         [14.5353],
         [15.7563],
         [14.7557]],
        [[15.4999],
         [16.0794],
         [14.9278],
         ...,
         [14.6935],
         [16.1591],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9826, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9729],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1164],
         [13.0505],
         [13.0671],
         ...,
         [13.1668],
         [13.0705],
         [13.1088]],
        [[ 9.3047],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3461],
         [14.7353],
         ...,
         [14.3874],
         [15.3854],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0795],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.1165],
         [13.0506],
         [13.0671],
         ...,
         [13.1669],
         [13.0706],
         [13.1088]],
        [[ 9.3046],
         [ 9.3287],
         [ 9.3226],
         ...,
         [ 9.2868],
         [ 9.3213],
         [ 9.3074]],
        [[ 8.9175],
         [ 8.9489],
         [ 8.9409],
         ...,
         [ 8.8940],
         [ 8.9393],
         [ 8.9211]],
        ...,
        [[ 8.4592],
         [ 8.4990],
         [ 8.4889],
         ...,
         [ 8.4295],
         [ 8.4868],
         [ 8.4638]],
        [[ 9.6770],
         [ 9.6936],
         [ 9.6894],
         ...,
         [ 9.6648],
         [ 9.6885],
         [ 9.6789]],
        [[10.5523],
         [10.5501],
         [10.5506],
         ...,
         [10.5543],
         [10.5507],
         [10.5520]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9787, 0.9778, 0.9780,  ..., 0.9793, 0.9781, 0.9786],
        [0.9283, 0.9286, 0.9285,  ..., 0.9280, 0.9285, 0.9283],
        [0.9232, 0.9236, 0.9235,  ..., 0.9229, 0.9235, 0.9232],
        ...,
        [0.9171, 0.9176, 0.9175,  ..., 0.9167, 0.9175, 0.9172],
        [0.9332, 0.9334, 0.9334,  ..., 0.9330, 0.9334, 0.9332],
        [0.9448, 0.9447, 0.9447,  ..., 0.9448, 0.9448, 0.9448]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0136],
         [12.0868],
         [12.0532],
         ...,
         [12.0355],
         [12.0985],
         [11.9792]],
        [[10.4294],
         [10.4599],
         [10.4449],
         ...,
         [10.4377],
         [10.4656],
         [10.4173]],
        [[10.2485],
         [10.2744],
         [10.2614],
         ...,
         [10.2553],
         [10.2794],
         [10.2386]],
        ...,
        [[10.0282],
         [10.0487],
         [10.0381],
         ...,
         [10.0333],
         [10.0529],
         [10.0212]],
        [[10.5994],
         [10.6341],
         [10.6173],
         ...,
         [10.6090],
         [10.6404],
         [10.5849]],
        [[10.9842],
         [11.0290],
         [11.0078],
         ...,
         [10.9970],
         [11.0367],
         [10.9645]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0253, 1.0269, 1.0261,  ..., 1.0258, 1.0271, 1.0245],
        [0.9913, 0.9920, 0.9916,  ..., 0.9915, 0.9921, 0.9911],
        [0.9874, 0.9880, 0.9877,  ..., 0.9876, 0.9881, 0.9872],
        ...,
        [0.9827, 0.9831, 0.9829,  ..., 0.9828, 0.9832, 0.9826],
        [0.9950, 0.9957, 0.9953,  ..., 0.9952, 0.9958, 0.9946],
        [1.0032, 1.0042, 1.0037,  ..., 1.0035, 1.0043, 1.0028]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0129],
         [17.0794],
         [15.1802],
         ...,
         [15.0988],
         [17.2172],
         [15.2937]],
        [[15.2107],
         [15.5281],
         [14.7836],
         ...,
         [14.4641],
         [15.5773],
         [14.6877]],
        [[15.1142],
         [15.3462],
         [14.7353],
         ...,
         [14.3874],
         [15.3855],
         [14.6143]],
        ...,
        [[14.9954],
         [15.1233],
         [14.6755],
         ...,
         [14.2928],
         [15.1506],
         [14.5238]],
        [[15.3003],
         [15.6980],
         [14.8284],
         ...,
         [14.5353],
         [15.7565],
         [14.7557]],
        [[15.4999],
         [16.0796],
         [14.9278],
         ...,
         [14.6935],
         [16.1593],
         [14.9069]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9956, 1.0129, 0.9821,  ..., 0.9807, 1.0152, 0.9839],
        [0.9825, 0.9877, 0.9756,  ..., 0.9704, 0.9885, 0.9740],
        [0.9810, 0.9848, 0.9748,  ..., 0.9692, 0.9854, 0.9728],
        ...,
        [0.9790, 0.9811, 0.9738,  ..., 0.9676, 0.9816, 0.9714],
        [0.9840, 0.9905, 0.9763,  ..., 0.9716, 0.9914, 0.9751],
        [0.9873, 0.9967, 0.9779,  ..., 0.9741, 0.9980, 0.9776]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.8114],
         [39.6539],
         [52.2050],
         ...,
         [22.1631],
         [26.8124],
         [71.2646]],
        [[10.8635],
         [25.0911],
         [34.1760],
         ...,
         [12.8682],
         [15.3732],
         [58.4115]],
        [[10.3703],
         [23.7091],
         [32.4298],
         ...,
         [12.0307],
         [14.3503],
         [56.9909]],
        ...,
        [[ 9.7892],
         [22.0991],
         [30.3861],
         ...,
         [11.0666],
         [13.1748],
         [55.2757]],
        [[11.3396],
         [26.4385],
         [35.8714],
         ...,
         [13.6932],
         [16.3822],
         [59.7544]],
        [[12.4654],
         [29.6731],
         [39.9162],
         ...,
         [15.7054],
         [18.8493],
         [62.8280]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.9111, 1.2989, 1.5031,  ..., 1.0145, 1.0901, 1.8131],
        [0.8307, 1.0621, 1.2098,  ..., 0.8633, 0.9040, 1.6040],
        [0.8226, 1.0396, 1.1814,  ..., 0.8497, 0.8874, 1.5809],
        ...,
        [0.8132, 1.0134, 1.1482,  ..., 0.8340, 0.8683, 1.5530],
        [0.8384, 1.0840, 1.2374,  ..., 0.8767, 0.9204, 1.6259],
        [0.8567, 1.1366, 1.3032,  ..., 0.9094, 0.9606, 1.6759]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.3957],
         [21.1318],
         [30.9818],
         ...,
         [22.5232],
         [18.0989],
         [24.3660]],
        [[13.6679],
         [14.8287],
         [20.6494],
         ...,
         [19.9916],
         [11.8907],
         [20.9235]],
        [[13.4679],
         [14.1926],
         [19.6379],
         ...,
         [19.6986],
         [11.2882],
         [20.5327]],
        ...,
        [[13.2239],
         [13.4408],
         [18.4511],
         ...,
         [19.3410],
         [10.5826],
         [20.0578]],
        [[13.8551],
         [15.4413],
         [21.6294],
         ...,
         [20.2659],
         [12.4755],
         [21.2909]],
        [[14.2773],
         [16.8842],
         [23.9596],
         ...,
         [20.8845],
         [13.8698],
         [22.1247]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9254, 1.0187, 1.1789,  ..., 1.0413, 0.9693, 1.0713],
        [0.8973, 0.9162, 1.0108,  ..., 1.0001, 0.8684, 1.0153],
        [0.8940, 0.9058, 0.9944,  ..., 0.9954, 0.8586, 1.0089],
        ...,
        [0.8901, 0.8936, 0.9751,  ..., 0.9896, 0.8471, 1.0012],
        [0.9003, 0.9261, 1.0268,  ..., 1.0046, 0.8779, 1.0213],
        [0.9072, 0.9496, 1.0647,  ..., 1.0147, 0.9006, 1.0348]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.7186],
         [19.5912],
         [27.8470],
         ...,
         [22.0073],
         [17.7944],
         [23.9546]],
        [[12.9375],
         [15.7928],
         [20.4425],
         ...,
         [18.8203],
         [12.9218],
         [20.4795]],
        [[12.6294],
         [15.3770],
         [19.6751],
         ...,
         [18.4593],
         [12.4200],
         [20.0860]],
        ...,
        [[12.2571],
         [14.8761],
         [18.7625],
         ...,
         [18.0209],
         [11.8241],
         [19.6081]],
        [[13.2286],
         [16.1866],
         [21.1776],
         ...,
         [19.1598],
         [13.4031],
         [20.8497]],
        [[13.8944],
         [17.0908],
         [22.8946],
         ...,
         [19.9308],
         [14.5294],
         [21.6903]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9036, 0.9666, 1.1009,  ..., 1.0059, 0.9374, 1.0376],
        [0.8584, 0.9048, 0.9804,  ..., 0.9541, 0.8581, 0.9811],
        [0.8534, 0.8981, 0.9680,  ..., 0.9482, 0.8500, 0.9747],
        ...,
        [0.8473, 0.8899, 0.9531,  ..., 0.9411, 0.8403, 0.9669],
        [0.8631, 0.9112, 0.9924,  ..., 0.9596, 0.8660, 0.9871],
        [0.8739, 0.9259, 1.0203,  ..., 0.9721, 0.8843, 1.0007]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.8193],
         [20.2824],
         [26.8407],
         ...,
         [23.4175],
         [18.2429],
         [24.2531]],
        [[12.2292],
         [16.7687],
         [20.3923],
         ...,
         [20.2368],
         [13.4656],
         [20.7652]],
        [[11.8457],
         [16.3784],
         [19.7104],
         ...,
         [19.8744],
         [12.9688],
         [20.3699]],
        ...,
        [[11.3863],
         [15.9066],
         [18.8956],
         ...,
         [19.4336],
         [12.3777],
         [19.8897]],
        [[12.5943],
         [17.1373],
         [21.0428],
         ...,
         [20.5773],
         [13.9411],
         [21.1370]],
        [[13.4390],
         [17.9795],
         [22.5526],
         ...,
         [21.3490],
         [15.0505],
         [21.9810]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9126, 0.9852, 1.0918,  ..., 1.0362, 0.9520, 1.0497],
        [0.8542, 0.9280, 0.9870,  ..., 0.9844, 0.8743, 0.9930],
        [0.8479, 0.9217, 0.9759,  ..., 0.9785, 0.8662, 0.9866],
        ...,
        [0.8405, 0.9140, 0.9626,  ..., 0.9714, 0.8566, 0.9788],
        [0.8601, 0.9340, 0.9975,  ..., 0.9900, 0.8820, 0.9991],
        [0.8739, 0.9477, 1.0221,  ..., 1.0025, 0.9001, 1.0128]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.9393],
         [32.5079],
         [21.6301],
         ...,
         [34.5888],
         [24.3919],
         [26.1544]],
        [[ 9.3116],
         [29.8251],
         [19.6232],
         ...,
         [33.2903],
         [23.0612],
         [22.6565]],
        [[ 8.3283],
         [29.5088],
         [19.3881],
         ...,
         [33.1330],
         [22.9016],
         [22.2574]],
        ...,
        [[ 7.2509],
         [29.1209],
         [19.1002],
         ...,
         [32.9388],
         [22.7051],
         [21.7718]],
        [[10.3222],
         [30.1202],
         [19.8428],
         ...,
         [33.4362],
         [23.2095],
         [23.0313]],
        [[12.9575],
         [30.7816],
         [20.3361],
         ...,
         [33.7604],
         [23.5402],
         [23.8805]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0211, 1.1767, 0.9998,  ..., 1.2105, 1.0447, 1.0734],
        [0.7994, 1.1331, 0.9671,  ..., 1.1894, 1.0230, 1.0165],
        [0.7834, 1.1279, 0.9633,  ..., 1.1869, 1.0204, 1.0100],
        ...,
        [0.7659, 1.1216, 0.9586,  ..., 1.1837, 1.0172, 1.0021],
        [0.8158, 1.1379, 0.9707,  ..., 1.1918, 1.0255, 1.0226],
        [0.8587, 1.1486, 0.9787,  ..., 1.1971, 1.0308, 1.0364]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7046],
         [24.0417],
         [23.0164],
         ...,
         [28.1932],
         [20.4841],
         [25.1091]],
        [[10.4342],
         [21.6701],
         [20.1868],
         ...,
         [25.2605],
         [16.7445],
         [21.5977]],
        [[ 9.7731],
         [21.3933],
         [19.8616],
         ...,
         [24.9193],
         [16.3319],
         [21.1987]],
        ...,
        [[ 9.0105],
         [21.0547],
         [19.4653],
         ...,
         [24.5023],
         [15.8338],
         [20.7137]],
        [[11.0841],
         [21.9289],
         [20.4917],
         ...,
         [25.5796],
         [17.1348],
         [21.9728]],
        [[12.6652],
         [22.5108],
         [21.1809],
         ...,
         [26.2980],
         [18.0284],
         [22.8236]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9733, 1.0763, 1.0597,  ..., 1.1439, 1.0185, 1.0937],
        [0.8550, 1.0378, 1.0136,  ..., 1.0962, 0.9577, 1.0366],
        [0.8443, 1.0333, 1.0084,  ..., 1.0906, 0.9510, 1.0301],
        ...,
        [0.8319, 1.0278, 1.0019,  ..., 1.0838, 0.9429, 1.0222],
        [0.8656, 1.0420, 1.0186,  ..., 1.1014, 0.9640, 1.0427],
        [0.8913, 1.0514, 1.0298,  ..., 1.1130, 0.9785, 1.0565]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.2593],
         [24.6274],
         [21.8713],
         ...,
         [27.7428],
         [21.2223],
         [24.8466]],
        [[10.2124],
         [21.7202],
         [20.1215],
         ...,
         [24.5526],
         [18.1290],
         [21.3259]],
        [[ 9.5037],
         [21.3850],
         [19.9148],
         ...,
         [24.1841],
         [17.7789],
         [20.9263]],
        ...,
        [[ 8.6919],
         [20.9762],
         [19.6613],
         ...,
         [23.7344],
         [17.3537],
         [20.4408]],
        [[10.9137],
         [22.0342],
         [20.3142],
         ...,
         [24.8977],
         [18.4584],
         [21.7016]],
        [[12.6361],
         [22.7434],
         [20.7459],
         ...,
         [25.6767],
         [19.2065],
         [22.5542]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9757, 1.0793, 1.0345,  ..., 1.1300, 1.0239, 1.0828],
        [0.8448, 1.0320, 1.0060,  ..., 1.0781, 0.9736, 1.0256],
        [0.8333, 1.0265, 1.0026,  ..., 1.0721, 0.9679, 1.0191],
        ...,
        [0.8201, 1.0199, 0.9985,  ..., 1.0648, 0.9610, 1.0112],
        [0.8562, 1.0371, 1.0091,  ..., 1.0837, 0.9789, 1.0317],
        [0.8842, 1.0486, 1.0161,  ..., 1.0963, 0.9911, 1.0456]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.1403],
         [25.7262],
         [23.1646],
         ...,
         [25.6697],
         [28.4443],
         [23.7862]],
        [[ 9.5355],
         [21.8554],
         [19.0818],
         ...,
         [21.9617],
         [25.1006],
         [20.2868]],
        [[ 8.6406],
         [21.4187],
         [18.6293],
         ...,
         [21.5416],
         [24.7151],
         [19.8911]],
        ...,
        [[ 7.6457],
         [20.8888],
         [18.0825],
         ...,
         [21.0314],
         [24.2447],
         [19.4106]],
        [[10.4439],
         [22.2666],
         [19.5093],
         ...,
         [22.3568],
         [25.4620],
         [20.6591]],
        [[12.7662],
         [23.2013],
         [20.4870],
         ...,
         [23.2539],
         [26.2778],
         [21.5051]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0002, 1.0748, 1.0331,  ..., 1.0739, 1.1190, 1.0432],
        [0.8115, 1.0118, 0.9667,  ..., 1.0136, 1.0646, 0.9863],
        [0.7969, 1.0047, 0.9594,  ..., 1.0067, 1.0584, 0.9799],
        ...,
        [0.7807, 0.9961, 0.9505,  ..., 0.9984, 1.0507, 0.9721],
        [0.8262, 1.0185, 0.9737,  ..., 1.0200, 1.0705, 0.9924],
        [0.8640, 1.0337, 0.9896,  ..., 1.0346, 1.0838, 1.0061]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.1911],
         [23.1207],
         [26.1698],
         ...,
         [21.3808],
         [29.8854],
         [23.6466]],
        [[ 9.5278],
         [20.4825],
         [18.2334],
         ...,
         [18.2896],
         [25.2697],
         [20.1556]],
        [[ 8.6301],
         [20.1776],
         [17.4358],
         ...,
         [17.9395],
         [24.7504],
         [19.7609]],
        ...,
        [[ 7.6327],
         [19.8054],
         [16.4941],
         ...,
         [17.5142],
         [24.1205],
         [19.2818]],
        [[10.4392],
         [20.7681],
         [19.0022],
         ...,
         [18.6190],
         [25.7589],
         [20.5269]],
        [[12.7708],
         [21.4124],
         [20.8152],
         ...,
         [19.3669],
         [26.8721],
         [21.3707]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0008, 1.0321, 1.0817,  ..., 1.0038, 1.1422, 1.0407],
        [0.8111, 0.9892, 0.9527,  ..., 0.9536, 1.0671, 0.9839],
        [0.7965, 0.9843, 0.9397,  ..., 0.9479, 1.0587, 0.9775],
        ...,
        [0.7802, 0.9782, 0.9244,  ..., 0.9410, 1.0484, 0.9697],
        [0.8259, 0.9939, 0.9652,  ..., 0.9589, 1.0751, 0.9900],
        [0.8638, 1.0044, 0.9946,  ..., 0.9711, 1.0932, 1.0037]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.1650],
         [24.5455],
         [24.6621],
         ...,
         [23.5754],
         [29.3486],
         [23.7183]],
        [[ 9.5317],
         [21.1449],
         [18.6471],
         ...,
         [20.0422],
         [25.1911],
         [20.2227]],
        [[ 8.6355],
         [20.7582],
         [18.0128],
         ...,
         [19.6434],
         [24.7193],
         [19.8275]],
        ...,
        [[ 7.6393],
         [20.2879],
         [17.2554],
         ...,
         [19.1594],
         [24.1459],
         [19.3477]],
        [[10.4416],
         [21.5084],
         [19.2525],
         ...,
         [20.4175],
         [25.6348],
         [20.5946]],
        [[12.7684],
         [22.3327],
         [20.6590],
         ...,
         [21.2709],
         [26.6415],
         [21.4396]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0005, 1.0555, 1.0574,  ..., 1.0397, 1.1336, 1.0420],
        [0.8113, 1.0002, 0.9595,  ..., 0.9822, 1.0660, 0.9852],
        [0.7967, 0.9939, 0.9492,  ..., 0.9757, 1.0583, 0.9787],
        ...,
        [0.7805, 0.9862, 0.9369,  ..., 0.9679, 1.0490, 0.9709],
        [0.8261, 1.0061, 0.9694,  ..., 0.9883, 1.0732, 0.9912],
        [0.8639, 1.0195, 0.9922,  ..., 1.0022, 1.0896, 1.0049]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.9023],
         [23.3522],
         [26.2679],
         ...,
         [22.8623],
         [24.0054],
         [24.1894]],
        [[10.0065],
         [20.2004],
         [18.4518],
         ...,
         [19.4434],
         [20.4001],
         [20.6717]],
        [[ 9.2489],
         [19.8411],
         [17.6625],
         ...,
         [19.0574],
         [19.9932],
         [20.2734]],
        ...,
        [[ 8.3878],
         [19.4040],
         [16.7295],
         ...,
         [18.5890],
         [19.4995],
         [19.7898]],
        [[10.7610],
         [20.5379],
         [19.2118],
         ...,
         [19.8067],
         [20.7830],
         [21.0463]],
        [[12.6333],
         [21.3028],
         [21.0016],
         ...,
         [20.6325],
         [21.6538],
         [21.8971]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9796, 1.0520, 1.0994,  ..., 1.0441, 1.0627, 1.0656],
        [0.8350, 1.0008, 0.9723,  ..., 0.9884, 1.0040, 1.0084],
        [0.8226, 0.9949, 0.9595,  ..., 0.9822, 0.9974, 1.0020],
        ...,
        [0.8086, 0.9878, 0.9443,  ..., 0.9746, 0.9894, 0.9941],
        [0.8472, 1.0063, 0.9847,  ..., 0.9944, 1.0102, 1.0145],
        [0.8777, 1.0187, 1.0138,  ..., 1.0078, 1.0244, 1.0284]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.2068],
         [26.0059],
         [28.3436],
         ...,
         [24.8361],
         [24.7620],
         [24.7044]],
        [[10.2314],
         [22.1927],
         [18.0700],
         ...,
         [21.1548],
         [21.0382],
         [21.1729]],
        [[ 9.5269],
         [21.7613],
         [17.0906],
         ...,
         [20.7388],
         [20.6181],
         [20.7724]],
        ...,
        [[ 8.7196],
         [21.2376],
         [15.9485],
         ...,
         [20.2338],
         [20.1082],
         [20.2858]],
        [[10.9280],
         [22.5985],
         [19.0239],
         ...,
         [21.5462],
         [21.4338],
         [21.5494]],
        [[12.6376],
         [23.5205],
         [21.3109],
         ...,
         [22.4359],
         [22.3330],
         [22.4043]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9732, 1.1000, 1.1381,  ..., 1.0810, 1.0798, 1.0789],
        [0.8435, 1.0380, 0.9710,  ..., 1.0211, 1.0192, 1.0214],
        [0.8320, 1.0310, 0.9550,  ..., 1.0144, 1.0124, 1.0149],
        ...,
        [0.8189, 1.0225, 0.9365,  ..., 1.0062, 1.0041, 1.0070],
        [0.8548, 1.0446, 0.9865,  ..., 1.0275, 1.0257, 1.0276],
        [0.8826, 1.0596, 1.0237,  ..., 1.0420, 1.0403, 1.0415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3357],
         [28.4682],
         [30.3181],
         ...,
         [27.6288],
         [23.3757],
         [25.3366]],
        [[11.3532],
         [24.3981],
         [18.0264],
         ...,
         [24.1537],
         [19.9051],
         [21.8358]],
        [[10.8531],
         [23.9365],
         [16.9028],
         ...,
         [23.7552],
         [19.5130],
         [21.4375]],
        ...,
        [[10.2630],
         [23.3758],
         [15.6050],
         ...,
         [23.2696],
         [19.0370],
         [20.9533]],
        [[11.8352],
         [24.8321],
         [19.1299],
         ...,
         [24.5277],
         [20.2741],
         [22.2100]],
        [[12.9726],
         [25.8173],
         [21.8101],
         ...,
         [25.3734],
         [21.1127],
         [23.0587]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9386, 1.1359, 1.1660,  ..., 1.1222, 1.0531, 1.0850],
        [0.8575, 1.0697, 0.9661,  ..., 1.0657, 0.9966, 1.0280],
        [0.8494, 1.0622, 0.9478,  ..., 1.0592, 0.9902, 1.0215],
        ...,
        [0.8398, 1.0531, 0.9267,  ..., 1.0513, 0.9825, 1.0137],
        [0.8654, 1.0768, 0.9840,  ..., 1.0718, 1.0026, 1.0341],
        [0.8839, 1.0928, 1.0276,  ..., 1.0856, 1.0163, 1.0479]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1033],
         [26.4669],
         [30.5946],
         ...,
         [26.1135],
         [24.9277],
         [24.6640]],
        [[10.7453],
         [22.4637],
         [17.9161],
         ...,
         [22.5137],
         [21.2222],
         [21.1491]],
        [[10.1445],
         [22.0123],
         [16.7678],
         ...,
         [22.1041],
         [20.8037],
         [20.7504]],
        ...,
        [[ 9.4452],
         [21.4646],
         [15.4443],
         ...,
         [21.6060],
         [20.2956],
         [20.2659]],
        [[11.3315],
         [22.8887],
         [19.0460],
         ...,
         [22.8986],
         [21.6162],
         [21.5240]],
        [[12.7408],
         [23.8552],
         [21.7979],
         ...,
         [23.7714],
         [22.5115],
         [22.3750]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9560, 1.1083, 1.1755,  ..., 1.1026, 1.0833, 1.0790],
        [0.8526, 1.0432, 0.9693,  ..., 1.0440, 1.0230, 1.0218],
        [0.8428, 1.0359, 0.9506,  ..., 1.0374, 1.0162, 1.0153],
        ...,
        [0.8315, 1.0270, 0.9290,  ..., 1.0293, 1.0080, 1.0075],
        [0.8622, 1.0501, 0.9876,  ..., 1.0503, 1.0294, 1.0279],
        [0.8851, 1.0658, 1.0324,  ..., 1.0645, 1.0440, 1.0418]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9215],
         [24.0811],
         [29.9507],
         ...,
         [24.2507],
         [26.0291],
         [23.9986]],
        [[10.3415],
         [20.4590],
         [17.3570],
         ...,
         [20.7202],
         [22.1381],
         [20.5042]],
        [[ 9.6611],
         [20.0503],
         [16.2236],
         ...,
         [20.3206],
         [21.6988],
         [20.1086]],
        ...,
        [[ 8.8784],
         [19.5544],
         [14.9191],
         ...,
         [19.8352],
         [21.1656],
         [19.6283]],
        [[11.0122],
         [20.8437],
         [18.4737],
         ...,
         [21.0961],
         [22.5516],
         [20.8763]],
        [[12.6501],
         [21.7184],
         [21.1985],
         ...,
         [21.9500],
         [23.4915],
         [21.7215]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9739, 1.0741, 1.1696,  ..., 1.0768, 1.1058, 1.0727],
        [0.8506, 1.0152, 0.9647,  ..., 1.0194, 1.0425, 1.0159],
        [0.8396, 1.0085, 0.9463,  ..., 1.0129, 1.0353, 1.0095],
        ...,
        [0.8268, 1.0005, 0.9251,  ..., 1.0050, 1.0267, 1.0017],
        [0.8615, 1.0214, 0.9829,  ..., 1.0255, 1.0492, 1.0220],
        [0.8882, 1.0357, 1.0272,  ..., 1.0394, 1.0645, 1.0357]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.0906],
         [22.8236],
         [22.4688],
         ...,
         [22.8256],
         [26.6638],
         [23.6291]],
        [[ 9.9541],
         [19.4251],
         [15.5079],
         ...,
         [19.4457],
         [22.7223],
         [20.1590]],
        [[ 9.1832],
         [19.0412],
         [14.8122],
         ...,
         [19.0637],
         [22.2768],
         [19.7665]],
        ...,
        [[ 8.3088],
         [18.5753],
         [13.9920],
         ...,
         [18.6000],
         [21.7359],
         [19.2899]],
        [[10.7232],
         [19.7863],
         [16.1792],
         ...,
         [19.8051],
         [23.1415],
         [20.5282]],
        [[12.6372],
         [20.6074],
         [17.7650],
         ...,
         [20.6220],
         [24.0941],
         [21.3672]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9810, 1.0417, 1.0360,  ..., 1.0418, 1.1042, 1.0548],
        [0.8324, 0.9865, 0.9228,  ..., 0.9868, 1.0401, 0.9984],
        [0.8199, 0.9802, 0.9114,  ..., 0.9806, 1.0328, 0.9920],
        ...,
        [0.8057, 0.9726, 0.8981,  ..., 0.9730, 1.0240, 0.9843],
        [0.8449, 0.9923, 0.9337,  ..., 0.9926, 1.0469, 1.0044],
        [0.8761, 1.0057, 0.9595,  ..., 1.0059, 1.0624, 1.0181]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.8591],
         [22.5119],
         [19.1382],
         ...,
         [22.3291],
         [25.4407],
         [23.7310]],
        [[ 9.7688],
         [19.2574],
         [14.6543],
         ...,
         [19.0196],
         [21.7224],
         [20.2543]],
        [[ 8.9475],
         [18.8887],
         [14.1779],
         ...,
         [18.6456],
         [21.3017],
         [19.8610]],
        ...,
        [[ 8.0234],
         [18.4410],
         [13.6081],
         ...,
         [18.1917],
         [20.7907],
         [19.3834]],
        [[10.5939],
         [19.6041],
         [15.1083],
         ...,
         [19.3715],
         [22.1182],
         [20.6243]],
        [[12.6695],
         [20.3915],
         [16.1604],
         ...,
         [20.1713],
         [23.0174],
         [21.4650]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9874, 1.0306, 0.9757,  ..., 1.0276, 1.0782, 1.0504],
        [0.8233, 0.9776, 0.9028,  ..., 0.9738, 1.0177, 0.9939],
        [0.8100, 0.9716, 0.8950,  ..., 0.9677, 1.0109, 0.9875],
        ...,
        [0.7949, 0.9644, 0.8858,  ..., 0.9603, 1.0026, 0.9797],
        [0.8367, 0.9833, 0.9102,  ..., 0.9795, 1.0242, 0.9999],
        [0.8705, 0.9961, 0.9273,  ..., 0.9925, 1.0388, 1.0135]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.1244],
         [23.5312],
         [22.2112],
         ...,
         [23.8715],
         [22.6320],
         [24.5973]],
        [[ 9.9451],
         [20.5809],
         [18.1306],
         ...,
         [20.4932],
         [19.3987],
         [21.0864]],
        [[ 9.1718],
         [20.2424],
         [17.6806],
         ...,
         [20.1097],
         [19.0320],
         [20.6882]],
        ...,
        [[ 8.2951],
         [19.8300],
         [17.1377],
         ...,
         [19.6437],
         [18.5865],
         [20.2044]],
        [[10.7167],
         [20.8984],
         [18.5561],
         ...,
         [20.8537],
         [19.7435],
         [21.4608]],
        [[12.6380],
         [21.6165],
         [19.5308],
         ...,
         [21.6719],
         [20.5262],
         [22.3107]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9813, 1.0530, 1.0315,  ..., 1.0585, 1.0383, 1.0703],
        [0.8320, 1.0050, 0.9651,  ..., 1.0035, 0.9857, 1.0132],
        [0.8194, 0.9995, 0.9578,  ..., 0.9973, 0.9798, 1.0067],
        ...,
        [0.8051, 0.9928, 0.9490,  ..., 0.9897, 0.9725, 0.9988],
        [0.8445, 1.0101, 0.9720,  ..., 1.0094, 0.9913, 1.0193],
        [0.8758, 1.0218, 0.9879,  ..., 1.0227, 1.0041, 1.0331]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.5714],
         [22.9348],
         [20.2798],
         ...,
         [22.9198],
         [24.3138],
         [24.0600]],
        [[ 9.8334],
         [19.7441],
         [15.8328],
         ...,
         [19.5597],
         [20.8025],
         [20.5650]],
        [[ 9.0302],
         [19.3813],
         [15.3550],
         ...,
         [19.1796],
         [20.4047],
         [20.1692]],
        ...,
        [[ 8.1240],
         [18.9403],
         [14.7820],
         ...,
         [18.7180],
         [19.9215],
         [19.6886]],
        [[10.6381],
         [20.0850],
         [16.2871],
         ...,
         [19.9173],
         [21.1766],
         [20.9372]],
        [[12.6546],
         [20.8583],
         [17.3363],
         ...,
         [20.7297],
         [22.0262],
         [21.7826]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9849, 1.0396, 0.9964,  ..., 1.0394, 1.0620, 1.0579],
        [0.8265, 0.9877, 0.9241,  ..., 0.9847, 1.0049, 1.0011],
        [0.8134, 0.9818, 0.9163,  ..., 0.9785, 0.9984, 0.9946],
        ...,
        [0.7987, 0.9746, 0.9070,  ..., 0.9710, 0.9906, 0.9868],
        [0.8396, 0.9932, 0.9315,  ..., 0.9905, 1.0110, 1.0071],
        [0.8724, 1.0058, 0.9485,  ..., 1.0037, 1.0248, 1.0209]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.1563],
         [23.5662],
         [20.5295],
         ...,
         [24.7278],
         [23.6461],
         [24.4996]],
        [[10.2500],
         [20.6045],
         [17.0456],
         ...,
         [21.3762],
         [20.3443],
         [20.9952]],
        [[ 9.5497],
         [20.2648],
         [16.6577],
         ...,
         [20.9942],
         [19.9691],
         [20.5979]],
        ...,
        [[ 8.7465],
         [19.8509],
         [16.1885],
         ...,
         [20.5296],
         [19.5129],
         [20.1151]],
        [[10.9421],
         [20.9232],
         [17.4118],
         ...,
         [21.7350],
         [20.6971],
         [21.3689]],
        [[12.6393],
         [21.6440],
         [18.2479],
         ...,
         [22.5482],
         [21.4971],
         [22.2172]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9752, 1.0632, 1.0138,  ..., 1.0821, 1.0645, 1.0784],
        [0.8466, 1.0150, 0.9571,  ..., 1.0276, 1.0108, 1.0214],
        [0.8352, 1.0095, 0.9508,  ..., 1.0214, 1.0047, 1.0149],
        ...,
        [0.8222, 1.0028, 0.9432,  ..., 1.0138, 0.9973, 1.0071],
        [0.8579, 1.0202, 0.9631,  ..., 1.0334, 1.0165, 1.0275],
        [0.8855, 1.0319, 0.9767,  ..., 1.0466, 1.0295, 1.0413]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6181],
         [23.7563],
         [21.5699],
         ...,
         [24.8597],
         [23.5318],
         [24.5752]],
        [[10.4736],
         [20.7145],
         [18.6716],
         ...,
         [21.4718],
         [20.2900],
         [21.0683]],
        [[ 9.8206],
         [20.3661],
         [18.3411],
         ...,
         [21.0859],
         [19.9211],
         [20.6706]],
        ...,
        [[ 9.0664],
         [19.9418],
         [17.9389],
         ...,
         [20.6166],
         [19.4725],
         [20.1873]],
        [[11.1150],
         [21.0414],
         [18.9821],
         ...,
         [21.8344],
         [20.6367],
         [21.4423]],
        [[12.6727],
         [21.7812],
         [19.6856],
         ...,
         [22.6562],
         [21.4227],
         [22.2913]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9654, 1.0652, 1.0297,  ..., 1.0832, 1.0616, 1.0786],
        [0.8492, 1.0158, 0.9825,  ..., 1.0281, 1.0089, 1.0215],
        [0.8386, 1.0101, 0.9772,  ..., 1.0218, 1.0029, 1.0150],
        ...,
        [0.8263, 1.0032, 0.9706,  ..., 1.0142, 0.9956, 1.0072],
        [0.8596, 1.0211, 0.9876,  ..., 1.0340, 1.0145, 1.0276],
        [0.8850, 1.0331, 0.9990,  ..., 1.0473, 1.0273, 1.0414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7568],
         [23.2610],
         [20.5387],
         ...,
         [23.7078],
         [24.0037],
         [24.2647]],
        [[10.0493],
         [20.1255],
         [16.7458],
         ...,
         [20.3113],
         [20.5953],
         [20.7630]],
        [[ 9.3022],
         [19.7680],
         [16.3279],
         ...,
         [19.9262],
         [20.2085],
         [20.3663]],
        ...,
        [[ 8.4517],
         [19.3331],
         [15.8236],
         ...,
         [19.4584],
         [19.7385],
         [19.8844]],
        [[10.7922],
         [20.4613],
         [17.1411],
         ...,
         [20.6734],
         [20.9589],
         [21.1362]],
        [[12.6316],
         [21.2223],
         [18.0468],
         ...,
         [21.4955],
         [21.7842],
         [21.9834]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9786, 1.0519, 1.0076,  ..., 1.0592, 1.0640, 1.0682],
        [0.8370, 1.0009, 0.9459,  ..., 1.0039, 1.0086, 1.0113],
        [0.8249, 0.9951, 0.9391,  ..., 0.9977, 1.0023, 1.0048],
        ...,
        [0.8110, 0.9880, 0.9309,  ..., 0.9901, 0.9946, 0.9970],
        [0.8491, 1.0064, 0.9524,  ..., 1.0098, 1.0145, 1.0173],
        [0.8790, 1.0187, 0.9671,  ..., 1.0232, 1.0279, 1.0311]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.1967],
         [23.0917],
         [20.3362],
         ...,
         [23.3239],
         [24.1615],
         [24.1605]],
        [[ 9.9259],
         [19.9335],
         [16.1646],
         ...,
         [19.9420],
         [20.6984],
         [20.6620]],
        [[ 9.1477],
         [19.5738],
         [15.7117],
         ...,
         [19.5590],
         [20.3058],
         [20.2658]],
        ...,
        [[ 8.2661],
         [19.1365],
         [15.1671],
         ...,
         [19.0938],
         [19.8288],
         [19.7845]],
        [[10.7031],
         [20.2713],
         [16.5943],
         ...,
         [20.3022],
         [21.0676],
         [21.0347]],
        [[12.6401],
         [21.0373],
         [17.5835],
         ...,
         [21.1203],
         [21.9058],
         [21.8811]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9818, 1.0452, 1.0004,  ..., 1.0490, 1.0626, 1.0626],
        [0.8310, 0.9938, 0.9325,  ..., 0.9940, 1.0063, 1.0057],
        [0.8184, 0.9880, 0.9252,  ..., 0.9877, 0.9999, 0.9992],
        ...,
        [0.8041, 0.9809, 0.9163,  ..., 0.9802, 0.9921, 0.9914],
        [0.8437, 0.9993, 0.9395,  ..., 0.9998, 1.0123, 1.0117],
        [0.8752, 1.0118, 0.9556,  ..., 1.0131, 1.0259, 1.0255]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.2823],
         [23.0599],
         [20.3038],
         ...,
         [23.2522],
         [24.1909],
         [24.1410]],
        [[ 9.9039],
         [19.8978],
         [16.0598],
         ...,
         [19.8740],
         [20.7177],
         [20.6432]],
        [[ 9.1198],
         [19.5379],
         [15.6003],
         ...,
         [19.4915],
         [20.3240],
         [20.2471]],
        ...,
        [[ 8.2324],
         [19.1001],
         [15.0483],
         ...,
         [19.0270],
         [19.8458],
         [19.7659]],
        [[10.6875],
         [20.2361],
         [16.4960],
         ...,
         [20.2338],
         [21.0880],
         [21.0158]],
        [[12.6429],
         [21.0029],
         [17.5009],
         ...,
         [21.0509],
         [21.9285],
         [21.8620]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9825, 1.0439, 0.9991,  ..., 1.0471, 1.0623, 1.0615],
        [0.8300, 0.9925, 0.9301,  ..., 0.9921, 1.0059, 1.0046],
        [0.8172, 0.9867, 0.9226,  ..., 0.9859, 0.9995, 0.9982],
        ...,
        [0.8028, 0.9795, 0.9136,  ..., 0.9784, 0.9917, 0.9904],
        [0.8427, 0.9980, 0.9372,  ..., 0.9980, 1.0119, 1.0107],
        [0.8745, 1.0105, 0.9535,  ..., 1.0113, 1.0255, 1.0245]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.2999],
         [23.0533],
         [20.2974],
         ...,
         [23.2376],
         [24.1969],
         [24.1370]],
        [[ 9.8994],
         [19.8905],
         [16.0385],
         ...,
         [19.8601],
         [20.7217],
         [20.6394]],
        [[ 9.1142],
         [19.5305],
         [15.5777],
         ...,
         [19.4777],
         [20.3278],
         [20.2432]],
        ...,
        [[ 8.2256],
         [19.0927],
         [15.0241],
         ...,
         [19.0133],
         [19.8493],
         [19.7621]],
        [[10.6843],
         [20.2288],
         [16.4760],
         ...,
         [20.2198],
         [21.0921],
         [21.0119]],
        [[12.6435],
         [20.9958],
         [17.4842],
         ...,
         [21.0368],
         [21.9332],
         [21.8581]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9826, 1.0437, 0.9989,  ..., 1.0467, 1.0623, 1.0613],
        [0.8298, 0.9923, 0.9296,  ..., 0.9918, 1.0058, 1.0044],
        [0.8170, 0.9864, 0.9221,  ..., 0.9855, 0.9994, 0.9980],
        ...,
        [0.8025, 0.9793, 0.9131,  ..., 0.9780, 0.9916, 0.9902],
        [0.8425, 0.9978, 0.9367,  ..., 0.9976, 1.0118, 1.0105],
        [0.8744, 1.0102, 0.9531,  ..., 1.0109, 1.0255, 1.0243]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3036],
         [23.0520],
         [20.2960],
         ...,
         [23.2345],
         [24.1982],
         [24.1362]],
        [[ 9.8985],
         [19.8890],
         [16.0341],
         ...,
         [19.8572],
         [20.7225],
         [20.6385]],
        [[ 9.1130],
         [19.5290],
         [15.5730],
         ...,
         [19.4749],
         [20.3286],
         [20.2424]],
        ...,
        [[ 8.2242],
         [19.0911],
         [15.0191],
         ...,
         [19.0105],
         [19.8500],
         [19.7613]],
        [[10.6836],
         [20.2273],
         [16.4719],
         ...,
         [20.2169],
         [21.0930],
         [21.0111]],
        [[12.6436],
         [20.9944],
         [17.4807],
         ...,
         [21.0338],
         [21.9342],
         [21.8573]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9855, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0105],
        [0.8744, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3044],
         [23.0517],
         [20.2958],
         ...,
         [23.2339],
         [24.1984],
         [24.1360]],
        [[ 9.8983],
         [19.8887],
         [16.0332],
         ...,
         [19.8566],
         [20.7227],
         [20.6384]],
        [[ 9.1127],
         [19.5287],
         [15.5720],
         ...,
         [19.4743],
         [20.3287],
         [20.2423]],
        ...,
        [[ 8.2239],
         [19.0908],
         [15.0180],
         ...,
         [19.0099],
         [19.8501],
         [19.7612]],
        [[10.6835],
         [20.2270],
         [16.4710],
         ...,
         [20.2163],
         [21.0932],
         [21.0110]],
        [[12.6437],
         [20.9941],
         [17.4800],
         ...,
         [21.0332],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3045],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0330],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0098],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2270],
         [16.4708],
         ...,
         [20.2162],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0331],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0098],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3046],
         [23.0516],
         [20.2957],
         ...,
         [23.2337],
         [24.1985],
         [24.1360]],
        [[ 9.8982],
         [19.8886],
         [16.0329],
         ...,
         [19.8565],
         [20.7227],
         [20.6383]],
        [[ 9.1127],
         [19.5286],
         [15.5718],
         ...,
         [19.4741],
         [20.3288],
         [20.2422]],
        ...,
        [[ 8.2238],
         [19.0907],
         [15.0178],
         ...,
         [19.0097],
         [19.8502],
         [19.7611]],
        [[10.6835],
         [20.2269],
         [16.4708],
         ...,
         [20.2161],
         [21.0932],
         [21.0109]],
        [[12.6437],
         [20.9940],
         [17.4798],
         ...,
         [21.0330],
         [21.9344],
         [21.8571]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9827, 1.0436, 0.9988,  ..., 1.0466, 1.0623, 1.0613],
        [0.8297, 0.9922, 0.9295,  ..., 0.9917, 1.0058, 1.0044],
        [0.8169, 0.9863, 0.9220,  ..., 0.9854, 0.9993, 0.9979],
        ...,
        [0.8025, 0.9792, 0.9130,  ..., 0.9779, 0.9916, 0.9901],
        [0.8425, 0.9977, 0.9366,  ..., 0.9975, 1.0118, 1.0104],
        [0.8743, 1.0102, 0.9530,  ..., 1.0108, 1.0255, 1.0242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7354],
         [24.5572],
         [20.9994],
         ...,
         [25.9091],
         [24.4392],
         [24.7200]],
        [[10.4205],
         [21.2503],
         [17.9281],
         ...,
         [22.5550],
         [20.9402],
         [21.2069]],
        [[ 9.7566],
         [20.8732],
         [17.5806],
         ...,
         [22.1712],
         [20.5435],
         [20.8083]],
        ...,
        [[ 8.9911],
         [20.4144],
         [17.1586],
         ...,
         [21.7039],
         [20.0615],
         [20.3240]],
        [[11.0735],
         [21.6045],
         [18.2550],
         ...,
         [22.9152],
         [21.3133],
         [21.5817]],
        [[12.6627],
         [22.4070],
         [18.9977],
         ...,
         [23.7306],
         [22.1602],
         [22.4324]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9683, 1.0792, 1.0214,  ..., 1.1012, 1.0773, 1.0819],
        [0.8493, 1.0254, 0.9714,  ..., 1.0467, 1.0204, 1.0247],
        [0.8385, 1.0193, 0.9658,  ..., 1.0404, 1.0139, 1.0183],
        ...,
        [0.8261, 1.0118, 0.9589,  ..., 1.0328, 1.0061, 1.0104],
        [0.8599, 1.0312, 0.9767,  ..., 1.0525, 1.0265, 1.0308],
        [0.8858, 1.0443, 0.9888,  ..., 1.0658, 1.0402, 1.0447]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.8602],
         [23.4214],
         [20.3662],
         ...,
         [23.9102],
         [24.2600],
         [24.2857]],
        [[10.0187],
         [20.2275],
         [16.4965],
         ...,
         [20.5044],
         [20.7783],
         [20.7822]],
        [[ 9.2641],
         [19.8637],
         [16.0718],
         ...,
         [20.1181],
         [20.3836],
         [20.3853]],
        ...,
        [[ 8.4060],
         [19.4213],
         [15.5597],
         ...,
         [19.6487],
         [19.9041],
         [19.9031]],
        [[10.7699],
         [20.5693],
         [16.8986],
         ...,
         [20.8677],
         [21.1495],
         [21.1555]],
        [[12.6327],
         [21.3440],
         [17.8210],
         ...,
         [21.6923],
         [21.9921],
         [22.0033]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9794, 1.0535, 1.0038,  ..., 1.0615, 1.0672, 1.0676],
        [0.8356, 1.0016, 0.9409,  ..., 1.0061, 1.0106, 1.0106],
        [0.8233, 0.9957, 0.9340,  ..., 0.9998, 1.0041, 1.0042],
        ...,
        [0.8093, 0.9885, 0.9257,  ..., 0.9922, 0.9963, 0.9963],
        [0.8478, 1.0072, 0.9475,  ..., 1.0120, 1.0166, 1.0167],
        [0.8781, 1.0198, 0.9625,  ..., 1.0254, 1.0303, 1.0305]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.5810],
         [24.4903],
         [21.7783],
         ...,
         [25.1239],
         [24.4067],
         [24.5548]],
        [[10.4910],
         [21.0892],
         [18.8789],
         ...,
         [21.6601],
         [20.9027],
         [21.0416]],
        [[ 9.8414],
         [20.7025],
         [18.5480],
         ...,
         [21.2659],
         [20.5055],
         [20.6432]],
        ...,
        [[ 9.0909],
         [20.2323],
         [18.1453],
         ...,
         [20.7867],
         [20.0230],
         [20.1592]],
        [[11.1286],
         [21.4527],
         [19.1897],
         ...,
         [22.0304],
         [21.2762],
         [21.4162]],
        [[12.6762],
         [22.2770],
         [19.8937],
         ...,
         [22.8703],
         [22.1243],
         [22.2666]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9654, 1.0778, 1.0337,  ..., 1.0881, 1.0764, 1.0788],
        [0.8501, 1.0225, 0.9865,  ..., 1.0318, 1.0194, 1.0217],
        [0.8395, 1.0162, 0.9811,  ..., 1.0254, 1.0130, 1.0152],
        ...,
        [0.8273, 1.0085, 0.9746,  ..., 1.0176, 1.0051, 1.0074],
        [0.8605, 1.0284, 0.9916,  ..., 1.0378, 1.0255, 1.0278],
        [0.8856, 1.0418, 1.0030,  ..., 1.0514, 1.0393, 1.0416]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.3882],
         [24.6536],
         [23.4048],
         ...,
         [25.1086],
         [24.4114],
         [24.5118]],
        [[10.5863],
         [21.1419],
         [20.3199],
         ...,
         [21.6069],
         [20.8982],
         [20.9974]],
        [[ 9.9556],
         [20.7435],
         [19.9675],
         ...,
         [21.2088],
         [20.5001],
         [20.5990]],
        ...,
        [[ 9.2248],
         [20.2595],
         [19.5386],
         ...,
         [20.7250],
         [20.0164],
         [20.1149]],
        [[11.2040],
         [21.5165],
         [20.6508],
         ...,
         [21.9810],
         [21.2726],
         [21.3721]],
        [[12.6977],
         [22.3667],
         [21.4002],
         ...,
         [22.8295],
         [22.1228],
         [22.2227]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9615, 1.0796, 1.0593,  ..., 1.0870, 1.0757, 1.0773],
        [0.8508, 1.0225, 1.0091,  ..., 1.0301, 1.0185, 1.0202],
        [0.8406, 1.0160, 1.0034,  ..., 1.0236, 1.0121, 1.0137],
        ...,
        [0.8287, 1.0082, 0.9964,  ..., 1.0157, 1.0042, 1.0058],
        [0.8609, 1.0286, 1.0145,  ..., 1.0362, 1.0246, 1.0263],
        [0.8852, 1.0424, 1.0267,  ..., 1.0500, 1.0385, 1.0401]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9213],
         [24.4325],
         [24.3719],
         ...,
         [24.3309],
         [24.3699],
         [24.3542]],
        [[10.3416],
         [20.8845],
         [20.8319],
         ...,
         [20.8176],
         [20.8535],
         [20.8421]],
        [[ 9.6611],
         [20.4828],
         [20.4311],
         ...,
         [20.4196],
         [20.4551],
         [20.4442]],
        ...,
        [[ 8.8785],
         [19.9949],
         [19.9443],
         ...,
         [19.9362],
         [19.9712],
         [19.9608]],
        [[11.0123],
         [21.2624],
         [21.2089],
         ...,
         [21.1920],
         [21.2282],
         [21.2164]],
        [[12.6502],
         [22.1206],
         [22.0652],
         ...,
         [22.0420],
         [22.0790],
         [22.0662]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9724, 1.0783, 1.0773,  ..., 1.0767, 1.0773, 1.0770],
        [0.8491, 1.0206, 1.0198,  ..., 1.0195, 1.0201, 1.0199],
        [0.8381, 1.0141, 1.0132,  ..., 1.0131, 1.0136, 1.0135],
        ...,
        [0.8253, 1.0061, 1.0053,  ..., 1.0052, 1.0058, 1.0056],
        [0.8600, 1.0268, 1.0259,  ..., 1.0256, 1.0262, 1.0260],
        [0.8867, 1.0407, 1.0398,  ..., 1.0394, 1.0400, 1.0398]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7029],
         [24.4906],
         [24.5894],
         ...,
         [24.4434],
         [24.3745],
         [24.3675]],
        [[10.4349],
         [20.9254],
         [21.0198],
         ...,
         [20.9243],
         [20.8565],
         [20.8551]],
        [[ 9.7740],
         [20.5218],
         [20.6157],
         ...,
         [20.5255],
         [20.4579],
         [20.4571]],
        ...,
        [[ 9.0116],
         [20.0317],
         [20.1248],
         ...,
         [20.0411],
         [19.9738],
         [19.9737]],
        [[11.0847],
         [21.3051],
         [21.4000],
         ...,
         [21.2994],
         [21.2314],
         [21.2294]],
        [[12.6653],
         [22.1674],
         [22.2635],
         ...,
         [22.1510],
         [22.0826],
         [22.0793]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9679, 1.0783, 1.0799,  ..., 1.0775, 1.0764, 1.0763],
        [0.8497, 1.0203, 1.0218,  ..., 1.0203, 1.0192, 1.0191],
        [0.8389, 1.0137, 1.0152,  ..., 1.0138, 1.0127, 1.0127],
        ...,
        [0.8265, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0265, 1.0280,  ..., 1.0264, 1.0253, 1.0252],
        [0.8859, 1.0405, 1.0420,  ..., 1.0402, 1.0391, 1.0391]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6942],
         [24.4930],
         [24.5983],
         ...,
         [24.4480],
         [24.3747],
         [24.3681]],
        [[10.4388],
         [20.9271],
         [21.0275],
         ...,
         [20.9287],
         [20.8566],
         [20.8556]],
        [[ 9.7787],
         [20.5234],
         [20.6232],
         ...,
         [20.5299],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0171],
         [20.0332],
         [20.1322],
         ...,
         [20.0454],
         [19.9739],
         [19.9742]],
        [[11.0878],
         [21.3068],
         [21.4079],
         ...,
         [21.3038],
         [21.2315],
         [21.2300]],
        [[12.6660],
         [22.1693],
         [22.2716],
         ...,
         [22.1554],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6235],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6938],
         [24.4931],
         [24.5987],
         ...,
         [24.4482],
         [24.3747],
         [24.3681]],
        [[10.4390],
         [20.9272],
         [21.0279],
         ...,
         [20.9289],
         [20.8566],
         [20.8557]],
        [[ 9.7789],
         [20.5235],
         [20.6236],
         ...,
         [20.5301],
         [20.4580],
         [20.4577]],
        ...,
        [[ 9.0174],
         [20.0333],
         [20.1325],
         ...,
         [20.0456],
         [19.9739],
         [19.9742]],
        [[11.0879],
         [21.3069],
         [21.4082],
         ...,
         [21.3040],
         [21.2315],
         [21.2300]],
        [[12.6661],
         [22.1694],
         [22.2720],
         ...,
         [22.1556],
         [22.0827],
         [22.0799]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9677, 1.0783, 1.0800,  ..., 1.0775, 1.0763, 1.0762],
        [0.8497, 1.0203, 1.0219,  ..., 1.0203, 1.0191, 1.0191],
        [0.8389, 1.0137, 1.0153,  ..., 1.0138, 1.0126, 1.0126],
        ...,
        [0.8266, 1.0057, 1.0073,  ..., 1.0059, 1.0048, 1.0048],
        [0.8602, 1.0264, 1.0281,  ..., 1.0264, 1.0252, 1.0252],
        [0.8859, 1.0405, 1.0421,  ..., 1.0403, 1.0391, 1.0390]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.8114],
         [39.6539],
         [52.2050],
         ...,
         [22.1631],
         [26.8124],
         [71.2646]],
        [[10.8635],
         [25.0911],
         [34.1760],
         ...,
         [12.8682],
         [15.3732],
         [58.4115]],
        [[10.3703],
         [23.7091],
         [32.4298],
         ...,
         [12.0307],
         [14.3503],
         [56.9909]],
        ...,
        [[ 9.7892],
         [22.0991],
         [30.3861],
         ...,
         [11.0666],
         [13.1748],
         [55.2757]],
        [[11.3396],
         [26.4385],
         [35.8714],
         ...,
         [13.6932],
         [16.3822],
         [59.7544]],
        [[12.4654],
         [29.6731],
         [39.9162],
         ...,
         [15.7054],
         [18.8493],
         [62.8280]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.9111, 1.2989, 1.5031,  ..., 1.0145, 1.0901, 1.8131],
        [0.8307, 1.0621, 1.2098,  ..., 0.8633, 0.9040, 1.6040],
        [0.8226, 1.0396, 1.1814,  ..., 0.8497, 0.8874, 1.5809],
        ...,
        [0.8132, 1.0134, 1.1482,  ..., 0.8340, 0.8683, 1.5530],
        [0.8384, 1.0840, 1.2374,  ..., 0.8767, 0.9204, 1.6259],
        [0.8567, 1.1366, 1.3032,  ..., 0.9094, 0.9606, 1.6759]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[52.1762],
         [26.3396],
         [14.8678],
         ...,
         [32.3088],
         [35.7901],
         [24.3660]],
        [[39.4306],
         [19.0390],
         [11.3084],
         ...,
         [26.9210],
         [23.2200],
         [20.9235]],
        [[38.0870],
         [18.2892],
         [10.9318],
         ...,
         [26.3198],
         [22.0091],
         [20.5327]],
        ...,
        [[36.4827],
         [17.3994],
         [10.4817],
         ...,
         [25.5923],
         [20.5935],
         [20.0578]],
        [[40.7132],
         [19.7585],
         [11.6677],
         ...,
         [27.4882],
         [24.3970],
         [21.2909]],
        [[43.6930],
         [21.4439],
         [12.5013],
         ...,
         [28.7824],
         [27.2097],
         [22.1247]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.5512, 1.1310, 0.9444,  ..., 1.2281, 1.2847, 1.0989],
        [1.3439, 1.0123, 0.8865,  ..., 1.1405, 1.0803, 1.0429],
        [1.3221, 1.0001, 0.8804,  ..., 1.1307, 1.0606, 1.0366],
        ...,
        [1.2960, 0.9856, 0.8731,  ..., 1.1189, 1.0376, 1.0288],
        [1.3648, 1.0240, 0.8924,  ..., 1.1497, 1.0994, 1.0489],
        [1.4133, 1.0514, 0.9059,  ..., 1.1707, 1.1452, 1.0625]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[37.9722],
         [23.1841],
         [15.5781],
         ...,
         [26.0022],
         [31.4987],
         [25.2598]],
        [[32.7554],
         [18.7863],
         [10.9307],
         ...,
         [22.2153],
         [22.4102],
         [21.7306]],
        [[32.1616],
         [18.3035],
         [10.4617],
         ...,
         [21.7866],
         [21.4855],
         [21.3295]],
        ...,
        [[31.4396],
         [17.7214],
         [ 9.9074],
         ...,
         [21.2660],
         [20.3905],
         [20.8420]],
        [[33.3134],
         [19.2434],
         [11.3824],
         ...,
         [22.6185],
         [23.2993],
         [22.1076]],
        [[34.5784],
         [20.2917],
         [12.4462],
         ...,
         [23.5344],
         [25.3880],
         [22.9627]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.3031, 1.0626, 0.9388,  ..., 1.1084, 1.1978, 1.0963],
        [1.2182, 0.9910, 0.8633,  ..., 1.0468, 1.0500, 1.0389],
        [1.2086, 0.9832, 0.8556,  ..., 1.0398, 1.0349, 1.0324],
        ...,
        [1.1968, 0.9737, 0.8466,  ..., 1.0314, 1.0171, 1.0245],
        [1.2273, 0.9985, 0.8706,  ..., 1.0534, 1.0644, 1.0450],
        [1.2479, 1.0155, 0.8879,  ..., 1.0683, 1.0984, 1.0590]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[22.0077],
         [15.9540],
         [16.3640],
         ...,
         [15.8317],
         [15.8956],
         [28.3189]],
        [[ 9.4155],
         [14.1742],
         [11.4407],
         ...,
         [11.3243],
         [12.0213],
         [24.1665]],
        [[ 8.4762],
         [13.9682],
         [10.9449],
         ...,
         [10.8642],
         [11.6127],
         [23.6968]],
        ...,
        [[ 7.4395],
         [13.7166],
         [10.3592],
         ...,
         [10.3190],
         [11.1248],
         [23.1264]],
        [[10.3750],
         [14.3671],
         [11.9184],
         ...,
         [11.7663],
         [12.4113],
         [24.6084]],
        [[12.8522],
         [14.8022],
         [13.0442],
         ...,
         [12.8038],
         [13.3172],
         [25.6124]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0059, 0.9074, 0.9141,  ..., 0.9055, 0.9065, 1.1086],
        [0.8011, 0.8785, 0.8340,  ..., 0.8321, 0.8435, 1.0410],
        [0.7858, 0.8751, 0.8260,  ..., 0.8247, 0.8368, 1.0334],
        ...,
        [0.7690, 0.8711, 0.8164,  ..., 0.8158, 0.8289, 1.0241],
        [0.8167, 0.8816, 0.8418,  ..., 0.8393, 0.8498, 1.0482],
        [0.8570, 0.8887, 0.8601,  ..., 0.8562, 0.8646, 1.0645]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[24.5627],
         [20.9315],
         [16.2787],
         ...,
         [21.3755],
         [23.7076],
         [25.9667]],
        [[22.2043],
         [17.7056],
         [10.8210],
         ...,
         [18.3359],
         [20.1386],
         [22.2926]],
        [[21.9285],
         [17.3425],
         [10.2876],
         ...,
         [17.9911],
         [19.7360],
         [21.8756]],
        ...,
        [[21.5910],
         [16.9022],
         [ 9.6619],
         ...,
         [17.5720],
         [19.2474],
         [21.3688]],
        [[22.4619],
         [18.0475],
         [11.3380],
         ...,
         [18.6602],
         [20.5177],
         [22.6847]],
        [[23.0411],
         [18.8256],
         [12.5679],
         ...,
         [19.3961],
         [21.3795],
         [23.5745]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0739, 1.0148, 0.9391,  ..., 1.0220, 1.0600, 1.0967],
        [1.0355, 0.9623, 0.8504,  ..., 0.9726, 1.0019, 1.0370],
        [1.0310, 0.9564, 0.8417,  ..., 0.9670, 0.9954, 1.0302],
        ...,
        [1.0255, 0.9493, 0.8315,  ..., 0.9602, 0.9874, 1.0219],
        [1.0397, 0.9679, 0.8588,  ..., 0.9779, 1.0081, 1.0433],
        [1.0491, 0.9806, 0.8788,  ..., 0.9898, 1.0221, 1.0578]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.6963],
         [21.0390],
         [16.6779],
         ...,
         [23.0850],
         [20.4664],
         [26.3696]],
        [[16.8480],
         [17.9466],
         [10.8858],
         ...,
         [19.8478],
         [17.3815],
         [22.5829]],
        [[16.5253],
         [17.5968],
         [10.3259],
         ...,
         [19.4800],
         [17.0334],
         [22.1537]],
        ...,
        [[16.1334],
         [17.1722],
         [ 9.6707],
         ...,
         [19.0330],
         [16.6112],
         [21.6323]],
        [[17.1514],
         [18.2756],
         [11.4298],
         ...,
         [20.1935],
         [17.7091],
         [22.9866]],
        [[17.8405],
         [19.0232],
         [12.7281],
         ...,
         [20.9778],
         [18.4540],
         [23.9030]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9865, 1.0083, 0.9374,  ..., 1.0416, 0.9990, 1.0950],
        [0.9401, 0.9580, 0.8432,  ..., 0.9889, 0.9488, 1.0334],
        [0.9349, 0.9523, 0.8341,  ..., 0.9830, 0.9432, 1.0264],
        ...,
        [0.9285, 0.9454, 0.8234,  ..., 0.9757, 0.9363, 1.0180],
        [0.9451, 0.9634, 0.8520,  ..., 0.9946, 0.9542, 1.0400],
        [0.9563, 0.9755, 0.8731,  ..., 1.0073, 0.9663, 1.0549]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[24.0158],
         [23.0477],
         [16.6480],
         ...,
         [25.3303],
         [22.1149],
         [25.6629]],
        [[20.9040],
         [20.0024],
         [11.0552],
         ...,
         [22.0207],
         [19.2850],
         [21.9308]],
        [[20.5480],
         [19.6546],
         [10.5089],
         ...,
         [21.6423],
         [18.9609],
         [21.5083]],
        ...,
        [[20.1145],
         [19.2312],
         [ 9.8682],
         ...,
         [21.1817],
         [18.5661],
         [20.9952]],
        [[21.2382],
         [20.3290],
         [11.5847],
         ...,
         [22.3759],
         [19.5891],
         [22.3283]],
        [[21.9946],
         [21.0687],
         [12.8447],
         ...,
         [23.1801],
         [20.2774],
         [23.2310]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0615, 1.0458, 0.9417,  ..., 1.0829, 1.0306, 1.0883],
        [1.0109, 0.9963, 0.8507,  ..., 1.0291, 0.9846, 1.0276],
        [1.0051, 0.9906, 0.8418,  ..., 1.0229, 0.9793, 1.0207],
        ...,
        [0.9981, 0.9837, 0.8314,  ..., 1.0154, 0.9729, 1.0124],
        [1.0164, 1.0016, 0.8593,  ..., 1.0349, 0.9895, 1.0341],
        [1.0287, 1.0136, 0.8798,  ..., 1.0479, 1.0007, 1.0488]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[24.9129],
         [24.7958],
         [16.7787],
         ...,
         [25.2679],
         [23.2177],
         [25.3921]],
        [[21.6908],
         [21.4974],
         [11.3577],
         ...,
         [21.9782],
         [20.2067],
         [21.6759]],
        [[21.3221],
         [21.1209],
         [10.8222],
         ...,
         [21.6020],
         [19.8622],
         [21.2554]],
        ...,
        [[20.8732],
         [20.6627],
         [10.1924],
         ...,
         [21.1440],
         [19.4428],
         [20.7449]],
        [[22.0369],
         [21.8510],
         [11.8757],
         ...,
         [22.3314],
         [20.5300],
         [22.0715]],
        [[22.8202],
         [22.6519],
         [13.1038],
         ...,
         [23.1309],
         [21.2619],
         [22.9701]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0798, 1.0779, 0.9475,  ..., 1.0855, 1.0522, 1.0876],
        [1.0274, 1.0242, 0.8593,  ..., 1.0320, 1.0032, 1.0271],
        [1.0214, 1.0181, 0.8506,  ..., 1.0259, 0.9976, 1.0203],
        ...,
        [1.0141, 1.0106, 0.8403,  ..., 1.0185, 0.9908, 1.0120],
        [1.0330, 1.0300, 0.8677,  ..., 1.0378, 1.0085, 1.0336],
        [1.0457, 1.0430, 0.8877,  ..., 1.0508, 1.0204, 1.0482]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[26.1354],
         [26.2449],
         [17.0600],
         ...,
         [24.9799],
         [25.8006],
         [25.2554]],
        [[22.6500],
         [22.5449],
         [12.2257],
         ...,
         [21.4407],
         [22.4193],
         [21.5681]],
        [[22.2523],
         [22.1248],
         [11.7317],
         ...,
         [21.0390],
         [22.0328],
         [21.1508]],
        ...,
        [[21.7682],
         [21.6142],
         [11.1462],
         ...,
         [20.5509],
         [21.5623],
         [20.6441]],
        [[23.0236],
         [22.9399],
         [12.7002],
         ...,
         [21.8183],
         [22.7821],
         [21.9607]],
        [[23.8698],
         [23.8361],
         [13.8135],
         ...,
         [22.6754],
         [23.6037],
         [22.8524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1081, 1.1099, 0.9605,  ..., 1.0893, 1.1026, 1.0938],
        [1.0514, 1.0497, 0.8818,  ..., 1.0317, 1.0476, 1.0338],
        [1.0449, 1.0428, 0.8738,  ..., 1.0252, 1.0414, 1.0270],
        ...,
        [1.0370, 1.0345, 0.8643,  ..., 1.0172, 1.0337, 1.0188],
        [1.0575, 1.0561, 0.8896,  ..., 1.0379, 1.0535, 1.0402],
        [1.0712, 1.0707, 0.9077,  ..., 1.0518, 1.0669, 1.0547]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[26.2793],
         [26.3853],
         [18.2709],
         ...,
         [24.7239],
         [26.6107],
         [25.3438]],
        [[22.5808],
         [22.4706],
         [13.7456],
         ...,
         [21.1184],
         [22.7387],
         [21.6639]],
        [[22.1608],
         [22.0282],
         [13.2698],
         ...,
         [20.7103],
         [22.3004],
         [21.2473]],
        ...,
        [[21.6503],
         [21.4913],
         [12.7021],
         ...,
         [20.2148],
         [21.7681],
         [20.7412]],
        [[22.9757],
         [22.8868],
         [14.2000],
         ...,
         [21.5023],
         [23.1511],
         [22.0559]],
        [[23.8716],
         [23.8328],
         [15.2566],
         ...,
         [22.3743],
         [24.0876],
         [22.9460]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1147, 1.1165, 0.9845,  ..., 1.0894, 1.1201, 1.0995],
        [1.0546, 1.0528, 0.9109,  ..., 1.0308, 1.0572, 1.0397],
        [1.0478, 1.0456, 0.9031,  ..., 1.0242, 1.0500, 1.0329],
        ...,
        [1.0395, 1.0369, 0.8939,  ..., 1.0161, 1.0414, 1.0247],
        [1.0610, 1.0596, 0.9183,  ..., 1.0370, 1.0639, 1.0461],
        [1.0756, 1.0750, 0.9355,  ..., 1.0512, 1.0791, 1.0605]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.8454],
         [25.5813],
         [28.8522],
         ...,
         [24.3889],
         [26.9490],
         [25.5845]],
        [[21.9233],
         [21.8160],
         [27.6528],
         ...,
         [20.7148],
         [23.0357],
         [21.9433]],
        [[21.4811],
         [21.3902],
         [27.5078],
         ...,
         [20.3003],
         [22.5926],
         [21.5302]],
        ...,
        [[20.9447],
         [20.8733],
         [27.3290],
         ...,
         [19.7974],
         [22.0545],
         [21.0283]],
        [[22.3395],
         [22.2166],
         [27.7873],
         ...,
         [21.1050],
         [23.4525],
         [22.3317]],
        [[23.2863],
         [23.1268],
         [28.0865],
         ...,
         [21.9922],
         [24.3991],
         [23.2133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1192, 1.1149, 1.1681,  ..., 1.0955, 1.1371, 1.1149],
        [1.0554, 1.0537, 1.1486,  ..., 1.0357, 1.0735, 1.0557],
        [1.0482, 1.0467, 1.1462,  ..., 1.0290, 1.0663, 1.0490],
        ...,
        [1.0395, 1.0383, 1.1433,  ..., 1.0208, 1.0575, 1.0408],
        [1.0622, 1.0602, 1.1508,  ..., 1.0421, 1.0803, 1.0620],
        [1.0776, 1.0750, 1.1556,  ..., 1.0565, 1.0957, 1.0764]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[26.2239],
         [26.2582],
         [20.1030],
         ...,
         [24.6562],
         [26.8934],
         [25.4096]],
        [[22.3979],
         [22.2838],
         [16.1430],
         ...,
         [21.0073],
         [22.8123],
         [21.7382]],
        [[21.9649],
         [21.8357],
         [15.7106],
         ...,
         [20.5950],
         [22.3522],
         [21.3223]],
        ...,
        [[21.4391],
         [21.2920],
         [15.1898],
         ...,
         [20.0944],
         [21.7941],
         [20.8172]],
        [[22.8053],
         [22.7058],
         [16.5529],
         ...,
         [21.3954],
         [23.2454],
         [22.1294]],
        [[23.7306],
         [23.6652],
         [17.4945],
         ...,
         [22.2772],
         [24.2306],
         [23.0177]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1168, 1.1174, 1.0172,  ..., 1.0913, 1.1277, 1.1036],
        [1.0546, 1.0527, 0.9528,  ..., 1.0320, 1.0613, 1.0438],
        [1.0475, 1.0454, 0.9458,  ..., 1.0253, 1.0538, 1.0371],
        ...,
        [1.0390, 1.0366, 0.9373,  ..., 1.0171, 1.0448, 1.0289],
        [1.0612, 1.0596, 0.9595,  ..., 1.0383, 1.0684, 1.0502],
        [1.0762, 1.0752, 0.9748,  ..., 1.0526, 1.0844, 1.0647]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.6467],
         [25.4698],
         [24.8141],
         ...,
         [24.7551],
         [26.2890],
         [25.5321]],
        [[21.7825],
         [21.6206],
         [23.3824],
         ...,
         [21.0421],
         [22.3459],
         [21.8758]],
        [[21.3466],
         [21.1865],
         [23.2110],
         ...,
         [20.6230],
         [21.9009],
         [21.4612]],
        ...,
        [[20.8176],
         [20.6598],
         [23.0000],
         ...,
         [20.1144],
         [21.3608],
         [20.9576]],
        [[22.1929],
         [22.0292],
         [23.5417],
         ...,
         [21.4365],
         [22.7648],
         [22.2656]],
        [[23.1260],
         [22.9586],
         [23.8972],
         ...,
         [22.3333],
         [23.7172],
         [23.1506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1088, 1.1059, 1.0952,  ..., 1.0943, 1.1192, 1.1069],
        [1.0459, 1.0433, 1.0720,  ..., 1.0339, 1.0551, 1.0475],
        [1.0388, 1.0362, 1.0692,  ..., 1.0271, 1.0479, 1.0407],
        ...,
        [1.0302, 1.0277, 1.0657,  ..., 1.0188, 1.0391, 1.0325],
        [1.0526, 1.0499, 1.0745,  ..., 1.0403, 1.0619, 1.0538],
        [1.0678, 1.0651, 1.0803,  ..., 1.0549, 1.0774, 1.0682]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.9636],
         [25.8940],
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0869, 1.0859,  ..., 1.0985, 1.0895, 1.0920],
        [1.0291, 1.0283, 1.0273,  ..., 1.0372, 1.0296, 1.0323],
        [1.0223, 1.0216, 1.0207,  ..., 1.0302, 1.0229, 1.0256],
        ...,
        [1.0140, 1.0136, 1.0126,  ..., 1.0218, 1.0146, 1.0174],
        [1.0355, 1.0345, 1.0335,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0477,  ..., 1.0585, 1.0505, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1687],
         [25.0120],
         [24.9440],
         ...,
         [25.7294],
         [25.1716],
         [25.3305]],
        [[21.4591],
         [21.4087],
         [21.3434],
         ...,
         [21.9579],
         [21.4917],
         [21.6598]],
        [[21.0397],
         [21.0004],
         [20.9354],
         ...,
         [21.5313],
         [21.0753],
         [21.2441]],
        ...,
        [[20.5305],
         [20.5044],
         [20.4400],
         ...,
         [21.0132],
         [20.5697],
         [20.7392]],
        [[21.8537],
         [21.7927],
         [21.7270],
         ...,
         [22.3593],
         [21.8834],
         [22.0508]],
        [[22.7504],
         [22.6647],
         [22.5982],
         ...,
         [23.2712],
         [22.7733],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0140, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3427],
         ...,
         [21.9580],
         [21.4915],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9348],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5695],
         [20.7392]],
        [[21.8535],
         [21.7925],
         [21.7264],
         ...,
         [22.3594],
         [21.8832],
         [22.0508]],
        [[22.7502],
         [22.6645],
         [22.5975],
         ...,
         [23.2713],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3594],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
         [10.1465]],
        ...,
        [[ 9.9364],
         [ 9.9364],
         [ 9.9364],
         ...,
         [ 9.9364],
         [ 9.9364],
         [ 9.9364]],
        [[10.4809],
         [10.4809],
         [10.4809],
         ...,
         [10.4809],
         [10.4809],
         [10.4809]],
        [[10.8472],
         [10.8472],
         [10.8472],
         ...,
         [10.8472],
         [10.8472],
         [10.8472]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0480, 1.0480, 1.0480,  ..., 1.0480, 1.0480, 1.0480],
        [1.0157, 1.0157, 1.0157,  ..., 1.0157, 1.0157, 1.0157],
        [1.0120, 1.0120, 1.0120,  ..., 1.0120, 1.0120, 1.0120],
        ...,
        [1.0075, 1.0075, 1.0075,  ..., 1.0075, 1.0075, 1.0075],
        [1.0192, 1.0192, 1.0192,  ..., 1.0192, 1.0192, 1.0192],
        [1.0270, 1.0270, 1.0270,  ..., 1.0270, 1.0270, 1.0270]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[25.1684],
         [25.0118],
         [24.9431],
         ...,
         [25.7296],
         [25.1713],
         [25.3305]],
        [[21.4588],
         [21.4085],
         [21.3426],
         ...,
         [21.9580],
         [21.4914],
         [21.6598]],
        [[21.0394],
         [21.0002],
         [20.9347],
         ...,
         [21.5314],
         [21.0751],
         [21.2441]],
        ...,
        [[20.5302],
         [20.5042],
         [20.4393],
         ...,
         [21.0133],
         [20.5694],
         [20.7392]],
        [[21.8534],
         [21.7925],
         [21.7263],
         ...,
         [22.3595],
         [21.8832],
         [22.0508]],
        [[22.7501],
         [22.6644],
         [22.5974],
         ...,
         [23.2714],
         [22.7730],
         [22.9388]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0894, 1.0868, 1.0857,  ..., 1.0985, 1.0894, 1.0920],
        [1.0291, 1.0282, 1.0272,  ..., 1.0372, 1.0296, 1.0323],
        [1.0222, 1.0216, 1.0205,  ..., 1.0302, 1.0228, 1.0256],
        ...,
        [1.0139, 1.0135, 1.0125,  ..., 1.0218, 1.0146, 1.0173],
        [1.0355, 1.0345, 1.0334,  ..., 1.0437, 1.0360, 1.0387],
        [1.0501, 1.0487, 1.0476,  ..., 1.0585, 1.0504, 1.0531]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[11.2027]],
        [[10.9812]],
        [[10.9540]],
        [[11.0356]],
        [[11.0430]],
        [[10.9329]],
        [[11.0115]],
        [[11.0688]],
        [[11.0842]],
        [[11.0012]],
        [[10.9016]],
        [[11.0551]],
        [[11.0243]],
        [[10.9686]],
        [[10.9920]],
        [[11.1159]],
        [[11.1022]],
        [[10.9867]],
        [[10.9621]],
        [[11.0193]],
        [[11.0491]],
        [[10.8678]],
        [[10.9959]],
        [[11.0759]],
        [[11.0615]],
        [[11.0060]],
        [[10.9198]],
        [[11.0371]],
        [[11.0301]],
        [[10.9456]],
        [[10.9750]],
        [[11.1362]],
        [[11.1228]],
        [[10.9722]],
        [[10.9425]],
        [[11.0263]],
        [[11.0410]],
        [[10.9244]],
        [[11.0084]],
        [[11.0655]],
        [[11.0817]],
        [[10.9977]],
        [[10.8874]],
        [[11.0526]],
        [[11.0163]],
        [[10.9588]],
        [[10.9848]],
        [[11.0942]],
        [[11.1060]],
        [[10.9904]],
        [[10.9658]],
        [[11.0214]],
        [[11.0586]],
        [[10.9099]],
        [[11.0028]],
        [[11.0906]],
        [[11.0730]],
        [[11.0137]],
        [[10.9361]],
        [[11.0469]],
        [[11.0319]],
        [[10.9516]],
        [[10.9786]],
        [[11.1522]],
        [[11.1416]],
        [[10.9770]],
        [[10.9494]],
        [[11.0304]],
        [[11.0452]],
        [[10.9331]],
        [[11.0123]],
        [[11.0707]],
        [[11.0885]],
        [[11.0016]],
        [[10.9057]],
        [[11.0573]],
        [[11.0203]],
        [[10.9642]],
        [[10.9891]],
        [[11.1031]],
        [[11.0913]],
        [[10.9832]],
        [[10.9566]],
        [[11.0149]],
        [[11.0509]],
        [[10.8764]],
        [[10.9961]],
        [[11.0794]],
        [[11.0639]],
        [[11.0073]],
        [[10.9215]],
        [[11.0398]],
        [[11.0251]],
        [[10.9406]],
        [[10.9709]],
        [[11.1186]],
        [[11.1303]],
        [[10.9737]],
        [[10.9436]],
        [[11.0288]],
        [[11.0359]],
        [[10.9167]],
        [[11.0049]],
        [[11.0601]],
        [[11.0737]],
        [[10.9944]],
        [[10.8396]],
        [[11.0474]],
        [[11.0179]],
        [[10.9600]],
        [[10.9851]],
        [[11.0990]],
        [[11.1126]],
        [[10.9908]],
        [[10.9671]],
        [[11.0232]],
        [[11.0538]],
        [[10.8961]],
        [[11.0000]],
        [[11.0823]],
        [[11.0668]],
        [[11.0101]],
        [[10.9298]],
        [[11.0414]],
        [[11.0340]],
        [[10.9518]],
        [[10.9795]],
        [[11.1664]],
        [[11.1648]],
        [[10.9801]],
        [[10.9535]],
        [[11.0332]],
        [[11.0426]],
        [[10.9278]],
        [[11.0098]],
        [[11.0675]],
        [[11.0837]],
        [[10.9989]],
        [[10.8940]],
        [[11.0539]],
        [[11.0226]],
        [[10.9673]],
        [[10.9917]],
        [[11.1091]],
        [[11.0971]],
        [[10.9863]],
        [[10.9608]],
        [[11.0177]],
        [[11.0480]],
        [[10.8356]],
        [[10.9936]],
        [[11.0753]],
        [[11.0603]],
        [[11.0044]],
        [[10.9130]],
        [[11.0368]],
        [[11.0277]],
        [[10.9450]],
        [[10.9739]],
        [[11.1284]],
        [[11.1193]],
        [[10.9702]],
        [[10.9383]],
        [[11.0260]],
        [[11.0386]],
        [[10.9235]],
        [[11.0074]],
        [[11.0634]],
        [[11.0780]],
        [[10.9974]],
        [[10.8805]],
        [[11.0507]],
        [[11.0153]],
        [[10.9565]],
        [[10.9823]],
        [[11.0935]],
        [[11.1051]],
        [[10.9879]],
        [[10.9636]],
        [[11.0205]],
        [[11.0566]],
        [[10.9064]],
        [[11.0024]],
        [[11.0863]],
        [[11.0706]],
        [[11.0127]],
        [[10.9355]],
        [[11.0443]],
        [[11.0316]],
        [[10.9480]],
        [[10.9767]],
        [[11.1448]],
        [[11.1534]],
        [[10.9781]],
        [[10.9499]],
        [[11.0327]],
        [[11.0456]],
        [[10.9378]],
        [[11.0139]],
        [[11.0722]],
        [[11.0892]],
        [[11.0039]],
        [[10.9115]],
        [[11.0585]],
        [[11.0220]],
        [[10.9655]],
        [[10.9895]],
        [[11.1090]],
        [[11.0959]],
        [[10.9835]],
        [[10.9581]],
        [[11.0165]],
        [[11.0521]],
        [[10.8882]],
        [[10.9985]],
        [[11.0799]],
        [[11.0652]],
        [[11.0089]],
        [[10.9272]],
        [[11.0401]],
        [[11.0274]],
        [[10.9412]],
        [[10.9720]],
        [[11.1246]],
        [[11.1351]],
        [[10.9756]],
        [[10.9475]],
        [[11.0292]],
        [[11.0383]],
        [[10.9176]],
        [[11.0059]],
        [[11.0621]],
        [[11.0771]],
        [[10.9947]],
        [[10.8605]],
        [[11.0493]],
        [[11.0189]],
        [[10.9623]],
        [[10.9875]],
        [[11.0997]],
        [[11.1135]],
        [[10.9932]],
        [[10.9692]],
        [[11.0242]],
        [[11.0557]],
        [[10.9007]],
        [[11.0003]],
        [[11.0863]],
        [[11.0691]],
        [[11.0111]],
        [[10.9306]],
        [[11.0439]],
        [[11.0343]],
        [[10.9553]],
        [[10.9814]],
        [[11.1834]],
        [[11.1819]],
        [[10.9820]],
        [[10.9552]],
        [[11.0349]],
        [[11.0436]],
        [[10.9314]],
        [[11.0108]],
        [[11.0696]],
        [[11.0853]],
        [[11.0004]],
        [[10.8982]],
        [[11.0558]],
        [[11.0238]],
        [[10.9694]],
        [[10.9927]],
        [[11.1142]],
        [[11.1006]],
        [[10.9873]],
        [[10.9628]],
        [[11.0186]],
        [[11.0500]],
        [[10.8596]],
        [[10.9953]],
        [[11.0771]],
        [[11.0624]],
        [[11.0055]],
        [[10.9183]],
        [[11.0379]],
        [[11.0293]],
        [[10.9466]],
        [[10.9758]],
        [[11.1324]],
        [[11.1255]],
        [[10.9715]],
        [[10.9416]],
        [[11.0270]],
        [[11.0402]],
        [[10.9258]],
        [[11.0090]],
        [[11.0645]],
        [[11.0805]],
        [[10.9982]],
        [[10.8905]],
        [[11.0518]],
        [[11.0171]],
        [[10.9580]],
        [[10.9842]],
        [[11.0958]],
        [[11.1075]],
        [[10.9896]],
        [[10.9648]],
        [[11.0221]],
        [[11.0579]],
        [[10.9123]],
        [[11.0035]],
        [[11.0896]],
        [[11.0721]],
        [[11.0145]],
        [[10.9377]],
        [[11.0462]],
        [[11.0325]],
        [[10.9505]],
        [[10.9778]],
        [[11.1570]],
        [[11.1455]],
        [[10.9761]],
        [[10.9481]],
        [[11.0310]],
        [[11.0446]],
        [[10.9346]],
        [[11.0129]],
        [[11.0700]],
        [[11.0874]],
        [[11.0024]],
        [[10.9086]],
        [[11.0565]],
        [[11.0209]],
        [[10.9633]],
        [[10.9884]],
        [[11.1044]],
        [[11.0927]],
        [[10.9826]],
        [[10.9559]],
        [[11.0155]],
        [[11.0500]],
        [[10.8813]],
        [[10.9968]],
        [[11.0781]],
        [[11.0630]],
        [[11.0078]],
        [[10.9228]],
        [[11.0390]],
        [[11.0259]],
        [[10.9394]],
        [[10.9701]],
        [[11.1214]],
        [[11.1273]],
        [[10.9743]],
        [[10.9446]],
        [[11.0281]],
        [[11.0367]],
        [[10.9149]],
        [[11.0043]],
        [[11.0610]],
        [[11.0747]],
        [[10.9938]],
        [[10.8055]],
        [[11.0482]],
        [[11.0171]],
        [[10.9609]],
        [[10.9857]],
        [[11.0973]],
        [[11.1108]],
        [[10.9916]],
        [[10.9681]],
        [[11.0226]],
        [[11.0544]],
        [[10.8926]],
        [[10.9993]],
        [[11.0832]],
        [[11.0676]],
        [[11.0093]],
        [[10.9281]],
        [[11.0420]],
        [[11.0334]],
        [[10.9529]],
        [[10.9803]],
        [[11.1598]],
        [[11.1755]],
        [[10.9794]],
        [[10.9527]],
        [[11.0339]],
        [[11.0418]],
        [[10.9292]],
        [[11.0105]],
        [[11.0664]],
        [[11.0825]],
        [[10.9994]],
        [[10.8966]],
        [[11.0531]],
        [[11.0234]],
        [[10.9666]],
        [[10.9910]],
        [[11.1113]],
        [[11.0984]],
        [[10.9855]],
        [[10.9597]],
        [[11.0183]],
        [[11.0474]],
        [[10.8542]],
        [[10.9943]],
        [[11.0746]],
        [[11.0595]],
        [[11.0051]],
        [[10.9155]],
        [[11.0361]],
        [[11.0283]],
        [[10.9438]],
        [[10.9730]],
        [[11.1308]],
        [[11.1172]],
        [[10.9711]],
        [[10.9398]],
        [[11.0254]],
        [[11.0392]],
        [[10.9217]],
        [[11.0067]],
        [[11.0641]],
        [[11.0790]],
        [[10.9965]],
        [[10.8740]],
        [[11.0514]],
        [[11.0148]],
        [[10.9575]],
        [[10.9831]],
        [[11.0924]],
        [[11.1034]],
        [[10.9885]],
        [[10.9643]],
        [[11.0198]],
        [[11.0575]],
        [[10.9040]],
        [[11.0018]],
        [[11.0877]],
        [[11.0716]],
        [[11.0122]],
        [[10.9344]],
        [[11.0451]],
        [[11.0308]],
        [[10.9490]],
        [[10.9774]],
        [[11.1400]],
        [[11.1479]],
        [[10.9787]],
        [[10.9508]],
        [[11.0320]],
        [[11.0464]],
        [[10.9366]],
        [[11.0133]],
        [[11.0733]],
        [[11.0905]],
        [[11.0034]],
        [[10.9097]],
        [[11.0593]],
        [[11.0212]],
        [[10.9663]],
        [[10.9901]],
        [[11.1070]],
        [[11.0946]],
        [[10.9844]],
        [[10.9591]],
        [[11.0159]],
        [[11.0527]],
        [[10.8837]],
        [[10.9978]],
        [[11.0808]],
        [[11.0661]],
        [[11.0081]],
        [[10.9253]],
        [[11.0408]],
        [[11.0269]],
        [[10.9424]],
        [[10.9729]],
        [[11.1225]],
        [[11.1383]],
        [[10.9747]],
        [[10.9462]],
        [[11.0298]],
        [[11.0377]],
        [[10.9197]],
        [[11.0066]],
        [[11.0615]],
        [[11.0762]],
        [[10.9955]],
        [[10.8703]],
        [[11.0486]],
        [[11.0194]],
        [[10.9613]],
        [[10.9868]],
        [[11.1009]],
        [[11.1157]],
        [[10.9926]],
        [[10.9685]],
        [[11.0249]],
        [[11.0548]],
        [[10.9032]],
        [[11.0010]],
        [[11.0849]],
        [[11.0681]],
        [[11.0116]],
        [[10.9317]],
        [[11.0431]],
        [[11.0351]],
        [[10.9544]],
        [[10.9807]],
        [[11.2193]],
        [[11.2285]],
        [[10.9808]],
        [[10.9545]],
        [[11.0352]],
        [[11.0434]],
        [[10.9323]],
        [[11.0118]],
        [[11.0684]],
        [[11.0848]],
        [[11.0009]],
        [[10.9029]],
        [[11.0547]],
        [[11.0246]],
        [[10.9682]],
        [[10.9924]],
        [[11.1149]],
        [[11.1015]],
        [[10.9871]],
        [[10.9617]],
        [[11.0196]],
        [[11.0487]],
        [[10.8710]],
        [[10.9956]],
        [[11.0763]],
        [[11.0611]],
        [[11.0064]],
        [[10.9189]],
        [[11.0375]],
        [[11.0297]],
        [[10.9461]],
        [[10.9746]],
        [[11.1379]],
        [[11.1217]],
        [[10.9726]],
        [[10.9420]],
        [[11.0267]],
        [[11.0407]],
        [[10.9251]],
        [[11.0081]],
        [[11.0659]],
        [[11.0812]],
        [[10.9981]],
        [[10.8853]],
        [[11.0530]],
        [[11.0159]],
        [[10.9593]],
        [[10.9844]],
        [[11.0948]],
        [[11.1067]],
        [[10.9900]],
        [[10.9662]],
        [[11.0211]],
        [[11.0590]],
        [[10.9089]],
        [[11.0031]],
        [[11.0900]],
        [[11.0734]],
        [[11.0133]],
        [[10.9367]],
        [[11.0465]],
        [[11.0323]],
        [[10.9511]],
        [[10.9790]],
        [[11.1497]],
        [[11.1395]],
        [[10.9774]],
        [[10.9488]],
        [[11.0307]],
        [[11.0449]],
        [[10.9339]],
        [[11.0119]],
        [[11.0713]],
        [[11.0879]],
        [[11.0019]],
        [[10.9044]],
        [[11.0576]],
        [[11.0200]],
        [[10.9647]],
        [[10.9888]],
        [[11.1040]],
        [[11.0920]],
        [[10.9828]],
        [[10.9572]],
        [[11.0145]],
        [[11.0513]],
        [[10.8732]],
        [[10.9965]],
        [[11.0788]],
        [[11.0644]],
        [[11.0070]],
        [[10.9223]],
        [[11.0394]],
        [[11.0254]],
        [[10.9399]],
        [[10.9712]],
        [[11.1175]],
        [[11.1320]],
        [[10.9733]],
        [[10.9442]],
        [[11.0285]],
        [[11.0362]],
        [[10.9157]],
        [[11.0052]],
        [[11.0596]],
        [[11.0742]],
        [[10.9940]],
        [[10.8489]],
        [[11.0471]],
        [[11.0182]],
        [[10.9596]],
        [[10.9854]],
        [[11.0982]],
        [[11.1115]],
        [[10.9911]],
        [[10.9666]],
        [[11.0235]],
        [[11.0534]],
        [[10.8978]],
        [[10.9997]],
        [[11.0829]],
        [[11.0663]],
        [[11.0104]],
        [[10.9291]],
        [[11.0417]],
        [[11.0337]],
        [[10.9524]],
        [[10.9792]],
        [[11.1712]],
        [[11.1608]],
        [[10.9804]],
        [[10.9530]],
        [[11.0335]],
        [[11.0423]],
        [[10.9286]],
        [[11.0095]],
        [[11.0680]],
        [[11.0831]],
        [[10.9992]],
        [[10.8921]],
        [[11.0543]],
        [[11.0223]],
        [[10.9678]],
        [[10.9913]],
        [[11.1101]],
        [[11.0978]],
        [[10.9860]],
        [[10.9612]],
        [[11.0174]],
        [[11.0483]],
        [[10.8163]],
        [[10.9939]],
        [[11.0748]],
        [[11.0607]],
        [[11.0041]],
        [[10.9141]],
        [[11.0364]],
        [[11.0281]],
        [[10.9444]],
        [[10.9742]],
        [[11.1269]],
        [[11.1205]],
        [[10.9698]],
        [[10.9390]],
        [[11.0257]],
        [[11.0389]],
        [[10.9226]],
        [[11.0077]],
        [[11.0629]],
        [[11.0785]],
        [[10.9970]],
        [[10.8831]],
        [[11.0503]],
        [[11.0156]],
        [[10.9560]],
        [[10.9827]],
        [[11.0928]],
        [[11.1043]],
        [[10.9883]],
        [[10.9632]],
        [[11.0208]],
        [[11.0562]],
        [[10.9076]],
        [[11.0021]],
        [[11.0869]],
        [[11.0701]],
        [[11.0130]],
        [[10.9348]],
        [[11.0447]],
        [[11.0312]],
        [[10.9486]],
        [[10.9764]],
        [[11.1473]],
        [[11.1563]],
        [[10.9777]],
        [[10.9504]],
        [[11.0324]],
        [[11.0460]],
        [[10.9372]],
        [[11.0142]],
        [[11.0717]],
        [[11.0897]],
        [[11.0035]],
        [[10.9125]],
        [[11.0580]],
        [[11.0223]],
        [[10.9651]],
        [[10.9898]],
        [[11.1082]],
        [[11.0953]],
        [[10.9839]],
        [[10.9576]],
        [[11.0168]],
        [[11.0516]],
        [[10.8901]],
        [[10.9981]],
        [[11.0804]],
        [[11.0648]],
        [[11.0093]],
        [[10.9264]],
        [[11.0405]],
        [[11.0271]],
        [[10.9417]],
        [[10.9716]],
        [[11.1258]],
        [[11.1335]],
        [[10.9761]],
        [[10.9470]],
        [[11.0295]],
        [[11.0379]],
        [[10.9186]],
        [[11.0056]],
        [[11.0625]],
        [[11.0767]],
        [[10.9950]],
        [[10.8557]],
        [[11.0497]],
        [[11.0185]],
        [[10.9627]],
        [[10.9872]],
        [[11.1004]],
        [[11.1145]],
        [[10.9928]],
        [[10.9696]],
        [[11.0238]],
        [[11.0562]],
        [[10.8993]],
        [[11.0007]],
        [[11.0857]],
        [[11.0695]],
        [[11.0107]],
        [[10.9312]],
        [[11.0435]],
        [[11.0347]],
        [[10.9548]],
        [[10.9818]],
        [[11.1770]],
        [[11.1905]],
        [[10.9816]],
        [[10.9556]],
        [[11.0346]],
        [[11.0440]],
        [[10.9307]],
        [[11.0111]],
        [[11.0692]],
        [[11.0858]],
        [[11.0001]],
        [[10.8996]],
        [[11.0554]],
        [[11.0241]],
        [[10.9691]],
        [[10.9931]],
        [[11.1133]],
        [[11.0999]],
        [[10.9876]],
        [[10.9624]],
        [[11.0190]],
        [[11.0496]],
        [[10.8641]],
        [[10.9949]],
        [[11.0775]],
        [[11.0620]],
        [[11.0058]],
        [[10.9174]],
        [[11.0382]],
        [[11.0289]],
        [[10.9471]],
        [[10.9754]],
        [[11.1338]],
        [[11.1243]],
        [[10.9719]],
        [[10.9410]],
        [[11.0274]],
        [[11.0398]],
        [[10.9266]],
        [[11.0087]],
        [[11.0649]],
        [[11.0800]],
        [[10.9986]],
        [[10.8888]],
        [[11.0521]],
        [[11.0167]],
        [[10.9584]],
        [[10.9838]],
        [[11.0964]],
        [[11.1084]],
        [[10.9892]],
        [[10.9652]],
        [[11.0217]],
        [[11.0584]],
        [[10.9112]],
        [[11.0038]],
        [[11.0890]],
        [[11.0725]],
        [[11.0141]],
        [[10.9382]],
        [[11.0458]],
        [[11.0328]],
        [[10.9501]],
        [[10.9782]],
        [[11.1542]],
        [[11.1433]],
        [[10.9765]],
        [[10.9476]],
        [[11.0313]],
        [[11.0443]],
        [[10.9353]],
        [[11.0126]],
        [[11.0705]],
        [[11.0868]],
        [[11.0027]],
        [[10.9073]],
        [[11.0569]],
        [[11.0205]],
        [[10.9638]],
        [[10.9880]],
        [[11.1053]],
        [[11.0934]],
        [[10.9822]],
        [[10.9564]],
        [[11.0152]],
        [[11.0504]],
        [[10.8786]],
        [[10.9971]],
        [[11.0776]],
        [[11.0635]],
        [[11.0075]],
        [[10.9237]],
        [[11.0387]],
        [[11.0262]],
        [[10.9388]],
        [[10.9705]],
        [[11.1201]],
        [[11.1288]],
        [[10.9740]],
        [[10.9451]],
        [[11.0278]],
        [[11.0370]],
        [[10.9138]],
        [[11.0046]],
        [[11.0606]],
        [[11.0752]],
        [[10.9935]],
        [[10.8326]],
        [[11.0479]],
        [[11.0174]],
        [[10.9604]],
        [[10.9861]],
        [[11.0965]],
        [[11.1098]],
        [[10.9919]],
        [[10.9677]],
        [[11.0229]],
        [[11.0540]],
        [[10.8944]],
        [[10.9990]],
        [[11.0838]],
        [[11.0672]],
        [[11.0096]],
        [[10.9272]],
        [[11.0424]],
        [[11.0331]],
        [[10.9534]],
        [[10.9800]],
        [[11.1639]],
        [[11.1697]],
        [[10.9798]],
        [[10.9522]],
        [[11.0342]],
        [[11.0415]],
        [[10.9300]],
        [[11.0102]],
        [[11.0669]],
        [[11.0819]],
        [[10.9997]],
        [[10.8949]],
        [[11.0535]],
        [[11.0231]],
        [[10.9670]],
        [[10.9907]],
        [[11.1123]],
        [[11.0992]],
        [[10.9852]],
        [[10.9602]],
        [[11.0180]],
        [[11.0477]],
        [[10.8464]],
        [[10.9946]],
        [[11.0740]],
        [[11.0599]],
        [[11.0048]],
        [[10.9165]],
        [[11.0358]],
        [[11.0286]],
        [[10.9432]],
        [[10.9734]],
        [[11.1293]],
        [[11.1184]],
        [[10.9707]],
        [[10.9404]],
        [[11.0250]],
        [[11.0395]],
        [[10.9208]],
        [[11.0070]],
        [[11.0636]],
        [[11.0795]],
        [[10.9962]],
        [[10.8771]],
        [[11.0510]],
        [[11.0151]],
        [[10.9570]],
        [[10.9834]],
        [[11.0918]],
        [[11.1025]],
        [[10.9889]],
        [[10.9639]],
        [[11.0201]],
        [[11.0571]],
        [[10.9054]],
        [[11.0015]],
        [[11.0884]],
        [[11.0711]],
        [[11.0125]],
        [[10.9337]],
        [[11.0455]],
        [[11.0305]],
        [[10.9495]],
        [[10.9771]],
        [[11.1420]],
        [[11.1502]],
        [[10.9784]],
        [[10.9512]],
        [[11.0317]],
        [[11.0468]],
        [[10.9360]],
        [[11.0136]],
        [[11.0729]],
        [[11.0911]],
        [[11.0030]],
        [[10.9108]],
        [[11.0589]],
        [[11.0215]],
        [[10.9659]],
        [[10.9905]],
        [[11.1061]],
        [[11.0940]],
        [[10.9847]],
        [[10.9587]],
        [[11.0162]],
        [[11.0523]],
        [[10.8857]],
        [[10.9974]],
        [[11.0813]],
        [[11.0656]],
        [[11.0085]],
        [[10.9245]],
        [[11.0411]],
        [[11.0266]],
        [[10.9430]],
        [[10.9725]],
        [[11.1237]],
        [[11.1367]],
        [[10.9751]],
        [[10.9457]],
        [[11.0302]],
        [[11.0374]],
        [[10.9205]],
        [[11.0063]],
        [[11.0618]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.0036],
        [1.0007],
        [1.0003],
        [1.0014],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9996],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0023],
        [1.0007],
        [1.0004],
        [1.0012],
        [1.0016],
        [0.9992],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0027],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0013],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9994],
        [1.0016],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0021],
        [1.0023],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0017],
        [0.9997],
        [1.0009],
        [1.0021],
        [1.0019],
        [1.0011],
        [1.0001],
        [1.0015],
        [1.0013],
        [1.0003],
        [1.0006],
        [1.0029],
        [1.0028],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0021],
        [1.0009],
        [0.9997],
        [1.0017],
        [1.0012],
        [1.0004],
        [1.0008],
        [1.0023],
        [1.0021],
        [1.0007],
        [1.0003],
        [1.0011],
        [1.0016],
        [0.9993],
        [1.0009],
        [1.0020],
        [1.0017],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0012],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0026],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9988],
        [1.0015],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9995],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [1.0000],
        [1.0014],
        [1.0014],
        [1.0003],
        [1.0006],
        [1.0031],
        [1.0031],
        [1.0006],
        [1.0003],
        [1.0013],
        [1.0015],
        [0.9999],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9995],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0023],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0015],
        [0.9987],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0026],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0012],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0009],
        [0.9993],
        [1.0016],
        [1.0011],
        [1.0003],
        [1.0007],
        [1.0021],
        [1.0023],
        [1.0007],
        [1.0004],
        [1.0012],
        [1.0017],
        [0.9997],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0011],
        [1.0001],
        [1.0015],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0028],
        [1.0029],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0015],
        [1.0001],
        [1.0011],
        [1.0019],
        [1.0021],
        [1.0010],
        [0.9997],
        [1.0017],
        [1.0012],
        [1.0004],
        [1.0008],
        [1.0023],
        [1.0022],
        [1.0007],
        [1.0003],
        [1.0011],
        [1.0016],
        [0.9994],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0013],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0027],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9991],
        [1.0016],
        [1.0012],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9996],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [1.0000],
        [1.0015],
        [1.0014],
        [1.0003],
        [1.0007],
        [1.0033],
        [1.0033],
        [1.0007],
        [1.0003],
        [1.0014],
        [1.0015],
        [1.0000],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9996],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0016],
        [0.9990],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0027],
        [1.0026],
        [1.0005],
        [1.0001],
        [1.0013],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9995],
        [1.0016],
        [1.0011],
        [1.0003],
        [1.0007],
        [1.0022],
        [1.0023],
        [1.0008],
        [1.0004],
        [1.0012],
        [1.0017],
        [0.9997],
        [1.0009],
        [1.0021],
        [1.0019],
        [1.0011],
        [1.0001],
        [1.0015],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0030],
        [1.0028],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0021],
        [1.0009],
        [0.9997],
        [1.0016],
        [1.0012],
        [1.0004],
        [1.0007],
        [1.0023],
        [1.0021],
        [1.0007],
        [1.0003],
        [1.0011],
        [1.0016],
        [0.9993],
        [1.0009],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0012],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0026],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9983],
        [1.0015],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9995],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [1.0000],
        [1.0015],
        [1.0013],
        [1.0003],
        [1.0006],
        [1.0030],
        [1.0032],
        [1.0006],
        [1.0003],
        [1.0014],
        [1.0015],
        [1.0000],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9995],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0015],
        [0.9990],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0005],
        [1.0026],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0012],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0009],
        [0.9992],
        [1.0016],
        [1.0011],
        [1.0003],
        [1.0007],
        [1.0021],
        [1.0023],
        [1.0008],
        [1.0004],
        [1.0012],
        [1.0017],
        [0.9996],
        [1.0009],
        [1.0021],
        [1.0018],
        [1.0011],
        [1.0000],
        [1.0015],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0028],
        [1.0029],
        [1.0006],
        [1.0003],
        [1.0013],
        [1.0015],
        [1.0001],
        [1.0011],
        [1.0019],
        [1.0021],
        [1.0009],
        [0.9997],
        [1.0017],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0023],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0016],
        [0.9994],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0013],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0027],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9992],
        [1.0015],
        [1.0012],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9996],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0011],
        [1.0000],
        [1.0015],
        [1.0014],
        [1.0003],
        [1.0006],
        [1.0038],
        [1.0039],
        [1.0006],
        [1.0003],
        [1.0014],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9996],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0012],
        [1.0015],
        [0.9992],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0027],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0013],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9994],
        [1.0016],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0023],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0017],
        [0.9997],
        [1.0009],
        [1.0021],
        [1.0019],
        [1.0011],
        [1.0001],
        [1.0015],
        [1.0013],
        [1.0003],
        [1.0006],
        [1.0029],
        [1.0027],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0021],
        [1.0009],
        [0.9996],
        [1.0017],
        [1.0012],
        [1.0004],
        [1.0008],
        [1.0023],
        [1.0021],
        [1.0007],
        [1.0003],
        [1.0011],
        [1.0016],
        [0.9992],
        [1.0009],
        [1.0019],
        [1.0018],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0012],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0026],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9989],
        [1.0015],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9996],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [1.0000],
        [1.0015],
        [1.0013],
        [1.0003],
        [1.0006],
        [1.0032],
        [1.0030],
        [1.0006],
        [1.0003],
        [1.0013],
        [1.0015],
        [1.0000],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9995],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0015],
        [0.9985],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0026],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0012],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0009],
        [0.9994],
        [1.0016],
        [1.0011],
        [1.0003],
        [1.0007],
        [1.0021],
        [1.0023],
        [1.0007],
        [1.0004],
        [1.0012],
        [1.0016],
        [0.9997],
        [1.0009],
        [1.0021],
        [1.0018],
        [1.0011],
        [1.0000],
        [1.0015],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0028],
        [1.0030],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0015],
        [1.0001],
        [1.0011],
        [1.0019],
        [1.0021],
        [1.0009],
        [0.9997],
        [1.0017],
        [1.0012],
        [1.0004],
        [1.0008],
        [1.0023],
        [1.0022],
        [1.0007],
        [1.0003],
        [1.0011],
        [1.0016],
        [0.9995],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0013],
        [1.0001],
        [1.0005],
        [1.0026],
        [1.0027],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9990],
        [1.0016],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9996],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [1.0000],
        [1.0015],
        [1.0014],
        [1.0003],
        [1.0007],
        [1.0032],
        [1.0034],
        [1.0007],
        [1.0003],
        [1.0014],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9996],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0012],
        [1.0016],
        [0.9991],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0027],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0013],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9994],
        [1.0016],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0023],
        [1.0008],
        [1.0004],
        [1.0012],
        [1.0017],
        [0.9997],
        [1.0010],
        [1.0021],
        [1.0019],
        [1.0011],
        [1.0001],
        [1.0015],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0029],
        [1.0028],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0015],
        [1.0000],
        [1.0011],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9997],
        [1.0017],
        [1.0012],
        [1.0004],
        [1.0007],
        [1.0023],
        [1.0021],
        [1.0007],
        [1.0003],
        [1.0011],
        [1.0016],
        [0.9993],
        [1.0009],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0012],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0026],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9998],
        [1.0010],
        [1.0017],
        [1.0019],
        [1.0008],
        [0.9987],
        [1.0015],
        [1.0011],
        [1.0004],
        [1.0007],
        [1.0022],
        [1.0024],
        [1.0008],
        [1.0005],
        [1.0012],
        [1.0016],
        [0.9995],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [0.9999],
        [1.0015],
        [1.0013],
        [1.0003],
        [1.0006],
        [1.0031],
        [1.0031],
        [1.0006],
        [1.0003],
        [1.0014],
        [1.0015],
        [1.0000],
        [1.0010],
        [1.0018],
        [1.0020],
        [1.0009],
        [0.9995],
        [1.0016],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0024],
        [1.0022],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0015],
        [0.9989],
        [1.0008],
        [1.0019],
        [1.0017],
        [1.0010],
        [0.9998],
        [1.0014],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0026],
        [1.0025],
        [1.0005],
        [1.0001],
        [1.0012],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0017],
        [1.0020],
        [1.0009],
        [0.9993],
        [1.0016],
        [1.0011],
        [1.0003],
        [1.0007],
        [1.0021],
        [1.0023],
        [1.0008],
        [1.0004],
        [1.0012],
        [1.0017],
        [0.9997],
        [1.0009],
        [1.0021],
        [1.0018],
        [1.0011],
        [1.0000],
        [1.0015],
        [1.0013],
        [1.0002],
        [1.0006],
        [1.0028],
        [1.0029],
        [1.0006],
        [1.0003],
        [1.0013],
        [1.0015],
        [1.0001],
        [1.0011],
        [1.0019],
        [1.0021],
        [1.0009],
        [0.9997],
        [1.0017],
        [1.0012],
        [1.0005],
        [1.0008],
        [1.0023],
        [1.0021],
        [1.0007],
        [1.0004],
        [1.0011],
        [1.0016],
        [0.9994],
        [1.0009],
        [1.0020],
        [1.0018],
        [1.0010],
        [0.9999],
        [1.0014],
        [1.0013],
        [1.0001],
        [1.0005],
        [1.0025],
        [1.0027],
        [1.0006],
        [1.0002],
        [1.0013],
        [1.0014],
        [0.9999],
        [1.0010],
        [1.0017]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247]],
        [[10.3191]],
        [[10.1465]],
        [[10.6728]],
        [[10.7218]],
        [[10.0138]],
        [[10.5149]],
        [[10.8941]],
        [[10.9975]],
        [[10.4483]],
        [[ 9.8197]],
        [[10.8023]],
        [[10.5985]],
        [[10.2388]],
        [[10.3887]],
        [[11.2138]],
        [[11.1201]],
        [[10.3546]],
        [[10.1974]],
        [[10.5659]],
        [[10.7621]],
        [[ 9.6141]],
        [[10.4142]],
        [[10.9412]],
        [[10.8452]],
        [[10.4793]],
        [[ 9.9324]],
        [[10.6828]],
        [[10.6366]],
        [[10.0931]],
        [[10.2800]],
        [[11.3540]],
        [[11.2610]],
        [[10.2617]],
        [[10.0741]],
        [[10.6119]],
        [[10.7089]],
        [[ 9.9606]],
        [[10.4948]],
        [[10.8719]],
        [[10.9806]],
        [[10.4254]],
        [[ 9.7329]],
        [[10.7853]],
        [[10.5463]],
        [[10.1769]],
        [[10.3427]],
        [[11.0652]],
        [[11.1456]],
        [[10.3783]],
        [[10.2211]],
        [[10.5798]],
        [[10.8255]],
        [[ 9.8710]],
        [[10.4583]],
        [[11.0407]],
        [[10.9218]],
        [[10.5294]],
        [[10.0339]],
        [[10.7477]],
        [[10.6486]],
        [[10.1314]],
        [[10.3029]],
        [[11.4660]],
        [[11.3918]],
        [[10.2924]],
        [[10.1174]],
        [[10.6384]],
        [[10.7364]],
        [[10.0153]],
        [[10.5200]],
        [[10.9068]],
        [[11.0269]],
        [[10.4507]],
        [[ 9.8452]],
        [[10.8165]],
        [[10.5725]],
        [[10.2110]],
        [[10.3701]],
        [[11.1263]],
        [[11.0455]],
        [[10.3319]],
        [[10.1630]],
        [[10.5369]],
        [[10.7743]],
        [[ 9.6665]],
        [[10.4155]],
        [[10.9651]],
        [[10.8611]],
        [[10.4876]],
        [[ 9.9426]],
        [[10.7004]],
        [[10.6041]],
        [[10.0618]],
        [[10.2532]],
        [[11.2325]],
        [[11.3133]],
        [[10.2714]],
        [[10.0810]],
        [[10.6285]],
        [[10.6748]],
        [[ 9.9133]],
        [[10.4723]],
        [[10.8352]],
        [[10.9266]],
        [[10.4039]],
        [[ 9.4456]],
        [[10.7512]],
        [[10.5567]],
        [[10.1844]],
        [[10.3442]],
        [[11.0979]],
        [[11.1909]],
        [[10.3808]],
        [[10.2294]],
        [[10.5914]],
        [[10.7934]],
        [[ 9.7863]],
        [[10.4403]],
        [[10.9846]],
        [[10.8803]],
        [[10.5058]],
        [[ 9.9946]],
        [[10.7110]],
        [[10.6622]],
        [[10.1326]],
        [[10.3085]],
        [[11.5655]],
        [[11.5546]],
        [[10.3121]],
        [[10.1433]],
        [[10.6571]],
        [[10.7193]],
        [[ 9.9823]],
        [[10.5042]],
        [[10.8851]],
        [[10.9939]],
        [[10.4331]],
        [[ 9.7733]],
        [[10.7944]],
        [[10.5878]],
        [[10.2308]],
        [[10.3866]],
        [[11.1673]],
        [[11.0850]],
        [[10.3522]],
        [[10.1891]],
        [[10.5552]],
        [[10.7548]],
        [[ 9.4217]],
        [[10.3989]],
        [[10.9378]],
        [[10.8367]],
        [[10.4687]],
        [[ 9.8903]],
        [[10.6806]],
        [[10.6212]],
        [[10.0897]],
        [[10.2725]],
        [[11.3003]],
        [[11.2370]],
        [[10.2488]],
        [[10.0477]],
        [[10.6096]],
        [[10.6927]],
        [[ 9.9553]],
        [[10.4885]],
        [[10.8573]],
        [[10.9554]],
        [[10.4233]],
        [[ 9.6910]],
        [[10.7727]],
        [[10.5399]],
        [[10.1622]],
        [[10.3264]],
        [[11.0608]],
        [[11.1397]],
        [[10.3627]],
        [[10.2073]],
        [[10.5735]],
        [[10.8120]],
        [[ 9.8495]],
        [[10.4561]],
        [[11.0120]],
        [[10.9060]],
        [[10.5229]],
        [[10.0300]],
        [[10.7308]],
        [[10.6464]],
        [[10.1083]],
        [[10.2908]],
        [[11.4140]],
        [[11.4744]],
        [[10.2997]],
        [[10.1206]],
        [[10.6540]],
        [[10.7387]],
        [[10.0443]],
        [[10.5305]],
        [[10.9164]],
        [[11.0311]],
        [[10.4656]],
        [[ 9.8811]],
        [[10.8246]],
        [[10.5833]],
        [[10.2191]],
        [[10.3724]],
        [[11.1664]],
        [[11.0772]],
        [[10.3341]],
        [[10.1720]],
        [[10.5475]],
        [[10.7820]],
        [[ 9.7379]],
        [[10.4308]],
        [[10.9685]],
        [[10.8697]],
        [[10.4982]],
        [[ 9.9780]],
        [[10.7028]],
        [[10.6193]],
        [[10.0657]],
        [[10.2608]],
        [[11.2738]],
        [[11.3463]],
        [[10.2837]],
        [[10.1055]],
        [[10.6306]],
        [[10.6908]],
        [[ 9.9189]],
        [[10.4787]],
        [[10.8491]],
        [[10.9499]],
        [[10.4061]],
        [[ 9.5704]],
        [[10.7636]],
        [[10.5630]],
        [[10.1987]],
        [[10.3601]],
        [[11.1031]],
        [[11.1974]],
        [[10.3964]],
        [[10.2425]],
        [[10.5980]],
        [[10.8063]],
        [[ 9.8143]],
        [[10.4424]],
        [[11.0116]],
        [[10.8955]],
        [[10.5121]],
        [[ 9.9992]],
        [[10.7275]],
        [[10.6645]],
        [[10.1543]],
        [[10.3205]],
        [[11.6866]],
        [[11.6759]],
        [[10.3247]],
        [[10.1538]],
        [[10.6686]],
        [[10.7256]],
        [[10.0046]],
        [[10.5104]],
        [[10.8991]],
        [[11.0050]],
        [[10.4431]],
        [[ 9.7991]],
        [[10.8071]],
        [[10.5951]],
        [[10.2442]],
        [[10.3935]],
        [[11.2021]],
        [[11.1091]],
        [[10.3582]],
        [[10.2020]],
        [[10.5613]],
        [[10.7681]],
        [[ 9.5648]],
        [[10.4101]],
        [[10.9493]],
        [[10.8510]],
        [[10.4759]],
        [[ 9.9229]],
        [[10.6878]],
        [[10.6313]],
        [[10.0997]],
        [[10.2845]],
        [[11.3274]],
        [[11.2800]],
        [[10.2574]],
        [[10.0683]],
        [[10.6164]],
        [[10.7035]],
        [[ 9.9697]],
        [[10.4989]],
        [[10.8648]],
        [[10.9727]],
        [[10.4290]],
        [[ 9.7520]],
        [[10.7799]],
        [[10.5514]],
        [[10.1714]],
        [[10.3383]],
        [[11.0762]],
        [[11.1562]],
        [[10.3731]],
        [[10.2145]],
        [[10.5840]],
        [[10.8210]],
        [[ 9.8856]],
        [[10.4628]],
        [[11.0340]],
        [[10.9158]],
        [[10.5343]],
        [[10.0435]],
        [[10.7431]],
        [[10.6522]],
        [[10.1245]],
        [[10.2978]],
        [[11.4995]],
        [[11.4190]],
        [[10.2867]],
        [[10.1093]],
        [[10.6427]],
        [[10.7324]],
        [[10.0245]],
        [[10.5244]],
        [[10.9019]],
        [[11.0193]],
        [[10.4557]],
        [[ 9.8628]],
        [[10.8115]],
        [[10.5761]],
        [[10.2051]],
        [[10.3653]],
        [[11.1351]],
        [[11.0550]],
        [[10.3280]],
        [[10.1582]],
        [[10.5414]],
        [[10.7684]],
        [[ 9.6957]],
        [[10.4197]],
        [[10.9565]],
        [[10.8550]],
        [[10.4910]],
        [[ 9.9511]],
        [[10.6955]],
        [[10.6092]],
        [[10.0548]],
        [[10.2483]],
        [[11.2514]],
        [[11.2925]],
        [[10.2754]],
        [[10.0868]],
        [[10.6238]],
        [[10.6802]],
        [[ 9.9018]],
        [[10.4683]],
        [[10.8417]],
        [[10.9334]],
        [[10.4004]],
        [[ 9.2446]],
        [[10.7565]],
        [[10.5516]],
        [[10.1899]],
        [[10.3483]],
        [[11.0865]],
        [[11.1786]],
        [[10.3861]],
        [[10.2356]],
        [[10.5874]],
        [[10.7975]],
        [[ 9.7647]],
        [[10.4357]],
        [[10.9908]],
        [[10.8860]],
        [[10.5007]],
        [[ 9.9838]],
        [[10.7154]],
        [[10.6587]],
        [[10.1392]],
        [[10.3137]],
        [[11.5195]],
        [[11.6304]],
        [[10.3081]],
        [[10.1384]],
        [[10.6618]],
        [[10.7138]],
        [[ 9.9909]],
        [[10.5083]],
        [[10.8778]],
        [[10.9858]],
        [[10.4367]],
        [[ 9.7893]],
        [[10.7890]],
        [[10.5929]],
        [[10.2259]],
        [[10.3824]],
        [[11.1823]],
        [[11.0938]],
        [[10.3469]],
        [[10.1821]],
        [[10.5593]],
        [[10.7507]],
        [[ 9.5324]],
        [[10.4035]],
        [[10.9325]],
        [[10.8316]],
        [[10.4737]],
        [[ 9.9054]],
        [[10.6763]],
        [[10.6248]],
        [[10.0821]],
        [[10.2672]],
        [[11.3166]],
        [[11.2227]],
        [[10.2550]],
        [[10.0568]],
        [[10.6056]],
        [[10.6965]],
        [[ 9.9442]],
        [[10.4840]],
        [[10.8620]],
        [[10.9622]],
        [[10.4181]],
        [[ 9.6520]],
        [[10.7773]],
        [[10.5365]],
        [[10.1684]],
        [[10.3314]],
        [[11.0534]],
        [[11.1280]],
        [[10.3663]],
        [[10.2119]],
        [[10.5689]],
        [[10.8184]],
        [[ 9.8348]],
        [[10.4521]],
        [[11.0215]],
        [[10.9125]],
        [[10.5196]],
        [[10.0230]],
        [[10.7360]],
        [[10.6411]],
        [[10.1147]],
        [[10.2953]],
        [[11.3806]],
        [[11.4356]],
        [[10.3036]],
        [[10.1259]],
        [[10.6493]],
        [[10.7445]],
        [[10.0367]],
        [[10.5266]],
        [[10.9240]],
        [[11.0399]],
        [[10.4622]],
        [[ 9.8697]],
        [[10.8304]],
        [[10.5781]],
        [[10.2243]],
        [[10.3765]],
        [[11.1524]],
        [[11.0684]],
        [[10.3397]],
        [[10.1789]],
        [[10.5435]],
        [[10.7861]],
        [[ 9.7106]],
        [[10.4261]],
        [[10.9744]],
        [[10.8754]],
        [[10.4931]],
        [[ 9.9666]],
        [[10.7070]],
        [[10.6158]],
        [[10.0734]],
        [[10.2663]],
        [[11.2594]],
        [[11.3687]],
        [[10.2779]],
        [[10.0972]],
        [[10.6348]],
        [[10.6869]],
        [[ 9.9314]],
        [[10.4831]],
        [[10.8447]],
        [[10.9435]],
        [[10.4113]],
        [[ 9.6292]],
        [[10.7589]],
        [[10.5666]],
        [[10.1927]],
        [[10.3553]],
        [[11.1113]],
        [[11.2124]],
        [[10.3927]],
        [[10.2383]],
        [[10.6025]],
        [[10.8002]],
        [[ 9.8297]],
        [[10.4465]],
        [[11.0021]],
        [[10.8890]],
        [[10.5156]],
        [[10.0064]],
        [[10.7225]],
        [[10.6698]],
        [[10.1486]],
        [[10.3160]],
        [[11.9445]],
        [[12.0114]],
        [[10.3166]],
        [[10.1493]],
        [[10.6704]],
        [[10.7242]],
        [[10.0099]],
        [[10.5171]],
        [[10.8913]],
        [[11.0013]],
        [[10.4459]],
        [[ 9.8278]],
        [[10.7995]],
        [[10.6009]],
        [[10.2363]],
        [[10.3911]],
        [[11.2069]],
        [[11.1153]],
        [[10.3569]],
        [[10.1949]],
        [[10.5681]],
        [[10.7596]],
        [[ 9.6338]],
        [[10.4119]],
        [[10.9443]],
        [[10.8425]],
        [[10.4816]],
        [[ 9.9270]],
        [[10.6853]],
        [[10.6342]],
        [[10.0965]],
        [[10.2773]],
        [[11.3660]],
        [[11.2534]],
        [[10.2643]],
        [[10.0707]],
        [[10.6141]],
        [[10.7065]],
        [[ 9.9651]],
        [[10.4927]],
        [[10.8745]],
        [[10.9770]],
        [[10.4278]],
        [[ 9.7204]],
        [[10.7881]],
        [[10.5440]],
        [[10.1797]],
        [[10.3402]],
        [[11.0697]],
        [[11.1508]],
        [[10.3760]],
        [[10.2235]],
        [[10.5776]],
        [[10.8283]],
        [[ 9.8646]],
        [[10.4605]],
        [[11.0369]],
        [[10.9249]],
        [[10.5270]],
        [[10.0378]],
        [[10.7451]],
        [[10.6510]],
        [[10.1283]],
        [[10.3055]],
        [[11.4480]],
        [[11.3769]],
        [[10.2948]],
        [[10.1138]],
        [[10.6406]],
        [[10.7341]],
        [[10.0200]],
        [[10.5179]],
        [[10.9103]],
        [[11.0227]],
        [[10.4526]],
        [[ 9.8371]],
        [[10.8190]],
        [[10.5706]],
        [[10.2138]],
        [[10.3680]],
        [[11.1319]],
        [[11.0503]],
        [[10.3296]],
        [[10.1662]],
        [[10.5349]],
        [[10.7767]],
        [[ 9.6466]],
        [[10.4176]],
        [[10.9612]],
        [[10.8641]],
        [[10.4856]],
        [[ 9.9481]],
        [[10.6983]],
        [[10.6061]],
        [[10.0579]],
        [[10.2555]],
        [[11.2247]],
        [[11.3248]],
        [[10.2689]],
        [[10.0849]],
        [[10.6264]],
        [[10.6769]],
        [[ 9.9067]],
        [[10.4743]],
        [[10.8322]],
        [[10.9299]],
        [[10.4019]],
        [[ 9.5006]],
        [[10.7490]],
        [[10.5587]],
        [[10.1814]],
        [[10.3463]],
        [[11.0928]],
        [[11.1837]],
        [[10.3830]],
        [[10.2265]],
        [[10.5935]],
        [[10.7909]],
        [[ 9.7968]],
        [[10.4382]],
        [[10.9887]],
        [[10.8772]],
        [[10.5077]],
        [[ 9.9899]],
        [[10.7132]],
        [[10.6601]],
        [[10.1359]],
        [[10.3063]],
        [[11.5999]],
        [[11.5265]],
        [[10.3142]],
        [[10.1401]],
        [[10.6592]],
        [[10.7172]],
        [[ 9.9872]],
        [[10.5023]],
        [[10.8882]],
        [[10.9898]],
        [[10.4352]],
        [[ 9.7616]],
        [[10.7969]],
        [[10.5857]],
        [[10.2337]],
        [[10.3844]],
        [[11.1741]],
        [[11.0900]],
        [[10.3501]],
        [[10.1920]],
        [[10.5532]],
        [[10.7570]],
        [[ 9.3077]],
        [[10.4009]],
        [[10.9343]],
        [[10.8398]],
        [[10.4666]],
        [[ 9.8973]],
        [[10.6784]],
        [[10.6233]],
        [[10.0858]],
        [[10.2749]],
        [[11.2899]],
        [[11.2451]],
        [[10.2465]],
        [[10.0517]],
        [[10.6077]],
        [[10.6948]],
        [[ 9.9500]],
        [[10.4904]],
        [[10.8544]],
        [[10.9592]],
        [[10.4212]],
        [[ 9.7071]],
        [[10.7703]],
        [[10.5420]],
        [[10.1589]],
        [[10.3286]],
        [[11.0559]],
        [[11.1339]],
        [[10.3647]],
        [[10.2045]],
        [[10.5754]],
        [[10.8096]],
        [[ 9.8571]],
        [[10.4542]],
        [[11.0161]],
        [[10.9026]],
        [[10.5250]],
        [[10.0254]],
        [[10.7331]],
        [[10.6443]],
        [[10.1120]],
        [[10.2885]],
        [[11.4315]],
        [[11.4948]],
        [[10.2971]],
        [[10.1238]],
        [[10.6516]],
        [[10.7414]],
        [[10.0404]],
        [[10.5328]],
        [[10.9134]],
        [[11.0349]],
        [[10.4634]],
        [[ 9.8871]],
        [[10.8218]],
        [[10.5855]],
        [[10.2166]],
        [[10.3747]],
        [[11.1608]],
        [[11.0726]],
        [[10.3367]],
        [[10.1691]],
        [[10.5498]],
        [[10.7792]],
        [[ 9.7494]],
        [[10.4284]],
        [[10.9720]],
        [[10.8671]],
        [[10.5004]],
        [[ 9.9736]],
        [[10.7051]],
        [[10.6170]],
        [[10.0691]],
        [[10.2581]],
        [[11.2820]],
        [[11.3353]],
        [[10.2864]],
        [[10.1022]],
        [[10.6330]],
        [[10.6883]],
        [[ 9.9246]],
        [[10.4764]],
        [[10.8518]],
        [[10.9468]],
        [[10.4084]],
        [[ 9.5414]],
        [[10.7661]],
        [[10.5608]],
        [[10.2012]],
        [[10.3577]],
        [[11.1077]],
        [[11.2040]],
        [[10.3940]],
        [[10.2450]],
        [[10.5956]],
        [[10.8092]],
        [[ 9.8057]],
        [[10.4448]],
        [[11.0078]],
        [[10.8983]],
        [[10.5099]],
        [[10.0033]],
        [[10.7251]],
        [[10.6668]],
        [[10.1516]],
        [[10.3229]],
        [[11.6410]],
        [[11.7369]],
        [[10.3221]],
        [[10.1567]],
        [[10.6661]],
        [[10.7282]],
        [[10.0002]],
        [[10.5127]],
        [[10.8961]],
        [[11.0085]],
        [[10.4409]],
        [[ 9.8074]],
        [[10.8044]],
        [[10.5973]],
        [[10.2419]],
        [[10.3958]],
        [[11.1959]],
        [[11.1042]],
        [[10.3607]],
        [[10.1993]],
        [[10.5637]],
        [[10.7654]],
        [[ 9.5919]],
        [[10.4077]],
        [[10.9526]],
        [[10.8485]],
        [[10.4781]],
        [[ 9.9177]],
        [[10.6901]],
        [[10.6290]],
        [[10.1028]],
        [[10.2819]],
        [[11.3374]],
        [[11.2714]],
        [[10.2602]],
        [[10.0647]],
        [[10.6188]],
        [[10.7009]],
        [[ 9.9745]],
        [[10.4966]],
        [[10.8676]],
        [[10.9695]],
        [[10.4312]],
        [[ 9.7414]],
        [[10.7825]],
        [[10.5492]],
        [[10.1741]],
        [[10.3359]],
        [[11.0805]],
        [[11.1620]],
        [[10.3706]],
        [[10.2171]],
        [[10.5816]],
        [[10.8239]],
        [[ 9.8792]],
        [[10.4651]],
        [[11.0300]],
        [[10.9187]],
        [[10.5322]],
        [[10.0471]],
        [[10.7406]],
        [[10.6545]],
        [[10.1215]],
        [[10.3003]],
        [[11.4801]],
        [[11.4033]],
        [[10.2889]],
        [[10.1059]],
        [[10.6447]],
        [[10.7302]],
        [[10.0288]],
        [[10.5225]],
        [[10.9051]],
        [[11.0149]],
        [[10.4578]],
        [[ 9.8549]],
        [[10.8141]],
        [[10.5740]],
        [[10.2081]],
        [[10.3631]],
        [[11.1412]],
        [[11.0596]],
        [[10.3259]],
        [[10.1613]],
        [[10.5394]],
        [[10.7707]],
        [[ 9.6797]],
        [[10.4217]],
        [[10.9529]],
        [[10.8581]],
        [[10.4890]],
        [[ 9.9568]],
        [[10.6933]],
        [[10.6113]],
        [[10.0505]],
        [[10.2508]],
        [[11.2426]],
        [[11.3024]],
        [[10.2731]],
        [[10.0904]],
        [[10.6218]],
        [[10.6823]],
        [[ 9.8953]],
        [[10.4702]],
        [[10.8389]],
        [[10.9371]],
        [[10.3983]],
        [[ 9.4038]],
        [[10.7541]],
        [[10.5536]],
        [[10.1868]],
        [[10.3506]],
        [[11.0812]],
        [[11.1721]],
        [[10.3881]],
        [[10.2329]],
        [[10.5894]],
        [[10.7952]],
        [[ 9.7756]],
        [[10.4337]],
        [[10.9947]],
        [[10.8827]],
        [[10.5027]],
        [[ 9.9786]],
        [[10.7176]],
        [[10.6565]],
        [[10.1426]],
        [[10.3114]],
        [[11.5484]],
        [[11.5887]],
        [[10.3104]],
        [[10.1349]],
        [[10.6639]],
        [[10.7116]],
        [[ 9.9959]],
        [[10.5062]],
        [[10.8811]],
        [[10.9820]],
        [[10.4387]],
        [[ 9.7791]],
        [[10.7913]],
        [[10.5910]],
        [[10.2286]],
        [[10.3804]],
        [[11.1890]],
        [[11.0993]],
        [[10.3447]],
        [[10.1852]],
        [[10.5572]],
        [[10.7531]],
        [[ 9.4860]],
        [[10.4056]],
        [[10.9289]],
        [[10.8345]],
        [[10.4718]],
        [[ 9.9116]],
        [[10.6743]],
        [[10.6268]],
        [[10.0784]],
        [[10.2694]],
        [[11.3061]],
        [[11.2309]],
        [[10.2525]],
        [[10.0610]],
        [[10.6035]],
        [[10.6987]],
        [[ 9.9383]],
        [[10.4861]],
        [[10.8589]],
        [[10.9658]],
        [[10.4161]],
        [[ 9.6703]],
        [[10.7750]],
        [[10.5385]],
        [[10.1653]],
        [[10.3335]],
        [[11.0489]],
        [[11.1221]],
        [[10.3684]],
        [[10.2089]],
        [[10.5710]],
        [[10.8158]],
        [[ 9.8435]],
        [[10.4501]],
        [[11.0260]],
        [[10.9093]],
        [[10.5215]],
        [[10.0186]],
        [[10.7382]],
        [[10.6391]],
        [[10.1181]],
        [[10.2931]],
        [[11.3948]],
        [[11.4515]],
        [[10.3012]],
        [[10.1288]],
        [[10.6470]],
        [[10.7470]],
        [[10.0330]],
        [[10.5288]],
        [[10.9211]],
        [[11.0440]],
        [[10.4599]],
        [[ 9.8764]],
        [[10.8275]],
        [[10.5805]],
        [[10.2217]],
        [[10.3789]],
        [[11.1468]],
        [[11.0643]],
        [[10.3420]],
        [[10.1762]],
        [[10.5457]],
        [[10.7834]],
        [[ 9.7229]],
        [[10.4239]],
        [[10.9777]],
        [[10.8725]],
        [[10.4954]],
        [[ 9.9617]],
        [[10.7096]],
        [[10.6135]],
        [[10.0769]],
        [[10.2635]],
        [[11.2676]],
        [[11.3574]],
        [[10.2805]],
        [[10.0941]],
        [[10.6371]],
        [[10.6846]],
        [[ 9.9364]],
        [[10.4809]],
        [[10.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.0480],
        [1.0157],
        [1.0120],
        [1.0233],
        [1.0243],
        [1.0092],
        [1.0199],
        [1.0280],
        [1.0302],
        [1.0185],
        [1.0050],
        [1.0261],
        [1.0217],
        [1.0140],
        [1.0172],
        [1.0349],
        [1.0329],
        [1.0165],
        [1.0131],
        [1.0210],
        [1.0252],
        [1.0006],
        [1.0177],
        [1.0290],
        [1.0270],
        [1.0191],
        [1.0074],
        [1.0235],
        [1.0225],
        [1.0109],
        [1.0149],
        [1.0379],
        [1.0359],
        [1.0145],
        [1.0104],
        [1.0220],
        [1.0241],
        [1.0080],
        [1.0195],
        [1.0276],
        [1.0299],
        [1.0180],
        [1.0031],
        [1.0257],
        [1.0206],
        [1.0126],
        [1.0162],
        [1.0317],
        [1.0334],
        [1.0170],
        [1.0136],
        [1.0213],
        [1.0266],
        [1.0061],
        [1.0187],
        [1.0312],
        [1.0286],
        [1.0202],
        [1.0096],
        [1.0249],
        [1.0228],
        [1.0117],
        [1.0153],
        [1.0403],
        [1.0387],
        [1.0151],
        [1.0114],
        [1.0225],
        [1.0246],
        [1.0092],
        [1.0200],
        [1.0283],
        [1.0309],
        [1.0185],
        [1.0055],
        [1.0264],
        [1.0211],
        [1.0134],
        [1.0168],
        [1.0330],
        [1.0313],
        [1.0160],
        [1.0123],
        [1.0204],
        [1.0255],
        [1.0017],
        [1.0178],
        [1.0295],
        [1.0273],
        [1.0193],
        [1.0076],
        [1.0239],
        [1.0218],
        [1.0102],
        [1.0143],
        [1.0353],
        [1.0370],
        [1.0147],
        [1.0106],
        [1.0223],
        [1.0233],
        [1.0070],
        [1.0190],
        [1.0268],
        [1.0287],
        [1.0175],
        [0.9970],
        [1.0250],
        [1.0208],
        [1.0128],
        [1.0162],
        [1.0324],
        [1.0344],
        [1.0170],
        [1.0138],
        [1.0215],
        [1.0259],
        [1.0043],
        [1.0183],
        [1.0300],
        [1.0277],
        [1.0197],
        [1.0087],
        [1.0241],
        [1.0231],
        [1.0117],
        [1.0155],
        [1.0424],
        [1.0422],
        [1.0155],
        [1.0119],
        [1.0229],
        [1.0243],
        [1.0085],
        [1.0197],
        [1.0278],
        [1.0302],
        [1.0181],
        [1.0040],
        [1.0259],
        [1.0215],
        [1.0138],
        [1.0171],
        [1.0339],
        [1.0321],
        [1.0164],
        [1.0129],
        [1.0208],
        [1.0250],
        [0.9965],
        [1.0174],
        [1.0290],
        [1.0268],
        [1.0189],
        [1.0065],
        [1.0234],
        [1.0222],
        [1.0108],
        [1.0147],
        [1.0367],
        [1.0354],
        [1.0142],
        [1.0099],
        [1.0219],
        [1.0237],
        [1.0079],
        [1.0193],
        [1.0272],
        [1.0293],
        [1.0179],
        [1.0022],
        [1.0254],
        [1.0204],
        [1.0123],
        [1.0159],
        [1.0316],
        [1.0333],
        [1.0166],
        [1.0133],
        [1.0212],
        [1.0263],
        [1.0056],
        [1.0186],
        [1.0306],
        [1.0283],
        [1.0201],
        [1.0095],
        [1.0245],
        [1.0227],
        [1.0112],
        [1.0151],
        [1.0392],
        [1.0405],
        [1.0153],
        [1.0114],
        [1.0229],
        [1.0247],
        [1.0098],
        [1.0202],
        [1.0285],
        [1.0310],
        [1.0188],
        [1.0063],
        [1.0265],
        [1.0214],
        [1.0136],
        [1.0168],
        [1.0339],
        [1.0320],
        [1.0160],
        [1.0125],
        [1.0206],
        [1.0256],
        [1.0032],
        [1.0181],
        [1.0296],
        [1.0275],
        [1.0195],
        [1.0084],
        [1.0239],
        [1.0221],
        [1.0103],
        [1.0144],
        [1.0362],
        [1.0377],
        [1.0149],
        [1.0111],
        [1.0224],
        [1.0237],
        [1.0071],
        [1.0191],
        [1.0271],
        [1.0292],
        [1.0176],
        [0.9996],
        [1.0252],
        [1.0209],
        [1.0131],
        [1.0166],
        [1.0325],
        [1.0345],
        [1.0174],
        [1.0141],
        [1.0217],
        [1.0261],
        [1.0049],
        [1.0183],
        [1.0305],
        [1.0281],
        [1.0198],
        [1.0088],
        [1.0245],
        [1.0231],
        [1.0122],
        [1.0157],
        [1.0450],
        [1.0448],
        [1.0158],
        [1.0122],
        [1.0232],
        [1.0244],
        [1.0090],
        [1.0198],
        [1.0281],
        [1.0304],
        [1.0184],
        [1.0045],
        [1.0262],
        [1.0216],
        [1.0141],
        [1.0173],
        [1.0346],
        [1.0326],
        [1.0165],
        [1.0132],
        [1.0209],
        [1.0253],
        [0.9995],
        [1.0176],
        [1.0292],
        [1.0271],
        [1.0191],
        [1.0072],
        [1.0236],
        [1.0224],
        [1.0110],
        [1.0150],
        [1.0373],
        [1.0363],
        [1.0144],
        [1.0103],
        [1.0221],
        [1.0239],
        [1.0082],
        [1.0196],
        [1.0274],
        [1.0297],
        [1.0181],
        [1.0035],
        [1.0256],
        [1.0207],
        [1.0125],
        [1.0161],
        [1.0319],
        [1.0336],
        [1.0169],
        [1.0135],
        [1.0214],
        [1.0265],
        [1.0064],
        [1.0188],
        [1.0310],
        [1.0285],
        [1.0203],
        [1.0098],
        [1.0248],
        [1.0228],
        [1.0115],
        [1.0152],
        [1.0410],
        [1.0393],
        [1.0150],
        [1.0112],
        [1.0226],
        [1.0246],
        [1.0094],
        [1.0201],
        [1.0282],
        [1.0307],
        [1.0186],
        [1.0059],
        [1.0263],
        [1.0212],
        [1.0133],
        [1.0167],
        [1.0332],
        [1.0315],
        [1.0159],
        [1.0122],
        [1.0205],
        [1.0253],
        [1.0023],
        [1.0179],
        [1.0294],
        [1.0272],
        [1.0194],
        [1.0078],
        [1.0238],
        [1.0219],
        [1.0100],
        [1.0142],
        [1.0357],
        [1.0366],
        [1.0148],
        [1.0107],
        [1.0222],
        [1.0234],
        [1.0067],
        [1.0189],
        [1.0269],
        [1.0289],
        [1.0174],
        [0.9927],
        [1.0251],
        [1.0207],
        [1.0129],
        [1.0163],
        [1.0322],
        [1.0341],
        [1.0171],
        [1.0139],
        [1.0215],
        [1.0260],
        [1.0038],
        [1.0182],
        [1.0301],
        [1.0279],
        [1.0196],
        [1.0085],
        [1.0242],
        [1.0230],
        [1.0118],
        [1.0156],
        [1.0414],
        [1.0438],
        [1.0155],
        [1.0118],
        [1.0230],
        [1.0242],
        [1.0087],
        [1.0198],
        [1.0277],
        [1.0300],
        [1.0182],
        [1.0043],
        [1.0258],
        [1.0216],
        [1.0137],
        [1.0171],
        [1.0342],
        [1.0323],
        [1.0163],
        [1.0128],
        [1.0208],
        [1.0250],
        [0.9988],
        [1.0175],
        [1.0289],
        [1.0267],
        [1.0190],
        [1.0068],
        [1.0234],
        [1.0223],
        [1.0106],
        [1.0146],
        [1.0371],
        [1.0351],
        [1.0143],
        [1.0101],
        [1.0218],
        [1.0238],
        [1.0077],
        [1.0192],
        [1.0273],
        [1.0295],
        [1.0178],
        [1.0014],
        [1.0255],
        [1.0204],
        [1.0125],
        [1.0160],
        [1.0314],
        [1.0330],
        [1.0167],
        [1.0134],
        [1.0211],
        [1.0264],
        [1.0053],
        [1.0186],
        [1.0308],
        [1.0284],
        [1.0200],
        [1.0093],
        [1.0246],
        [1.0226],
        [1.0113],
        [1.0152],
        [1.0385],
        [1.0396],
        [1.0154],
        [1.0116],
        [1.0228],
        [1.0248],
        [1.0096],
        [1.0201],
        [1.0287],
        [1.0312],
        [1.0188],
        [1.0061],
        [1.0267],
        [1.0213],
        [1.0137],
        [1.0169],
        [1.0336],
        [1.0318],
        [1.0161],
        [1.0127],
        [1.0205],
        [1.0257],
        [1.0026],
        [1.0180],
        [1.0297],
        [1.0276],
        [1.0194],
        [1.0081],
        [1.0240],
        [1.0221],
        [1.0104],
        [1.0146],
        [1.0359],
        [1.0382],
        [1.0148],
        [1.0109],
        [1.0225],
        [1.0236],
        [1.0074],
        [1.0192],
        [1.0270],
        [1.0291],
        [1.0177],
        [1.0009],
        [1.0251],
        [1.0210],
        [1.0130],
        [1.0165],
        [1.0327],
        [1.0349],
        [1.0173],
        [1.0140],
        [1.0218],
        [1.0260],
        [1.0052],
        [1.0184],
        [1.0303],
        [1.0279],
        [1.0199],
        [1.0090],
        [1.0243],
        [1.0232],
        [1.0120],
        [1.0156],
        [1.0506],
        [1.0520],
        [1.0156],
        [1.0121],
        [1.0232],
        [1.0244],
        [1.0091],
        [1.0199],
        [1.0280],
        [1.0303],
        [1.0184],
        [1.0052],
        [1.0260],
        [1.0217],
        [1.0139],
        [1.0172],
        [1.0347],
        [1.0328],
        [1.0165],
        [1.0130],
        [1.0210],
        [1.0251],
        [1.0010],
        [1.0177],
        [1.0291],
        [1.0269],
        [1.0192],
        [1.0073],
        [1.0235],
        [1.0225],
        [1.0109],
        [1.0148],
        [1.0381],
        [1.0357],
        [1.0145],
        [1.0104],
        [1.0220],
        [1.0240],
        [1.0081],
        [1.0194],
        [1.0276],
        [1.0298],
        [1.0180],
        [1.0029],
        [1.0258],
        [1.0205],
        [1.0127],
        [1.0161],
        [1.0318],
        [1.0335],
        [1.0169],
        [1.0136],
        [1.0212],
        [1.0266],
        [1.0060],
        [1.0187],
        [1.0311],
        [1.0287],
        [1.0202],
        [1.0097],
        [1.0248],
        [1.0228],
        [1.0116],
        [1.0154],
        [1.0399],
        [1.0384],
        [1.0152],
        [1.0113],
        [1.0226],
        [1.0246],
        [1.0093],
        [1.0200],
        [1.0284],
        [1.0308],
        [1.0186],
        [1.0054],
        [1.0264],
        [1.0211],
        [1.0134],
        [1.0167],
        [1.0331],
        [1.0314],
        [1.0159],
        [1.0124],
        [1.0203],
        [1.0255],
        [1.0013],
        [1.0178],
        [1.0295],
        [1.0274],
        [1.0193],
        [1.0077],
        [1.0238],
        [1.0219],
        [1.0101],
        [1.0143],
        [1.0351],
        [1.0373],
        [1.0146],
        [1.0107],
        [1.0223],
        [1.0234],
        [1.0069],
        [1.0190],
        [1.0267],
        [1.0288],
        [1.0175],
        [0.9981],
        [1.0249],
        [1.0208],
        [1.0127],
        [1.0163],
        [1.0323],
        [1.0342],
        [1.0171],
        [1.0137],
        [1.0216],
        [1.0258],
        [1.0045],
        [1.0183],
        [1.0301],
        [1.0277],
        [1.0197],
        [1.0086],
        [1.0241],
        [1.0230],
        [1.0118],
        [1.0154],
        [1.0432],
        [1.0416],
        [1.0156],
        [1.0119],
        [1.0230],
        [1.0242],
        [1.0086],
        [1.0196],
        [1.0279],
        [1.0301],
        [1.0182],
        [1.0037],
        [1.0259],
        [1.0214],
        [1.0139],
        [1.0171],
        [1.0340],
        [1.0322],
        [1.0164],
        [1.0130],
        [1.0207],
        [1.0251],
        [0.9940],
        [1.0175],
        [1.0289],
        [1.0269],
        [1.0189],
        [1.0067],
        [1.0234],
        [1.0222],
        [1.0107],
        [1.0147],
        [1.0365],
        [1.0356],
        [1.0141],
        [1.0100],
        [1.0219],
        [1.0238],
        [1.0078],
        [1.0194],
        [1.0272],
        [1.0294],
        [1.0179],
        [1.0026],
        [1.0254],
        [1.0205],
        [1.0123],
        [1.0159],
        [1.0315],
        [1.0332],
        [1.0167],
        [1.0132],
        [1.0212],
        [1.0262],
        [1.0058],
        [1.0186],
        [1.0306],
        [1.0282],
        [1.0201],
        [1.0094],
        [1.0246],
        [1.0227],
        [1.0113],
        [1.0150],
        [1.0396],
        [1.0409],
        [1.0152],
        [1.0115],
        [1.0228],
        [1.0248],
        [1.0097],
        [1.0203],
        [1.0284],
        [1.0310],
        [1.0188],
        [1.0064],
        [1.0265],
        [1.0214],
        [1.0135],
        [1.0169],
        [1.0337],
        [1.0319],
        [1.0161],
        [1.0125],
        [1.0206],
        [1.0256],
        [1.0035],
        [1.0180],
        [1.0297],
        [1.0274],
        [1.0196],
        [1.0083],
        [1.0240],
        [1.0221],
        [1.0103],
        [1.0144],
        [1.0363],
        [1.0375],
        [1.0150],
        [1.0110],
        [1.0224],
        [1.0236],
        [1.0072],
        [1.0191],
        [1.0271],
        [1.0292],
        [1.0176],
        [0.9990],
        [1.0253],
        [1.0209],
        [1.0132],
        [1.0165],
        [1.0326],
        [1.0347],
        [1.0173],
        [1.0141],
        [1.0216],
        [1.0262],
        [1.0047],
        [1.0184],
        [1.0305],
        [1.0281],
        [1.0198],
        [1.0089],
        [1.0244],
        [1.0232],
        [1.0121],
        [1.0158],
        [1.0440],
        [1.0461],
        [1.0158],
        [1.0122],
        [1.0231],
        [1.0245],
        [1.0089],
        [1.0198],
        [1.0281],
        [1.0305],
        [1.0183],
        [1.0047],
        [1.0261],
        [1.0217],
        [1.0140],
        [1.0173],
        [1.0345],
        [1.0325],
        [1.0166],
        [1.0131],
        [1.0209],
        [1.0253],
        [1.0001],
        [1.0176],
        [1.0293],
        [1.0270],
        [1.0191],
        [1.0071],
        [1.0237],
        [1.0223],
        [1.0111],
        [1.0149],
        [1.0375],
        [1.0361],
        [1.0144],
        [1.0102],
        [1.0221],
        [1.0239],
        [1.0083],
        [1.0195],
        [1.0275],
        [1.0296],
        [1.0181],
        [1.0033],
        [1.0256],
        [1.0206],
        [1.0126],
        [1.0161],
        [1.0320],
        [1.0338],
        [1.0168],
        [1.0135],
        [1.0213],
        [1.0265],
        [1.0063],
        [1.0188],
        [1.0309],
        [1.0286],
        [1.0203],
        [1.0099],
        [1.0247],
        [1.0229],
        [1.0115],
        [1.0153],
        [1.0406],
        [1.0389],
        [1.0151],
        [1.0111],
        [1.0227],
        [1.0245],
        [1.0095],
        [1.0201],
        [1.0283],
        [1.0306],
        [1.0187],
        [1.0057],
        [1.0263],
        [1.0212],
        [1.0133],
        [1.0166],
        [1.0333],
        [1.0316],
        [1.0158],
        [1.0123],
        [1.0204],
        [1.0254],
        [1.0020],
        [1.0179],
        [1.0293],
        [1.0273],
        [1.0193],
        [1.0079],
        [1.0237],
        [1.0220],
        [1.0099],
        [1.0142],
        [1.0355],
        [1.0368],
        [1.0147],
        [1.0108],
        [1.0222],
        [1.0235],
        [1.0066],
        [1.0189],
        [1.0268],
        [1.0289],
        [1.0174],
        [0.9961],
        [1.0250],
        [1.0207],
        [1.0129],
        [1.0164],
        [1.0320],
        [1.0340],
        [1.0172],
        [1.0138],
        [1.0215],
        [1.0259],
        [1.0040],
        [1.0182],
        [1.0302],
        [1.0278],
        [1.0196],
        [1.0084],
        [1.0242],
        [1.0229],
        [1.0119],
        [1.0155],
        [1.0421],
        [1.0429],
        [1.0155],
        [1.0117],
        [1.0231],
        [1.0241],
        [1.0088],
        [1.0197],
        [1.0277],
        [1.0299],
        [1.0183],
        [1.0041],
        [1.0258],
        [1.0215],
        [1.0138],
        [1.0170],
        [1.0344],
        [1.0324],
        [1.0162],
        [1.0128],
        [1.0208],
        [1.0250],
        [0.9978],
        [1.0176],
        [1.0288],
        [1.0267],
        [1.0190],
        [1.0070],
        [1.0233],
        [1.0223],
        [1.0105],
        [1.0146],
        [1.0369],
        [1.0352],
        [1.0143],
        [1.0102],
        [1.0218],
        [1.0238],
        [1.0075],
        [1.0193],
        [1.0273],
        [1.0296],
        [1.0178],
        [1.0018],
        [1.0255],
        [1.0204],
        [1.0124],
        [1.0160],
        [1.0313],
        [1.0329],
        [1.0168],
        [1.0133],
        [1.0211],
        [1.0263],
        [1.0055],
        [1.0185],
        [1.0309],
        [1.0284],
        [1.0200],
        [1.0093],
        [1.0247],
        [1.0226],
        [1.0114],
        [1.0151],
        [1.0388],
        [1.0400],
        [1.0153],
        [1.0116],
        [1.0227],
        [1.0249],
        [1.0096],
        [1.0202],
        [1.0286],
        [1.0312],
        [1.0187],
        [1.0062],
        [1.0266],
        [1.0213],
        [1.0136],
        [1.0170],
        [1.0334],
        [1.0317],
        [1.0162],
        [1.0126],
        [1.0206],
        [1.0257],
        [1.0029],
        [1.0179],
        [1.0298],
        [1.0276],
        [1.0195],
        [1.0080],
        [1.0241],
        [1.0220],
        [1.0105],
        [1.0145],
        [1.0360],
        [1.0380],
        [1.0149],
        [1.0109],
        [1.0225],
        [1.0235],
        [1.0075],
        [1.0192],
        [1.0270]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[24.3681]],
        [[20.8557]],
        [[20.4577]],
        [[21.6746]],
        [[21.7884]],
        [[20.1521]],
        [[21.3086]],
        [[22.1890]],
        [[22.4300]],
        [[21.1544]],
        [[19.7064]],
        [[21.9756]],
        [[21.5024]],
        [[20.6704]],
        [[21.0167]],
        [[22.9348]],
        [[22.7160]],
        [[20.9377]],
        [[20.5750]],
        [[21.4268]],
        [[21.8822]],
        [[19.2356]],
        [[21.0755]],
        [[22.2988]],
        [[22.0752]],
        [[21.2262]],
        [[19.9651]],
        [[21.6979]],
        [[21.5907]],
        [[20.3346]],
        [[20.7654]],
        [[23.2628]],
        [[23.0451]],
        [[20.7232]],
        [[20.2908]],
        [[21.5334]],
        [[21.7585]],
        [[20.0297]],
        [[21.2622]],
        [[22.1373]],
        [[22.3904]],
        [[21.1015]],
        [[19.5074]],
        [[21.9359]],
        [[21.3814]],
        [[20.5276]],
        [[20.9102]],
        [[22.5878]],
        [[22.7753]],
        [[20.9925]],
        [[20.6295]],
        [[21.4591]],
        [[22.0295]],
        [[19.8241]],
        [[21.1776]],
        [[22.5306]],
        [[22.2535]],
        [[21.3421]],
        [[20.1984]],
        [[21.8487]],
        [[21.6185]],
        [[20.4227]],
        [[20.8183]],
        [[23.5251]],
        [[23.3513]],
        [[20.7942]],
        [[20.3905]],
        [[21.5950]],
        [[21.8224]],
        [[20.1555]],
        [[21.3204]],
        [[22.2187]],
        [[22.4984]],
        [[21.1599]],
        [[19.7648]],
        [[22.0086]],
        [[21.4421]],
        [[20.6063]],
        [[20.9735]],
        [[22.7303]],
        [[22.5418]],
        [[20.8853]],
        [[20.4956]],
        [[21.3597]],
        [[21.9104]],
        [[19.3555]],
        [[21.0785]],
        [[22.3543]],
        [[22.1123]],
        [[21.2453]],
        [[19.9883]],
        [[21.7387]],
        [[21.5154]],
        [[20.2626]],
        [[20.7036]],
        [[22.9785]],
        [[23.1675]],
        [[20.7456]],
        [[20.3067]],
        [[21.5719]],
        [[21.6792]],
        [[19.9212]],
        [[21.2099]],
        [[22.0521]],
        [[22.2646]],
        [[21.0517]],
        [[18.8508]],
        [[21.8567]],
        [[21.4055]],
        [[20.5450]],
        [[20.9137]],
        [[22.6640]],
        [[22.8812]],
        [[20.9984]],
        [[20.6487]],
        [[21.4860]],
        [[21.9547]],
        [[19.6297]],
        [[21.1360]],
        [[22.3999]],
        [[22.1569]],
        [[21.2875]],
        [[20.1080]],
        [[21.7635]],
        [[21.6500]],
        [[20.4256]],
        [[20.8313]],
        [[23.7587]],
        [[23.7329]],
        [[20.8395]],
        [[20.4502]],
        [[21.6383]],
        [[21.7827]],
        [[20.0797]],
        [[21.2840]],
        [[22.1680]],
        [[22.4215]],
        [[21.1194]],
        [[19.5999]],
        [[21.9572]],
        [[21.4776]],
        [[20.6520]],
        [[21.0117]],
        [[22.8261]],
        [[22.6339]],
        [[20.9322]],
        [[20.5557]],
        [[21.4019]],
        [[21.8651]],
        [[18.7962]],
        [[21.0401]],
        [[22.2907]],
        [[22.0556]],
        [[21.2017]],
        [[19.8683]],
        [[21.6928]],
        [[21.5550]],
        [[20.3267]],
        [[20.7481]],
        [[23.1372]],
        [[22.9890]],
        [[20.6935]],
        [[20.2301]],
        [[21.5282]],
        [[21.7210]],
        [[20.0177]],
        [[21.2475]],
        [[22.1034]],
        [[22.3319]],
        [[21.0967]],
        [[19.4115]],
        [[21.9067]],
        [[21.3665]],
        [[20.4937]],
        [[20.8726]],
        [[22.5776]],
        [[22.7615]],
        [[20.9564]],
        [[20.5978]],
        [[21.4444]],
        [[21.9981]],
        [[19.7746]],
        [[21.1726]],
        [[22.4638]],
        [[22.2167]],
        [[21.3272]],
        [[20.1893]],
        [[21.8093]],
        [[21.6135]],
        [[20.3696]],
        [[20.7905]],
        [[23.4034]],
        [[23.5449]],
        [[20.8111]],
        [[20.3979]],
        [[21.6311]],
        [[21.8278]],
        [[20.2222]],
        [[21.3448]],
        [[22.2410]],
        [[22.5083]],
        [[21.1944]],
        [[19.8472]],
        [[22.0273]],
        [[21.4671]],
        [[20.6249]],
        [[20.9789]],
        [[22.8239]],
        [[22.6156]],
        [[20.8905]],
        [[20.5163]],
        [[21.3841]],
        [[21.9282]],
        [[19.5189]],
        [[21.1139]],
        [[22.3623]],
        [[22.1323]],
        [[21.2700]],
        [[20.0697]],
        [[21.7442]],
        [[21.5505]],
        [[20.2716]],
        [[20.7211]],
        [[23.0751]],
        [[23.2448]],
        [[20.7740]],
        [[20.3631]],
        [[21.5768]],
        [[21.7165]],
        [[19.9341]],
        [[21.2249]],
        [[22.0843]],
        [[22.3190]],
        [[21.0569]],
        [[19.1355]],
        [[21.8855]],
        [[21.4202]],
        [[20.5779]],
        [[20.9504]],
        [[22.6761]],
        [[22.8964]],
        [[21.0344]],
        [[20.6789]],
        [[21.5011]],
        [[21.9849]],
        [[19.6940]],
        [[21.1408]],
        [[22.4628]],
        [[22.1922]],
        [[21.3022]],
        [[20.1186]],
        [[21.8017]],
        [[21.6555]],
        [[20.4756]],
        [[20.8589]],
        [[24.0432]],
        [[24.0179]],
        [[20.8687]],
        [[20.4743]],
        [[21.6649]],
        [[21.7973]],
        [[20.1309]],
        [[21.2981]],
        [[22.2007]],
        [[22.4474]],
        [[21.1424]],
        [[19.6592]],
        [[21.9868]],
        [[21.4945]],
        [[20.6830]],
        [[21.0277]],
        [[22.9075]],
        [[22.6903]],
        [[20.9461]],
        [[20.5856]],
        [[21.4162]],
        [[21.8960]],
        [[19.1228]],
        [[21.0661]],
        [[22.3175]],
        [[22.0888]],
        [[21.2184]],
        [[19.9432]],
        [[21.7095]],
        [[21.5784]],
        [[20.3498]],
        [[20.7758]],
        [[23.2005]],
        [[23.0896]],
        [[20.7134]],
        [[20.2774]],
        [[21.5438]],
        [[21.7459]],
        [[20.0508]],
        [[21.2716]],
        [[22.1210]],
        [[22.3722]],
        [[21.1098]],
        [[19.5512]],
        [[21.9235]],
        [[21.3931]],
        [[20.5150]],
        [[20.9002]],
        [[22.6135]],
        [[22.8002]],
        [[20.9805]],
        [[20.6143]],
        [[21.4687]],
        [[22.0190]],
        [[19.8576]],
        [[21.1880]],
        [[22.5150]],
        [[22.2397]],
        [[21.3537]],
        [[20.2205]],
        [[21.8380]],
        [[21.6269]],
        [[20.4069]],
        [[20.8065]],
        [[23.6038]],
        [[23.4150]],
        [[20.7810]],
        [[20.3720]],
        [[21.6048]],
        [[21.8130]],
        [[20.1767]],
        [[21.3306]],
        [[22.2072]],
        [[22.4806]],
        [[21.1716]],
        [[19.8053]],
        [[21.9969]],
        [[21.4503]],
        [[20.5927]],
        [[20.9626]],
        [[22.7508]],
        [[22.5639]],
        [[20.8763]],
        [[20.4846]],
        [[21.3699]],
        [[21.8968]],
        [[19.4223]],
        [[21.0882]],
        [[22.3344]],
        [[22.0980]],
        [[21.2534]],
        [[20.0081]],
        [[21.7274]],
        [[21.5272]],
        [[20.2464]],
        [[20.6924]],
        [[23.0227]],
        [[23.1187]],
        [[20.7549]],
        [[20.3201]],
        [[21.5610]],
        [[21.6919]],
        [[19.8947]],
        [[21.2008]],
        [[22.0672]],
        [[22.2806]],
        [[21.0437]],
        [[18.3929]],
        [[21.8690]],
        [[21.3936]],
        [[20.5577]],
        [[20.9233]],
        [[22.6374]],
        [[22.8525]],
        [[21.0107]],
        [[20.6631]],
        [[21.4767]],
        [[21.9644]],
        [[19.5803]],
        [[21.1253]],
        [[22.4143]],
        [[22.1702]],
        [[21.2757]],
        [[20.0831]],
        [[21.7735]],
        [[21.6419]],
        [[20.4407]],
        [[20.8433]],
        [[23.6507]],
        [[23.9110]],
        [[20.8303]],
        [[20.4389]],
        [[21.6491]],
        [[21.7700]],
        [[20.0994]],
        [[21.2934]],
        [[22.1512]],
        [[22.4026]],
        [[21.1276]],
        [[19.6367]],
        [[21.9446]],
        [[21.4894]],
        [[20.6406]],
        [[21.0020]],
        [[22.8611]],
        [[22.6545]],
        [[20.9200]],
        [[20.5396]],
        [[21.4114]],
        [[21.8556]],
        [[19.0488]],
        [[21.0507]],
        [[22.2785]],
        [[22.0437]],
        [[21.2133]],
        [[19.9029]],
        [[21.6828]],
        [[21.5633]],
        [[20.3092]],
        [[20.7358]],
        [[23.1752]],
        [[22.9555]],
        [[20.7077]],
        [[20.2511]],
        [[21.5189]],
        [[21.7296]],
        [[19.9922]],
        [[21.2370]],
        [[22.1144]],
        [[22.3476]],
        [[21.0845]],
        [[19.3221]],
        [[21.9173]],
        [[21.3587]],
        [[20.5080]],
        [[20.8842]],
        [[22.5603]],
        [[22.7344]],
        [[20.9648]],
        [[20.6082]],
        [[21.4338]],
        [[22.0129]],
        [[19.7411]],
        [[21.1633]],
        [[22.4859]],
        [[22.2319]],
        [[21.3195]],
        [[20.1733]],
        [[21.8214]],
        [[21.6011]],
        [[20.3844]],
        [[20.8008]],
        [[23.3250]],
        [[23.4539]],
        [[20.8200]],
        [[20.4102]],
        [[21.6201]],
        [[21.8413]],
        [[20.2048]],
        [[21.3357]],
        [[22.2587]],
        [[22.5287]],
        [[21.1866]],
        [[19.8211]],
        [[22.0410]],
        [[21.4551]],
        [[20.6369]],
        [[20.9883]],
        [[22.7914]],
        [[22.5952]],
        [[20.9033]],
        [[20.5322]],
        [[21.3749]],
        [[21.9377]],
        [[19.4564]],
        [[21.1031]],
        [[22.3761]],
        [[22.1454]],
        [[21.2582]],
        [[20.0435]],
        [[21.7541]],
        [[21.5425]],
        [[20.2892]],
        [[20.7338]],
        [[23.0413]],
        [[23.2972]],
        [[20.7607]],
        [[20.3441]],
        [[21.5866]],
        [[21.7075]],
        [[19.9627]],
        [[21.2351]],
        [[22.0740]],
        [[22.3042]],
        [[21.0689]],
        [[19.2700]],
        [[21.8746]],
        [[21.4283]],
        [[20.5640]],
        [[20.9394]],
        [[22.6953]],
        [[22.9315]],
        [[21.0259]],
        [[20.6693]],
        [[21.5115]],
        [[21.9707]],
        [[19.7292]],
        [[21.1504]],
        [[22.4406]],
        [[22.1771]],
        [[21.3102]],
        [[20.1352]],
        [[21.7901]],
        [[21.6677]],
        [[20.4625]],
        [[20.8485]],
        [[24.6504]],
        [[24.8082]],
        [[20.8501]],
        [[20.4641]],
        [[21.6692]],
        [[21.7940]],
        [[20.1431]],
        [[21.3137]],
        [[22.1826]],
        [[22.4387]],
        [[21.1490]],
        [[19.7250]],
        [[21.9690]],
        [[21.5079]],
        [[20.6646]],
        [[21.0223]],
        [[22.9187]],
        [[22.7048]],
        [[20.9431]],
        [[20.5691]],
        [[21.4319]],
        [[21.8763]],
        [[19.2806]],
        [[21.0703]],
        [[22.3059]],
        [[22.0689]],
        [[21.2316]],
        [[19.9525]],
        [[21.7037]],
        [[21.5851]],
        [[20.3423]],
        [[20.7592]],
        [[23.2907]],
        [[23.0274]],
        [[20.7292]],
        [[20.2831]],
        [[21.5386]],
        [[21.7529]],
        [[20.0402]],
        [[21.2571]],
        [[22.1435]],
        [[22.3822]],
        [[21.1070]],
        [[19.4789]],
        [[21.9424]],
        [[21.3760]],
        [[20.5341]],
        [[20.9044]],
        [[22.5982]],
        [[22.7876]],
        [[20.9872]],
        [[20.6351]],
        [[21.4540]],
        [[22.0360]],
        [[19.8094]],
        [[21.1828]],
        [[22.5216]],
        [[22.2608]],
        [[21.3367]],
        [[20.2074]],
        [[21.8425]],
        [[21.6241]],
        [[20.4156]],
        [[20.8243]],
        [[23.4829]],
        [[23.3164]],
        [[20.7996]],
        [[20.3822]],
        [[21.5999]],
        [[21.8170]],
        [[20.1663]],
        [[21.3156]],
        [[22.2267]],
        [[22.4885]],
        [[21.1644]],
        [[19.7463]],
        [[22.0143]],
        [[21.4376]],
        [[20.6128]],
        [[20.9688]],
        [[22.7435]],
        [[22.5530]],
        [[20.8801]],
        [[20.5031]],
        [[21.3549]],
        [[21.9160]],
        [[19.3098]],
        [[21.0834]],
        [[22.3453]],
        [[22.1192]],
        [[21.2409]],
        [[20.0010]],
        [[21.7339]],
        [[21.5200]],
        [[20.2536]],
        [[20.7090]],
        [[22.9603]],
        [[23.1944]],
        [[20.7400]],
        [[20.3157]],
        [[21.5669]],
        [[21.6843]],
        [[19.9060]],
        [[21.2147]],
        [[22.0451]],
        [[22.2725]],
        [[21.0471]],
        [[18.9762]],
        [[21.8515]],
        [[21.4100]],
        [[20.5381]],
        [[20.9185]],
        [[22.6521]],
        [[22.8644]],
        [[21.0034]],
        [[20.6419]],
        [[21.4908]],
        [[21.9489]],
        [[19.6538]],
        [[21.1312]],
        [[22.4094]],
        [[22.1497]],
        [[21.2920]],
        [[20.0971]],
        [[21.7684]],
        [[21.6453]],
        [[20.4332]],
        [[20.8263]],
        [[23.8394]],
        [[23.6671]],
        [[20.8445]],
        [[20.4428]],
        [[21.6430]],
        [[21.7778]],
        [[20.0909]],
        [[21.2795]],
        [[22.1752]],
        [[22.4119]],
        [[21.1242]],
        [[19.5732]],
        [[21.9630]],
        [[21.4727]],
        [[20.6587]],
        [[21.0067]],
        [[22.8420]],
        [[22.6455]],
        [[20.9275]],
        [[20.5624]],
        [[21.3974]],
        [[21.8703]],
        [[18.5365]],
        [[21.0448]],
        [[22.2828]],
        [[22.0626]],
        [[21.1969]],
        [[19.8843]],
        [[21.6877]],
        [[21.5599]],
        [[20.3178]],
        [[20.7536]],
        [[23.1126]],
        [[23.0080]],
        [[20.6881]],
        [[20.2394]],
        [[21.5236]],
        [[21.7258]],
        [[20.0054]],
        [[21.2520]],
        [[22.0966]],
        [[22.3407]],
        [[21.0918]],
        [[19.4483]],
        [[21.9010]],
        [[21.3713]],
        [[20.4861]],
        [[20.8778]],
        [[22.5661]],
        [[22.7481]],
        [[20.9611]],
        [[20.5912]],
        [[21.4489]],
        [[21.9925]],
        [[19.7922]],
        [[21.1681]],
        [[22.4733]],
        [[22.2088]],
        [[21.3319]],
        [[20.1789]],
        [[21.8146]],
        [[21.6085]],
        [[20.3781]],
        [[20.7851]],
        [[23.4443]],
        [[23.5926]],
        [[20.8050]],
        [[20.4052]],
        [[21.6254]],
        [[21.8339]],
        [[20.2133]],
        [[21.3502]],
        [[22.2339]],
        [[22.5171]],
        [[21.1893]],
        [[19.8609]],
        [[22.0208]],
        [[21.4723]],
        [[20.6192]],
        [[20.9842]],
        [[22.8110]],
        [[22.6051]],
        [[20.8964]],
        [[20.5097]],
        [[21.3895]],
        [[21.9218]],
        [[19.5453]],
        [[21.1084]],
        [[22.3704]],
        [[22.1262]],
        [[21.2751]],
        [[20.0596]],
        [[21.7498]],
        [[21.5453]],
        [[20.2793]],
        [[20.7150]],
        [[23.0942]],
        [[23.2189]],
        [[20.7802]],
        [[20.3555]],
        [[21.5824]],
        [[21.7107]],
        [[19.9470]],
        [[21.2195]],
        [[22.0906]],
        [[22.3118]],
        [[21.0621]],
        [[19.0694]],
        [[21.8914]],
        [[21.4151]],
        [[20.5838]],
        [[20.9450]],
        [[22.6869]],
        [[22.9119]],
        [[21.0288]],
        [[20.6847]],
        [[21.4956]],
        [[21.9916]],
        [[19.6743]],
        [[21.1462]],
        [[22.4539]],
        [[22.1987]],
        [[21.2971]],
        [[20.1279]],
        [[21.7961]],
        [[21.6608]],
        [[20.4692]],
        [[20.8645]],
        [[23.9360]],
        [[24.1615]],
        [[20.8628]],
        [[20.4811]],
        [[21.6592]],
        [[21.8033]],
        [[20.1209]],
        [[21.3035]],
        [[22.1938]],
        [[22.4556]],
        [[21.1372]],
        [[19.6781]],
        [[21.9804]],
        [[21.4997]],
        [[20.6775]],
        [[21.0330]],
        [[22.8930]],
        [[22.6787]],
        [[20.9518]],
        [[20.5794]],
        [[21.4216]],
        [[21.8896]],
        [[19.1849]],
        [[21.0605]],
        [[22.3252]],
        [[22.0829]],
        [[21.2235]],
        [[19.9311]],
        [[21.7149]],
        [[21.5731]],
        [[20.3570]],
        [[20.7700]],
        [[23.2240]],
        [[23.0694]],
        [[20.7198]],
        [[20.2691]],
        [[21.5494]],
        [[21.7400]],
        [[20.0617]],
        [[21.2662]],
        [[22.1275]],
        [[22.3646]],
        [[21.1150]],
        [[19.5268]],
        [[21.9296]],
        [[21.3880]],
        [[20.5212]],
        [[20.8947]],
        [[22.6235]],
        [[22.8137]],
        [[20.9749]],
        [[20.6204]],
        [[21.4632]],
        [[22.0258]],
        [[19.8428]],
        [[21.1934]],
        [[22.5056]],
        [[22.2464]],
        [[21.3486]],
        [[20.2288]],
        [[21.8322]],
        [[21.6322]],
        [[20.4001]],
        [[20.8123]],
        [[23.5581]],
        [[23.3782]],
        [[20.7861]],
        [[20.3640]],
        [[21.6094]],
        [[21.8080]],
        [[20.1866]],
        [[21.3261]],
        [[22.2147]],
        [[22.4704]],
        [[21.1764]],
        [[19.7870]],
        [[22.0029]],
        [[21.4455]],
        [[20.5996]],
        [[20.9575]],
        [[22.7652]],
        [[22.5746]],
        [[20.8714]],
        [[20.4917]],
        [[21.3654]],
        [[21.9021]],
        [[19.3856]],
        [[21.0928]],
        [[22.3261]],
        [[22.1053]],
        [[21.2486]],
        [[20.0211]],
        [[21.7222]],
        [[21.5321]],
        [[20.2366]],
        [[20.6981]],
        [[23.0021]],
        [[23.1420]],
        [[20.7497]],
        [[20.3285]],
        [[21.5564]],
        [[21.6966]],
        [[19.8798]],
        [[21.2052]],
        [[22.0606]],
        [[22.2891]],
        [[21.0387]],
        [[18.7553]],
        [[21.8635]],
        [[21.3983]],
        [[20.5505]],
        [[20.9285]],
        [[22.6252]],
        [[22.8373]],
        [[21.0153]],
        [[20.6568]],
        [[21.4812]],
        [[21.9589]],
        [[19.6052]],
        [[21.1208]],
        [[22.4234]],
        [[22.1626]],
        [[21.2805]],
        [[20.0711]],
        [[21.7788]],
        [[21.6369]],
        [[20.4486]],
        [[20.8380]],
        [[23.7184]],
        [[23.8132]],
        [[20.8356]],
        [[20.4309]],
        [[21.6541]],
        [[21.7647]],
        [[20.1110]],
        [[21.2886]],
        [[22.1588]],
        [[22.3938]],
        [[21.1321]],
        [[19.6133]],
        [[21.9500]],
        [[21.4849]],
        [[20.6469]],
        [[20.9973]],
        [[22.8768]],
        [[22.6672]],
        [[20.9148]],
        [[20.5469]],
        [[21.4066]],
        [[21.8611]],
        [[18.9430]],
        [[21.0557]],
        [[22.2701]],
        [[22.0503]],
        [[21.2088]],
        [[19.9173]],
        [[21.6781]],
        [[21.5679]],
        [[20.3007]],
        [[20.7411]],
        [[23.1506]],
        [[22.9746]],
        [[20.7020]],
        [[20.2607]],
        [[21.5140]],
        [[21.7348]],
        [[19.9786]],
        [[21.2418]],
        [[22.1070]],
        [[22.3561]],
        [[21.0799]],
        [[19.3641]],
        [[21.9120]],
        [[21.3632]],
        [[20.5010]],
        [[20.8891]],
        [[22.5497]],
        [[22.7206]],
        [[20.9698]],
        [[20.6013]],
        [[21.4386]],
        [[22.0068]],
        [[19.7608]],
        [[21.1585]],
        [[22.4963]],
        [[22.2243]],
        [[21.3239]],
        [[20.1632]],
        [[21.8264]],
        [[21.5964]],
        [[20.3922]],
        [[20.7957]],
        [[23.3583]],
        [[23.4911]],
        [[20.8143]],
        [[20.4169]],
        [[21.6148]],
        [[21.8471]],
        [[20.1963]],
        [[21.3408]],
        [[22.2519]],
        [[22.5384]],
        [[21.1812]],
        [[19.8364]],
        [[22.0340]],
        [[21.4605]],
        [[20.6309]],
        [[20.9940]],
        [[22.7782]],
        [[22.5856]],
        [[20.9087]],
        [[20.5261]],
        [[21.3800]],
        [[21.9316]],
        [[19.4844]],
        [[21.0979]],
        [[22.3838]],
        [[22.1388]],
        [[21.2635]],
        [[20.0323]],
        [[21.7601]],
        [[21.5370]],
        [[20.2974]],
        [[20.7274]],
        [[23.0606]],
        [[23.2707]],
        [[20.7666]],
        [[20.3368]],
        [[21.5918]],
        [[21.7021]],
        [[19.9742]],
        [[21.2300]],
        [[22.0799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.2703],
        [1.2132],
        [1.2067],
        [1.2265],
        [1.2284],
        [1.2017],
        [1.2206],
        [1.2349],
        [1.2388],
        [1.2180],
        [1.1945],
        [1.2314],
        [1.2237],
        [1.2102],
        [1.2158],
        [1.2470],
        [1.2434],
        [1.2145],
        [1.2086],
        [1.2225],
        [1.2299],
        [1.1868],
        [1.2168],
        [1.2367],
        [1.2330],
        [1.2192],
        [1.1987],
        [1.2269],
        [1.2251],
        [1.2047],
        [1.2117],
        [1.2523],
        [1.2488],
        [1.2110],
        [1.2040],
        [1.2242],
        [1.2279],
        [1.1998],
        [1.2198],
        [1.2340],
        [1.2381],
        [1.2172],
        [1.1913],
        [1.2308],
        [1.2217],
        [1.2078],
        [1.2141],
        [1.2414],
        [1.2444],
        [1.2154],
        [1.2095],
        [1.2230],
        [1.2323],
        [1.1964],
        [1.2184],
        [1.2404],
        [1.2359],
        [1.2211],
        [1.2025],
        [1.2293],
        [1.2256],
        [1.2061],
        [1.2126],
        [1.2566],
        [1.2538],
        [1.2122],
        [1.2056],
        [1.2252],
        [1.2289],
        [1.2018],
        [1.2207],
        [1.2354],
        [1.2399],
        [1.2181],
        [1.1954],
        [1.2319],
        [1.2227],
        [1.2091],
        [1.2151],
        [1.2437],
        [1.2406],
        [1.2137],
        [1.2073],
        [1.2214],
        [1.2303],
        [1.1888],
        [1.2168],
        [1.2376],
        [1.2336],
        [1.2195],
        [1.1991],
        [1.2275],
        [1.2239],
        [1.2035],
        [1.2107],
        [1.2477],
        [1.2508],
        [1.2114],
        [1.2043],
        [1.2248],
        [1.2266],
        [1.1980],
        [1.2189],
        [1.2326],
        [1.2361],
        [1.2164],
        [1.1806],
        [1.2295],
        [1.2221],
        [1.2081],
        [1.2141],
        [1.2426],
        [1.2461],
        [1.2155],
        [1.2098],
        [1.2234],
        [1.2311],
        [1.1932],
        [1.2177],
        [1.2383],
        [1.2343],
        [1.2202],
        [1.2010],
        [1.2279],
        [1.2261],
        [1.2062],
        [1.2128],
        [1.2604],
        [1.2600],
        [1.2129],
        [1.2066],
        [1.2259],
        [1.2283],
        [1.2006],
        [1.2202],
        [1.2345],
        [1.2387],
        [1.2175],
        [1.1928],
        [1.2311],
        [1.2233],
        [1.2099],
        [1.2157],
        [1.2452],
        [1.2421],
        [1.2144],
        [1.2083],
        [1.2221],
        [1.2296],
        [1.1797],
        [1.2162],
        [1.2365],
        [1.2327],
        [1.2188],
        [1.1971],
        [1.2268],
        [1.2246],
        [1.2046],
        [1.2114],
        [1.2503],
        [1.2479],
        [1.2105],
        [1.2030],
        [1.2241],
        [1.2273],
        [1.1996],
        [1.2196],
        [1.2335],
        [1.2372],
        [1.2171],
        [1.1897],
        [1.2303],
        [1.2215],
        [1.2073],
        [1.2135],
        [1.2412],
        [1.2442],
        [1.2148],
        [1.2090],
        [1.2228],
        [1.2318],
        [1.1956],
        [1.2183],
        [1.2393],
        [1.2353],
        [1.2209],
        [1.2023],
        [1.2287],
        [1.2255],
        [1.2053],
        [1.2121],
        [1.2546],
        [1.2569],
        [1.2125],
        [1.2057],
        [1.2258],
        [1.2290],
        [1.2029],
        [1.2211],
        [1.2357],
        [1.2401],
        [1.2187],
        [1.1968],
        [1.2322],
        [1.2231],
        [1.2094],
        [1.2152],
        [1.2452],
        [1.2418],
        [1.2138],
        [1.2077],
        [1.2218],
        [1.2306],
        [1.1914],
        [1.2174],
        [1.2377],
        [1.2339],
        [1.2199],
        [1.2004],
        [1.2276],
        [1.2245],
        [1.2037],
        [1.2110],
        [1.2493],
        [1.2520],
        [1.2119],
        [1.2052],
        [1.2249],
        [1.2272],
        [1.1982],
        [1.2192],
        [1.2332],
        [1.2370],
        [1.2165],
        [1.1852],
        [1.2299],
        [1.2224],
        [1.2087],
        [1.2147],
        [1.2428],
        [1.2464],
        [1.2161],
        [1.2103],
        [1.2237],
        [1.2316],
        [1.1943],
        [1.2178],
        [1.2393],
        [1.2349],
        [1.2204],
        [1.2012],
        [1.2286],
        [1.2262],
        [1.2070],
        [1.2132],
        [1.2650],
        [1.2646],
        [1.2134],
        [1.2070],
        [1.2263],
        [1.2285],
        [1.2014],
        [1.2204],
        [1.2351],
        [1.2391],
        [1.2178],
        [1.1937],
        [1.2316],
        [1.2236],
        [1.2104],
        [1.2160],
        [1.2466],
        [1.2430],
        [1.2147],
        [1.2088],
        [1.2223],
        [1.2301],
        [1.1850],
        [1.2166],
        [1.2370],
        [1.2332],
        [1.2191],
        [1.1983],
        [1.2271],
        [1.2249],
        [1.2050],
        [1.2119],
        [1.2513],
        [1.2495],
        [1.2109],
        [1.2038],
        [1.2244],
        [1.2277],
        [1.2001],
        [1.2199],
        [1.2338],
        [1.2378],
        [1.2173],
        [1.1920],
        [1.2306],
        [1.2219],
        [1.2076],
        [1.2139],
        [1.2418],
        [1.2448],
        [1.2152],
        [1.2093],
        [1.2232],
        [1.2321],
        [1.1970],
        [1.2186],
        [1.2402],
        [1.2357],
        [1.2213],
        [1.2029],
        [1.2292],
        [1.2257],
        [1.2059],
        [1.2124],
        [1.2579],
        [1.2548],
        [1.2120],
        [1.2053],
        [1.2254],
        [1.2288],
        [1.2021],
        [1.2209],
        [1.2352],
        [1.2396],
        [1.2183],
        [1.1961],
        [1.2317],
        [1.2229],
        [1.2089],
        [1.2149],
        [1.2440],
        [1.2410],
        [1.2135],
        [1.2071],
        [1.2215],
        [1.2301],
        [1.1899],
        [1.2170],
        [1.2372],
        [1.2334],
        [1.2197],
        [1.1994],
        [1.2274],
        [1.2241],
        [1.2033],
        [1.2105],
        [1.2484],
        [1.2500],
        [1.2115],
        [1.2045],
        [1.2247],
        [1.2268],
        [1.1976],
        [1.2188],
        [1.2329],
        [1.2364],
        [1.2162],
        [1.1731],
        [1.2297],
        [1.2219],
        [1.2083],
        [1.2143],
        [1.2422],
        [1.2457],
        [1.2157],
        [1.2101],
        [1.2233],
        [1.2312],
        [1.1924],
        [1.2176],
        [1.2385],
        [1.2346],
        [1.2200],
        [1.2006],
        [1.2281],
        [1.2260],
        [1.2064],
        [1.2130],
        [1.2586],
        [1.2629],
        [1.2128],
        [1.2064],
        [1.2261],
        [1.2281],
        [1.2009],
        [1.2203],
        [1.2343],
        [1.2383],
        [1.2176],
        [1.1934],
        [1.2309],
        [1.2235],
        [1.2097],
        [1.2156],
        [1.2458],
        [1.2424],
        [1.2142],
        [1.2080],
        [1.2222],
        [1.2294],
        [1.1838],
        [1.2164],
        [1.2363],
        [1.2325],
        [1.2190],
        [1.1977],
        [1.2266],
        [1.2247],
        [1.2043],
        [1.2112],
        [1.2509],
        [1.2473],
        [1.2108],
        [1.2034],
        [1.2240],
        [1.2274],
        [1.1991],
        [1.2194],
        [1.2337],
        [1.2375],
        [1.2169],
        [1.1882],
        [1.2305],
        [1.2214],
        [1.2075],
        [1.2136],
        [1.2409],
        [1.2437],
        [1.2150],
        [1.2092],
        [1.2226],
        [1.2320],
        [1.1951],
        [1.2182],
        [1.2397],
        [1.2356],
        [1.2207],
        [1.2021],
        [1.2289],
        [1.2253],
        [1.2055],
        [1.2123],
        [1.2533],
        [1.2554],
        [1.2126],
        [1.2059],
        [1.2256],
        [1.2292],
        [1.2026],
        [1.2210],
        [1.2360],
        [1.2404],
        [1.2186],
        [1.1964],
        [1.2325],
        [1.2229],
        [1.2096],
        [1.2153],
        [1.2447],
        [1.2415],
        [1.2140],
        [1.2079],
        [1.2216],
        [1.2308],
        [1.1904],
        [1.2172],
        [1.2379],
        [1.2342],
        [1.2197],
        [1.2000],
        [1.2278],
        [1.2244],
        [1.2040],
        [1.2112],
        [1.2487],
        [1.2529],
        [1.2116],
        [1.2049],
        [1.2251],
        [1.2270],
        [1.1987],
        [1.2194],
        [1.2330],
        [1.2367],
        [1.2167],
        [1.1874],
        [1.2298],
        [1.2225],
        [1.2084],
        [1.2145],
        [1.2431],
        [1.2469],
        [1.2160],
        [1.2102],
        [1.2239],
        [1.2313],
        [1.1949],
        [1.2180],
        [1.2390],
        [1.2347],
        [1.2206],
        [1.2015],
        [1.2284],
        [1.2264],
        [1.2068],
        [1.2131],
        [1.2749],
        [1.2775],
        [1.2131],
        [1.2068],
        [1.2264],
        [1.2284],
        [1.2016],
        [1.2206],
        [1.2348],
        [1.2389],
        [1.2180],
        [1.1948],
        [1.2313],
        [1.2238],
        [1.2101],
        [1.2159],
        [1.2467],
        [1.2433],
        [1.2146],
        [1.2085],
        [1.2226],
        [1.2298],
        [1.1876],
        [1.2167],
        [1.2368],
        [1.2329],
        [1.2193],
        [1.1985],
        [1.2270],
        [1.2250],
        [1.2048],
        [1.2116],
        [1.2528],
        [1.2485],
        [1.2111],
        [1.2039],
        [1.2243],
        [1.2278],
        [1.1999],
        [1.2197],
        [1.2341],
        [1.2380],
        [1.2173],
        [1.1908],
        [1.2309],
        [1.2216],
        [1.2080],
        [1.2140],
        [1.2415],
        [1.2446],
        [1.2153],
        [1.2096],
        [1.2229],
        [1.2324],
        [1.1962],
        [1.2185],
        [1.2403],
        [1.2360],
        [1.2210],
        [1.2026],
        [1.2292],
        [1.2257],
        [1.2060],
        [1.2127],
        [1.2559],
        [1.2532],
        [1.2123],
        [1.2055],
        [1.2253],
        [1.2288],
        [1.2020],
        [1.2207],
        [1.2355],
        [1.2397],
        [1.2182],
        [1.1951],
        [1.2320],
        [1.2226],
        [1.2092],
        [1.2150],
        [1.2439],
        [1.2408],
        [1.2136],
        [1.2074],
        [1.2213],
        [1.2304],
        [1.1880],
        [1.2169],
        [1.2374],
        [1.2337],
        [1.2194],
        [1.1993],
        [1.2275],
        [1.2240],
        [1.2034],
        [1.2108],
        [1.2474],
        [1.2512],
        [1.2113],
        [1.2044],
        [1.2248],
        [1.2267],
        [1.1977],
        [1.2190],
        [1.2325],
        [1.2362],
        [1.2163],
        [1.1826],
        [1.2294],
        [1.2222],
        [1.2080],
        [1.2142],
        [1.2424],
        [1.2459],
        [1.2156],
        [1.2097],
        [1.2235],
        [1.2310],
        [1.1936],
        [1.2177],
        [1.2385],
        [1.2342],
        [1.2203],
        [1.2008],
        [1.2280],
        [1.2260],
        [1.2063],
        [1.2127],
        [1.2617],
        [1.2589],
        [1.2130],
        [1.2065],
        [1.2260],
        [1.2282],
        [1.2007],
        [1.2201],
        [1.2346],
        [1.2385],
        [1.2176],
        [1.1923],
        [1.2312],
        [1.2232],
        [1.2100],
        [1.2156],
        [1.2455],
        [1.2423],
        [1.2144],
        [1.2084],
        [1.2220],
        [1.2297],
        [1.1755],
        [1.2163],
        [1.2364],
        [1.2328],
        [1.2187],
        [1.1974],
        [1.2267],
        [1.2246],
        [1.2044],
        [1.2115],
        [1.2499],
        [1.2482],
        [1.2105],
        [1.2032],
        [1.2240],
        [1.2273],
        [1.1994],
        [1.2196],
        [1.2334],
        [1.2373],
        [1.2170],
        [1.1903],
        [1.2302],
        [1.2216],
        [1.2072],
        [1.2135],
        [1.2410],
        [1.2440],
        [1.2149],
        [1.2089],
        [1.2228],
        [1.2317],
        [1.1959],
        [1.2183],
        [1.2395],
        [1.2352],
        [1.2209],
        [1.2022],
        [1.2288],
        [1.2254],
        [1.2054],
        [1.2120],
        [1.2553],
        [1.2577],
        [1.2124],
        [1.2059],
        [1.2257],
        [1.2291],
        [1.2027],
        [1.2212],
        [1.2356],
        [1.2402],
        [1.2186],
        [1.1970],
        [1.2321],
        [1.2232],
        [1.2093],
        [1.2153],
        [1.2450],
        [1.2416],
        [1.2138],
        [1.2076],
        [1.2219],
        [1.2305],
        [1.1919],
        [1.2173],
        [1.2378],
        [1.2338],
        [1.2200],
        [1.2002],
        [1.2277],
        [1.2244],
        [1.2038],
        [1.2109],
        [1.2496],
        [1.2516],
        [1.2120],
        [1.2050],
        [1.2250],
        [1.2271],
        [1.1984],
        [1.2191],
        [1.2333],
        [1.2369],
        [1.2165],
        [1.1841],
        [1.2300],
        [1.2223],
        [1.2088],
        [1.2146],
        [1.2430],
        [1.2466],
        [1.2160],
        [1.2104],
        [1.2236],
        [1.2317],
        [1.1940],
        [1.2179],
        [1.2392],
        [1.2350],
        [1.2204],
        [1.2013],
        [1.2285],
        [1.2263],
        [1.2069],
        [1.2133],
        [1.2633],
        [1.2670],
        [1.2133],
        [1.2071],
        [1.2263],
        [1.2286],
        [1.2012],
        [1.2205],
        [1.2349],
        [1.2392],
        [1.2178],
        [1.1940],
        [1.2315],
        [1.2237],
        [1.2103],
        [1.2161],
        [1.2463],
        [1.2428],
        [1.2147],
        [1.2087],
        [1.2224],
        [1.2300],
        [1.1860],
        [1.2165],
        [1.2371],
        [1.2331],
        [1.2192],
        [1.1981],
        [1.2272],
        [1.2249],
        [1.2051],
        [1.2118],
        [1.2517],
        [1.2492],
        [1.2110],
        [1.2036],
        [1.2245],
        [1.2276],
        [1.2003],
        [1.2199],
        [1.2339],
        [1.2377],
        [1.2174],
        [1.1916],
        [1.2307],
        [1.2218],
        [1.2077],
        [1.2138],
        [1.2419],
        [1.2450],
        [1.2151],
        [1.2094],
        [1.2231],
        [1.2322],
        [1.1967],
        [1.2187],
        [1.2400],
        [1.2358],
        [1.2212],
        [1.2030],
        [1.2291],
        [1.2258],
        [1.2058],
        [1.2125],
        [1.2571],
        [1.2542],
        [1.2121],
        [1.2052],
        [1.2254],
        [1.2287],
        [1.2023],
        [1.2208],
        [1.2353],
        [1.2394],
        [1.2184],
        [1.1958],
        [1.2318],
        [1.2228],
        [1.2090],
        [1.2148],
        [1.2442],
        [1.2411],
        [1.2134],
        [1.2073],
        [1.2215],
        [1.2302],
        [1.1893],
        [1.2170],
        [1.2371],
        [1.2335],
        [1.2196],
        [1.1996],
        [1.2273],
        [1.2242],
        [1.2031],
        [1.2106],
        [1.2481],
        [1.2504],
        [1.2115],
        [1.2046],
        [1.2246],
        [1.2269],
        [1.1973],
        [1.2189],
        [1.2328],
        [1.2365],
        [1.2162],
        [1.1790],
        [1.2296],
        [1.2220],
        [1.2082],
        [1.2144],
        [1.2420],
        [1.2454],
        [1.2158],
        [1.2100],
        [1.2234],
        [1.2311],
        [1.1928],
        [1.2175],
        [1.2387],
        [1.2344],
        [1.2201],
        [1.2004],
        [1.2282],
        [1.2259],
        [1.2066],
        [1.2129],
        [1.2597],
        [1.2613],
        [1.2129],
        [1.2063],
        [1.2262],
        [1.2280],
        [1.2011],
        [1.2202],
        [1.2344],
        [1.2382],
        [1.2177],
        [1.1930],
        [1.2310],
        [1.2234],
        [1.2098],
        [1.2155],
        [1.2461],
        [1.2426],
        [1.2141],
        [1.2082],
        [1.2221],
        [1.2295],
        [1.1821],
        [1.2164],
        [1.2362],
        [1.2326],
        [1.2189],
        [1.1979],
        [1.2266],
        [1.2248],
        [1.2042],
        [1.2113],
        [1.2505],
        [1.2476],
        [1.2107],
        [1.2035],
        [1.2239],
        [1.2275],
        [1.1989],
        [1.2195],
        [1.2335],
        [1.2376],
        [1.2168],
        [1.1889],
        [1.2304],
        [1.2214],
        [1.2074],
        [1.2137],
        [1.2407],
        [1.2435],
        [1.2150],
        [1.2090],
        [1.2227],
        [1.2319],
        [1.1954],
        [1.2181],
        [1.2399],
        [1.2354],
        [1.2208],
        [1.2019],
        [1.2290],
        [1.2252],
        [1.2056],
        [1.2122],
        [1.2539],
        [1.2560],
        [1.2125],
        [1.2060],
        [1.2255],
        [1.2293],
        [1.2025],
        [1.2211],
        [1.2359],
        [1.2406],
        [1.2185],
        [1.1966],
        [1.2323],
        [1.2230],
        [1.2095],
        [1.2154],
        [1.2445],
        [1.2413],
        [1.2140],
        [1.2078],
        [1.2217],
        [1.2307],
        [1.1909],
        [1.2171],
        [1.2380],
        [1.2341],
        [1.2198],
        [1.1998],
        [1.2279],
        [1.2243],
        [1.2041],
        [1.2111],
        [1.2490],
        [1.2525],
        [1.2117],
        [1.2047],
        [1.2252],
        [1.2270],
        [1.1988],
        [1.2193],
        [1.2331]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[29.6925],
         [54.5581],
         [23.5288],
         ...,
         [69.3357],
         [15.9100],
         [40.9207]],
        [[13.1841],
         [42.9321],
         [16.9913],
         ...,
         [58.1666],
         [12.4272],
         [38.3417]],
        [[11.9235],
         [41.6772],
         [16.3203],
         ...,
         [56.9155],
         [12.0529],
         [38.0340]],
        ...,
        [[10.5252],
         [40.1705],
         [15.5241],
         ...,
         [55.4000],
         [11.6040],
         [37.6555]],
        [[14.4660],
         [44.1242],
         [17.6354],
         ...,
         [59.3460],
         [12.7831],
         [38.6280]],
        [[17.7529],
         [46.8731],
         [19.1442],
         ...,
         [62.0340],
         [13.6049],
         [39.2674]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.1782, 1.5068, 1.0967,  ..., 1.7021, 0.9960, 1.3266],
        [0.9600, 1.3531, 1.0103,  ..., 1.5545, 0.9500, 1.2925],
        [0.9433, 1.3366, 1.0014,  ..., 1.5379, 0.9451, 1.2884],
        ...,
        [0.9249, 1.3166, 0.9909,  ..., 1.5179, 0.9391, 1.2834],
        [0.9769, 1.3689, 1.0188,  ..., 1.5701, 0.9547, 1.2963],
        [1.0204, 1.4052, 1.0388,  ..., 1.6056, 0.9656, 1.3047]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[ 86.5012],
         [ 39.2684],
         [ 24.6173],
         ...,
         [111.2684],
         [ 13.0949],
         [132.0979]],
        [[ 19.6861],
         [ 29.0077],
         [ 10.4708],
         ...,
         [ 32.2544],
         [ 11.0254],
         [ 49.1179]],
        [[ 16.3901],
         [ 27.9403],
         [  9.4194],
         ...,
         [ 27.6706],
         [ 10.7931],
         [ 43.4564]],
        ...,
        [[ 13.0559],
         [ 26.6699],
         [  8.2600],
         ...,
         [ 22.8765],
         [ 10.5116],
         [ 37.3283]],
        [[ 23.3147],
         [ 30.0293],
         [ 11.5454],
         ...,
         [ 37.1579],
         [ 11.2443],
         [ 54.9976]],
        [[ 33.8653],
         [ 32.4128],
         [ 14.3232],
         ...,
         [ 50.7779],
         [ 11.7428],
         [ 70.5829]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[2.5183, 1.5054, 1.1913,  ..., 3.0494, 0.9442, 3.4960],
        [1.0855, 1.2854, 0.8879,  ..., 1.3550, 0.8998, 1.7166],
        [1.0148, 1.2625, 0.8654,  ..., 1.2567, 0.8948, 1.5952],
        ...,
        [0.9433, 1.2353, 0.8405,  ..., 1.1539, 0.8888, 1.4638],
        [1.1633, 1.3073, 0.9110,  ..., 1.4602, 0.9045, 1.8427],
        [1.3896, 1.3584, 0.9705,  ..., 1.7522, 0.9152, 2.1769]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.1690],
         [33.5102],
         [52.1846],
         ...,
         [21.4599],
         [26.0119],
         [69.3910]],
        [[10.8719],
         [24.1198],
         [35.5517],
         ...,
         [12.8572],
         [15.3383],
         [57.7956]],
        [[10.4328],
         [23.1578],
         [33.9022],
         ...,
         [12.0671],
         [14.3675],
         [56.5022]],
        ...,
        [[ 9.9123],
         [22.0169],
         [31.9608],
         ...,
         [11.1537],
         [13.2475],
         [54.9369]],
        [[11.2937],
         [25.0435],
         [37.1459],
         ...,
         [13.6324],
         [16.2927],
         [59.0160]],
        [[12.2834],
         [27.2087],
         [40.9210],
         ...,
         [15.5124],
         [18.6142],
         [61.8011]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.8999, 1.1983, 1.5020,  ..., 1.0023, 1.0763, 1.7818],
        [0.8300, 1.0455, 1.2315,  ..., 0.8623, 0.9027, 1.5932],
        [0.8229, 1.0299, 1.2046,  ..., 0.8495, 0.8869, 1.5722],
        ...,
        [0.8144, 1.0113, 1.1730,  ..., 0.8346, 0.8687, 1.5467],
        [0.8369, 1.0605, 1.2574,  ..., 0.8749, 0.9182, 1.6131],
        [0.8530, 1.0958, 1.3188,  ..., 0.9055, 0.9560, 1.6584]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[21.1920],
         [38.2832],
         [24.9839],
         ...,
         [38.1252],
         [16.7877],
         [57.1034]],
        [[14.2952],
         [27.5009],
         [17.3296],
         ...,
         [24.9945],
         [13.0831],
         [45.6611]],
        [[13.6152],
         [26.3975],
         [16.5624],
         ...,
         [23.7217],
         [12.6855],
         [44.4144]],
        ...,
        [[12.8160],
         [25.0893],
         [15.6572],
         ...,
         [22.2316],
         [12.2087],
         [42.9143]],
        [[14.9531],
         [28.5604],
         [18.0695],
         ...,
         [26.2302],
         [13.4613],
         [46.8430]],
        [[16.5139],
         [31.0453],
         [19.8158],
         ...,
         [29.1773],
         [14.3349],
         [49.5606]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.1108, 1.3367, 1.1610,  ..., 1.3346, 1.0526, 1.5854],
        [1.0197, 1.1942, 1.0598,  ..., 1.1611, 1.0037, 1.4342],
        [1.0107, 1.1796, 1.0497,  ..., 1.1443, 0.9984, 1.4177],
        ...,
        [1.0002, 1.1624, 1.0377,  ..., 1.1246, 0.9921, 1.3979],
        [1.0284, 1.2082, 1.0696,  ..., 1.1774, 1.0087, 1.4498],
        [1.0490, 1.2411, 1.0927,  ..., 1.2164, 1.0202, 1.4858]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.9449],
         [19.0866],
         [13.0240],
         ...,
         [12.4121],
         [13.7467],
         [17.8387]],
        [[13.3114],
         [ 9.7012],
         [11.3704],
         ...,
         [ 9.7747],
         [11.0903],
         [ 9.9134]],
        [[13.2351],
         [ 8.9216],
         [11.1809],
         ...,
         [ 9.4899],
         [10.7994],
         [ 9.2181]],
        ...,
        [[13.1409],
         [ 8.0405],
         [10.9500],
         ...,
         [ 9.1479],
         [10.4489],
         [ 8.4225]],
        [[13.3824],
         [10.4813],
         [11.5482],
         ...,
         [10.0452],
         [11.3658],
         [10.6019]],
        [[13.5402],
         [12.4318],
         [11.9505],
         ...,
         [10.6689],
         [11.9983],
         [12.2949]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0157, 1.1259, 0.9959,  ..., 0.9828, 1.0114, 1.0992],
        [1.0021, 0.9247, 0.9605,  ..., 0.9262, 0.9545, 0.9292],
        [1.0004, 0.9080, 0.9564,  ..., 0.9201, 0.9482, 0.9143],
        ...,
        [0.9984, 0.8891, 0.9515,  ..., 0.9128, 0.9407, 0.8972],
        [1.0036, 0.9414, 0.9643,  ..., 0.9320, 0.9604, 0.9440],
        [1.0070, 0.9832, 0.9729,  ..., 0.9454, 0.9739, 0.9803]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.8297],
         [24.6306],
         [20.1723],
         ...,
         [34.9257],
         [14.9450],
         [21.0150]],
        [[15.2393],
         [13.8288],
         [14.0309],
         ...,
         [31.4491],
         [10.1917],
         [13.5048]],
        [[15.1677],
         [12.8752],
         [13.4143],
         ...,
         [31.0436],
         [ 9.7200],
         [12.7854]],
        ...,
        [[15.0794],
         [11.7824],
         [12.6865],
         ...,
         [30.5474],
         [ 9.1648],
         [11.9456]],
        [[15.3056],
         [14.7719],
         [14.6253],
         ...,
         [31.8282],
         [10.6475],
         [14.2048]],
        [[15.4530],
         [17.0867],
         [16.0275],
         ...,
         [32.6811],
         [11.7266],
         [15.8806]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9540, 1.0971, 1.0246,  ..., 1.2646, 0.9396, 1.0383],
        [0.9444, 0.9214, 0.9247,  ..., 1.2080, 0.8623, 0.9162],
        [0.9432, 0.9059, 0.9147,  ..., 1.2014, 0.8546, 0.9045],
        ...,
        [0.9418, 0.8882, 0.9029,  ..., 1.1934, 0.8456, 0.8908],
        [0.9455, 0.9368, 0.9344,  ..., 1.2142, 0.8697, 0.9275],
        [0.9479, 0.9744, 0.9572,  ..., 1.2281, 0.8872, 0.9548]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.1412],
         [37.5653],
         [24.5043],
         ...,
         [35.8557],
         [16.5916],
         [56.3026]],
        [[13.5661],
         [27.1846],
         [16.7945],
         ...,
         [23.3059],
         [13.0262],
         [44.5751]],
        [[13.0002],
         [26.1177],
         [16.0272],
         ...,
         [22.0956],
         [12.6419],
         [43.3048]],
        ...,
        [[12.3304],
         [24.8515],
         [15.1233],
         ...,
         [20.6804],
         [12.1806],
         [41.7783]],
        [[14.1105],
         [28.2082],
         [17.5355],
         ...,
         [24.4821],
         [13.3914],
         [45.7810]],
        [[15.3904],
         [30.6055],
         [19.2885],
         ...,
         [27.2917],
         [14.2339],
         [48.5586]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0845, 1.3280, 1.1554,  ..., 1.3054, 1.0508, 1.5756],
        [1.0109, 1.1908, 1.0535,  ..., 1.1396, 1.0037, 1.4207],
        [1.0034, 1.1767, 1.0434,  ..., 1.1236, 0.9986, 1.4039],
        ...,
        [0.9945, 1.1600, 1.0314,  ..., 1.1049, 0.9926, 1.3837],
        [1.0181, 1.2044, 1.0633,  ..., 1.1551, 1.0086, 1.4366],
        [1.0350, 1.2360, 1.0865,  ..., 1.1923, 1.0197, 1.4733]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.5970],
         [18.6260],
         [12.8300],
         ...,
         [12.4559],
         [13.1773],
         [17.1655]],
        [[12.0383],
         [ 9.6369],
         [11.0668],
         ...,
         [ 9.8520],
         [10.5442],
         [ 9.9533]],
        [[11.8582],
         [ 8.8820],
         [10.8662],
         ...,
         [ 9.5701],
         [10.2572],
         [ 9.3039]],
        ...,
        [[11.6384],
         [ 8.0267],
         [10.6221],
         ...,
         [ 9.2314],
         [ 9.9118],
         [ 8.5566]],
        [[12.2070],
         [10.3907],
         [11.2554],
         ...,
         [10.1196],
         [10.8163],
         [10.5929]],
        [[12.5876],
         [12.2692],
         [11.6829],
         ...,
         [10.7362],
         [11.4418],
         [12.1537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0091, 1.1170, 0.9927,  ..., 0.9847, 1.0001, 1.0857],
        [0.9757, 0.9242, 0.9549,  ..., 0.9288, 0.9437, 0.9310],
        [0.9719, 0.9080, 0.9506,  ..., 0.9228, 0.9375, 0.9171],
        ...,
        [0.9671, 0.8897, 0.9454,  ..., 0.9155, 0.9301, 0.9011],
        [0.9793, 0.9404, 0.9589,  ..., 0.9346, 0.9495, 0.9447],
        [0.9875, 0.9807, 0.9681,  ..., 0.9478, 0.9629, 0.9782]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.9089],
         [24.6044],
         [20.1445],
         ...,
         [33.8818],
         [14.8398],
         [20.9931]],
        [[14.5977],
         [13.8223],
         [13.8967],
         ...,
         [30.4162],
         [10.2533],
         [13.4806]],
        [[14.5596],
         [12.8701],
         [13.2725],
         ...,
         [30.0126],
         [ 9.7947],
         [12.7613]],
        ...,
        [[14.5124],
         [11.7788],
         [12.5366],
         ...,
         [29.5191],
         [ 9.2538],
         [11.9217]],
        [[14.6329],
         [14.7639],
         [14.4991],
         ...,
         [30.7936],
         [10.6958],
         [14.1806]],
        [[14.7110],
         [17.0749],
         [15.9223],
         ...,
         [31.6431],
         [11.7411],
         [15.8565]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9410, 1.0987, 1.0262,  ..., 1.2496, 0.9399, 1.0400],
        [0.9360, 0.9234, 0.9246,  ..., 1.1933, 0.8653, 0.9178],
        [0.9354, 0.9079, 0.9144,  ..., 1.1867, 0.8579, 0.9061],
        ...,
        [0.9346, 0.8901, 0.9025,  ..., 1.1787, 0.8491, 0.8925],
        [0.9365, 0.9387, 0.9344,  ..., 1.1994, 0.8725, 0.9292],
        [0.9378, 0.9763, 0.9575,  ..., 1.2132, 0.8895, 0.9565]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.0090],
         [36.8846],
         [24.0100],
         ...,
         [33.6240],
         [16.4060],
         [55.5146]],
        [[12.8646],
         [26.9005],
         [16.3101],
         ...,
         [21.7235],
         [12.9704],
         [43.4862]],
        [[12.4275],
         [25.8697],
         [15.5477],
         ...,
         [20.5799],
         [12.5985],
         [42.1913]],
        ...,
        [[11.9055],
         [24.6449],
         [14.6509],
         ...,
         [19.2439],
         [12.1518],
         [40.6376]],
        [[13.2818],
         [27.8886],
         [17.0470],
         ...,
         [22.8356],
         [13.3234],
         [44.7169]],
        [[14.2509],
         [30.1994],
         [18.7932],
         ...,
         [25.4952],
         [14.1368],
         [47.5574]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0572, 1.3198, 1.1497,  ..., 1.2767, 1.0492, 1.5660],
        [1.0024, 1.1879, 1.0479,  ..., 1.1195, 1.0038, 1.4071],
        [0.9966, 1.1743, 1.0379,  ..., 1.1044, 0.9989, 1.3900],
        ...,
        [0.9897, 1.1581, 1.0260,  ..., 1.0867, 0.9930, 1.3694],
        [1.0079, 1.2009, 1.0577,  ..., 1.1342, 1.0085, 1.4233],
        [1.0207, 1.2315, 1.0807,  ..., 1.1693, 1.0192, 1.4609]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.3465],
         [18.2254],
         [12.6439],
         ...,
         [12.5086],
         [12.6669],
         [16.5206]],
        [[11.3199],
         [ 9.5774],
         [10.8085],
         ...,
         [ 9.8833],
         [10.0065],
         [10.0082]],
        [[11.0915],
         [ 8.8442],
         [10.6007],
         ...,
         [ 9.5993],
         [ 9.7187],
         [ 9.4061]],
        ...,
        [[10.8143],
         [ 8.0117],
         [10.3483],
         ...,
         [ 9.2581],
         [ 9.3729],
         [ 8.7090]],
        [[11.5350],
         [10.3082],
         [11.0040],
         ...,
         [10.1530],
         [10.2798],
         [10.5982]],
        [[12.0242],
         [12.1242],
         [11.4480],
         ...,
         [10.7745],
         [10.9095],
         [12.0262]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0045, 1.1092, 0.9895,  ..., 0.9866, 0.9900, 1.0726],
        [0.9611, 0.9237, 0.9501,  ..., 0.9303, 0.9329, 0.9330],
        [0.9562, 0.9080, 0.9457,  ..., 0.9242, 0.9268, 0.9201],
        ...,
        [0.9502, 0.8901, 0.9403,  ..., 0.9169, 0.9193, 0.9051],
        [0.9657, 0.9394, 0.9543,  ..., 0.9361, 0.9388, 0.9456],
        [0.9762, 0.9783, 0.9638,  ..., 0.9494, 0.9523, 0.9762]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.2707],
         [24.5759],
         [20.1038],
         ...,
         [32.6459],
         [14.7267],
         [20.9725]],
        [[13.9428],
         [13.8164],
         [13.7505],
         ...,
         [29.2767],
         [10.3180],
         [13.4566]],
        [[13.9027],
         [12.8657],
         [13.1189],
         ...,
         [28.8846],
         [ 9.8735],
         [12.7374]],
        ...,
        [[13.8531],
         [11.7762],
         [12.3752],
         ...,
         [28.4052],
         [ 9.3483],
         [11.8979]],
        [[13.9799],
         [14.7564],
         [14.3605],
         ...,
         [29.6434],
         [10.7462],
         [14.1566]],
        [[14.0621],
         [17.0631],
         [15.8042],
         ...,
         [30.4690],
         [11.7550],
         [15.8329]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9328, 1.1005, 1.0277,  ..., 1.2317, 0.9403, 1.0419],
        [0.9275, 0.9255, 0.9244,  ..., 1.1769, 0.8686, 0.9196],
        [0.9269, 0.9100, 0.9141,  ..., 1.1705, 0.8613, 0.9079],
        ...,
        [0.9261, 0.8923, 0.9020,  ..., 1.1627, 0.8528, 0.8943],
        [0.9281, 0.9407, 0.9343,  ..., 1.1829, 0.8755, 0.9310],
        [0.9295, 0.9783, 0.9578,  ..., 1.1963, 0.8919, 0.9583]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.0099],
         [31.2839],
         [18.3905],
         ...,
         [16.3265],
         [15.1167],
         [48.7665]],
        [[ 9.2699],
         [24.5170],
         [13.2196],
         ...,
         [12.4873],
         [12.4896],
         [34.5699]],
        [[ 8.8890],
         [23.7883],
         [12.6902],
         ...,
         [12.0798],
         [12.1980],
         [33.1285]],
        ...,
        [[ 8.4380],
         [22.9139],
         [12.0626],
         ...,
         [11.5923],
         [11.8454],
         [31.4227]],
        [[ 9.6361],
         [25.2095],
         [13.7279],
         ...,
         [12.8758],
         [12.7651],
         [35.9563]],
        [[10.4959],
         [26.8077],
         [14.9198],
         ...,
         [13.7764],
         [13.3947],
         [39.2156]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.2193, 1.0490,  ..., 1.0217, 1.0057, 1.4504],
        [0.9284, 1.1299, 0.9806,  ..., 0.9709, 0.9710, 1.2628],
        [0.9234, 1.1203, 0.9736,  ..., 0.9656, 0.9671, 1.2437],
        ...,
        [0.9174, 1.1087, 0.9653,  ..., 0.9591, 0.9625, 1.2212],
        [0.9333, 1.1391, 0.9873,  ..., 0.9761, 0.9746, 1.2811],
        [0.9446, 1.1602, 1.0031,  ..., 0.9880, 0.9829, 1.3242]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7301],
         [15.8022],
         [11.6005],
         ...,
         [14.7532],
         [12.2560],
         [12.7172]],
        [[11.6910],
         [ 9.3165],
         [ 9.7268],
         ...,
         [ 9.8596],
         [10.3611],
         [11.0447]],
        [[11.5684],
         [ 8.7267],
         [ 9.5170],
         ...,
         [ 9.3798],
         [10.1480],
         [10.8536]],
        ...,
        [[11.4180],
         [ 8.0462],
         [ 9.2628],
         ...,
         [ 8.8166],
         [ 9.8894],
         [10.6210]],
        [[11.8053],
         [ 9.8964],
         [ 9.9246],
         ...,
         [10.3243],
         [10.5619],
         [11.2241]],
        [[12.0616],
         [11.3070],
         [10.3755],
         ...,
         [11.4288],
         [11.0189],
         [11.6305]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9996, 1.0654, 0.9753,  ..., 1.0429, 0.9894, 0.9993],
        [0.9773, 0.9264, 0.9352,  ..., 0.9380, 0.9488, 0.9634],
        [0.9747, 0.9137, 0.9307,  ..., 0.9277, 0.9442, 0.9593],
        ...,
        [0.9714, 0.8991, 0.9252,  ..., 0.9156, 0.9387, 0.9543],
        [0.9797, 0.9388, 0.9394,  ..., 0.9480, 0.9531, 0.9673],
        [0.9852, 0.9691, 0.9491,  ..., 0.9717, 0.9629, 0.9760]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.1144],
         [24.2717],
         [19.6273],
         ...,
         [20.7307],
         [13.8975],
         [20.7975]],
        [[10.3939],
         [13.8076],
         [12.6454],
         ...,
         [19.8661],
         [11.0554],
         [13.2508]],
        [[ 9.9232],
         [12.8763],
         [11.9756],
         ...,
         [19.7617],
         [10.7467],
         [12.5316]],
        ...,
        [[ 9.3684],
         [11.8073],
         [11.1934],
         ...,
         [19.6327],
         [10.3755],
         [11.6931]],
        [[10.8484],
         [14.7270],
         [13.2970],
         ...,
         [19.9631],
         [11.3483],
         [13.9513]],
        [[11.9227],
         [16.9784],
         [14.8561],
         ...,
         [20.1787],
         [12.0223],
         [15.6310]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9456, 1.0945, 1.0190,  ..., 1.0369, 0.9258, 1.0380],
        [0.8688, 0.9243, 0.9054,  ..., 1.0229, 0.8796, 0.9153],
        [0.8612, 0.9092, 0.8946,  ..., 1.0212, 0.8746, 0.9036],
        ...,
        [0.8521, 0.8918, 0.8818,  ..., 1.0191, 0.8685, 0.8900],
        [0.8762, 0.9393, 0.9160,  ..., 1.0245, 0.8843, 0.9267],
        [0.8937, 0.9759, 0.9414,  ..., 1.0280, 0.8953, 0.9540]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9969],
         [27.5753],
         [13.0610],
         ...,
         [11.7852],
         [17.5089],
         [40.0750]],
        [[ 8.6132],
         [21.9282],
         [11.6573],
         ...,
         [ 9.9497],
         [13.2044],
         [26.4083]],
        [[ 7.9778],
         [21.3150],
         [11.4944],
         ...,
         [ 9.7434],
         [12.7511],
         [25.0794]],
        ...,
        [[ 7.2539],
         [20.5776],
         [11.2953],
         ...,
         [ 9.4932],
         [12.2101],
         [23.5227]],
        [[ 9.2447],
         [22.5101],
         [11.8098],
         ...,
         [10.1441],
         [13.6371],
         [27.6975]],
        [[10.8069],
         [23.8492],
         [12.1533],
         ...,
         [10.5866],
         [14.6429],
         [30.7696]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9932, 1.1462, 0.9544,  ..., 0.9375, 1.0132, 1.3114],
        [0.8956, 1.0716, 0.9358,  ..., 0.9133, 0.9563, 1.1308],
        [0.8872, 1.0635, 0.9337,  ..., 0.9105, 0.9503, 1.1132],
        ...,
        [0.8776, 1.0537, 0.9311,  ..., 0.9072, 0.9431, 1.0927],
        [0.9040, 1.0793, 0.9379,  ..., 0.9158, 0.9620, 1.1478],
        [0.9246, 1.0970, 0.9424,  ..., 0.9217, 0.9753, 1.1884]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2268],
         [13.3990],
         [13.6331],
         ...,
         [14.2044],
         [31.3168],
         [14.6730]],
        [[11.5519],
         [ 9.7423],
         [10.0651],
         ...,
         [10.0628],
         [24.6269],
         [11.0418]],
        [[11.4710],
         [ 9.3655],
         [ 9.6941],
         ...,
         [ 9.6425],
         [23.9051],
         [10.6599]],
        ...,
        [[11.3714],
         [ 8.9179],
         [ 9.2525],
         ...,
         [ 9.1451],
         [23.0385],
         [10.2042]],
        [[11.6271],
         [10.1037],
         [10.4203],
         ...,
         [10.4672],
         [25.3126],
         [11.4065]],
        [[11.7948],
         [10.9493],
         [11.2489],
         ...,
         [11.4178],
         [26.8942],
         [12.2544]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0112, 1.0363, 1.0413,  ..., 1.0536, 1.4206, 1.0636],
        [0.9967, 0.9579, 0.9648,  ..., 0.9648, 1.2771, 0.9858],
        [0.9950, 0.9498, 0.9569,  ..., 0.9558, 1.2616, 0.9776],
        ...,
        [0.9928, 0.9402, 0.9474,  ..., 0.9451, 1.2430, 0.9678],
        [0.9983, 0.9657, 0.9725,  ..., 0.9735, 1.2918, 0.9936],
        [1.0019, 0.9838, 0.9902,  ..., 0.9938, 1.3257, 1.0118]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.5216],
         [23.7733],
         [18.4899],
         ...,
         [14.4358],
         [14.5270],
         [20.6163]],
        [[ 9.2930],
         [13.8925],
         [11.9551],
         ...,
         [11.7386],
         [12.7065],
         [13.0420]],
        [[ 8.6541],
         [12.9987],
         [11.3268],
         ...,
         [11.4418],
         [12.4977],
         [12.3232]],
        ...,
        [[ 7.9218],
         [11.9689],
         [10.5928],
         ...,
         [11.0839],
         [12.2432],
         [11.4860]],
        [[ 9.9246],
         [14.7722],
         [12.5660],
         ...,
         [12.0194],
         [12.9025],
         [13.7427]],
        [[11.4746],
         [16.9155],
         [14.0267],
         ...,
         [12.6630],
         [13.3456],
         [15.4249]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9385, 1.0565, 0.9705,  ..., 0.9046, 0.9061, 1.0051],
        [0.8209, 0.8958, 0.8642,  ..., 0.8607, 0.8765, 0.8819],
        [0.8106, 0.8812, 0.8540,  ..., 0.8559, 0.8731, 0.8702],
        ...,
        [0.7986, 0.8645, 0.8421,  ..., 0.8501, 0.8689, 0.8566],
        [0.8312, 0.9101, 0.8742,  ..., 0.8653, 0.8797, 0.8933],
        [0.8564, 0.9449, 0.8979,  ..., 0.8758, 0.8869, 0.9207]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.9210],
         [27.8337],
         [13.5709],
         ...,
         [14.1824],
         [16.7200],
         [39.0293]],
        [[ 9.8432],
         [22.7545],
         [11.9107],
         ...,
         [ 9.8095],
         [12.9521],
         [25.6385]],
        [[ 9.6126],
         [22.1940],
         [11.7198],
         ...,
         [ 9.3719],
         [12.5492],
         [24.3390]],
        ...,
        [[ 9.3338],
         [21.5175],
         [11.4872],
         ...,
         [ 8.8559],
         [12.0663],
         [22.8172]],
        [[10.0610],
         [23.2846],
         [12.0897],
         ...,
         [10.2316],
         [13.3357],
         [26.8999]],
        [[10.5589],
         [24.4983],
         [12.4941],
         ...,
         [11.2285],
         [14.2227],
         [29.9071]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9665, 1.1768, 0.9883,  ..., 0.9964, 1.0300, 1.3248],
        [0.9391, 1.1097, 0.9664,  ..., 0.9386, 0.9802, 1.1478],
        [0.9360, 1.1023, 0.9639,  ..., 0.9329, 0.9748, 1.1307],
        ...,
        [0.9324, 1.0934, 0.9608,  ..., 0.9260, 0.9685, 1.1105],
        [0.9420, 1.1167, 0.9688,  ..., 0.9442, 0.9852, 1.1645],
        [0.9485, 1.1328, 0.9741,  ..., 0.9574, 0.9970, 1.2042]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8851],
         [12.8184],
         [12.0552],
         ...,
         [11.4370],
         [25.0990],
         [14.8099]],
        [[10.6054],
         [ 9.4353],
         [10.2352],
         ...,
         [10.3609],
         [18.7243],
         [10.6288]],
        [[10.4569],
         [ 9.0842],
         [10.0299],
         ...,
         [10.2349],
         [18.0573],
         [10.2012]],
        ...,
        [[10.2755],
         [ 8.6664],
         [ 9.7808],
         ...,
         [10.0807],
         [17.2624],
         [ 9.6942]],
        [[10.7444],
         [ 9.7716],
         [10.4284],
         ...,
         [10.4786],
         [19.3619],
         [11.0395]],
        [[11.0575],
         [10.5567],
         [10.8679],
         ...,
         [10.7430],
         [20.8468],
         [12.0028]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0061, 1.0261, 1.0098,  ..., 0.9965, 1.2895, 1.0688],
        [0.9787, 0.9536, 0.9707,  ..., 0.9734, 1.1528, 0.9792],
        [0.9755, 0.9461, 0.9663,  ..., 0.9707, 1.1385, 0.9700],
        ...,
        [0.9716, 0.9371, 0.9610,  ..., 0.9674, 1.1214, 0.9592],
        [0.9817, 0.9608, 0.9749,  ..., 0.9760, 1.1665, 0.9880],
        [0.9884, 0.9776, 0.9843,  ..., 0.9816, 1.1983, 1.0087]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5950],
         [23.6515],
         [17.2986],
         ...,
         [14.4870],
         [13.9021],
         [20.6120]],
        [[10.2931],
         [13.8801],
         [11.5126],
         ...,
         [12.5417],
         [12.1293],
         [13.0333]],
        [[ 9.8576],
         [12.9939],
         [10.9466],
         ...,
         [12.3198],
         [11.9262],
         [12.3143]],
        ...,
        [[ 9.3426],
         [11.9722],
         [10.2828],
         ...,
         [12.0498],
         [11.6788],
         [11.4769]],
        [[10.7122],
         [14.7518],
         [12.0610],
         ...,
         [12.7501],
         [12.3199],
         [13.7342]],
        [[11.6983],
         [16.8741],
         [13.3653],
         ...,
         [13.2223],
         [12.7511],
         [15.4172]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9385, 1.0858, 0.9825,  ..., 0.9367, 0.9272, 1.0364],
        [0.8685, 0.9269, 0.8884,  ..., 0.9051, 0.8984, 0.9131],
        [0.8614, 0.9124, 0.8791,  ..., 0.9015, 0.8951, 0.9014],
        ...,
        [0.8531, 0.8958, 0.8683,  ..., 0.8971, 0.8911, 0.8878],
        [0.8753, 0.9410, 0.8973,  ..., 0.9085, 0.9015, 0.9245],
        [0.8914, 0.9756, 0.9185,  ..., 0.9162, 0.9085, 0.9519]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.2118],
         [28.7890],
         [15.3662],
         ...,
         [14.9230],
         [14.2277],
         [38.7314]],
        [[10.5999],
         [24.4328],
         [12.4799],
         ...,
         [10.1369],
         [12.1347],
         [25.4236]],
        [[10.5265],
         [23.9416],
         [12.1626],
         ...,
         [ 9.6631],
         [11.8981],
         [24.1326]],
        ...,
        [[10.4361],
         [23.3456],
         [11.7799],
         ...,
         [ 9.1056],
         [11.6107],
         [22.6211]],
        [[10.6681],
         [24.8953],
         [12.7802],
         ...,
         [10.5950],
         [12.3574],
         [26.6766]],
        [[10.8201],
         [25.9469],
         [13.4686],
         ...,
         [11.6803],
         [12.8634],
         [29.6646]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9589, 1.1912, 1.0138,  ..., 1.0080, 0.9988, 1.3226],
        [0.9509, 1.1337, 0.9757,  ..., 0.9447, 0.9711, 1.1468],
        [0.9499, 1.1272, 0.9715,  ..., 0.9385, 0.9680, 1.1297],
        ...,
        [0.9487, 1.1193, 0.9664,  ..., 0.9311, 0.9642, 1.1097],
        [0.9518, 1.1398, 0.9797,  ..., 0.9508, 0.9741, 1.1633],
        [0.9538, 1.1537, 0.9888,  ..., 0.9651, 0.9808, 1.2028]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8852],
         [12.2564],
         [11.7088],
         ...,
         [12.2844],
         [12.6804],
         [15.2955]],
        [[10.6367],
         [ 9.0594],
         [10.5234],
         ...,
         [10.6796],
         [10.8330],
         [10.5798]],
        [[10.4916],
         [ 8.7267],
         [10.3852],
         ...,
         [10.4962],
         [10.6239],
         [10.1079]],
        ...,
        [[10.3142],
         [ 8.3307],
         [10.2163],
         ...,
         [10.2728],
         [10.3700],
         [ 9.5513]],
        [[10.7725],
         [ 9.3778],
         [10.6525],
         ...,
         [10.8519],
         [11.0297],
         [11.0350]],
        [[11.0783],
         [10.1206],
         [10.9432],
         ...,
         [11.2418],
         [11.4765],
         [12.1100]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0032, 1.0112, 0.9995,  ..., 1.0118, 1.0203, 1.0764],
        [0.9765, 0.9427, 0.9740,  ..., 0.9774, 0.9807, 0.9753],
        [0.9734, 0.9355, 0.9711,  ..., 0.9735, 0.9762, 0.9651],
        ...,
        [0.9696, 0.9270, 0.9675,  ..., 0.9687, 0.9708, 0.9532],
        [0.9794, 0.9495, 0.9768,  ..., 0.9811, 0.9849, 0.9850],
        [0.9859, 0.9654, 0.9830,  ..., 0.9895, 0.9945, 1.0081]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7616],
         [23.5588],
         [16.0815],
         ...,
         [15.7792],
         [13.9997],
         [20.6158]],
        [[12.6712],
         [13.8514],
         [10.9165],
         ...,
         [15.0018],
         [10.8598],
         [13.0418]],
        [[12.5423],
         [12.9701],
         [10.4053],
         ...,
         [14.9083],
         [10.5237],
         [12.3231]],
        ...,
        [[12.3842],
         [11.9537],
         [ 9.8040],
         ...,
         [14.7930],
         [10.1210],
         [11.4859]],
        [[12.7913],
         [14.7183],
         [11.4107],
         ...,
         [15.0887],
         [11.1797],
         [13.7425]],
        [[13.0604],
         [16.8278],
         [12.5817],
         ...,
         [15.2822],
         [11.9191],
         [15.4247]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9285, 1.0879, 0.9662,  ..., 0.9613, 0.9324, 1.0400],
        [0.9108, 0.9300, 0.8822,  ..., 0.9487, 0.8813, 0.9168],
        [0.9087, 0.9156, 0.8739,  ..., 0.9472, 0.8759, 0.9051],
        ...,
        [0.9061, 0.8991, 0.8641,  ..., 0.9453, 0.8693, 0.8915],
        [0.9127, 0.9441, 0.8903,  ..., 0.9501, 0.8865, 0.9282],
        [0.9171, 0.9784, 0.9093,  ..., 0.9532, 0.8985, 0.9556]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.5305],
         [28.2377],
         [14.3368],
         ...,
         [14.5246],
         [15.4610],
         [38.8859]],
        [[10.1882],
         [23.5497],
         [12.1756],
         ...,
         [ 9.9625],
         [12.5338],
         [25.5347]],
        [[10.0334],
         [23.0263],
         [11.9318],
         ...,
         [ 9.5083],
         [12.2124],
         [24.2393]],
        ...,
        [[ 9.8444],
         [22.3929],
         [11.6360],
         ...,
         [ 8.9731],
         [11.8248],
         [22.7224]],
        [[10.3334],
         [24.0434],
         [12.4051],
         ...,
         [10.4012],
         [12.8381],
         [26.7921]],
        [[10.6610],
         [25.1698],
         [12.9270],
         ...,
         [11.4387],
         [13.5360],
         [29.7901]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9622, 1.1830, 0.9993,  ..., 1.0018, 1.0142, 1.3237],
        [0.9445, 1.1211, 0.9707,  ..., 0.9415, 0.9755, 1.1473],
        [0.9424, 1.1141, 0.9675,  ..., 0.9355, 0.9712, 1.1302],
        ...,
        [0.9399, 1.1058, 0.9636,  ..., 0.9284, 0.9661, 1.1101],
        [0.9464, 1.1276, 0.9738,  ..., 0.9473, 0.9795, 1.1639],
        [0.9507, 1.1425, 0.9807,  ..., 0.9610, 0.9887, 1.2035]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8871],
         [12.5492],
         [11.2174],
         ...,
         [11.4019],
         [16.1106],
         [15.0538]],
        [[10.6195],
         [ 9.2251],
         [10.4208],
         ...,
         [10.5294],
         [13.1442],
         [10.6024]],
        [[10.4723],
         [ 8.8803],
         [10.3262],
         ...,
         [10.4262],
         [12.8173],
         [10.1522]],
        ...,
        [[10.2924],
         [ 8.4702],
         [10.2100],
         ...,
         [10.2994],
         [12.4227],
         [ 9.6198]],
        [[10.7572],
         [ 9.5553],
         [10.5089],
         ...,
         [10.6257],
         [13.4535],
         [11.0358]],
        [[11.0675],
         [10.3264],
         [10.7059],
         ...,
         [10.8411],
         [14.1620],
         [12.0559]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0054, 1.0196, 0.9910,  ..., 0.9950, 1.0960, 1.0733],
        [0.9782, 0.9483, 0.9739,  ..., 0.9763, 1.0323, 0.9778],
        [0.9750, 0.9409, 0.9719,  ..., 0.9741, 1.0253, 0.9682],
        ...,
        [0.9712, 0.9321, 0.9694,  ..., 0.9713, 1.0169, 0.9568],
        [0.9812, 0.9554, 0.9758,  ..., 0.9783, 1.0390, 0.9871],
        [0.9878, 0.9719, 0.9801,  ..., 0.9830, 1.0542, 1.0090]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.8903],
         [23.6070],
         [16.6414],
         ...,
         [14.8991],
         [13.7979],
         [20.6139]],
        [[11.2815],
         [13.8663],
         [11.2215],
         ...,
         [13.6307],
         [11.4805],
         [13.0374]],
        [[10.9947],
         [12.9824],
         [10.6872],
         ...,
         [13.4814],
         [11.2221],
         [12.3186]],
        ...,
        [[10.6488],
         [11.9633],
         [10.0594],
         ...,
         [13.2983],
         [10.9095],
         [11.4812]],
        [[11.5529],
         [14.7357],
         [11.7384],
         ...,
         [13.7700],
         [11.7243],
         [13.7382]],
        [[12.1752],
         [16.8518],
         [12.9649],
         ...,
         [14.0825],
         [12.2807],
         [15.4208]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9335, 1.0916, 0.9783,  ..., 0.9499, 0.9320, 1.0429],
        [0.8911, 0.9331, 0.8901,  ..., 0.9293, 0.8943, 0.9196],
        [0.8864, 0.9188, 0.8814,  ..., 0.9269, 0.8901, 0.9080],
        ...,
        [0.8808, 0.9022, 0.8712,  ..., 0.9239, 0.8850, 0.8943],
        [0.8955, 0.9473, 0.8985,  ..., 0.9316, 0.8983, 0.9310],
        [0.9056, 0.9817, 0.9185,  ..., 0.9366, 0.9073, 0.9584]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6859],
         [28.2757],
         [15.1467],
         ...,
         [14.7045],
         [11.7320],
         [33.7068]],
        [[ 9.4037],
         [25.0576],
         [12.4658],
         ...,
         [ 8.8140],
         [11.1699],
         [22.1320]],
        [[ 9.0616],
         [24.6856],
         [12.1689],
         ...,
         [ 8.2729],
         [11.1022],
         [21.0090]],
        ...,
        [[ 8.6542],
         [24.2315],
         [11.8100],
         ...,
         [ 7.6472],
         [11.0188],
         [19.6940]],
        [[ 9.7311],
         [25.4060],
         [12.7465],
         ...,
         [ 9.3449],
         [11.2327],
         [23.2220]],
        [[10.4942],
         [26.1921],
         [13.3883],
         ...,
         [10.6324],
         [11.3727],
         [25.8211]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9574, 1.1635, 0.9900,  ..., 0.9841, 0.9448, 1.2352],
        [0.9141, 1.1209, 0.9545,  ..., 0.9063, 0.9374, 1.0823],
        [0.9095, 1.1160, 0.9506,  ..., 0.8991, 0.9365, 1.0674],
        ...,
        [0.9042, 1.1100, 0.9459,  ..., 0.8908, 0.9354, 1.0501],
        [0.9184, 1.1255, 0.9582,  ..., 0.9133, 0.9382, 1.0967],
        [0.9285, 1.1359, 0.9667,  ..., 0.9303, 0.9401, 1.1310]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.9538],
         [10.6876],
         [12.2213],
         ...,
         [13.1196],
         [12.5211],
         [17.2252]],
        [[12.0406],
         [ 8.9841],
         [10.9979],
         ...,
         [11.7999],
         [10.2809],
         [11.1776]],
        [[11.8228],
         [ 8.7931],
         [10.8553],
         ...,
         [11.6460],
         [10.0330],
         [10.5950]],
        ...,
        [[11.5580],
         [ 8.5616],
         [10.6808],
         ...,
         [11.4578],
         [ 9.7337],
         [ 9.9138]],
        [[12.2453],
         [ 9.1642],
         [11.1313],
         ...,
         [11.9437],
         [10.5151],
         [11.7439]],
        [[12.7093],
         [ 9.5743],
         [11.4314],
         ...,
         [12.2674],
         [11.0511],
         [13.0972]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0629, 0.9928, 1.0257,  ..., 1.0450, 1.0321, 1.1330],
        [1.0218, 0.9563, 0.9995,  ..., 1.0167, 0.9841, 1.0033],
        [1.0172, 0.9522, 0.9964,  ..., 1.0134, 0.9788, 0.9908],
        ...,
        [1.0115, 0.9472, 0.9927,  ..., 1.0093, 0.9724, 0.9762],
        [1.0262, 0.9601, 1.0023,  ..., 1.0198, 0.9891, 1.0155],
        [1.0362, 0.9689, 1.0088,  ..., 1.0267, 1.0006, 1.0445]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0025],
         [23.1303],
         [15.4185],
         ...,
         [15.5516],
         [14.3340],
         [20.5122]],
        [[13.3781],
         [13.9140],
         [10.0065],
         ...,
         [14.6831],
         [10.4233],
         [12.9526]],
        [[13.3028],
         [13.0656],
         [ 9.4850],
         ...,
         [14.5790],
         [10.0203],
         [12.2361]],
        ...,
        [[13.2099],
         [12.0841],
         [ 8.8754],
         ...,
         [14.4508],
         [ 9.5416],
         [11.4016]],
        [[13.4480],
         [14.7462],
         [10.5133],
         ...,
         [14.7798],
         [10.8099],
         [13.6513]],
        [[13.6036],
         [16.7627],
         [11.7244],
         ...,
         [14.9956],
         [11.7142],
         [15.3294]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9174, 1.0658, 0.9404,  ..., 0.9426, 0.9228, 1.0232],
        [0.9072, 0.9159, 0.8524,  ..., 0.9284, 0.8592, 0.9003],
        [0.9060, 0.9021, 0.8439,  ..., 0.9267, 0.8526, 0.8886],
        ...,
        [0.9045, 0.8862, 0.8340,  ..., 0.9247, 0.8448, 0.8751],
        [0.9083, 0.9295, 0.8606,  ..., 0.9300, 0.8654, 0.9117],
        [0.9109, 0.9623, 0.8803,  ..., 0.9335, 0.8801, 0.9389]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8529],
         [28.2631],
         [14.6085],
         ...,
         [14.3894],
         [13.9777],
         [37.1103]],
        [[ 9.8951],
         [24.0643],
         [12.2723],
         ...,
         [ 9.5292],
         [12.0178],
         [24.2992]],
        [[ 9.6765],
         [23.5900],
         [12.0105],
         ...,
         [ 9.0552],
         [11.7951],
         [23.0583]],
        ...,
        [[ 9.4117],
         [23.0142],
         [11.6932],
         ...,
         [ 8.4996],
         [11.5245],
         [21.6058]],
        [[10.1014],
         [24.5107],
         [12.5192],
         ...,
         [ 9.9888],
         [12.2271],
         [25.5041]],
        [[10.5719],
         [25.5253],
        [1.0228, 1.0221, 1.0218,  ..., 1.0302, 1.0233, 1.0257],
        ...,
        [1.0145, 1.0140, 1.0138,  ..., 1.0218, 1.0151, 1.0175],
        [1.0361, 1.0350, 1.0348,  ..., 1.0436, 1.0365, 1.0388],
        [1.0507, 1.0492, 1.0490,  ..., 1.0585, 1.0510, 1.0533]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8247],
         [11.8247],
         [11.8247],
         ...,
         [11.8247],
         [11.8247],
         [11.8247]],
        [[10.3191],
         [10.3191],
         [10.3191],
         ...,
         [10.3191],
         [10.3191],
         [10.3191]],
        [[10.1465],
         [10.1465],
         [10.1465],
         ...,
         [10.1465],
         [10.1465],
       grad_fn=<ExpBackward0>)0, 10])
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0164, 1.0018, 1.0980,  ..., 1.0182, 1.0418, 1.1079],
        [1.0094, 0.9614, 1.0336,  ..., 0.9961, 1.0168, 1.0058],
        [1.0086, 0.9569, 1.0265,  ..., 0.9935, 1.0138, 0.9955],
        ...,
        [1.0076, 0.9515, 1.0180,  ..., 0.9903, 1.0102, 0.9833],
        [1.0102, 0.9656, 1.0403,  ..., 0.9985, 1.0195, 1.0157],
        [1.0120, 0.9753, 1.0556,  ..., 1.0040, 1.0257, 1.0391]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.9667],
         [22.2616],
         [14.9135],
         ...,
         [13.9509],
         [13.9422],
         [20.1288]],
        [[12.1839],
         [14.2518],
         [10.2977],
         ...,
         [11.0253],
         [11.4381],
         [12.7737]],
        [[11.9797],
         [13.4863],
         [ 9.8363],
         ...,
         [10.7087],
         [11.1612],
         [12.0745]],
        ...,
        [[11.7309],
         [12.5932],
         [ 9.2922],
         ...,
         [10.3284],
         [10.8268],
         [11.2596]],
        [[12.3755],
         [14.9971],
         [10.7429],
         ...,
         [11.3258],
         [11.6999],
         [13.4551]],
        [[12.8091],
         [16.7823],
         [11.7946],
         ...,
         [12.0184],
         [12.2988],
         [15.0902]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9262, 1.0611, 0.9416,  ..., 0.9259, 0.9258, 1.0264],
        [0.8972, 0.9308, 0.8665,  ..., 0.8783, 0.8851, 0.9068],
        [0.8939, 0.9184, 0.8590,  ..., 0.8732, 0.8806, 0.8954],
        ...,
        [0.8898, 0.9038, 0.8502,  ..., 0.8670, 0.8751, 0.8822],
        [0.9003, 0.9429, 0.8738,  ..., 0.8832, 0.8893, 0.9179],
        [0.9074, 0.9720, 0.8909,  ..., 0.8945, 0.8991, 0.9445]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.2875],
         [27.1516],
         [12.0269],
         ...,
         [11.8503],
         [12.6288],
         [24.0331]],
        [[ 9.6052],
         [25.5939],
         [11.2497],
         ...,
         [ 9.8972],
         [11.5067],
         [16.7004]],
        [[ 9.3168],
         [25.4074],
         [11.1571],
         ...,
         [ 9.6790],
         [11.3749],
         [15.9646]],
        ...,
        [[ 8.9709],
         [25.1778],
         [11.0431],
         ...,
         [ 9.4148],
         [11.2134],
         [15.0963]],
        [[ 9.8794],
         [25.7673],
         [11.3359],
         ...,
         [10.1030],
         [11.6297],
         [17.4098]],
        [[10.5125],
         [26.1541],
         [11.5285],
         ...,
         [10.5725],
         [11.9058],
         [19.0837]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9792, 1.1756, 0.9757,  ..., 0.9734, 0.9837, 1.1344],
        [0.9437, 1.1550, 0.9655,  ..., 0.9476, 0.9688, 1.0375],
        [0.9399, 1.1526, 0.9642,  ..., 0.9447, 0.9671, 1.0278],
        ...,
        [0.9353, 1.1495, 0.9627,  ..., 0.9412, 0.9650, 1.0163],
        [0.9473, 1.1573, 0.9666,  ..., 0.9503, 0.9705, 1.0469],
        [0.9557, 1.1624, 0.9691,  ..., 0.9565, 0.9741, 1.0690]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6891],
         [11.1746],
         [12.2268],
         ...,
         [11.5399],
         [12.5462],
         [14.4280]],
        [[10.9361],
         [ 9.2632],
         [11.5519],
         ...,
         [11.2105],
         [11.6402],
         [10.9064]],
        [[10.8464],
         [ 9.0505],
         [11.4710],
         ...,
         [11.1704],
         [11.5327],
         [10.5350]],
        ...,
        [[10.7360],
         [ 8.7934],
         [11.3714],
         ...,
         [11.1208],
         [11.4006],
         [10.0917]],
        [[11.0197],
         [ 9.4639],
         [11.6271],
         ...,
         [11.2477],
         [11.7403],
         [11.2608]],
        [[11.2063],
         [ 9.9224],
         [11.7948],
         ...,
         [11.3301],
         [11.9644],
         [12.0842]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0176, 1.0065, 1.0291,  ..., 1.0144, 1.0359, 1.0763],
        [1.0014, 0.9655, 1.0146,  ..., 1.0073, 1.0165, 1.0008],
        [0.9995, 0.9610, 1.0129,  ..., 1.0064, 1.0142, 0.9928],
        ...,
        [0.9971, 0.9555, 1.0107,  ..., 1.0054, 1.0114, 0.9833],
        [1.0032, 0.9698, 1.0162,  ..., 1.0081, 1.0187, 1.0084],
        [1.0072, 0.9797, 1.0198,  ..., 1.0099, 1.0235, 1.0260]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7281],
         [22.0205],
         [14.7478],
         ...,
         [14.0742],
         [13.9628],
         [19.8705]],
        [[11.8893],
         [14.4044],
         [10.5145],
         ...,
         [10.7404],
         [11.6987],
         [12.7065]],
        [[11.6795],
         [13.6671],
         [10.0833],
         ...,
         [10.3870],
         [11.4453],
         [12.0224]],
        ...,
        [[11.4242],
         [12.8042],
         [ 9.5725],
         ...,
         [ 9.9644],
         [11.1383],
         [11.2242]],
        [[12.0863],
         [15.1203],
         [10.9291],
         ...,
         [11.0774],
         [11.9376],
         [13.3727]],
        [[12.5327],
         [16.8286],
         [11.9025],
         ...,
         [11.8590],
         [12.4823],
         [14.9689]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9282, 1.0631, 0.9448,  ..., 0.9339, 0.9321, 1.0281],
        [0.8983, 0.9392, 0.8760,  ..., 0.8796, 0.8952, 0.9116],
        [0.8949, 0.9272, 0.8690,  ..., 0.8739, 0.8911, 0.9005],
        ...,
        [0.8908, 0.9132, 0.8607,  ..., 0.8670, 0.8861, 0.8875],
        [0.9015, 0.9509, 0.8827,  ..., 0.8851, 0.8991, 0.9225],
        [0.9088, 0.9787, 0.8985,  ..., 0.8978, 0.9080, 0.9484]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7716],
         [27.3337],
         [12.2632],
         ...,
         [12.0558],
         [12.5128],
         [26.1621]],
        [[ 9.9611],
         [25.7794],
         [11.3123],
         ...,
         [ 9.7483],
         [11.4731],
         [17.7787]],
        [[ 9.7573],
         [25.5933],
         [11.1998],
         ...,
         [ 9.4952],
         [11.3506],
         [16.9485]],
        ...,
        [[ 9.5101],
         [25.3641],
         [11.0618],
         ...,
         [ 9.1903],
         [11.2003],
         [15.9717]],
        [[10.1530],
         [25.9525],
         [11.4171],
         ...,
         [ 9.9879],
         [11.5874],
         [18.5812]],
        [[10.5898],
         [26.3385],
         [11.6519],
         ...,
         [10.5376],
         [11.8437],
         [20.4826]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9768, 1.1825, 0.9833,  ..., 0.9806, 0.9866, 1.1670],
        [0.9529, 1.1619, 0.9708,  ..., 0.9501, 0.9729, 1.0562],
        [0.9502, 1.1595, 0.9693,  ..., 0.9467, 0.9713, 1.0452],
        ...,
        [0.9469, 1.1565, 0.9674,  ..., 0.9427, 0.9693, 1.0323],
        [0.9554, 1.1642, 0.9721,  ..., 0.9532, 0.9744, 1.0668],
        [0.9612, 1.1693, 0.9752,  ..., 0.9605, 0.9778, 1.0919]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8287],
         [10.4313],
         [11.8869],
         ...,
         [11.7033],
         [12.1201],
         [14.2882]],
        [[10.7449],
         [ 9.1035],
         [10.6159],
         ...,
         [10.9165],
         [11.5221],
         [10.3138]],
        [[10.6178],
         [ 8.9514],
         [10.4683],
         ...,
         [10.8228],
         [11.4501],
         [ 9.9059]],
        ...,
        [[10.4622],
         [ 8.7661],
         [10.2880],
         ...,
         [10.7077],
         [11.3614],
         [ 9.4220]],
        [[10.8635],
         [ 9.2463],
         [10.7540],
         ...,
         [11.0037],
         [11.5889],
         [10.7052]],
        [[11.1300],
         [ 9.5693],
         [11.0651],
         ...,
         [11.1985],
         [11.7377],
         [11.6224]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0198, 0.9899, 1.0211,  ..., 1.0171, 1.0261, 1.0726],
        [0.9966, 0.9614, 0.9938,  ..., 1.0003, 1.0132, 0.9873],
        [0.9939, 0.9581, 0.9907,  ..., 0.9983, 1.0117, 0.9786],
        ...,
        [0.9905, 0.9542, 0.9868,  ..., 0.9958, 1.0098, 0.9682],
        [0.9991, 0.9644, 0.9968,  ..., 1.0021, 1.0147, 0.9957],
        [1.0048, 0.9714, 1.0035,  ..., 1.0063, 1.0179, 1.0154]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7775],
         [22.2965],
         [14.1808],
         ...,
         [13.6872],
         [13.7886],
         [19.6818]],
        [[11.4702],
         [14.3632],
         [10.7741],
         ...,
         [11.6932],
         [11.6116],
         [12.7081]],
        [[11.2129],
         [13.6022],
         [10.4139],
         ...,
         [11.4675],
         [11.3672],
         [12.0382]],
        ...,
        [[10.9016],
         [12.7135],
         [ 9.9834],
         ...,
         [11.1934],
         [11.0710],
         [11.2557]],
        [[11.7130],
         [15.1035],
         [11.1178],
         ...,
         [11.9055],
         [11.8419],
         [13.3596]],
        [[12.2672],
         [16.8750],
         [11.9154],
         ...,
         [12.3878],
         [12.3663],
         [14.9178]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9393, 1.0778, 0.9458,  ..., 0.9378, 0.9395, 1.0353],
        [0.9018, 0.9488, 0.8904,  ..., 0.9054, 0.9041, 0.9219],
        [0.8976, 0.9364, 0.8846,  ..., 0.9017, 0.9001, 0.9110],
        ...,
        [0.8925, 0.9220, 0.8776,  ..., 0.8973, 0.8953, 0.8983],
        [0.9057, 0.9609, 0.8960,  ..., 0.9088, 0.9078, 0.9325],
        [0.9147, 0.9897, 0.9090,  ..., 0.9167, 0.9163, 0.9578]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1181],
         [27.1977],
         [12.0974],
         ...,
         [11.9098],
         [12.5937],
         [24.6343]],
        [[ 9.7075],
         [25.6552],
         [11.2685],
         ...,
         [ 9.8515],
         [11.4965],
         [17.0127]],
        [[ 9.4446],
         [25.4705],
         [11.1699],
         ...,
         [ 9.6228],
         [11.3676],
         [16.2507]],
        ...,
        [[ 9.1281],
         [25.2430],
         [11.0488],
         ...,
         [ 9.3464],
         [11.2095],
         [15.3522]],
        [[ 9.9567],
         [25.8270],
         [11.3603],
         ...,
         [10.0675],
         [11.6169],
         [17.7479]],
        [[10.5295],
         [26.2101],
         [11.5654],
         ...,
         [10.5609],
         [11.8871],
         [19.4846]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9801, 1.1794, 0.9799,  ..., 0.9774, 0.9864, 1.1455],
        [0.9483, 1.1590, 0.9689,  ..., 0.9502, 0.9719, 1.0448],
        [0.9448, 1.1566, 0.9676,  ..., 0.9472, 0.9702, 1.0347],
        ...,
        [0.9406, 1.1536, 0.9660,  ..., 0.9435, 0.9681, 1.0229],
        [0.9516, 1.1613, 0.9701,  ..., 0.9530, 0.9735, 1.0545],
        [0.9591, 1.1664, 0.9728,  ..., 0.9596, 0.9771, 1.0775]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7371],
         [10.9561],
         [11.5406],
         ...,
         [11.5764],
         [12.4125],
         [14.3829]],
        [[10.8705],
         [ 9.2020],
         [11.2069],
         ...,
         [11.1135],
         [11.6033],
         [10.7185]],
        [[10.7678],
         [ 9.0054],
         [11.1663],
         ...,
         [11.0575],
         [11.5069],
         [10.3353]],
        ...,
        [[10.6417],
         [ 8.7672],
         [11.1161],
         ...,
         [10.9884],
         [11.3883],
         [ 9.8787]],
        [[10.9662],
         [ 9.3874],
         [11.2446],
         ...,
         [11.1654],
         [11.6930],
         [11.0848]],
        [[11.1804],
         [ 9.8096],
         [11.3281],
         ...,
         [11.2810],
         [11.8935],
         [11.9382]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0193, 1.0025, 1.0151,  ..., 1.0158, 1.0337, 1.0760],
        [1.0007, 0.9649, 1.0079,  ..., 1.0059, 1.0164, 0.9974],
        [0.9985, 0.9607, 1.0070,  ..., 1.0047, 1.0143, 0.9892],
        ...,
        [0.9958, 0.9556, 1.0060,  ..., 1.0032, 1.0118, 0.9794],
        [1.0027, 0.9689, 1.0087,  ..., 1.0070, 1.0183, 1.0053],
        [1.0073, 0.9779, 1.0105,  ..., 1.0095, 1.0226, 1.0236]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.6878],
         [22.1041],
         [14.3223],
         ...,
         [13.9179],
         [13.8991],
         [19.8139]],
        [[11.7655],
         [14.3917],
         [10.6004],
         ...,
         [11.0040],
         [11.6737],
         [12.7066]],
        [[11.5471],
         [13.6471],
         [10.2128],
         ...,
         [10.6886],
         [11.4243],
         [12.0267]],
        ...,
        [[11.2817],
         [12.7764],
         [ 9.7514],
         ...,
         [10.3096],
         [11.1221],
         [11.2332]],
        [[11.9708],
         [15.1150],
         [10.9713],
         ...,
         [11.3034],
         [11.9089],
         [13.3684]],
        [[12.4365],
         [16.8426],
         [11.8364],
         ...,
         [11.9933],
         [12.4446],
         [14.9533]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9327, 1.0696, 0.9430,  ..., 0.9364, 0.9361, 1.0323],
        [0.9014, 0.9441, 0.8825,  ..., 0.8890, 0.8999, 0.9167],
        [0.8979, 0.9320, 0.8762,  ..., 0.8839, 0.8959, 0.9057],
        ...,
        [0.8935, 0.9178, 0.8686,  ..., 0.8777, 0.8909, 0.8927],
        [0.9047, 0.9559, 0.8885,  ..., 0.8939, 0.9037, 0.9275],
        [0.9123, 0.9840, 0.9026,  ..., 0.9051, 0.9125, 0.9533]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.0694],
         [27.2423],
         [12.4732],
         ...,
         [12.0982],
         [12.4154],
         [24.7403]],
        [[ 9.7392],
         [25.7752],
         [11.3670],
         ...,
         [ 9.7203],
         [11.4336],
         [17.0381]],
        [[ 9.4840],
         [25.5992],
         [11.2371],
         ...,
         [ 9.4605],
         [11.3176],
         [16.2694]],
        ...,
        [[ 9.1765],
         [25.3824],
         [11.0779],
         ...,
         [ 9.1477],
         [11.1752],
         [15.3632]],
        [[ 9.9809],
         [25.9388],
         [11.4883],
         ...,
         [ 9.9665],
         [11.5418],
         [17.7801]],
        [[10.5357],
         [26.3035],
         [11.7606],
         ...,
         [10.5320],
         [11.7841],
         [19.5337]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9799, 1.1804, 0.9852,  ..., 0.9803, 0.9845, 1.1473],
        [0.9491, 1.1610, 0.9706,  ..., 0.9488, 0.9715, 1.0456],
        [0.9457, 1.1587, 0.9689,  ..., 0.9454, 0.9700, 1.0354],
        ...,
        [0.9417, 1.1558, 0.9668,  ..., 0.9413, 0.9681, 1.0234],
        [0.9523, 1.1632, 0.9722,  ..., 0.9521, 0.9729, 1.0554],
        [0.9596, 1.1680, 0.9758,  ..., 0.9596, 0.9761, 1.0785]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6781],
         [10.7621],
         [12.2118],
         ...,
         [11.5397],
         [12.2214],
         [13.8661]],
        [[10.9516],
         [ 9.1726],
         [11.5478],
         ...,
         [11.2114],
         [11.5504],
         [10.4120]],
        [[10.8649],
         [ 8.9930],
         [11.4681],
         ...,
         [11.1714],
         [11.4700],
         [10.0492]],
        ...,
        [[10.7582],
         [ 8.7748],
         [11.3700],
         ...,
         [11.1219],
         [11.3709],
         [ 9.6164]],
        [[11.0323],
         [ 9.3417],
         [11.6218],
         ...,
         [11.2484],
         [11.6252],
         [10.7585]],
        [[11.2125],
         [ 9.7259],
         [11.7868],
         ...,
         [11.3306],
         [11.7920],
         [11.5646]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0195, 0.9998, 1.0309,  ..., 1.0165, 1.0311, 1.0664],
        [1.0039, 0.9658, 1.0167,  ..., 1.0095, 1.0168, 0.9923],
        [1.0021, 0.9619, 1.0150,  ..., 1.0086, 1.0150, 0.9846],
        ...,
        [0.9998, 0.9572, 1.0129,  ..., 1.0076, 1.0129, 0.9753],
        [1.0056, 0.9694, 1.0183,  ..., 1.0103, 1.0184, 0.9998],
        [1.0095, 0.9776, 1.0218,  ..., 1.0120, 1.0219, 1.0171]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.6637],
         [22.1198],
         [14.0857],
         ...,
         [13.7210],
         [13.8942],
         [19.5879]],
        [[11.8459],
         [14.4308],
         [10.7237],
         ...,
         [11.5727],
         [11.4068],
         [12.6664]],
        [[11.6384],
         [13.6876],
         [10.3677],
         ...,
         [11.3313],
         [11.1317],
         [12.0009]],
        ...,
        [[11.3859],
         [12.8182],
         [ 9.9423],
         ...,
         [11.0386],
         [10.7994],
         [11.2234]],
        [[12.0407],
         [15.1527],
         [11.0632],
         ...,
         [11.8001],
         [11.6669],
         [13.3135]],
        [[12.4822],
         [16.8760],
         [11.8508],
         ...,
         [12.3179],
         [12.2620],
         [14.8607]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9370, 1.0745, 0.9439,  ..., 0.9379, 0.9408, 1.0334],
        [0.9074, 0.9495, 0.8892,  ..., 0.9030, 0.9003, 0.9208],
        [0.9041, 0.9374, 0.8834,  ..., 0.8991, 0.8958, 0.9100],
        ...,
        [0.9000, 0.9233, 0.8765,  ..., 0.8943, 0.8904, 0.8973],
        [0.9106, 0.9612, 0.8947,  ..., 0.9067, 0.9045, 0.9313],
        [0.9178, 0.9892, 0.9075,  ..., 0.9151, 0.9142, 0.9565]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.1648],
         [27.2918],
         [12.6364],
         ...,
         [12.0840],
         [11.9988],
         [24.1423]],
        [[ 9.6781],
         [25.9645],
         [11.4090],
         ...,
         [ 9.7296],
         [11.2828],
         [16.6769]],
        [[ 9.4080],
         [25.8047],
         [11.2656],
         ...,
         [ 9.4720],
         [11.1971],
         [15.9305]],
        ...,
        [[ 9.0832],
         [25.6078],
         [11.0901],
         ...,
         [ 9.1618],
         [11.0918],
         [15.0502]],
        [[ 9.9344],
         [26.1128],
         [11.5430],
         ...,
         [ 9.9735],
         [11.3624],
         [17.3971]],
        [[10.5242],
         [26.4432],
         [11.8443],
         ...,
         [10.5338],
         [11.5401],
         [19.0983]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9782, 1.1781, 0.9844,  ..., 0.9771, 0.9760, 1.1365],
        [0.9453, 1.1606, 0.9682,  ..., 0.9460, 0.9666, 1.0378],
        [0.9418, 1.1585, 0.9663,  ..., 0.9426, 0.9654, 1.0280],
        ...,
        [0.9375, 1.1559, 0.9640,  ..., 0.9385, 0.9640, 1.0163],
        [0.9487, 1.1625, 0.9700,  ..., 0.9493, 0.9676, 1.0474],
        [0.9565, 1.1669, 0.9740,  ..., 0.9567, 0.9700, 1.0698]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.6437],
         [10.6047],
         [12.5408],
         ...,
         [11.5763],
         [12.4165],
         [12.8212]],
        [[11.0016],
         [ 9.1750],
         [11.6387],
         ...,
         [11.1137],
         [11.6044],
         [ 9.9030]],
        [[10.9246],
         [ 9.0120],
         [11.5316],
         ...,
         [11.0577],
         [11.5076],
         [ 9.5914]],
        ...,
        [[10.8298],
         [ 8.8137],
         [11.4001],
         ...,
         [10.9886],
         [11.3886],
         [ 9.2182]],
        [[11.0731],
         [ 9.3281],
         [11.7384],
         ...,
         [11.1656],
         [11.6944],
         [10.1996]],
        [[11.2327],
         [ 9.6751],
         [11.9615],
         ...,
         [11.2810],
         [11.8956],
         [10.8861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0183, 0.9960, 1.0375,  ..., 1.0168, 1.0348, 1.0435],
        [1.0045, 0.9653, 1.0181,  ..., 1.0069, 1.0174, 0.9809],
        [1.0028, 0.9618, 1.0159,  ..., 1.0057, 1.0153, 0.9742],
        ...,
        [1.0008, 0.9576, 1.0130,  ..., 1.0042, 1.0128, 0.9662],
        [1.0060, 0.9686, 1.0203,  ..., 1.0080, 1.0193, 0.9873],
        [1.0094, 0.9760, 1.0251,  ..., 1.0105, 1.0237, 1.0020]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.6862],
         [22.0472],
         [14.0006],
         ...,
         [13.6919],
         [13.9246],
         [19.1312]],
        [[11.7640],
         [14.5485],
         [11.1219],
         ...,
         [12.0934],
         [11.2152],
         [12.5705]],
        [[11.5457],
         [13.8188],
         [10.8095],
         ...,
         [11.9090],
         [10.9188],
         [11.9337]],
        ...,
        [[11.2803],
         [12.9638],
         [10.4339],
         ...,
         [11.6840],
         [10.5618],
         [11.1879]],
        [[11.9693],
         [15.2564],
         [11.4184],
         ...,
         [12.2662],
         [11.4960],
         [13.1885]],
        [[12.4349],
         [16.9426],
         [12.1009],
         ...,
         [12.6563],
         [12.1408],
         [14.6620]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9431, 1.0791, 0.9482,  ..., 0.9432, 0.9470, 1.0316],
        [0.9118, 0.9571, 0.9014,  ..., 0.9172, 0.9029, 0.9249],
        [0.9083, 0.9452, 0.8963,  ..., 0.9142, 0.8981, 0.9146],
        ...,
        [0.9040, 0.9313, 0.8902,  ..., 0.9105, 0.8923, 0.9024],
        [0.9152, 0.9686, 0.9062,  ..., 0.9200, 0.9075, 0.9350],
        [0.9227, 0.9960, 0.9173,  ..., 0.9263, 0.9179, 0.9590]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3945],
         [27.4503],
         [12.5169],
         ...,
         [12.2153],
         [11.1114],
         [21.3298]],
        [[ 9.5462],
         [26.1541],
         [11.3783],
         ...,
         [ 9.6474],
         [10.7863],
         [15.2021]],
        [[ 9.2426],
         [25.9980],
         [11.2448],
         ...,
         [ 9.3696],
         [10.7467],
         [14.5780]],
        ...,
        [[ 8.8791],
         [25.8055],
         [11.0812],
         ...,
         [ 9.0360],
         [10.6978],
         [13.8388]],
        [[ 9.8354],
         [26.2991],
         [11.5030],
         ...,
         [ 9.9111],
         [10.8229],
         [15.8021]],
        [[10.5048],
         [26.6219],
         [11.7830],
         ...,
         [10.5189],
         [10.9043],
         [17.2110]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 1.1725, 0.9751,  ..., 0.9711, 0.9566, 1.0916],
        [0.9359, 1.1554, 0.9601,  ..., 0.9372, 0.9523, 1.0106],
        [0.9319, 1.1533, 0.9583,  ..., 0.9335, 0.9517, 1.0024],
        ...,
        [0.9271, 1.1508, 0.9562,  ..., 0.9291, 0.9511, 0.9926],
        [0.9397, 1.1573, 0.9617,  ..., 0.9407, 0.9527, 1.0185],
        [0.9485, 1.1615, 0.9654,  ..., 0.9487, 0.9538, 1.0372]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7129],
         [10.4662],
         [13.2662],
         ...,
         [11.6026],
         [12.7354],
         [11.4311]],
        [[10.9033],
         [ 9.2286],
         [11.8414],
         ...,
         [11.0664],
         [11.6925],
         [ 9.1266]],
        [[10.8070],
         [ 9.0859],
         [11.6760],
         ...,
         [11.0017],
         [11.5694],
         [ 8.8757]],
        ...,
        [[10.6887],
         [ 8.9119],
         [11.4739],
         ...,
         [10.9220],
         [11.4186],
         [ 8.5739]],
        [[10.9929],
         [ 9.3623],
         [11.9961],
         ...,
         [11.1264],
         [11.8072],
         [ 9.3645]],
        [[11.1933],
         [ 9.6642],
         [12.3449],
         ...,
         [11.2600],
         [12.0644],
         [ 9.9116]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0105, 0.9838, 1.0438,  ..., 1.0082, 1.0325, 1.0045],
        [0.9932, 0.9573, 1.0133,  ..., 0.9967, 1.0101, 0.9551],
        [0.9911, 0.9542, 1.0097,  ..., 0.9953, 1.0075, 0.9497],
        ...,
        [0.9886, 0.9505, 1.0054,  ..., 0.9936, 1.0042, 0.9432],
        [0.9951, 0.9601, 1.0166,  ..., 0.9980, 1.0125, 0.9602],
        [0.9994, 0.9666, 1.0241,  ..., 1.0008, 1.0181, 0.9719]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7362],
         [21.7265],
         [14.5630],
         ...,
         [13.8988],
         [14.0502],
         [17.5858]],
        [[11.7449],
         [14.9579],
         [12.0807],
         ...,
         [12.6169],
         [10.9315],
         [12.1999]],
        [[11.5194],
         [14.2824],
         [11.8044],
         ...,
         [12.4667],
         [10.5971],
         [11.6600]],
        ...,
        [[11.2455],
         [13.4863],
         [11.4703],
         ...,
         [12.2827],
         [10.1962],
         [11.0229]],
        [[11.9570],
         [15.6098],
         [12.3415],
         ...,
         [12.7572],
         [11.2496],
         [12.7205]],
        [[12.4387],
         [17.1507],
         [12.9370],
         ...,
         [13.0724],
         [11.9847],
         [13.9494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9434, 1.0734, 0.9569,  ..., 0.9461, 0.9485, 1.0060],
        [0.9110, 0.9633, 0.9165,  ..., 0.9252, 0.8978, 0.9184],
        [0.9074, 0.9523, 0.9120,  ..., 0.9228, 0.8924, 0.9097],
        ...,
        [0.9029, 0.9394, 0.9066,  ..., 0.9198, 0.8858, 0.8993],
        [0.9145, 0.9739, 0.9207,  ..., 0.9275, 0.9030, 0.9269],
        [0.9223, 0.9990, 0.9304,  ..., 0.9326, 0.9149, 0.9469]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7890],
         [27.4588],
         [12.1000],
         ...,
         [12.2874],
         [11.3104],
         [18.2650]],
        [[ 9.3587],
         [25.9465],
         [11.2692],
         ...,
         [ 9.6053],
         [10.4533],
         [13.7974]],
        [[ 9.0038],
         [25.7652],
         [11.1704],
         ...,
         [ 9.3169],
         [10.3519],
         [13.3265]],
        ...,
        [[ 8.5820],
         [25.5419],
         [11.0490],
         ...,
         [ 8.9709],
         [10.2273],
         [12.7644]],
        [[ 9.6987],
         [26.1150],
         [11.3612],
         ...,
         [ 9.8794],
         [10.5479],
         [14.2469]],
        [[10.4934],
         [26.4908],
         [11.5668],
         ...,
         [10.5125],
         [10.7596],
         [15.2912]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 1.1716, 0.9686,  ..., 0.9711, 0.9582, 1.0501],
        [0.9324, 1.1516, 0.9576,  ..., 0.9356, 0.9469, 0.9910],
        [0.9277, 1.1492, 0.9563,  ..., 0.9318, 0.9455, 0.9848],
        ...,
        [0.9221, 1.1463, 0.9547,  ..., 0.9273, 0.9439, 0.9774],
        [0.9369, 1.1538, 0.9588,  ..., 0.9393, 0.9481, 0.9970],
        [0.9474, 1.1588, 0.9616,  ..., 0.9476, 0.9509, 1.0108]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7784],
         [10.4009],
         [13.8221],
         ...,
         [11.6360],
         [12.7998],
         [11.2604]],
        [[10.8149],
         [ 9.2703],
         [12.0019],
         ...,
         [11.0131],
         [11.7103],
         [10.4217]],
        [[10.7013],
         [ 9.1392],
         [11.7939],
         ...,
         [10.9384],
         [11.5821],
         [10.3224]],
        ...,
        [[10.5619],
         [ 8.9790],
         [11.5408],
         ...,
         [10.8463],
         [11.4249],
         [10.2004]],
        [[10.9209],
         [ 9.3930],
         [12.1971],
         ...,
         [11.0826],
         [11.8300],
         [10.5143]],
        [[11.1585],
         [ 9.6696],
         [12.6393],
         ...,
         [11.2374],
         [12.0984],
         [10.7216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0236, 0.9941, 1.0675,  ..., 1.0206, 1.0455, 1.0125],
        [1.0030, 0.9698, 1.0284,  ..., 1.0072, 1.0222, 0.9945],
        [1.0005, 0.9670, 1.0240,  ..., 1.0056, 1.0194, 0.9924],
        ...,
        [0.9975, 0.9636, 1.0185,  ..., 1.0036, 1.0160, 0.9898],
        [1.0052, 0.9725, 1.0326,  ..., 1.0087, 1.0247, 0.9965],
        [1.0103, 0.9784, 1.0421,  ..., 1.0120, 1.0305, 1.0010]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7470],
         [21.3657],
         [15.0204],
         ...,
         [13.8876],
         [14.0951],
         [15.5854]],
        [[11.8715],
         [15.4305],
         [12.6090],
         ...,
         [12.5838],
         [10.8788],
         [11.5749]],
        [[11.6579],
         [14.8212],
         [12.3388],
         ...,
         [12.4312],
         [10.5355],
         [11.1563]],
        ...,
        [[11.3981],
         [14.0983],
         [12.0114],
         ...,
         [12.2443],
         [10.1245],
         [10.6579]],
        [[12.0722],
         [16.0152],
         [12.8637],
         ...,
         [12.7264],
         [11.2056],
         [11.9752]],
        [[12.5271],
         [17.3851],
         [13.4441],
         ...,
         [13.0468],
         [11.9620],
         [12.9082]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9420, 1.0659, 0.9627,  ..., 0.9442, 0.9476, 0.9719],
        [0.9115, 0.9693, 0.9235,  ..., 0.9230, 0.8953, 0.9066],
        [0.9080, 0.9594, 0.9191,  ..., 0.9206, 0.8897, 0.8998],
        ...,
        [0.9038, 0.9477, 0.9137,  ..., 0.9175, 0.8830, 0.8917],
        [0.9147, 0.9789, 0.9276,  ..., 0.9254, 0.9006, 0.9131],
        [0.9221, 1.0011, 0.9370,  ..., 0.9306, 0.9129, 0.9283]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9380],
         [27.4235],
         [11.9602],
         ...,
         [12.3128],
         [11.3949],
         [17.2556]],
        [[ 9.2977],
         [25.8650],
         [11.2318],
         ...,
         [ 9.5909],
         [10.3432],
         [13.3698]],
        [[ 8.9251],
         [25.6784],
         [11.1448],
         ...,
         [ 9.2988],
         [10.2200],
         [12.9541]],
        ...,
        [[ 8.4833],
         [25.4486],
         [11.0377],
         ...,
         [ 8.9486],
         [10.0690],
         [12.4561]],
        [[ 9.6555],
         [26.0386],
         [11.3128],
         ...,
         [ 9.8687],
         [10.4583],
         [13.7654]],
        [[10.4945],
         [26.4256],
         [11.4935],
         ...,
         [10.5104],
         [10.7168],
         [14.6802]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1693, 0.9649,  ..., 0.9696, 0.9574, 1.0349],
        [0.9297, 1.1487, 0.9553,  ..., 0.9336, 0.9435, 0.9835],
        [0.9248, 1.1462, 0.9541,  ..., 0.9297, 0.9419, 0.9780],
        ...,
        [0.9189, 1.1432, 0.9527,  ..., 0.9251, 0.9399, 0.9715],
        [0.9344, 1.1510, 0.9563,  ..., 0.9373, 0.9450, 0.9888],
        [0.9455, 1.1561, 0.9587,  ..., 0.9457, 0.9485, 1.0008]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.7983],
         [10.3851],
         [14.0241],
         ...,
         [11.6478],
         [12.8222],
         [11.4906]],
        [[10.7878],
         [ 9.2868],
         [12.0614],
         ...,
         [10.9955],
         [11.7166],
         [10.5636]],
        [[10.6689],
         [ 9.1592],
         [11.8384],
         ...,
         [10.9173],
         [11.5865],
         [10.4542]],
        ...,
        [[10.5232],
         [ 9.0032],
         [11.5673],
         ...,
         [10.8211],
         [11.4271],
         [10.3200]],
        [[10.8988],
         [ 9.4062],
         [12.2711],
         ...,
         [11.0681],
         [11.8379],
         [10.6657]],
        [[11.1477],
         [ 9.6751],
         [12.7466],
         ...,
         [11.2302],
         [12.1102],
         [10.8943]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0230, 0.9927, 1.0707,  ..., 1.0198, 1.0450, 1.0164],
        [1.0013, 0.9691, 1.0286,  ..., 1.0058, 1.0212, 0.9965],
        [0.9988, 0.9664, 1.0239,  ..., 1.0041, 1.0185, 0.9942],
        ...,
        [0.9957, 0.9631, 1.0180,  ..., 1.0020, 1.0150, 0.9913],
        [1.0037, 0.9717, 1.0331,  ..., 1.0073, 1.0239, 0.9987],
        [1.0091, 0.9775, 1.0433,  ..., 1.0108, 1.0297, 1.0036]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7538],
         [21.2436],
         [15.2175],
         ...,
         [13.8839],
         [14.1110],
         [15.0315]],
        [[11.9158],
         [15.6058],
         [12.8008],
         ...,
         [12.5724],
         [10.8608],
         [11.3502]],
        [[11.7061],
         [15.0212],
         [12.5296],
         ...,
         [12.4189],
         [10.5145],
         [10.9623]],
        ...,
        [[11.4509],
         [14.3260],
         [12.2011],
         ...,
         [12.2310],
         [10.1000],
         [10.4992]],
        [[12.1127],
         [16.1656],
         [13.0563],
         ...,
         [12.7158],
         [11.1907],
         [11.7205]],
        [[12.5590],
         [17.4732],
         [13.6383],
         ...,
         [13.0380],
         [11.9544],
         [12.5809]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9415, 1.0633, 0.9653,  ..., 0.9436, 0.9473, 0.9623],
        [0.9116, 0.9716, 0.9260,  ..., 0.9223, 0.8945, 0.9024],
        [0.9082, 0.9621, 0.9216,  ..., 0.9198, 0.8888, 0.8961],
        ...,
        [0.9041, 0.9508, 0.9163,  ..., 0.9167, 0.8821, 0.8886],
        [0.9148, 0.9807, 0.9302,  ..., 0.9246, 0.8998, 0.9084],
        [0.9221, 1.0020, 0.9396,  ..., 0.9299, 0.9122, 0.9224]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7695],
         [27.1303],
         [11.7497],
         ...,
         [12.3418],
         [11.4822],
         [15.9968]],
        [[ 9.3670],
         [25.4818],
         [11.1747],
         ...,
         [ 9.5748],
         [10.2407],
         [12.8540]],
        [[ 9.0145],
         [25.2848],
         [11.1055],
         ...,
         [ 9.2786],
         [10.0967],
         [12.5107]],
        ...,
        [[ 8.5954],
         [25.0424],
         [11.0203],
         ...,
         [ 8.9237],
         [ 9.9207],
         [12.0972]],
        [[ 9.7047],
         [25.6650],
         [11.2390],
         ...,
         [ 9.8567],
         [10.3755],
         [13.1794]],
        [[10.4935],
         [26.0740],
         [11.3821],
         ...,
         [10.5083],
         [10.6793],
         [13.9268]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9756, 1.1654, 0.9621,  ..., 0.9699, 0.9586, 1.0182],
        [0.9306, 1.1436, 0.9545,  ..., 0.9334, 0.9422, 0.9767],
        [0.9260, 1.1410, 0.9536,  ..., 0.9295, 0.9403, 0.9722],
        ...,
        [0.9204, 1.1378, 0.9525,  ..., 0.9248, 0.9379, 0.9667],
        [0.9351, 1.1460, 0.9554,  ..., 0.9371, 0.9440, 0.9810],
        [0.9455, 1.1514, 0.9573,  ..., 0.9457, 0.9480, 0.9909]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8448],
         [10.2100],
         [13.9254],
         ...,
         [11.6857],
         [12.5361],
         [12.2851]],
        [[10.7206],
         [ 9.2608],
         [12.0322],
         ...,
         [10.9410],
         [11.6374],
         [11.5681]],
        [[10.5891],
         [ 9.1497],
         [11.8165],
         ...,
         [10.8521],
         [11.5307],
         [11.4823]],
        ...,
        [[10.4281],
         [ 9.0135],
         [11.5542],
         ...,
         [10.7429],
         [11.3997],
         [11.3767]],
        [[10.8435],
         [ 9.3647],
         [12.2349],
         ...,
         [11.0236],
         [11.7367],
         [11.6479]],
        [[11.1197],
         [ 9.5980],
         [12.6941],
         ...,
         [11.2082],
         [11.9590],
         [11.8259]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0212, 0.9862, 1.0659,  ..., 1.0178, 1.0361, 1.0307],
        [0.9971, 0.9658, 1.0253,  ..., 1.0019, 1.0168, 1.0153],
        [0.9943, 0.9634, 1.0206,  ..., 1.0000, 1.0145, 1.0135],
        ...,
        [0.9909, 0.9605, 1.0150,  ..., 0.9976, 1.0117, 1.0112],
        [0.9998, 0.9681, 1.0296,  ..., 1.0036, 1.0189, 1.0170],
        [1.0057, 0.9731, 1.0395,  ..., 1.0076, 1.0237, 1.0208]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.8012],
         [21.0907],
         [15.4931],
         ...,
         [13.8675],
         [14.0519],
         [14.1972]],
        [[11.9947],
         [15.8136],
         [12.7931],
         ...,
         [12.6365],
         [10.9536],
         [11.0125]],
        [[11.7881],
         [15.2599],
         [12.4935],
         ...,
         [12.4920],
         [10.6210],
         [10.6716]],
        ...,
        [[11.5368],
         [14.5994],
         [12.1312],
         ...,
         [12.3148],
         [10.2222],
         [10.2631]],
        [[12.1885],
         [16.3427],
         [13.0762],
         ...,
         [12.7715],
         [11.2699],
         [11.3369]],
        [[12.6275],
         [17.5737],
         [13.7232],
         ...,
         [13.0744],
         [12.0005],
         [12.0869]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9450, 1.0636, 0.9725,  ..., 0.9461, 0.9491, 0.9514],
        [0.9156, 0.9777, 0.9286,  ..., 0.9260, 0.8987, 0.8996],
        [0.9123, 0.9687, 0.9237,  ..., 0.9237, 0.8933, 0.8941],
        ...,
        [0.9082, 0.9580, 0.9178,  ..., 0.9208, 0.8868, 0.8874],
        [0.9188, 0.9863, 0.9332,  ..., 0.9282, 0.9038, 0.9049],
        [0.9259, 1.0064, 0.9437,  ..., 0.9332, 0.9157, 0.9171]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4873],
         [26.4476],
         [11.5178],
         ...,
         [12.2496],
         [11.4526],
         [12.6064]],
        [[ 9.4982],
         [24.4687],
         [11.1100],
         ...,
         [ 9.6271],
         [10.2743],
         [11.5377]],
        [[ 9.1819],
         [24.2342],
         [11.0605],
         ...,
         [ 9.3442],
         [10.1372],
         [11.4119]],
        ...,
        [[ 8.8039],
         [23.9464],
         [10.9994],
         ...,
         [ 9.0047],
         [ 9.9695],
         [11.2576]],
        [[ 9.7999],
         [24.6871],
         [11.1558],
         ...,
         [ 9.8958],
         [10.4026],
         [11.6551]],
        [[10.5000],
         [25.1761],
         [11.2577],
         ...,
         [10.5157],
         [10.6914],
         [11.9184]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 1.1580, 0.9607,  ..., 0.9703, 0.9598, 0.9751],
        [0.9340, 1.1318, 0.9553,  ..., 0.9357, 0.9442, 0.9609],
        [0.9298, 1.1287, 0.9546,  ..., 0.9319, 0.9424, 0.9593],
        ...,
        [0.9248, 1.1249, 0.9538,  ..., 0.9275, 0.9402, 0.9572],
        [0.9380, 1.1347, 0.9559,  ..., 0.9392, 0.9459, 0.9625],
        [0.9472, 1.1412, 0.9572,  ..., 0.9474, 0.9497, 0.9660]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8563],
         [10.2093],
         [13.5350],
         ...,
         [11.6916],
         [11.9889],
         [16.8226]],
        [[10.7021],
         [ 9.1651],
         [11.9184],
         ...,
         [10.9327],
         [11.4846],
         [12.9507]],
        [[10.5673],
         [ 9.0435],
         [11.7322],
         ...,
         [10.8423],
         [11.4236],
         [12.5381]],
        ...,
        [[10.4023],
         [ 8.8948],
         [11.5051],
         ...,
         [10.7310],
         [11.3484],
         [12.0442]],
        [[10.8281],
         [ 9.2788],
         [12.0929],
         ...,
         [11.0169],
         [11.5411],
         [13.3437]],
        [[11.1114],
         [ 9.5347],
         [12.4871],
         ...,
         [11.2049],
         [11.6669],
         [14.2536]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0199, 0.9846, 1.0559,  ..., 1.0163, 1.0227, 1.1264],
        [0.9951, 0.9622, 1.0212,  ..., 1.0001, 1.0119, 1.0433],
        [0.9922, 0.9596, 1.0172,  ..., 0.9981, 1.0106, 1.0345],
        ...,
        [0.9887, 0.9564, 1.0123,  ..., 0.9957, 1.0090, 1.0239],
        [0.9978, 0.9646, 1.0249,  ..., 1.0019, 1.0131, 1.0518],
        [1.0039, 0.9701, 1.0334,  ..., 1.0059, 1.0158, 1.0713]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7822],
         [20.9640],
         [14.2725],
         ...,
         [13.6822],
         [13.8802],
         [13.7499]],
        [[12.2428],
         [15.7900],
         [11.7960],
         ...,
         [12.2635],
         [11.3083],
         [11.4464]],
        [[12.0646],
         [15.2457],
         [11.5210],
         ...,
         [12.0984],
         [11.0251],
         [11.1895]],
        ...,
        [[11.8471],
         [14.5960],
         [11.1885],
         ...,
         [11.8966],
         [10.6833],
         [10.8787]],
        [[12.4097],
         [16.3099],
         [12.0557],
         ...,
         [12.4179],
         [11.5763],
         [11.6888]],
        [[12.7859],
         [17.5184],
         [12.6493],
         ...,
         [12.7655],
         [12.1903],
         [12.2420]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9549, 1.0717, 0.9628,  ..., 0.9532, 0.9565, 0.9543],
        [0.9298, 0.9875, 0.9226,  ..., 0.9302, 0.9146, 0.9169],
        [0.9269, 0.9787, 0.9181,  ..., 0.9275, 0.9100, 0.9127],
        ...,
        [0.9234, 0.9681, 0.9127,  ..., 0.9242, 0.9045, 0.9076],
        [0.9325, 0.9960, 0.9268,  ..., 0.9327, 0.9190, 0.9208],
        [0.9387, 1.0156, 0.9364,  ..., 0.9383, 0.9290, 0.9298]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.4334],
         [26.2720],
         [11.4613],
         ...,
         [12.2274],
         [11.3728],
         [12.9840]],
        [[ 9.5258],
         [23.9783],
         [11.0936],
         ...,
         [ 9.6402],
         [10.3708],
         [11.6771]],
        [[ 9.2168],
         [23.7086],
         [11.0489],
         ...,
         [ 9.3606],
         [10.2531],
         [11.5248]],
        ...,
        [[ 8.8471],
         [23.3782],
         [10.9937],
         ...,
         [ 9.0248],
         [10.1088],
         [11.3385]],
        [[ 9.8202],
         [24.2299],
         [11.1350],
         ...,
         [ 9.9057],
         [10.4807],
         [11.8196]],
        [[10.5026],
         [24.7947],
         [11.2269],
         ...,
         [10.5178],
         [10.7273],
         [12.1400]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9751, 1.1580, 0.9622,  ..., 0.9724, 0.9611, 0.9824],
        [0.9367, 1.1277, 0.9574,  ..., 0.9382, 0.9478, 0.9651],
        [0.9326, 1.1241, 0.9568,  ..., 0.9345, 0.9463, 0.9631],
        ...,
        [0.9277, 1.1197, 0.9561,  ..., 0.9300, 0.9444, 0.9606],
        [0.9406, 1.1310, 0.9579,  ..., 0.9417, 0.9493, 0.9670],
        [0.9496, 1.1385, 0.9591,  ..., 0.9498, 0.9525, 0.9712]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8433],
         [10.4010],
         [12.6751],
         ...,
         [11.6699],
         [11.8273],
         [11.6575]],
        [[10.7230],
         [ 9.1063],
         [11.6758],
         ...,
         [10.9633],
         [11.4354],
         [11.3720]],
        [[10.5919],
         [ 8.9576],
         [11.5577],
         ...,
         [10.8789],
         [11.3878],
         [11.3372]],
        ...,
        [[10.4314],
         [ 8.7765],
         [11.4127],
         ...,
         [10.7750],
         [11.3290],
         [11.2941]],
        [[10.8455],
         [ 9.2457],
         [11.7859],
         ...,
         [11.0419],
         [11.4795],
         [11.4043]],
        [[11.1207],
         [ 9.5609],
         [12.0325],
         ...,
         [11.2172],
         [11.5775],
         [11.4759]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0210, 0.9901, 1.0389,  ..., 1.0173, 1.0207, 1.0171],
        [0.9970, 0.9624, 1.0175,  ..., 1.0022, 1.0123, 1.0109],
        [0.9942, 0.9592, 1.0149,  ..., 1.0004, 1.0113, 1.0102],
        ...,
        [0.9908, 0.9553, 1.0118,  ..., 0.9981, 1.0100, 1.0093],
        [0.9997, 0.9653, 1.0198,  ..., 1.0039, 1.0132, 1.0116],
        [1.0056, 0.9721, 1.0251,  ..., 1.0076, 1.0153, 1.0132]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7172],
         [21.0613],
         [13.9602],
         ...,
         [13.6641],
         [13.8192],
         [13.8397]],
        [[12.2853],
         [15.4813],
         [11.0507],
         ...,
         [11.8426],
         [11.5338],
         [11.3782]],
        [[12.1188],
         [14.9025],
         [10.7356],
         ...,
         [11.6347],
         [11.2786],
         [11.1057]],
        ...,
        [[11.9152],
         [14.2141],
         [10.3569],
         ...,
         [11.3817],
         [10.9696],
         [10.7765]],
        [[12.4411],
         [16.0356],
         [11.3499],
         ...,
         [12.0378],
         [11.7746],
         [11.6357]],
        [[12.7918],
         [17.3300],
         [12.0390],
         ...,
         [12.4801],
         [12.3238],
         [12.2249]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9468, 1.0662, 0.9507,  ..., 0.9459, 0.9484, 0.9487],
        [0.9235, 0.9754, 0.9034,  ..., 0.9163, 0.9112, 0.9087],
        [0.9208, 0.9660, 0.8983,  ..., 0.9129, 0.9071, 0.9043],
        ...,
        [0.9174, 0.9548, 0.8921,  ..., 0.9088, 0.9021, 0.8989],
        [0.9260, 0.9845, 0.9083,  ..., 0.9194, 0.9152, 0.9129],
        [0.9317, 1.0055, 0.9195,  ..., 0.9266, 0.9241, 0.9225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.6792],
         [26.2579],
         [11.3235],
         ...,
         [12.3252],
         [11.4845],
         [12.5436]],
        [[ 9.4067],
         [23.9790],
         [11.0519],
         ...,
         [ 9.5840],
         [10.2381],
         [11.4953]],
        [[ 9.0655],
         [23.7110],
         [11.0187],
         ...,
         [ 9.2902],
         [10.0935],
         [11.3718]],
        ...,
        [[ 8.6590],
         [23.3825],
         [10.9776],
         ...,
         [ 8.9379],
         [ 9.9169],
         [11.2203]],
        [[ 9.7332],
         [24.2291],
         [11.0826],
         ...,
         [ 9.8635],
         [10.3734],
         [11.6105]],
        [[10.4943],
         [24.7902],
         [11.1507],
         ...,
         [10.5095],
         [10.6784],
         [11.8689]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1572, 0.9599,  ..., 0.9731, 0.9620, 0.9760],
        [0.9345, 1.1271, 0.9563,  ..., 0.9369, 0.9455, 0.9621],
        [0.9300, 1.1236, 0.9558,  ..., 0.9330, 0.9436, 0.9605],
        ...,
        [0.9247, 1.1192, 0.9553,  ..., 0.9283, 0.9413, 0.9585],
        [0.9389, 1.1304, 0.9567,  ..., 0.9406, 0.9473, 0.9637],
        [0.9489, 1.1378, 0.9576,  ..., 0.9491, 0.9513, 0.9671]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8502],
         [10.3321],
         [12.5662],
         ...,
         [11.6912],
         [12.0879],
         [12.5929]],
        [[10.7122],
         [ 9.0929],
         [11.6457],
         ...,
         [10.9333],
         [11.5130],
         [11.6530]],
        [[10.5791],
         [ 8.9502],
         [11.5365],
         ...,
         [10.8430],
         [11.4437],
         [11.5417]],
        ...,
        [[10.4163],
         [ 8.7763],
         [11.4024],
         ...,
         [10.7319],
         [11.3584],
         [11.4050]],
        [[10.8365],
         [ 9.2267],
         [11.7474],
         ...,
         [11.0174],
         [11.5773],
         [11.7568]],
        [[11.1160],
         [ 9.5288],
         [11.9749],
         ...,
         [11.2052],
         [11.7204],
         [11.9890]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0206, 0.9880, 1.0359,  ..., 1.0172, 1.0257, 1.0365],
        [0.9962, 0.9615, 1.0162,  ..., 1.0009, 1.0134, 1.0164],
        [0.9933, 0.9584, 1.0139,  ..., 0.9990, 1.0119, 1.0140],
        ...,
        [0.9898, 0.9547, 1.0110,  ..., 0.9966, 1.0100, 1.0110],
        [0.9988, 0.9643, 1.0184,  ..., 1.0027, 1.0147, 1.0186],
        [1.0048, 0.9708, 1.0233,  ..., 1.0068, 1.0178, 1.0236]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7208],
         [21.0583],
         [13.9471],
         ...,
         [13.6605],
         [13.8707],
         [13.8465]],
        [[12.2227],
         [15.5012],
         [11.2061],
         ...,
         [11.8801],
         [11.4003],
         [11.2528]],
        [[12.0490],
         [14.9243],
         [10.9066],
         ...,
         [11.6765],
         [11.1269],
         [10.9676]],
        ...,
        [[11.8368],
         [14.2380],
         [10.5460],
         ...,
         [11.4287],
         [10.7966],
         [10.6236]],
        [[12.3853],
         [16.0535],
         [11.4898],
         ...,
         [12.0713],
         [11.6588],
         [11.5228]],
        [[12.7517],
         [17.3431],
         [12.1417],
         ...,
         [12.5039],
         [12.2500],
         [12.1415]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9507, 1.0701, 0.9544,  ..., 0.9498, 0.9532, 0.9528],
        [0.9264, 0.9797, 0.9098,  ..., 0.9208, 0.9130, 0.9106],
        [0.9235, 0.9703, 0.9050,  ..., 0.9175, 0.9085, 0.9060],
        ...,
        [0.9201, 0.9591, 0.8991,  ..., 0.9135, 0.9032, 0.9004],
        [0.9290, 0.9887, 0.9144,  ..., 0.9239, 0.9172, 0.9150],
        [0.9350, 1.0096, 0.9250,  ..., 0.9309, 0.9268, 0.9250]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7553],
         [26.2148],
         [11.1190],
         ...,
         [12.4175],
         [11.6384],
         [11.9343]],
        [[ 9.3731],
         [23.9146],
         [10.9650],
         ...,
         [ 9.5341],
         [10.0800],
         [11.2249]],
        [[ 9.0224],
         [23.6443],
         [10.9460],
         ...,
         [ 9.2273],
         [ 9.9023],
         [11.1400]],
        ...,
        [[ 8.6052],
         [23.3130],
         [10.9226],
         ...,
         [ 8.8602],
         [ 9.6860],
         [11.0356]],
        [[ 9.7090],
         [24.1669],
         [10.9824],
         ...,
         [ 9.8264],
         [10.2470],
         [11.3038]],
        [[10.4935],
         [24.7332],
         [11.0211],
         ...,
         [10.5035],
         [10.6253],
         [11.4798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9779, 1.1558, 0.9563,  ..., 0.9734, 0.9631, 0.9670],
        [0.9332, 1.1254, 0.9542,  ..., 0.9353, 0.9425, 0.9577],
        [0.9286, 1.1218, 0.9540,  ..., 0.9313, 0.9402, 0.9565],
        ...,
        [0.9230, 1.1174, 0.9537,  ..., 0.9264, 0.9373, 0.9552],
        [0.9376, 1.1287, 0.9545,  ..., 0.9392, 0.9447, 0.9587],
        [0.9480, 1.1362, 0.9550,  ..., 0.9481, 0.9497, 0.9610]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8710],
         [10.3065],
         [12.3507],
         ...,
         [11.7336],
         [12.0405],
         [13.4427]],
        [[10.6751],
         [ 9.0689],
         [11.5862],
         ...,
         [10.8753],
         [11.4995],
         [11.8918]],
        [[10.5357],
         [ 8.9264],
         [11.4950],
         ...,
         [10.7735],
         [11.4342],
         [11.7127]],
        ...,
        [[10.3652],
         [ 8.7527],
         [11.3827],
         ...,
         [10.6485],
         [11.3537],
         [11.4941]],
        [[10.8055],
         [ 9.2024],
         [11.6712],
         ...,
         [10.9701],
         [11.5600],
         [12.0596]],
        [[11.0987],
         [ 9.5042],
         [11.8607],
         ...,
         [11.1823],
         [11.6949],
         [12.4382]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0207, 0.9872, 1.0310,  ..., 1.0178, 1.0244, 1.0544],
        [0.9951, 0.9607, 1.0146,  ..., 0.9994, 1.0128, 1.0212],
        [0.9921, 0.9576, 1.0127,  ..., 0.9972, 1.0114, 1.0173],
        ...,
        [0.9885, 0.9539, 1.0103,  ..., 0.9945, 1.0097, 1.0127],
        [0.9979, 0.9635, 1.0165,  ..., 1.0014, 1.0141, 1.0248],
        [1.0042, 0.9700, 1.0205,  ..., 1.0060, 1.0170, 1.0329]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.7416],
         [21.0686],
         [13.9473],
         ...,
         [13.6658],
         [13.9020],
         [13.8798]],
        [[12.2133],
         [15.4607],
         [11.2534],
         ...,
         [11.8912],
         [11.3446],
         [11.1422]],
        [[12.0364],
         [14.8796],
         [10.9584],
         ...,
         [11.6882],
         [11.0627],
         [10.8433]],
        ...,
        [[11.8203],
         [14.1886],
         [10.6029],
         ...,
         [11.4411],
         [10.7225],
         [10.4834]],
        [[12.3790],
         [16.0173],
         [11.5329],
         ...,
         [12.0818],
         [11.6112],
         [11.4255]],
        [[12.7526],
         [17.3175],
         [12.1743],
         ...,
         [12.5131],
         [12.2221],
         [12.0764]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9501, 1.0693, 0.9534,  ..., 0.9489, 0.9527, 0.9523],
        [0.9252, 0.9781, 0.9096,  ..., 0.9200, 0.9111, 0.9078],
        [0.9224, 0.9686, 0.9048,  ..., 0.9167, 0.9065, 0.9030],
        ...,
        [0.9188, 0.9574, 0.8990,  ..., 0.9127, 0.9010, 0.8971],
        [0.9279, 0.9871, 0.9142,  ..., 0.9231, 0.9154, 0.9124],
        [0.9340, 1.0083, 0.9246,  ..., 0.9301, 0.9254, 0.9230]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9779],
         [26.1439],
         [11.3582],
         ...,
         [12.8495],
         [12.5040],
         [11.1528]],
        [[ 9.2822],
         [23.8227],
         [10.3896],
         ...,
         [ 9.3333],
         [ 9.4898],
         [10.7015]],
        [[ 8.9050],
         [23.5501],
         [10.2756],
         ...,
         [ 8.9712],
         [ 9.1712],
         [10.6469]],
        ...,
        [[ 8.4580],
         [23.2160],
         [10.1358],
         ...,
         [ 8.5411],
         [ 8.7907],
         [10.5796]],
        [[ 9.6446],
         [24.0772],
         [10.4959],
         ...,
         [ 9.6807],
         [ 9.7937],
         [10.7521]],
        [[10.4952],
         [24.6484],
         [10.7346],
         ...,
         [10.4936],
         [10.4993],
         [10.8647]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1518, 0.9564,  ..., 0.9761, 0.9716, 0.9537],
        [0.9290, 1.1212, 0.9436,  ..., 0.9297, 0.9317, 0.9477],
        [0.9240, 1.1175, 0.9421,  ..., 0.9249, 0.9275, 0.9470],
        ...,
        [0.9181, 1.1131, 0.9403,  ..., 0.9192, 0.9225, 0.9461],
        [0.9338, 1.1245, 0.9450,  ..., 0.9343, 0.9358, 0.9484],
        [0.9450, 1.1321, 0.9482,  ..., 0.9450, 0.9451, 0.9499]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8597],
         [10.4583],
         [11.7094],
         ...,
         [11.8803],
         [11.6315],
         [16.0305]],
        [[10.5757],
         [ 9.0116],
         [11.3940],
         ...,
         [10.6535],
         [11.3592],
         [12.6875]],
        [[10.4268],
         [ 8.8471],
         [11.3556],
         ...,
         [10.5108],
         [11.3259],
         [12.3254]],
        ...,
        [[10.2448],
         [ 8.6470],
         [11.3081],
         ...,
         [10.3362],
         [11.2847],
         [11.8904]],
        [[10.7152],
         [ 9.1663],
         [11.4297],
         ...,
         [10.7871],
         [11.3900],
         [13.0312]],
        [[11.0293],
         [ 9.5170],
         [11.5086],
         ...,
         [11.0877],
         [11.4582],
         [13.8229]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0195, 0.9894, 1.0162,  ..., 1.0199, 1.0146, 1.1089],
        [0.9919, 0.9584, 1.0095,  ..., 0.9936, 1.0087, 1.0372],
        [0.9887, 0.9549, 1.0086,  ..., 0.9905, 1.0080, 1.0294],
        ...,
        [0.9848, 0.9506, 1.0076,  ..., 0.9868, 1.0071, 1.0201],
        [0.9949, 0.9617, 1.0102,  ..., 0.9965, 1.0094, 1.0446],
        [1.0017, 0.9692, 1.0119,  ..., 1.0029, 1.0108, 1.0616]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.8987],
         [21.2047],
         [14.0540],
         ...,
         [13.7878],
         [13.9920],
         [14.1430]],
        [[12.1791],
         [15.1877],
         [11.4896],
         ...,
         [12.0751],
         [11.1817],
         [10.7128]],
        [[11.9816],
         [14.5730],
         [11.2066],
         ...,
         [11.8784],
         [10.8756],
         [10.3507]],
        ...,
        [[11.7409],
         [13.8446],
         [10.8650],
         ...,
         [11.6388],
         [10.5073],
         [ 9.9182]],
        [[12.3643],
         [15.7782],
         [11.7572],
         ...,
         [12.2595],
         [11.4719],
         [11.0583]],
        [[12.7831],
         [17.1636],
         [12.3700],
         ...,
         [12.6766],
         [12.1393],
         [11.8608]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9303, 1.0491, 0.9328,  ..., 0.9285, 0.9318, 0.9342],
        [0.9023, 0.9512, 0.8911,  ..., 0.9006, 0.8861, 0.8785],
        [0.8991, 0.9412, 0.8865,  ..., 0.8974, 0.8811, 0.8726],
        ...,
        [0.8952, 0.9294, 0.8809,  ..., 0.8935, 0.8751, 0.8655],
        [0.9053, 0.9608, 0.8954,  ..., 0.9036, 0.8908, 0.8841],
        [0.9121, 0.9834, 0.9054,  ..., 0.9104, 0.9017, 0.8971]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.9023],
         [26.2165],
         [11.3479],
         ...,
         [12.6562],
         [12.1939],
         [11.0873]],
        [[ 9.3119],
         [23.9794],
         [10.4029],
         ...,
         [ 9.4172],
         [ 9.6603],
         [10.8561]],
        [[ 8.9435],
         [23.7161],
         [10.2916],
         ...,
         [ 9.0788],
         [ 9.3857],
         [10.8279]],
        ...,
        [[ 8.5064],
         [23.3933],
         [10.1550],
         ...,
         [ 8.6757],
         [ 9.0558],
         [10.7929]],
        [[ 9.6655],
         [24.2251],
         [10.5068],
         ...,
         [ 9.7408],
         [ 9.9209],
         [10.8823]],
        [[10.4940],
         [24.7762],
         [10.7397],
         ...,
         [10.4947],
         [10.5211],
         [10.9403]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1538, 0.9573,  ..., 0.9746, 0.9685, 0.9538],
        [0.9304, 1.1242, 0.9448,  ..., 0.9318, 0.9350, 0.9508],
        [0.9255, 1.1207, 0.9433,  ..., 0.9273, 0.9313, 0.9504],
        ...,
        [0.9197, 1.1165, 0.9415,  ..., 0.9220, 0.9270, 0.9499],
        [0.9350, 1.1275, 0.9462,  ..., 0.9360, 0.9384, 0.9511],
        [0.9460, 1.1347, 0.9492,  ..., 0.9460, 0.9463, 0.9519]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8797],
         [10.4135],
         [11.7458],
         ...,
         [11.8707],
         [11.6264],
         [15.4442]],
        [[10.5937],
         [ 9.0148],
         [11.4077],
         ...,
         [10.6759],
         [11.3564],
         [12.4983]],
        [[10.4445],
         [ 8.8552],
         [11.3665],
         ...,
         [10.5366],
         [11.3234],
         [12.1751]],
        ...,
        [[10.2622],
         [ 8.6611],
         [11.3156],
         ...,
         [10.3662],
         [11.2826],
         [11.7856]],
        [[10.7333],
         [ 9.1646],
         [11.4458],
         ...,
         [10.8061],
         [11.3869],
         [12.8043]],
        [[11.0480],
         [ 9.5041],
         [11.5305],
         ...,
         [11.0991],
         [11.4546],
         [13.5063]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0211, 0.9897, 1.0182,  ..., 1.0209, 1.0157, 1.0975],
        [0.9935, 0.9597, 1.0110,  ..., 0.9953, 1.0099, 1.0344],
        [0.9903, 0.9562, 1.0101,  ..., 0.9923, 1.0092, 1.0274],
        ...,
        [0.9864, 0.9521, 1.0090,  ..., 0.9886, 1.0083, 1.0191],
        [0.9965, 0.9629, 1.0118,  ..., 0.9981, 1.0105, 1.0409],
        [1.0033, 0.9702, 1.0136,  ..., 1.0044, 1.0120, 1.0560]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.8889],
         [21.2122],
         [13.9130],
         ...,
         [13.7651],
         [13.9453],
         [13.9919]],
        [[12.2526],
         [15.1794],
         [11.4805],
         ...,
         [12.1152],
         [11.2435],
         [10.9539]],
        [[12.0639],
         [14.5635],
         [11.2106],
         ...,
         [11.9252],
         [10.9477],
         [10.6270]],
        ...,
        [[11.8337],
         [13.8336],
         [10.8844],
         ...,
         [11.6935],
         [10.5914],
         [10.2347]],
        [[12.4294],
         [15.7712],
         [11.7354],
         ...,
         [12.2932],
         [11.5237],
         [11.2647]],
        [[12.8286],
         [17.1599],
         [12.3182],
         ...,
         [12.6955],
         [12.1668],
         [11.9820]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9331, 1.0522, 0.9335,  ..., 0.9311, 0.9340, 0.9348],
        [0.9065, 0.9541, 0.8940,  ..., 0.9043, 0.8901, 0.8854],
        [0.9034, 0.9441, 0.8896,  ..., 0.9012, 0.8853, 0.8801],
        ...,
        [0.8997, 0.9322, 0.8843,  ..., 0.8974, 0.8795, 0.8737],
        [0.9094, 0.9637, 0.8981,  ..., 0.9072, 0.8947, 0.8904],
        [0.9159, 0.9863, 0.9076,  ..., 0.9137, 0.9051, 0.9021]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7186],
         [27.0005],
         [12.4467],
         ...,
         [12.2978],
         [11.3643],
         [11.3460]],
        [[ 9.3892],
         [25.3295],
         [ 9.5189],
         ...,
         [ 9.5993],
         [10.3816],
         [11.0590]],
        [[ 9.0430],
         [25.1299],
         [ 9.2081],
         ...,
         [ 9.3094],
         [10.2660],
         [11.0239]],
        ...,
        [[ 8.6309],
         [24.8845],
         [ 8.8364],
         ...,
         [ 8.9617],
         [10.1244],
         [10.9806]],
        [[ 9.7206],
         [25.5151],
         [ 9.8151],
         ...,
         [ 9.8750],
         [10.4895],
         [11.0914]],
        [[10.4938],
         [25.9295],
         [10.5019],
         ...,
         [10.5116],
         [10.7315],
         [11.1633]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9779, 1.1667, 0.9743,  ..., 0.9724, 0.9600, 0.9598],
        [0.9339, 1.1446, 0.9356,  ..., 0.9367, 0.9470, 0.9560],
        [0.9294, 1.1420, 0.9315,  ..., 0.9329, 0.9455, 0.9555],
        ...,
        [0.9239, 1.1387, 0.9266,  ..., 0.9283, 0.9436, 0.9550],
        [0.9383, 1.1470, 0.9396,  ..., 0.9404, 0.9485, 0.9564],
        [0.9485, 1.1525, 0.9486,  ..., 0.9488, 0.9517, 0.9574]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8848],
         [10.5733],
         [11.5377],
         ...,
         [11.8828],
         [11.5373],
         [14.0306]],
        [[10.6384],
         [ 9.0209],
         [11.2252],
         ...,
         [10.6462],
         [11.2306],
         [12.0634]],
        [[10.4935],
         [ 8.8454],
         [11.1871],
         ...,
         [10.5024],
         [11.1932],
         [11.8399]],
        ...,
        [[10.3164],
         [ 8.6322],
         [11.1400],
         ...,
         [10.3265],
         [11.1470],
         [11.5682]],
        [[10.7740],
         [ 9.1861],
         [11.2605],
         ...,
         [10.7808],
         [11.2653],
         [12.2734]],
        [[11.0793],
         [ 9.5614],
         [11.3387],
         ...,
         [11.0837],
         [11.3421],
         [12.7501]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0212, 0.9931, 1.0138,  ..., 1.0212, 1.0138, 1.0672],
        [0.9945, 0.9598, 1.0071,  ..., 0.9946, 1.0072, 1.0250],
        [0.9914, 0.9560, 1.0062,  ..., 0.9916, 1.0064, 1.0202],
        ...,
        [0.9876, 0.9515, 1.0052,  ..., 0.9878, 1.0054, 1.0144],
        [0.9974, 0.9633, 1.0078,  ..., 0.9975, 1.0079, 1.0295],
        [1.0039, 0.9714, 1.0095,  ..., 1.0040, 1.0096, 1.0398]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.1666],
         [21.5611],
         [13.9386],
         ...,
         [14.0368],
         [13.7150],
         [13.7091]],
        [[12.8028],
         [14.6732],
         [11.5127],
         ...,
         [12.6594],
         [11.6182],
         [12.5912]],
        [[12.6434],
         [13.9905],
         [11.2434],
         ...,
         [12.4986],
         [11.3820],
         [12.4593]],
        ...,
        [[12.4483],
         [13.1872],
         [10.9179],
         ...,
         [12.3018],
         [11.0955],
         [12.2975]],
        [[12.9518],
         [15.3330],
         [11.7671],
         ...,
         [12.8097],
         [11.8406],
         [12.7142]],
        [[13.2867],
         [16.8959],
         [12.3484],
         ...,
         [13.1478],
         [12.3466],
         [12.9898]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.8885, 1.0088, 0.8848,  ..., 0.8864, 0.8811, 0.8810],
        [0.8663, 0.8967, 0.8453,  ..., 0.8640, 0.8470, 0.8629],
        [0.8637, 0.8856, 0.8409,  ..., 0.8614, 0.8432, 0.8607],
        ...,
        [0.8605, 0.8726, 0.8356,  ..., 0.8582, 0.8385, 0.8581],
        [0.8687, 0.9075, 0.8495,  ..., 0.8664, 0.8507, 0.8649],
        [0.8742, 0.9329, 0.8589,  ..., 0.8719, 0.8589, 0.8693]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.3984],
         [27.0798],
         [11.9252],
         ...,
         [12.8445],
         [11.4320],
         [11.8655]],
        [[ 9.5442],
         [25.4091],
         [ 9.8401],
         ...,
         [ 9.3354],
         [10.2983],
         [11.2063]],
        [[ 9.2400],
         [25.2096],
         [ 9.6087],
         ...,
         [ 8.9738],
         [10.1660],
         [11.1273]],
        ...,
        [[ 8.8759],
         [24.9641],
         [ 9.3291],
         ...,
         [ 8.5444],
         [10.0042],
         [11.0300]],
        [[ 9.8339],
         [25.5947],
         [10.0586],
         ...,
         [ 9.6821],
         [10.4220],
         [11.2797]],
        [[10.5046],
         [26.0090],
         [10.5581],
         ...,
         [10.4935],
         [10.7001],
         [11.4435]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9719, 1.1660, 0.9657,  ..., 0.9778, 0.9592, 0.9649],
        [0.9342, 1.1439, 0.9381,  ..., 0.9315, 0.9442, 0.9562],
        [0.9302, 1.1412, 0.9351,  ..., 0.9267, 0.9424, 0.9551],
        ...,
        [0.9254, 1.1380, 0.9314,  ..., 0.9210, 0.9403, 0.9539],
        [0.9380, 1.1463, 0.9410,  ..., 0.9360, 0.9458, 0.9572],
        [0.9469, 1.1518, 0.9476,  ..., 0.9468, 0.9495, 0.9593]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8713],
         [10.3526],
         [11.6467],
         ...,
         [11.8860],
         [12.2000],
         [11.5447]],
        [[10.5840],
         [ 9.0230],
         [10.9971],
         ...,
         [10.6327],
         [11.5444],
         [11.2793]],
        [[10.4347],
         [ 8.8707],
         [10.9193],
         ...,
         [10.4870],
         [11.4658],
         [11.2469]],
        ...,
        [[10.2523],
         [ 8.6853],
         [10.8234],
         ...,
         [10.3090],
         [11.3689],
         [11.2067]],
        [[10.7238],
         [ 9.1658],
         [11.0695],
         ...,
         [10.7690],
         [11.6175],
         [11.3093]],
        [[11.0387],
         [ 9.4892],
         [11.2309],
         ...,
         [11.0759],
         [11.7805],
         [11.3758]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0239, 0.9913, 1.0191,  ..., 1.0242, 1.0310, 1.0169],
        [0.9963, 0.9628, 1.0052,  ..., 0.9973, 1.0169, 1.0112],
        [0.9931, 0.9596, 1.0035,  ..., 0.9942, 1.0152, 1.0105],
        ...,
        [0.9892, 0.9556, 1.0014,  ..., 0.9904, 1.0131, 1.0097],
        [0.9993, 0.9659, 1.0067,  ..., 1.0003, 1.0185, 1.0119],
        [1.0061, 0.9728, 1.0102,  ..., 1.0068, 1.0220, 1.0133]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.9768],
         [21.5545],
         [13.7372],
         ...,
         [13.7955],
         [13.8111],
         [13.9769]],
        [[12.5413],
         [14.8119],
         [11.4670],
         ...,
         [12.3378],
         [11.4054],
         [11.5484]],
        [[12.3742],
         [14.1398],
         [11.2135],
         ...,
         [12.1684],
         [11.1384],
         [11.2788]],
        ...,
        [[12.1699],
         [13.3478],
         [10.9066],
         ...,
         [11.9614],
         [10.8156],
         [10.9528]],
        [[12.6976],
         [15.4608],
         [11.7062],
         ...,
         [12.4963],
         [11.6576],
         [11.8031]],
        [[13.0494],
         [16.9950],
         [12.2518],
         ...,
         [12.8532],
         [12.2341],
         [12.3851]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9545, 1.0778, 0.9506,  ..., 0.9516, 0.9518, 0.9545],
        [0.9312, 0.9681, 0.9137,  ..., 0.9278, 0.9127, 0.9150],
        [0.9284, 0.9572, 0.9096,  ..., 0.9251, 0.9083, 0.9106],
        ...,
        [0.9251, 0.9443, 0.9046,  ..., 0.9217, 0.9031, 0.9053],
        [0.9337, 0.9786, 0.9176,  ..., 0.9304, 0.9168, 0.9191],
        [0.9394, 1.0036, 0.9264,  ..., 0.9362, 0.9262, 0.9286]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7859],
         [26.9324],
         [12.0633],
         ...,
         [12.6925],
         [11.5572],
         [11.5285]],
        [[ 9.3600],
         [25.2018],
         [ 9.7432],
         ...,
         [ 9.4007],
         [10.1603],
         [11.1130]],
        [[ 9.0055],
         [24.9955],
         [ 9.4890],
         ...,
         [ 9.0578],
         [ 9.9996],
         [11.0626]],
        ...,
        [[ 8.5841],
         [24.7417],
         [ 9.1826],
         ...,
         [ 8.6494],
         [ 9.8036],
         [11.0004]],
        [[ 9.6996],
         [25.3938],
         [ 9.9840],
         ...,
         [ 9.7289],
         [10.3110],
         [11.1597]],
        [[10.4934],
         [25.8227],
         [10.5366],
         ...,
         [10.4941],
         [10.6515],
         [11.2635]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9612],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9222, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9480,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5482],
         ...,
         [11.8868],
         [11.7139],
         [12.2597]],
        [[10.5972],
         [ 9.0169],
         [11.1787],
         ...,
         [10.6139],
         [11.3958],
         [11.5611]],
        [[10.4481],
         [ 8.8644],
         [11.1337],
         ...,
         [10.4661],
         [11.3570],
         [11.4774]],
        ...,
        [[10.2661],
         [ 8.6787],
         [11.0782],
         ...,
         [10.2855],
         [11.3091],
         [11.3744]],
        [[10.7367],
         [ 9.1601],
         [11.2203],
         ...,
         [10.7522],
         [11.4317],
         [11.6388]],
        [[11.0510],
         [ 9.4840],
         [11.3127],
         ...,
         [11.0637],
         [11.5114],
         [11.8124]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0135, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9725, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0196],
         [21.5322],
         [13.7152],
         ...,
         [13.8493],
         [13.8480],
         [14.0226]],
        [[12.4766],
         [14.8624],
         [11.6401],
         ...,
         [12.4263],
         [11.3819],
         [11.2263]],
        [[12.2977],
         [14.1958],
         [11.4061],
         ...,
         [12.2606],
         [11.1089],
         [10.9215]],
        ...,
        [[12.0794],
         [13.4098],
         [11.1222],
         ...,
         [12.0581],
         [10.7791],
         [10.5546]],
        [[12.6439],
         [15.5056],
         [11.8604],
         ...,
         [12.5812],
         [11.6399],
         [11.5154]],
        [[13.0213],
         [17.0252],
         [12.3614],
         ...,
         [12.9300],
         [12.2300],
         [12.1797]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9450,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9045],
        [0.9220, 0.9528, 0.9075,  ..., 0.9214, 0.9026, 0.8996],
        ...,
        [0.9184, 0.9400, 0.9028,  ..., 0.9181, 0.8973, 0.8936],
        [0.9276, 0.9741, 0.9148,  ..., 0.9266, 0.9113, 0.9092],
        [0.9337, 0.9989, 0.9230,  ..., 0.9322, 0.9209, 0.9200]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7597],
         [26.9116],
         [12.1024],
         ...,
         [12.6763],
         [11.5881],
         [11.4184]],
        [[ 9.3712],
         [25.1725],
         [ 9.7176],
         ...,
         [ 9.4081],
         [10.1290],
         [11.0810]],
        [[ 9.0199],
         [24.9652],
         [ 9.4571],
         ...,
         [ 9.0671],
         [ 9.9616],
         [11.0399]],
        ...,
        [[ 8.6021],
         [24.7103],
         [ 9.1435],
         ...,
         [ 8.6611],
         [ 9.7578],
         [10.9891]],
        [[ 9.7077],
         [25.3655],
         [ 9.9644],
         ...,
         [ 9.7342],
         [10.2860],
         [11.1190]],
        [[10.4935],
         [25.7964],
         [10.5315],
         ...,
         [10.4944],
         [10.6411],
         [11.2034]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9779, 1.1649, 0.9692,  ..., 0.9768, 0.9624, 0.9601],
        [0.9331, 1.1419, 0.9377,  ..., 0.9336, 0.9431, 0.9557],
        [0.9285, 1.1392, 0.9342,  ..., 0.9291, 0.9409, 0.9551],
        ...,
        [0.9229, 1.1358, 0.9301,  ..., 0.9237, 0.9382, 0.9545],
        [0.9375, 1.1445, 0.9409,  ..., 0.9379, 0.9452, 0.9562],
        [0.9479, 1.1502, 0.9484,  ..., 0.9479, 0.9499, 0.9573]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8788],
         [10.3447],
         [11.5666],
         ...,
         [11.8871],
         [11.7553],
         [12.4138]],
        [[10.5924],
         [ 9.0168],
         [11.1334],
         ...,
         [10.6204],
         [11.4111],
         [11.6036]],
        [[10.4432],
         [ 8.8648],
         [11.0809],
         ...,
         [10.4733],
         [11.3692],
         [11.5071]],
        ...,
        [[10.2609],
         [ 8.6796],
         [11.0161],
         ...,
         [10.2935],
         [11.3174],
         [11.3884]],
        [[10.7321],
         [ 9.1595],
         [11.1821],
         ...,
         [10.7580],
         [11.4499],
         [11.6935]],
        [[11.0469],
         [ 9.4824],
         [11.2903],
         ...,
         [11.0681],
         [11.5361],
         [11.8942]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0173,  ..., 1.0241, 1.0213, 1.0354],
        [0.9964, 0.9626, 1.0080,  ..., 0.9970, 1.0139, 1.0181],
        [0.9932, 0.9593, 1.0069,  ..., 0.9938, 1.0130, 1.0160],
        ...,
        [0.9893, 0.9554, 1.0055,  ..., 0.9900, 1.0119, 1.0134],
        [0.9994, 0.9656, 1.0090,  ..., 0.9999, 1.0148, 1.0200],
        [1.0061, 0.9726, 1.0113,  ..., 1.0066, 1.0166, 1.0243]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0278],
         [21.5368],
         [13.7014],
         ...,
         [13.8807],
         [13.8351],
         [13.9867]],
        [[12.5156],
         [14.8729],
         [11.7000],
         ...,
         [12.4552],
         [11.4335],
         [11.2614]],
        [[12.3401],
         [14.2067],
         [11.4735],
         ...,
         [12.2893],
         [11.1668],
         [10.9633]],
        ...,
        [[12.1257],
         [13.4211],
         [11.1985],
         ...,
         [12.0864],
         [10.8444],
         [10.6042]],
        [[12.6798],
         [15.5157],
         [11.9131],
         ...,
         [12.6105],
         [11.6854],
         [11.5438]],
        [[13.0499],
         [17.0341],
         [12.3971],
         ...,
         [12.9598],
         [12.2610],
         [12.1923]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9537, 1.0758, 0.9484,  ..., 0.9513, 0.9505, 0.9530],
        [0.9291, 0.9674, 0.9158,  ..., 0.9281, 0.9115, 0.9087],
        [0.9262, 0.9566, 0.9121,  ..., 0.9254, 0.9071, 0.9038],
        ...,
        [0.9227, 0.9438, 0.9076,  ..., 0.9221, 0.9019, 0.8980],
        [0.9317, 0.9779, 0.9193,  ..., 0.9306, 0.9156, 0.9133],
        [0.9378, 1.0026, 0.9271,  ..., 0.9363, 0.9249, 0.9238]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7813],
         [26.9288],
         [12.0701],
         ...,
         [12.6897],
         [11.5626],
         [11.5090]],
        [[ 9.3619],
         [25.1967],
         [ 9.7387],
         ...,
         [ 9.4020],
         [10.1548],
         [11.1074]],
        [[ 9.0080],
         [24.9902],
         [ 9.4834],
         ...,
         [ 9.0594],
         [ 9.9929],
         [11.0587]],
        ...,
        [[ 8.5872],
         [24.7362],
         [ 9.1758],
         ...,
         [ 8.6515],
         [ 9.7956],
         [10.9985]],
        [[ 9.7010],
         [25.3889],
         [ 9.9806],
         ...,
         [ 9.7298],
         [10.3066],
         [11.1526]],
        [[10.4934],
         [25.8182],
         [10.5356],
         ...,
         [10.4942],
         [10.6496],
         [11.2529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1648, 0.9684,  ..., 0.9766, 0.9617, 0.9610],
        [0.9326, 1.1419, 0.9376,  ..., 0.9331, 0.9431, 0.9557],
        [0.9279, 1.1391, 0.9342,  ..., 0.9286, 0.9409, 0.9550],
        ...,
        [0.9224, 1.1358, 0.9301,  ..., 0.9232, 0.9383, 0.9542],
        [0.9371, 1.1444, 0.9408,  ..., 0.9375, 0.9451, 0.9563],
        [0.9476, 1.1501, 0.9481,  ..., 0.9476, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8813],
         [10.3484],
         [11.5510],
         ...,
         [11.8869],
         [11.7209],
         [12.2861]],
        [[10.5963],
         [ 9.0169],
         [11.1707],
         ...,
         [10.6150],
         [11.3985],
         [11.5684]],
        [[10.4473],
         [ 8.8645],
         [11.1245],
         ...,
         [10.4673],
         [11.3592],
         [11.4825]],
        ...,
        [[10.2651],
         [ 8.6789],
         [11.0674],
         ...,
         [10.2869],
         [11.3106],
         [11.3768]],
        [[10.7359],
         [ 9.1600],
         [11.2135],
         ...,
         [10.7532],
         [11.4349],
         [11.6482]],
        [[11.0503],
         [ 9.4837],
         [11.3086],
         ...,
         [11.0645],
         [11.5156],
         [11.8264]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0169,  ..., 1.0241, 1.0205, 1.0326],
        [0.9964, 0.9625, 1.0087,  ..., 0.9968, 1.0136, 1.0173],
        [0.9932, 0.9593, 1.0077,  ..., 0.9936, 1.0128, 1.0154],
        ...,
        [0.9893, 0.9553, 1.0065,  ..., 0.9898, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0096,  ..., 0.9998, 1.0144, 1.0190],
        [1.0061, 0.9726, 1.0117,  ..., 1.0065, 1.0161, 1.0228]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0210],
         [21.5330],
         [13.7127],
         ...,
         [13.8546],
         [13.8457],
         [14.0162]],
        [[12.4833],
         [14.8643],
         [11.6505],
         ...,
         [12.4313],
         [11.3908],
         [11.2324]],
        [[12.3051],
         [14.1977],
         [11.4178],
         ...,
         [12.2657],
         [11.1189],
         [10.9287]],
        ...,
        [[12.0874],
         [13.4118],
         [11.1355],
         ...,
         [12.0631],
         [10.7905],
         [10.5632]],
        [[12.6502],
         [15.5074],
         [11.8695],
         ...,
         [12.5863],
         [11.6478],
         [11.5203]],
        [[13.0262],
         [17.0267],
         [12.3675],
         ...,
         [12.9351],
         [12.2354],
         [12.1818]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9506, 1.0728, 0.9456,  ..., 0.9479, 0.9478, 0.9505],
        [0.9256, 0.9643, 0.9120,  ..., 0.9248, 0.9078, 0.9053],
        [0.9227, 0.9535, 0.9083,  ..., 0.9221, 0.9034, 0.9003],
        ...,
        [0.9192, 0.9407, 0.9037,  ..., 0.9188, 0.8981, 0.8944],
        [0.9283, 0.9748, 0.9156,  ..., 0.9273, 0.9120, 0.9099],
        [0.9344, 0.9995, 0.9237,  ..., 0.9329, 0.9216, 0.9207]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7850],
         [26.9317],
         [12.0647],
         ...,
         [12.6920],
         [11.5583],
         [11.5245]],
        [[ 9.3604],
         [25.2008],
         [ 9.7423],
         ...,
         [ 9.4010],
         [10.1592],
         [11.1119]],
        [[ 9.0060],
         [24.9944],
         [ 9.4878],
         ...,
         [ 9.0581],
         [ 9.9982],
         [11.0618]],
        ...,
        [[ 8.5847],
         [24.7406],
         [ 9.1812],
         ...,
         [ 8.6499],
         [ 9.8019],
         [11.0000]],
        [[ 9.6999],
         [25.3928],
         [ 9.9833],
         ...,
         [ 9.7291],
         [10.3101],
         [11.1583]],
        [[10.4934],
         [25.8218],
         [10.5364],
         ...,
         [10.4941],
         [10.6511],
         [11.2613]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9683,  ..., 0.9765, 0.9616, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9331, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9409, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9408,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8816],
         [10.3491],
         [11.5488],
         ...,
         [11.8868],
         [11.7153],
         [12.2651]],
        [[10.5970],
         [ 9.0169],
         [11.1770],
         ...,
         [10.6141],
         [11.3963],
         [11.5626]],
        [[10.4480],
         [ 8.8644],
         [11.1318],
         ...,
         [10.4664],
         [11.3575],
         [11.4784]],
        ...,
        [[10.2659],
         [ 8.6787],
         [11.0760],
         ...,
         [10.2858],
         [11.3094],
         [11.3749]],
        [[10.7365],
         [ 9.1600],
         [11.2189],
         ...,
         [10.7524],
         [11.4324],
         [11.6408]],
        [[11.0508],
         [ 9.4839],
         [11.3119],
         ...,
         [11.0639],
         [11.5122],
         [11.8152]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0322],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9998, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0117,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0199],
         [21.5323],
         [13.7147],
         ...,
         [13.8504],
         [13.8475],
         [14.0213]],
        [[12.4779],
         [14.8628],
         [11.6422],
         ...,
         [12.4273],
         [11.3837],
         [11.2276]],
        [[12.2993],
         [14.1962],
         [11.4085],
         ...,
         [12.2617],
         [11.1110],
         [10.9230]],
        ...,
        [[12.0810],
         [13.4102],
         [11.1249],
         ...,
         [12.0591],
         [10.7815],
         [10.5564]],
        [[12.6452],
         [15.5060],
         [11.8623],
         ...,
         [12.5823],
         [11.6415],
         [11.5164]],
        [[13.0223],
         [17.0255],
         [12.3626],
         ...,
         [12.9310],
         [12.2311],
         [12.1801]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9501, 1.0723, 0.9451,  ..., 0.9473, 0.9473, 0.9501],
        [0.9250, 0.9638, 0.9114,  ..., 0.9242, 0.9072, 0.9047],
        [0.9221, 0.9530, 0.9076,  ..., 0.9215, 0.9028, 0.8997],
        ...,
        [0.9186, 0.9402, 0.9030,  ..., 0.9182, 0.8974, 0.8938],
        [0.9277, 0.9743, 0.9150,  ..., 0.9267, 0.9114, 0.9094],
        [0.9339, 0.9990, 0.9231,  ..., 0.9324, 0.9210, 0.9202]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7857],
         [26.9323],
         [12.0636],
         ...,
         [12.6924],
         [11.5574],
         [11.5276]],
        [[ 9.3601],
         [25.2016],
         [ 9.7430],
         ...,
         [ 9.4008],
         [10.1601],
         [11.1128]],
        [[ 9.0056],
         [24.9952],
         [ 9.4887],
         ...,
         [ 9.0579],
         [ 9.9993],
         [11.0624]],
        ...,
        [[ 8.5842],
         [24.7415],
         [ 9.1823],
         ...,
         [ 8.6495],
         [ 9.8032],
         [11.0003]],
        [[ 9.6997],
         [25.3936],
         [ 9.9839],
         ...,
         [ 9.7289],
         [10.3108],
         [11.1594]],
        [[10.4934],
         [25.8225],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2630]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7142],
         [12.2609]],
        [[10.5971],
         [ 9.0169],
         [11.1783],
         ...,
         [10.6139],
         [11.3959],
         [11.5614]],
        [[10.4481],
         [ 8.8644],
         [11.1333],
         ...,
         [10.4662],
         [11.3571],
         [11.4776]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0778],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2200],
         ...,
         [10.7522],
         [11.4318],
         [11.6393]],
        [[11.0509],
         [ 9.4840],
         [11.3125],
         ...,
         [11.0637],
         [11.5115],
         [11.8130]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0135, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7151],
         ...,
         [13.8495],
         [13.8479],
         [14.0223]],
        [[12.4768],
         [14.8625],
         [11.6406],
         ...,
         [12.4265],
         [11.3823],
         [11.2266]],
        [[12.2981],
         [14.1959],
         [11.4066],
         ...,
         [12.2608],
         [11.1093],
         [10.9218]],
        ...,
        [[12.0797],
         [13.4099],
         [11.1228],
         ...,
         [12.0583],
         [10.7796],
         [10.5550]],
        [[12.6442],
         [15.5057],
         [11.8608],
         ...,
         [12.5814],
         [11.6402],
         [11.5156]],
        [[13.0215],
         [17.0253],
         [12.3616],
         ...,
         [12.9302],
         [12.2303],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9450,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9184, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8936],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7852],
         [26.9319],
         [12.0643],
         ...,
         [12.6921],
         [11.5580],
         [11.5255]],
        [[ 9.3603],
         [25.2010],
         [ 9.7426],
         ...,
         [ 9.4009],
         [10.1595],
         [11.1122]],
        [[ 9.0059],
         [24.9947],
         [ 9.4881],
         ...,
         [ 9.0580],
         [ 9.9986],
         [11.0620]],
        ...,
        [[ 8.5846],
         [24.7409],
         [ 9.1816],
         ...,
         [ 8.6498],
         [ 9.8024],
         [11.0001]],
        [[ 9.6999],
         [25.3931],
         [ 9.9835],
         ...,
         [ 9.7290],
         [10.3103],
         [11.1586]],
        [[10.4934],
         [25.8221],
         [10.5364],
         ...,
         [10.4941],
         [10.6512],
         [11.2619]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9683,  ..., 0.9765, 0.9616, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9331, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9408,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3491],
         [11.5486],
         ...,
         [11.8868],
         [11.7150],
         [12.2637]],
        [[10.5971],
         [ 9.0169],
         [11.1775],
         ...,
         [10.6140],
         [11.3962],
         [11.5622]],
        [[10.4480],
         [ 8.8644],
         [11.1323],
         ...,
         [10.4663],
         [11.3574],
         [11.4782]],
        ...,
        [[10.2659],
         [ 8.6787],
         [11.0766],
         ...,
         [10.2857],
         [11.3093],
         [11.3747]],
        [[10.7365],
         [ 9.1600],
         [11.2193],
         ...,
         [10.7523],
         [11.4322],
         [11.6403]],
        [[11.0509],
         [ 9.4840],
         [11.3121],
         ...,
         [11.0638],
         [11.5120],
         [11.8145]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0322],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0199],
         [21.5323],
         [13.7148],
         ...,
         [13.8501],
         [13.8476],
         [14.0216]],
        [[12.4776],
         [14.8627],
         [11.6417],
         ...,
         [12.4270],
         [11.3832],
         [11.2273]],
        [[12.2989],
         [14.1961],
         [11.4079],
         ...,
         [12.2614],
         [11.1104],
         [10.9226]],
        ...,
        [[12.0806],
         [13.4101],
         [11.1242],
         ...,
         [12.0588],
         [10.7808],
         [10.5559]],
        [[12.6449],
         [15.5059],
         [11.8618],
         ...,
         [12.5820],
         [11.6411],
         [11.5161]],
        [[13.0220],
         [17.0254],
         [12.3623],
         ...,
         [12.9307],
         [12.2308],
         [12.1800]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9501, 1.0723, 0.9451,  ..., 0.9473, 0.9473, 0.9501],
        [0.9250, 0.9638, 0.9114,  ..., 0.9242, 0.9072, 0.9046],
        [0.9221, 0.9529, 0.9076,  ..., 0.9215, 0.9027, 0.8997],
        ...,
        [0.9185, 0.9401, 0.9030,  ..., 0.9182, 0.8974, 0.8937],
        [0.9277, 0.9742, 0.9150,  ..., 0.9267, 0.9114, 0.9093],
        [0.9338, 0.9989, 0.9231,  ..., 0.9323, 0.9210, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7854],
         [26.9320],
         [12.0642],
         ...,
         [12.6922],
         [11.5579],
         [11.5261]],
        [[ 9.3602],
         [25.2012],
         [ 9.7427],
         ...,
         [ 9.4009],
         [10.1596],
         [11.1123]],
        [[ 9.0058],
         [24.9948],
         [ 9.4883],
         ...,
         [ 9.0580],
         [ 9.9988],
         [11.0621]],
        ...,
        [[ 8.5845],
         [24.7410],
         [ 9.1818],
         ...,
         [ 8.6497],
         [ 9.8026],
         [11.0002]],
        [[ 9.6998],
         [25.3932],
         [ 9.9836],
         ...,
         [ 9.7290],
         [10.3105],
         [11.1588]],
        [[10.4934],
         [25.8222],
         [10.5365],
         ...,
         [10.4941],
         [10.6512],
         [11.2622]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9616, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9408,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3491],
         [11.5486],
         ...,
         [11.8868],
         [11.7148],
         [12.2629]],
        [[10.5971],
         [ 9.0169],
         [11.1777],
         ...,
         [10.6140],
         [11.3961],
         [11.5619]],
        [[10.4480],
         [ 8.8644],
         [11.1326],
         ...,
         [10.4663],
         [11.3573],
         [11.4780]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0769],
         ...,
         [10.2857],
         [11.3093],
         [11.3747]],
        [[10.7366],
         [ 9.1600],
         [11.2195],
         ...,
         [10.7523],
         [11.4321],
         [11.6400]],
        [[11.0509],
         [ 9.4840],
         [11.3122],
         ...,
         [11.0638],
         [11.5119],
         [11.8141]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0198],
         [21.5323],
         [13.7149],
         ...,
         [13.8499],
         [13.8477],
         [14.0218]],
        [[12.4774],
         [14.8626],
         [11.6414],
         ...,
         [12.4269],
         [11.3830],
         [11.2271]],
        [[12.2986],
         [14.1960],
         [11.4075],
         ...,
         [12.2612],
         [11.1101],
         [10.9224]],
        ...,
        [[12.0804],
         [13.4101],
         [11.1238],
         ...,
         [12.0587],
         [10.7805],
         [10.5556]],
        [[12.6447],
         [15.5059],
         [11.8615],
         ...,
         [12.5818],
         [11.6408],
         [11.5159]],
        [[13.0219],
         [17.0254],
         [12.3621],
         ...,
         [12.9306],
         [12.2307],
         [12.1799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9473, 0.9472, 0.9501],
        [0.9250, 0.9638, 0.9114,  ..., 0.9241, 0.9072, 0.9046],
        [0.9221, 0.9529, 0.9076,  ..., 0.9214, 0.9027, 0.8997],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8974, 0.8937],
        [0.9277, 0.9742, 0.9149,  ..., 0.9267, 0.9114, 0.9093],
        [0.9338, 0.9989, 0.9231,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0639],
         ...,
         [12.6923],
         [11.5576],
         [11.5270]],
        [[ 9.3601],
         [25.2014],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0057],
         [24.9951],
         [ 9.4885],
         ...,
         [ 9.0579],
         [ 9.9990],
         [11.0623]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1821],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3934],
         [ 9.9837],
         ...,
         [ 9.7290],
         [10.3106],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6513],
         [11.2627]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5485],
         ...,
         [11.8868],
         [11.7144],
         [12.2618]],
        [[10.5971],
         [ 9.0169],
         [11.1780],
         ...,
         [10.6140],
         [11.3960],
         [11.5616]],
        [[10.4481],
         [ 8.8644],
         [11.1330],
         ...,
         [10.4662],
         [11.3572],
         [11.4778]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0774],
         ...,
         [10.2856],
         [11.3092],
         [11.3746]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4320],
         [11.6396]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5117],
         [11.8134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0198],
         [21.5322],
         [13.7150],
         ...,
         [13.8497],
         [13.8478],
         [14.0221]],
        [[12.4771],
         [14.8626],
         [11.6409],
         ...,
         [12.4267],
         [11.3826],
         [11.2268]],
        [[12.2983],
         [14.1960],
         [11.4070],
         ...,
         [12.2610],
         [11.1097],
         [10.9221]],
        ...,
        [[12.0800],
         [13.4100],
         [11.1232],
         ...,
         [12.0585],
         [10.7800],
         [10.5553]],
        [[12.6444],
         [15.5058],
         [11.8611],
         ...,
         [12.5816],
         [11.6405],
         [11.5157]],
        [[13.0217],
         [17.0253],
         [12.3618],
         ...,
         [12.9304],
         [12.2305],
         [12.1799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9473, 0.9472, 0.9501],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9231,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6923],
         [11.5576],
         [11.5271]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0057],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0623]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6513],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5616]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5117],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8626],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2268]],
        [[12.2983],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6444],
         [15.5058],
         [11.8610],
         ...,
         [12.5816],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9501],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7167],
         [26.8060],
         [12.1034],
         ...,
         [12.6931],
         [11.6942],
         [11.1553]],
        [[ 9.3900],
         [25.0190],
         [ 9.7169],
         ...,
         [ 9.4005],
         [10.0284],
         [10.9878]],
        [[ 9.0440],
         [24.8062],
         [ 9.4563],
         ...,
         [ 9.0575],
         [ 9.8394],
         [10.9673]],
        ...,
        [[ 8.6322],
         [24.5446],
         [ 9.1426],
         ...,
         [ 8.6491],
         [ 9.6098],
         [10.9418]],
        [[ 9.7212],
         [25.2170],
         [ 9.9639],
         ...,
         [ 9.7287],
         [10.2061],
         [11.0068]],
        [[10.4938],
         [25.6596],
         [10.5313],
         ...,
         [10.4941],
         [10.6094],
         [11.0489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9775, 1.1637, 0.9694,  ..., 0.9772, 0.9640, 0.9569],
        [0.9336, 1.1401, 0.9379,  ..., 0.9337, 0.9420, 0.9547],
        [0.9290, 1.1373, 0.9344,  ..., 0.9292, 0.9395, 0.9544],
        ...,
        [0.9236, 1.1338, 0.9303,  ..., 0.9238, 0.9365, 0.9541],
        [0.9379, 1.1427, 0.9412,  ..., 0.9380, 0.9444, 0.9549],
        [0.9482, 1.1486, 0.9487,  ..., 0.9482, 0.9497, 0.9555]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8708],
         [10.3235],
         [11.5959],
         ...,
         [11.8869],
         [11.7294],
         [12.8118]],
        [[10.5836],
         [ 9.0172],
         [11.0779],
         ...,
         [10.6249],
         [11.4017],
         [11.7137]],
        [[10.4343],
         [ 8.8674],
         [11.0155],
         ...,
         [10.4782],
         [11.3617],
         [11.5845]],
        ...,
        [[10.2519],
         [ 8.6850],
         [10.9384],
         ...,
         [10.2991],
         [11.3124],
         [11.4260]],
        [[10.7233],
         [ 9.1577],
         [11.1359],
         ...,
         [10.7620],
         [11.4387],
         [11.8343]],
        [[11.0383],
         [ 9.4755],
         [11.2650],
         ...,
         [11.0710],
         [11.5207],
         [12.1047]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0241, 0.9909, 1.0182,  ..., 1.0244, 1.0211, 1.0443],
        [0.9965, 0.9629, 1.0071,  ..., 0.9974, 1.0140, 1.0207],
        [0.9933, 0.9597, 1.0057,  ..., 0.9942, 1.0132, 1.0179],
        ...,
        [0.9894, 0.9558, 1.0041,  ..., 0.9904, 1.0121, 1.0146],
        [0.9995, 0.9659, 1.0083,  ..., 1.0003, 1.0148, 1.0233],
        [1.0062, 0.9727, 1.0111,  ..., 1.0069, 1.0166, 1.0291]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0375],
         [21.5126],
         [13.6963],
         ...,
         [13.9074],
         [13.8192],
         [13.9270]],
        [[12.5565],
         [14.9357],
         [11.7871],
         ...,
         [12.4590],
         [11.5119],
         [11.2732]],
        [[12.3844],
         [14.2761],
         [11.5701],
         ...,
         [12.2905],
         [11.2545],
         [10.9820]],
        ...,
        [[12.1740],
         [13.4978],
         [11.3063],
         ...,
         [12.0846],
         [10.9430],
         [10.6310]],
        [[12.7175],
         [15.5717],
         [11.9911],
         ...,
         [12.6166],
         [11.7547],
         [11.5489]],
        [[13.0802],
         [17.0726],
         [12.4538],
         ...,
         [12.9714],
         [12.3090],
         [12.1813]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9577, 1.0793, 0.9522,  ..., 0.9556, 0.9542, 0.9559],
        [0.9336, 0.9723, 0.9211,  ..., 0.9320, 0.9166, 0.9128],
        [0.9308, 0.9616, 0.9176,  ..., 0.9293, 0.9125, 0.9080],
        ...,
        [0.9274, 0.9489, 0.9133,  ..., 0.9260, 0.9074, 0.9023],
        [0.9363, 0.9827, 0.9244,  ..., 0.9346, 0.9206, 0.9172],
        [0.9421, 1.0071, 0.9320,  ..., 0.9404, 0.9296, 0.9275]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7742],
         [26.9111],
         [12.0702],
         ...,
         [12.6925],
         [11.5791],
         [11.4589]],
        [[ 9.3650],
         [25.1715],
         [ 9.7386],
         ...,
         [ 9.4008],
         [10.1380],
         [11.0929]],
        [[ 9.0119],
         [24.9641],
         [ 9.4833],
         ...,
         [ 9.0578],
         [ 9.9726],
         [11.0484]],
        ...,
        [[ 8.5921],
         [24.7091],
         [ 9.1757],
         ...,
         [ 8.6495],
         [ 9.7710],
         [10.9935]],
        [[ 9.7032],
         [25.3644],
         [ 9.9805],
         ...,
         [ 9.7289],
         [10.2932],
         [11.1341]],
        [[10.4934],
         [25.7956],
         [10.5356],
         ...,
         [10.4941],
         [10.6440],
         [11.2257]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 1.1646, 0.9684,  ..., 0.9767, 0.9619, 0.9604],
        [0.9327, 1.1416, 0.9376,  ..., 0.9332, 0.9429, 0.9555],
        [0.9280, 1.1388, 0.9342,  ..., 0.9286, 0.9407, 0.9549],
        ...,
        [0.9225, 1.1355, 0.9302,  ..., 0.9232, 0.9380, 0.9542],
        [0.9371, 1.1441, 0.9408,  ..., 0.9375, 0.9449, 0.9561],
        [0.9476, 1.1498, 0.9482,  ..., 0.9476, 0.9496, 0.9573]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8803],
         [10.3449],
         [11.5546],
         ...,
         [11.8869],
         [11.7168],
         [12.3467]],
        [[10.5947],
         [ 9.0169],
         [11.1612],
         ...,
         [10.6157],
         [11.3969],
         [11.5851]],
        [[10.4456],
         [ 8.8649],
         [11.1135],
         ...,
         [10.4681],
         [11.3579],
         [11.4942]],
        ...,
        [[10.2634],
         [ 8.6797],
         [11.0545],
         ...,
         [10.2877],
         [11.3097],
         [11.3823]],
        [[10.7343],
         [ 9.1596],
         [11.2055],
         ...,
         [10.7538],
         [11.4330],
         [11.6697]],
        [[11.0489],
         [ 9.4826],
         [11.3038],
         ...,
         [11.0650],
         [11.5131],
         [11.8586]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0170,  ..., 1.0241, 1.0205, 1.0340],
        [0.9964, 0.9626, 1.0086,  ..., 0.9969, 1.0136, 1.0177],
        [0.9932, 0.9593, 1.0076,  ..., 0.9937, 1.0128, 1.0157],
        ...,
        [0.9893, 0.9554, 1.0063,  ..., 0.9898, 1.0118, 1.0133],
        [0.9994, 0.9657, 1.0095,  ..., 0.9998, 1.0144, 1.0195],
        [1.0062, 0.9726, 1.0116,  ..., 1.0065, 1.0161, 1.0235]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0225],
         [21.5290],
         [13.7113],
         ...,
         [13.8587],
         [13.8427],
         [14.0055]],
        [[12.4900],
         [14.8745],
         [11.6645],
         ...,
         [12.4320],
         [11.4034],
         [11.2344]],
        [[12.3123],
         [14.2090],
         [11.4334],
         ...,
         [12.2659],
         [11.1331],
         [10.9319]],
        ...,
        [[12.0953],
         [13.4242],
         [11.1529],
         ...,
         [12.0629],
         [10.8064],
         [10.5678]],
        [[12.6563],
         [15.5165],
         [11.8820],
         ...,
         [12.5873],
         [11.6589],
         [11.5210]],
        [[13.0311],
         [17.0330],
         [12.3765],
         ...,
         [12.9369],
         [12.2430],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9517, 1.0738, 0.9467,  ..., 0.9491, 0.9488, 0.9515],
        [0.9268, 0.9656, 0.9134,  ..., 0.9259, 0.9091, 0.9064],
        [0.9239, 0.9548, 0.9096,  ..., 0.9232, 0.9047, 0.9015],
        ...,
        [0.9204, 0.9420, 0.9051,  ..., 0.9199, 0.8994, 0.8956],
        [0.9295, 0.9760, 0.9169,  ..., 0.9284, 0.9133, 0.9111],
        [0.9356, 1.0007, 0.9250,  ..., 0.9341, 0.9228, 0.9218]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7840],
         [26.9293],
         [12.0647],
         ...,
         [12.6924],
         [11.5605],
         [11.5177]],
        [[ 9.3608],
         [25.1973],
         [ 9.7423],
         ...,
         [ 9.4008],
         [10.1569],
         [11.1099]],
        [[ 9.0065],
         [24.9908],
         [ 9.4879],
         ...,
         [ 9.0579],
         [ 9.9955],
         [11.0604]],
        ...,
        [[ 8.5854],
         [24.7369],
         [ 9.1813],
         ...,
         [ 8.6496],
         [ 9.7986],
         [10.9994]],
        [[ 9.7002],
         [25.3895],
         [ 9.9833],
         ...,
         [ 9.7290],
         [10.3083],
         [11.1558]],
        [[10.4934],
         [25.8187],
         [10.5364],
         ...,
         [10.4941],
         [10.6503],
         [11.2577]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9683,  ..., 0.9766, 0.9616, 0.9610],
        [0.9325, 1.1418, 0.9376,  ..., 0.9331, 0.9431, 0.9556],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9409, 0.9550],
        ...,
        [0.9223, 1.1357, 0.9302,  ..., 0.9231, 0.9383, 0.9542],
        [0.9370, 1.1444, 0.9408,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1500, 0.9481,  ..., 0.9475, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8815],
         [10.3486],
         [11.5492],
         ...,
         [11.8868],
         [11.7147],
         [12.2731]],
        [[10.5968],
         [ 9.0169],
         [11.1758],
         ...,
         [10.6142],
         [11.3961],
         [11.5648]],
        [[10.4477],
         [ 8.8645],
         [11.1304],
         ...,
         [10.4664],
         [11.3573],
         [11.4800]],
        ...,
        [[10.2656],
         [ 8.6788],
         [11.0743],
         ...,
         [10.2859],
         [11.3093],
         [11.3756]],
        [[10.7363],
         [ 9.1600],
         [11.2178],
         ...,
         [10.7524],
         [11.4321],
         [11.6436]],
        [[11.0506],
         [ 9.4838],
         [11.3112],
         ...,
         [11.0639],
         [11.5118],
         [11.8195]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0324],
        [0.9964, 0.9625, 1.0088,  ..., 0.9968, 1.0136, 1.0172],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0154],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9898, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0097,  ..., 0.9998, 1.0143, 1.0189],
        [1.0062, 0.9726, 1.0117,  ..., 1.0064, 1.0160, 1.0226]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0201],
         [21.5318],
         [13.7145],
         ...,
         [13.8509],
         [13.8471],
         [14.0198]],
        [[12.4788],
         [14.8642],
         [11.6441],
         ...,
         [12.4274],
         [11.3854],
         [11.2278]],
        [[12.3002],
         [14.1977],
         [11.4105],
         ...,
         [12.2616],
         [11.1128],
         [10.9233]],
        ...,
        [[12.0820],
         [13.4119],
         [11.1272],
         ...,
         [12.0590],
         [10.7835],
         [10.5569]],
        [[12.6460],
         [15.5072],
         [11.8639],
         ...,
         [12.5823],
         [11.6429],
         [11.5164]],
        [[13.0229],
         [17.0264],
         [12.3638],
         ...,
         [12.9312],
         [12.2321],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9502, 1.0724, 0.9453,  ..., 0.9475, 0.9474, 0.9502],
        [0.9252, 0.9640, 0.9116,  ..., 0.9243, 0.9074, 0.9048],
        [0.9223, 0.9531, 0.9078,  ..., 0.9216, 0.9030, 0.8999],
        ...,
        [0.9187, 0.9404, 0.9032,  ..., 0.9184, 0.8976, 0.8939],
        [0.9279, 0.9744, 0.9152,  ..., 0.9269, 0.9116, 0.9095],
        [0.9340, 0.9991, 0.9233,  ..., 0.9325, 0.9212, 0.9203]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7854],
         [26.9318],
         [12.0639],
         ...,
         [12.6924],
         [11.5580],
         [11.5258]],
        [[ 9.3602],
         [25.2009],
         [ 9.7428],
         ...,
         [ 9.4008],
         [10.1595],
         [11.1122]],
        [[ 9.0058],
         [24.9945],
         [ 9.4885],
         ...,
         [ 9.0579],
         [ 9.9986],
         [11.0621]],
        ...,
        [[ 8.5844],
         [24.7407],
         [ 9.1820],
         ...,
         [ 8.6496],
         [ 9.8024],
         [11.0001]],
        [[ 9.6998],
         [25.3929],
         [ 9.9837],
         ...,
         [ 9.7290],
         [10.3104],
         [11.1587]],
        [[10.4934],
         [25.8219],
         [10.5365],
         ...,
         [10.4941],
         [10.6512],
         [11.2621]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9616, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9409, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3491],
         [11.5485],
         ...,
         [11.8868],
         [11.7144],
         [12.2631]],
        [[10.5971],
         [ 9.0169],
         [11.1778],
         ...,
         [10.6140],
         [11.3960],
         [11.5620]],
        [[10.4480],
         [ 8.8644],
         [11.1327],
         ...,
         [10.4662],
         [11.3572],
         [11.4780]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0771],
         ...,
         [10.2857],
         [11.3092],
         [11.3747]],
        [[10.7366],
         [ 9.1600],
         [11.2196],
         ...,
         [10.7523],
         [11.4319],
         [11.6401]],
        [[11.0509],
         [ 9.4840],
         [11.3123],
         ...,
         [11.0638],
         [11.5117],
         [11.8142]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0198],
         [21.5322],
         [13.7149],
         ...,
         [13.8498],
         [13.8477],
         [14.0218]],
        [[12.4773],
         [14.8628],
         [11.6413],
         ...,
         [12.4267],
         [11.3829],
         [11.2269]],
        [[12.2985],
         [14.1962],
         [11.4074],
         ...,
         [12.2611],
         [11.1100],
         [10.9222]],
        ...,
        [[12.0802],
         [13.4102],
         [11.1237],
         ...,
         [12.0585],
         [10.7804],
         [10.5554]],
        [[12.6446],
         [15.5060],
         [11.8614],
         ...,
         [12.5817],
         [11.6408],
         [11.5158]],
        [[13.0218],
         [17.0254],
         [12.3621],
         ...,
         [12.9304],
         [12.2306],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9473, 0.9472, 0.9501],
        [0.9250, 0.9638, 0.9114,  ..., 0.9241, 0.9072, 0.9046],
        [0.9220, 0.9529, 0.9076,  ..., 0.9214, 0.9027, 0.8997],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8974, 0.8937],
        [0.9277, 0.9742, 0.9149,  ..., 0.9267, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9231,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9321],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5270]],
        [[ 9.3601],
         [25.2014],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0057],
         [24.9950],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9990],
         [11.0623]],
        ...,
        [[ 8.5843],
         [24.7412],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3934],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6513],
         [11.2627]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3491],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2617]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5616]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4778]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0774],
         ...,
         [10.2856],
         [11.3092],
         [11.3746]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6396]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8626],
         [11.6409],
         ...,
         [12.4266],
         [11.3825],
         [11.2268]],
        [[12.2983],
         [14.1960],
         [11.4070],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0800],
         [13.4100],
         [11.1232],
         ...,
         [12.0584],
         [10.7800],
         [10.5552]],
        [[12.6444],
         [15.5058],
         [11.8611],
         ...,
         [12.5816],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9501],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6513],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5616]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8626],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6444],
         [15.5058],
         [11.8610],
         ...,
         [12.5816],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7281],
         [26.8979],
         [12.0637],
         ...,
         [12.7030],
         [11.6071],
         [11.4152]],
        [[ 9.3850],
         [25.1508],
         [ 9.7430],
         ...,
         [ 9.3961],
         [10.1102],
         [11.0800]],
        [[ 9.0376],
         [24.9426],
         [ 9.4887],
         ...,
         [ 9.0518],
         [ 9.9388],
         [11.0392]],
        ...,
        [[ 8.6242],
         [24.6865],
         [ 9.1823],
         ...,
         [ 8.6420],
         [ 9.7302],
         [10.9888]],
        [[ 9.7176],
         [25.3446],
         [ 9.9838],
         ...,
         [ 9.7255],
         [10.2710],
         [11.1178]],
        [[10.4937],
         [25.7775],
         [10.5365],
         ...,
         [10.4940],
         [10.6349],
         [11.2017]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9774, 1.1647, 0.9686,  ..., 0.9771, 0.9626, 0.9601],
        [0.9332, 1.1416, 0.9380,  ..., 0.9334, 0.9428, 0.9556],
        [0.9287, 1.1388, 0.9346,  ..., 0.9288, 0.9406, 0.9551],
        ...,
        [0.9232, 1.1355, 0.9306,  ..., 0.9234, 0.9378, 0.9544],
        [0.9376, 1.1442, 0.9412,  ..., 0.9377, 0.9450, 0.9561],
        [0.9479, 1.1499, 0.9485,  ..., 0.9479, 0.9498, 0.9573]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8763],
         [10.3490],
         [11.5770],
         ...,
         [11.8870],
         [11.8217],
         [12.6562]],
        [[10.5891],
         [ 9.0169],
         [11.1123],
         ...,
         [10.6230],
         [11.4336],
         [11.6705]],
        [[10.4398],
         [ 8.8645],
         [11.0561],
         ...,
         [10.4762],
         [11.3864],
         [11.5540]],
        ...,
        [[10.2574],
         [ 8.6788],
         [10.9868],
         ...,
         [10.2968],
         [11.3282],
         [11.4109]],
        [[10.7289],
         [ 9.1601],
         [11.1645],
         ...,
         [10.7604],
         [11.4773],
         [11.7792]],
        [[11.0438],
         [ 9.4839],
         [11.2804],
         ...,
         [11.0698],
         [11.5743],
         [12.0225]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0239, 0.9911, 1.0174,  ..., 1.0241, 1.0227, 1.0406],
        [0.9963, 0.9625, 1.0075,  ..., 0.9970, 1.0144, 1.0194],
        [0.9931, 0.9593, 1.0063,  ..., 0.9938, 1.0133, 1.0169],
        ...,
        [0.9891, 0.9553, 1.0048,  ..., 0.9900, 1.0121, 1.0139],
        [0.9992, 0.9656, 1.0086,  ..., 0.9999, 1.0153, 1.0218],
        [1.0060, 0.9726, 1.0111,  ..., 1.0066, 1.0174, 1.0270]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0157],
         [21.5332],
         [13.7061],
         ...,
         [13.8720],
         [13.8424],
         [13.9653]],
        [[12.5032],
         [14.8737],
         [11.6837],
         ...,
         [12.4301],
         [11.4168],
         [11.2925]],
        [[12.3278],
         [14.2078],
         [11.4551],
         ...,
         [12.2624],
         [11.1478],
         [10.9994]],
        ...,
        [[12.1134],
         [13.4226],
         [11.1775],
         ...,
         [12.0573],
         [10.8226],
         [10.6462]],
        [[12.6675],
         [15.5161],
         [11.8988],
         ...,
         [12.5870],
         [11.6710],
         [11.5701]],
        [[13.0376],
         [17.0337],
         [12.3877],
         ...,
         [12.9403],
         [12.2520],
         [12.2068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9549, 1.0772, 0.9499,  ..., 0.9526, 0.9521, 0.9541],
        [0.9303, 0.9689, 0.9170,  ..., 0.9291, 0.9126, 0.9106],
        [0.9275, 0.9580, 0.9133,  ..., 0.9264, 0.9083, 0.9059],
        ...,
        [0.9240, 0.9453, 0.9088,  ..., 0.9231, 0.9030, 0.9001],
        [0.9330, 0.9793, 0.9205,  ..., 0.9317, 0.9168, 0.9151],
        [0.9390, 1.0040, 0.9284,  ..., 0.9374, 0.9262, 0.9255]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7772],
         [26.9272],
         [12.0638],
         ...,
         [12.6939],
         [11.5647],
         [11.5106]],
        [[ 9.3637],
         [25.1941],
         [ 9.7429],
         ...,
         [ 9.4001],
         [10.1526],
         [11.1079]],
        [[ 9.0103],
         [24.9875],
         [ 9.4886],
         ...,
         [ 9.0570],
         [ 9.9903],
         [11.0590]],
        ...,
        [[ 8.5901],
         [24.7334],
         [ 9.1822],
         ...,
         [ 8.6485],
         [ 9.7924],
         [10.9987]],
        [[ 9.7023],
         [25.3864],
         [ 9.9838],
         ...,
         [ 9.7285],
         [10.3049],
         [11.1532]],
        [[10.4934],
         [25.8159],
         [10.5365],
         ...,
         [10.4941],
         [10.6489],
         [11.2538]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9777, 1.1647, 0.9683,  ..., 0.9766, 0.9617, 0.9610],
        [0.9326, 1.1418, 0.9376,  ..., 0.9331, 0.9430, 0.9557],
        [0.9279, 1.1391, 0.9343,  ..., 0.9286, 0.9409, 0.9550],
        ...,
        [0.9224, 1.1357, 0.9302,  ..., 0.9232, 0.9383, 0.9542],
        [0.9371, 1.1444, 0.9408,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1500, 0.9481,  ..., 0.9476, 0.9496, 0.9576]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8810],
         [10.3491],
         [11.5518],
         ...,
         [11.8869],
         [11.7289],
         [12.3164]],
        [[10.5959],
         [ 9.0169],
         [11.1684],
         ...,
         [10.6152],
         [11.4015],
         [11.5768]],
        [[10.4468],
         [ 8.8644],
         [11.1218],
         ...,
         [10.4676],
         [11.3616],
         [11.4883]],
        ...,
        [[10.2647],
         [ 8.6787],
         [11.0643],
         ...,
         [10.2872],
         [11.3123],
         [11.3795]],
        [[10.7354],
         [ 9.1601],
         [11.2116],
         ...,
         [10.7534],
         [11.4384],
         [11.6590]],
        [[11.0499],
         [ 9.4840],
         [11.3074],
         ...,
         [11.0646],
         [11.5204],
         [11.8425]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0169,  ..., 1.0241, 1.0207, 1.0333],
        [0.9964, 0.9625, 1.0087,  ..., 0.9968, 1.0137, 1.0174],
        [0.9932, 0.9593, 1.0077,  ..., 0.9936, 1.0128, 1.0155],
        ...,
        [0.9893, 0.9553, 1.0064,  ..., 0.9898, 1.0118, 1.0132],
        [0.9994, 0.9656, 1.0096,  ..., 0.9998, 1.0145, 1.0192],
        [1.0061, 0.9726, 1.0117,  ..., 1.0064, 1.0162, 1.0231]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0191],
         [21.5324],
         [13.7137],
         ...,
         [13.8528],
         [13.8470],
         [14.0137]],
        [[12.4808],
         [14.8642],
         [11.6470],
         ...,
         [12.4271],
         [11.3875],
         [11.2362]],
        [[12.3025],
         [14.1977],
         [11.4139],
         ...,
         [12.2612],
         [11.1151],
         [10.9332]],
        ...,
        [[12.0848],
         [13.4118],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8668],
         [10.8138],
         [15.5719],
         ...,
         [11.7168],
         [12.1827],
         [16.9971]],
        [[11.4479],
         [ 9.0525],
         [12.5391],
         ...,
         [11.3969],
         [11.5789],
         [11.1517]],
        [[11.3971],
         [ 8.8555],
         [12.2073],
         ...,
         [11.3579],
         [11.5063],
         [10.5849]],
        ...,
        [[11.3343],
         [ 8.6168],
         [11.8077],
         ...,
         [11.3097],
         [11.4168],
         [ 9.9212]],
        [[11.4950],
         [ 9.2383],
         [12.8534],
         ...,
         [11.4330],
         [11.6464],
         [11.7020]],
        [[11.5997],
         [ 9.6619],
         [13.5751],
         ...,
         [11.5131],
         [11.7966],
         [13.0142]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0188, 0.9962, 1.0983,  ..., 1.0156, 1.0256, 1.1288],
        [1.0098, 0.9585, 1.0332,  ..., 1.0087, 1.0126, 1.0035],
        [1.0087, 0.9542, 1.0261,  ..., 1.0079, 1.0111, 0.9913],
        ...,
        [1.0074, 0.9491, 1.0175,  ..., 1.0069, 1.0092, 0.9771],
        [1.0108, 0.9624, 1.0400,  ..., 1.0095, 1.0141, 1.0153],
        [1.0131, 0.9715, 1.0554,  ..., 1.0112, 1.0173, 1.0434]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.1302],
         [22.6457],
         [15.0622],
         ...,
         [13.9739],
         [13.9594],
         [20.3444]],
        [[12.5597],
         [14.0815],
         [ 9.8368],
         ...,
         [11.9257],
         [11.0488],
         [12.8487]],
        [[12.3778],
         [13.2772],
         [ 9.3314],
         ...,
         [11.6940],
         [10.7336],
         [12.1381]],
        ...,
        [[12.1558],
         [12.3425],
         [ 8.7401],
         ...,
         [11.4127],
         [10.3548],
         [11.3106]],
        [[12.7299],
         [14.8673],
         [10.3276],
         ...,
         [12.1437],
         [11.3481],
         [13.5416]],
        [[13.1139],
         [16.7597],
         [11.4991],
         ...,
         [12.6389],
         [12.0374],
         [15.2056]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9181, 1.0566, 0.9332,  ..., 0.9155, 0.9153, 1.0191],
        [0.8925, 0.9173, 0.8482,  ..., 0.8822, 0.8679, 0.8972],
        [0.8896, 0.9042, 0.8400,  ..., 0.8784, 0.8628, 0.8857],
        ...,
        [0.8860, 0.8890, 0.8304,  ..., 0.8739, 0.8567, 0.8722],
        [0.8953, 0.9301, 0.8562,  ..., 0.8858, 0.8728, 0.9085],
        [0.9015, 0.9608, 0.8753,  ..., 0.8938, 0.8840, 0.9356]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[13.2514],
         [27.1385],
         [12.2143],
         ...,
         [11.6976],
         [13.4888],
         [25.5775]],
        [[ 9.1834],
         [25.2225],
         [11.2994],
         ...,
         [10.0253],
         [11.8013],
         [17.5551]],
        [[ 8.7758],
         [24.9950],
       grad_fn=<ExpBackward0>)0, 10])
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
  warnings.warn(first_warn_msg, RuntimeWarning)
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:545: RuntimeWarning: Optimization failed on the second try, after generating a new set of initial conditions.
  warnings.warn(
        [[10.2660],
         [ 8.6787],
         [11.0774],
         ...,
         [10.2856],
         [11.3092],
         [11.3746]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4320],
         [11.6396]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5117],
         [11.8134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8626],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2268]],
        [[12.2983],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6444],
         [15.5058],
         [11.8610],
         ...,
         [12.5816],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9501],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6513],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5616]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2268]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6444],
         [15.5058],
         [11.8610],
         ...,
         [12.5816],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8030],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[12.7856],
         [26.9322],
         [12.0638],
         ...,
         [12.6924],
         [11.5576],
         [11.5272]],
        [[ 9.3601],
         [25.2015],
         [ 9.7429],
         ...,
         [ 9.4008],
         [10.1599],
         [11.1126]],
        [[ 9.0056],
         [24.9951],
         [ 9.4886],
         ...,
         [ 9.0579],
         [ 9.9991],
         [11.0624]],
        ...,
        [[ 8.5843],
         [24.7413],
         [ 9.1822],
         ...,
         [ 8.6496],
         [ 9.8031],
         [11.0003]],
        [[ 9.6997],
         [25.3935],
         [ 9.9838],
         ...,
         [ 9.7290],
         [10.3107],
         [11.1592]],
        [[10.4934],
         [25.8224],
         [10.5365],
         ...,
         [10.4941],
         [10.6514],
         [11.2628]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9778, 1.1647, 0.9682,  ..., 0.9765, 0.9615, 0.9611],
        [0.9325, 1.1419, 0.9376,  ..., 0.9330, 0.9431, 0.9557],
        [0.9278, 1.1391, 0.9342,  ..., 0.9285, 0.9410, 0.9550],
        ...,
        [0.9223, 1.1358, 0.9302,  ..., 0.9231, 0.9384, 0.9542],
        [0.9370, 1.1444, 0.9407,  ..., 0.9374, 0.9451, 0.9563],
        [0.9475, 1.1501, 0.9481,  ..., 0.9475, 0.9496, 0.9577]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[11.8817],
         [10.3492],
         [11.5484],
         ...,
         [11.8868],
         [11.7144],
         [12.2615]],
        [[10.5971],
         [ 9.0169],
         [11.1781],
         ...,
         [10.6140],
         [11.3960],
         [11.5615]],
        [[10.4481],
         [ 8.8644],
         [11.1331],
         ...,
         [10.4662],
         [11.3572],
         [11.4777]],
        ...,
        [[10.2660],
         [ 8.6787],
         [11.0775],
         ...,
         [10.2856],
         [11.3092],
         [11.3745]],
        [[10.7366],
         [ 9.1601],
         [11.2198],
         ...,
         [10.7522],
         [11.4319],
         [11.6395]],
        [[11.0509],
         [ 9.4840],
         [11.3124],
         ...,
         [11.0638],
         [11.5116],
         [11.8133]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0240, 0.9911, 1.0168,  ..., 1.0241, 1.0204, 1.0321],
        [0.9964, 0.9625, 1.0089,  ..., 0.9968, 1.0136, 1.0171],
        [0.9932, 0.9593, 1.0079,  ..., 0.9936, 1.0127, 1.0153],
        ...,
        [0.9893, 0.9553, 1.0067,  ..., 0.9897, 1.0117, 1.0131],
        [0.9994, 0.9656, 1.0098,  ..., 0.9997, 1.0143, 1.0188],
        [1.0062, 0.9726, 1.0118,  ..., 1.0064, 1.0160, 1.0225]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.0197],
         [21.5322],
         [13.7150],
         ...,
         [13.8496],
         [13.8478],
         [14.0221]],
        [[12.4770],
         [14.8625],
         [11.6408],
         ...,
         [12.4266],
         [11.3825],
         [11.2267]],
        [[12.2982],
         [14.1959],
         [11.4069],
         ...,
         [12.2610],
         [11.1096],
         [10.9220]],
        ...,
        [[12.0799],
         [13.4100],
         [11.1231],
         ...,
         [12.0584],
         [10.7799],
         [10.5552]],
        [[12.6443],
         [15.5058],
         [11.8610],
         ...,
         [12.5815],
         [11.6404],
         [11.5157]],
        [[13.0216],
         [17.0253],
         [12.3618],
         ...,
         [12.9303],
         [12.2304],
         [12.1798]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9500, 1.0722, 0.9451,  ..., 0.9472, 0.9472, 0.9500],
        [0.9249, 0.9637, 0.9113,  ..., 0.9241, 0.9071, 0.9046],
        [0.9220, 0.9529, 0.9075,  ..., 0.9214, 0.9027, 0.8996],
        ...,
        [0.9185, 0.9401, 0.9029,  ..., 0.9181, 0.8973, 0.8937],
        [0.9276, 0.9742, 0.9149,  ..., 0.9266, 0.9113, 0.9093],
        [0.9338, 0.9989, 0.9230,  ..., 0.9323, 0.9209, 0.9201]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.1690],
         [33.5102],
         [52.1846],
         ...,
         [21.4599],
         [26.0119],
         [69.3910]],
        [[10.8719],
         [24.1198],
         [35.5517],
         ...,
         [12.8572],
         [15.3383],
         [57.7956]],
        [[10.4328],
         [23.1578],
         [33.9022],
         ...,
         [12.0671],
         [14.3675],
         [56.5022]],
        ...,
        [[ 9.9123],
         [22.0169],
         [31.9608],
         ...,
         [11.1537],
         [13.2475],
         [54.9369]],
        [[11.2937],
         [25.0435],
         [37.1459],
         ...,
         [13.6324],
         [16.2927],
         [59.0160]],
        [[12.2834],
         [27.2087],
         [40.9210],
         ...,
         [15.5124],
         [18.6142],
         [61.8011]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.8999, 1.1983, 1.5020,  ..., 1.0023, 1.0763, 1.7818],
        [0.8300, 1.0455, 1.2315,  ..., 0.8623, 0.9027, 1.5932],
        [0.8229, 1.0299, 1.2046,  ..., 0.8495, 0.8869, 1.5722],
        ...,
        [0.8144, 1.0113, 1.1730,  ..., 0.8346, 0.8687, 1.5467],
        [0.8369, 1.0605, 1.2574,  ..., 0.8749, 0.9182, 1.6131],
        [0.8530, 1.0958, 1.3188,  ..., 0.9055, 0.9560, 1.6584]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.8971],
         [22.5178],
         [17.5763],
         ...,
         [33.3597],
         [18.7108],
         [18.7296]],
        [[10.5452],
         [18.0239],
         [11.9404],
         ...,
         [24.4099],
         [13.4553],
         [ 8.8385]],
        [[10.1037],
         [17.5340],
         [11.3824],
         ...,
         [23.4841],
         [12.9172],
         [ 8.0539]],
        ...,
        [[ 9.5813],
         [16.9444],
         [10.7259],
         ...,
         [22.3836],
         [12.2791],
         [ 7.1762]],
        [[10.9699],
         [18.4883],
         [12.4798],
         ...,
         [25.2971],
         [13.9721],
         [ 9.6306]],
        [[11.9686],
         [19.5559],
         [13.7579],
         ...,
         [27.3704],
         [15.1836],
         [11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.8955, 1.0195, 0.9391,  ..., 1.1958, 0.9575, 0.9578],
        [0.8247, 0.9464, 0.8474,  ..., 1.0502, 0.8721, 0.7970],
        [0.8176, 0.9384, 0.8383,  ..., 1.0352, 0.8633, 0.7842],
        ...,
        [0.8091, 0.9288, 0.8277,  ..., 1.0173, 0.8529, 0.7699],
        [0.8316, 0.9539, 0.8562,  ..., 1.0647, 0.8805, 0.8099],
        [0.8479, 0.9713, 0.8770,  ..., 1.0984, 0.9002, 0.8425]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1193],
         [23.1172],
         [15.5290],
         ...,
         [30.8017],
         [17.7989],
         [18.6067]],
        [[ 9.3189],
         [17.6073],
         [10.5530],
         ...,
         [22.4773],
         [12.6122],
         [ 8.9478]],
        [[ 8.6431],
         [17.0238],
         [10.0602],
         ...,
         [21.6176],
         [12.0857],
         [ 8.1725]],
        ...,
        [[ 7.8721],
         [16.3263],
         [ 9.4805],
         ...,
         [20.5960],
         [11.4627],
         [ 7.3030]],
        [[ 9.9897],
         [18.1638],
         [11.0293],
         ...,
         [23.3014],
         [13.1186],
         [ 9.7287]],
        [[11.6456],
         [19.4548],
         [12.1579],
         ...,
         [25.2284],
         [14.3093],
         [11.7014]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9338, 1.0314, 0.9080,  ..., 1.1564, 0.9449, 0.9580],
        [0.8070, 0.9418, 0.8270,  ..., 1.0210, 0.8605, 0.8009],
        [0.7960, 0.9323, 0.8190,  ..., 1.0070, 0.8520, 0.7883],
        ...,
        [0.7834, 0.9209, 0.8096,  ..., 0.9904, 0.8418, 0.7742],
        [0.8179, 0.9508, 0.8348,  ..., 1.0344, 0.8688, 0.8136],
        [0.8448, 0.9718, 0.8531,  ..., 1.0657, 0.8881, 0.8457]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.5512],
         [23.4604],
         [15.3410],
         ...,
         [29.7227],
         [17.2900],
         [18.1748]],
        [[ 9.1914],
         [17.3940],
         [10.2565],
         ...,
         [21.5476],
         [12.1719],
         [ 9.0376]],
        [[ 8.4841],
         [16.7616],
         [ 9.7578],
         ...,
         [20.7065],
         [11.6544],
         [ 8.2889]],
        ...,
        [[ 7.6814],
         [16.0085],
         [ 9.1725],
         ...,
         [19.7081],
         [11.0425],
         [ 7.4452]],
        [[ 9.8966],
         [17.9990],
         [10.7395],
         ...,
         [22.3544],
         [12.6701],
         [ 9.7888]],
        [[11.6502],
         [19.4096],
         [11.8872],
         ...,
         [24.2433],
         [13.8428],
         [11.6748]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9439, 1.0400, 0.9080,  ..., 1.1419, 0.9397, 0.9541],
        [0.8079, 0.9414, 0.8253,  ..., 1.0089, 0.8564, 0.8054],
        [0.7964, 0.9311, 0.8172,  ..., 0.9952, 0.8480, 0.7933],
        ...,
        [0.7834, 0.9188, 0.8076,  ..., 0.9790, 0.8380, 0.7795],
        [0.8194, 0.9512, 0.8331,  ..., 1.0220, 0.8645, 0.8177],
        [0.8479, 0.9741, 0.8518,  ..., 1.0528, 0.8836, 0.8483]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.0658],
         [26.4489],
         [20.0658],
         ...,
         [26.4896],
         [16.1010],
         [15.6991]],
        [[ 8.7165],
         [15.3749],
         [ 8.7165],
         ...,
         [15.0831],
         [ 9.7228],
         [ 9.9450]],
        [[ 7.8617],
         [14.3763],
         [ 7.8617],
         ...,
         [14.0674],
         [ 9.1342],
         [ 9.3986]],
        ...,
        [[ 6.9164],
         [13.2266],
         [ 6.9164],
         ...,
         [12.9013],
         [ 8.4531],
         [ 8.7619]],
        [[ 9.5880],
         [16.3583],
         [ 9.5880],
         ...,
         [16.0858],
         [10.2997],
         [10.4777]],
        [[11.8318],
         [18.7565],
         [11.8318],
         ...,
         [18.5407],
         [11.6969],
         [11.7562]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 1.0773, 0.9735,  ..., 1.0780, 0.9090, 0.9025],
        [0.7889, 0.8972, 0.7889,  ..., 0.8925, 0.8053, 0.8089],
        [0.7750, 0.8810, 0.7750,  ..., 0.8759, 0.7957, 0.8000],
        ...,
        [0.7596, 0.8623, 0.7596,  ..., 0.8570, 0.7846, 0.7896],
        [0.8031, 0.9132, 0.8031,  ..., 0.9088, 0.8147, 0.8176],
        [0.8396, 0.9522, 0.8396,  ..., 0.9487, 0.8374, 0.8383]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.6039],
         [26.4878],
         [19.5939],
         ...,
         [26.4988],
         [16.4870],
         [16.0882]],
        [[ 8.7796],
         [15.2736],
         [ 8.7811],
         ...,
         [14.9838],
         [ 9.5484],
         [ 9.7292]],
        [[ 7.9486],
         [14.2673],
         [ 7.9506],
         ...,
         [13.9628],
         [ 8.9241],
         [ 9.1419]],
        ...,
        [[ 7.0257],
         [13.1101],
         [ 7.0282],
         ...,
         [12.7917],
         [ 8.2057],
         [ 8.4620]],
        [[ 9.6238],
         [16.2655],
         [ 9.6247],
         ...,
         [15.9926],
         [10.1634],
         [10.3048]],
        [[11.7850],
         [18.6882],
         [11.7840],
         ...,
         [18.4656],
         [11.6644],
         [11.6984]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9683, 1.0803, 0.9682,  ..., 1.0805, 0.9176, 0.9111],
        [0.7923, 0.8979, 0.7923,  ..., 0.8932, 0.8048, 0.8077],
        [0.7788, 0.8815, 0.7788,  ..., 0.8766, 0.7946, 0.7982],
        ...,
        [0.7637, 0.8627, 0.7638,  ..., 0.8575, 0.7829, 0.7871],
        [0.8060, 0.9140, 0.8060,  ..., 0.9096, 0.8148, 0.8171],
        [0.8412, 0.9534, 0.8411,  ..., 0.9498, 0.8392, 0.8397]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7486],
         [26.3358],
         [17.7227],
         ...,
         [26.2365],
         [17.9006],
         [17.7442]],
        [[ 9.1392],
         [14.8767],
         [ 9.1459],
         ...,
         [14.6130],
         [ 9.1013],
         [ 9.1404]],
        [[ 8.4183],
         [13.8613],
         [ 8.4267],
         ...,
         [13.5917],
         [ 8.3703],
         [ 8.4198]],
        ...,
        [[ 7.6021],
         [12.6968],
         [ 7.6123],
         ...,
         [12.4229],
         [ 7.5441],
         [ 7.6039]],
        [[ 9.8595],
         [15.8802],
         [ 9.8642],
         ...,
         [15.6238],
         [ 9.8328],
         [ 9.8603]],
        [[11.6560],
         [18.3404],
         [11.6551],
         ...,
         [18.1086],
         [11.6617],
         [11.6558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9399, 1.0796, 0.9395,  ..., 1.0780, 0.9424, 0.9398],
        [0.7999, 0.8932, 0.8000,  ..., 0.8889, 0.7993, 0.7999],
        [0.7882, 0.8767, 0.7883,  ..., 0.8723, 0.7874, 0.7882],
        ...,
        [0.7749, 0.8577, 0.7750,  ..., 0.8533, 0.7739, 0.7749],
        [0.8116, 0.9095, 0.8117,  ..., 0.9053, 0.8112, 0.8116],
        [0.8408, 0.9495, 0.8408,  ..., 0.9458, 0.8409, 0.8408]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.9049],
         [25.7153],
         [16.9079],
         ...,
         [25.5123],
         [18.6697],
         [18.7390]],
        [[ 9.3903],
         [14.4497],
         [ 9.3893],
         ...,
         [14.2130],
         [ 8.9356],
         [ 8.9226]],
        [[ 8.7312],
         [13.4546],
         [ 8.7299],
         ...,
         [13.2201],
         [ 8.1567],
         [ 8.1395]],
        ...,
        [[ 7.9770],
         [12.3142],
         [ 7.9755],
         ...,
         [12.0836],
         [ 7.2836],
         [ 7.2625]],
        [[10.0429],
         [15.4337],
         [10.0422],
         ...,
         [15.1957],
         [ 9.7207],
         [ 9.7122]],
        [[11.6481],
         [17.8484],
         [11.6480],
         ...,
         [17.6114],
         [11.7058],
         [11.7109]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9221, 1.0654, 0.9221,  ..., 1.0621, 0.9508, 0.9519],
        [0.7999, 0.8822, 0.7998,  ..., 0.8783, 0.7925, 0.7923],
        [0.7891, 0.8660, 0.7891,  ..., 0.8622, 0.7798, 0.7795],
        ...,
        [0.7769, 0.8474, 0.7769,  ..., 0.8437, 0.7656, 0.7653],
        [0.8105, 0.8982, 0.8105,  ..., 0.8943, 0.8052, 0.8051],
        [0.8366, 0.9374, 0.8366,  ..., 0.9336, 0.8375, 0.8376]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.6572],
         [24.7506],
         [16.6798],
         ...,
         [24.4560],
         [18.9166],
         [19.1494]],
        [[ 9.4806],
         [14.0103],
         [ 9.4720],
         ...,
         [13.7999],
         [ 8.8902],
         [ 8.8503]],
        [[ 8.8417],
         [13.0573],
         [ 8.8313],
         ...,
         [12.8562],
         [ 8.0969],
         [ 8.0438]],
        ...,
        [[ 8.1083],
         [11.9641],
         [ 8.0959],
         ...,
         [11.7742],
         [ 7.2099],
         [ 7.1443]],
        [[10.1114],
         [14.9517],
         [10.1048],
         ...,
         [14.7325],
         [ 9.6915],
         [ 9.6664]],
        [[11.6557],
         [17.2591],
         [11.6548],
         ...,
         [17.0196],
         [11.7244],
         [11.7436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9198, 1.0514, 0.9201,  ..., 1.0466, 0.9565, 0.9603],
        [0.8031, 0.8767, 0.8029,  ..., 0.8733, 0.7935, 0.7928],
        [0.7927, 0.8612, 0.7925,  ..., 0.8580, 0.7806, 0.7797],
        ...,
        [0.7807, 0.8435, 0.7805,  ..., 0.8404, 0.7661, 0.7651],
        [0.8133, 0.8920, 0.8132,  ..., 0.8885, 0.8065, 0.8061],
        [0.8384, 0.9296, 0.8384,  ..., 0.9257, 0.8396, 0.8399]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1808],
         [21.8190],
         [16.2380],
         ...,
         [21.3784],
         [19.4541],
         [20.0658]],
        [[ 9.6840],
         [12.9790],
         [ 9.6572],
         ...,
         [12.8225],
         [ 8.8019],
         [ 8.7165]],
        [[ 9.0878],
         [12.1707],
         [ 9.0555],
         ...,
         [12.0362],
         [ 7.9789],
         [ 7.8617]],
        ...,
        [[ 8.3985],
         [11.2371],
         [ 8.3606],
         ...,
         [11.1271],
         [ 7.0635],
         [ 6.9164]],
        [[10.2692],
         [13.7728],
         [10.2481],
         ...,
         [13.5939],
         [ 9.6370],
         [ 9.5880]],
        [[11.6885],
         [15.7006],
         [11.6831],
         ...,
         [15.4643],
         [11.7708],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9103, 1.0020, 0.9112,  ..., 0.9948, 0.9635, 0.9735],
        [0.8046, 0.8582, 0.8042,  ..., 0.8557, 0.7903, 0.7889],
        [0.7949, 0.8451, 0.7944,  ..., 0.8429, 0.7769, 0.7750],
        ...,
        [0.7837, 0.8299, 0.7831,  ..., 0.8281, 0.7620, 0.7596],
        [0.8142, 0.8711, 0.8138,  ..., 0.8682, 0.8039, 0.8031],
        [0.8372, 0.9025, 0.8372,  ..., 0.8987, 0.8386, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1054],
         [19.8738],
         [16.1716],
         ...,
         [19.4359],
         [19.6358],
         [20.0658]],
        [[ 9.7206],
         [12.3774],
         [ 9.6884],
         ...,
         [12.2534],
         [ 8.7750],
         [ 8.7165]],
        [[ 9.1316],
         [11.6727],
         [ 9.0931],
         ...,
         [11.5733],
         [ 7.9423],
         [ 7.8617]],
        ...,
        [[ 8.4500],
         [10.8536],
         [ 8.4047],
         ...,
         [10.7814],
         [ 7.0178],
         [ 6.9164]],
        [[10.2980],
         [13.0657],
         [10.2726],
         ...,
         [12.9168],
         [ 9.6211],
         [ 9.5880]],
        [[11.6964],
         [14.7230],
         [11.6895],
         ...,
         [14.5104],
         [11.7880],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9091, 0.9704, 0.9102,  ..., 0.9633, 0.9665, 0.9735],
        [0.8052, 0.8484, 0.8047,  ..., 0.8464, 0.7899, 0.7889],
        [0.7957, 0.8370, 0.7950,  ..., 0.8354, 0.7763, 0.7750],
        ...,
        [0.7846, 0.8237, 0.7838,  ..., 0.8225, 0.7613, 0.7596],
        [0.8146, 0.8596, 0.8142,  ..., 0.8572, 0.8036, 0.8031],
        [0.8374, 0.8866, 0.8373,  ..., 0.8831, 0.8389, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0732],
         [18.1274],
         [16.1440],
         ...,
         [17.7621],
         [19.7210],
         [20.0658]],
        [[ 9.7366],
         [11.8231],
         [ 9.7017],
         ...,
         [11.7282],
         [ 8.7629],
         [ 8.7165]],
        [[ 9.1508],
         [11.2139],
         [ 9.1090],
         ...,
         [11.1409],
         [ 7.9257],
         [ 7.8617]],
        ...,
        [[ 8.4725],
         [10.5012],
         [ 8.4235],
         ...,
         [10.4525],
         [ 6.9970],
         [ 6.9164]],
        [[10.3107],
         [12.4149],
         [10.2831],
         ...,
         [12.2980],
         [ 9.6141],
         [ 9.5880]],
        [[11.7001],
         [13.8278],
         [11.6923],
         ...,
         [13.6551],
         [11.7964],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9086, 0.9420, 0.9097,  ..., 0.9360, 0.9679, 0.9735],
        [0.8055, 0.8394, 0.8049,  ..., 0.8379, 0.7897, 0.7889],
        [0.7960, 0.8295, 0.7953,  ..., 0.8283, 0.7760, 0.7750],
        ...,
        [0.7849, 0.8179, 0.7841,  ..., 0.8171, 0.7609, 0.7596],
        [0.8148, 0.8491, 0.8144,  ..., 0.8472, 0.8035, 0.8031],
        [0.8374, 0.8720, 0.8373,  ..., 0.8692, 0.8390, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.9485],
         [15.9760],
         [16.0367],
         ...,
         [16.0259],
         [20.0658],
         [20.0658]],
        [[ 9.8014],
         [ 9.7477],
         [ 9.7552],
         ...,
         [ 9.7263],
         [ 8.7165],
         [ 8.7165]],
        [[ 9.2282],
         [ 9.1694],
         [ 9.1730],
         ...,
         [ 9.1432],
         [ 7.8617],
         [ 7.8617]],
        ...,
        [[ 8.5631],
         [ 8.4992],
         [ 8.4985],
         ...,
         [ 8.4679],
         [ 6.9164],
         [ 6.9164]],
        [[10.3622],
         [10.3140],
         [10.3254],
         ...,
         [10.2975],
         [ 9.5880],
         [ 9.5880]],
        [[11.7158],
         [11.6825],
         [11.7044],
         ...,
         [11.6795],
         [11.8318],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9065, 0.9070, 0.9080,  ..., 0.9078, 0.9735, 0.9735],
        [0.8066, 0.8057, 0.8058,  ..., 0.8053, 0.7889, 0.7889],
        [0.7972, 0.7963, 0.7963,  ..., 0.7958, 0.7750, 0.7750],
        ...,
        [0.7864, 0.7854, 0.7854,  ..., 0.7849, 0.7596, 0.7596],
        [0.8157, 0.8149, 0.8151,  ..., 0.8146, 0.8031, 0.8031],
        [0.8377, 0.8371, 0.8375,  ..., 0.8371, 0.8396, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9545],
         [16.6378],
         [17.8986],
         ...,
         [16.6184],
         [17.5643],
         [17.5826]],
        [[ 9.0884],
         [ 9.4881],
         [ 9.1018],
         ...,
         [ 9.4956],
         [ 9.1878],
         [ 9.1828]],
        [[ 8.3538],
         [ 8.8508],
         [ 8.3709],
         ...,
         [ 8.8600],
         [ 8.4796],
         [ 8.4734]],
        ...,
        [[ 7.5240],
         [ 8.1191],
         [ 7.5448],
         ...,
         [ 8.1300],
         [ 7.6760],
         [ 7.6685]],
        [[ 9.8238],
         [10.1171],
         [ 9.8332],
         ...,
         [10.1228],
         [ 9.8941],
         [ 9.8905]],
        [[11.6640],
         [11.6565],
         [11.6617],
         ...,
         [11.6574],
         [11.6505],
         [11.6510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9479, 0.9265, 0.9470,  ..., 0.9262, 0.9415, 0.9418],
        [0.8037, 0.8102, 0.8039,  ..., 0.8103, 0.8053, 0.8052],
        [0.7917, 0.7998, 0.7920,  ..., 0.8000, 0.7938, 0.7937],
        ...,
        [0.7782, 0.7879, 0.7786,  ..., 0.7881, 0.7807, 0.7806],
        [0.8156, 0.8204, 0.8158,  ..., 0.8205, 0.8168, 0.8167],
        [0.8456, 0.8455, 0.8455,  ..., 0.8455, 0.8454, 0.8454]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.3852],
         [18.8110],
         [17.4524],
         ...,
         [18.8024],
         [17.8220],
         [17.9157]],
        [[ 9.2381],
         [ 8.9092],
         [ 9.2188],
         ...,
         [ 8.9108],
         [ 9.1207],
         [ 9.0977]],
        [[ 8.5426],
         [ 8.1220],
         [ 8.5185],
         ...,
         [ 8.1241],
         [ 8.3949],
         [ 8.3657]],
        ...,
        [[ 7.7517],
         [ 7.2409],
         [ 7.7228],
         ...,
         [ 7.2435],
         [ 7.5738],
         [ 7.5385]],
        [[ 9.9304],
         [ 9.7036],
         [ 9.9164],
         ...,
         [ 9.7046],
         [ 9.8464],
         [ 9.8303]],
        [[11.6471],
         [11.7162],
         [11.6481],
         ...,
         [11.7156],
         [11.6586],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9357, 0.9589, 0.9368,  ..., 0.9588, 0.9428, 0.9443],
        [0.8032, 0.7978, 0.8029,  ..., 0.7979, 0.8013, 0.8009],
        [0.7919, 0.7850, 0.7915,  ..., 0.7851, 0.7895, 0.7890],
        ...,
        [0.7790, 0.7707, 0.7786,  ..., 0.7708, 0.7761, 0.7756],
        [0.8145, 0.8108, 0.8142,  ..., 0.8108, 0.8131, 0.8128],
        [0.8424, 0.8435, 0.8424,  ..., 0.8435, 0.8426, 0.8426]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1846],
         [19.8104],
         [17.2931],
         ...,
         [19.8086],
         [17.9210],
         [18.0445]],
        [[ 9.2983],
         [ 8.7504],
         [ 9.2652],
         ...,
         [ 8.7507],
         [ 9.0964],
         [ 9.0672]],
        [[ 8.6176],
         [ 7.9086],
         [ 8.5764],
         ...,
         [ 7.9090],
         [ 8.3640],
         [ 8.3268]],
        ...,
        [[ 7.8416],
         [ 6.9755],
         [ 7.7923],
         ...,
         [ 6.9760],
         [ 7.5365],
         [ 7.4913]],
        [[ 9.9745],
         [ 9.6069],
         [ 9.9501],
         ...,
         [ 9.6071],
         [ 9.8294],
         [ 9.8091]],
        [[11.6455],
         [11.8053],
         [11.6460],
         ...,
         [11.8052],
         [11.6626],
         [11.6682]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9279, 0.9706, 0.9297,  ..., 0.9706, 0.9399, 0.9419],
        [0.7996, 0.7907, 0.7991,  ..., 0.7907, 0.7964, 0.7959],
        [0.7886, 0.7770, 0.7879,  ..., 0.7770, 0.7844, 0.7838],
        ...,
        [0.7759, 0.7619, 0.7751,  ..., 0.7619, 0.7710, 0.7702],
        [0.8106, 0.8047, 0.8102,  ..., 0.8047, 0.8083, 0.8079],
        [0.8378, 0.8404, 0.8378,  ..., 0.8404, 0.8381, 0.8382]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1459],
         [20.0196],
         [17.2622],
         ...,
         [20.0193],
         [17.9407],
         [18.0701]],
        [[ 9.3105],
         [ 8.7225],
         [ 9.2745],
         ...,
         [ 8.7225],
         [ 9.0917],
         [ 9.0613]],
        [[ 8.6327],
         [ 7.8700],
         [ 8.5880],
         ...,
         [ 7.8701],
         [ 8.3580],
         [ 8.3192]],
        ...,
        [[ 7.8596],
         [ 6.9269],
         [ 7.8061],
         ...,
         [ 6.9269],
         [ 7.5291],
         [ 7.4821]],
        [[ 9.9834],
         [ 9.5913],
         [ 9.9569],
         ...,
         [ 9.5913],
         [ 9.8261],
         [ 9.8051]],
        [[11.6455],
         [11.8269],
         [11.6458],
         ...,
         [11.8269],
         [11.6634],
         [11.6694]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9262, 0.9730, 0.9281,  ..., 0.9730, 0.9392, 0.9413],
        [0.7988, 0.7892, 0.7982,  ..., 0.7892, 0.7952, 0.7947],
        [0.7878, 0.7754, 0.7870,  ..., 0.7754, 0.7833, 0.7827],
        ...,
        [0.7752, 0.7600, 0.7743,  ..., 0.7600, 0.7698, 0.7691],
        [0.8097, 0.8034, 0.8093,  ..., 0.8034, 0.8072, 0.8068],
        [0.8368, 0.8397, 0.8368,  ..., 0.8397, 0.8371, 0.8372]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1391],
         [20.0573],
         [17.2568],
         ...,
         [20.0572],
         [17.9442],
         [18.0747]],
        [[ 9.3127],
         [ 8.7176],
         [ 9.2762],
         ...,
         [ 8.7176],
         [ 9.0908],
         [ 9.0602]],
        [[ 8.6354],
         [ 7.8632],
         [ 8.5901],
         ...,
         [ 7.8633],
         [ 8.3569],
         [ 8.3179]],
        ...,
        [[ 7.8628],
         [ 6.9183],
         [ 7.8086],
         ...,
         [ 6.9183],
         [ 7.5279],
         [ 7.4805]],
        [[ 9.9851],
         [ 9.5886],
         [ 9.9582],
         ...,
         [ 9.5886],
         [ 9.8255],
         [ 9.8043]],
        [[11.6455],
         [11.8309],
         [11.6458],
         ...,
         [11.8309],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9734, 0.9279,  ..., 0.9734, 0.9390, 0.9412],
        [0.7986, 0.7890, 0.7981,  ..., 0.7890, 0.7950, 0.7945],
        [0.7876, 0.7751, 0.7869,  ..., 0.7751, 0.7831, 0.7825],
        ...,
        [0.7751, 0.7597, 0.7742,  ..., 0.7597, 0.7696, 0.7688],
        [0.8096, 0.8031, 0.8091,  ..., 0.8031, 0.8070, 0.8066],
        [0.8366, 0.8396, 0.8366,  ..., 0.8396, 0.8369, 0.8370]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1378],
         [20.0642],
         [17.2558],
         ...,
         [20.0642],
         [17.9449],
         [18.0756]],
        [[ 9.3131],
         [ 8.7167],
         [ 9.2765],
         ...,
         [ 8.7167],
         [ 9.0907],
         [ 9.0600]],
        [[ 8.6359],
         [ 7.8620],
         [ 8.5904],
         ...,
         [ 7.8620],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8634],
         [ 6.9167],
         [ 7.8091],
         ...,
         [ 6.9168],
         [ 7.5276],
         [ 7.4802]],
        [[ 9.9853],
         [ 9.5881],
         [ 9.9584],
         ...,
         [ 9.5881],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8316],
         [11.6458],
         ...,
         [11.8316],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7742,  ..., 0.7596, 0.7696, 0.7688],
        [0.8096, 0.8031, 0.8091,  ..., 0.8031, 0.8070, 0.8066],
        [0.8366, 0.8396, 0.8366,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1376],
         [20.0655],
         [17.2556],
         ...,
         [20.0655],
         [17.9450],
         [18.0757]],
        [[ 9.3131],
         [ 8.7166],
         [ 9.2765],
         ...,
         [ 8.7166],
         [ 9.0907],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8618],
         [ 8.5905],
         ...,
         [ 7.8618],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9165],
         [ 7.8092],
         ...,
         [ 6.9165],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8317],
         [11.6457],
         ...,
         [11.8317],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7742,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8366,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0657],
         [17.2555],
         ...,
         [20.0657],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8366,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1375],
         [20.0658],
         [17.2555],
         ...,
         [20.0658],
         [17.9450],
         [18.0757]],
        [[ 9.3132],
         [ 8.7165],
         [ 9.2765],
         ...,
         [ 8.7165],
         [ 9.0906],
         [ 9.0600]],
        [[ 8.6360],
         [ 7.8617],
         [ 8.5905],
         ...,
         [ 7.8617],
         [ 8.3567],
         [ 8.3176]],
        ...,
        [[ 7.8635],
         [ 6.9164],
         [ 7.8092],
         ...,
         [ 6.9164],
         [ 7.5276],
         [ 7.4801]],
        [[ 9.9854],
         [ 9.5880],
         [ 9.9584],
         ...,
         [ 9.5880],
         [ 9.8254],
         [ 9.8042]],
        [[11.6455],
         [11.8318],
         [11.6457],
         ...,
         [11.8318],
         [11.6636],
         [11.6697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9735, 0.9278,  ..., 0.9735, 0.9390, 0.9411],
        [0.7986, 0.7889, 0.7980,  ..., 0.7889, 0.7950, 0.7945],
        [0.7876, 0.7750, 0.7869,  ..., 0.7750, 0.7831, 0.7824],
        ...,
        [0.7750, 0.7596, 0.7741,  ..., 0.7596, 0.7696, 0.7688],
        [0.8095, 0.8031, 0.8091,  ..., 0.8031, 0.8069, 0.8066],
        [0.8365, 0.8396, 0.8365,  ..., 0.8396, 0.8368, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6450],
         [18.1448],
         [17.6585],
         ...,
         [18.1448],
         [17.7424],
         [17.7603]],
        [[ 9.1662],
         [ 9.0443],
         [ 9.1626],
         ...,
         [ 9.0443],
         [ 9.1408],
         [ 9.1362]],
        [[ 8.4524],
         [ 8.2975],
         [ 8.4479],
         ...,
         [ 8.2975],
         [ 8.4203],
         [ 8.4146]],
        ...,
        [[ 7.6432],
         [ 7.4557],
         [ 7.6378],
         ...,
         [ 7.4557],
         [ 7.6046],
         [ 7.5976]],
        [[ 9.8786],
         [ 9.7934],
         [ 9.8760],
         ...,
         [ 9.7934],
         [ 9.8606],
         [ 9.8574]],
        [[11.6527],
         [11.6732],
         [11.6531],
         ...,
         [11.6732],
         [11.6558],
         [11.6564]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9457, 0.9538, 0.9459,  ..., 0.9538, 0.9472, 0.9475],
        [0.8078, 0.8058, 0.8077,  ..., 0.8058, 0.8073, 0.8073],
        [0.7961, 0.7936, 0.7961,  ..., 0.7936, 0.7956, 0.7955],
        ...,
        [0.7830, 0.7799, 0.7829,  ..., 0.7799, 0.7824, 0.7822],
        [0.8193, 0.8180, 0.8193,  ..., 0.8180, 0.8190, 0.8190],
        [0.8482, 0.8485, 0.8482,  ..., 0.8485, 0.8482, 0.8483]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.8115],
         [17.3663],
         [17.7895],
         ...,
         [17.3663],
         [17.6727],
         [17.6518]],
        [[ 9.1233],
         [ 9.2436],
         [ 9.1288],
         ...,
         [ 9.2436],
         [ 9.1589],
         [ 9.1644]],
        [[ 8.3982],
         [ 8.5495],
         [ 8.4052],
         ...,
         [ 8.5495],
         [ 8.4432],
         [ 8.4501]],
        ...,
        [[ 7.5778],
         [ 7.7600],
         [ 7.5863],
         ...,
         [ 7.7600],
         [ 7.6321],
         [ 7.6405]],
        [[ 9.8482],
         [ 9.9344],
         [ 9.8521],
         ...,
         [ 9.9344],
         [ 9.8734],
         [ 9.8773]],
        [[11.6582],
         [11.6468],
         [11.6574],
         ...,
         [11.6468],
         [11.6535],
         [11.6529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9498, 0.9426, 0.9495,  ..., 0.9426, 0.9476, 0.9472],
        [0.8085, 0.8105, 0.8086,  ..., 0.8105, 0.8091, 0.8092],
        [0.7967, 0.7992, 0.7968,  ..., 0.7992, 0.7974, 0.7976],
        ...,
        [0.7834, 0.7863, 0.7835,  ..., 0.7863, 0.7843, 0.7844],
        [0.8203, 0.8217, 0.8204,  ..., 0.8217, 0.8207, 0.8208],
        [0.8497, 0.8496, 0.8497,  ..., 0.8496, 0.8497, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.3357],
         [19.1837],
         [17.4138],
         ...,
         [19.1837],
         [17.8616],
         [17.9450]],
        [[ 9.2526],
         [ 8.8446],
         [ 9.2298],
         ...,
         [ 8.8446],
         [ 9.1109],
         [ 9.0907]],
        [[ 8.5607],
         [ 8.0363],
         [ 8.5323],
         ...,
         [ 8.0363],
         [ 8.3825],
         [ 8.3567]],
        ...,
        [[ 7.7734],
         [ 7.1349],
         [ 7.7393],
         ...,
         [ 7.1349],
         [ 7.5588],
         [ 7.5276]],
        [[ 9.9409],
         [ 9.6629],
         [ 9.9244],
         ...,
         [ 9.6629],
         [ 9.8395],
         [ 9.8254]],
        [[11.6464],
         [11.7465],
         [11.6475],
         ...,
         [11.7465],
         [11.6601],
         [11.6636]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9338, 0.9638, 0.9350,  ..., 0.9638, 0.9423, 0.9437],
        [0.8023, 0.7957, 0.8019,  ..., 0.7957, 0.8000, 0.7997],
        [0.7910, 0.7825, 0.7906,  ..., 0.7825, 0.7881, 0.7877],
        ...,
        [0.7782, 0.7679, 0.7777,  ..., 0.7679, 0.7748, 0.7742],
        [0.8135, 0.8090, 0.8132,  ..., 0.8090, 0.8118, 0.8116],
        [0.8412, 0.8429, 0.8413,  ..., 0.8429, 0.8415, 0.8415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2432],
         [19.6061],
         [17.3401],
         ...,
         [19.6061],
         [17.9006],
         [18.0061]],
        [[ 9.2803],
         [ 8.7793],
         [ 9.2513],
         ...,
         [ 8.7793],
         [ 9.1014],
         [ 9.0762]],
        [[ 8.5952],
         [ 7.9482],
         [ 8.5590],
         ...,
         [ 7.9482],
         [ 8.3703],
         [ 8.3382]],
        ...,
        [[ 7.8147],
         [ 7.0251],
         [ 7.7714],
         ...,
         [ 7.0251],
         [ 7.5441],
         [ 7.5052]],
        [[ 9.9612],
         [ 9.6236],
         [ 9.9399],
         ...,
         [ 9.6236],
         [ 9.8328],
         [ 9.8153]],
        [[11.6457],
         [11.7852],
         [11.6465],
         ...,
         [11.7852],
         [11.6617],
         [11.6664]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9299, 0.9684, 0.9315,  ..., 0.9684, 0.9406, 0.9423],
        [0.8004, 0.7923, 0.7999,  ..., 0.7923, 0.7975, 0.7971],
        [0.7893, 0.7787, 0.7887,  ..., 0.7787, 0.7856, 0.7851],
        ...,
        [0.7766, 0.7637, 0.7759,  ..., 0.7637, 0.7722, 0.7715],
        [0.8115, 0.8060, 0.8111,  ..., 0.8060, 0.8094, 0.8091],
        [0.8389, 0.8411, 0.8389,  ..., 0.8411, 0.8391, 0.8392]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2270],
         [19.6830],
         [17.3271],
         ...,
         [19.6830],
         [17.9076],
         [18.0170]],
        [[ 9.2853],
         [ 8.7682],
         [ 9.2551],
         ...,
         [ 8.7682],
         [ 9.0997],
         [ 9.0736]],
        [[ 8.6014],
         [ 7.9331],
         [ 8.5638],
         ...,
         [ 7.9331],
         [ 8.3682],
         [ 8.3349]],
        ...,
        [[ 7.8222],
         [ 7.0062],
         [ 7.7772],
         ...,
         [ 7.0062],
         [ 7.5415],
         [ 7.5012]],
        [[ 9.9648],
         [ 9.6172],
         [ 9.9427],
         ...,
         [ 9.6172],
         [ 9.8317],
         [ 9.8136]],
        [[11.6456],
         [11.7927],
         [11.6463],
         ...,
         [11.7927],
         [11.6620],
         [11.6669]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9292, 0.9692, 0.9309,  ..., 0.9692, 0.9403, 0.9421],
        [0.8001, 0.7917, 0.7996,  ..., 0.7917, 0.7971, 0.7966],
        [0.7890, 0.7781, 0.7883,  ..., 0.7781, 0.7852, 0.7846],
        ...,
        [0.7763, 0.7630, 0.7756,  ..., 0.7630, 0.7717, 0.7711],
        [0.8111, 0.8055, 0.8108,  ..., 0.8055, 0.8090, 0.8087],
        [0.8385, 0.8409, 0.8385,  ..., 0.8409, 0.8387, 0.8388]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2238],
         [19.6979],
         [17.3246],
         ...,
         [19.6979],
         [17.9089],
         [18.0192]],
        [[ 9.2862],
         [ 8.7661],
         [ 9.2558],
         ...,
         [ 8.7661],
         [ 9.0993],
         [ 9.0731]],
        [[ 8.6026],
         [ 7.9302],
         [ 8.5647],
         ...,
         [ 7.9302],
         [ 8.3678],
         [ 8.3343]],
        ...,
        [[ 7.8236],
         [ 7.0026],
         [ 7.7783],
         ...,
         [ 7.0026],
         [ 7.5410],
         [ 7.5004]],
        [[ 9.9655],
         [ 9.6159],
         [ 9.9433],
         ...,
         [ 9.6159],
         [ 9.8314],
         [ 9.8132]],
        [[11.6456],
         [11.7941],
         [11.6463],
         ...,
         [11.7941],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9308,  ..., 0.9694, 0.9403, 0.9421],
        [0.8000, 0.7916, 0.7995,  ..., 0.7916, 0.7970, 0.7966],
        [0.7889, 0.7780, 0.7883,  ..., 0.7780, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7629, 0.7755,  ..., 0.7629, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8387, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2232],
         [19.7008],
         [17.3241],
         ...,
         [19.7008],
         [17.9092],
         [18.0196]],
        [[ 9.2864],
         [ 8.7657],
         [ 9.2560],
         ...,
         [ 8.7657],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6028],
         [ 7.9296],
         [ 8.5649],
         ...,
         [ 7.9296],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0019],
         [ 7.7785],
         ...,
         [ 7.0019],
         [ 7.5409],
         [ 7.5003]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7944],
         [11.6463],
         ...,
         [11.7944],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9403, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7014],
         [17.3240],
         ...,
         [19.7014],
         [17.9092],
         [18.0196]],
        [[ 9.2864],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6028],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7785],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5003]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9403, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6535],
         [18.0601],
         [17.6652],
         ...,
         [18.0601],
         [17.7376],
         [17.7526]],
        [[ 9.1639],
         [ 9.0636],
         [ 9.1608],
         ...,
         [ 9.0636],
         [ 9.1420],
         [ 9.1382]],
        [[ 8.4495],
         [ 8.3222],
         [ 8.4456],
         ...,
         [ 8.3222],
         [ 8.4219],
         [ 8.4170]],
        ...,
        [[ 7.6398],
         [ 7.4857],
         [ 7.6351],
         ...,
         [ 7.4857],
         [ 7.6065],
         [ 7.6006]],
        [[ 9.8770],
         [ 9.8066],
         [ 9.8748],
         ...,
         [ 9.8066],
         [ 9.8614],
         [ 9.8587]],
        [[11.6529],
         [11.6689],
         [11.6533],
         ...,
         [11.6689],
         [11.6556],
         [11.6561]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9464, 0.9531, 0.9466,  ..., 0.9531, 0.9478, 0.9481],
        [0.8084, 0.8067, 0.8083,  ..., 0.8067, 0.8080, 0.8079],
        [0.7967, 0.7947, 0.7967,  ..., 0.7947, 0.7963, 0.7962],
        ...,
        [0.7836, 0.7811, 0.7835,  ..., 0.7811, 0.7830, 0.7829],
        [0.8200, 0.8188, 0.8199,  ..., 0.8188, 0.8197, 0.8197],
        [0.8488, 0.8491, 0.8488,  ..., 0.8491, 0.8489, 0.8489]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2853],
         [19.4375],
         [17.3737],
         ...,
         [19.4375],
         [17.8834],
         [17.9792]],
        [[ 9.2675],
         [ 8.8044],
         [ 9.2414],
         ...,
         [ 8.8044],
         [ 9.1056],
         [ 9.0825]],
        [[ 8.5793],
         [ 7.9823],
         [ 8.5468],
         ...,
         [ 7.9823],
         [ 8.3757],
         [ 8.3463]],
        ...,
        [[ 7.7958],
         [ 7.0677],
         [ 7.7567],
         ...,
         [ 7.0677],
         [ 7.5505],
         [ 7.5150]],
        [[ 9.9518],
         [ 9.6385],
         [ 9.9328],
         ...,
         [ 9.6385],
         [ 9.8358],
         [ 9.8197]],
        [[11.6460],
         [11.7692],
         [11.6469],
         ...,
         [11.7692],
         [11.6610],
         [11.6651]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9315, 0.9665, 0.9330,  ..., 0.9665, 0.9412, 0.9428],
        [0.8011, 0.7936, 0.8007,  ..., 0.7936, 0.7985, 0.7981],
        [0.7899, 0.7802, 0.7894,  ..., 0.7802, 0.7866, 0.7861],
        ...,
        [0.7772, 0.7653, 0.7765,  ..., 0.7653, 0.7732, 0.7726],
        [0.8122, 0.8071, 0.8119,  ..., 0.8071, 0.8104, 0.8101],
        [0.8398, 0.8418, 0.8398,  ..., 0.8418, 0.8400, 0.8401]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2345],
         [19.6522],
         [17.3332],
         ...,
         [19.6522],
         [17.9044],
         [18.0122]],
        [[ 9.2829],
         [ 8.7726],
         [ 9.2533],
         ...,
         [ 8.7726],
         [ 9.1004],
         [ 9.0747]],
        [[ 8.5985],
         [ 7.9391],
         [ 8.5616],
         ...,
         [ 7.9391],
         [ 8.3691],
         [ 8.3364]],
        ...,
        [[ 7.8187],
         [ 7.0137],
         [ 7.7745],
         ...,
         [ 7.0137],
         [ 7.5426],
         [ 7.5030]],
        [[ 9.9631],
         [ 9.6197],
         [ 9.9414],
         ...,
         [ 9.6197],
         [ 9.8322],
         [ 9.8143]],
        [[11.6456],
         [11.7897],
         [11.6464],
         ...,
         [11.7897],
         [11.6619],
         [11.6667]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9295, 0.9689, 0.9311,  ..., 0.9689, 0.9404, 0.9422],
        [0.8002, 0.7919, 0.7997,  ..., 0.7919, 0.7972, 0.7968],
        [0.7891, 0.7783, 0.7885,  ..., 0.7783, 0.7853, 0.7848],
        ...,
        [0.7764, 0.7633, 0.7757,  ..., 0.7633, 0.7719, 0.7713],
        [0.8113, 0.8057, 0.8109,  ..., 0.8057, 0.8091, 0.8088],
        [0.8386, 0.8410, 0.8386,  ..., 0.8410, 0.8389, 0.8390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2253],
         [19.6921],
         [17.3258],
         ...,
         [19.6921],
         [17.9083],
         [18.0182]],
        [[ 9.2858],
         [ 8.7669],
         [ 9.2555],
         ...,
         [ 8.7669],
         [ 9.0995],
         [ 9.0733]],
        [[ 8.6020],
         [ 7.9313],
         [ 8.5643],
         ...,
         [ 7.9313],
         [ 8.3679],
         [ 8.3346]],
        ...,
        [[ 7.8229],
         [ 7.0040],
         [ 7.7778],
         ...,
         [ 7.0040],
         [ 7.5412],
         [ 7.5008]],
        [[ 9.9652],
         [ 9.6164],
         [ 9.9430],
         ...,
         [ 9.6164],
         [ 9.8315],
         [ 9.8134]],
        [[11.6456],
         [11.7936],
         [11.6463],
         ...,
         [11.7936],
         [11.6621],
         [11.6669]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9292, 0.9693, 0.9308,  ..., 0.9693, 0.9403, 0.9421],
        [0.8000, 0.7916, 0.7995,  ..., 0.7916, 0.7970, 0.7966],
        [0.7889, 0.7780, 0.7883,  ..., 0.7780, 0.7851, 0.7846],
        ...,
        [0.7762, 0.7629, 0.7755,  ..., 0.7629, 0.7717, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8387, 0.8388]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2235],
         [19.6997],
         [17.3243],
         ...,
         [19.6997],
         [17.9091],
         [18.0194]],
        [[ 9.2863],
         [ 8.7659],
         [ 9.2559],
         ...,
         [ 8.7659],
         [ 9.0993],
         [ 9.0731]],
        [[ 8.6027],
         [ 7.9298],
         [ 8.5648],
         ...,
         [ 7.9298],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8237],
         [ 7.0021],
         [ 7.7784],
         ...,
         [ 7.0021],
         [ 7.5409],
         [ 7.5003]],
        [[ 9.9656],
         [ 9.6158],
         [ 9.9433],
         ...,
         [ 9.6158],
         [ 9.8314],
         [ 9.8132]],
        [[11.6456],
         [11.7943],
         [11.6463],
         ...,
         [11.7943],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9403, 0.9421],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7629, 0.7755,  ..., 0.7629, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8387, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2232],
         [19.7012],
         [17.3241],
         ...,
         [19.7012],
         [17.9092],
         [18.0196]],
        [[ 9.2864],
         [ 8.7657],
         [ 9.2560],
         ...,
         [ 8.7657],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6028],
         [ 7.9295],
         [ 8.5649],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0018],
         [ 7.7785],
         ...,
         [ 7.0018],
         [ 7.5409],
         [ 7.5003]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9403, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6028],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5003]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2231],
         [19.7015],
         [17.3240],
         ...,
         [19.7015],
         [17.9092],
         [18.0197]],
        [[ 9.2865],
         [ 8.7656],
         [ 9.2560],
         ...,
         [ 8.7656],
         [ 9.0993],
         [ 9.0730]],
        [[ 8.6029],
         [ 7.9295],
         [ 8.5650],
         ...,
         [ 7.9295],
         [ 8.3677],
         [ 8.3342]],
        ...,
        [[ 7.8239],
         [ 7.0017],
         [ 7.7786],
         ...,
         [ 7.0017],
         [ 7.5409],
         [ 7.5002]],
        [[ 9.9657],
         [ 9.6157],
         [ 9.9434],
         ...,
         [ 9.6157],
         [ 9.8314],
         [ 9.8131]],
        [[11.6456],
         [11.7945],
         [11.6463],
         ...,
         [11.7945],
         [11.6621],
         [11.6670]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9291, 0.9694, 0.9307,  ..., 0.9694, 0.9402, 0.9420],
        [0.8000, 0.7915, 0.7995,  ..., 0.7915, 0.7970, 0.7965],
        [0.7889, 0.7779, 0.7883,  ..., 0.7779, 0.7851, 0.7845],
        ...,
        [0.7762, 0.7628, 0.7755,  ..., 0.7628, 0.7716, 0.7710],
        [0.8111, 0.8054, 0.8107,  ..., 0.8054, 0.8089, 0.8086],
        [0.8384, 0.8408, 0.8384,  ..., 0.8408, 0.8386, 0.8387]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.1690],
         [33.5102],
         [52.1846],
         ...,
         [21.4599],
         [26.0119],
         [69.3910]],
        [[10.8719],
         [24.1198],
         [35.5517],
         ...,
         [12.8572],
         [15.3383],
         [57.7956]],
        [[10.4328],
         [23.1578],
         [33.9022],
         ...,
         [12.0671],
         [14.3675],
         [56.5022]],
        ...,
        [[ 9.9123],
         [22.0169],
         [31.9608],
         ...,
         [11.1537],
         [13.2475],
         [54.9369]],
        [[11.2937],
         [25.0435],
         [37.1459],
         ...,
         [13.6324],
         [16.2927],
         [59.0160]],
        [[12.2834],
         [27.2087],
         [40.9210],
         ...,
         [15.5124],
         [18.6142],
         [61.8011]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.8999, 1.1983, 1.5020,  ..., 1.0023, 1.0763, 1.7818],
        [0.8300, 1.0455, 1.2315,  ..., 0.8623, 0.9027, 1.5932],
        [0.8229, 1.0299, 1.2046,  ..., 0.8495, 0.8869, 1.5722],
        ...,
        [0.8144, 1.0113, 1.1730,  ..., 0.8346, 0.8687, 1.5467],
        [0.8369, 1.0605, 1.2574,  ..., 0.8749, 0.9182, 1.6131],
        [0.8530, 1.0958, 1.3188,  ..., 0.9055, 0.9560, 1.6584]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.1893],
         [14.8971],
         [13.6863],
         ...,
         [15.4372],
         [37.0151],
         [18.7296]],
        [[ 9.3274],
         [10.5452],
         [11.7185],
         ...,
         [10.2219],
         [25.9262],
         [ 8.8385]],
        [[ 8.7120],
         [10.1037],
         [11.4955],
         ...,
         [ 9.7134],
         [24.8083],
         [ 8.0539]],
        ...,
        [[ 8.0043],
         [ 9.5813],
         [11.2246],
         ...,
         [ 9.1172],
         [23.4875],
         [ 7.1762]],
        [[ 9.9341],
         [10.9699],
         [11.9283],
         ...,
         [10.7151],
         [27.0030],
         [ 9.6306]],
        [[11.4162],
         [11.9686],
         [12.4045],
         ...,
         [11.8890],
         [29.5401],
         [11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9165, 0.8955, 0.8758,  ..., 0.9043, 1.2553, 0.9578],
        [0.8049, 0.8247, 0.8438,  ..., 0.8195, 1.0749, 0.7970],
        [0.7949, 0.8176, 0.8402,  ..., 0.8112, 1.0567, 0.7842],
        ...,
        [0.7834, 0.8091, 0.8358,  ..., 0.8015, 1.0352, 0.7699],
        [0.8148, 0.8316, 0.8472,  ..., 0.8275, 1.0924, 0.8099],
        [0.8389, 0.8479, 0.8550,  ..., 0.8466, 1.1337, 0.8425]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4241],
         [17.1193],
         [18.8619],
         ...,
         [15.6242],
         [33.4282],
         [18.6067]],
        [[ 9.2499],
         [ 9.3189],
         [ 8.7701],
         ...,
         [ 9.9719],
         [23.4109],
         [ 8.9478]],
        [[ 8.6153],
         [ 8.6431],
         [ 7.9769],
         ...,
         [ 9.4327],
         [22.4011],
         [ 8.1725]],
        ...,
        [[ 7.8879],
         [ 7.8721],
         [ 7.0914],
         ...,
         [ 8.8038],
         [21.2080],
         [ 7.3030]],
        [[ 9.8772],
         [ 9.9897],
         [ 9.5722],
         ...,
         [10.4970],
         [24.3836],
         [ 9.7287]],
        [[11.4160],
         [11.6456],
         [11.6115],
         ...,
         [11.7557],
         [26.6754],
         [11.7014]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9188, 0.9301, 0.9585,  ..., 0.9058, 1.1954, 0.9543],
        [0.8021, 0.8033, 0.7943,  ..., 0.8139, 1.0325, 0.7972],
        [0.7918, 0.7923, 0.7814,  ..., 0.8051, 1.0160, 0.7846],
        ...,
        [0.7800, 0.7797, 0.7670,  ..., 0.7949, 0.9966, 0.7705],
        [0.8123, 0.8142, 0.8074,  ..., 0.8224, 1.0483, 0.8099],
        [0.8374, 0.8411, 0.8405,  ..., 0.8429, 1.0856, 0.8420]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.5070],
         [18.1173],
         [19.1626],
         ...,
         [15.4320],
         [31.1731],
         [18.0009]],
        [[ 9.2233],
         [ 9.0505],
         [ 8.7500],
         ...,
         [ 9.9494],
         [21.6970],
         [ 9.0774]],
        [[ 8.5821],
         [ 8.3054],
         [ 7.9408],
         ...,
         [ 9.4232],
         [20.7452],
         [ 8.3398]],
        ...,
        [[ 7.8479],
         [ 7.4653],
         [ 7.0398],
         ...,
         [ 8.8087],
         [19.6217],
         [ 7.5070]],
        [[ 9.8577],
         [ 9.7977],
         [ 9.5701],
         ...,
         [10.4612],
         [22.6145],
         [ 9.8162]],
        [[11.4163],
         [11.6718],
         [11.6621],
         ...,
         [11.6858],
         [24.7786],
         [11.6661]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9189, 0.9451, 0.9621,  ..., 0.9014, 1.1574, 0.9432],
        [0.8004, 0.7976, 0.7927,  ..., 0.8122, 1.0033, 0.7980],
        [0.7900, 0.7855, 0.7796,  ..., 0.8037, 0.9878, 0.7860],
        ...,
        [0.7780, 0.7718, 0.7649,  ..., 0.7937, 0.9695, 0.7725],
        [0.8107, 0.8098, 0.8061,  ..., 0.8205, 1.0182, 0.8101],
        [0.8361, 0.8402, 0.8401,  ..., 0.8405, 1.0534, 0.8401]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.7245],
         [19.7219],
         [19.0889],
         ...,
         [14.8845],
         [26.9881],
         [16.9589]],
        [[ 9.1566],
         [ 8.7627],
         [ 8.8604],
         ...,
         [ 9.9486],
         [17.2196],
         [ 9.3718]],
        [[ 8.4986],
         [ 7.9255],
         [ 8.0573],
         ...,
         [ 9.4646],
         [16.2880],
         [ 8.7084]],
        ...,
        [[ 7.7473],
         [ 6.9968],
         [ 7.1610],
         ...,
         [ 8.8965],
         [15.2014],
         [ 7.9499]],
        [[ 9.8092],
         [ 9.6140],
         [ 9.6727],
         ...,
         [10.4174],
         [18.1270],
         [10.0290]],
        [[11.4186],
         [11.7965],
         [11.7384],
         ...,
         [11.5315],
         [20.3021],
         [11.6471]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9209, 0.9696, 0.9593,  ..., 0.8909, 1.0878, 0.9247],
        [0.7978, 0.7914, 0.7930,  ..., 0.8107, 0.9289, 0.8013],
        [0.7871, 0.7778, 0.7799,  ..., 0.8028, 0.9138, 0.7905],
        ...,
        [0.7749, 0.7627, 0.7653,  ..., 0.7936, 0.8961, 0.7782],
        [0.8084, 0.8052, 0.8062,  ..., 0.8183, 0.9437, 0.8120],
        [0.8346, 0.8407, 0.8398,  ..., 0.8364, 0.9791, 0.8383]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.8085],
         [19.1730],
         [18.2153],
         ...,
         [16.9681],
         [26.6225],
         [17.0763]],
        [[ 9.1324],
         [ 8.8464],
         [ 9.0287],
         ...,
         [ 9.1116],
         [16.0098],
         [ 9.3328]],
        [[ 8.4681],
         [ 8.0386],
         [ 8.2774],
         ...,
         [ 8.4366],
         [15.0330],
         [ 8.6603]],
        ...,
        [[ 7.7105],
         [ 7.1379],
         [ 7.4312],
         ...,
         [ 7.6679],
         [13.9031],
         [ 7.8926]],
        [[ 9.7919],
         [ 9.6640],
         [ 9.7827],
         ...,
         [ 9.7827],
         [16.9679],
         [10.0000]],
        [[11.4204],
         [11.7456],
         [11.6770],
         ...,
         [11.4435],
         [19.2898],
         [11.6458]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9253, 0.9637, 0.9481,  ..., 0.9279, 1.0849, 0.9296],
        [0.8004, 0.7958, 0.7987,  ..., 0.8001, 0.9123, 0.8037],
        [0.7896, 0.7826, 0.7865,  ..., 0.7891, 0.8964, 0.7927],
        ...,
        [0.7773, 0.7680, 0.7727,  ..., 0.7766, 0.8780, 0.7802],
        [0.8111, 0.8091, 0.8110,  ..., 0.8110, 0.9279, 0.8145],
        [0.8376, 0.8429, 0.8418,  ..., 0.8380, 0.9656, 0.8413]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.8941],
         [18.3239],
         [17.5596],
         ...,
         [18.9300],
         [26.4936],
         [17.3839]],
        [[ 9.1096],
         [ 9.0052],
         [ 9.1891],
         ...,
         [ 8.7650],
         [15.2840],
         [ 9.2385]],
        [[ 8.4391],
         [ 8.2472],
         [ 8.4812],
         ...,
         [ 7.9682],
         [14.2779],
         [ 8.5431]],
        ...,
        [[ 7.6751],
         [ 7.3944],
         [ 7.6780],
         ...,
         [ 7.0791],
         [13.1207],
         [ 7.7523]],
        [[ 9.7759],
         [ 9.7669],
         [ 9.8950],
         ...,
         [ 9.5713],
         [16.2758],
         [ 9.9306]],
        [[11.4236],
         [11.6832],
         [11.6504],
         ...,
         [11.6226],
         [18.6978],
         [11.6470]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9262, 0.9494, 0.9370,  ..., 0.9593, 1.0823, 0.9341],
        [0.7995, 0.7978, 0.8008,  ..., 0.7939, 0.9000, 0.8016],
        [0.7886, 0.7855, 0.7893,  ..., 0.7810, 0.8836, 0.7903],
        ...,
        [0.7762, 0.7716, 0.7763,  ..., 0.7665, 0.8648, 0.7775],
        [0.8104, 0.8102, 0.8123,  ..., 0.8071, 0.9161, 0.8129],
        [0.8372, 0.8414, 0.8409,  ..., 0.8404, 0.9555, 0.8408]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1228],
         [17.0544],
         [16.8406],
         ...,
         [20.0658],
         [25.6515],
         [17.9801]],
        [[ 9.0560],
         [ 9.3399],
         [ 9.4129],
         ...,
         [ 8.7165],
         [14.2727],
         [ 9.0823]],
        [[ 8.3694],
         [ 8.6691],
         [ 8.7589],
         ...,
         [ 7.8617],
         [13.2736],
         [ 8.3461]],
        ...,
        [[ 7.5891],
         [ 7.9031],
         [ 8.0100],
         ...,
         [ 6.9164],
         [12.1303],
         [ 7.5147]],
        [[ 9.7399],
         [10.0053],
         [10.0599],
         ...,
         [ 9.5880],
         [15.2618],
         [ 9.8196]],
        [[11.4372],
         [11.6460],
         [11.6495],
         ...,
         [11.8318],
         [17.6935],
         [11.6652]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9256, 0.9245, 0.9210,  ..., 0.9735, 1.0643, 0.9396],
        [0.7944, 0.7990, 0.8002,  ..., 0.7889, 0.8793, 0.7949],
        [0.7833, 0.7881, 0.7896,  ..., 0.7750, 0.8630, 0.7829],
        ...,
        [0.7706, 0.7757, 0.7774,  ..., 0.7596, 0.8444, 0.7694],
        [0.8056, 0.8099, 0.8108,  ..., 0.8031, 0.8954, 0.8068],
        [0.8332, 0.8366, 0.8366,  ..., 0.8396, 0.9349, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.3511],
         [15.7591],
         [16.5755],
         ...,
         [18.2286],
         [23.6962],
         [18.9793]],
        [[ 9.0117],
         [ 9.9085],
         [ 9.5125],
         ...,
         [ 9.0258],
         [13.5202],
         [ 8.8792]],
        [[ 8.3097],
         [ 9.3554],
         [ 8.8806],
         ...,
         [ 8.2736],
         [12.6130],
         [ 8.0823]],
        ...,
        [[ 7.5140],
         [ 8.7116],
         [ 8.1543],
         ...,
         [ 7.4266],
         [11.5711],
         [ 7.1919]],
        [[ 9.7123],
         [10.4482],
         [10.1358],
         ...,
         [ 9.7807],
         [14.4157],
         [ 9.6845]],
        [[11.4571],
         [11.7453],
         [11.6595],
         ...,
         [11.6777],
         [16.6071],
         [11.7294]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9352, 0.9093, 0.9226,  ..., 0.9495, 1.0384, 0.9617],
        [0.7996, 0.8142, 0.8077,  ..., 0.7998, 0.8729, 0.7974],
        [0.7882, 0.8052, 0.7975,  ..., 0.7876, 0.8582, 0.7845],
        ...,
        [0.7752, 0.7947, 0.7857,  ..., 0.7738, 0.8412, 0.7700],
        [0.8110, 0.8230, 0.8179,  ..., 0.8121, 0.8875, 0.8105],
        [0.8394, 0.8441, 0.8427,  ..., 0.8430, 0.9231, 0.8438]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.0658],
         [58.3195],
         [15.0751],
         ...,
         [33.6776],
         [20.0658],
         [20.0658]],
        [[ 8.7165],
         [50.8903],
         [10.4328],
         ...,
         [27.8486],
         [ 8.7165],
         [ 8.7165]],
        [[ 7.8617],
         [50.0391],
         [ 9.9681],
         ...,
         [27.2011],
         [ 7.8617],
         [ 7.8617]],
        ...,
        [[ 6.9164],
         [49.0023],
         [ 9.4200],
         ...,
         [26.4183],
         [ 6.9164],
         [ 6.9164]],
        [[ 9.5880],
         [51.6890],
         [10.8811],
         ...,
         [28.4601],
         [ 9.5880],
         [ 9.5880]],
        [[11.8318],
         [53.4962],
         [11.9395],
         ...,
         [29.8574],
         [11.8318],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 1.5957, 0.8923,  ..., 1.1949, 0.9735, 0.9735],
        [0.7889, 1.4749, 0.8168,  ..., 1.1001, 0.7889, 0.7889],
        [0.7750, 1.4610, 0.8093,  ..., 1.0896, 0.7750, 0.7750],
        ...,
        [0.7596, 1.4441, 0.8003,  ..., 1.0768, 0.7596, 0.7596],
        [0.8031, 1.4878, 0.8241,  ..., 1.1100, 0.8031, 0.8031],
        [0.8396, 1.5172, 0.8413,  ..., 1.1328, 0.8396, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7406],
         [14.4616],
         [16.2415],
         ...,
         [15.3696],
         [20.3352],
         [19.1683]],
        [[ 8.9448],
         [12.4091],
         [ 9.6555],
         ...,
         [10.1731],
         [12.5465],
         [ 8.8472]],
        [[ 8.2178],
         [12.1762],
         [ 9.0536],
         ...,
         [ 9.6666],
         [11.8185],
         [ 8.0397]],
        ...,
        [[ 7.3971],
         [11.8932],
         [ 8.3583],
         ...,
         [ 9.0727],
         [10.9733],
         [ 7.1391]],
        [[ 9.6729],
         [12.6281],
         [10.2468],
         ...,
         [10.6644],
         [13.2584],
         [ 9.6645]],
        [[11.4963],
         [13.1251],
         [11.6828],
         ...,
         [11.8340],
         [14.9755],
         [11.7452]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9404, 0.8871, 0.9161,  ..., 0.9019, 0.9826, 0.9637],
        [0.7974, 0.8537, 0.8089,  ..., 0.8174, 0.8560, 0.7958],
        [0.7856, 0.8499, 0.7992,  ..., 0.8091, 0.8441, 0.7827],
        ...,
        [0.7722, 0.8453, 0.7878,  ..., 0.7995, 0.8304, 0.7680],
        [0.8092, 0.8573, 0.8186,  ..., 0.8254, 0.8675, 0.8091],
        [0.8389, 0.8654, 0.8419,  ..., 0.8444, 0.8955, 0.8429]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.4241],
         [19.1066],
         [15.8628],
         ...,
         [14.5539],
         [15.9334],
         [20.0658]],
        [[ 8.8570],
         [18.5137],
         [ 9.8485],
         ...,
         [12.8013],
         [10.8234],
         [ 8.7165]],
        [[ 8.0893],
         [18.4416],
         [ 9.2842],
         ...,
         [12.5996],
         [10.3175],
         [ 7.8617]],
        ...,
        [[ 7.2283],
         [18.3525],
         [ 8.6285],
         ...,
         [12.3536],
         [ 9.7224],
         [ 6.9164]],
        [[ 9.6303],
         [18.5805],
         [10.3998],
         ...,
         [12.9904],
         [11.3125],
         [ 9.5880]],
        [[11.5841],
         [18.7288],
         [11.7283],
         ...,
         [13.4177],
         [12.4713],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9468, 0.9579, 0.9051,  ..., 0.8839, 0.9063, 0.9735],
        [0.7912, 0.9483, 0.8073,  ..., 0.8553, 0.8232, 0.7889],
        [0.7787, 0.9471, 0.7981,  ..., 0.8521, 0.8149, 0.7750],
        ...,
        [0.7647, 0.9456, 0.7875,  ..., 0.8481, 0.8053, 0.7596],
        [0.8038, 0.9493, 0.8163,  ..., 0.8584, 0.8311, 0.8031],
        [0.8355, 0.9518, 0.8379,  ..., 0.8654, 0.8500, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.3536],
         [15.0429],
         [16.4208],
         ...,
         [14.4356],
         [15.5307],
         [20.0658]],
        [[ 8.8753],
         [13.8923],
         [ 9.5761],
         ...,
         [11.7405],
         [10.8312],
         [ 8.7165]],
        [[ 8.1119],
         [13.7561],
         [ 8.9577],
         ...,
         [11.4440],
         [10.3586],
         [ 7.8617]],
        ...,
        [[ 7.2551],
         [13.5889],
         [ 8.2454],
         ...,
         [11.0863],
         [ 9.8006],
         [ 6.9164]],
        [[ 9.6437],
         [14.0192],
         [10.1848],
         ...,
         [12.0211],
         [11.2866],
         [ 9.5880]],
        [[11.5830],
         [14.3034],
         [11.6686],
         ...,
         [12.6642],
         [12.3604],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9457, 0.8918, 0.9142,  ..., 0.8819, 0.8997, 0.9735],
        [0.7915, 0.8731, 0.8029,  ..., 0.8381, 0.8233, 0.7889],
        [0.7791, 0.8709, 0.7928,  ..., 0.8333, 0.8156, 0.7750],
        ...,
        [0.7651, 0.8682, 0.7812,  ..., 0.8275, 0.8065, 0.7596],
        [0.8040, 0.8752, 0.8128,  ..., 0.8427, 0.8307, 0.8031],
        [0.8355, 0.8798, 0.8369,  ..., 0.8531, 0.8482, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5024],
         [16.0463],
         [16.8752],
         ...,
         [14.5701],
         [15.5015],
         [19.6169]],
        [[ 8.8803],
         [15.3623],
         [ 9.4007],
         ...,
         [12.8539],
         [10.2825],
         [ 8.7777]],
        [[ 8.1090],
         [15.2797],
         [ 8.7439],
         ...,
         [12.6560],
         [ 9.7730],
         [ 7.9460]],
        ...,
        [[ 7.2441],
         [15.1778],
         [ 7.9922],
         ...,
         [12.4147],
         [ 9.1756],
         [ 7.0224]],
        [[ 9.6575],
         [15.4390],
         [10.0507],
         ...,
         [13.0393],
         [10.7763],
         [ 9.6227]],
        [[11.6215],
         [15.6095],
         [11.6487],
         ...,
         [13.4580],
         [11.9517],
         [11.7862]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9503, 0.9104, 0.9239,  ..., 0.8864, 0.9015, 0.9685],
        [0.7938, 0.8993, 0.8023,  ..., 0.8585, 0.8166, 0.7922],
        [0.7813, 0.8979, 0.7916,  ..., 0.8553, 0.8084, 0.7786],
        ...,
        [0.7672, 0.8963, 0.7794,  ..., 0.8513, 0.7986, 0.7636],
        [0.8065, 0.9005, 0.8129,  ..., 0.8615, 0.8247, 0.8059],
        [0.8384, 0.9033, 0.8389,  ..., 0.8683, 0.8438, 0.8411]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9324],
         [45.6452],
         [20.0658],
         ...,
         [45.8507],
         [20.0658],
         [15.9639]],
        [[ 9.0937],
         [38.1263],
         [ 8.7165],
         ...,
         [38.3476],
         [ 8.7165],
         [ 9.7931]],
        [[ 8.3606],
         [37.2862],
         [ 7.8617],
         ...,
         [37.5087],
         [ 7.8617],
         [ 9.2183]],
        ...,
        [[ 7.5322],
         [36.2691],
         [ 6.9164],
         ...,
         [36.4928],
         [ 6.9164],
         [ 8.5516]],
        [[ 9.8275],
         [38.9187],
         [ 9.5880],
         ...,
         [39.1388],
         [ 9.5880],
         [10.3556]],
        [[11.6631],
         [40.7261],
         [11.8318],
         ...,
         [40.9430],
         [11.8318],
         [11.7137]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9388, 1.3895, 0.9735,  ..., 1.3929, 0.9735, 0.9068],
        [0.7950, 1.2672, 0.7889,  ..., 1.2708, 0.7889, 0.8064],
        [0.7831, 1.2536, 0.7750,  ..., 1.2572, 0.7750, 0.7971],
        ...,
        [0.7696, 1.2370, 0.7596,  ..., 1.2407, 0.7596, 0.7862],
        [0.8070, 1.2801, 0.8031,  ..., 1.2837, 0.8031, 0.8156],
        [0.8368, 1.3095, 0.8396,  ..., 1.3131, 0.8396, 0.8377]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.4254],
         [17.4569],
         [17.1843],
         ...,
         [15.3979],
         [15.6419],
         [19.0771]],
        [[ 8.9030],
         [17.1088],
         [ 9.2985],
         ...,
         [14.4586],
         [ 9.9817],
         [ 8.8624]],
        [[ 8.1364],
         [17.0662],
         [ 8.6178],
         ...,
         [14.3464],
         [ 9.4418],
         [ 8.0600]],
        ...,
        [[ 7.2761],
         [17.0134],
         [ 7.8418],
         ...,
         [14.2084],
         [ 8.8121],
         [ 7.1643]],
        [[ 9.6747],
         [17.1482],
         [ 9.9746],
         ...,
         [14.5630],
         [10.5075],
         [ 9.6740]],
        [[11.6225],
         [17.2356],
         [11.6455],
         ...,
         [14.7960],
         [11.7679],
         [11.7375]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9364, 0.9319,  ..., 0.9029, 0.9069, 0.9627],
        [0.7972, 0.9307, 0.8037,  ..., 0.8876, 0.8148, 0.7966],
        [0.7848, 0.9300, 0.7926,  ..., 0.8858, 0.8060, 0.7835],
        ...,
        [0.7708, 0.9292, 0.7800,  ..., 0.8835, 0.7958, 0.7690],
        [0.8098, 0.9314, 0.8147,  ..., 0.8893, 0.8233, 0.8098],
        [0.8415, 0.9328, 0.8419,  ..., 0.8931, 0.8438, 0.8433]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.4551],
         [18.0963],
         [19.1053],
         ...,
         [17.7788],
         [16.3239],
         [17.2289]],
        [[ 8.9780],
         [17.7236],
         [ 8.8576],
         ...,
         [17.4356],
         [ 9.3815],
         [ 9.2847]],
        [[ 8.2118],
         [17.6781],
         [ 8.0536],
         ...,
         [17.3936],
         [ 8.7598],
         [ 8.6006]],
        ...,
        [[ 7.3512],
         [17.6216],
         [ 7.1565],
         ...,
         [17.3415],
         [ 8.0452],
         [ 7.8213]],
        [[ 9.7486],
         [17.7658],
         [ 9.6710],
         ...,
         [17.4745],
         [ 9.9946],
         [ 9.9644]],
        [[11.6913],
         [17.8593],
         [11.7398],
         ...,
         [17.5606],
         [11.4929],
         [11.6456]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9524, 0.9466, 0.9630,  ..., 0.9414, 0.9178, 0.9325],
        [0.7983, 0.9405, 0.7963,  ..., 0.9359, 0.8049, 0.8033],
        [0.7858, 0.9398, 0.7833,  ..., 0.9352, 0.7947, 0.7922],
        ...,
        [0.7718, 0.9389, 0.7687,  ..., 0.9343, 0.7831, 0.7795],
        [0.8108, 0.9412, 0.8096,  ..., 0.9365, 0.8148, 0.8143],
        [0.8424, 0.9427, 0.8432,  ..., 0.9379, 0.8392, 0.8417]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0404],
         [15.9413],
         [18.8407],
         ...,
         [15.9664],
         [16.2896],
         [17.2998]],
        [[ 9.0682],
         [15.2220],
         [ 8.9038],
         ...,
         [15.2557],
         [ 9.3305],
         [ 9.2632]],
        [[ 8.3280],
         [15.1352],
         [ 8.1148],
         ...,
         [15.1699],
         [ 8.7086],
         [ 8.5739]],
        ...,
        [[ 7.4928],
         [15.0283],
         [ 7.2321],
         ...,
         [15.0642],
         [ 7.9940],
         [ 7.7893]],
        [[ 9.8098],
         [15.3025],
         [ 9.7002],
         ...,
         [15.3353],
         [ 9.9441],
         [ 9.9487]],
        [[11.6680],
         [15.4818],
         [11.7185],
         ...,
         [15.5124],
         [11.4445],
         [11.6461]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9473, 0.9132, 0.9603,  ..., 0.9136, 0.9188, 0.9353],
        [0.8014, 0.9015, 0.7987,  ..., 0.9020, 0.8056, 0.8046],
        [0.7893, 0.9001, 0.7859,  ..., 0.9006, 0.7955, 0.7933],
        ...,
        [0.7758, 0.8983, 0.7715,  ..., 0.8989, 0.7839, 0.7806],
        [0.8134, 0.9028, 0.8117,  ..., 0.9033, 0.8156, 0.8157],
        [0.8437, 0.9057, 0.8445,  ..., 0.9062, 0.8400, 0.8433]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0484],
         [15.7262],
         [19.8866],
         ...,
         [15.9699],
         [16.1832],
         [16.6222]],
        [[ 9.0663],
         [14.9288],
         [ 8.7401],
         ...,
         [15.2603],
         [ 9.3817],
         [ 9.4942]],
        [[ 8.3256],
         [14.8329],
         [ 7.8943],
         ...,
         [15.1747],
         [ 8.7694],
         [ 8.8582]],
        ...,
        [[ 7.4899],
         [14.7148],
         [ 6.9576],
         ...,
         [15.0691],
         [ 8.0647],
         [ 8.1278]],
        [[ 9.8085],
         [15.0178],
         [ 9.6011],
         ...,
         [15.3398],
         [ 9.9848],
         [10.1217]],
        [[11.6684],
         [15.2162],
         [11.8131],
         ...,
         [15.5166],
         [11.4566],
         [11.6572]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9416, 0.9038, 0.9715,  ..., 0.9078, 0.9112, 0.9184],
        [0.7955, 0.8908, 0.7902,  ..., 0.8962, 0.8006, 0.8024],
        [0.7834, 0.8893, 0.7764,  ..., 0.8948, 0.7906, 0.7921],
        ...,
        [0.7698, 0.8873, 0.7612,  ..., 0.8931, 0.7792, 0.7802],
        [0.8075, 0.8923, 0.8042,  ..., 0.8975, 0.8104, 0.8126],
        [0.8378, 0.8955, 0.8402,  ..., 0.9004, 0.8344, 0.8376]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0495],
         [15.6982],
         [20.0365],
         ...,
         [15.9704],
         [16.1695],
         [16.5373]],
        [[ 9.0661],
         [14.8899],
         [ 8.7203],
         ...,
         [15.2610],
         [ 9.3887],
         [ 9.5278]],
        [[ 8.3253],
         [14.7928],
         [ 7.8670],
         ...,
         [15.1754],
         [ 8.7777],
         [ 8.8992]],
        ...,
        [[ 7.4895],
         [14.6731],
         [ 6.9230],
         ...,
         [15.0698],
         [ 8.0743],
         [ 8.1763]],
        [[ 9.8083],
         [14.9801],
         [ 9.5901],
         ...,
         [15.3404],
         [ 9.9905],
         [10.1476]],
        [[11.6684],
         [15.1811],
         [11.8287],
         ...,
         [15.5172],
         [11.4585],
         [11.6615]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9408, 0.9026, 0.9732,  ..., 0.9070, 0.9103, 0.9163],
        [0.7947, 0.8895, 0.7891,  ..., 0.8955, 0.8000, 0.8022],
        [0.7827, 0.8879, 0.7752,  ..., 0.8941, 0.7900, 0.7920],
        ...,
        [0.7691, 0.8859, 0.7599,  ..., 0.8924, 0.7786, 0.7803],
        [0.8068, 0.8909, 0.8033,  ..., 0.8968, 0.8098, 0.8123],
        [0.8371, 0.8942, 0.8397,  ..., 0.8997, 0.8336, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6937],
         [20.0609],
         ...,
         [15.9704],
         [16.1673],
         [16.5238]],
        [[ 9.0660],
         [14.8836],
         [ 8.7171],
         ...,
         [15.2611],
         [ 9.3898],
         [ 9.5333]],
        [[ 8.3253],
         [14.7863],
         [ 7.8626],
         ...,
         [15.1755],
         [ 8.7790],
         [ 8.9058]],
        ...,
        [[ 7.4894],
         [14.6664],
         [ 6.9175],
         ...,
         [15.0699],
         [ 8.0758],
         [ 8.1841]],
        [[ 9.8083],
         [14.9740],
         [ 9.5883],
         ...,
         [15.3405],
         [ 9.9914],
         [10.1518]],
        [[11.6684],
         [15.1755],
         [11.8312],
         ...,
         [15.5173],
         [11.4588],
         [11.6622]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9734,  ..., 0.9069, 0.9101, 0.9159],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7826, 0.8877, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7690, 0.8857, 0.7597,  ..., 0.8923, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8967, 0.8097, 0.8123],
        [0.8369, 0.8940, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6929],
         [20.0650],
         ...,
         [15.9704],
         [16.1669],
         [16.5215]],
        [[ 9.0660],
         [14.8826],
         [ 8.7166],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5342]],
        [[ 8.3252],
         [14.7852],
         [ 7.8619],
         ...,
         [15.1755],
         [ 8.7792],
         [ 8.9069]],
        ...,
        [[ 7.4894],
         [14.6653],
         [ 6.9166],
         ...,
         [15.0699],
         [ 8.0761],
         [ 8.1854]],
        [[ 9.8083],
         [14.9730],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1525]],
        [[11.6684],
         [15.1746],
         [11.8317],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9159],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7690, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0656],
         ...,
         [15.9704],
         [16.1668],
         [16.5212]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6651],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0761],
         [ 8.1857]],
        [[ 9.8083],
         [14.9729],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8317],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7566],
         [16.2897],
         [18.1448],
         ...,
         [16.0930],
         [15.8629],
         [17.5680]],
        [[ 9.1372],
         [15.6827],
         [ 9.0443],
         ...,
         [15.4244],
         [ 9.4875],
         [ 9.1868]],
        [[ 8.4157],
         [15.6092],
         [ 8.2975],
         ...,
         [15.3435],
         [ 8.9026],
         [ 8.4783]],
        ...,
        [[ 7.5990],
         [15.5184],
         [ 7.4557],
         ...,
         [15.2438],
         [ 8.2265],
         [ 7.6745]],
        [[ 9.8580],
         [15.7509],
         [ 9.7934],
         ...,
         [15.4994],
         [10.0615],
         [ 9.8933]],
        [[11.6562],
         [15.9025],
         [11.6732],
         ...,
         [15.6661],
         [11.4541],
         [11.6506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9475, 0.9236, 0.9538,  ..., 0.9204, 0.9167, 0.9444],
        [0.8073, 0.9137, 0.8058,  ..., 0.9095, 0.8130, 0.8081],
        [0.7955, 0.9125, 0.7936,  ..., 0.9082, 0.8035, 0.7966],
        ...,
        [0.7823, 0.9111, 0.7799,  ..., 0.9066, 0.7925, 0.7835],
        [0.8190, 0.9149, 0.8180,  ..., 0.9108, 0.8223, 0.8196],
        [0.8483, 0.9173, 0.8485,  ..., 0.9135, 0.8450, 0.8482]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0143],
         [15.7588],
         [19.8169],
         ...,
         [15.9848],
         [16.1307],
         [16.6347]],
        [[ 9.0742],
         [14.9738],
         [ 8.7495],
         ...,
         [15.2803],
         [ 9.4006],
         [ 9.4893]],
        [[ 8.3358],
         [14.8793],
         [ 7.9074],
         ...,
         [15.1953],
         [ 8.7928],
         [ 8.8523]],
        ...,
        [[ 7.5022],
         [14.7630],
         [ 6.9740],
         ...,
         [15.0904],
         [ 8.0928],
         [ 8.1208]],
        [[ 9.8140],
         [15.0615],
         [ 9.6064],
         ...,
         [15.3592],
         [ 9.9990],
         [10.1180]],
        [[11.6668],
         [15.2568],
         [11.8060],
         ...,
         [15.5348],
         [11.4576],
         [11.6567]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9414, 0.9047, 0.9707,  ..., 0.9084, 0.9107, 0.9189],
        [0.7960, 0.8919, 0.7907,  ..., 0.8969, 0.8013, 0.8027],
        [0.7839, 0.8904, 0.7770,  ..., 0.8955, 0.7914, 0.7923],
        ...,
        [0.7704, 0.8885, 0.7618,  ..., 0.8938, 0.7800, 0.7805],
        [0.8080, 0.8933, 0.8046,  ..., 0.8982, 0.8110, 0.8129],
        [0.8381, 0.8965, 0.8404,  ..., 0.9010, 0.8347, 0.8380]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0445],
         [15.7024],
         [20.0290],
         ...,
         [15.9725],
         [16.1615],
         [16.5376]],
        [[ 9.0672],
         [14.8957],
         [ 8.7213],
         ...,
         [15.2639],
         [ 9.3916],
         [ 9.5277]],
        [[ 8.3268],
         [14.7988],
         [ 7.8683],
         ...,
         [15.1784],
         [ 8.7812],
         [ 8.8991]],
        ...,
        [[ 7.4913],
         [14.6793],
         [ 6.9247],
         ...,
         [15.0729],
         [ 8.0786],
         [ 8.1761]],
        [[ 9.8091],
         [14.9857],
         [ 9.5906],
         ...,
         [15.3433],
         [ 9.9927],
         [10.1475]],
        [[11.6682],
         [15.1864],
         [11.8279],
         ...,
         [15.5199],
         [11.4586],
         [11.6615]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9408, 0.9027, 0.9731,  ..., 0.9071, 0.9102, 0.9163],
        [0.7948, 0.8896, 0.7892,  ..., 0.8956, 0.8001, 0.8023],
        [0.7827, 0.8880, 0.7753,  ..., 0.8942, 0.7901, 0.7921],
        ...,
        [0.7692, 0.8861, 0.7599,  ..., 0.8925, 0.7787, 0.7803],
        [0.8069, 0.8911, 0.8033,  ..., 0.8969, 0.8098, 0.8124],
        [0.8371, 0.8943, 0.8397,  ..., 0.8997, 0.8337, 0.8370]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0489],
         [15.6942],
         [20.0602],
         ...,
         [15.9708],
         [16.1660],
         [16.5236]],
        [[ 9.0662],
         [14.8844],
         [ 8.7172],
         ...,
         [15.2615],
         [ 9.3903],
         [ 9.5334]],
        [[ 8.3255],
         [14.7871],
         [ 7.8627],
         ...,
         [15.1759],
         [ 8.7796],
         [ 8.9059]],
        ...,
        [[ 7.4897],
         [14.6672],
         [ 6.9176],
         ...,
         [15.0704],
         [ 8.0765],
         [ 8.1843]],
        [[ 9.8084],
         [14.9748],
         [ 9.5884],
         ...,
         [15.3410],
         [ 9.9917],
         [10.1518]],
        [[11.6684],
         [15.1762],
         [11.8312],
         ...,
         [15.5177],
         [11.4588],
         [11.6623]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9734,  ..., 0.9069, 0.9101, 0.9159],
        [0.7946, 0.8893, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7826, 0.8877, 0.7750,  ..., 0.8940, 0.7900, 0.7920],
        ...,
        [0.7690, 0.8857, 0.7597,  ..., 0.8923, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8967, 0.8097, 0.8123],
        [0.8369, 0.8940, 0.8396,  ..., 0.8996, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0496],
         [15.6930],
         [20.0649],
         ...,
         [15.9705],
         [16.1667],
         [16.5215]],
        [[ 9.0660],
         [14.8827],
         [ 8.7166],
         ...,
         [15.2612],
         [ 9.3901],
         [ 9.5342]],
        [[ 8.3253],
         [14.7853],
         [ 7.8619],
         ...,
         [15.1756],
         [ 8.7793],
         [ 8.9070]],
        ...,
        [[ 7.4895],
         [14.6654],
         [ 6.9166],
         ...,
         [15.0700],
         [ 8.0762],
         [ 8.1855]],
        [[ 9.8083],
         [14.9731],
         [ 9.5881],
         ...,
         [15.3406],
         [ 9.9916],
         [10.1525]],
        [[11.6684],
         [15.1747],
         [11.8317],
         ...,
         [15.5174],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9159],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7690, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8940, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0657],
         ...,
         [15.9705],
         [16.1668],
         [16.5212]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6651],
         [ 6.9164],
         ...,
         [15.0700],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9729],
         [ 9.5880],
         ...,
         [15.3406],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497],
         [15.6928],
         [20.0658],
         ...,
         [15.9704],
         [16.1668],
         [16.5211]],
        [[ 9.0660],
         [14.8824],
         [ 8.7165],
         ...,
         [15.2611],
         [ 9.3900],
         [ 9.5344]],
        [[ 8.3252],
         [14.7850],
         [ 7.8617],
         ...,
         [15.1755],
         [ 8.7793],
         [ 8.9071]],
        ...,
        [[ 7.4894],
         [14.6650],
         [ 6.9164],
         ...,
         [15.0699],
         [ 8.0762],
         [ 8.1857]],
        [[ 9.8083],
         [14.9728],
         [ 9.5880],
         ...,
         [15.3405],
         [ 9.9916],
         [10.1526]],
        [[11.6684],
         [15.1744],
         [11.8318],
         ...,
         [15.5173],
         [11.4588],
         [11.6624]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9407, 0.9024, 0.9735,  ..., 0.9069, 0.9101, 0.9158],
        [0.7946, 0.8892, 0.7889,  ..., 0.8954, 0.7999, 0.8022],
        [0.7825, 0.8876, 0.7750,  ..., 0.8940, 0.7899, 0.7920],
        ...,
        [0.7689, 0.8857, 0.7596,  ..., 0.8922, 0.7785, 0.7803],
        [0.8067, 0.8907, 0.8031,  ..., 0.8966, 0.8096, 0.8123],
        [0.8369, 0.8939, 0.8396,  ..., 0.8995, 0.8335, 0.8368]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.1690],
         [33.5102],
         [52.1846],
         ...,
         [21.4599],
         [26.0119],
         [69.3910]],
        [[10.8719],
         [24.1198],
         [35.5517],
         ...,
         [12.8572],
         [15.3383],
         [57.7956]],
        [[10.4328],
         [23.1578],
         [33.9022],
         ...,
         [12.0671],
         [14.3675],
         [56.5022]],
        ...,
        [[ 9.9123],
         [22.0169],
         [31.9608],
         ...,
         [11.1537],
         [13.2475],
         [54.9369]],
        [[11.2937],
         [25.0435],
         [37.1459],
         ...,
         [13.6324],
         [16.2927],
         [59.0160]],
        [[12.2834],
         [27.2087],
         [40.9210],
         ...,
         [15.5124],
         [18.6142],
         [61.8011]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.8999, 1.1983, 1.5020,  ..., 1.0023, 1.0763, 1.7818],
        [0.8300, 1.0455, 1.2315,  ..., 0.8623, 0.9027, 1.5932],
        [0.8229, 1.0299, 1.2046,  ..., 0.8495, 0.8869, 1.5722],
        ...,
        [0.8144, 1.0113, 1.1730,  ..., 0.8346, 0.8687, 1.5467],
        [0.8369, 1.0605, 1.2574,  ..., 0.8749, 0.9182, 1.6131],
        [0.8530, 1.0958, 1.3188,  ..., 0.9055, 0.9560, 1.6584]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[14.5458],
         [17.0253],
         [27.1255],
         ...,
         [15.9815],
         [14.9450],
         [18.7296]],
        [[11.9456],
         [11.6411],
         [15.4177],
         ...,
         [ 9.5174],
         [10.1917],
         [ 8.8385]],
        [[11.6579],
         [11.1060],
         [14.3763],
         ...,
         [ 8.9259],
         [ 9.7200],
         [ 8.0539]],
        ...,
        [[11.3104],
         [10.4759],
         [13.1810],
         ...,
         [ 8.2427],
         [ 9.1648],
         [ 7.1762]],
        [[12.2175],
         [12.1581],
         [16.4460],
         ...,
         [10.0982],
         [10.6475],
         [ 9.6306]],
        [[12.8396],
         [13.3814],
         [18.9643],
         ...,
         [11.5083],
         [11.7266],
         [11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.8898, 0.9301, 1.0944,  ..., 0.9132, 0.8963, 0.9578],
        [0.8475, 0.8426, 0.9040,  ..., 0.8080, 0.8190, 0.7970],
        [0.8428, 0.8339, 0.8870,  ..., 0.7984, 0.8113, 0.7842],
        ...,
        [0.8372, 0.8236, 0.8676,  ..., 0.7873, 0.8023, 0.7699],
        [0.8519, 0.8510, 0.9207,  ..., 0.8175, 0.8264, 0.8099],
        [0.8620, 0.8709, 0.9617,  ..., 0.8404, 0.8439, 0.8425]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.0497],
         [15.4290],
         [26.8280],
         ...,
         [15.6383],
         [15.5730],
         [18.6067]],
        [[ 9.5744],
         [10.4436],
         [15.3485],
         ...,
         [ 9.6264],
         [ 9.6931],
         [ 8.9478]],
        [[ 8.9813],
         [ 9.9510],
         [14.3234],
         ...,
         [ 9.0652],
         [ 9.1406],
         [ 8.1725]],
        ...,
        [[ 8.2959],
         [ 9.3719],
         [13.1457],
         ...,
         [ 8.4140],
         [ 8.4984],
         [ 7.3030]],
        [[10.1567],
         [10.9199],
         [16.3600],
         ...,
         [10.1753],
         [10.2328],
         [ 9.7287]],
        [[11.5700],
         [12.0494],
         [18.8341],
         ...,
         [11.4998],
         [11.5325],
         [11.7014]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9164, 0.9064, 1.0918,  ..., 0.9098, 0.9087, 0.9580],
        [0.8111, 0.8253, 0.9050,  ..., 0.8120, 0.8131, 0.8009],
        [0.8015, 0.8173, 0.8884,  ..., 0.8028, 0.8041, 0.7883],
        ...,
        [0.7903, 0.8078, 0.8692,  ..., 0.7923, 0.7936, 0.7742],
        [0.8206, 0.8330, 0.9215,  ..., 0.8209, 0.8218, 0.8136],
        [0.8436, 0.8514, 0.9617,  ..., 0.8424, 0.8430, 0.8457]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.4833],
         [15.3659],
         [26.6872],
         ...,
         [15.6025],
         [15.7648],
         [18.0374]],
        [[ 9.3972],
         [10.0053],
         [15.2919],
         ...,
         [ 9.6238],
         [ 9.5765],
         [ 9.0689]],
        [[ 8.7657],
         [ 9.4878],
         [14.2733],
         ...,
         [ 9.0650],
         [ 9.0035],
         [ 8.3289]],
        ...,
        [[ 8.0406],
         [ 8.8826],
         [13.1029],
         ...,
         [ 8.4164],
         [ 8.3397],
         [ 7.4938]],
        [[10.0205],
         [10.5082],
         [16.2968],
         ...,
         [10.1702],
         [10.1379],
         [ 9.8103]],
        [[11.5461],
         [11.7089],
         [18.7539],
         ...,
         [11.4881],
         [11.4959],
         [11.6678]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9276, 0.9094, 1.0935,  ..., 0.9133, 0.9159, 0.9529],
        [0.8123, 0.8222, 0.9082,  ..., 0.8160, 0.8152, 0.8070],
        [0.8021, 0.8138, 0.8916,  ..., 0.8069, 0.8059, 0.7950],
        ...,
        [0.7903, 0.8040, 0.8726,  ..., 0.7964, 0.7951, 0.7814],
        [0.8225, 0.8304, 0.9245,  ..., 0.8249, 0.8244, 0.8190],
        [0.8473, 0.8499, 0.9645,  ..., 0.8463, 0.8465, 0.8493]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.5285],
         [20.0658],
         [26.4307],
         ...,
         [15.9635],
         [17.6446],
         [15.5220]],
        [[ 8.9937],
         [ 8.7165],
         [14.7529],
         ...,
         [ 9.4000],
         [ 8.9542],
         [10.0612]],
        [[ 8.2807],
         [ 7.8617],
         [13.7255],
         ...,
         [ 8.8035],
         [ 8.2331],
         [ 9.5355]],
        ...,
        [[ 7.4738],
         [ 6.9164],
         [12.5493],
         ...,
         [ 8.1155],
         [ 7.4182],
         [ 8.9209]],
        [[ 9.7065],
         [ 9.5880],
         [15.7695],
         ...,
         [ 9.9865],
         [ 9.6760],
         [10.5723]],
        [[11.4854],
         [11.8318],
         [18.2675],
         ...,
         [11.4135],
         [11.4812],
         [11.7939]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9322, 0.9735, 1.0770,  ..., 0.9068, 0.9341, 0.8996],
        [0.7934, 0.7889, 0.8871,  ..., 0.8000, 0.7928, 0.8108],
        [0.7818, 0.7750, 0.8704,  ..., 0.7903, 0.7810, 0.8022],
        ...,
        [0.7687, 0.7596, 0.8512,  ..., 0.7791, 0.7678, 0.7922],
        [0.8050, 0.8031, 0.9036,  ..., 0.8096, 0.8045, 0.8191],
        [0.8339, 0.8396, 0.9443,  ..., 0.8328, 0.8339, 0.8390]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.7210],
         [19.5219],
         [26.1474],
         ...,
         [16.2711],
         [17.8311],
         [15.4060]],
        [[ 9.1602],
         [ 8.7917],
         [14.6303],
         ...,
         [ 9.2926],
         [ 8.9113],
         [10.1453]],
        [[ 8.5026],
         [ 7.9650],
         [13.6156],
         ...,
         [ 8.6701],
         [ 8.1781],
         [ 9.6339]],
        ...,
        [[ 7.7517],
         [ 7.0462],
         [12.4535],
         ...,
         [ 7.9551],
         [ 7.3514],
         [ 9.0350]],
        [[ 9.8124],
         [ 9.6309],
         [15.6341],
         ...,
         [ 9.9070],
         [ 9.6465],
         [10.6414]],
        [[11.4205],
         [11.7771],
         [18.0996],
         ...,
         [11.4102],
         [11.4905],
         [11.8237]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9219, 0.9674, 1.0752,  ..., 0.9146, 0.9399, 0.9005],
        [0.7989, 0.7929, 0.8879,  ..., 0.8011, 0.7949, 0.8149],
        [0.7882, 0.7795, 0.8714,  ..., 0.7909, 0.7829, 0.8066],
        ...,
        [0.7760, 0.7645, 0.8525,  ..., 0.7793, 0.7695, 0.7969],
        [0.8095, 0.8066, 0.9042,  ..., 0.8110, 0.8068, 0.8230],
        [0.8357, 0.8415, 0.9443,  ..., 0.8355, 0.8368, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.7584],
         [18.4774],
         [23.8104],
         ...,
         [17.5904],
         [18.1967],
         [15.6128]],
        [[ 9.5282],
         [ 8.9734],
         [14.0155],
         ...,
         [ 8.9702],
         [ 8.8467],
         [10.0000]],
        [[ 8.9528],
         [ 8.2060],
         [13.1256],
         ...,
         [ 8.2527],
         [ 8.0912],
         [ 9.4635]],
        ...,
        [[ 8.2868],
         [ 7.3440],
         [12.0992],
         ...,
         [ 7.4415],
         [ 7.2425],
         [ 8.8374]],
        [[10.0921],
         [ 9.7456],
         [14.8906],
         ...,
         [ 9.6878],
         [ 9.6068],
         [10.5223]],
        [[11.4574],
         [11.6927],
         [17.0199],
         ...,
         [11.4812],
         [11.5231],
         [11.7735]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9034, 0.9477, 1.0344,  ..., 0.9332, 0.9431, 0.9011],
        [0.8021, 0.7931, 0.8751,  ..., 0.7930, 0.7910, 0.8098],
        [0.7928, 0.7806, 0.8606,  ..., 0.7814, 0.7787, 0.8011],
        ...,
        [0.7819, 0.7666, 0.8439,  ..., 0.7682, 0.7649, 0.7909],
        [0.8113, 0.8056, 0.8893,  ..., 0.8047, 0.8034, 0.8183],
        [0.8335, 0.8373, 0.9240,  ..., 0.8339, 0.8346, 0.8386]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3398],
         [18.2297],
         [21.8622],
         ...,
         [18.4399],
         [18.3757],
         [16.1049]],
        [[ 9.3493],
         [ 9.0255],
         [13.4748],
         ...,
         [ 8.8348],
         [ 8.8325],
         [ 9.7208]],
        [[ 8.7249],
         [ 8.2733],
         [12.6913],
         ...,
         [ 8.0657],
         [ 8.0668],
         [ 9.1319]],
        ...,
        [[ 8.0077],
         [ 7.4263],
         [11.7818],
         ...,
         [ 7.2034],
         [ 7.2080],
         [ 8.4503]],
        [[ 9.9653],
         [ 9.7806],
         [14.2410],
         ...,
         [ 9.6099],
         [ 9.6039],
         [10.2982]],
        [[11.4719],
         [11.6778],
         [16.0896],
         ...,
         [11.5694],
         [11.5527],
         [11.6965]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9129, 0.9436, 1.0027,  ..., 0.9471, 0.9460, 0.9091],
        [0.7992, 0.7939, 0.8663,  ..., 0.7908, 0.7908, 0.8052],
        [0.7890, 0.7817, 0.8536,  ..., 0.7783, 0.7783, 0.7957],
        ...,
        [0.7774, 0.7679, 0.8388,  ..., 0.7643, 0.7644, 0.7846],
        [0.8092, 0.8062, 0.8788,  ..., 0.8034, 0.8033, 0.8146],
        [0.8337, 0.8371, 0.9088,  ..., 0.8353, 0.8350, 0.8374]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.6733],
         [17.6545],
         [20.2426],
         ...,
         [18.7618],
         [18.1930],
         [16.7983]],
        [[ 9.2959],
         [ 9.1637],
         [12.8313],
         ...,
         [ 8.8002],
         [ 8.8825],
         [ 9.4281]],
        [[ 8.6474],
         [ 8.4492],
         [12.1272],
         ...,
         [ 8.0130],
         [ 8.1281],
         [ 8.7775]],
        ...,
        [[ 7.9049],
         [ 7.6394],
         [11.3068],
         ...,
         [ 7.1331],
         [ 7.2803],
         [ 8.0321]],
        [[ 9.9378],
         [ 9.8768],
         [13.5176],
         ...,
         [ 9.5955],
         [ 9.6410],
         [10.0714]],
        [[11.5154],
         [11.6530],
         [15.1646],
         ...,
         [11.6140],
         [11.5517],
         [11.6507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9183, 0.9343, 0.9764,  ..., 0.9523, 0.9430, 0.9204],
        [0.7983, 0.7962, 0.8558,  ..., 0.7903, 0.7916, 0.8005],
        [0.7878, 0.7846, 0.8444,  ..., 0.7775, 0.7793, 0.7899],
        ...,
        [0.7757, 0.7714, 0.8310,  ..., 0.7632, 0.7655, 0.7778],
        [0.8088, 0.8078, 0.8670,  ..., 0.8032, 0.8039, 0.8109],
        [0.8344, 0.8367, 0.8938,  ..., 0.8360, 0.8350, 0.8366]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.5093],
         [16.6367],
         [17.1502],
         ...,
         [19.4785],
         [17.8951],
         [18.5380]],
        [[ 9.2029],
         [ 9.4885],
         [11.5561],
         ...,
         [ 8.7390],
         [ 9.0025],
         [ 8.9613]],
        [[ 8.4986],
         [ 8.8514],
         [11.0049],
         ...,
         [ 7.9136],
         [ 8.2686],
         [ 8.1901]],
        ...,
        [[ 7.6989],
         [ 8.1197],
         [10.3572],
         ...,
         [ 6.9966],
         [ 7.4402],
         [ 7.3246]],
        [[ 9.9049],
         [10.1174],
         [12.0895],
         ...,
         [ 9.5774],
         [ 9.7379],
         [ 9.7376]],
        [[11.6493],
         [11.6566],
         [13.3551],
         ...,
         [11.7228],
         [11.5801],
         [11.6967]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9319, 0.9177, 0.9261,  ..., 0.9639, 0.9382, 0.9487],
        [0.7968, 0.8015, 0.8351,  ..., 0.7893, 0.7936, 0.7929],
        [0.7854, 0.7911, 0.8261,  ..., 0.7758, 0.7816, 0.7803],
        ...,
        [0.7724, 0.7792, 0.8156,  ..., 0.7609, 0.7681, 0.7663],
        [0.8082, 0.8117, 0.8438,  ..., 0.8029, 0.8055, 0.8055],
        [0.8366, 0.8367, 0.8644,  ..., 0.8378, 0.8355, 0.8374]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.2605],
         [16.1526],
         [15.5333],
         ...,
         [19.8636],
         [17.7801],
         [20.0658]],
        [[ 9.0188],
         [ 9.6975],
         [ 9.9247],
         ...,
         [ 8.7431],
         [ 9.1312],
         [ 8.7165]],
        [[ 8.2647],
         [ 9.1040],
         [ 9.3893],
         ...,
         [ 7.8986],
         [ 8.4082],
         [ 7.8617]],
        ...,
        [[ 7.4157],
         [ 8.4176],
         [ 8.7648],
         ...,
         [ 6.9629],
         [ 7.5899],
         [ 6.9164]],
        [[ 9.7761],
         [10.2798],
         [10.4460],
         ...,
         [ 9.6028],
         [ 9.8538],
         [ 9.5880]],
        [[11.6795],
         [11.6914],
         [11.6954],
         ...,
         [11.8107],
         [11.6571],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9441, 0.9099, 0.8998,  ..., 0.9702, 0.9363, 0.9735],
        [0.7938, 0.8049, 0.8086,  ..., 0.7893, 0.7957, 0.7889],
        [0.7816, 0.7952, 0.7998,  ..., 0.7756, 0.7839, 0.7750],
        ...,
        [0.7678, 0.7840, 0.7897,  ..., 0.7604, 0.7706, 0.7596],
        [0.8061, 0.8143, 0.8170,  ..., 0.8033, 0.8074, 0.8031],
        [0.8371, 0.8373, 0.8374,  ..., 0.8392, 0.8367, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7096],
         [16.7114],
         [15.6301],
         ...,
         [18.7229],
         [17.2846],
         [19.9468]],
        [[ 8.9281],
         [ 9.4601],
         [ 9.7211],
         ...,
         [ 8.9256],
         [ 9.2678],
         [ 8.7320]],
        [[ 8.1467],
         [ 8.8167],
         [ 9.1661],
         ...,
         [ 8.1434],
         [ 8.5796],
         [ 7.8832]],
        ...,
        [[ 7.2714],
         [ 8.0786],
         [ 8.5211],
         ...,
         [ 7.2673],
         [ 7.7961],
         [ 6.9435]],
        [[ 9.7158],
         [10.0957],
         [10.2633],
         ...,
         [ 9.7142],
         [ 9.9520],
         [ 9.5966]],
        [[11.7087],
         [11.6535],
         [11.5691],
         ...,
         [11.7097],
         [11.6459],
         [11.8193]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9520, 0.9195, 0.9019,  ..., 0.9522, 0.9288, 0.9721],
        [0.7929, 0.8016, 0.8058,  ..., 0.7929, 0.7985, 0.7897],
        [0.7802, 0.7911, 0.7968,  ..., 0.7802, 0.7873, 0.7759],
        ...,
        [0.7660, 0.7791, 0.7863,  ..., 0.7659, 0.7745, 0.7607],
        [0.8057, 0.8119, 0.8146,  ..., 0.8057, 0.8096, 0.8038],
        [0.8382, 0.8373, 0.8359,  ..., 0.8382, 0.8371, 0.8400]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7427],
         [17.5786],
         [15.5619],
         ...,
         [17.6208],
         [17.2585],
         [18.8952]],
        [[ 8.9219],
         [ 9.1839],
         [ 9.6827],
         ...,
         [ 9.1726],
         [ 9.2756],
         [ 8.8940]],
        [[ 8.1386],
         [ 8.4747],
         [ 9.1303],
         ...,
         [ 8.4605],
         [ 8.5894],
         [ 8.1019]],
        ...,
        [[ 7.2613],
         [ 7.6701],
         [ 8.4884],
         ...,
         [ 7.6530],
         [ 7.8078],
         [ 7.2161]],
        [[ 9.7118],
         [ 9.8913],
         [10.2222],
         ...,
         [ 9.8832],
         [ 9.9578],
         [ 9.6939]],
        [[11.7111],
         [11.6509],
         [11.5216],
         ...,
         [11.6520],
         [11.6458],
         [11.7227]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9584, 0.9395, 0.9067,  ..., 0.9401, 0.9343, 0.9609],
        [0.7987, 0.8029, 0.8110,  ..., 0.8027, 0.8044, 0.7982],
        [0.7859, 0.7914, 0.8020,  ..., 0.7912, 0.7933, 0.7853],
        ...,
        [0.7717, 0.7783, 0.7916,  ..., 0.7780, 0.7805, 0.7709],
        [0.8115, 0.8144, 0.8198,  ..., 0.8143, 0.8155, 0.8112],
        [0.8440, 0.8430, 0.8409,  ..., 0.8431, 0.8430, 0.8442]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7153],
         [16.8530],
         [15.6191],
         ...,
         [18.5191],
         [17.2801],
         [19.7553]],
        [[ 8.9270],
         [ 9.4085],
         [ 9.7134],
         ...,
         [ 8.9650],
         [ 9.2691],
         [ 8.7580]],
        [[ 8.1453],
         [ 8.7535],
         [ 9.1587],
         ...,
         [ 8.1950],
         [ 8.5813],
         [ 7.9191]],
        ...,
        [[ 7.2696],
         [ 8.0036],
         [ 8.5141],
         ...,
         [ 7.3306],
         [ 7.7981],
         [ 6.9887]],
        [[ 9.7151],
         [10.0566],
         [10.2552],
         ...,
         [ 9.7400],
         [ 9.9530],
         [ 9.6113]],
        [[11.7091],
         [11.6492],
         [11.5603],
         ...,
         [11.6955],
         [11.6459],
         [11.7998]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9531, 0.9228, 0.9027,  ..., 0.9499, 0.9297, 0.9700],
        [0.7939, 0.8017, 0.8067,  ..., 0.7945, 0.7994, 0.7911],
        [0.7812, 0.7911, 0.7976,  ..., 0.7820, 0.7883, 0.7775],
        ...,
        [0.7669, 0.7789, 0.7872,  ..., 0.7679, 0.7755, 0.7624],
        [0.8067, 0.8123, 0.8155,  ..., 0.8071, 0.8106, 0.8050],
        [0.8391, 0.8382, 0.8367,  ..., 0.8389, 0.8381, 0.8406]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7108],
         [16.7418],
         [15.6278],
         ...,
         [18.6783],
         [17.2836],
         [19.9049]],
        [[ 8.9278],
         [ 9.4488],
         [ 9.7194],
         ...,
         [ 8.9340],
         [ 9.2681],
         [ 8.7376]],
        [[ 8.1464],
         [ 8.8028],
         [ 9.1645],
         ...,
         [ 8.1545],
         [ 8.5800],
         [ 7.8909]],
        ...,
        [[ 7.2710],
         [ 8.0622],
         [ 8.5195],
         ...,
         [ 7.2809],
         [ 7.7965],
         [ 6.9533]],
        [[ 9.7156],
         [10.0871],
         [10.2615],
         ...,
         [ 9.7197],
         [ 9.9522],
         [ 9.5997]],
        [[11.7088],
         [11.6525],
         [11.5672],
         ...,
         [11.7065],
         [11.6459],
         [11.8150]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9523, 0.9202, 0.9021,  ..., 0.9517, 0.9290, 0.9717],
        [0.7931, 0.8016, 0.8060,  ..., 0.7932, 0.7987, 0.7900],
        [0.7804, 0.7911, 0.7970,  ..., 0.7806, 0.7875, 0.7763],
        ...,
        [0.7662, 0.7791, 0.7865,  ..., 0.7663, 0.7747, 0.7610],
        [0.8059, 0.8120, 0.8148,  ..., 0.8060, 0.8098, 0.8041],
        [0.8384, 0.8374, 0.8361,  ..., 0.8383, 0.8373, 0.8401]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.3773],
         [17.8345],
         [15.5562],
         ...,
         [17.3851],
         [17.4778],
         [18.0937]],
        [[ 8.9940],
         [ 9.1176],
         [ 9.6624],
         ...,
         [ 9.2381],
         [ 9.2117],
         [ 9.0559]],
        [[ 8.2326],
         [ 8.3909],
         [ 9.1093],
         ...,
         [ 8.5426],
         [ 8.5096],
         [ 8.3123]],
        ...,
        [[ 7.3766],
         [ 7.5690],
         [ 8.4665],
         ...,
         [ 7.7518],
         [ 7.7121],
         [ 7.4737]],
        [[ 9.7593],
         [ 9.8442],
         [10.2028],
         ...,
         [ 9.9304],
         [ 9.9113],
         [ 9.8013]],
        [[11.6864],
         [11.6591],
         [11.5048],
         ...,
         [11.6471],
         [11.6486],
         [11.6706]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9559, 0.9471, 0.9100,  ..., 0.9397, 0.9412, 0.9513],
        [0.8033, 0.8053, 0.8141,  ..., 0.8072, 0.8068, 0.8043],
        [0.7909, 0.7935, 0.8051,  ..., 0.7959, 0.7954, 0.7922],
        ...,
        [0.7770, 0.7801, 0.7947,  ..., 0.7831, 0.7824, 0.7785],
        [0.8157, 0.8171, 0.8229,  ..., 0.8185, 0.8182, 0.8164],
        [0.8471, 0.8466, 0.8441,  ..., 0.8464, 0.8464, 0.8468]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.6665],
         [16.9453],
         [15.6134],
         ...,
         [18.3972],
         [17.3080],
         [19.5501]],
        [[ 8.9362],
         [ 9.3764],
         [ 9.7069],
         ...,
         [ 8.9899],
         [ 9.2608],
         [ 8.7875]],
        [[ 8.1574],
         [ 8.7141],
         [ 9.1523],
         ...,
         [ 8.2273],
         [ 8.5709],
         [ 7.9594]],
        ...,
        [[ 7.2845],
         [ 7.9567],
         [ 8.5077],
         ...,
         [ 7.3700],
         [ 7.7856],
         [ 7.0391]],
        [[ 9.7211],
         [10.0325],
         [10.2487],
         ...,
         [ 9.7565],
         [ 9.9469],
         [ 9.6285]],
        [[11.7056],
         [11.6473],
         [11.5539],
         ...,
         [11.6877],
         [11.6461],
         [11.7798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9534, 0.9254, 0.9037,  ..., 0.9490, 0.9313, 0.9677],
        [0.7951, 0.8023, 0.8076,  ..., 0.7960, 0.8004, 0.7927],
        [0.7824, 0.7915, 0.7986,  ..., 0.7836, 0.7892, 0.7792],
        ...,
        [0.7682, 0.7792, 0.7881,  ..., 0.7696, 0.7764, 0.7643],
        [0.8079, 0.8129, 0.8165,  ..., 0.8084, 0.8115, 0.8064],
        [0.8402, 0.8392, 0.8377,  ..., 0.8399, 0.8392, 0.8414]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7073],
         [16.8325],
         [15.6209],
         ...,
         [18.5487],
         [17.2849],
         [19.7707]],
        [[ 8.9285],
         [ 9.4158],
         [ 9.7142],
         ...,
         [ 8.9592],
         [ 9.2677],
         [ 8.7559]],
        [[ 8.1473],
         [ 8.7624],
         [ 9.1595],
         ...,
         [ 8.1874],
         [ 8.5795],
         [ 7.9162]],
        ...,
        [[ 7.2720],
         [ 8.0142],
         [ 8.5148],
         ...,
         [ 7.3212],
         [ 7.7960],
         [ 6.9850]],
        [[ 9.7161],
         [10.0621],
         [10.2561],
         ...,
         [ 9.7361],
         [ 9.9519],
         [ 9.6101]],
        [[11.7086],
         [11.6497],
         [11.5614],
         ...,
         [11.6975],
         [11.6460],
         [11.8014]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9529, 0.9224, 0.9027,  ..., 0.9503, 0.9297, 0.9702],
        [0.7938, 0.8017, 0.8066,  ..., 0.7943, 0.7993, 0.7910],
        [0.7811, 0.7911, 0.7976,  ..., 0.7818, 0.7881, 0.7774],
        ...,
        [0.7669, 0.7790, 0.7871,  ..., 0.7677, 0.7754, 0.7622],
        [0.8066, 0.8123, 0.8154,  ..., 0.8070, 0.8105, 0.8049],
        [0.8390, 0.8381, 0.8366,  ..., 0.8389, 0.8380, 0.8405]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7129],
         [16.8174],
         [15.6219],
         ...,
         [18.5695],
         [17.2818],
         [19.8010]],
        [[ 8.9274],
         [ 9.4212],
         [ 9.7152],
         ...,
         [ 8.9551],
         [ 9.2686],
         [ 8.7517]],
        [[ 8.1459],
         [ 8.7691],
         [ 9.1605],
         ...,
         [ 8.1820],
         [ 8.5807],
         [ 7.9104]],
        ...,
        [[ 7.2704],
         [ 8.0221],
         [ 8.5157],
         ...,
         [ 7.3147],
         [ 7.7974],
         [ 6.9778]],
        [[ 9.7154],
         [10.0662],
         [10.2572],
         ...,
         [ 9.7334],
         [ 9.9526],
         [ 9.6077]],
        [[11.7090],
         [11.6501],
         [11.5624],
         ...,
         [11.6989],
         [11.6459],
         [11.8044]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9220, 0.9025,  ..., 0.9505, 0.9295, 0.9705],
        [0.7937, 0.8017, 0.8065,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7870,  ..., 0.7674, 0.7753, 0.7619],
        [0.8065, 0.8122, 0.8153,  ..., 0.8068, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8379, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7137],
         [16.8152],
         [15.6220],
         ...,
         [18.5724],
         [17.2814],
         [19.8053]],
        [[ 8.9273],
         [ 9.4220],
         [ 9.7154],
         ...,
         [ 8.9545],
         [ 9.2687],
         [ 8.7511]],
        [[ 8.1457],
         [ 8.7700],
         [ 9.1606],
         ...,
         [ 8.1813],
         [ 8.5808],
         [ 7.9096]],
        ...,
        [[ 7.2701],
         [ 8.0232],
         [ 8.5159],
         ...,
         [ 7.3138],
         [ 7.7976],
         [ 6.9767]],
        [[ 9.7153],
         [10.0668],
         [10.2573],
         ...,
         [ 9.7331],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8048]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7753, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5728],
         [17.2813],
         [19.8059]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5808],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8059]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5808],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.7138],
         [16.8149],
         [15.6221],
         ...,
         [18.5729],
         [17.2813],
         [19.8060]],
        [[ 8.9273],
         [ 9.4221],
         [ 9.7154],
         ...,
         [ 8.9544],
         [ 9.2688],
         [ 8.7510]],
        [[ 8.1457],
         [ 8.7702],
         [ 9.1606],
         ...,
         [ 8.1812],
         [ 8.5809],
         [ 7.9095]],
        ...,
        [[ 7.2701],
         [ 8.0234],
         [ 8.5159],
         ...,
         [ 7.3136],
         [ 7.7976],
         [ 6.9766]],
        [[ 9.7153],
         [10.0669],
         [10.2573],
         ...,
         [ 9.7330],
         [ 9.9527],
         [ 9.6073]],
        [[11.7090],
         [11.6502],
         [11.5626],
         ...,
         [11.6991],
         [11.6459],
         [11.8049]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9528, 0.9219, 0.9025,  ..., 0.9505, 0.9295, 0.9706],
        [0.7936, 0.8017, 0.8064,  ..., 0.7941, 0.7992, 0.7908],
        [0.7809, 0.7911, 0.7974,  ..., 0.7815, 0.7880, 0.7771],
        ...,
        [0.7667, 0.7789, 0.7869,  ..., 0.7674, 0.7752, 0.7619],
        [0.8064, 0.8122, 0.8153,  ..., 0.8067, 0.8103, 0.8047],
        [0.8389, 0.8379, 0.8365,  ..., 0.8387, 0.8378, 0.8404]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.1690],
         [33.5102],
         [52.1846],
         ...,
         [21.4599],
         [26.0119],
         [69.3910]],
        [[10.8719],
         [24.1198],
         [35.5517],
         ...,
         [12.8572],
         [15.3383],
         [57.7956]],
        [[10.4328],
         [23.1578],
         [33.9022],
         ...,
         [12.0671],
         [14.3675],
         [56.5022]],
        ...,
        [[ 9.9123],
         [22.0169],
         [31.9608],
         ...,
         [11.1537],
         [13.2475],
         [54.9369]],
        [[11.2937],
         [25.0435],
         [37.1459],
         ...,
         [13.6324],
         [16.2927],
         [59.0160]],
        [[12.2834],
         [27.2087],
         [40.9210],
         ...,
         [15.5124],
         [18.6142],
         [61.8011]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.8999, 1.1983, 1.5020,  ..., 1.0023, 1.0763, 1.7818],
        [0.8300, 1.0455, 1.2315,  ..., 0.8623, 0.9027, 1.5932],
        [0.8229, 1.0299, 1.2046,  ..., 0.8495, 0.8869, 1.5722],
        ...,
        [0.8144, 1.0113, 1.1730,  ..., 0.8346, 0.8687, 1.5467],
        [0.8369, 1.0605, 1.2574,  ..., 0.8749, 0.9182, 1.6131],
        [0.8530, 1.0958, 1.3188,  ..., 0.9055, 0.9560, 1.6584]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3186],
         [28.5514],
         [21.7791],
         ...,
         [22.3897],
         [13.9348],
         [18.7296]],
        [[13.0136],
         [26.8982],
         [14.2349],
         ...,
         [21.0967],
         [11.4907],
         [ 8.8385]],
        [[12.6541],
         [26.7004],
         [13.5049],
         ...,
         [20.9420],
         [11.2196],
         [ 8.0539]],
        ...,
        [[12.2216],
         [26.4568],
         [12.6508],
         ...,
         [20.7514],
         [10.8921],
         [ 7.1762]],
        [[13.3545],
         [27.0822],
         [14.9438],
         ...,
         [21.2406],
         [11.7468],
         [ 9.6306]],
        [[14.1389],
         [27.4927],
         [16.6356],
         ...,
         [21.5617],
         [12.3322],
         [11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9186, 1.1176, 1.0074,  ..., 1.0174, 0.8799, 0.9578],
        [0.8649, 1.0907, 0.8847,  ..., 0.9963, 0.8401, 0.7970],
        [0.8590, 1.0875, 0.8729,  ..., 0.9938, 0.8357, 0.7842],
        ...,
        [0.8520, 1.0835, 0.8590,  ..., 0.9907, 0.8304, 0.7699],
        [0.8704, 1.0937, 0.8963,  ..., 0.9987, 0.8443, 0.8099],
        [0.8832, 1.1004, 0.9238,  ..., 1.0039, 0.8538, 0.8425]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.2253],
         [28.9412],
         [20.1694],
         ...,
         [17.9643],
         [15.0688],
         [18.6340]],
        [[10.8490],
         [25.7340],
         [13.0257],
         ...,
         [17.6074],
         [ 9.9613],
         [ 8.8969]],
        [[10.4033],
         [25.3626],
         [12.3394],
         ...,
         [17.5637],
         [ 9.4637],
         [ 8.1188]],
        ...,
        [[ 9.8755],
         [24.9090],
         [11.5377],
         ...,
         [17.5097],
         [ 8.8806],
         [ 7.2471]],
        [[11.2774],
         [26.0818],
         [13.6932],
         ...,
         [17.6478],
         [10.4438],
         [ 9.6813]],
        [[12.2836],
         [26.8659],
         [15.2895],
         ...,
         [17.7373],
         [11.5930],
         [11.6655]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9021, 1.1252, 0.9825,  ..., 0.9467, 0.8996, 0.9576],
        [0.8309, 1.0730, 0.8663,  ..., 0.9409, 0.8165, 0.7992],
        [0.8237, 1.0670, 0.8552,  ..., 0.9402, 0.8084, 0.7865],
        ...,
        [0.8151, 1.0596, 0.8421,  ..., 0.9393, 0.7989, 0.7724],
        [0.8379, 1.0787, 0.8772,  ..., 0.9415, 0.8244, 0.8119],
        [0.8543, 1.0915, 0.9032,  ..., 0.9430, 0.8430, 0.8442]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.5947],
         [28.5779],
         [17.0456],
         ...,
         [14.9441],
         [16.2211],
         [18.1808]],
        [[ 9.7934],
         [22.1887],
         [11.4564],
         ...,
         [13.7154],
         [ 9.3982],
         [ 9.0363]],
        [[ 9.2453],
         [21.5044],
         [10.9065],
         ...,
         [13.5705],
         [ 8.7843],
         [ 8.2872]],
        ...,
        [[ 8.6075],
         [20.6843],
         [10.2606],
         ...,
         [13.3927],
         [ 8.0777],
         [ 7.4431]],
        [[10.3282],
         [22.8398],
         [11.9886],
         ...,
         [13.8505],
         [10.0031],
         [ 9.7879]],
        [[11.6139],
         [24.3449],
         [13.2522],
         ...,
         [14.1535],
         [11.4793],
         [11.6751]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9120, 1.1232, 0.9356,  ..., 0.9015, 0.9222, 0.9541],
        [0.8177, 1.0193, 0.8447,  ..., 0.8815, 0.8113, 0.8054],
        [0.8088, 1.0082, 0.8358,  ..., 0.8791, 0.8013, 0.7932],
        ...,
        [0.7984, 0.9948, 0.8253,  ..., 0.8762, 0.7898, 0.7795],
        [0.8264, 1.0299, 0.8534,  ..., 0.8837, 0.8211, 0.8176],
        [0.8473, 1.0544, 0.8739,  ..., 0.8886, 0.8451, 0.8483]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3997],
         [27.1880],
         [15.5334],
         ...,
         [14.9199],
         [16.7692],
         [17.5401]],
        [[ 9.3636],
         [18.3775],
         [10.3473],
         ...,
         [13.6701],
         [ 9.2372],
         [ 9.1944]],
        [[ 8.7361],
         [17.5078],
         [ 9.8398],
         ...,
         [13.5229],
         [ 8.5799],
         [ 8.4879]],
        ...,
        [[ 8.0153],
         [16.4854],
         [ 9.2443],
         ...,
         [13.3423],
         [ 7.8288],
         [ 7.6860]],
        [[ 9.9830],
         [19.2188],
         [10.8390],
         ...,
         [13.8075],
         [ 9.8887],
         [ 9.8988]],
        [[11.4985],
         [21.2139],
         [12.0085],
         ...,
         [14.1155],
         [11.4934],
         [11.6500]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9303, 1.1058, 0.9162,  ..., 0.9063, 0.9363, 0.9489],
        [0.8159, 0.9625, 0.8319,  ..., 0.8859, 0.8138, 0.8131],
        [0.8057, 0.9484, 0.8236,  ..., 0.8835, 0.8031, 0.8016],
        ...,
        [0.7940, 0.9317, 0.8140,  ..., 0.8806, 0.7909, 0.7886],
        [0.8260, 0.9762, 0.8399,  ..., 0.8882, 0.8244, 0.8246],
        [0.8506, 1.0086, 0.8589,  ..., 0.8932, 0.8505, 0.8531]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.4660],
         [25.6043],
         [16.3398],
         ...,
         [15.0800],
         [17.0269],
         [17.3904]],
        [[ 9.0146],
         [14.4532],
         [ 9.2881],
         ...,
         [13.9559],
         [ 9.1514],
         [ 9.2366]],
        [[ 8.3059],
         [13.4655],
         [ 8.6608],
         ...,
         [13.8227],
         [ 8.4744],
         [ 8.5407]],
        ...,
        [[ 7.5033],
         [12.3329],
         [ 7.9408],
         ...,
         [13.6591],
         [ 7.7033],
         [ 7.7495]],
        [[ 9.7224],
         [15.4293],
         [ 9.9075],
         ...,
         [14.0800],
         [ 9.8244],
         [ 9.9293]],
        [[11.4872],
         [17.8229],
         [11.4243],
         ...,
         [14.3578],
         [11.4897],
         [11.6471]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9432, 1.0756, 0.9249,  ..., 0.9044, 0.9360, 0.9420],
        [0.8057, 0.8942, 0.8102,  ..., 0.8861, 0.8080, 0.8093],
        [0.7942, 0.8781, 0.8000,  ..., 0.8839, 0.7969, 0.7980],
        ...,
        [0.7812, 0.8597, 0.7883,  ..., 0.8813, 0.7844, 0.7852],
        [0.8172, 0.9101, 0.8203,  ..., 0.8881, 0.8189, 0.8206],
        [0.8459, 0.9490, 0.8449,  ..., 0.8926, 0.8460, 0.8485]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.3196],
         [20.7486],
         [19.7138],
         ...,
         [16.9559],
         [16.4517],
         [17.2528]],
        [[ 8.8255],
         [13.9099],
         [ 8.7259],
         ...,
         [16.5288],
         [ 9.2571],
         [ 9.2774]],
        [[ 8.0626],
         [13.2381],
         [ 7.8885],
         ...,
         [16.4767],
         [ 8.6210],
         [ 8.5916]],
        ...,
        [[ 7.2068],
         [12.4492],
         [ 6.9600],
         ...,
         [16.4123],
         [ 7.8920],
         [ 7.8104]],
        [[ 9.5938],
         [14.5603],
         [ 9.5777],
         ...,
         [16.5771],
         [ 9.8859],
         [ 9.9591]],
        [[11.5339],
         [16.1053],
         [11.7632],
         ...,
         [16.6841],
         [11.4287],
         [11.6457]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9463, 0.9858, 0.9690,  ..., 0.9241, 0.9159, 0.9289],
        [0.7919, 0.8746, 0.7902,  ..., 0.9172, 0.7989, 0.7992],
        [0.7795, 0.8636, 0.7766,  ..., 0.9163, 0.7885, 0.7881],
        ...,
        [0.7655, 0.8508, 0.7615,  ..., 0.9153, 0.7767, 0.7754],
        [0.8044, 0.8851, 0.8041,  ..., 0.9179, 0.8091, 0.8103],
        [0.8359, 0.9103, 0.8396,  ..., 0.9197, 0.8342, 0.8377]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.8588],
         [15.7828],
         [18.5799],
         ...,
         [18.0260],
         [15.6628],
         [17.4052]],
        [[ 8.9757],
         [13.6678],
         [ 8.9530],
         ...,
         [17.6623],
         [ 9.5274],
         [ 9.2323]],
        [[ 8.2430],
         [13.4266],
         [ 8.1794],
         ...,
         [17.6178],
         [ 8.9588],
         [ 8.5354]],
        ...,
        [[ 7.4161],
         [13.1330],
         [ 7.3114],
         ...,
         [17.5627],
         [ 8.3000],
         [ 7.7431]],
        [[ 9.7100],
         [13.8944],
         [ 9.7321],
         ...,
         [17.7035],
         [10.0844],
         [ 9.9262]],
        [[11.5496],
         [14.4079],
         [11.6996],
         ...,
         [17.7947],
         [11.4313],
         [11.6473]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9461, 0.9123, 0.9578,  ..., 0.9488, 0.9103, 0.9387],
        [0.8016, 0.8779, 0.8012,  ..., 0.9429, 0.8105, 0.8057],
        [0.7897, 0.8740, 0.7886,  ..., 0.9421, 0.8013, 0.7944],
        ...,
        [0.7762, 0.8692, 0.7745,  ..., 0.9412, 0.7906, 0.7815],
        [0.8135, 0.8816, 0.8139,  ..., 0.9435, 0.8196, 0.8170],
        [0.8434, 0.8899, 0.8459,  ..., 0.9450, 0.8415, 0.8450]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3808],
         [13.8301],
         [15.9160],
         ...,
         [16.9362],
         [15.1096],
         [17.8048]],
        [[ 9.5932],
         [11.8173],
         [ 9.8190],
         ...,
         [16.5046],
         [ 9.8216],
         [ 9.1250]],
        [[ 8.9784],
         [11.5894],
         [ 9.2491],
         ...,
         [16.4520],
         [ 9.3116],
         [ 8.4003]],
        ...,
        [[ 8.2698],
         [11.3127],
         [ 8.5876],
         ...,
         [16.3868],
         [ 8.7153],
         [ 7.5804]],
        [[10.1982],
         [12.0316],
         [10.3762],
         ...,
         [16.5534],
         [10.3172],
         [ 9.8494]],
        [[11.6714],
         [12.5185],
         [11.7204],
         ...,
         [16.6615],
         [11.5011],
         [11.6580]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9257, 0.8842, 0.9181,  ..., 0.9347, 0.9050, 0.9488],
        [0.8153, 0.8514, 0.8189,  ..., 0.9277, 0.8190, 0.8076],
        [0.8053, 0.8477, 0.8097,  ..., 0.9268, 0.8107, 0.7959],
        ...,
        [0.7937, 0.8432, 0.7989,  ..., 0.9258, 0.8010, 0.7825],
        [0.8251, 0.8549, 0.8280,  ..., 0.9285, 0.8270, 0.8194],
        [0.8491, 0.8628, 0.8499,  ..., 0.9302, 0.8463, 0.8488]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.5813],
         [14.4717],
         [16.3568],
         ...,
         [16.2953],
         [16.0149],
         [17.7299]],
        [[ 9.5102],
         [11.3737],
         [ 9.6037],
         ...,
         [15.6900],
         [ 9.4060],
         [ 9.1440]],
        [[ 8.8778],
         [11.0396],
         [ 8.9911],
         ...,
         [15.6167],
         [ 8.8063],
         [ 8.4244]],
        ...,
        [[ 8.1510],
         [10.6385],
         [ 8.2847],
         ...,
         [15.5261],
         [ 8.1149],
         [ 7.6095]],
        [[10.1341],
         [11.6912],
         [10.2063],
         ...,
         [15.7581],
         [ 9.9958],
         [ 9.8628]],
        [[11.6592],
         [12.4235],
         [11.6732],
         ...,
         [15.9092],
         [11.4316],
         [11.6553]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9303, 0.8960, 0.9267,  ..., 0.9257, 0.9211, 0.9490],
        [0.8153, 0.8456, 0.8169,  ..., 0.9158, 0.8136, 0.8094],
        [0.8050, 0.8402, 0.8069,  ..., 0.9147, 0.8039, 0.7977],
        ...,
        [0.7932, 0.8337, 0.7954,  ..., 0.9132, 0.7926, 0.7844],
        [0.8255, 0.8508, 0.8267,  ..., 0.9170, 0.8232, 0.8211],
        [0.8503, 0.8627, 0.8505,  ..., 0.9194, 0.8466, 0.8502]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.2347],
         [15.5779],
         [18.2582],
         ...,
         [15.0713],
         [19.1717],
         [17.5033]],
        [[ 9.2829],
         [11.8137],
         [ 9.0193],
         ...,
         [13.9410],
         [ 8.7495],
         [ 9.2046]],
        [[ 8.5984],
         [11.4161],
         [ 8.2653],
         ...,
         [13.8071],
         [ 7.9398],
         [ 8.5007]],
        ...,
        [[ 7.8186],
         [10.9411],
         [ 7.4165],
         ...,
         [13.6427],
         [ 7.0383],
         [ 7.7014]],
        [[ 9.9631],
         [12.1931],
         [ 9.7764],
         ...,
         [14.0658],
         [ 9.5701],
         [ 9.9061]],
        [[11.6456],
         [13.0740],
         [11.6794],
         ...,
         [14.3450],
         [11.6636],
         [11.6491]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9307, 0.9037, 0.9473,  ..., 0.8955, 0.9622, 0.9350],
        [0.8013, 0.8425, 0.7971,  ..., 0.8771, 0.7927, 0.8001],
        [0.7902, 0.8360, 0.7848,  ..., 0.8749, 0.7795, 0.7886],
        ...,
        [0.7775, 0.8283, 0.7710,  ..., 0.8723, 0.7648, 0.7756],
        [0.8124, 0.8487, 0.8094,  ..., 0.8791, 0.8060, 0.8115],
        [0.8398, 0.8630, 0.8403,  ..., 0.8837, 0.8401, 0.8398]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.4445],
         [15.3364],
         [18.1341],
         ...,
         [15.4431],
         [18.9812],
         [17.5228]],
        [[ 9.2211],
         [10.4621],
         [ 9.0467],
         ...,
         [14.5257],
         [ 8.7885],
         [ 9.1992]],
        [[ 8.5214],
         [ 9.9783],
         [ 8.3006],
         ...,
         [14.4159],
         [ 7.9895],
         [ 8.4939]],
        ...,
        [[ 7.7262],
         [ 9.4088],
         [ 7.4594],
         ...,
         [14.2809],
         [ 7.0980],
         [ 7.6932]],
        [[ 9.9180],
         [10.9295],
         [ 9.7951],
         ...,
         [14.6277],
         [ 9.5969],
         [ 9.9022]],
        [[11.6480],
         [12.0363],
         [11.6727],
         ...,
         [14.8554],
         [11.6538],
         [11.6496]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9353, 0.9010, 0.9465,  ..., 0.9028, 0.9603, 0.9366],
        [0.8016, 0.8217, 0.7987,  ..., 0.8878, 0.7945, 0.8012],
        [0.7902, 0.8139, 0.7866,  ..., 0.8861, 0.7815, 0.7897],
        ...,
        [0.7773, 0.8046, 0.7729,  ..., 0.8839, 0.7670, 0.7767],
        [0.8129, 0.8294, 0.8109,  ..., 0.8895, 0.8077, 0.8126],
        [0.8410, 0.8474, 0.8414,  ..., 0.8932, 0.8411, 0.8411]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.6122],
         [15.4507],
         [17.8194],
         ...,
         [15.9234],
         [19.3155],
         [17.5794]],
        [[ 9.1749],
         [ 9.8363],
         [ 9.1214],
         ...,
         [15.1979],
         [ 8.7904],
         [ 9.1837]],
        [[ 8.4634],
         [ 9.3016],
         [ 8.3957],
         ...,
         [15.1104],
         [ 7.9741],
         [ 8.4744]],
        ...,
        [[ 7.6565],
         [ 8.6781],
         [ 7.5748],
         ...,
         [15.0025],
         [ 7.0656],
         [ 7.6698]],
        [[ 9.8848],
         [10.3573],
         [ 9.8469],
         ...,
         [15.2791],
         [ 9.6179],
         [ 9.8911]],
        [[11.6518],
         [11.6066],
         [11.6585],
         ...,
         [15.4599],
         [11.7302],
         [11.6509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9370, 0.9018, 0.9404,  ..., 0.9095, 0.9647, 0.9365],
        [0.7998, 0.8105, 0.7989,  ..., 0.8977, 0.7935, 0.7999],
        [0.7882, 0.8018, 0.7871,  ..., 0.8963, 0.7802, 0.7884],
        ...,
        [0.7751, 0.7917, 0.7737,  ..., 0.8946, 0.7655, 0.7753],
        [0.8113, 0.8190, 0.8107,  ..., 0.8991, 0.8070, 0.8114],
        [0.8401, 0.8393, 0.8402,  ..., 0.9020, 0.8413, 0.8400]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.8572],
         [17.3122],
         [17.4188],
         ...,
         [16.8463],
         [18.1734],
         [17.6447]],
        [[ 9.1120],
         [ 9.0157],
         [ 9.2284],
         ...,
         [16.3936],
         [ 9.0379],
         [ 9.1662]],
        [[ 8.3838],
         [ 8.3162],
         [ 8.5305],
         ...,
         [16.3384],
         [ 8.2893],
         [ 8.4524]],
        ...,
        [[ 7.5604],
         [ 7.5230],
         [ 7.7372],
         ...,
         [16.2701],
         [ 7.4457],
         [ 7.6433]],
        [[ 9.8403],
         [ 9.7137],
         [ 9.9233],
         ...,
         [16.4447],
         [ 9.7890],
         [ 9.8786]],
        [[11.6600],
         [11.4510],
         [11.6476],
         ...,
         [16.5581],
         [11.6747],
         [11.6527]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9489, 0.9400, 0.9418,  ..., 0.9325, 0.9540, 0.9454],
        [0.8067, 0.8051, 0.8086,  ..., 0.9251, 0.8055, 0.8075],
        [0.7948, 0.7937, 0.7972,  ..., 0.9242, 0.7933, 0.7959],
        ...,
        [0.7814, 0.7808, 0.7843,  ..., 0.9231, 0.7796, 0.7828],
        [0.8185, 0.8164, 0.8199,  ..., 0.9259, 0.8177, 0.8191],
        [0.8481, 0.8447, 0.8479,  ..., 0.9278, 0.8483, 0.8480]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.0658],
         [20.0658],
         [14.9811],
         ...,
         [40.6449],
         [22.6698],
         [18.2590]],
        [[ 8.7165],
         [ 8.7165],
         [10.5326],
         ...,
         [33.2152],
         [20.8885],
         [ 9.0191]],
        [[ 7.8617],
         [ 7.8617],
         [10.0831],
         ...,
         [32.3955],
         [20.6780],
         [ 8.2651]],
        ...,
        [[ 6.9164],
         [ 6.9164],
         [ 9.5518],
         ...,
         [31.4062],
         [20.4196],
         [ 7.4162]],
        [[ 9.5880],
         [ 9.5880],
         [10.9653],
         ...,
         [33.9904],
         [21.0848],
         [ 9.7763]],
        [[11.8318],
         [11.8318],
         [11.9842],
         ...,
         [35.7656],
         [21.5245],
         [11.6794]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 0.9735, 0.8908,  ..., 1.3082, 1.0159, 0.9441],
        [0.7889, 0.7889, 0.8184,  ..., 1.1874, 0.9869, 0.7938],
        [0.7750, 0.7750, 0.8111,  ..., 1.1740, 0.9835, 0.7816],
        ...,
        [0.7596, 0.7596, 0.8025,  ..., 1.1579, 0.9793, 0.7678],
        [0.8031, 0.8031, 0.8255,  ..., 1.2000, 0.9901, 0.8061],
        [0.8396, 0.8396, 0.8421,  ..., 1.2289, 0.9972, 0.8371]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.3050],
         [17.7425],
         [16.7137],
         ...,
         [20.1034],
         [15.4080],
         [17.7778]],
        [[ 9.0093],
         [ 8.9231],
         [ 9.4592],
         ...,
         [19.2137],
         [10.1437],
         [ 9.1318]],
        [[ 8.2524],
         [ 8.1953],
         [ 8.8156],
         ...,
         [19.1064],
         [ 9.6322],
         [ 8.4089]],
        ...,
        [[ 7.4007],
         [ 7.3740],
         [ 8.0773],
         ...,
         [18.9739],
         [ 9.0329],
         [ 7.5908]],
        [[ 9.7696],
         [ 9.6523],
         [10.0951],
         ...,
         [19.3134],
         [10.6401],
         [ 9.8542]],
        [[11.6821],
         [11.4791],
         [11.6535],
         ...,
         [19.5351],
         [11.8231],
         [11.6570]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9552, 0.9461, 0.9293,  ..., 0.9845, 0.9081, 0.9466],
        [0.8040, 0.8026, 0.8113,  ..., 0.9700, 0.8225, 0.8060],
        [0.7917, 0.7908, 0.8009,  ..., 0.9683, 0.8142, 0.7943],
        ...,
        [0.7779, 0.7774, 0.7889,  ..., 0.9661, 0.8044, 0.7810],
        [0.8164, 0.8145, 0.8217,  ..., 0.9716, 0.8306, 0.8178],
        [0.8475, 0.8442, 0.8470,  ..., 0.9752, 0.8498, 0.8471]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[19.3147],
         [20.0658],
         [16.6833],
         ...,
         [20.5178],
         [15.2729],
         [17.7729]],
        [[ 8.8235],
         [ 8.7165],
         [ 9.4707],
         ...,
         [19.4936],
         [10.2512],
         [ 9.1330]],
        [[ 8.0080],
         [ 7.8617],
         [ 8.8296],
         ...,
         [19.3704],
         [ 9.7575],
         [ 8.4105]],
        ...,
        [[ 7.0998],
         [ 6.9164],
         [ 8.0939],
         ...,
         [19.2186],
         [ 9.1777],
         [ 7.5927]],
        [[ 9.6500],
         [ 9.5880],
         [10.1038],
         ...,
         [19.6080],
         [10.7291],
         [ 9.8551]],
        [[11.7580],
         [11.8318],
         [11.6546],
         ...,
         [19.8629],
         [11.8639],
         [11.6568]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9613, 0.9735, 0.9185,  ..., 0.9809, 0.8955, 0.9362],
        [0.7906, 0.7889, 0.8012,  ..., 0.9642, 0.8139, 0.7957],
        [0.7774, 0.7750, 0.7907,  ..., 0.9622, 0.8058, 0.7839],
        ...,
        [0.7626, 0.7596, 0.7788,  ..., 0.9597, 0.7964, 0.7706],
        [0.8041, 0.8031, 0.8115,  ..., 0.9661, 0.8216, 0.8074],
        [0.8384, 0.8396, 0.8367,  ..., 0.9702, 0.8401, 0.8367]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.2168],
         [16.4476],
         [18.0320],
         ...,
         [15.7711],
         [16.9769],
         [17.5031]],
        [[ 9.0283],
         [ 9.5647],
         [ 9.0701],
         ...,
         [14.9907],
         [ 9.3657],
         [ 9.2046]],
        [[ 8.2769],
         [ 8.9440],
         [ 8.3305],
         ...,
         [14.8968],
         [ 8.7009],
         [ 8.5007]],
        ...,
        [[ 7.4307],
         [ 8.2292],
         [ 7.4958],
         ...,
         [14.7811],
         [ 7.9410],
         [ 7.7014]],
        [[ 9.7825],
         [10.1761],
         [ 9.8111],
         ...,
         [15.0779],
         [10.0245],
         [ 9.9062]],
        [[11.6771],
         [11.6668],
         [11.6676],
         ...,
         [15.2721],
         [11.6468],
         [11.6491]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9544, 0.9256, 0.9514,  ..., 0.9146, 0.9343, 0.9428],
        [0.8050, 0.8137, 0.8057,  ..., 0.9020, 0.8105, 0.8078],
        [0.7928, 0.8036, 0.7936,  ..., 0.9004, 0.7997, 0.7964],
        ...,
        [0.7790, 0.7920, 0.7801,  ..., 0.8985, 0.7873, 0.7834],
        [0.8172, 0.8236, 0.8177,  ..., 0.9034, 0.8212, 0.8193],
        [0.8481, 0.8479, 0.8479,  ..., 0.9065, 0.8476, 0.8476]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.7922],
         [17.6708],
         [17.6357],
         ...,
         [16.2684],
         [17.4625],
         [17.5778]],
        [[ 9.1282],
         [ 9.1594],
         [ 9.1686],
         ...,
         [15.6550],
         [ 9.2160],
         [ 9.1841]],
        [[ 8.4043],
         [ 8.4438],
         [ 8.4555],
         ...,
         [15.5806],
         [ 8.5150],
         [ 8.4750]],
        ...,
        [[ 7.5852],
         [ 7.6329],
         [ 7.6469],
         ...,
         [15.4889],
         [ 7.7186],
         [ 7.6705]],
        [[ 9.8516],
         [ 9.8737],
         [ 9.8803],
         ...,
         [15.7239],
         [ 9.9144],
         [ 9.8914]],
        [[11.6575],
         [11.6535],
         [11.6524],
         ...,
         [15.8770],
         [11.6483],
         [11.6509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9508, 0.9489, 0.9483,  ..., 0.9260, 0.9455, 0.9473],
        [0.8099, 0.8104, 0.8106,  ..., 0.9161, 0.8113, 0.8108],
        [0.7981, 0.7988, 0.7990,  ..., 0.9149, 0.7999, 0.7993],
        ...,
        [0.7848, 0.7856, 0.7858,  ..., 0.9134, 0.7870, 0.7862],
        [0.8217, 0.8220, 0.8221,  ..., 0.9172, 0.8227, 0.8223],
        [0.8510, 0.8510, 0.8510,  ..., 0.9197, 0.8509, 0.8509]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9416],
         [17.7843],
         [17.6878],
         ...,
         [16.1757],
         [17.3248],
         [17.5652]],
        [[ 9.0915],
         [ 9.1302],
         [ 9.1549],
         ...,
         [15.5335],
         [ 9.2558],
         [ 9.1876]],
        [[ 8.3577],
         [ 8.4069],
         [ 8.4382],
         ...,
         [15.4558],
         [ 8.5647],
         [ 8.4793]],
        ...,
        [[ 7.5288],
         [ 7.5883],
         [ 7.6261],
         ...,
         [15.3599],
         [ 7.7782],
         [ 7.6756]],
        [[ 9.8259],
         [ 9.8531],
         [ 9.8706],
         ...,
         [15.6056],
         [ 9.9433],
         [ 9.8939]],
        [[11.6635],
         [11.6572],
         [11.6540],
         ...,
         [15.7658],
         [11.6463],
         [11.6506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9520, 0.9495, 0.9479,  ..., 0.9233, 0.9420, 0.9459],
        [0.8081, 0.8087, 0.8091,  ..., 0.9129, 0.8108, 0.8097],
        [0.7962, 0.7970, 0.7975,  ..., 0.9116, 0.7995, 0.7981],
        ...,
        [0.7827, 0.7837, 0.7843,  ..., 0.9101, 0.7867, 0.7851],
        [0.8200, 0.8205, 0.8208,  ..., 0.9141, 0.8220, 0.8212],
        [0.8499, 0.8498, 0.8498,  ..., 0.9167, 0.8497, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9481],
         [17.7892],
         [17.6900],
         ...,
         [16.1718],
         [17.3189],
         [17.5647]],
        [[ 9.0899],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5283],
         [ 9.2575],
         [ 9.1877]],
        [[ 8.3558],
         [ 8.4053],
         [ 8.4375],
         ...,
         [15.4505],
         [ 8.5668],
         [ 8.4795]],
        ...,
        [[ 7.5264],
         [ 7.5864],
         [ 7.6252],
         ...,
         [15.3544],
         [ 7.7808],
         [ 7.6759]],
        [[ 9.8249],
         [ 9.8522],
         [ 9.8702],
         ...,
         [15.6006],
         [ 9.9445],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7611],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8522],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],Backward0>)0, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.9484],
         [17.7894],
         [17.6901],
         ...,
         [16.1716],
         [17.3187],
         [17.5647]],
        [[ 9.0898],
         [ 9.1289],
         [ 9.1543],
         ...,
         [15.5281],
         [ 9.2576],
         [ 9.1877]],
        [[ 8.3557],
         [ 8.4052],
         [ 8.4374],
         ...,
         [15.4502],
         [ 8.5669],
         [ 8.4795]],
        ...,
        [[ 7.5263],
         [ 7.5863],
         [ 7.6252],
         ...,
         [15.3541],
         [ 7.7809],
         [ 7.6759]],
        [[ 9.8248],
         [ 9.8521],
         [ 9.8702],
         ...,
         [15.6003],
         [ 9.9446],
         [ 9.8940]],
        [[11.6638],
         [11.6574],
         [11.6540],
         ...,
         [15.7609],
         [11.6463],
         [11.6505]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9521, 0.9495, 0.9479,  ..., 0.9232, 0.9419, 0.9459],
        [0.8080, 0.8087, 0.8091,  ..., 0.9127, 0.8108, 0.8096],
        [0.7961, 0.7969, 0.7974,  ..., 0.9115, 0.7995, 0.7981],
        ...,
        [0.7826, 0.7836, 0.7842,  ..., 0.9099, 0.7867, 0.7850],
        [0.8200, 0.8204, 0.8207,  ..., 0.9139, 0.8219, 0.8211],
        [0.8499, 0.8498, 0.8497,  ..., 0.9165, 0.8496, 0.8497]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 512, 1])
BEFORE NORMALIZATION:
tensor([[[15.1690],
         [33.5102],
         [52.1846],
         ...,
         [21.4599],
         [26.0119],
         [69.3910]],
        [[10.8719],
         [24.1198],
         [35.5517],
         ...,
         [12.8572],
         [15.3383],
         [57.7956]],
        [[10.4328],
         [23.1578],
         [33.9022],
         ...,
         [12.0671],
         [14.3675],
         [56.5022]],
        ...,
        [[ 9.9123],
         [22.0169],
         [31.9608],
         ...,
         [11.1537],
         [13.2475],
         [54.9369]],
        [[11.2937],
         [25.0435],
         [37.1459],
         ...,
         [13.6324],
         [16.2927],
         [59.0160]],
        [[12.2834],
         [27.2087],
         [40.9210],
         ...,
         [15.5124],
         [18.6142],
         [61.8011]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 512])
tensor([[0.8999, 1.1983, 1.5020,  ..., 1.0023, 1.0763, 1.7818],
        [0.8300, 1.0455, 1.2315,  ..., 0.8623, 0.9027, 1.5932],
        [0.8229, 1.0299, 1.2046,  ..., 0.8495, 0.8869, 1.5722],
        ...,
        [0.8144, 1.0113, 1.1730,  ..., 0.8346, 0.8687, 1.5467],
        [0.8369, 1.0605, 1.2574,  ..., 0.8749, 0.9182, 1.6131],
        [0.8530, 1.0958, 1.3188,  ..., 0.9055, 0.9560, 1.6584]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.3186],
         [20.2314],
         [14.6954],
         ...,
         [27.2374],
         [13.9348],
         [18.7296]],
        [[13.0136],
         [14.7606],
         [10.2166],
         ...,
         [17.6318],
         [11.4907],
         [ 8.8385]],
        [[12.6541],
         [14.1957],
         [ 9.7671],
         ...,
         [16.7077],
         [11.2196],
         [ 8.0539]],
        ...,
        [[12.2216],
         [13.5244],
         [ 9.2365],
         ...,
         [15.6278],
         [10.8921],
         [ 7.1762]],
        [[13.3545],
         [15.3022],
         [10.6500],
         ...,
         [18.5303],
         [11.7468],
         [ 9.6306]],
        [[14.1389],
         [16.5685],
         [11.6725],
         ...,
         [20.6782],
         [12.3322],
         [11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9186, 0.9823, 0.8922,  ..., 1.0962, 0.8799, 0.9578],
        [0.8649, 0.8933, 0.8194,  ..., 0.9400, 0.8401, 0.7970],
        [0.8590, 0.8841, 0.8121,  ..., 0.9250, 0.8357, 0.7842],
        ...,
        [0.8520, 0.8732, 0.8034,  ..., 0.9074, 0.8304, 0.7699],
        [0.8704, 0.9021, 0.8264,  ..., 0.9546, 0.8443, 0.8099],
        [0.8832, 0.9227, 0.8431,  ..., 0.9895, 0.8538, 0.8425]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.2253],
         [19.9082],
         [16.9987],
         ...,
         [26.6942],
         [15.0688],
         [18.6340]],
        [[10.8490],
         [14.2764],
         [ 9.2421],
         ...,
         [16.8419],
         [ 9.9613],
         [ 8.8969]],
        [[10.4033],
         [13.7007],
         [ 8.5706],
         ...,
         [15.9086],
         [ 9.4637],
         [ 8.1188]],
        ...,
        [[ 9.8755],
         [13.0183],
         [ 7.8045],
         ...,
         [14.8217],
         [ 8.8806],
         [ 7.2471]],
        [[11.2774],
         [14.8294],
         [ 9.9087],
         ...,
         [17.7522],
         [10.4438],
         [ 9.6813]],
        [[12.2836],
         [16.1266],
         [11.5546],
         ...,
         [19.9387],
         [11.5930],
         [11.6655]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9021, 0.9783, 0.9310,  ..., 1.0887, 0.8996, 0.9576],
        [0.8309, 0.8867, 0.8048,  ..., 0.9284, 0.8165, 0.7992],
        [0.8237, 0.8773, 0.7939,  ..., 0.9132, 0.8084, 0.7865],
        ...,
        [0.8151, 0.8662, 0.7814,  ..., 0.8956, 0.7989, 0.7724],
        [0.8379, 0.8957, 0.8156,  ..., 0.9432, 0.8244, 0.8119],
        [0.8543, 0.9168, 0.8424,  ..., 0.9788, 0.8430, 0.8442]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[15.4886],
         [19.2632],
         [19.0403],
         ...,
         [25.9608],
         [16.0984],
         [18.2716]],
        [[ 9.8848],
         [13.5263],
         [ 8.8687],
         ...,
         [15.7534],
         [ 9.4401],
         [ 9.0164]],
        [[ 9.3503],
         [12.9471],
         [ 8.0683],
         ...,
         [14.8088],
         [ 8.8365],
         [ 8.2616]],
        ...,
        [[ 8.7268],
         [12.2625],
         [ 7.1746],
         ...,
         [13.7147],
         [ 8.1407],
         [ 7.4120]],
        [[10.4054],
         [14.0841],
         [ 9.6779],
         ...,
         [16.6789],
         [10.0338],
         [ 9.7744]],
        [[11.6533],
         [15.3976],
         [11.7344],
         ...,
         [18.9182],
         [11.4796],
         [11.6802]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9046, 0.9660, 0.9623,  ..., 1.0749, 0.9145, 0.9498],
        [0.8134, 0.8727, 0.7969,  ..., 0.9089, 0.8062, 0.7993],
        [0.8047, 0.8632, 0.7839,  ..., 0.8935, 0.7964, 0.7870],
        ...,
        [0.7946, 0.8521, 0.7694,  ..., 0.8757, 0.7851, 0.7732],
        [0.8219, 0.8817, 0.8101,  ..., 0.9239, 0.8159, 0.8116],
        [0.8422, 0.9031, 0.8435,  ..., 0.9604, 0.8394, 0.8426]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1378],
         [17.6138],
         [20.0658],
         ...,
         [23.7447],
         [16.9716],
         [16.8979]],
        [[ 9.1488],
         [11.9938],
         [ 8.7165],
         ...,
         [13.7257],
         [ 9.2326],
         [ 9.3927]],
        [[ 8.4649],
         [11.4367],
         [ 7.8617],
         ...,
         [12.8253],
         [ 8.5624],
         [ 8.7341]],
        ...,
        [[ 7.6867],
         [10.7809],
         [ 6.9164],
         ...,
         [11.7895],
         [ 7.7978],
         [ 7.9806]],
        [[ 9.8292],
         [12.5323],
         [ 9.5880],
         ...,
         [14.6129],
         [ 9.8979],
         [10.0448]],
        [[11.5150],
         [13.8077],
         [11.8318],
         ...,
         [16.7790],
         [11.5404],
         [11.6482]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9259, 0.9336, 0.9735,  ..., 1.0333, 0.9232, 0.9220],
        [0.7959, 0.8422, 0.7889,  ..., 0.8704, 0.7973, 0.7999],
        [0.7848, 0.8331, 0.7750,  ..., 0.8557, 0.7864, 0.7892],
        ...,
        [0.7722, 0.8225, 0.7596,  ..., 0.8389, 0.7740, 0.7769],
        [0.8070, 0.8510, 0.8031,  ..., 0.8848, 0.8081, 0.8105],
        [0.8344, 0.8717, 0.8396,  ..., 0.9200, 0.8348, 0.8366]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.4808],
         [15.9469],
         [20.0658],
         ...,
         [18.4585],
         [16.8849],
         [16.4437]],
        [[ 9.0095],
         [10.8897],
         [ 8.7165],
         ...,
         [12.0834],
         [ 9.2801],
         [ 9.5664]],
        [[ 8.2998],
         [10.3874],
         [ 7.8617],
         ...,
         [11.4659],
         [ 8.6173],
         [ 8.9460]],
        ...,
        [[ 7.4962],
         [ 9.7961],
         [ 6.9164],
         ...,
         [10.7433],
         [ 7.8602],
         [ 8.2315]],
        [[ 9.7185],
         [11.3749],
         [ 9.5880],
         ...,
         [12.6829],
         [ 9.9371],
         [10.1773]],
        [[11.4867],
         [12.5235],
         [11.8318],
         ...,
         [14.1131],
         [11.5562],
         [11.6671]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9315, 0.9065, 0.9735,  ..., 0.9474, 0.9218, 0.9146],
        [0.7937, 0.8243, 0.7889,  ..., 0.8437, 0.7981, 0.8027],
        [0.7821, 0.8161, 0.7750,  ..., 0.8336, 0.7873, 0.7926],
        ...,
        [0.7691, 0.8065, 0.7596,  ..., 0.8219, 0.7750, 0.7810],
        [0.8052, 0.8321, 0.8031,  ..., 0.8534, 0.8088, 0.8127],
        [0.8340, 0.8508, 0.8396,  ..., 0.8767, 0.8351, 0.8369]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.0844],
         [15.4289],
         [19.0552],
         ...,
         [15.4101],
         [16.1965],
         [16.4546]],
        [[ 9.0642],
         [ 9.8808],
         [ 8.8661],
         ...,
         [10.2805],
         [ 9.4782],
         [ 9.5618]],
        [[ 8.3802],
         [ 9.3505],
         [ 8.0649],
         ...,
         [ 9.7781],
         [ 8.8700],
         [ 8.9404]],
        ...,
        [[ 7.6026],
         [ 8.7317],
         [ 7.1705],
         ...,
         [ 9.1885],
         [ 8.1690],
         [ 8.2250]],
        [[ 9.7452],
         [10.3971],
         [ 9.6763],
         ...,
         [10.7672],
         [10.0768],
         [10.1738]],
        [[11.4343],
         [11.6338],
         [11.7356],
         ...,
         [11.9244],
         [11.5347],
         [11.6664]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9252, 0.8982, 0.9572,  ..., 0.8979, 0.9107, 0.9149],
        [0.7947, 0.8080, 0.7915,  ..., 0.8145, 0.8014, 0.8028],
        [0.7836, 0.7994, 0.7785,  ..., 0.8063, 0.7915, 0.7927],
        ...,
        [0.7709, 0.7893, 0.7639,  ..., 0.7967, 0.7801, 0.7811],
        [0.8058, 0.8164, 0.8047,  ..., 0.8224, 0.8112, 0.8128],
        [0.8333, 0.8365, 0.8382,  ..., 0.8412, 0.8349, 0.8370]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.8427],
         [17.0644],
         [18.4478],
         ...,
         [15.6754],
         [15.8504],
         [16.8988]],
        [[ 9.1279],
         [ 9.3367],
         [ 8.9794],
         ...,
         [10.0301],
         [ 9.5911],
         [ 9.3924]],
        [[ 8.4613],
         [ 8.6651],
         [ 8.2137],
         ...,
         [ 9.4907],
         [ 9.0128],
         [ 8.7338]],
        ...,
        [[ 7.7012],
         [ 7.8982],
         [ 7.3535],
         ...,
         [ 8.8615],
         [ 8.3433],
         [ 7.9801]],
        [[ 9.7898],
         [10.0028],
         [ 9.7496],
         ...,
         [10.5552],
         [10.1578],
         [10.0445]],
        [[11.4253],
         [11.6459],
         [11.6908],
         ...,
         [11.8132],
         [11.5298],
         [11.6482]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9255, 0.9291, 0.9516,  ..., 0.9065, 0.9094, 0.9264],
        [0.8001, 0.8034, 0.7976,  ..., 0.8147, 0.8076, 0.8044],
        [0.7892, 0.7925, 0.7852,  ..., 0.8060, 0.7982, 0.7936],
        ...,
        [0.7768, 0.7801, 0.7712,  ..., 0.7957, 0.7873, 0.7814],
        [0.8108, 0.8143, 0.8102,  ..., 0.8233, 0.8168, 0.8150],
        [0.8374, 0.8410, 0.8417,  ..., 0.8437, 0.8391, 0.8410]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[16.7150],
         [19.3513],
         [17.1013],
         ...,
         [15.3036],
         [15.0163],
         [18.2533]],
        [[ 9.1731],
         [ 8.8178],
         [ 9.3247],
         ...,
         [10.0425],
         [ 9.9932],
         [ 9.0204]],
        [[ 8.5164],
         [ 8.0002],
         [ 8.6503],
         ...,
         [ 9.5322],
         [ 9.5020],
         [ 8.2667]],
        ...,
        [[ 7.7664],
         [ 7.0901],
         [ 7.8807],
         ...,
         [ 8.9348],
         [ 8.9257],
         [ 7.4182]],
        [[ 9.8242],
         [ 9.6465],
         [ 9.9940],
         ...,
         [10.5378],
         [10.4693],
         [ 9.7771]],
        [[11.4292],
         [11.7613],
         [11.6457],
         ...,
         [11.7190],
         [11.6017],
         [11.6791]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9227, 0.9656, 0.9290,  ..., 0.8998, 0.8951, 0.9477],
        [0.8001, 0.7943, 0.8025,  ..., 0.8142, 0.8134, 0.7976],
        [0.7894, 0.7810, 0.7915,  ..., 0.8059, 0.8054, 0.7853],
        ...,
        [0.7772, 0.7662, 0.7790,  ..., 0.7962, 0.7960, 0.7715],
        [0.8106, 0.8078, 0.8134,  ..., 0.8222, 0.8211, 0.8099],
        [0.8367, 0.8421, 0.8403,  ..., 0.8415, 0.8396, 0.8408]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[17.1600],
         [20.0658],
         [16.4385],
         ...,
         [14.3913],
         [14.8114],
         [19.0172]],
        [[ 9.0841],
         [ 8.7165],
         [ 9.5686],
         ...,
         [10.4229],
         [10.0694],
         [ 8.8726]],
        [[ 8.3963],
         [ 7.8617],
         [ 8.9486],
         ...,
         [10.0148],
         [ 9.5997],
         [ 8.0736]],
        ...,
        [[ 7.6145],
         [ 6.9164],
         [ 8.2347],
         ...,
         [ 9.5305],
         [ 9.0470],
         [ 7.1811]],
        [[ 9.7690],
         [ 9.5880],
         [10.1790],
         ...,
         [10.8143],
         [10.5234],
         [ 9.6804]],
        [[11.4687],
         [11.8318],
         [11.6674],
         ...,
         [11.7310],
         [11.5990],
         [11.7325]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9262, 0.9735, 0.9145,  ..., 0.8812, 0.8880, 0.9564],
        [0.7949, 0.7889, 0.8028,  ..., 0.8167, 0.8109, 0.7914],
        [0.7837, 0.7750, 0.7927,  ..., 0.8100, 0.8033, 0.7784],
        ...,
        [0.7710, 0.7596, 0.7811,  ..., 0.8021, 0.7943, 0.7639],
        [0.8060, 0.8031, 0.8127,  ..., 0.8230, 0.8183, 0.8046],
        [0.8337, 0.8396, 0.8369,  ..., 0.8379, 0.8358, 0.8380]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.3294],
         [19.4400],
         [16.1634],
         ...,
         [15.1654],
         [15.2561],
         [19.2436]],
        [[ 8.9134],
         [ 8.8041],
         [ 9.6923],
         ...,
         [ 9.9586],
         [ 9.7324],
         [ 8.8349]],
        [[ 8.1524],
         [ 7.9818],
         [ 9.0978],
         ...,
         [ 9.4534],
         [ 9.2057],
         [ 8.0232]],
        ...,
        [[ 7.2976],
         [ 7.0671],
         [ 8.4102],
         ...,
         [ 8.8618],
         [ 8.5913],
         [ 7.1188]],
        [[ 9.6789],
         [ 9.6383],
         [10.2757],
         ...,
         [10.4489],
         [10.2455],
         [ 9.6569]],
        [[11.6089],
         [11.7695],
         [11.6903],
         ...,
         [11.6181],
         [11.4753],
         [11.7517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9485, 0.9665, 0.9133,  ..., 0.8970, 0.8985, 0.9634],
        [0.7953, 0.7936, 0.8080,  ..., 0.8123, 0.8087, 0.7941],
        [0.7830, 0.7802, 0.7983,  ..., 0.8041, 0.8001, 0.7809],
        ...,
        [0.7691, 0.7653, 0.7872,  ..., 0.7945, 0.7901, 0.7661],
        [0.8078, 0.8071, 0.8175,  ..., 0.8203, 0.8170, 0.8074],
        [0.8392, 0.8418, 0.8405,  ..., 0.8393, 0.8370, 0.8415]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[20.0658],
         [81.5563],
         [81.5563],
         ...,
         [20.0658],
         [20.0658],
         [20.0658]],
        [[ 8.7165],
         [73.3422],
         [73.3422],
         ...,
         [ 8.7165],
         [ 8.7165],
         [ 8.7165]],
        [[ 7.8617],
         [72.3847],
         [72.3847],
         ...,
         [ 7.8617],
         [ 7.8617],
         [ 7.8617]],
        ...,
        [[ 6.9164],
         [71.2136],
         [71.2136],
         ...,
         [ 6.9164],
         [ 6.9164],
         [ 6.9164]],
        [[ 9.5880],
         [74.2374],
         [74.2374],
         ...,
         [ 9.5880],
         [ 9.5880],
         [ 9.5880]],
        [[11.8318],
         [76.2518],
         [76.2518],
         ...,
         [11.8318],
         [11.8318],
         [11.8318]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9735, 1.9736, 1.9736,  ..., 0.9735, 0.9735, 0.9735],
        [0.7889, 1.8400, 1.8400,  ..., 0.7889, 0.7889, 0.7889],
        [0.7750, 1.8245, 1.8245,  ..., 0.7750, 0.7750, 0.7750],
        ...,
        [0.7596, 1.8054, 1.8054,  ..., 0.7596, 0.7596, 0.7596],
        [0.8031, 1.8546, 1.8546,  ..., 0.8031, 0.8031, 0.8031],
        [0.8396, 1.8873, 1.8873,  ..., 0.8396, 0.8396, 0.8396]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.6080],
         [19.0465],
         [15.9642],
         ...,
         [15.5142],
         [15.3809],
         [19.2942]],
        [[ 8.8828],
         [ 8.8676],
         [ 9.7930],
         ...,
         [ 9.8630],
         [ 9.6614],
         [ 8.8268]],
        [[ 8.1058],
         [ 8.0669],
         [ 9.2181],
         ...,
         [ 9.3252],
         [ 9.1210],
         [ 8.0123]],
        ...,
        [[ 7.2352],
         [ 7.1729],
         [ 8.5513],
         ...,
         [ 8.6983],
         [ 8.4921],
         [ 7.1052]],
        [[ 9.6662],
         [ 9.6772],
         [10.3555],
         ...,
         [10.3871],
         [10.1887],
         [ 9.6520]],
        [[11.6478],
         [11.7349],
         [11.7137],
         ...,
         [11.6440],
         [11.4563],
         [11.7562]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9538, 0.9610, 0.9108,  ..., 0.9035, 0.9013, 0.9650],
        [0.7957, 0.7954, 0.8105,  ..., 0.8116, 0.8083, 0.7947],
        [0.7830, 0.7824, 0.8011,  ..., 0.8028, 0.7995, 0.7815],
        ...,
        [0.7689, 0.7678, 0.7903,  ..., 0.7927, 0.7893, 0.7667],
        [0.8084, 0.8086, 0.8196,  ..., 0.8201, 0.8169, 0.8082],
        [0.8406, 0.8420, 0.8417,  ..., 0.8406, 0.8375, 0.8424]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.6002],
         [19.2910],
         [16.0954],
         ...,
         [15.4961],
         [15.3675],
         [19.2899]],
        [[ 8.8839],
         [ 8.8273],
         [ 9.7256],
         ...,
         [ 9.8726],
         [ 9.6689],
         [ 8.8274]],
        [[ 8.1073],
         [ 8.0130],
         [ 9.1376],
         ...,
         [ 9.3367],
         [ 9.1299],
         [ 8.0133]],
        ...,
        [[ 7.2372],
         [ 7.1061],
         [ 8.4570],
         ...,
         [ 8.7119],
         [ 8.5026],
         [ 7.1064]],
        [[ 9.6667],
         [ 9.6523],
         [10.3019],
         ...,
         [10.3946],
         [10.1947],
         [ 9.6524]],
        [[11.6469],
         [11.7559],
         [11.6976],
         ...,
         [11.6462],
         [11.4584],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9537, 0.9650, 0.9130,  ..., 0.9032, 0.9011, 0.9649],
        [0.7957, 0.7948, 0.8094,  ..., 0.8118, 0.8085, 0.7948],
        [0.7831, 0.7815, 0.7998,  ..., 0.8031, 0.7997, 0.7815],
        ...,
        [0.7689, 0.7668, 0.7887,  ..., 0.7929, 0.7895, 0.7668],
        [0.8084, 0.8082, 0.8188,  ..., 0.8203, 0.8170, 0.8082],
        [0.8406, 0.8424, 0.8415,  ..., 0.8406, 0.8376, 0.8424]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3191],
         [16.1106],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0071],
         [ 9.1286],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0986],
         [ 8.4464],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2960],
         ...,
         [10.3954],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7584],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051],
         [10.8051],
         [10.8051],
         ...,
         [10.8051],
         [10.8051],
         [10.8051]],
        [[10.6368],
         [10.6368],
         [10.6368],
         ...,
         [10.6368],
         [10.6368],
         [10.6368]],
        [[10.6161],
         [10.6161],
         [10.6161],
         ...,
         [10.6161],
         [10.6161],
         [10.6161]],
        ...,
        [[10.5905],
         [10.5905],
         [10.5905],
         ...,
         [10.5905],
         [10.5905],
         [10.5905]],
        [[10.6559],
         [10.6559],
         [10.6559],
         ...,
         [10.6559],
         [10.6559],
         [10.6559]],
        [[10.6981],
         [10.6981],
         [10.6981],
         ...,
         [10.6981],
         [10.6981],
         [10.6981]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[1.0531, 1.0531, 1.0531,  ..., 1.0531, 1.0531, 1.0531],
        [1.0495, 1.0495, 1.0495,  ..., 1.0495, 1.0495, 1.0495],
        [1.0490, 1.0490, 1.0490,  ..., 1.0490, 1.0490, 1.0490],
        ...,
        [1.0485, 1.0485, 1.0485,  ..., 1.0485, 1.0485, 1.0485],
        [1.0499, 1.0499, 1.0499,  ..., 1.0499, 1.0499, 1.0499],
        [1.0508, 1.0508, 1.0508,  ..., 1.0508, 1.0508, 1.0508]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 1])
BEFORE NORMALIZATION:
tensor([[[18.5993],
         [19.3194],
         [16.1107],
         ...,
         [15.4940],
         [15.3660],
         [19.2895]],
        [[ 8.8840],
         [ 8.8228],
         [ 9.7180],
         ...,
         [ 9.8737],
         [ 9.6698],
         [ 8.8275]],
        [[ 8.1075],
         [ 8.0070],
         [ 9.1285],
         ...,
         [ 9.3380],
         [ 9.1310],
         [ 8.0134]],
        ...,
        [[ 7.2374],
         [ 7.0985],
         [ 8.4463],
         ...,
         [ 8.7134],
         [ 8.5038],
         [ 7.1065]],
        [[ 9.6668],
         [ 9.6496],
         [10.2959],
         ...,
         [10.3955],
         [10.1954],
         [ 9.6524]],
        [[11.6468],
         [11.7585],
         [11.6959],
         ...,
         [11.6464],
         [11.4586],
         [11.7558]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10])
tensor([[0.9535, 0.9653, 0.9131,  ..., 0.9030, 0.9010, 0.9648],
        [0.7955, 0.7945, 0.8091,  ..., 0.8116, 0.8083, 0.7946],
        [0.7829, 0.7813, 0.7995,  ..., 0.8029, 0.7995, 0.7814],
        ...,
        [0.7687, 0.7665, 0.7884,  ..., 0.7928, 0.7893, 0.7666],
        [0.8083, 0.8080, 0.8185,  ..., 0.8201, 0.8169, 0.8080],
        [0.8405, 0.8423, 0.8413,  ..., 0.8405, 0.8374, 0.8422]],
       device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[11.1712]],
        [[10.9957]],
        [[10.9741]],
        [[11.0388]],
        [[11.0447]],
        [[10.9574]],
        [[11.0197]],
        [[11.0652]],
        [[11.0774]],
        [[11.0116]],
        [[10.9324]],
        [[11.0543]],
        [[11.0299]],
        [[10.9857]],
        [[11.0043]],
        [[11.1025]],
        [[11.0917]],
        [[11.0001]],
        [[10.9805]],
        [[11.0259]],
        [[11.0496]],
        [[10.9056]],
        [[11.0074]],
        [[11.0708]],
        [[11.0594]],
        [[11.0154]],
        [[10.9470]],
        [[11.0401]],
        [[11.0345]],
        [[10.9674]],
        [[10.9908]],
        [[11.1186]],
        [[11.1079]],
        [[10.9885]],
        [[10.9650]],
        [[11.0315]],
        [[11.0432]],
        [[10.9506]],
        [[11.0173]],
        [[11.0626]],
        [[11.0754]],
        [[11.0088]],
        [[10.9212]],
        [[11.0523]],
        [[11.0236]],
        [[10.9780]],
        [[10.9986]],
        [[11.0853]],
        [[11.0946]],
        [[11.0030]],
        [[10.9835]],
        [[11.0276]],
        [[11.0571]],
        [[10.9391]],
        [[11.0128]],
        [[11.0824]],
        [[11.0685]],
        [[11.0215]],
        [[10.9599]],
        [[11.0478]],
        [[11.0359]],
        [[10.9722]],
        [[10.9937]],
        [[11.1312]],
        [[11.1228]],
        [[10.9924]],
        [[10.9705]],
        [[11.0347]],
        [[11.0465]],
        [[10.9575]],
        [[11.0204]],
        [[11.0667]],
        [[11.0808]],
        [[11.0119]],
        [[10.9357]],
        [[11.0560]],
        [[11.0267]],
        [[10.9822]],
        [[11.0020]],
        [[11.0924]],
        [[11.0830]],
        [[10.9973]],
        [[10.9762]],
        [[11.0224]],
        [[11.0510]],
        [[10.9125]],
        [[11.0076]],
        [[11.0736]],
        [[11.0613]],
        [[11.0164]],
        [[10.9483]],
        [[11.0422]],
        [[11.0306]],
        [[10.9634]],
        [[10.9875]],
        [[11.1046]],
        [[11.1139]],
        [[10.9898]],
        [[10.9659]],
        [[11.0335]],
        [[11.0391]],
        [[10.9445]],
        [[11.0145]],
        [[11.0583]],
        [[11.0691]],
        [[11.0061]],
        [[10.8832]],
        [[11.0482]],
        [[11.0248]],
        [[10.9789]],
        [[10.9988]],
        [[11.0891]],
        [[11.0999]],
        [[11.0033]],
        [[10.9845]],
        [[11.0290]],
        [[11.0533]],
        [[10.9281]],
        [[11.0106]],
        [[11.0759]],
        [[11.0636]],
        [[11.0186]],
        [[10.9549]],
        [[11.0434]],
        [[11.0376]],
        [[10.9724]],
        [[10.9944]],
        [[11.1424]],
        [[11.1412]],
        [[10.9948]],
        [[10.9737]],
        [[11.0370]],
        [[11.0444]],
        [[10.9533]],
        [[11.0184]],
        [[11.0642]],
        [[11.0770]],
        [[11.0097]],
        [[10.9264]],
        [[11.0534]],
        [[11.0286]],
        [[10.9847]],
        [[11.0040]],
        [[11.0971]],
        [[11.0876]],
        [[10.9998]],
        [[10.9795]],
        [[11.0246]],
        [[11.0487]],
        [[10.8800]],
        [[11.0055]],
        [[11.0704]],
        [[11.0584]],
        [[11.0141]],
        [[10.9416]],
        [[11.0398]],
        [[11.0326]],
        [[10.9670]],
        [[10.9899]],
        [[11.1124]],
        [[11.1052]],
        [[10.9869]],
        [[10.9617]],
        [[11.0312]],
        [[11.0412]],
        [[10.9499]],
        [[11.0165]],
        [[11.0609]],
        [[11.0724]],
        [[11.0085]],
        [[10.9157]],
        [[11.0508]],
        [[11.0228]],
        [[10.9761]],
        [[10.9966]],
        [[11.0848]],
        [[11.0939]],
        [[11.0011]],
        [[10.9818]],
        [[11.0269]],
        [[11.0555]],
        [[10.9363]],
        [[11.0126]],
        [[11.0791]],
        [[11.0666]],
        [[11.0207]],
        [[10.9594]],
        [[11.0458]],
        [[11.0357]],
        [[10.9693]],
        [[10.9922]],
        [[11.1254]],
        [[11.1322]],
        [[10.9933]],
        [[10.9709]],
        [[11.0366]],
        [[11.0468]],
        [[10.9612]],
        [[11.0216]],
        [[11.0679]],
        [[11.0813]],
        [[11.0137]],
        [[10.9404]],
        [[11.0570]],
        [[11.0280]],
        [[10.9832]],
        [[11.0023]],
        [[11.0970]],
        [[11.0867]],
        [[10.9975]],
        [[10.9773]],
        [[11.0237]],
        [[11.0519]],
        [[10.9218]],
        [[11.0094]],
        [[11.0740]],
        [[11.0623]],
        [[11.0177]],
        [[10.9528]],
        [[11.0424]],
        [[11.0324]],
        [[10.9639]],
        [[10.9884]],
        [[11.1094]],
        [[11.1177]],
        [[10.9913]],
        [[10.9690]],
        [[11.0338]],
        [[11.0410]],
        [[10.9452]],
        [[11.0153]],
        [[11.0599]],
        [[11.0718]],
        [[11.0064]],
        [[10.8998]],
        [[11.0497]],
        [[11.0256]],
        [[10.9807]],
        [[11.0007]],
        [[11.0897]],
        [[11.1006]],
        [[11.0052]],
        [[10.9862]],
        [[11.0298]],
        [[11.0548]],
        [[10.9317]],
        [[11.0109]],
        [[11.0790]],
        [[11.0654]],
        [[11.0194]],
        [[10.9555]],
        [[11.0454]],
        [[11.0379]],
        [[10.9751]],
        [[10.9958]],
        [[11.1559]],
        [[11.1547]],
        [[10.9964]],
        [[10.9750]],
        [[11.0383]],
        [[11.0452]],
        [[10.9562]],
        [[11.0192]],
        [[11.0658]],
        [[11.0783]],
        [[11.0110]],
        [[10.9298]],
        [[11.0549]],
        [[11.0295]],
        [[10.9864]],
        [[11.0049]],
        [[11.1012]],
        [[11.0904]],
        [[11.0005]],
        [[10.9811]],
        [[11.0254]],
        [[11.0503]],
        [[10.8991]],
        [[11.0069]],
        [[11.0717]],
        [[11.0601]],
        [[11.0150]],
        [[10.9457]],
        [[11.0407]],
        [[11.0339]],
        [[10.9682]],
        [[10.9914]],
        [[11.1155]],
        [[11.1101]],
        [[10.9880]],
        [[10.9643]],
        [[11.0321]],
        [[11.0425]],
        [[10.9517]],
        [[11.0178]],
        [[11.0618]],
        [[11.0745]],
        [[11.0092]],
        [[10.9237]],
        [[11.0517]],
        [[11.0242]],
        [[10.9773]],
        [[10.9981]],
        [[11.0866]],
        [[11.0959]],
        [[11.0024]],
        [[10.9827]],
        [[11.0281]],
        [[11.0566]],
        [[10.9409]],
        [[11.0134]],
        [[11.0817]],
        [[11.0678]],
        [[11.0221]],
        [[10.9611]],
        [[11.0473]],
        [[11.0364]],
        [[10.9714]],
        [[10.9930]],
        [[11.1350]],
        [[11.1259]],
        [[10.9917]],
        [[10.9695]],
        [[11.0352]],
        [[11.0460]],
        [[10.9587]],
        [[11.0209]],
        [[11.0661]],
        [[11.0799]],
        [[11.0125]],
        [[10.9380]],
        [[11.0554]],
        [[11.0272]],
        [[10.9815]],
        [[11.0014]],
        [[11.0934]],
        [[11.0841]],
        [[10.9968]],
        [[10.9756]],
        [[11.0230]],
        [[11.0503]],
        [[10.9163]],
        [[11.0081]],
        [[11.0726]],
        [[11.0606]],
        [[11.0168]],
        [[10.9494]],
        [[11.0416]],
        [[11.0312]],
        [[10.9626]],
        [[10.9869]],
        [[11.1068]],
        [[11.1115]],
        [[10.9903]],
        [[10.9666]],
        [[11.0329]],
        [[11.0397]],
        [[10.9430]],
        [[11.0140]],
        [[11.0590]],
        [[11.0699]],
        [[11.0057]],
        [[10.8560]],
        [[11.0489]],
        [[11.0242]],
        [[10.9796]],
        [[10.9993]],
        [[11.0878]],
        [[11.0984]],
        [[11.0040]],
        [[10.9853]],
        [[11.0285]],
        [[11.0538]],
        [[10.9253]],
        [[11.0101]],
        [[11.0766]],
        [[11.0643]],
        [[11.0180]],
        [[10.9535]],
        [[11.0440]],
        [[11.0371]],
        [[10.9732]],
        [[10.9950]],
        [[11.1373]],
        [[11.1497]],
        [[10.9943]],
        [[10.9731]],
        [[11.0375]],
        [[11.0438]],
        [[10.9544]],
        [[11.0189]],
        [[11.0633]],
        [[11.0760]],
        [[11.0102]],
        [[10.9285]],
        [[11.0528]],
        [[11.0292]],
        [[10.9841]],
        [[11.0035]],
        [[11.0989]],
        [[11.0886]],
        [[10.9991]],
        [[10.9786]],
        [[11.0251]],
        [[11.0482]],
        [[10.8948]],
        [[11.0061]],
        [[11.0698]],
        [[11.0578]],
        [[11.0147]],
        [[10.9435]],
        [[11.0393]],
        [[11.0331]],
        [[10.9660]],
        [[10.9892]],
        [[11.1143]],
        [[11.1035]],
        [[10.9877]],
        [[10.9628]],
        [[11.0307]],
        [[11.0417]],
        [[10.9485]],
        [[11.0160]],
        [[11.0614]],
        [[11.0732]],
        [[11.0079]],
        [[10.9106]],
        [[11.0514]],
        [[11.0224]],
        [[10.9769]],
        [[10.9972]],
        [[11.0839]],
        [[11.0926]],
        [[11.0015]],
        [[10.9823]],
        [[11.0263]],
        [[11.0563]],
        [[10.9344]],
        [[11.0121]],
        [[11.0802]],
        [[11.0674]],
        [[11.0203]],
        [[10.9585]],
        [[11.0464]],
        [[11.0350]],
        [[10.9701]],
        [[10.9927]],
        [[11.1216]],
        [[11.1278]],
        [[10.9938]],
        [[10.9715]],
        [[11.0360]],
        [[11.0475]],
        [[10.9603]],
        [[11.0212]],
        [[11.0688]],
        [[11.0823]],
        [[11.0133]],
        [[10.9389]],
        [[11.0577]],
        [[11.0274]],
        [[10.9839]],
        [[11.0028]],
        [[11.0954]],
        [[11.0857]],
        [[10.9982]],
        [[10.9782]],
        [[11.0232]],
        [[11.0524]],
        [[10.9183]],
        [[11.0089]],
        [[11.0747]],
        [[11.0630]],
        [[11.0171]],
        [[10.9513]],
        [[11.0430]],
        [[11.0320]],
        [[10.9649]],
        [[10.9891]],
        [[11.1077]],
        [[11.1202]],
        [[10.9906]],
        [[10.9679]],
        [[11.0343]],
        [[11.0406]],
        [[10.9468]],
        [[11.0159]],
        [[11.0594]],
        [[11.0711]],
        [[11.0071]],
        [[10.9076]],
        [[11.0492]],
        [[11.0260]],
        [[10.9799]],
        [[11.0002]],
        [[11.0906]],
        [[11.1023]],
        [[11.0048]],
        [[10.9856]],
        [[11.0304]],
        [[11.0541]],
        [[10.9337]],
        [[11.0114]],
        [[11.0779]],
        [[11.0646]],
        [[11.0198]],
        [[10.9564]],
        [[11.0448]],
        [[11.0385]],
        [[10.9744]],
        [[10.9953]],
        [[11.1843]],
        [[11.1915]],
        [[10.9954]],
        [[10.9745]],
        [[11.0386]],
        [[11.0450]],
        [[10.9568]],
        [[11.0200]],
        [[11.0649]],
        [[11.0778]],
        [[11.0113]],
        [[10.9335]],
        [[11.0540]],
        [[11.0302]],
        [[10.9854]],
        [[11.0046]],
        [[11.1017]],
        [[11.0911]],
        [[11.0004]],
        [[10.9802]],
        [[11.0262]],
        [[11.0493]],
        [[10.9082]],
        [[11.0071]],
        [[11.0711]],
        [[11.0591]],
        [[11.0157]],
        [[10.9463]],
        [[11.0404]],
        [[11.0342]],
        [[10.9678]],
        [[10.9905]],
        [[11.1199]],
        [[11.1071]],
        [[10.9889]],
        [[10.9646]],
        [[11.0318]],
        [[11.0429]],
        [[10.9511]],
        [[11.0170]],
        [[11.0629]],
        [[11.0750]],
        [[11.0091]],
        [[10.9195]],
        [[11.0526]],
        [[11.0233]],
        [[10.9783]],
        [[10.9983]],
        [[11.0858]],
        [[11.0952]],
        [[11.0027]],
        [[10.9838]],
        [[11.0274]],
        [[11.0574]],
        [[10.9382]],
        [[11.0131]],
        [[11.0820]],
        [[11.0689]],
        [[11.0212]],
        [[10.9604]],
        [[11.0475]],
        [[11.0362]],
        [[10.9718]],
        [[10.9940]],
        [[11.1292]],
        [[11.1212]],
        [[10.9927]],
        [[10.9700]],
        [[11.0350]],
        [[11.0462]],
        [[10.9581]],
        [[11.0201]],
        [[11.0671]],
        [[11.0803]],
        [[11.0121]],
        [[10.9347]],
        [[11.0563]],
        [[11.0265]],
        [[10.9826]],
        [[11.0017]],
        [[11.0930]],
        [[11.0836]],
        [[10.9970]],
        [[10.9766]],
        [[11.0222]],
        [[11.0513]],
        [[10.9099]],
        [[11.0078]],
        [[11.0731]],
        [[11.0617]],
        [[11.0162]],
        [[10.9490]],
        [[11.0419]],
        [[11.0308]],
        [[10.9630]],
        [[10.9878]],
        [[11.1038]],
        [[11.1152]],
        [[10.9895]],
        [[10.9664]],
        [[11.0333]],
        [[11.0393]],
        [[10.9437]],
        [[11.0148]],
        [[11.0579]],
        [[11.0694]],
        [[11.0059]],
        [[10.8905]],
        [[11.0480]],
        [[11.0251]],
        [[10.9785]],
        [[10.9990]],
        [[11.0885]],
        [[11.0990]],
        [[11.0036]],
        [[10.9842]],
        [[11.0293]],
        [[11.0530]],
        [[10.9295]],
        [[11.0104]],
        [[11.0764]],
        [[11.0632]],
        [[11.0189]],
        [[10.9543]],
        [[11.0437]],
        [[11.0373]],
        [[10.9728]],
        [[10.9941]],
        [[11.1463]],
        [[11.1381]],
        [[10.9951]],
        [[10.9733]],
        [[11.0372]],
        [[11.0442]],
        [[10.9540]],
        [[11.0182]],
        [[11.0645]],
        [[11.0765]],
        [[11.0100]],
        [[10.9249]],
        [[11.0537]],
        [[11.0283]],
        [[10.9851]],
        [[11.0037]],
        [[11.0979]],
        [[11.0882]],
        [[10.9995]],
        [[10.9798]],
        [[11.0244]],
        [[11.0489]],
        [[10.8646]],
        [[11.0058]],
        [[11.0700]],
        [[11.0588]],
        [[11.0138]],
        [[10.9424]],
        [[11.0395]],
        [[11.0329]],
        [[10.9665]],
        [[10.9902]],
        [[11.1112]],
        [[11.1061]],
        [[10.9867]],
        [[10.9622]],
        [[11.0310]],
        [[11.0415]],
        [[10.9492]],
        [[11.0168]],
        [[11.0605]],
        [[11.0729]],
        [[11.0083]],
        [[10.9178]],
        [[11.0505]],
        [[11.0230]],
        [[10.9757]],
        [[10.9969]],
        [[11.0842]],
        [[11.0933]],
        [[11.0013]],
        [[10.9814]],
        [[11.0271]],
        [[11.0552]],
        [[10.9373]],
        [[11.0123]],
        [[11.0796]],
        [[11.0662]],
        [[11.0210]],
        [[10.9588]],
        [[11.0461]],
        [[11.0354]],
        [[10.9698]],
        [[10.9919]],
        [[11.1273]],
        [[11.1345]],
        [[10.9930]],
        [[10.9713]],
        [[11.0363]],
        [[11.0471]],
        [[10.9607]],
        [[11.0219]],
        [[11.0675]],
        [[11.0818]],
        [[11.0134]],
        [[10.9411]],
        [[11.0567]],
        [[11.0283]],
        [[10.9829]],
        [[11.0026]],
        [[11.0964]],
        [[11.0862]],
        [[10.9979]],
        [[10.9770]],
        [[11.0240]],
        [[11.0516]],
        [[10.9233]],
        [[11.0092]],
        [[11.0744]],
        [[11.0620]],
        [[11.0180]],
        [[10.9522]],
        [[11.0427]],
        [[11.0321]],
        [[10.9644]],
        [[10.9881]],
        [[11.1103]],
        [[11.1164]],
        [[10.9916]],
        [[10.9686]],
        [[11.0341]],
        [[11.0407]],
        [[10.9460]],
        [[11.0150]],
        [[11.0602]],
        [[11.0714]],
        [[11.0067]],
        [[10.8960]],
        [[11.0500]],
        [[11.0253]],
        [[10.9810]],
        [[11.0005]],
        [[11.0902]],
        [[11.1014]],
        [[11.0049]],
        [[10.9865]],
        [[11.0295]],
        [[11.0552]],
        [[10.9306]],
        [[11.0112]],
        [[11.0786]],
        [[11.0657]],
        [[11.0191]],
        [[10.9560]],
        [[11.0451]],
        [[11.0381]],
        [[10.9748]],
        [[10.9961]],
        [[11.1509]],
        [[11.1615]],
        [[10.9961]],
        [[10.9754]],
        [[11.0380]],
        [[11.0455]],
        [[10.9556]],
        [[11.0195]],
        [[11.0655]],
        [[11.0787]],
        [[11.0107]],
        [[10.9308]],
        [[11.0546]],
        [[11.0297]],
        [[10.9861]],
        [[11.0051]],
        [[11.1004]],
        [[11.0898]],
        [[11.0008]],
        [[10.9808]],
        [[11.0257]],
        [[11.0499]],
        [[10.9027]],
        [[11.0066]],
        [[11.0721]],
        [[11.0598]],
        [[11.0153]],
        [[10.9451]],
        [[11.0409]],
        [[11.0336]],
        [[10.9686]],
        [[10.9911]],
        [[11.1167]],
        [[11.1091]],
        [[10.9884]],
        [[10.9638]],
        [[11.0323]],
        [[11.0422]],
        [[10.9523]],
        [[11.0175]],
        [[11.0621]],
        [[11.0741]],
        [[11.0095]],
        [[10.9223]],
        [[11.0520]],
        [[11.0239]],
        [[10.9776]],
        [[10.9978]],
        [[11.0871]],
        [[11.0965]],
        [[11.0021]],
        [[10.9830]],
        [[11.0278]],
        [[11.0569]],
        [[10.9401]],
        [[11.0137]],
        [[11.0812]],
        [[11.0681]],
        [[11.0218]],
        [[10.9616]],
        [[11.0470]],
        [[11.0366]],
        [[10.9710]],
        [[10.9933]],
        [[11.1328]],
        [[11.1242]],
        [[10.9919]],
        [[10.9690]],
        [[11.0355]],
        [[11.0457]],
        [[10.9593]],
        [[11.0207]],
        [[11.0665]],
        [[11.0794]],
        [[11.0128]],
        [[10.9370]],
        [[11.0557]],
        [[11.0269]],
        [[10.9819]],
        [[11.0011]],
        [[11.0941]],
        [[11.0846]],
        [[10.9965]],
        [[10.9760]],
        [[11.0227]],
        [[11.0506]],
        [[10.9142]],
        [[11.0083]],
        [[11.0722]],
        [[11.0610]],
        [[11.0166]],
        [[10.9501]],
        [[11.0413]],
        [[11.0314]],
        [[10.9620]],
        [[10.9872]],
        [[11.1058]],
        [[11.1127]],
        [[10.9900]],
        [[10.9671]],
        [[11.0327]],
        [[11.0400]],
        [[10.9422]],
        [[11.0143]],
        [[11.0587]],
        [[11.0703]],
        [[11.0055]],
        [[10.8776]],
        [[11.0486]],
        [[11.0244]],
        [[10.9792]],
        [[10.9996]],
        [[11.0872]],
        [[11.0977]],
        [[11.0042]],
        [[10.9850]],
        [[11.0288]],
        [[11.0535]],
        [[10.9267]],
        [[11.0098]],
        [[11.0771]],
        [[11.0639]],
        [[11.0183]],
        [[10.9529]],
        [[11.0442]],
        [[11.0369]],
        [[10.9736]],
        [[10.9947]],
        [[11.1405]],
        [[11.1450]],
        [[10.9946]],
        [[10.9727]],
        [[11.0378]],
        [[11.0435]],
        [[10.9551]],
        [[11.0187]],
        [[11.0637]],
        [[11.0756]],
        [[11.0104]],
        [[10.9272]],
        [[11.0530]],
        [[11.0290]],
        [[10.9844]],
        [[11.0032]],
        [[11.0996]],
        [[11.0893]],
        [[10.9988]],
        [[10.9790]],
        [[11.0249]],
        [[11.0485]],
        [[10.8886]],
        [[11.0064]],
        [[11.0693]],
        [[11.0582]],
        [[11.0145]],
        [[10.9443]],
        [[11.0390]],
        [[11.0333]],
        [[10.9655]],
        [[10.9895]],
        [[11.1131]],
        [[11.1045]],
        [[10.9874]],
        [[10.9633]],
        [[11.0305]],
        [[11.0420]],
        [[10.9477]],
        [[11.0162]],
        [[11.0611]],
        [[11.0737]],
        [[11.0076]],
        [[10.9130]],
        [[11.0511]],
        [[11.0226]],
        [[10.9765]],
        [[10.9975]],
        [[11.0834]],
        [[11.0919]],
        [[11.0018]],
        [[10.9820]],
        [[11.0266]],
        [[11.0559]],
        [[10.9355]],
        [[11.0118]],
        [[11.0807]],
        [[11.0670]],
        [[11.0205]],
        [[10.9580]],
        [[11.0467]],
        [[11.0348]],
        [[10.9706]],
        [[10.9925]],
        [[11.1232]],
        [[11.1296]],
        [[10.9935]],
        [[10.9719]],
        [[11.0357]],
        [[11.0478]],
        [[10.9598]],
        [[11.0214]],
        [[11.0684]],
        [[11.0828]],
        [[11.0130]],
        [[10.9398]],
        [[11.0573]],
        [[11.0277]],
        [[10.9836]],
        [[11.0031]],
        [[11.0948]],
        [[11.0852]],
        [[10.9985]],
        [[10.9779]],
        [[11.0235]],
        [[11.0521]],
        [[10.9199]],
        [[11.0086]],
        [[11.0751]],
        [[11.0627]],
        [[11.0174]],
        [[10.9507]],
        [[11.0433]],
        [[11.0317]],
        [[10.9654]],
        [[10.9888]],
        [[11.1087]],
        [[11.1189]],
        [[10.9909]],
        [[10.9675]],
        [[11.0346]],
        [[11.0403]],
        [[10.9475]],
        [[11.0156]],
        [[11.0597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.0038],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0007],
        [1.0023],
        [1.0020],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0003],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0031],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0005],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0014],
        [1.0019],
        [1.0023],
        [1.0008],
        [1.0017],
        [1.0027],
        [1.0025],
        [1.0019],
        [1.0010],
        [1.0022],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0033],
        [1.0032],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0025],
        [1.0026],
        [1.0017],
        [1.0007],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0015],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0004],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0031],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0008],
        [1.0018],
        [1.0023],
        [1.0025],
        [1.0017],
        [1.0000],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0027],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0020],
        [1.0023],
        [1.0006],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0021],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0035],
        [1.0034],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0006],
        [1.0023],
        [1.0019],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0027],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0000],
        [1.0016],
        [1.0025],
        [1.0023],
        [1.0018],
        [1.0008],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0031],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0005],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0025],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0032],
        [1.0033],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0011],
        [1.0019],
        [1.0025],
        [1.0026],
        [1.0018],
        [1.0008],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0029],
        [1.0027],
        [1.0015],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0005],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0031],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0021],
        [1.0008],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0002],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0020],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0036],
        [1.0036],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0006],
        [1.0023],
        [1.0020],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0002],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0031],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0006],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0008],
        [1.0017],
        [1.0026],
        [1.0025],
        [1.0019],
        [1.0011],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0034],
        [1.0032],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0008],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0015],
        [1.0012],
        [1.0019],
        [1.0022],
        [1.0005],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0008],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0016],
        [0.9997],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0027],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0019],
        [1.0023],
        [1.0006],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0034],
        [1.0035],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0021],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0006],
        [1.0023],
        [1.0020],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0027],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0002],
        [1.0017],
        [1.0025],
        [1.0023],
        [1.0018],
        [1.0008],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0031],
        [1.0029],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0004],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0025],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0032],
        [1.0033],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0022],
        [1.0010],
        [1.0019],
        [1.0025],
        [1.0027],
        [1.0017],
        [1.0008],
        [1.0023],
        [1.0019],
        [1.0014],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0015],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0005],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0032],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0003],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0020],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0040],
        [1.0041],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0007],
        [1.0023],
        [1.0020],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0004],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0032],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0005],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0014],
        [1.0019],
        [1.0023],
        [1.0008],
        [1.0017],
        [1.0027],
        [1.0025],
        [1.0019],
        [1.0010],
        [1.0022],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0033],
        [1.0032],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0025],
        [1.0026],
        [1.0017],
        [1.0007],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0015],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0004],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0029],
        [1.0031],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0008],
        [1.0018],
        [1.0023],
        [1.0025],
        [1.0016],
        [1.0001],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0027],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0020],
        [1.0023],
        [1.0006],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0021],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0035],
        [1.0034],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0006],
        [1.0023],
        [1.0019],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0027],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [0.9998],
        [1.0016],
        [1.0025],
        [1.0023],
        [1.0018],
        [1.0008],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0005],
        [1.0022],
        [1.0019],
        [1.0012],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0033],
        [1.0033],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0011],
        [1.0019],
        [1.0025],
        [1.0027],
        [1.0017],
        [1.0008],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0015],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0006],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0031],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0002],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0020],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0036],
        [1.0037],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0007],
        [1.0023],
        [1.0020],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0003],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0008],
        [1.0021],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0031],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0005],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0008],
        [1.0018],
        [1.0026],
        [1.0025],
        [1.0019],
        [1.0011],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0033],
        [1.0032],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0022],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0007],
        [1.0023],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0015],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0004],
        [1.0017],
        [1.0025],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0031],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0008],
        [1.0018],
        [1.0023],
        [1.0025],
        [1.0016],
        [1.0000],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0016],
        [1.0027],
        [1.0029],
        [1.0016],
        [1.0014],
        [1.0020],
        [1.0023],
        [1.0006],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0022],
        [1.0021],
        [1.0012],
        [1.0015],
        [1.0034],
        [1.0035],
        [1.0015],
        [1.0012],
        [1.0021],
        [1.0021],
        [1.0010],
        [1.0018],
        [1.0024],
        [1.0026],
        [1.0017],
        [1.0006],
        [1.0023],
        [1.0020],
        [1.0014],
        [1.0016],
        [1.0029],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0022],
        [1.0001],
        [1.0017],
        [1.0025],
        [1.0023],
        [1.0018],
        [1.0008],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0031],
        [1.0030],
        [1.0014],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024],
        [1.0025],
        [1.0017],
        [1.0004],
        [1.0022],
        [1.0019],
        [1.0013],
        [1.0015],
        [1.0027],
        [1.0028],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0007],
        [1.0017],
        [1.0026],
        [1.0025],
        [1.0018],
        [1.0010],
        [1.0022],
        [1.0020],
        [1.0012],
        [1.0015],
        [1.0032],
        [1.0033],
        [1.0015],
        [1.0012],
        [1.0020],
        [1.0022],
        [1.0010],
        [1.0019],
        [1.0025],
        [1.0027],
        [1.0017],
        [1.0008],
        [1.0023],
        [1.0019],
        [1.0014],
        [1.0016],
        [1.0028],
        [1.0027],
        [1.0016],
        [1.0013],
        [1.0019],
        [1.0023],
        [1.0005],
        [1.0017],
        [1.0026],
        [1.0024],
        [1.0018],
        [1.0009],
        [1.0021],
        [1.0020],
        [1.0011],
        [1.0014],
        [1.0030],
        [1.0031],
        [1.0015],
        [1.0011],
        [1.0020],
        [1.0021],
        [1.0009],
        [1.0018],
        [1.0024]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[10.8051]],
        [[10.6368]],
        [[10.6161]],
        [[10.6782]],
        [[10.6838]],
        [[10.6000]],
        [[10.6598]],
        [[10.7035]],
        [[10.7151]],
        [[10.6520]],
        [[10.5761]],
        [[10.6930]],
        [[10.6696]],
        [[10.6272]],
        [[10.6450]],
        [[10.7392]],
        [[10.7288]],
        [[10.6410]],
        [[10.6222]],
        [[10.6658]],
        [[10.6884]],
        [[10.5504]],
        [[10.6480]],
        [[10.7088]],
        [[10.6979]],
        [[10.6557]],
        [[10.5900]],
        [[10.6793]],
        [[10.6740]],
        [[10.6096]],
        [[10.6321]],
        [[10.7546]],
        [[10.7444]],
        [[10.6299]],
        [[10.6073]],
        [[10.6711]],
        [[10.6823]],
        [[10.5935]],
        [[10.6575]],
        [[10.7009]],
        [[10.7132]],
        [[10.6493]],
        [[10.5653]],
        [[10.6911]],
        [[10.6635]],
        [[10.6198]],
        [[10.6396]],
        [[10.7227]],
        [[10.7317]],
        [[10.6438]],
        [[10.6251]],
        [[10.6674]],
        [[10.6957]],
        [[10.5825]],
        [[10.6532]],
        [[10.7200]],
        [[10.7066]],
        [[10.6615]],
        [[10.6025]],
        [[10.6868]],
        [[10.6754]],
        [[10.6143]],
        [[10.6348]],
        [[10.7668]],
        [[10.7587]],
        [[10.6336]],
        [[10.6126]],
        [[10.6742]],
        [[10.6855]],
        [[10.6002]],
        [[10.6604]],
        [[10.7049]],
        [[10.7184]],
        [[10.6523]],
        [[10.5793]],
        [[10.6946]],
        [[10.6666]],
        [[10.6239]],
        [[10.6428]],
        [[10.7295]],
        [[10.7205]],
        [[10.6383]],
        [[10.6181]],
        [[10.6624]],
        [[10.6898]],
        [[10.5570]],
        [[10.6482]],
        [[10.7115]],
        [[10.6997]],
        [[10.6566]],
        [[10.5913]],
        [[10.6813]],
        [[10.6702]],
        [[10.6059]],
        [[10.6289]],
        [[10.7413]],
        [[10.7501]],
        [[10.6311]],
        [[10.6082]],
        [[10.6730]],
        [[10.6784]],
        [[10.5877]],
        [[10.6548]],
        [[10.6968]],
        [[10.7071]],
        [[10.6468]],
        [[10.5289]],
        [[10.6872]],
        [[10.6647]],
        [[10.6207]],
        [[10.6397]],
        [[10.7263]],
        [[10.7367]],
        [[10.6441]],
        [[10.6261]],
        [[10.6688]],
        [[10.6920]],
        [[10.5720]],
        [[10.6511]],
        [[10.7137]],
        [[10.7019]],
        [[10.6588]],
        [[10.5977]],
        [[10.6826]],
        [[10.6769]],
        [[10.6144]],
        [[10.6355]],
        [[10.7775]],
        [[10.7763]],
        [[10.6359]],
        [[10.6157]],
        [[10.6764]],
        [[10.6835]],
        [[10.5962]],
        [[10.6586]],
        [[10.7024]],
        [[10.7147]],
        [[10.6502]],
        [[10.5703]],
        [[10.6921]],
        [[10.6683]],
        [[10.6262]],
        [[10.6448]],
        [[10.7341]],
        [[10.7249]],
        [[10.6407]],
        [[10.6212]],
        [[10.6645]],
        [[10.6876]],
        [[10.5258]],
        [[10.6462]],
        [[10.7084]],
        [[10.6969]],
        [[10.6544]],
        [[10.5849]],
        [[10.6791]],
        [[10.6722]],
        [[10.6092]],
        [[10.6312]],
        [[10.7487]],
        [[10.7418]],
        [[10.6284]],
        [[10.6041]],
        [[10.6709]],
        [[10.6805]],
        [[10.5929]],
        [[10.6568]],
        [[10.6993]],
        [[10.7104]],
        [[10.6491]],
        [[10.5600]],
        [[10.6896]],
        [[10.6628]],
        [[10.6180]],
        [[10.6376]],
        [[10.7222]],
        [[10.7310]],
        [[10.6419]],
        [[10.6234]],
        [[10.6667]],
        [[10.6941]],
        [[10.5798]],
        [[10.6530]],
        [[10.7168]],
        [[10.7048]],
        [[10.6608]],
        [[10.6020]],
        [[10.6848]],
        [[10.6751]],
        [[10.6115]],
        [[10.6334]],
        [[10.7611]],
        [[10.7677]],
        [[10.6345]],
        [[10.6130]],
        [[10.6760]],
        [[10.6858]],
        [[10.6037]],
        [[10.6617]],
        [[10.7060]],
        [[10.7189]],
        [[10.6541]],
        [[10.5837]],
        [[10.6956]],
        [[10.6678]],
        [[10.6248]],
        [[10.6431]],
        [[10.7340]],
        [[10.7240]],
        [[10.6386]],
        [[10.6192]],
        [[10.6636]],
        [[10.6907]],
        [[10.5659]],
        [[10.6500]],
        [[10.7119]],
        [[10.7007]],
        [[10.6579]],
        [[10.5956]],
        [[10.6816]],
        [[10.6720]],
        [[10.6063]],
        [[10.6298]],
        [[10.7458]],
        [[10.7538]],
        [[10.6326]],
        [[10.6111]],
        [[10.6733]],
        [[10.6802]],
        [[10.5884]],
        [[10.6556]],
        [[10.6983]],
        [[10.7098]],
        [[10.6471]],
        [[10.5448]],
        [[10.6886]],
        [[10.6655]],
        [[10.6224]],
        [[10.6416]],
        [[10.7269]],
        [[10.7374]],
        [[10.6459]],
        [[10.6276]],
        [[10.6695]],
        [[10.6935]],
        [[10.5754]],
        [[10.6513]],
        [[10.7167]],
        [[10.7036]],
        [[10.6595]],
        [[10.5982]],
        [[10.6845]],
        [[10.6772]],
        [[10.6170]],
        [[10.6369]],
        [[10.7905]],
        [[10.7893]],
        [[10.6374]],
        [[10.6170]],
        [[10.6777]],
        [[10.6842]],
        [[10.5989]],
        [[10.6593]],
        [[10.7040]],
        [[10.7160]],
        [[10.6514]],
        [[10.5736]],
        [[10.6936]],
        [[10.6692]],
        [[10.6278]],
        [[10.6456]],
        [[10.7379]],
        [[10.7276]],
        [[10.6414]],
        [[10.6228]],
        [[10.6653]],
        [[10.6891]],
        [[10.5441]],
        [[10.6475]],
        [[10.7097]],
        [[10.6986]],
        [[10.6553]],
        [[10.5889]],
        [[10.6799]],
        [[10.6734]],
        [[10.6104]],
        [[10.6326]],
        [[10.7517]],
        [[10.7465]],
        [[10.6294]],
        [[10.6066]],
        [[10.6716]],
        [[10.6817]],
        [[10.5946]],
        [[10.6580]],
        [[10.7001]],
        [[10.7123]],
        [[10.6498]],
        [[10.5677]],
        [[10.6905]],
        [[10.6641]],
        [[10.6191]],
        [[10.6390]],
        [[10.7239]],
        [[10.7328]],
        [[10.6432]],
        [[10.6243]],
        [[10.6679]],
        [[10.6952]],
        [[10.5843]],
        [[10.6537]],
        [[10.7192]],
        [[10.7059]],
        [[10.6621]],
        [[10.6036]],
        [[10.6863]],
        [[10.6758]],
        [[10.6134]],
        [[10.6342]],
        [[10.7704]],
        [[10.7617]],
        [[10.6329]],
        [[10.6116]],
        [[10.6747]],
        [[10.6850]],
        [[10.6013]],
        [[10.6609]],
        [[10.7043]],
        [[10.7176]],
        [[10.6529]],
        [[10.5815]],
        [[10.6941]],
        [[10.6670]],
        [[10.6232]],
        [[10.6422]],
        [[10.7305]],
        [[10.7216]],
        [[10.6378]],
        [[10.6175]],
        [[10.6629]],
        [[10.6892]],
        [[10.5606]],
        [[10.6487]],
        [[10.7105]],
        [[10.6990]],
        [[10.6570]],
        [[10.5923]],
        [[10.6808]],
        [[10.6708]],
        [[10.6050]],
        [[10.6283]],
        [[10.7434]],
        [[10.7479]],
        [[10.6316]],
        [[10.6089]],
        [[10.6725]],
        [[10.6790]],
        [[10.5863]],
        [[10.6544]],
        [[10.6975]],
        [[10.7079]],
        [[10.6464]],
        [[10.5028]],
        [[10.6878]],
        [[10.6641]],
        [[10.6213]],
        [[10.6402]],
        [[10.7251]],
        [[10.7353]],
        [[10.6447]],
        [[10.6268]],
        [[10.6683]],
        [[10.6925]],
        [[10.5693]],
        [[10.6505]],
        [[10.7144]],
        [[10.7025]],
        [[10.6582]],
        [[10.5963]],
        [[10.6831]],
        [[10.6765]],
        [[10.6152]],
        [[10.6361]],
        [[10.7726]],
        [[10.7845]],
        [[10.6355]],
        [[10.6151]],
        [[10.6769]],
        [[10.6829]],
        [[10.5972]],
        [[10.6591]],
        [[10.7016]],
        [[10.7138]],
        [[10.6507]],
        [[10.5723]],
        [[10.6915]],
        [[10.6689]],
        [[10.6256]],
        [[10.6443]],
        [[10.7357]],
        [[10.7259]],
        [[10.6401]],
        [[10.6204]],
        [[10.6650]],
        [[10.6871]],
        [[10.5400]],
        [[10.6468]],
        [[10.7078]],
        [[10.6964]],
        [[10.6550]],
        [[10.5867]],
        [[10.6786]],
        [[10.6726]],
        [[10.6083]],
        [[10.6306]],
        [[10.7505]],
        [[10.7402]],
        [[10.6291]],
        [[10.6052]],
        [[10.6704]],
        [[10.6809]],
        [[10.5915]],
        [[10.6562]],
        [[10.6998]],
        [[10.7111]],
        [[10.6485]],
        [[10.5551]],
        [[10.6902]],
        [[10.6624]],
        [[10.6187]],
        [[10.6382]],
        [[10.7214]],
        [[10.7297]],
        [[10.6424]],
        [[10.6240]],
        [[10.6661]],
        [[10.6949]],
        [[10.5780]],
        [[10.6525]],
        [[10.7178]],
        [[10.7055]],
        [[10.6604]],
        [[10.6011]],
        [[10.6854]],
        [[10.6745]],
        [[10.6123]],
        [[10.6339]],
        [[10.7575]],
        [[10.7635]],
        [[10.6349]],
        [[10.6136]],
        [[10.6755]],
        [[10.6864]],
        [[10.6028]],
        [[10.6612]],
        [[10.7068]],
        [[10.7199]],
        [[10.6537]],
        [[10.5823]],
        [[10.6962]],
        [[10.6672]],
        [[10.6254]],
        [[10.6436]],
        [[10.7324]],
        [[10.7231]],
        [[10.6392]],
        [[10.6200]],
        [[10.6632]],
        [[10.6912]],
        [[10.5625]],
        [[10.6494]],
        [[10.7125]],
        [[10.7013]],
        [[10.6573]],
        [[10.5942]],
        [[10.6821]],
        [[10.6716]],
        [[10.6073]],
        [[10.6305]],
        [[10.7442]],
        [[10.7562]],
        [[10.6319]],
        [[10.6101]],
        [[10.6738]],
        [[10.6798]],
        [[10.5899]],
        [[10.6561]],
        [[10.6978]],
        [[10.7090]],
        [[10.6477]],
        [[10.5523]],
        [[10.6881]],
        [[10.6659]],
        [[10.6217]],
        [[10.6411]],
        [[10.7278]],
        [[10.7391]],
        [[10.6455]],
        [[10.6271]],
        [[10.6700]],
        [[10.6928]],
        [[10.5774]],
        [[10.6518]],
        [[10.7156]],
        [[10.7029]],
        [[10.6599]],
        [[10.5991]],
        [[10.6839]],
        [[10.6778]],
        [[10.6164]],
        [[10.6364]],
        [[10.8176]],
        [[10.8246]],
        [[10.6365]],
        [[10.6164]],
        [[10.6779]],
        [[10.6841]],
        [[10.5995]],
        [[10.6601]],
        [[10.7031]],
        [[10.7155]],
        [[10.6518]],
        [[10.5771]],
        [[10.6927]],
        [[10.6699]],
        [[10.6269]],
        [[10.6453]],
        [[10.7384]],
        [[10.7283]],
        [[10.6412]],
        [[10.6219]],
        [[10.6660]],
        [[10.6881]],
        [[10.5528]],
        [[10.6477]],
        [[10.7091]],
        [[10.6976]],
        [[10.6559]],
        [[10.5894]],
        [[10.6796]],
        [[10.6737]],
        [[10.6101]],
        [[10.6318]],
        [[10.7559]],
        [[10.7436]],
        [[10.6302]],
        [[10.6069]],
        [[10.6714]],
        [[10.6820]],
        [[10.5941]],
        [[10.6572]],
        [[10.7012]],
        [[10.7128]],
        [[10.6496]],
        [[10.5637]],
        [[10.6914]],
        [[10.6632]],
        [[10.6201]],
        [[10.6393]],
        [[10.7232]],
        [[10.7322]],
        [[10.6435]],
        [[10.6254]],
        [[10.6671]],
        [[10.6960]],
        [[10.5817]],
        [[10.6535]],
        [[10.7195]],
        [[10.7069]],
        [[10.6613]],
        [[10.6029]],
        [[10.6865]],
        [[10.6757]],
        [[10.6139]],
        [[10.6351]],
        [[10.7648]],
        [[10.7571]],
        [[10.6339]],
        [[10.6121]],
        [[10.6744]],
        [[10.6852]],
        [[10.6008]],
        [[10.6602]],
        [[10.7053]],
        [[10.7179]],
        [[10.6525]],
        [[10.5783]],
        [[10.6949]],
        [[10.6663]],
        [[10.6242]],
        [[10.6426]],
        [[10.7301]],
        [[10.7210]],
        [[10.6380]],
        [[10.6185]],
        [[10.6622]],
        [[10.6901]],
        [[10.5545]],
        [[10.6484]],
        [[10.7110]],
        [[10.7001]],
        [[10.6564]],
        [[10.5920]],
        [[10.6811]],
        [[10.6705]],
        [[10.6054]],
        [[10.6292]],
        [[10.7404]],
        [[10.7514]],
        [[10.6308]],
        [[10.6087]],
        [[10.6728]],
        [[10.6786]],
        [[10.5869]],
        [[10.6551]],
        [[10.6964]],
        [[10.7075]],
        [[10.6466]],
        [[10.5359]],
        [[10.6869]],
        [[10.6649]],
        [[10.6203]],
        [[10.6400]],
        [[10.7258]],
        [[10.7359]],
        [[10.6443]],
        [[10.6257]],
        [[10.6690]],
        [[10.6917]],
        [[10.5733]],
        [[10.6508]],
        [[10.7141]],
        [[10.7015]],
        [[10.6590]],
        [[10.5971]],
        [[10.6828]],
        [[10.6767]],
        [[10.6148]],
        [[10.6352]],
        [[10.7812]],
        [[10.7733]],
        [[10.6362]],
        [[10.6153]],
        [[10.6766]],
        [[10.6833]],
        [[10.5968]],
        [[10.6584]],
        [[10.7028]],
        [[10.7143]],
        [[10.6505]],
        [[10.5689]],
        [[10.6924]],
        [[10.6681]],
        [[10.6266]],
        [[10.6445]],
        [[10.7348]],
        [[10.7255]],
        [[10.6404]],
        [[10.6216]],
        [[10.6643]],
        [[10.6878]],
        [[10.5110]],
        [[10.6464]],
        [[10.7080]],
        [[10.6973]],
        [[10.6542]],
        [[10.5857]],
        [[10.6788]],
        [[10.6725]],
        [[10.6088]],
        [[10.6315]],
        [[10.7476]],
        [[10.7427]],
        [[10.6281]],
        [[10.6046]],
        [[10.6706]],
        [[10.6807]],
        [[10.5922]],
        [[10.6570]],
        [[10.6990]],
        [[10.7108]],
        [[10.6488]],
        [[10.5621]],
        [[10.6894]],
        [[10.6630]],
        [[10.6176]],
        [[10.6379]],
        [[10.7217]],
        [[10.7304]],
        [[10.6422]],
        [[10.6231]],
        [[10.6669]],
        [[10.6939]],
        [[10.5808]],
        [[10.6527]],
        [[10.7172]],
        [[10.7044]],
        [[10.6610]],
        [[10.6014]],
        [[10.6851]],
        [[10.6749]],
        [[10.6119]],
        [[10.6331]],
        [[10.7630]],
        [[10.7699]],
        [[10.6341]],
        [[10.6134]],
        [[10.6757]],
        [[10.6861]],
        [[10.6032]],
        [[10.6619]],
        [[10.7056]],
        [[10.7193]],
        [[10.6538]],
        [[10.5845]],
        [[10.6952]],
        [[10.6681]],
        [[10.6245]],
        [[10.6434]],
        [[10.7333]],
        [[10.7235]],
        [[10.6389]],
        [[10.6188]],
        [[10.6639]],
        [[10.6904]],
        [[10.5674]],
        [[10.6497]],
        [[10.7122]],
        [[10.7004]],
        [[10.6581]],
        [[10.5951]],
        [[10.6819]],
        [[10.6717]],
        [[10.6067]],
        [[10.6295]],
        [[10.7467]],
        [[10.7526]],
        [[10.6329]],
        [[10.6107]],
        [[10.6736]],
        [[10.6800]],
        [[10.5891]],
        [[10.6553]],
        [[10.6987]],
        [[10.7094]],
        [[10.6473]],
        [[10.5411]],
        [[10.6889]],
        [[10.6652]],
        [[10.6227]],
        [[10.6413]],
        [[10.7274]],
        [[10.7381]],
        [[10.6456]],
        [[10.6279]],
        [[10.6692]],
        [[10.6938]],
        [[10.5744]],
        [[10.6516]],
        [[10.7163]],
        [[10.7039]],
        [[10.6593]],
        [[10.5987]],
        [[10.6842]],
        [[10.6775]],
        [[10.6167]],
        [[10.6372]],
        [[10.7856]],
        [[10.7958]],
        [[10.6371]],
        [[10.6173]],
        [[10.6774]],
        [[10.6845]],
        [[10.5983]],
        [[10.6596]],
        [[10.7037]],
        [[10.7164]],
        [[10.6512]],
        [[10.5746]],
        [[10.6933]],
        [[10.6694]],
        [[10.6276]],
        [[10.6458]],
        [[10.7372]],
        [[10.7271]],
        [[10.6417]],
        [[10.6225]],
        [[10.6655]],
        [[10.6888]],
        [[10.5475]],
        [[10.6473]],
        [[10.7101]],
        [[10.6983]],
        [[10.6555]],
        [[10.5882]],
        [[10.6802]],
        [[10.6731]],
        [[10.6108]],
        [[10.6323]],
        [[10.7528]],
        [[10.7455]],
        [[10.6297]],
        [[10.6062]],
        [[10.6719]],
        [[10.6814]],
        [[10.5952]],
        [[10.6577]],
        [[10.7005]],
        [[10.7120]],
        [[10.6500]],
        [[10.5664]],
        [[10.6908]],
        [[10.6638]],
        [[10.6194]],
        [[10.6388]],
        [[10.7244]],
        [[10.7335]],
        [[10.6429]],
        [[10.6246]],
        [[10.6676]],
        [[10.6955]],
        [[10.5835]],
        [[10.6540]],
        [[10.7188]],
        [[10.7062]],
        [[10.6619]],
        [[10.6041]],
        [[10.6860]],
        [[10.6761]],
        [[10.6131]],
        [[10.6345]],
        [[10.7683]],
        [[10.7600]],
        [[10.6332]],
        [[10.6112]],
        [[10.6749]],
        [[10.6848]],
        [[10.6018]],
        [[10.6607]],
        [[10.7047]],
        [[10.7171]],
        [[10.6531]],
        [[10.5805]],
        [[10.6944]],
        [[10.6667]],
        [[10.6235]],
        [[10.6420]],
        [[10.7312]],
        [[10.7221]],
        [[10.6376]],
        [[10.6179]],
        [[10.6627]],
        [[10.6894]],
        [[10.5586]],
        [[10.6489]],
        [[10.7101]],
        [[10.6994]],
        [[10.6568]],
        [[10.5930]],
        [[10.6805]],
        [[10.6711]],
        [[10.6045]],
        [[10.6286]],
        [[10.7424]],
        [[10.7490]],
        [[10.6313]],
        [[10.6093]],
        [[10.6723]],
        [[10.6793]],
        [[10.5855]],
        [[10.6546]],
        [[10.6972]],
        [[10.7083]],
        [[10.6461]],
        [[10.5235]],
        [[10.6875]],
        [[10.6644]],
        [[10.6210]],
        [[10.6405]],
        [[10.7245]],
        [[10.7346]],
        [[10.6449]],
        [[10.6265]],
        [[10.6685]],
        [[10.6922]],
        [[10.5706]],
        [[10.6503]],
        [[10.7148]],
        [[10.7022]],
        [[10.6584]],
        [[10.5957]],
        [[10.6833]],
        [[10.6763]],
        [[10.6156]],
        [[10.6358]],
        [[10.7757]],
        [[10.7800]],
        [[10.6357]],
        [[10.6147]],
        [[10.6771]],
        [[10.6826]],
        [[10.5978]],
        [[10.6588]],
        [[10.7020]],
        [[10.7134]],
        [[10.6509]],
        [[10.5711]],
        [[10.6918]],
        [[10.6687]],
        [[10.6260]],
        [[10.6440]],
        [[10.7365]],
        [[10.7265]],
        [[10.6398]],
        [[10.6208]],
        [[10.6648]],
        [[10.6874]],
        [[10.5341]],
        [[10.6470]],
        [[10.7074]],
        [[10.6967]],
        [[10.6548]],
        [[10.5875]],
        [[10.6783]],
        [[10.6728]],
        [[10.6079]],
        [[10.6308]],
        [[10.7494]],
        [[10.7411]],
        [[10.6288]],
        [[10.6057]],
        [[10.6702]],
        [[10.6812]],
        [[10.5908]],
        [[10.6565]],
        [[10.6995]],
        [[10.7116]],
        [[10.6482]],
        [[10.5574]],
        [[10.6899]],
        [[10.6626]],
        [[10.6184]],
        [[10.6385]],
        [[10.7209]],
        [[10.7290]],
        [[10.6426]],
        [[10.6236]],
        [[10.6664]],
        [[10.6946]],
        [[10.5791]],
        [[10.6522]],
        [[10.7183]],
        [[10.7052]],
        [[10.6606]],
        [[10.6006]],
        [[10.6857]],
        [[10.6743]],
        [[10.6127]],
        [[10.6337]],
        [[10.7590]],
        [[10.7652]],
        [[10.6346]],
        [[10.6140]],
        [[10.6752]],
        [[10.6867]],
        [[10.6023]],
        [[10.6615]],
        [[10.7065]],
        [[10.7203]],
        [[10.6534]],
        [[10.5831]],
        [[10.6959]],
        [[10.6675]],
        [[10.6251]],
        [[10.6439]],
        [[10.7318]],
        [[10.7226]],
        [[10.6395]],
        [[10.6197]],
        [[10.6634]],
        [[10.6909]],
        [[10.5640]],
        [[10.6492]],
        [[10.7129]],
        [[10.7010]],
        [[10.6576]],
        [[10.5936]],
        [[10.6824]],
        [[10.6713]],
        [[10.6077]],
        [[10.6301]],
        [[10.7451]],
        [[10.7550]],
        [[10.6322]],
        [[10.6098]],
        [[10.6740]],
        [[10.6795]],
        [[10.5905]],
        [[10.6559]],
        [[10.6981]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[1.0531],
        [1.0495],
        [1.0490],
        [1.0504],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0482],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0517],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0506],
        [1.0476],
        [1.0497],
        [1.0510],
        [1.0508],
        [1.0499],
        [1.0485],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0520],
        [1.0518],
        [1.0493],
        [1.0489],
        [1.0502],
        [1.0505],
        [1.0486],
        [1.0499],
        [1.0509],
        [1.0511],
        [1.0498],
        [1.0480],
        [1.0507],
        [1.0501],
        [1.0491],
        [1.0496],
        [1.0513],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0508],
        [1.0483],
        [1.0498],
        [1.0513],
        [1.0510],
        [1.0500],
        [1.0488],
        [1.0506],
        [1.0503],
        [1.0490],
        [1.0494],
        [1.0523],
        [1.0521],
        [1.0494],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0510],
        [1.0512],
        [1.0498],
        [1.0483],
        [1.0507],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0515],
        [1.0513],
        [1.0495],
        [1.0491],
        [1.0500],
        [1.0506],
        [1.0478],
        [1.0497],
        [1.0511],
        [1.0508],
        [1.0499],
        [1.0485],
        [1.0504],
        [1.0502],
        [1.0488],
        [1.0493],
        [1.0517],
        [1.0519],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0484],
        [1.0499],
        [1.0508],
        [1.0510],
        [1.0497],
        [1.0472],
        [1.0506],
        [1.0501],
        [1.0491],
        [1.0496],
        [1.0514],
        [1.0516],
        [1.0496],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0481],
        [1.0498],
        [1.0511],
        [1.0509],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0504],
        [1.0490],
        [1.0495],
        [1.0525],
        [1.0525],
        [1.0495],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0486],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0481],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0516],
        [1.0514],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0506],
        [1.0471],
        [1.0497],
        [1.0510],
        [1.0508],
        [1.0499],
        [1.0484],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0519],
        [1.0517],
        [1.0493],
        [1.0488],
        [1.0502],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0511],
        [1.0498],
        [1.0478],
        [1.0506],
        [1.0500],
        [1.0491],
        [1.0495],
        [1.0513],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0507],
        [1.0483],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0522],
        [1.0523],
        [1.0494],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0488],
        [1.0500],
        [1.0510],
        [1.0513],
        [1.0499],
        [1.0484],
        [1.0508],
        [1.0502],
        [1.0492],
        [1.0496],
        [1.0516],
        [1.0514],
        [1.0495],
        [1.0491],
        [1.0501],
        [1.0506],
        [1.0480],
        [1.0498],
        [1.0511],
        [1.0509],
        [1.0499],
        [1.0486],
        [1.0505],
        [1.0502],
        [1.0488],
        [1.0493],
        [1.0518],
        [1.0520],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0511],
        [1.0497],
        [1.0475],
        [1.0506],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0514],
        [1.0516],
        [1.0497],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0482],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0504],
        [1.0491],
        [1.0495],
        [1.0528],
        [1.0528],
        [1.0495],
        [1.0491],
        [1.0504],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0481],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0517],
        [1.0514],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0506],
        [1.0475],
        [1.0497],
        [1.0511],
        [1.0508],
        [1.0499],
        [1.0485],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0520],
        [1.0518],
        [1.0493],
        [1.0488],
        [1.0502],
        [1.0505],
        [1.0486],
        [1.0499],
        [1.0508],
        [1.0511],
        [1.0498],
        [1.0480],
        [1.0506],
        [1.0501],
        [1.0491],
        [1.0495],
        [1.0514],
        [1.0516],
        [1.0496],
        [1.0492],
        [1.0502],
        [1.0507],
        [1.0484],
        [1.0499],
        [1.0513],
        [1.0510],
        [1.0500],
        [1.0488],
        [1.0506],
        [1.0503],
        [1.0490],
        [1.0494],
        [1.0524],
        [1.0522],
        [1.0494],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0483],
        [1.0507],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0515],
        [1.0513],
        [1.0495],
        [1.0491],
        [1.0501],
        [1.0506],
        [1.0479],
        [1.0497],
        [1.0511],
        [1.0508],
        [1.0499],
        [1.0485],
        [1.0504],
        [1.0502],
        [1.0488],
        [1.0493],
        [1.0518],
        [1.0519],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0484],
        [1.0499],
        [1.0508],
        [1.0510],
        [1.0497],
        [1.0466],
        [1.0506],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0514],
        [1.0516],
        [1.0497],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0480],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0499],
        [1.0486],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0495],
        [1.0524],
        [1.0527],
        [1.0495],
        [1.0490],
        [1.0504],
        [1.0505],
        [1.0486],
        [1.0500],
        [1.0509],
        [1.0511],
        [1.0498],
        [1.0481],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0516],
        [1.0514],
        [1.0496],
        [1.0491],
        [1.0501],
        [1.0506],
        [1.0474],
        [1.0497],
        [1.0510],
        [1.0508],
        [1.0499],
        [1.0484],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0519],
        [1.0517],
        [1.0493],
        [1.0488],
        [1.0502],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0511],
        [1.0497],
        [1.0477],
        [1.0506],
        [1.0500],
        [1.0491],
        [1.0495],
        [1.0513],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0507],
        [1.0482],
        [1.0498],
        [1.0512],
        [1.0510],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0494],
        [1.0521],
        [1.0522],
        [1.0495],
        [1.0490],
        [1.0503],
        [1.0506],
        [1.0488],
        [1.0500],
        [1.0510],
        [1.0513],
        [1.0499],
        [1.0483],
        [1.0508],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0515],
        [1.0513],
        [1.0495],
        [1.0491],
        [1.0501],
        [1.0507],
        [1.0479],
        [1.0498],
        [1.0511],
        [1.0509],
        [1.0499],
        [1.0486],
        [1.0505],
        [1.0502],
        [1.0489],
        [1.0494],
        [1.0518],
        [1.0521],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0510],
        [1.0497],
        [1.0477],
        [1.0506],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0514],
        [1.0517],
        [1.0497],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0482],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0504],
        [1.0491],
        [1.0495],
        [1.0534],
        [1.0535],
        [1.0495],
        [1.0491],
        [1.0504],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0482],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0517],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0506],
        [1.0477],
        [1.0497],
        [1.0510],
        [1.0508],
        [1.0499],
        [1.0485],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0520],
        [1.0518],
        [1.0494],
        [1.0489],
        [1.0502],
        [1.0505],
        [1.0486],
        [1.0499],
        [1.0509],
        [1.0511],
        [1.0498],
        [1.0479],
        [1.0507],
        [1.0501],
        [1.0491],
        [1.0495],
        [1.0513],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0508],
        [1.0483],
        [1.0498],
        [1.0513],
        [1.0510],
        [1.0500],
        [1.0488],
        [1.0506],
        [1.0503],
        [1.0490],
        [1.0495],
        [1.0522],
        [1.0521],
        [1.0494],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0510],
        [1.0512],
        [1.0498],
        [1.0482],
        [1.0507],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0515],
        [1.0513],
        [1.0495],
        [1.0491],
        [1.0500],
        [1.0506],
        [1.0477],
        [1.0497],
        [1.0511],
        [1.0508],
        [1.0499],
        [1.0485],
        [1.0504],
        [1.0502],
        [1.0488],
        [1.0493],
        [1.0517],
        [1.0519],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0484],
        [1.0499],
        [1.0508],
        [1.0510],
        [1.0497],
        [1.0473],
        [1.0506],
        [1.0501],
        [1.0491],
        [1.0496],
        [1.0514],
        [1.0516],
        [1.0497],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0481],
        [1.0498],
        [1.0511],
        [1.0509],
        [1.0500],
        [1.0486],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0495],
        [1.0526],
        [1.0524],
        [1.0495],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0486],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0480],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0516],
        [1.0514],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0506],
        [1.0468],
        [1.0497],
        [1.0510],
        [1.0508],
        [1.0499],
        [1.0484],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0519],
        [1.0518],
        [1.0493],
        [1.0488],
        [1.0502],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0511],
        [1.0497],
        [1.0479],
        [1.0506],
        [1.0501],
        [1.0491],
        [1.0495],
        [1.0513],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0507],
        [1.0483],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0494],
        [1.0522],
        [1.0523],
        [1.0494],
        [1.0490],
        [1.0503],
        [1.0505],
        [1.0488],
        [1.0500],
        [1.0510],
        [1.0513],
        [1.0499],
        [1.0484],
        [1.0507],
        [1.0502],
        [1.0492],
        [1.0496],
        [1.0516],
        [1.0514],
        [1.0495],
        [1.0491],
        [1.0501],
        [1.0506],
        [1.0480],
        [1.0498],
        [1.0511],
        [1.0509],
        [1.0499],
        [1.0486],
        [1.0505],
        [1.0502],
        [1.0488],
        [1.0493],
        [1.0518],
        [1.0520],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0510],
        [1.0497],
        [1.0474],
        [1.0506],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0514],
        [1.0517],
        [1.0497],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0482],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0504],
        [1.0491],
        [1.0495],
        [1.0527],
        [1.0529],
        [1.0495],
        [1.0491],
        [1.0504],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0482],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0497],
        [1.0516],
        [1.0514],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0506],
        [1.0476],
        [1.0497],
        [1.0511],
        [1.0508],
        [1.0499],
        [1.0484],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0520],
        [1.0518],
        [1.0493],
        [1.0488],
        [1.0502],
        [1.0504],
        [1.0486],
        [1.0499],
        [1.0509],
        [1.0511],
        [1.0498],
        [1.0480],
        [1.0506],
        [1.0501],
        [1.0491],
        [1.0495],
        [1.0514],
        [1.0516],
        [1.0496],
        [1.0492],
        [1.0502],
        [1.0507],
        [1.0483],
        [1.0499],
        [1.0512],
        [1.0510],
        [1.0500],
        [1.0488],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0494],
        [1.0523],
        [1.0521],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0512],
        [1.0498],
        [1.0483],
        [1.0507],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0515],
        [1.0513],
        [1.0495],
        [1.0491],
        [1.0500],
        [1.0506],
        [1.0478],
        [1.0498],
        [1.0511],
        [1.0508],
        [1.0499],
        [1.0486],
        [1.0504],
        [1.0502],
        [1.0488],
        [1.0493],
        [1.0518],
        [1.0519],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0484],
        [1.0499],
        [1.0508],
        [1.0510],
        [1.0497],
        [1.0471],
        [1.0506],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0514],
        [1.0516],
        [1.0497],
        [1.0493],
        [1.0502],
        [1.0507],
        [1.0481],
        [1.0498],
        [1.0512],
        [1.0509],
        [1.0500],
        [1.0486],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0495],
        [1.0525],
        [1.0526],
        [1.0495],
        [1.0490],
        [1.0504],
        [1.0505],
        [1.0487],
        [1.0500],
        [1.0509],
        [1.0511],
        [1.0498],
        [1.0481],
        [1.0507],
        [1.0502],
        [1.0493],
        [1.0496],
        [1.0516],
        [1.0514],
        [1.0496],
        [1.0491],
        [1.0501],
        [1.0506],
        [1.0473],
        [1.0497],
        [1.0510],
        [1.0508],
        [1.0499],
        [1.0484],
        [1.0504],
        [1.0503],
        [1.0489],
        [1.0494],
        [1.0519],
        [1.0517],
        [1.0493],
        [1.0488],
        [1.0502],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508],
        [1.0511],
        [1.0497],
        [1.0478],
        [1.0506],
        [1.0500],
        [1.0491],
        [1.0495],
        [1.0513],
        [1.0515],
        [1.0496],
        [1.0492],
        [1.0501],
        [1.0507],
        [1.0483],
        [1.0498],
        [1.0512],
        [1.0510],
        [1.0500],
        [1.0487],
        [1.0505],
        [1.0503],
        [1.0490],
        [1.0494],
        [1.0521],
        [1.0522],
        [1.0494],
        [1.0490],
        [1.0503],
        [1.0506],
        [1.0488],
        [1.0500],
        [1.0510],
        [1.0513],
        [1.0498],
        [1.0483],
        [1.0508],
        [1.0501],
        [1.0492],
        [1.0496],
        [1.0515],
        [1.0513],
        [1.0495],
        [1.0491],
        [1.0501],
        [1.0507],
        [1.0479],
        [1.0498],
        [1.0511],
        [1.0509],
        [1.0499],
        [1.0486],
        [1.0505],
        [1.0502],
        [1.0489],
        [1.0493],
        [1.0518],
        [1.0520],
        [1.0494],
        [1.0489],
        [1.0503],
        [1.0504],
        [1.0485],
        [1.0499],
        [1.0508]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)
COST SHAPE IS  torch.Size([1000, 1, 1])
BEFORE NORMALIZATION:
tensor([[[18.0497]],
        [[ 9.0660]],
        [[ 8.3252]],
        [[10.7503]],
        [[11.0021]],
        [[ 7.7890]],
        [[ 9.9700]],
        [[11.9257]],
        [[12.5095]],
        [[ 9.6548]],
        [[ 7.0552]],
        [[11.4266]],
        [[10.3775]],
        [[ 8.7151]],
        [[ 9.3798]],
        [[13.8038]],
        [[13.2306]],
        [[ 9.2248]],
        [[ 8.5385]],
        [[10.2170]],
        [[11.2132]],
        [[ 6.3394]],
        [[ 9.4964]],
        [[12.1889]],
        [[11.6575]],
        [[ 9.8005]],
        [[ 7.4742]],
        [[10.8014]],
        [[10.5673]],
        [[ 8.1059]],
        [[ 8.8937]],
        [[14.6988]],
        [[14.0999]],
        [[ 8.8141]],
        [[ 8.0289]],
        [[10.4438]],
        [[10.9356]],
        [[ 7.5819]],
        [[ 9.8743]],
        [[11.8033]],
        [[12.4121]],
        [[ 9.5484]],
        [[ 6.7455]],
        [[11.3355]],
        [[10.1216]],
        [[ 8.4519]],
        [[ 9.1714]],
        [[12.9036]],
        [[13.3842]],
        [[ 9.3322]],
        [[ 8.6390]],
        [[10.2853]],
        [[11.5509]],
        [[ 7.2435]],
        [[ 9.7018]],
        [[12.7595]],
        [[12.0798]],
        [[10.0396]],
        [[ 7.8684]],
        [[11.1375]],
        [[10.6276]],
        [[ 8.2625]],
        [[ 8.9943]],
        [[15.4462]],
        [[14.9477]],
        [[ 8.9483]],
        [[ 8.2050]],
        [[10.5766]],
        [[11.0783]],
        [[ 7.7948]],
        [[ 9.9945]],
        [[11.9963]],
        [[12.6790]],
        [[ 9.6658]],
        [[ 7.1482]],
        [[11.5027]],
        [[10.2494]],
        [[ 8.5962]],
        [[ 9.2948]],
        [[13.2676]],
        [[12.7878]],
        [[ 9.1231]],
        [[ 8.3937]],
        [[10.0761]],
        [[11.2772]],
        [[ 6.5161]],
        [[ 9.5025]],
        [[12.3237]],
        [[11.7443]],
        [[ 9.8397]],
        [[ 7.5128]],
        [[10.8916]],
        [[10.4053]],
        [[ 7.9797]],
        [[ 8.7773]],
        [[13.9205]],
        [[14.4343]],
        [[ 8.8562]],
        [[ 8.0568]],
        [[10.5266]],
        [[10.7604]],
        [[ 7.4018]],
        [[ 9.7673]],
        [[11.6035]],
        [[12.1066]],
        [[ 9.4491]],
        [[ 5.7973]],
        [[11.1555]],
        [[10.1722]],
        [[ 8.4835]],
        [[ 9.1781]],
        [[13.0972]],
        [[13.6615]],
        [[ 9.3438]],
        [[ 8.6746]],
        [[10.3424]],
        [[11.3786]],
        [[ 6.9346]],
        [[ 9.6177]],
        [[12.4354]],
        [[11.8494]],
        [[ 9.9265]],
        [[ 7.7138]],
        [[10.9466]],
        [[10.6964]],
        [[ 8.2677]],
        [[ 9.0192]],
        [[16.1364]],
        [[16.0592]],
        [[ 9.0349]],
        [[ 8.3118]],
        [[10.6709]],
        [[10.9895]],
        [[ 7.6660]],
        [[ 9.9191]],
        [[11.8759]],
        [[12.4884]],
        [[ 9.5842]],
        [[ 6.8881]],
        [[11.3843]],
        [[10.3246]],
        [[ 8.6809]],
        [[ 9.3699]],
        [[13.5166]],
        [[13.0203]],
        [[ 9.2142]],
        [[ 8.5031]],
        [[10.1646]],
        [[11.1745]],
        [[ 5.7233]],
        [[ 9.4262]],
        [[12.1695]],
        [[11.6116]],
        [[ 9.7506]],
        [[ 7.3153]],
        [[10.7902]],
        [[10.4902]],
        [[ 8.0919]],
        [[ 8.8609]],
        [[14.3508]],
        [[13.9488]],
        [[ 8.7583]],
        [[ 7.9233]],
        [[10.4326]],
        [[10.8524]],
        [[ 7.5618]],
        [[ 9.8442]],
        [[11.7236]],
        [[12.2691]],
        [[ 9.5388]],
        [[ 6.6000]],
        [[11.2688]],
        [[10.0905]],
        [[ 8.3903]],
        [[ 9.0986]],
        [[12.8776]],
        [[13.3484]],
        [[ 9.2613]],
        [[ 8.5805]],
        [[10.2542]],
        [[11.4783]],
        [[ 7.1639]],
        [[ 9.6915]],
        [[12.5930]],
        [[11.9917]],
        [[10.0085]],
        [[ 7.8529]],
        [[11.0488]],
        [[10.6167]],
        [[ 8.1679]],
        [[ 8.9413]],
        [[15.0959]],
        [[15.5040]],
        [[ 8.9805]],
        [[ 8.2182]],
        [[10.6551]],
        [[11.0904]],
        [[ 7.9096]],
        [[10.0451]],
        [[12.0499]],
        [[12.7037]],
        [[ 9.7359]],
        [[ 7.2809]],
        [[11.5458]],
        [[10.3024]],
        [[ 8.6305]],
        [[ 9.3054]],
        [[13.5110]],
        [[12.9740]],
        [[ 9.1332]],
        [[ 8.4312]],
        [[10.1273]],
        [[11.3180]],
        [[ 6.7630]],
        [[ 9.5732]],
        [[12.3433]],
        [[11.7915]],
        [[ 9.8904]],
        [[ 7.6491]],
        [[10.9038]],
        [[10.4805]],
        [[ 7.9954]],
        [[ 8.8100]],
        [[14.1813]],
        [[14.6486]],
        [[ 8.9101]],
        [[ 8.1563]],
        [[10.5373]],
        [[10.8424]],
        [[ 7.4231]],
        [[ 9.7979]],
        [[11.6786]],
        [[12.2379]],
        [[ 9.4594]],
        [[ 6.1948]],
        [[11.2206]],
        [[10.2030]],
        [[ 8.5439]],
        [[ 9.2496]],
        [[13.1283]],
        [[13.7019]],
        [[ 9.4148]],
        [[ 8.7309]],
        [[10.3746]],
        [[11.4479]],
        [[ 7.0356]],
        [[ 9.6273]],
        [[12.5905]],
        [[11.9334]],
        [[ 9.9567]],
        [[ 7.7319]],
        [[11.0320]],
        [[10.7082]],
        [[ 8.3576]],
        [[ 9.0722]],
        [[17.0091]],
        [[16.9301]],
        [[ 9.0911]],
        [[ 8.3553]],
        [[10.7290]],
        [[11.0220]],
        [[ 7.7527]],
        [[ 9.9484]],
        [[11.9535]],
        [[12.5524]],
        [[ 9.6305]],
        [[ 6.9807]],
        [[11.4522]],
        [[10.3606]],
        [[ 8.7386]],
        [[ 9.4016]],
        [[13.7313]],
        [[13.1645]],
        [[ 9.2412]],
        [[ 8.5580]],
        [[10.1946]],
        [[11.2445]],
        [[ 6.1767]],
        [[ 9.4777]],
        [[12.2342]],
        [[11.6893]],
        [[ 9.7847]],
        [[ 7.4381]],
        [[10.8269]],
        [[10.5407]],
        [[ 8.1328]],
        [[ 8.9135]],
        [[14.5255]],
        [[14.2208]],
        [[ 8.7955]],
        [[ 8.0056]],
        [[10.4662]],
        [[10.9075]],
        [[ 7.6173]],
        [[ 9.8936]],
        [[11.7647]],
        [[12.3674]],
        [[ 9.5650]],
        [[ 6.8127]],
        [[11.3071]],
        [[10.1461]],
        [[ 8.4290]],
        [[ 9.1519]],
        [[12.9686]],
        [[13.4489]],
        [[ 9.3086]],
        [[ 8.6109]],
        [[10.3056]],
        [[11.5267]],
        [[ 7.2979]],
        [[ 9.7227]],
        [[12.7204]],
        [[12.0466]],
        [[10.0636]],
        [[ 7.9066]],
        [[11.1134]],
        [[10.6459]],
        [[ 8.2342]],
        [[ 8.9719]],
        [[15.6763]],
        [[15.1290]],
        [[ 8.9233]],
        [[ 8.1721]],
        [[10.5978]],
        [[11.0573]],
        [[ 7.8312]],
        [[10.0156]],
        [[11.9691]],
        [[12.6348]],
        [[ 9.6896]],
        [[ 7.2132]],
        [[11.4757]],
        [[10.2667]],
        [[ 8.5710]],
        [[ 9.2734]],
        [[13.3207]],
        [[12.8432]],
        [[ 9.1058]],
        [[ 8.3738]],
        [[10.0975]],
        [[11.2464]],
        [[ 6.6162]],
        [[ 9.5219]],
        [[12.2753]],
        [[11.7109]],
        [[ 9.8562]],
        [[ 7.5457]],
        [[10.8664]],
        [[10.4306]],
        [[ 7.9514]],
        [[ 8.7561]],
        [[14.0394]],
        [[14.3003]],
        [[ 8.8737]],
        [[ 8.0804]],
        [[10.5032]],
        [[10.7881]],
        [[ 7.3584]],
        [[ 9.7487]],
        [[11.6388]],
        [[12.1451]],
        [[ 9.4332]],
        [[ 5.1997]],
        [[11.1834]],
        [[10.1471]],
        [[ 8.5068]],
        [[ 9.1969]],
        [[13.0294]],
        [[13.5861]],
        [[ 9.3679]],
        [[ 8.7015]],
        [[10.3226]],
        [[11.4008]],
        [[ 6.8576]],
        [[ 9.5961]],
        [[12.4707]],
        [[11.8811]],
        [[ 9.9021]],
        [[ 7.6717]],
        [[10.9689]],
        [[10.6786]],
        [[ 8.2948]],
        [[ 9.0422]],
        [[15.8146]],
        [[16.5992]],
        [[ 9.0172]],
        [[ 8.2914]],
        [[10.6943]],
        [[10.9610]],
        [[ 7.6993]],
        [[ 9.9385]],
        [[11.8361]],
        [[12.4421]],
        [[ 9.6008]],
        [[ 6.9455]],
        [[11.3554]],
        [[10.3497]],
        [[ 8.6596]],
        [[ 9.3508]],
        [[13.6086]],
        [[13.0730]],
        [[ 9.1903]],
        [[ 8.4738]],
        [[10.1846]],
        [[11.1531]],
        [[ 6.0715]],
        [[ 9.4472]],
        [[12.1399]],
        [[11.5841]],
        [[ 9.7743]],
        [[ 7.3718]],
        [[10.7682]],
        [[10.5081]],
        [[ 8.0612]],
        [[ 8.8378]],
        [[14.4556]],
        [[13.8589]],
        [[ 8.7849]],
        [[ 7.9597]],
        [[10.4126]],
        [[10.8715]],
        [[ 7.5192]],
        [[ 9.8227]],
        [[11.7492]],
        [[12.3074]],
        [[ 9.5144]],
        [[ 6.4665]],
        [[11.2931]],
        [[10.0742]],
        [[ 8.4163]],
        [[ 9.1211]],
        [[12.8341]],
        [[13.2780]],
        [[ 9.2777]],
        [[ 8.5997]],
        [[10.2317]],
        [[11.5125]],
        [[ 7.1103]],
        [[ 9.6728]],
        [[12.6480]],
        [[12.0281]],
        [[ 9.9925]],
        [[ 7.8253]],
        [[11.0760]],
        [[10.5898]],
        [[ 8.1941]],
        [[ 8.9610]],
        [[14.8735]],
        [[15.2406]],
        [[ 8.9977]],
        [[ 8.2401]],
        [[10.6311]],
        [[11.1208]],
        [[ 7.8794]],
        [[10.0262]],
        [[12.0923]],
        [[12.7549]],
        [[ 9.7199]],
        [[ 7.2387]],
        [[11.5777]],
        [[10.2768]],
        [[ 8.6527]],
        [[ 9.3239]],
        [[13.4261]],
        [[12.9223]],
        [[ 9.1579]],
        [[ 8.4603]],
        [[10.1081]],
        [[11.3397]],
        [[ 6.6678]],
        [[ 9.5516]],
        [[12.3771]],
        [[11.8224]],
        [[ 9.8660]],
        [[ 7.6050]],
        [[10.9258]],
        [[10.4635]],
        [[ 8.0262]],
        [[ 8.8339]],
        [[14.0895]],
        [[14.7951]],
        [[ 8.8849]],
        [[ 8.1226]],
        [[10.5584]],
        [[10.8226]],
        [[ 7.4703]],
        [[ 9.8187]],
        [[11.6546]],
        [[12.2020]],
        [[ 9.4833]],
        [[ 6.3898]],
        [[11.1961]],
        [[10.2202]],
        [[ 8.5183]],
        [[ 9.2281]],
        [[13.1774]],
        [[13.7952]],
        [[ 9.3980]],
        [[ 8.7131]],
        [[10.3969]],
        [[11.4153]],
        [[ 7.0914]],
        [[ 9.6466]],
        [[12.5356]],
        [[11.8974]],
        [[ 9.9733]],
        [[ 7.7601]],
        [[11.0059]],
        [[10.7351]],
        [[ 8.3340]],
        [[ 9.0523]],
        [[18.9933]],
        [[19.5370]],
        [[ 9.0552]],
        [[ 8.3368]],
        [[10.7384]],
        [[11.0147]],
        [[ 7.7735]],
        [[ 9.9805]],
        [[11.9104]],
        [[12.5309]],
        [[ 9.6439]],
        [[ 7.0847]],
        [[11.4113]],
        [[10.3892]],
        [[ 8.7042]],
        [[ 9.3908]],
        [[13.7611]],
        [[13.2017]],
        [[ 9.2354]],
        [[ 8.5277]],
        [[10.2277]],
        [[11.1998]],
        [[ 6.4053]],
        [[ 9.4860]],
        [[12.2061]],
        [[11.6428]],
        [[ 9.8115]],
        [[ 7.4535]],
        [[10.8142]],
        [[10.5552]],
        [[ 8.1195]],
        [[ 8.8818]],
        [[14.7771]],
        [[14.0521]],
        [[ 8.8254]],
        [[ 8.0155]],
        [[10.4550]],
        [[10.9232]],
        [[ 7.5995]],
        [[ 9.8638]],
        [[11.8180]],
        [[12.3919]],
        [[ 9.5594]],
        [[ 6.7019]],
        [[11.3504]],
        [[10.1103]],
        [[ 8.4637]],
        [[ 9.1601]],
        [[12.9298]],
        [[13.4162]],
        [[ 9.3217]],
        [[ 8.6494]],
        [[10.2744]],
        [[11.5661]],
        [[ 7.2199]],
        [[ 9.7121]],
        [[12.7371]],
        [[12.0973]],
        [[10.0284]],
        [[ 7.8840]],
        [[11.1236]],
        [[10.6399]],
        [[ 8.2497]],
        [[ 9.0059]],
        [[15.3242]],
        [[14.8493]],
        [[ 8.9586]],
        [[ 8.1902]],
        [[10.5874]],
        [[11.0662]],
        [[ 7.8132]],
        [[ 9.9846]],
        [[12.0155]],
        [[12.6545]],
        [[ 9.6749]],
        [[ 7.1187]],
        [[11.5157]],
        [[10.2399]],
        [[ 8.6082]],
        [[ 9.2856]],
        [[13.3016]],
        [[12.8157]],
        [[ 9.1130]],
        [[ 8.4073]],
        [[10.0662]],
        [[11.2901]],
        [[ 6.4484]],
        [[ 9.5123]],
        [[12.3018]],
        [[11.7605]],
        [[ 9.8306]],
        [[ 7.5339]],
        [[10.8808]],
        [[10.4151]],
        [[ 7.9640]],
        [[ 8.7873]],
        [[13.8718]],
        [[14.5085]],
        [[ 8.8456]],
        [[ 8.0726]],
        [[10.5160]],
        [[10.7715]],
        [[ 7.3769]],
        [[ 9.7771]],
        [[11.5872]],
        [[12.1255]],
        [[ 9.4400]],
        [[ 5.9698]],
        [[11.1439]],
        [[10.1817]],
        [[ 8.4710]],
        [[ 9.1874]],
        [[13.0667]],
        [[13.6173]],
        [[ 9.3536]],
        [[ 8.6621]],
        [[10.3527]],
        [[11.3653]],
        [[ 6.9723]],
        [[ 9.6079]],
        [[12.4587]],
        [[11.8326]],
        [[ 9.9357]],
        [[ 7.6953]],
        [[10.9576]],
        [[10.6861]],
        [[ 8.2812]],
        [[ 9.0097]],
        [[16.3805]],
        [[15.8631]],
        [[ 9.0445]],
        [[ 8.2985]],
        [[10.6811]],
        [[10.9785]],
        [[ 7.6848]],
        [[ 9.9099]],
        [[11.8930]],
        [[12.4647]],
        [[ 9.5940]],
        [[ 6.8467]],
        [[11.3977]],
        [[10.3143]],
        [[ 8.6933]],
        [[ 9.3601]],
        [[13.5583]],
        [[13.0500]],
        [[ 9.2049]],
        [[ 8.5155]],
        [[10.1552]],
        [[11.1862]],
        [[ 5.3817]],
        [[ 9.4353]],
        [[12.1502]],
        [[11.6280]],
        [[ 9.7409]],
        [[ 7.3415]],
        [[10.7790]],
        [[10.5008]],
        [[ 8.0763]],
        [[ 8.8714]],
        [[14.2837]],
        [[13.9999]],
        [[ 8.7482]],
        [[ 7.9393]],
        [[10.4228]],
        [[10.8631]],
        [[ 7.5412]],
        [[ 9.8534]],
        [[11.7075]],
        [[12.2907]],
        [[ 9.5291]],
        [[ 6.6555]],
        [[11.2560]],
        [[10.1005]],
        [[ 8.3766]],
        [[ 9.1086]],
        [[12.8489]],
        [[13.3135]],
        [[ 9.2705]],
        [[ 8.5684]],
        [[10.2637]],
        [[11.4654]],
        [[ 7.1922]],
        [[ 9.6824]],
        [[12.6167]],
        [[11.9728]],
        [[10.0184]],
        [[ 7.8349]],
        [[11.0609]],
        [[10.6059]],
        [[ 8.1829]],
        [[ 8.9310]],
        [[15.2131]],
        [[15.6433]],
        [[ 8.9689]],
        [[ 8.2312]],
        [[10.6427]],
        [[11.1042]],
        [[ 7.8942]],
        [[10.0563]],
        [[12.0327]],
        [[12.7257]],
        [[ 9.7255]],
        [[ 7.3033]],
        [[11.5308]],
        [[10.3133]],
        [[ 8.6200]],
        [[ 9.3159]],
        [[13.4772]],
        [[12.9472]],
        [[ 9.1445]],
        [[ 8.4193]],
        [[10.1386]],
        [[11.3033]],
        [[ 6.8036]],
        [[ 9.5622]],
        [[12.3630]],
        [[11.7771]],
        [[ 9.9008]],
        [[ 7.6321]],
        [[10.9162]],
        [[10.4693]],
        [[ 8.0089]],
        [[ 8.7986]],
        [[14.2332]],
        [[14.5766]],
        [[ 8.9218]],
        [[ 8.1429]],
        [[10.5494]],
        [[10.8295]],
        [[ 7.4443]],
        [[ 9.7868]],
        [[11.6935]],
        [[12.2204]],
        [[ 9.4698]],
        [[ 6.1006]],
        [[11.2341]],
        [[10.1923]],
        [[ 8.5546]],
        [[ 9.2390]],
        [[13.1559]],
        [[13.7431]],
        [[ 9.4038]],
        [[ 8.7418]],
        [[10.3629]],
        [[11.4633]],
        [[ 7.0046]],
        [[ 9.6383]],
        [[12.5685]],
        [[11.9488]],
        [[ 9.9462]],
        [[ 7.7478]],
        [[11.0193]],
        [[10.7200]],
        [[ 8.3461]],
        [[ 9.0830]],
        [[16.6761]],
        [[17.3825]],
        [[ 9.0797]],
        [[ 8.3675]],
        [[10.7165]],
        [[11.0355]],
        [[ 7.7358]],
        [[ 9.9595]],
        [[11.9370]],
        [[12.5728]],
        [[ 9.6201]],
        [[ 7.0106]],
        [[11.4377]],
        [[10.3716]],
        [[ 8.7284]],
        [[ 9.4120]],
        [[13.6929]],
        [[13.1348]],
        [[ 9.2524]],
        [[ 8.5466]],
        [[10.2060]],
        [[11.2301]],
        [[ 6.2658]],
        [[ 9.4666]],
        [[12.2530]],
        [[11.6753]],
        [[ 9.7951]],
        [[ 7.4182]],
        [[10.8390]],
        [[10.5294]],
        [[ 8.1454]],
        [[ 8.9024]],
        [[14.5906]],
        [[14.1658]],
        [[ 8.8076]],
        [[ 7.9911]],
        [[10.4781]],
        [[10.8945]],
        [[ 7.6356]],
        [[ 9.8825]],
        [[11.7801]],
        [[12.3489]],
        [[ 9.5754]],
        [[ 6.7752]],
        [[11.3210]],
        [[10.1354]],
        [[ 8.4401]],
        [[ 9.1413]],
        [[12.9940]],
        [[13.4844]],
        [[ 9.2975]],
        [[ 8.6222]],
        [[10.2941]],
        [[11.5426]],
        [[ 7.2738]],
        [[ 9.7337]],
        [[12.6970]],
        [[12.0627]],
        [[10.0530]],
        [[ 7.9209]],
        [[11.1003]],
        [[10.6576]],
        [[ 8.2220]],
        [[ 8.9828]],
        [[15.5425]],
        [[15.0242]],
        [[ 8.9330]],
        [[ 8.1579]],
        [[10.6080]],
        [[11.0460]],
        [[ 7.8482]],
        [[10.0063]],
        [[11.9869]],
        [[12.6094]],
        [[ 9.6993]],
        [[ 7.1838]],
        [[11.4895]],
        [[10.2565]],
        [[ 8.5838]],
        [[ 9.2635]],
        [[13.3579]],
        [[12.8703]],
        [[ 9.0964]],
        [[ 8.3867]],
        [[10.0882]],
        [[11.2584]],
        [[ 6.5611]],
        [[ 9.5310]],
        [[12.2551]],
        [[11.7279]],
        [[ 9.8464]],
        [[ 7.5675]],
        [[10.8550]],
        [[10.4411]],
        [[ 7.9346]],
        [[ 8.7669]],
        [[13.9840]],
        [[14.3643]],
        [[ 8.8639]],
        [[ 8.0951]],
        [[10.4933]],
        [[10.7986]],
        [[ 7.3341]],
        [[ 9.7578]],
        [[11.6233]],
        [[12.1655]],
        [[ 9.4234]],
        [[ 5.6685]],
        [[11.1709]],
        [[10.1571]],
        [[ 8.4936]],
        [[ 9.2068]],
        [[12.9983]],
        [[13.5461]],
        [[ 9.3771]],
        [[ 8.6898]],
        [[10.3322]],
        [[11.3883]],
        [[ 6.8963]],
        [[ 9.5870]],
        [[12.4931]],
        [[11.8630]],
        [[ 9.9119]],
        [[ 7.6515]],
        [[10.9807]],
        [[10.6676]],
        [[ 8.3090]],
        [[ 9.0320]],
        [[16.0157]],
        [[16.3008]],
        [[ 9.0274]],
        [[ 8.2772]],
        [[10.7054]],
        [[10.9493]],
        [[ 7.7189]],
        [[ 9.9286]],
        [[11.8540]],
        [[12.4203]],
        [[ 9.6099]],
        [[ 6.9089]],
        [[11.3678]],
        [[10.3400]],
        [[ 8.6714]],
        [[ 9.3416]],
        [[13.6502]],
        [[13.1054]],
        [[ 9.1803]],
        [[ 8.4870]],
        [[10.1745]],
        [[11.1655]],
        [[ 5.9238]],
        [[ 9.4570]],
        [[12.1197]],
        [[11.5994]],
        [[ 9.7651]],
        [[ 7.3953]],
        [[10.7578]],
        [[10.5180]],
        [[ 8.0462]],
        [[ 8.8477]],
        [[14.3879]],
        [[13.9102]],
        [[ 8.7742]],
        [[ 7.9763]],
        [[10.4022]],
        [[10.8830]],
        [[ 7.4966]],
        [[ 9.8325]],
        [[11.7320]],
        [[12.3281]],
        [[ 9.5053]],
        [[ 6.5290]],
        [[11.2810]],
        [[10.0835]],
        [[ 8.4035]],
        [[ 9.1305]],
        [[12.8075]],
        [[13.2424]],
        [[ 9.2875]],
        [[ 8.5870]],
        [[10.2418]],
        [[11.4986]],
        [[ 7.1418]],
        [[ 9.6631]],
        [[12.6739]],
        [[12.0099]],
        [[10.0018]],
        [[ 7.8081]],
        [[11.0874]],
        [[10.5797]],
        [[ 8.2080]],
        [[ 8.9513]],
        [[14.9678]],
        [[15.3477]],
        [[ 8.9868]],
        [[ 8.2521]],
        [[10.6195]],
        [[11.1339]],
        [[ 7.8648]],
        [[10.0367]],
        [[12.0759]],
        [[12.7790]],
        [[ 9.7089]],
        [[ 7.2635]],
        [[11.5616]],
        [[10.2883]],
        [[ 8.6416]],
        [[ 9.3350]],
        [[13.3918]],
        [[12.8979]],
        [[ 9.1685]],
        [[ 8.4492]],
        [[10.1187]],
        [[11.3257]],
        [[ 6.7103]],
        [[ 9.5413]],
        [[12.3958]],
        [[11.8068]],
        [[ 9.8771]],
        [[ 7.5863]],
        [[10.9390]],
        [[10.4516]],
        [[ 8.0405]],
        [[ 8.8219]],
        [[14.1419]],
        [[14.7209]],
        [[ 8.8960]],
        [[ 8.1099]],
        [[10.5698]],
        [[10.8106]],
        [[ 7.4894]],
        [[ 9.8083]],
        [[11.6684]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<ExpBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1])
tensor([[0.9530],
        [0.8068],
        [0.7948],
        [0.8342],
        [0.8383],
        [0.7861],
        [0.8215],
        [0.8534],
        [0.8629],
        [0.8164],
        [0.7741],
        [0.8452],
        [0.8282],
        [0.8011],
        [0.8119],
        [0.8839],
        [0.8746],
        [0.8094],
        [0.7983],
        [0.8256],
        [0.8418],
        [0.7625],
        [0.8138],
        [0.8576],
        [0.8490],
        [0.8188],
        [0.7810],
        [0.8351],
        [0.8313],
        [0.7912],
        [0.8040],
        [0.8985],
        [0.8887],
        [0.8027],
        [0.7900],
        [0.8293],
        [0.8373],
        [0.7827],
        [0.8200],
        [0.8514],
        [0.8613],
        [0.8147],
        [0.7691],
        [0.8438],
        [0.8240],
        [0.7969],
        [0.8086],
        [0.8693],
        [0.8771],
        [0.8112],
        [0.7999],
        [0.8267],
        [0.8473],
        [0.7772],
        [0.8172],
        [0.8669],
        [0.8559],
        [0.8227],
        [0.7874],
        [0.8405],
        [0.8322],
        [0.7938],
        [0.8057],
        [0.9106],
        [0.9025],
        [0.8049],
        [0.7928],
        [0.8314],
        [0.8396],
        [0.7862],
        [0.8219],
        [0.8545],
        [0.8656],
        [0.8166],
        [0.7757],
        [0.8465],
        [0.8261],
        [0.7992],
        [0.8106],
        [0.8752],
        [0.8674],
        [0.8078],
        [0.7959],
        [0.8233],
        [0.8428],
        [0.7654],
        [0.8139],
        [0.8598],
        [0.8504],
        [0.8194],
        [0.7816],
        [0.8365],
        [0.8286],
        [0.7892],
        [0.8021],
        [0.8858],
        [0.8942],
        [0.8034],
        [0.7904],
        [0.8306],
        [0.8344],
        [0.7798],
        [0.8183],
        [0.8481],
        [0.8563],
        [0.8131],
        [0.7537],
        [0.8408],
        [0.8248],
        [0.7974],
        [0.8087],
        [0.8724],
        [0.8816],
        [0.8114],
        [0.8005],
        [0.8276],
        [0.8445],
        [0.7722],
        [0.8158],
        [0.8616],
        [0.8521],
        [0.8208],
        [0.7849],
        [0.8374],
        [0.8334],
        [0.7939],
        [0.8061],
        [0.9218],
        [0.9206],
        [0.8063],
        [0.7946],
        [0.8329],
        [0.8381],
        [0.7841],
        [0.8207],
        [0.8525],
        [0.8625],
        [0.8153],
        [0.7714],
        [0.8446],
        [0.8273],
        [0.8006],
        [0.8118],
        [0.8792],
        [0.8712],
        [0.8093],
        [0.7977],
        [0.8247],
        [0.8411],
        [0.7525],
        [0.8127],
        [0.8573],
        [0.8482],
        [0.8180],
        [0.7784],
        [0.8349],
        [0.8300],
        [0.7910],
        [0.8035],
        [0.8928],
        [0.8863],
        [0.8018],
        [0.7883],
        [0.8291],
        [0.8359],
        [0.7824],
        [0.8195],
        [0.8501],
        [0.8589],
        [0.8145],
        [0.7667],
        [0.8427],
        [0.8235],
        [0.7959],
        [0.8074],
        [0.8688],
        [0.8765],
        [0.8100],
        [0.7989],
        [0.8262],
        [0.8461],
        [0.7759],
        [0.8170],
        [0.8642],
        [0.8544],
        [0.8222],
        [0.7871],
        [0.8391],
        [0.8321],
        [0.7922],
        [0.8048],
        [0.9049],
        [0.9116],
        [0.8055],
        [0.7931],
        [0.8327],
        [0.8398],
        [0.7880],
        [0.8228],
        [0.8554],
        [0.8660],
        [0.8177],
        [0.7778],
        [0.8472],
        [0.8270],
        [0.7998],
        [0.8107],
        [0.8791],
        [0.8704],
        [0.8079],
        [0.7965],
        [0.8241],
        [0.8435],
        [0.7694],
        [0.8151],
        [0.8601],
        [0.8512],
        [0.8203],
        [0.7838],
        [0.8367],
        [0.8299],
        [0.7894],
        [0.8027],
        [0.8900],
        [0.8976],
        [0.8043],
        [0.7920],
        [0.8308],
        [0.8357],
        [0.7801],
        [0.8187],
        [0.8493],
        [0.8584],
        [0.8132],
        [0.7601],
        [0.8419],
        [0.8253],
        [0.7984],
        [0.8098],
        [0.8729],
        [0.8822],
        [0.8125],
        [0.8014],
        [0.8281],
        [0.8456],
        [0.7738],
        [0.8160],
        [0.8642],
        [0.8535],
        [0.8213],
        [0.7851],
        [0.8388],
        [0.8336],
        [0.7953],
        [0.8069],
        [0.9360],
        [0.9348],
        [0.8073],
        [0.7953],
        [0.8339],
        [0.8387],
        [0.7855],
        [0.8212],
        [0.8538],
        [0.8636],
        [0.8160],
        [0.7729],
        [0.8457],
        [0.8279],
        [0.8015],
        [0.8123],
        [0.8827],
        [0.8735],
        [0.8097],
        [0.7986],
        [0.8252],
        [0.8423],
        [0.7599],
        [0.8135],
        [0.8584],
        [0.8495],
        [0.8185],
        [0.7804],
        [0.8355],
        [0.8308],
        [0.7917],
        [0.8044],
        [0.8956],
        [0.8907],
        [0.8024],
        [0.7896],
        [0.8296],
        [0.8368],
        [0.7833],
        [0.8203],
        [0.8507],
        [0.8605],
        [0.8150],
        [0.7702],
        [0.8433],
        [0.8244],
        [0.7965],
        [0.8082],
        [0.8703],
        [0.8781],
        [0.8108],
        [0.7994],
        [0.8270],
        [0.8469],
        [0.7781],
        [0.8175],
        [0.8663],
        [0.8553],
        [0.8231],
        [0.7880],
        [0.8401],
        [0.8325],
        [0.7933],
        [0.8053],
        [0.9144],
        [0.9055],
        [0.8045],
        [0.7923],
        [0.8318],
        [0.8392],
        [0.7868],
        [0.8223],
        [0.8541],
        [0.8649],
        [0.8170],
        [0.7767],
        [0.8460],
        [0.8264],
        [0.7988],
        [0.8102],
        [0.8760],
        [0.8683],
        [0.8075],
        [0.7956],
        [0.8236],
        [0.8423],
        [0.7670],
        [0.8143],
        [0.8590],
        [0.8499],
        [0.8197],
        [0.7821],
        [0.8361],
        [0.8290],
        [0.7887],
        [0.8018],
        [0.8877],
        [0.8920],
        [0.8037],
        [0.7908],
        [0.8302],
        [0.8349],
        [0.7791],
        [0.8179],
        [0.8487],
        [0.8569],
        [0.8128],
        [0.7440],
        [0.8413],
        [0.8244],
        [0.7978],
        [0.8090],
        [0.8713],
        [0.8804],
        [0.8118],
        [0.8009],
        [0.8273],
        [0.8448],
        [0.7709],
        [0.8155],
        [0.8622],
        [0.8526],
        [0.8204],
        [0.7842],
        [0.8378],
        [0.8331],
        [0.7943],
        [0.8065],
        [0.9166],
        [0.9294],
        [0.8061],
        [0.7942],
        [0.8333],
        [0.8377],
        [0.7846],
        [0.8210],
        [0.8519],
        [0.8618],
        [0.8155],
        [0.7724],
        [0.8441],
        [0.8277],
        [0.8002],
        [0.8115],
        [0.8807],
        [0.8720],
        [0.8089],
        [0.7972],
        [0.8250],
        [0.8408],
        [0.7581],
        [0.8130],
        [0.8568],
        [0.8478],
        [0.8184],
        [0.7793],
        [0.8345],
        [0.8303],
        [0.7905],
        [0.8031],
        [0.8945],
        [0.8848],
        [0.8023],
        [0.7889],
        [0.8287],
        [0.8362],
        [0.7817],
        [0.8192],
        [0.8505],
        [0.8596],
        [0.8141],
        [0.7646],
        [0.8431],
        [0.8232],
        [0.7963],
        [0.8077],
        [0.8681],
        [0.8754],
        [0.8103],
        [0.7993],
        [0.8258],
        [0.8466],
        [0.7750],
        [0.8167],
        [0.8651],
        [0.8550],
        [0.8219],
        [0.7867],
        [0.8395],
        [0.8316],
        [0.7927],
        [0.8051],
        [0.9013],
        [0.9073],
        [0.8057],
        [0.7934],
        [0.8323],
        [0.8403],
        [0.7875],
        [0.8225],
        [0.8561],
        [0.8668],
        [0.8175],
        [0.7771],
        [0.8477],
        [0.8265],
        [0.8001],
        [0.8110],
        [0.8778],
        [0.8696],
        [0.8083],
        [0.7970],
        [0.8238],
        [0.8438],
        [0.7678],
        [0.8147],
        [0.8607],
        [0.8517],
        [0.8199],
        [0.7831],
        [0.8371],
        [0.8296],
        [0.7899],
        [0.8031],
        [0.8886],
        [0.9000],
        [0.8039],
        [0.7915],
        [0.8311],
        [0.8354],
        [0.7809],
        [0.8191],
        [0.8489],
        [0.8579],
        [0.8136],
        [0.7633],
        [0.8415],
        [0.8256],
        [0.7979],
        [0.8095],
        [0.8737],
        [0.8838],
        [0.8122],
        [0.8011],
        [0.8285],
        [0.8451],
        [0.7747],
        [0.8163],
        [0.8633],
        [0.8529],
        [0.8216],
        [0.7856],
        [0.8384],
        [0.8340],
        [0.7949],
        [0.8066],
        [0.9683],
        [0.9772],
        [0.8067],
        [0.7950],
        [0.8340],
        [0.8385],
        [0.7858],
        [0.8217],
        [0.8531],
        [0.8632],
        [0.8162],
        [0.7746],
        [0.8450],
        [0.8284],
        [0.8010],
        [0.8121],
        [0.8832],
        [0.8741],
        [0.8096],
        [0.7981],
        [0.8257],
        [0.8416],
        [0.7636],
        [0.8137],
        [0.8579],
        [0.8488],
        [0.8190],
        [0.7806],
        [0.8353],
        [0.8311],
        [0.7915],
        [0.8039],
        [0.8997],
        [0.8879],
        [0.8029],
        [0.7898],
        [0.8294],
        [0.8371],
        [0.7830],
        [0.8198],
        [0.8516],
        [0.8609],
        [0.8149],
        [0.7684],
        [0.8440],
        [0.8238],
        [0.7971],
        [0.8084],
        [0.8697],
        [0.8776],
        [0.8110],
        [0.8001],
        [0.8265],
        [0.8475],
        [0.7768],
        [0.8174],
        [0.8666],
        [0.8561],
        [0.8225],
        [0.7876],
        [0.8403],
        [0.8324],
        [0.7936],
        [0.8059],
        [0.9086],
        [0.9009],
        [0.8051],
        [0.7926],
        [0.8316],
        [0.8394],
        [0.7865],
        [0.8218],
        [0.8548],
        [0.8652],
        [0.8167],
        [0.7752],
        [0.8467],
        [0.8259],
        [0.7994],
        [0.8104],
        [0.8757],
        [0.8678],
        [0.8076],
        [0.7961],
        [0.8231],
        [0.8430],
        [0.7643],
        [0.8141],
        [0.8595],
        [0.8507],
        [0.8193],
        [0.7819],
        [0.8364],
        [0.8288],
        [0.7889],
        [0.8023],
        [0.8850],
        [0.8954],
        [0.8033],
        [0.7907],
        [0.8304],
        [0.8346],
        [0.7794],
        [0.8184],
        [0.8479],
        [0.8566],
        [0.8129],
        [0.7565],
        [0.8406],
        [0.8250],
        [0.7972],
        [0.8088],
        [0.8719],
        [0.8809],
        [0.8115],
        [0.8003],
        [0.8278],
        [0.8442],
        [0.7728],
        [0.8157],
        [0.8620],
        [0.8518],
        [0.8210],
        [0.7846],
        [0.8376],
        [0.8332],
        [0.7941],
        [0.8059],
        [0.9258],
        [0.9174],
        [0.8065],
        [0.7944],
        [0.8331],
        [0.8380],
        [0.7844],
        [0.8206],
        [0.8528],
        [0.8621],
        [0.8154],
        [0.7707],
        [0.8448],
        [0.8271],
        [0.8008],
        [0.8116],
        [0.8799],
        [0.8716],
        [0.8091],
        [0.7979],
        [0.8246],
        [0.8413],
        [0.7469],
        [0.8129],
        [0.8570],
        [0.8485],
        [0.8178],
        [0.7788],
        [0.8347],
        [0.8302],
        [0.7907],
        [0.8037],
        [0.8917],
        [0.8871],
        [0.8017],
        [0.7885],
        [0.8289],
        [0.8361],
        [0.7820],
        [0.8197],
        [0.8498],
        [0.8593],
        [0.8144],
        [0.7676],
        [0.8425],
        [0.8237],
        [0.7956],
        [0.8075],
        [0.8684],
        [0.8759],
        [0.8102],
        [0.7988],
        [0.8263],
        [0.8459],
        [0.7764],
        [0.8169],
        [0.8646],
        [0.8541],
        [0.8223],
        [0.7868],
        [0.8393],
        [0.8319],
        [0.7925],
        [0.8046],
        [0.9068],
        [0.9138],
        [0.8053],
        [0.7933],
        [0.8325],
        [0.8400],
        [0.7878],
        [0.8230],
        [0.8551],
        [0.8664],
        [0.8176],
        [0.7782],
        [0.8469],
        [0.8271],
        [0.7996],
        [0.8109],
        [0.8786],
        [0.8700],
        [0.8081],
        [0.7963],
        [0.8243],
        [0.8432],
        [0.7700],
        [0.8149],
        [0.8605],
        [0.8509],
        [0.8204],
        [0.7835],
        [0.8369],
        [0.8297],
        [0.7897],
        [0.8025],
        [0.8909],
        [0.8965],
        [0.8045],
        [0.7918],
        [0.8310],
        [0.8355],
        [0.7805],
        [0.8186],
        [0.8496],
        [0.8582],
        [0.8134],
        [0.7586],
        [0.8421],
        [0.8252],
        [0.7985],
        [0.8097],
        [0.8734],
        [0.8829],
        [0.8123],
        [0.8016],
        [0.8279],
        [0.8458],
        [0.7733],
        [0.8162],
        [0.8638],
        [0.8537],
        [0.8212],
        [0.7854],
        [0.8386],
        [0.8337],
        [0.7951],
        [0.8071],
        [0.9306],
        [0.9421],
        [0.8071],
        [0.7955],
        [0.8337],
        [0.8389],
        [0.7852],
        [0.8214],
        [0.8535],
        [0.8639],
        [0.8159],
        [0.7734],
        [0.8454],
        [0.8281],
        [0.8014],
        [0.8125],
        [0.8821],
        [0.8730],
        [0.8099],
        [0.7984],
        [0.8254],
        [0.8420],
        [0.7613],
        [0.8134],
        [0.8587],
        [0.8493],
        [0.8187],
        [0.7800],
        [0.8357],
        [0.8306],
        [0.7919],
        [0.8042],
        [0.8967],
        [0.8898],
        [0.8026],
        [0.7894],
        [0.8298],
        [0.8366],
        [0.7836],
        [0.8201],
        [0.8510],
        [0.8602],
        [0.8151],
        [0.7696],
        [0.8435],
        [0.8242],
        [0.7967],
        [0.8081],
        [0.8707],
        [0.8787],
        [0.8106],
        [0.7996],
        [0.8268],
        [0.8471],
        [0.7777],
        [0.8177],
        [0.8659],
        [0.8556],
        [0.8229],
        [0.7882],
        [0.8399],
        [0.8327],
        [0.7931],
        [0.8055],
        [0.9122],
        [0.9038],
        [0.8047],
        [0.7921],
        [0.8319],
        [0.8391],
        [0.7870],
        [0.8221],
        [0.8544],
        [0.8645],
        [0.8171],
        [0.7762],
        [0.8463],
        [0.8262],
        [0.7990],
        [0.8101],
        [0.8767],
        [0.8687],
        [0.8073],
        [0.7958],
        [0.8235],
        [0.8425],
        [0.7661],
        [0.8144],
        [0.8587],
        [0.8501],
        [0.8195],
        [0.7825],
        [0.8359],
        [0.8292],
        [0.7884],
        [0.8020],
        [0.8868],
        [0.8930],
        [0.8036],
        [0.7911],
        [0.8301],
        [0.8350],
        [0.7787],
        [0.8181],
        [0.8484],
        [0.8573],
        [0.8127],
        [0.7516],
        [0.8411],
        [0.8246],
        [0.7975],
        [0.8091],
        [0.8708],
        [0.8797],
        [0.8119],
        [0.8007],
        [0.8274],
        [0.8446],
        [0.7716],
        [0.8153],
        [0.8626],
        [0.8523],
        [0.8206],
        [0.7838],
        [0.8380],
        [0.8329],
        [0.7945],
        [0.8063],
        [0.9199],
        [0.9245],
        [0.8062],
        [0.7940],
        [0.8335],
        [0.8375],
        [0.7849],
        [0.8209],
        [0.8522],
        [0.8614],
        [0.8157],
        [0.7718],
        [0.8443],
        [0.8276],
        [0.8004],
        [0.8113],
        [0.8814],
        [0.8725],
        [0.8087],
        [0.7974],
        [0.8249],
        [0.8410],
        [0.7557],
        [0.8132],
        [0.8565],
        [0.8480],
        [0.8182],
        [0.7797],
        [0.8344],
        [0.8305],
        [0.7903],
        [0.8033],
        [0.8934],
        [0.8856],
        [0.8021],
        [0.7891],
        [0.8286],
        [0.8364],
        [0.7813],
        [0.8193],
        [0.8502],
        [0.8599],
        [0.8140],
        [0.7656],
        [0.8429],
        [0.8234],
        [0.7961],
        [0.8079],
        [0.8677],
        [0.8748],
        [0.8104],
        [0.7991],
        [0.8260],
        [0.8464],
        [0.7755],
        [0.8166],
        [0.8655],
        [0.8547],
        [0.8221],
        [0.7864],
        [0.8397],
        [0.8315],
        [0.7929],
        [0.8050],
        [0.9028],
        [0.9090],
        [0.8056],
        [0.7936],
        [0.8321],
        [0.8405],
        [0.7873],
        [0.8226],
        [0.8558],
        [0.8672],
        [0.8173],
        [0.7775],
        [0.8474],
        [0.8267],
        [0.7999],
        [0.8112],
        [0.8772],
        [0.8692],
        [0.8085],
        [0.7968],
        [0.8240],
        [0.8436],
        [0.7685],
        [0.8146],
        [0.8610],
        [0.8514],
        [0.8200],
        [0.7828],
        [0.8373],
        [0.8294],
        [0.7902],
        [0.8029],
        [0.8894],
        [0.8988],
        [0.8041],
        [0.7913],
        [0.8313],
        [0.8352],
        [0.7812],
        [0.8189],
        [0.8492]], device='cuda:0', dtype=torch.float64,
       grad_fn=<AddBackward0>)