Traceback (most recent call last):
  File "/home/abdelmajid/workdir/cost-aware-bo/main.py", line 61, in <module>
    bo_trial(trial_number=trial, acqf=args.acqf, wandb=wandb, params=params)
  File "/home/abdelmajid/workdir/cost-aware-bo/single_trial.py", line 39, in bo_trial
    X, Y, C = get_initial_data(params['n_init_data'], bounds=input_bounds, seed=trial_number, params=params)
  File "/home/abdelmajid/workdir/cost-aware-bo/single_trial.py", line 11, in get_initial_data
    y = F(X, params).unsqueeze(-1)
  File "/home/abdelmajid/workdir/cost-aware-bo/functions.py", line 187, in F
    F += obj(X[:, stage_params])
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/botorch/test_functions/base.py", line 55, in forward
    f = self.evaluate_true(X=X)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/botorch/test_functions/synthetic.py", line 399, in evaluate_true
    inner_sum = torch.sum(self.A * (X.unsqueeze(-2) - 0.0001 * self.P) ** 2, dim=-1)
RuntimeError: The size of tensor a (2) must match the size of tensor b (3) at non-singleton dimension 2