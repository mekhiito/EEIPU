Iteration-0 [EIPU] Trial #3 Current X = [ 9.09631317  2.5053971   1.56923936  1.16258967  0.45211296  0.70848491
 -1.09770452]
Best F = -7.692		Predicted Y = 5.118		f(x) = -7.692		c(x) = [27.820, 76.512, 31.225]		E[c(x)] = [0.000]		sum(c(x)) = [135.556]		sum(E[c(x)]) = 0.000		Cum Costs = 1729.883		Inverse c(x) = 0.007		E[inv_c(x)] = 0.000
Iteration-1 [EIPU] Trial #3 Current X = [ 8.8121072   1.04346132  1.30370121  0.71408026  0.1639154   1.01516812
 -0.81714124]
Best F = -7.692		Predicted Y = 5.900		f(x) = -7.963		c(x) = [27.490, 73.792, 31.686]		E[c(x)] = [0.000]		sum(c(x)) = [132.969]		sum(E[c(x)]) = 0.000		Cum Costs = 1862.851		Inverse c(x) = 0.008		E[inv_c(x)] = 0.000
Iteration-2 [EIPU] Trial #3 Current X = [ 8.5427154   2.84635482  1.01346908  0.25060915  0.05523948  0.91653499
 -0.0763837 ]
Best F = -7.692		Predicted Y = 5.819		f(x) = -9.838		c(x) = [50.948, 68.968, 30.861]		E[c(x)] = [0.000]		sum(c(x)) = [150.777]		sum(E[c(x)]) = 0.000		Cum Costs = 2013.628		Inverse c(x) = 0.007		E[inv_c(x)] = 0.000
Iteration-3 [EIPU] Trial #3 Current X = [ 8.41543429  2.76078219  1.63472981  0.29354339  0.01535602  0.8083549
 -1.17469495]
Best F = -7.692		Predicted Y = 6.427		f(x) = -12.760		c(x) = [54.087, 69.472, 31.511]		E[c(x)] = [0.000]		sum(c(x)) = [155.070]		sum(E[c(x)]) = 0.000		Cum Costs = 2168.699		Inverse c(x) = 0.006		E[inv_c(x)] = 0.000
Iteration-4 [EIPU] Trial #3 Current X = [ 7.35934977  2.23411624  1.37304004  0.82427798  0.66985754  0.95092885
 -0.67833266]
Best F = -7.692		Predicted Y = 6.163		f(x) = -19.871		c(x) = [94.037, 73.728, 31.555]		E[c(x)] = [0.000]		sum(c(x)) = [199.320]		sum(E[c(x)]) = 0.000		Cum Costs = 2368.019		Inverse c(x) = 0.005		E[inv_c(x)] = 0.000
Iteration-5 [EIPU] Trial #3 Current X = [ 9.30674362  1.89515277  1.60463423  1.01398545 -0.27014472  0.63074852
 -0.36548266]
Best F = -7.692		Predicted Y = 6.170		f(x) = -7.862		c(x) = [16.651, 76.006, 30.476]		E[c(x)] = [0.000]		sum(c(x)) = [123.133]		sum(E[c(x)]) = 0.000		Cum Costs = 2491.152		Inverse c(x) = 0.008		E[inv_c(x)] = 0.000
Iteration-6 [EIPU] Trial #3 Current X = [ 9.30674362  2.54741312  1.09811869  1.09047014 -0.39326382  0.95707849
 -1.01211695]
Best F = -6.299		Predicted Y = 6.110		f(x) = -6.299		c(x) = [26.352, 76.260, 31.701]		E[c(x)] = [0.000]		sum(c(x)) = [134.314]		sum(E[c(x)]) = 0.000		Cum Costs = 2625.466		Inverse c(x) = 0.007		E[inv_c(x)] = 0.000
Iteration-7 [EIPU] Trial #3 Current X = [ 9.30674362e+00  1.58146211e+00  9.52347536e-01  7.94167608e-03
 -8.66765606e-01  1.20553668e+00 -1.15951517e-01]
Best F = -4.256		Predicted Y = 5.427		f(x) = -4.256		c(x) = [15.349, 64.332, 31.112]		E[c(x)] = [0.000]		sum(c(x)) = [110.793]		sum(E[c(x)]) = 0.000		Cum Costs = 2736.259		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Iteration-8 [EIPU] Trial #3 Current X = [ 9.30674362  2.31862726  1.44949739  0.68374078 -0.42657509  1.52561994
 -0.24780801]
Best F = -2.458		Predicted Y = 5.610		f(x) = -2.458		c(x) = [22.019, 73.132, 31.343]		E[c(x)] = [0.000]		sum(c(x)) = [126.494]		sum(E[c(x)]) = 0.000		Cum Costs = 2862.753		Inverse c(x) = 0.008		E[inv_c(x)] = 0.000
Iteration-9 [EIPU] Trial #3 Current X = [ 9.30674362  1.31320593  0.82974135  0.81946103 -0.41305346  1.4970096
  0.38244986]
Best F = -2.458		Predicted Y = 5.650		f(x) = -4.341		c(x) = [16.173, 74.349, 30.468]		E[c(x)] = [0.000]		sum(c(x)) = [120.989]		sum(E[c(x)]) = 0.000		Cum Costs = 2983.743		Inverse c(x) = 0.008		E[inv_c(x)] = 0.000
Iteration-10 [EIPU] Trial #3 Current X = [ 9.30674362  1.43162861  1.15142805 -0.41887188 -0.12895476  1.69086937
  0.45600597]
Best F = -2.458		Predicted Y = 5.110		f(x) = -3.723		c(x) = [15.590, 61.078, 30.401]		E[c(x)] = [0.000]		sum(c(x)) = [107.068]		sum(E[c(x)]) = 0.000		Cum Costs = 3090.811		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Iteration-11 [EIPU] Trial #3 Current X = [ 9.30674362  1.68335588  0.81123085 -0.04796087 -0.23396019  1.86636308
 -0.40264493]
Best F = -2.458		Predicted Y = 5.849		f(x) = -3.072		c(x) = [15.506, 65.288, 31.538]		E[c(x)] = [0.000]		sum(c(x)) = [112.332]		sum(E[c(x)]) = 0.000		Cum Costs = 3203.143		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Iteration-12 [EIPU] Trial #3 Current X = [ 9.1120473   1.75358039  1.03783764 -0.07849647 -0.91113281  1.98578727
  0.38570163]
Best F = -2.044		Predicted Y = 5.598		f(x) = -2.044		c(x) = [17.842, 63.123, 30.477]		E[c(x)] = [0.000]		sum(c(x)) = [111.442]		sum(E[c(x)]) = 0.000		Cum Costs = 3314.585		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Iteration-13 [EIPU] Trial #3 Current X = [ 9.30674362  1.04967291  1.26516362  0.3090183  -0.59374535  1.98578727
 -0.19950433]
Best F = -2.044		Predicted Y = 6.003		f(x) = -3.511		c(x) = [18.666, 68.794, 31.289]		E[c(x)] = [0.000]		sum(c(x)) = [118.750]		sum(E[c(x)]) = 0.000		Cum Costs = 3433.335		Inverse c(x) = 0.008		E[inv_c(x)] = 0.000
Iteration-14 [EIPU] Trial #3 Current X = [ 9.30674362  1.93640891  1.28208843 -1.4201883  -1.10162233  1.98578727
 -0.41557359]
Best F = -2.044		Predicted Y = 3.045		f(x) = -2.993		c(x) = [17.000, 51.397, 31.552]		E[c(x)] = [0.000]		sum(c(x)) = [99.949]		sum(E[c(x)]) = 0.000		Cum Costs = 3533.284		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-15 [EIPU] Trial #3 Current X = [ 9.30674362  2.22635593  1.21880396 -0.57908747 -0.70020391  1.83927001
 -0.25081582]
Best F = -1.978		Predicted Y = 6.273		f(x) = -1.978		c(x) = [20.530, 58.256, 31.357]		E[c(x)] = [0.000]		sum(c(x)) = [110.144]		sum(E[c(x)]) = 0.000		Cum Costs = 3643.427		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Iteration-16 [EIPU] Trial #3 Current X = [ 9.30674362  1.29388748  0.75477384 -1.56882743 -1.17846575  1.98578727
  0.31945847]
Best F = -1.978		Predicted Y = 4.815		f(x) = -2.374		c(x) = [16.300, 50.912, 30.553]		E[c(x)] = [0.000]		sum(c(x)) = [97.765]		sum(E[c(x)]) = 0.000		Cum Costs = 3741.192		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-17 [EIPU] Trial #3 Current X = [ 9.30674362  1.72179672  1.35715398 -1.68360369 -1.68553877  1.62894745
  0.93521302]
Best F = -1.978		Predicted Y = 3.818		f(x) = -12.446		c(x) = [15.632, 48.504, 30.107]		E[c(x)] = [0.000]		sum(c(x)) = [94.243]		sum(E[c(x)]) = 0.000		Cum Costs = 3835.435		Inverse c(x) = 0.011		E[inv_c(x)] = 0.000
Iteration-18 [EIPU] Trial #3 Current X = [ 8.68528146  1.44381036  0.96356179 -1.17981784 -0.90053798  1.98578727
 -0.03289851]
Best F = -1.978		Predicted Y = 5.652		f(x) = -3.918		c(x) = [28.261, 53.012, 31.048]		E[c(x)] = [0.000]		sum(c(x)) = [112.320]		sum(E[c(x)]) = 0.000		Cum Costs = 3947.756		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Iteration-19 [EIPU] Trial #3 Current X = [ 9.30674362  1.9144649   0.77343711 -1.04533927 -1.68553877  1.98578727
 -0.42912699]
Best F = -1.978		Predicted Y = 4.940		f(x) = -3.098		c(x) = [16.810, 50.046, 31.566]		E[c(x)] = [0.000]		sum(c(x)) = [98.422]		sum(E[c(x)]) = 0.000		Cum Costs = 4046.178		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-20 [EIPU] Trial #3 Current X = [ 9.30674362  1.49691736  0.80396268 -1.97478008 -0.87905923  1.98578727
 -1.61073592]
Best F = -1.978		Predicted Y = 3.171		f(x) = -102.817		c(x) = [15.416, 53.155, 31.983]		E[c(x)] = [0.000]		sum(c(x)) = [100.554]		sum(E[c(x)]) = 0.000		Cum Costs = 4146.733		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-21 [EIPU] Trial #3 Current X = [ 9.30674362  2.05417832  1.27237528 -1.31214102 -1.68553877  1.98578727
 -0.01105258]
Best F = -1.305		Predicted Y = 7.087		f(x) = -1.305		c(x) = [18.212, 48.827, 31.015]		E[c(x)] = [0.000]		sum(c(x)) = [98.054]		sum(E[c(x)]) = 0.000		Cum Costs = 4244.787		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-22 [EIPU] Trial #3 Current X = [ 9.30674362  2.35598831  0.8536855  -1.60248583 -1.47864818  1.45627484
 -0.0229664 ]
Best F = -1.305		Predicted Y = 5.162		f(x) = -2.462		c(x) = [22.667, 49.466, 31.017]		E[c(x)] = [0.000]		sum(c(x)) = [103.150]		sum(E[c(x)]) = 0.000		Cum Costs = 4347.937		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-23 [EIPU] Trial #3 Current X = [ 9.30674362  1.6721098   1.76022327  1.43269217 -0.60231182  1.50690317
 -0.96585854]
Best F = -1.305		Predicted Y = 4.704		f(x) = -7.775		c(x) = [15.476, 77.006, 31.882]		E[c(x)] = [0.000]		sum(c(x)) = [124.364]		sum(E[c(x)]) = 0.000		Cum Costs = 4472.301		Inverse c(x) = 0.008		E[inv_c(x)] = 0.000
Iteration-24 [EIPU] Trial #3 Current X = [ 9.30674362  1.85005843  0.50832966 -0.57805211 -1.31629686  1.98578727
  0.08953049]
Best F = -1.305		Predicted Y = 5.665		f(x) = -1.326		c(x) = [16.316, 55.702, 30.865]		E[c(x)] = [0.000]		sum(c(x)) = [102.884]		sum(E[c(x)]) = 0.000		Cum Costs = 4575.185		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-25 [EIPU] Trial #3 Current X = [ 9.30674362  2.05417832  1.76022327 -1.1235821  -1.68553877  1.18425739
 -0.36599811]
Best F = -1.305		Predicted Y = 4.018		f(x) = -3.994		c(x) = [18.212, 49.608, 31.433]		E[c(x)] = [0.000]		sum(c(x)) = [99.253]		sum(E[c(x)]) = 0.000		Cum Costs = 4674.437		Inverse c(x) = 0.010		E[inv_c(x)] = 0.000
Iteration-26 [EIPU] Trial #3 Current X = [ 9.30674362  0.84339356  0.68356354 -0.57583082 -1.68553877  1.75725651
  0.55300655]
Best F = -1.305		Predicted Y = 4.554		f(x) = -5.746		c(x) = [21.675, 53.893, 30.316]		E[c(x)] = [0.000]		sum(c(x)) = [105.884]		sum(E[c(x)]) = 0.000		Cum Costs = 4780.322		Inverse c(x) = 0.009		E[inv_c(x)] = 0.000
Traceback (most recent call last):
  File "/home/abdelmajid/workdir/cost-aware-bo/main.py", line 65, in <module>
    trial_logs = bo_trial(trial_number=trial, acqf=args.acqf, wandb=wandb, params=params)
  File "/home/abdelmajid/workdir/cost-aware-bo/single_trial.py", line 55, in bo_trial
    new_x, n_memoised, E_c, E_inv_c, y_pred = bo_iteration(X, Y, C, bounds=bounds, acqf_str=acqf, decay=eta, iter=iteration, params=params)
  File "/home/abdelmajid/workdir/cost-aware-bo/single_iteration.py", line 72, in bo_iteration
    new_x, n_memoised = optimize_acqf_by_mem(acqf=acqf, acqf_str=acqf_str, bounds=norm_bounds, iter=iter, prefix_pool=prefix_pool, seed=params['rand_seed'])
  File "/home/abdelmajid/workdir/cost-aware-bo/optimize_mem_acqf.py", line 26, in optimize_acqf_by_mem
    new_candidate, acqf_val = optimize_acqf(acq_function=acqf, acq_type=acqf_str, delta=pref_stages, curr_iter=iter, bounds=bounds, q=1, num_restarts=10, raw_samples=500, options={'seed': seed})
  File "/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py", line 400, in optimize_acqf
    return _optimize_acqf(opt_acqf_inputs)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/botorch/optim/optimize.py", line 554, in _optimize_acqf
    return _optimize_acqf_batch(
  File "/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py", line 413, in _optimize_acqf_batch
    batch_initial_conditions = opt_inputs.get_ic_generator()(
  File "/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py", line 220, in gen_batch_initial_conditions
    ).cpu() if 'EIPU' not in acq_type else acq_function(
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/botorch/utils/transforms.py", line 287, in decorated
    output = method(acqf, X, *args, **kwargs)
  File "/home/abdelmajid/workdir/cost-aware-bo/EEIPU/EIPUVariants.py", line 127, in forward
    posterior = self.model.posterior(
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/botorch/models/gpytorch.py", line 375, in posterior
    mvn = self(X)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/models/exact_gp.py", line 320, in __call__
    predictive_mean, predictive_covar = self.prediction_strategy.exact_prediction(full_mean, full_covar)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/models/exact_prediction_strategies.py", line 264, in exact_prediction
    test_covar = joint_covar[..., self.num_train :, :].to_dense()
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/utils/memoize.py", line 59, in g
    return _add_to_cache(self, cache_name, method(self, *args, **kwargs), *args, kwargs_pkl=kwargs_pkl)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/lazy/lazy_evaluated_kernel_tensor.py", line 410, in to_dense
    return self.evaluate_kernel().to_dense()
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/utils/memoize.py", line 59, in g
    return _add_to_cache(self, cache_name, method(self, *args, **kwargs), *args, kwargs_pkl=kwargs_pkl)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/lazy/lazy_evaluated_kernel_tensor.py", line 25, in wrapped
    output = method(self, *args, **kwargs)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/lazy/lazy_evaluated_kernel_tensor.py", line 355, in evaluate_kernel
    res = self.kernel(
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/kernels/kernel.py", line 524, in __call__
    super(Kernel, self).__call__(x1_, x2_, last_dim_is_batch=last_dim_is_batch, **params)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/module.py", line 30, in __call__
    outputs = self.forward(*inputs, **kwargs)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/kernels/scale_kernel.py", line 109, in forward
    orig_output = self.base_kernel.forward(x1, x2, diag=diag, last_dim_is_batch=last_dim_is_batch, **params)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/kernels/matern_kernel.py", line 99, in forward
    distance = self.covar_dist(x1_, x2_, diag=diag, **params)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/kernels/kernel.py", line 351, in covar_dist
    return dist_func(x1, x2, x1_eq_x2)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/kernels/kernel.py", line 53, in dist
    res = sq_dist(x1, x2, x1_eq_x2=x1_eq_x2)
  File "/home/abdelmajid/miniconda3/envs/tuun/lib/python3.10/site-packages/gpytorch/kernels/kernel.py", line 38, in sq_dist
    x2_norm = x2.pow(2).sum(dim=-1, keepdim=True)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 39.59 GiB total capacity; 20.48 MiB already allocated; 36.62 MiB free; 22.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF