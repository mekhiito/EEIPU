COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[23.4094, 14.3042, 16.2482],
         [33.0775, 75.7954, 16.5362],
         [18.6325, 29.3989, 30.9035],
         ...,
         [53.7684, 11.4915, 28.9294],
         [25.7313, 57.1294, 29.6822],
         [29.3691, 44.8428, 21.6222]],
        [[12.9854, 13.1646, 14.9394],
         [13.0476, 19.0343, 10.7561],
         [12.9063, 20.8682, 27.1604],
         ...,
         [42.8600,  9.3668, 15.4117],
         [14.3699, 16.5630, 15.0757],
         [15.4229, 18.5237, 14.5877]],
        [[12.0719, 13.0300, 14.7849],
         [11.6284, 16.0417, 10.1984],
         [12.3328, 20.0014, 26.7298],
         ...,
         [41.6737,  9.1328, 14.2560],
         [13.3701, 14.2094, 13.8630],
         [14.2410, 16.6034, 13.8941]],
        ...,
        [[11.0268, 12.8648, 14.5954],
         [10.0796, 12.9731,  9.5463],
         [11.6563, 18.9754, 26.2048],
         ...,
         [40.2468,  8.8503, 12.9412],
         [12.2253, 11.7478, 12.4925],
         [12.8991, 14.4945, 13.0788]],
        [[13.8901, 13.2901, 15.0835],
         [14.5111, 22.2905, 11.2980],
         [13.4595, 21.7018, 27.5642],
         ...,
         [43.9852,  9.5882, 16.5618],
         [15.3592, 19.0807, 16.2893],
         [16.6010, 20.4932, 15.2588]],
        [[16.1157, 13.5713, 15.4064],
         [18.3480, 31.5836, 12.5923],
         [14.7654, 23.6611, 28.4764],
         ...,
         [46.5737, 10.0955, 19.4124],
         [17.7900, 26.0736, 19.3242],
         [19.5289, 25.6119, 16.8509]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.1035, 1.0336, 0.9504],
         [1.2312, 2.3522, 0.9551],
         [1.0403, 1.3573, 1.1888],
         ...,
         [1.5047, 0.9733, 1.1567],
         [1.1342, 1.9520, 1.1689],
         [1.1822, 1.6885, 1.0378]],
        [[0.9657, 1.0092, 0.9291],
         [0.9665, 1.1351, 0.8611],
         [0.9647, 1.1744, 1.1279],
         ...,
         [1.3605, 0.9278, 0.9368],
         [0.9840, 1.0821, 0.9313],
         [0.9979, 1.1241, 0.9234]],
        [[0.9536, 1.0063, 0.9266],
         [0.9478, 1.0709, 0.8520],
         [0.9571, 1.1558, 1.1209],
         ...,
         [1.3448, 0.9227, 0.9180],
         [0.9708, 1.0316, 0.9116],
         [0.9823, 1.0829, 0.9121]],
        ...,
        [[0.9398, 1.0028, 0.9235],
         [0.9273, 1.0051, 0.8414],
         [0.9481, 1.1338, 1.1123],
         ...,
         [1.3260, 0.9167, 0.8966],
         [0.9557, 0.9788, 0.8893],
         [0.9646, 1.0377, 0.8989]],
        [[0.9777, 1.0119, 0.9315],
         [0.9859, 1.2049, 0.8699],
         [0.9720, 1.1923, 1.1345],
         ...,
         [1.3754, 0.9325, 0.9555],
         [0.9971, 1.1361, 0.9511],
         [1.0135, 1.1663, 0.9343]],
        [[1.0071, 1.0179, 0.9367],
         [1.0366, 1.4042, 0.8909],
         [0.9892, 1.2343, 1.1493],
         ...,
         [1.4096, 0.9434, 1.0019],
         [1.0292, 1.2860, 1.0004],
         [1.0522, 1.2761, 0.9602]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[21.5115, 13.8560, 16.1101],
         [32.9981, 74.2488, 16.5095],
         [17.1675, 24.6790, 27.8873],
         ...,
         [53.1748, 11.5962, 28.9591],
         [25.7812, 55.4332, 29.6709],
         [29.0691, 42.4497, 21.6724]],
        [[12.4642, 12.0586, 14.9467],
         [13.0762, 18.7581, 10.7686],
         [12.3995, 18.0118, 25.8739],
         ...,
         [42.0198,  9.3538, 15.4204],
         [14.4017, 16.3070, 15.0530],
         [15.6802, 18.0772, 14.6390]],
        [[11.6500, 11.8530, 14.8087],
         [11.6605, 15.8207, 10.2138],
         [11.9100, 17.3231, 25.6350],
         ...,
         [40.8128,  9.1082, 14.2632],
         [13.4001, 14.0150, 13.8402],
         [14.5267, 16.2644, 13.9450]],
        ...,
        [[10.7130, 11.6026, 14.6391],
         [10.1146, 12.8062,  9.5648],
         [11.3293, 16.5049, 25.3416],
         ...,
         [39.3628,  8.8124, 12.9469],
         [12.2533, 11.6131, 12.4698],
         [13.2122, 14.2651, 13.1292]],
        [[13.2664, 12.2516, 15.0753],
         [14.5353, 21.9521, 11.3075],
         [12.8692, 18.6719, 26.0965],
         ...,
         [43.1658,  9.5863, 16.5720],
         [15.3927, 18.7545, 16.2669],
         [16.8263, 19.9298, 15.3104]],
        [[15.2238, 12.6885, 15.3630],
         [18.3573, 31.0570, 12.5941],
         [13.9698, 20.2153, 26.5943],
         ...,
         [45.8065, 10.1202, 19.4266],
         [17.8276, 25.5340, 19.3031],
         [19.6606, 24.7173, 16.9028]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0789, 1.0235, 0.9519],
         [1.2307, 2.3186, 0.9584],
         [1.0215, 1.2556, 1.1434],
         ...,
         [1.4973, 0.9751, 1.1609],
         [1.1353, 1.9151, 1.1725],
         [1.1787, 1.6367, 1.0424]],
        [[0.9593, 0.9850, 0.9330],
         [0.9674, 1.1286, 0.8650],
         [0.9584, 1.1126, 1.1107],
         ...,
         [1.3499, 0.9270, 0.9407],
         [0.9849, 1.0761, 0.9347],
         [1.0018, 1.1140, 0.9280]],
        [[0.9485, 0.9806, 0.9307],
         [0.9487, 1.0656, 0.8560],
         [0.9520, 1.0979, 1.1068],
         ...,
         [1.3339, 0.9217, 0.9219],
         [0.9717, 1.0269, 0.9150],
         [0.9866, 1.0752, 0.9167]],
        ...,
        [[0.9362, 0.9752, 0.9280],
         [0.9283, 1.0010, 0.8454],
         [0.9443, 1.0803, 1.1020],
         ...,
         [1.3148, 0.9154, 0.9004],
         [0.9565, 0.9754, 0.8927],
         [0.9692, 1.0323, 0.9034]],
        [[0.9699, 0.9891, 0.9351],
         [0.9867, 1.1971, 0.8738],
         [0.9647, 1.1268, 1.1143],
         ...,
         [1.3650, 0.9320, 0.9594],
         [0.9980, 1.1286, 0.9544],
         [1.0169, 1.1538, 0.9389]],
        [[0.9958, 0.9985, 0.9397],
         [1.0372, 1.3924, 0.8947],
         [0.9792, 1.1599, 1.1224],
         ...,
         [1.3999, 0.9434, 1.0058],
         [1.0302, 1.2739, 1.0038],
         [1.0544, 1.2564, 0.9648]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[19.3788, 13.5213, 16.0466],
         [32.9142, 72.6896, 16.4830],
         [15.7140, 20.1212, 25.8555],
         ...,
         [52.5657, 11.7250, 28.9885],
         [25.8341, 53.7614, 29.6597],
         [28.7617, 40.0882, 21.7271]],
        [[11.9735, 11.1469, 15.0140],
         [13.1068, 18.4867, 10.7817],
         [11.9451, 15.4399, 24.1960],
         ...,
         [41.1950,  9.3736, 15.4306],
         [14.4375, 16.0579, 15.0309],
         [15.9605, 17.6373, 14.6937]],
        [[11.2807, 10.8836, 14.8908],
         [11.6949, 15.6047, 10.2298],
         [11.5465, 14.9419, 23.9981],
         ...,
         [39.9706,  9.1175, 14.2720],
         [13.4342, 13.8269, 13.8180],
         [14.8384, 15.9327, 13.9992]],
        ...,
        [[10.4763, 10.5654, 14.7394],
         [10.1521, 12.6443,  9.5839],
         [11.0701, 14.3462, 23.7547],
         ...,
         [38.5013,  8.8093, 12.9542],
         [12.2853, 11.4840, 12.4478],
         [13.5546, 14.0443, 13.1827]],
        [[12.6508, 11.3956, 15.1285],
         [14.5613, 21.6180, 11.3176],
         [12.3254, 15.9143, 24.3801],
         ...,
         [42.3587,  9.6165, 16.5837],
         [15.4303, 18.4358, 16.2451],
         [17.0717, 19.3724, 15.3655]],
        [[14.2841, 11.9643, 15.3845],
         [18.3673, 30.5332, 12.5964],
         [13.2080, 17.0134, 24.7914],
         ...,
         [45.0442, 10.1749, 19.4420],
         [17.8691, 25.0040, 19.2825],
         [19.8053, 23.8293, 16.9584]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0512, 1.0159, 0.9554],
         [1.2301, 2.2847, 0.9625],
         [1.0028, 1.1575, 1.1149],
         ...,
         [1.4898, 0.9774, 1.1659],
         [1.1365, 1.8788, 1.1768],
         [1.1752, 1.5856, 1.0478]],
        [[0.9533, 0.9650, 0.9386],
         [0.9683, 1.1224, 0.8698],
         [0.9530, 1.0571, 1.0879],
         ...,
         [1.3395, 0.9270, 0.9454],
         [0.9859, 1.0703, 0.9389],
         [1.0060, 1.1042, 0.9334]],
        [[0.9442, 0.9594, 0.9366],
         [0.9497, 1.0606, 0.8608],
         [0.9477, 1.0464, 1.0847],
         ...,
         [1.3233, 0.9215, 0.9265],
         [0.9726, 1.0225, 0.9191],
         [0.9912, 1.0676, 0.9221]],
        ...,
        [[0.9335, 0.9526, 0.9341],
         [0.9293, 0.9971, 0.8503],
         [0.9414, 1.0336, 1.0808],
         ...,
         [1.3039, 0.9149, 0.9051],
         [0.9575, 0.9723, 0.8969],
         [0.9742, 1.0272, 0.9088]],
        [[0.9623, 0.9704, 0.9405],
         [0.9875, 1.1896, 0.8785],
         [0.9580, 1.0673, 1.0909],
         ...,
         [1.3549, 0.9322, 0.9641],
         [0.9990, 1.1213, 0.9586],
         [1.0207, 1.1414, 0.9443]],
        [[0.9839, 0.9826, 0.9446],
         [1.0378, 1.3807, 0.8993],
         [0.9696, 1.0908, 1.0976],
         ...,
         [1.3904, 0.9442, 1.0106],
         [1.0312, 1.2622, 1.0080],
         [1.0568, 1.2370, 0.9702]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.3043, 12.3806, 15.9791],
         [32.6679, 68.0710, 16.4029],
         [12.0552, 12.5889, 23.1500],
         ...,
         [50.6439, 12.2196, 29.0750],
         [25.9876, 48.9893, 29.6243],
         [27.9193, 33.6303, 21.8798]],
        [[10.8944,  9.2540, 15.2036],
         [13.1987, 17.6963, 10.8214],
         [10.9538, 10.1738, 19.1807],
         ...,
         [38.8410,  9.6181, 15.4608],
         [14.5443, 15.3343, 14.9692],
         [16.8404, 16.3412, 14.8588]],
        [[10.6282,  8.9265, 15.1103],
         [11.7980, 14.9781, 10.2783],
         [10.8246,  9.9090, 18.7392],
         ...,
         [37.5859,  9.3372, 14.2981],
         [13.5359, 13.2807, 13.7563],
         [15.8189, 14.9445, 14.1638]],
        ...,
        [[10.3068,  8.5361, 14.9952],
         [10.2644, 12.1776,  9.6420],
         [10.6664,  9.5900, 18.2054],
         ...,
         [36.0844,  9.0000, 12.9758],
         [12.3810, 11.1100, 12.3866],
         [14.6366, 13.3759, 13.3462]],
        [[11.1461,  9.5670, 15.2903],
         [14.6391, 20.6419, 11.3482],
         [11.0744, 10.4245, 19.5974],
         ...,
         [40.0369,  9.8849, 16.6180],
         [15.5418, 17.5111, 16.1838],
         [17.8421, 17.7462, 15.5307]],
        [[11.7222, 10.2957, 15.4833],
         [18.3981, 28.9936, 12.6033],
         [11.3452, 10.9998, 20.5494],
         ...,
         [42.8077, 10.5000, 19.4873],
         [17.9917, 23.4708, 19.2239],
         [20.2681, 21.2890, 17.1228]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9725, 0.9786, 0.9605],
         [1.2284, 2.1728, 0.9674],
         [0.9560, 0.9831, 1.0771],
         ...,
         [1.4659, 0.9751, 1.1735],
         [1.1401, 1.7636, 1.1825],
         [1.1656, 1.4343, 1.0565]],
        [[0.9406, 0.9116, 0.9479],
         [0.9711, 1.0926, 0.8766],
         [0.9414, 0.9313, 1.0126],
         ...,
         [1.3100, 0.9194, 0.9521],
         [0.9889, 1.0419, 0.9441],
         [1.0192, 1.0635, 0.9423]],
        [[0.9371, 0.9045, 0.9464],
         [0.9526, 1.0343, 0.8678],
         [0.9397, 0.9256, 1.0054],
         ...,
         [1.2934, 0.9133, 0.9332],
         [0.9755, 0.9979, 0.9244],
         [1.0057, 1.0336, 0.9310]],
        ...,
        [[0.9329, 0.8962, 0.9445],
         [0.9323, 0.9742, 0.8574],
         [0.9376, 0.9188, 0.9967],
         ...,
         [1.2735, 0.9061, 0.9117],
         [0.9603, 0.9514, 0.9021],
         [0.9901, 0.9999, 0.9177]],
        [[0.9440, 0.9183, 0.9493],
         [0.9901, 1.1558, 0.8852],
         [0.9430, 0.9367, 1.0194],
         ...,
         [1.3258, 0.9251, 0.9709],
         [1.0020, 1.0886, 0.9638],
         [1.0324, 1.0937, 0.9532]],
        [[0.9516, 0.9339, 0.9525],
         [1.0398, 1.3348, 0.9056],
         [0.9466, 0.9490, 1.0349],
         ...,
         [1.3624, 0.9383, 1.0176],
         [1.0344, 1.2164, 1.0133],
         [1.0645, 1.1696, 0.9791]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.2937, 13.3933, 14.5496],
         [31.9668, 55.9042, 16.1821],
         [11.5158, 13.5779, 15.4174],
         ...,
         [44.6205, 13.1997, 29.3011],
         [26.4158, 37.7191, 29.5106],
         [26.2199, 20.6876, 22.2692]],
        [[10.1759,  7.4842, 13.0246],
         [13.4790, 15.7070, 10.9405],
         [10.7171,  7.4657, 13.2447],
         ...,
         [33.5643, 11.3720, 15.5577],
         [14.8860, 13.5625, 14.8274],
         [19.8377, 13.0902, 15.3648]],
        [[ 9.8448,  6.9640, 12.8473],
         [12.1125, 13.4228, 10.4231],
         [10.6222,  6.9329, 12.9980],
         ...,
         [32.4019, 11.1641, 14.3850],
         [13.8657, 11.9495, 13.6165],
         [19.1644, 12.3692, 14.6749]],
        ...,
        [[ 9.4487,  6.3683, 12.6305],
         [10.6074, 11.0440,  9.8147],
         [10.5055,  6.3241, 12.6982],
         ...,
         [31.0149, 10.9113, 13.0517],
         [12.6961, 10.2116, 12.2500],
         [18.3604, 11.5293, 13.8615]],
        [[10.4915,  7.9989, 13.1904],
         [14.8772, 18.1595, 11.4411],
         [10.8055,  7.9939, 13.4767],
         ...,
         [34.6744, 11.5673, 16.7250],
         [15.8944, 15.2443, 16.0409],
         [20.4803, 13.7931, 16.0305]],
        [[11.2231,  9.2634, 13.5639],
         [18.4971, 25.0121, 12.6281],
         [11.0032,  9.2954, 14.0029],
         ...,
         [37.2559, 12.0104, 19.6202],
         [18.3680, 19.7304, 19.0814],
         [21.9728, 15.4806, 17.6033]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9771, 0.9822, 0.9412],
         [1.2239, 1.8937, 0.9677],
         [0.9536, 0.9861, 0.9553],
         ...,
         [1.3911, 0.9780, 1.1811],
         [1.1505, 1.5038, 1.1845],
         [1.1480, 1.1386, 1.0667]],
        [[0.9359, 0.8554, 0.9164],
         [0.9796, 1.0318, 0.8825],
         [0.9431, 0.8550, 0.9200],
         ...,
         [1.2450, 0.9388, 0.9576],
         [0.9982, 0.9858, 0.9457],
         [1.0636, 0.9757, 0.9545]],
        [[0.9315, 0.8443, 0.9135],
         [0.9615, 0.9828, 0.8741],
         [0.9418, 0.8436, 0.9160],
         ...,
         [1.2296, 0.9344, 0.9385],
         [0.9847, 0.9512, 0.9260],
         [1.0547, 0.9602, 0.9432]],
        ...,
        [[0.9263, 0.8315, 0.9100],
         [0.9416, 0.9318, 0.8642],
         [0.9403, 0.8306, 0.9111],
         ...,
         [1.2113, 0.9289, 0.9168],
         [0.9692, 0.9139, 0.9038],
         [1.0441, 0.9422, 0.9300]],
        [[0.9401, 0.8665, 0.9191],
         [0.9980, 1.0844, 0.8906],
         [0.9442, 0.8664, 0.9237],
         ...,
         [1.2597, 0.9430, 0.9766],
         [1.0115, 1.0219, 0.9654],
         [1.0721, 0.9907, 0.9653]],
        [[0.9498, 0.8936, 0.9252],
         [1.0459, 1.2313, 0.9099],
         [0.9469, 0.8943, 0.9323],
         ...,
         [1.2938, 0.9525, 1.0237],
         [1.0442, 1.1180, 1.0149],
         [1.0918, 1.0269, 0.9909]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5290, 13.0208, 14.6215],
         [31.8913, 55.7378, 16.1870],
         [11.4965, 12.8220, 15.4798],
         ...,
         [44.5649, 13.1406, 29.2920],
         [26.4667, 37.6626, 29.5125],
         [26.1652, 20.6350, 22.3335]],
        [[10.7080,  7.7163, 13.6301],
         [13.5116, 15.7273, 10.9474],
         [10.7417,  7.9640, 14.7347],
         ...,
         [33.5683, 11.1446, 15.5710],
         [14.9537, 13.6095, 14.8242],
         [19.9667, 13.2427, 15.3855]],
        [[10.6105,  7.2324, 13.5121],
         [12.1489, 13.4473, 10.4300],
         [10.6518,  7.5081, 14.6450],
         ...,
         [32.4112, 10.9197, 14.3994],
         [13.9333, 11.9983, 13.6130],
         [19.3095, 12.5352, 14.6918]],
        ...,
        [[10.4907,  6.6738, 13.3671],
         [10.6471, 11.0715,  9.8217],
         [10.5412,  6.9783, 14.5344],
         ...,
         [31.0303, 10.6467, 13.0671],
         [12.7631, 10.2612, 12.2464],
         [18.5238, 11.7094, 13.8742]],
        [[10.7988,  8.1918, 13.7399],
         [14.9050, 18.1742, 11.4478],
         [10.8254,  8.4095, 14.8180],
         ...,
         [34.6732, 11.3565, 16.7371],
         [15.9619, 15.2885, 16.0379],
         [20.5933, 13.9313, 16.0549]],
        [[11.0018,  9.3473, 13.9854],
         [18.5093, 25.0053, 12.6345],
         [11.0124,  9.4826, 15.0035],
         ...,
         [37.2417, 11.8383, 19.6286],
         [18.4339, 19.7629, 19.0792],
         [22.0464, 15.5801, 17.6369]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9544, 0.9839, 0.9425],
         [1.2235, 1.8999, 0.9679],
         [0.9539, 0.9796, 0.9564],
         ...,
         [1.3909, 0.9864, 1.1811],
         [1.1518, 1.5123, 1.1847],
         [1.1478, 1.1471, 1.0679]],
        [[0.9435, 0.8701, 0.9264],
         [0.9806, 1.0419, 0.8827],
         [0.9440, 0.8754, 0.9443],
         ...,
         [1.2456, 0.9436, 0.9579],
         [0.9996, 0.9965, 0.9458],
         [1.0659, 0.9886, 0.9549]],
        [[0.9422, 0.8597, 0.9244],
         [0.9626, 0.9930, 0.8743],
         [0.9428, 0.8656, 0.9429],
         ...,
         [1.2303, 0.9388, 0.9389],
         [0.9861, 0.9619, 0.9261],
         [1.0572, 0.9734, 0.9436]],
        ...,
        [[0.9406, 0.8477, 0.9221],
         [0.9427, 0.9421, 0.8644],
         [0.9413, 0.8543, 0.9411],
         ...,
         [1.2121, 0.9329, 0.9172],
         [0.9707, 0.9247, 0.9038],
         [1.0468, 0.9557, 0.9303]],
        [[0.9447, 0.8803, 0.9281],
         [0.9990, 1.0944, 0.8909],
         [0.9451, 0.8850, 0.9457],
         ...,
         [1.2602, 0.9482, 0.9769],
         [1.0129, 1.0325, 0.9655],
         [1.0741, 1.0034, 0.9658]],
        [[0.9474, 0.9051, 0.9321],
         [1.0466, 1.2408, 0.9102],
         [0.9475, 0.9080, 0.9487],
         ...,
         [1.2942, 0.9585, 1.0239],
         [1.0456, 1.1284, 1.0150],
         [1.0934, 1.0387, 0.9915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6527, 12.8790, 14.7316],
         [31.6422, 52.6131, 16.1328],
         [11.4880, 12.9897, 15.0543],
         ...,
         [42.7601, 13.2115, 29.3392],
         [26.6190, 35.1179, 29.4768],
         [25.9580, 18.3585, 22.4636]],
        [[10.6449,  7.8856, 13.8272],
         [13.6201, 15.2613, 10.9870],
         [10.7447,  7.7500, 14.1142],
         ...,
         [32.3595, 11.5727, 15.6074],
         [15.1119, 13.2272, 14.7897],
         [20.9521, 12.5846, 15.5377]],
        [[10.5264,  7.4210, 13.7191],
         [12.2705, 13.0934, 10.4767],
         [10.6561,  7.2700, 14.0020],
         ...,
         [31.2621, 11.3845, 14.4344],
         [14.0891, 11.7213, 13.5794],
         [20.4037, 12.0099, 14.8446]],
        ...,
        [[10.3811,  6.8822, 13.5862],
         [10.7799, 10.8260,  9.8763],
         [10.5471,  6.7154, 13.8639],
         ...,
         [29.9517, 11.1552, 13.1003],
         [12.9153, 10.0883, 12.2140],
         [19.7430, 11.3329, 14.0272]],
        [[10.7555,  8.3403, 13.9277],
         [14.9975, 17.5800, 11.4801],
         [10.8271,  8.2212, 14.2186],
         ...,
         [33.4068, 11.7492, 16.7748],
         [16.1220, 14.7888, 16.0026],
         [21.4714, 13.1396, 16.2063]],
        [[11.0037,  9.4387, 14.1520],
         [18.5500, 24.0200, 12.6479],
         [11.0113,  9.3649, 14.4517],
         ...,
         [35.8393, 12.1482, 19.6693],
         [18.5963, 18.9181, 19.0426],
         [22.6634, 14.4524, 17.7851]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9579, 0.9819, 0.9455],
         [1.2220, 1.8339, 0.9683],
         [0.9557, 0.9843, 0.9507],
         ...,
         [1.3690, 0.9890, 1.1831],
         [1.1557, 1.4588, 1.1853],
         [1.1469, 1.0994, 1.0712]],
        [[0.9446, 0.8748, 0.9308],
         [0.9839, 1.0330, 0.8846],
         [0.9459, 0.8719, 0.9354],
         ...,
         [1.2315, 0.9539, 0.9597],
         [1.0036, 0.9893, 0.9464],
         [1.0808, 0.9756, 0.9586]],
        [[0.9430, 0.8648, 0.9290],
         [0.9660, 0.9865, 0.8763],
         [0.9447, 0.8616, 0.9336],
         ...,
         [1.2170, 0.9498, 0.9406],
         [0.9901, 0.9571, 0.9267],
         [1.0735, 0.9632, 0.9473]],
        ...,
        [[0.9411, 0.8533, 0.9268],
         [0.9463, 0.9379, 0.8665],
         [0.9433, 0.8497, 0.9314],
         ...,
         [1.1997, 0.9449, 0.9189],
         [0.9746, 0.9220, 0.9045],
         [1.0648, 0.9487, 0.9340]],
        [[0.9460, 0.8846, 0.9324],
         [1.0021, 1.0827, 0.8926],
         [0.9470, 0.8820, 0.9371],
         ...,
         [1.2454, 0.9577, 0.9787],
         [1.0169, 1.0228, 0.9661],
         [1.0876, 0.9875, 0.9695]],
        [[0.9493, 0.9081, 0.9360],
         [1.0490, 1.2208, 0.9116],
         [0.9494, 0.9065, 0.9409],
         ...,
         [1.2775, 0.9662, 1.0258],
         [1.0496, 1.1114, 1.0156],
         [1.1034, 1.0156, 0.9951]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6342, 12.7400, 14.8589],
         [31.2836, 48.8158, 16.0702],
         [11.4837, 12.9951, 15.0221],
         ...,
         [40.4475, 13.2942, 29.3858],
         [26.8376, 32.2081, 29.4266],
         [25.9050, 16.1190, 22.6401]],
        [[10.6531,  8.0856, 14.0471],
         [13.7844, 14.7211, 11.0426],
         [10.7581,  7.7440, 13.8723],
         ...,
         [30.9677, 11.9673, 15.6583],
         [15.3658, 12.8061, 14.7469],
         [22.1309, 11.8899, 15.7068]],
        [[10.5376,  7.6431, 13.9498],
         [12.4545, 12.6910, 10.5415],
         [10.6716,  7.2633, 13.7362],
         ...,
         [29.9606, 11.8125, 14.4844],
         [14.3409, 11.4244, 13.5382],
         [21.7037, 11.4503, 15.0118]],
        ...,
        [[10.3959,  7.1274, 13.8299],
         [10.9809, 10.5561,  9.9509],
         [10.5651,  6.7080, 13.5692],
         ...,
         [28.7561, 11.6232, 13.1491],
         [13.1633,  9.9149, 12.1747],
         [21.1849, 10.9273, 14.1917]],
        [[10.7609,  8.5168, 14.1376],
         [15.1379, 16.8827, 11.5264],
         [10.8387,  8.2159, 13.9991],
         ...,
         [31.9274, 12.1120, 16.8263],
         [16.3770, 14.2296, 15.9585],
         [22.5328, 12.3107, 16.3770]],
        [[11.0027,  9.5516, 14.3393],
         [18.6135, 22.8422, 12.6704],
         [11.0186,  9.3617, 14.2831],
         ...,
         [34.1518, 12.4375, 19.7214],
         [18.8500, 17.9559, 18.9959],
         [23.4456, 13.2927, 17.9590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9605, 0.9787, 0.9492],
         [1.2202, 1.7523, 0.9689],
         [0.9585, 0.9842, 0.9518],
         ...,
         [1.3413, 0.9906, 1.1854],
         [1.1614, 1.3962, 1.1861],
         [1.1491, 1.0512, 1.0757]],
        [[0.9475, 0.8789, 0.9360],
         [0.9889, 1.0212, 0.8871],
         [0.9489, 0.8716, 0.9331],
         ...,
         [1.2160, 0.9621, 0.9622],
         [1.0098, 0.9801, 0.9473],
         [1.0992, 0.9605, 0.9630]],
        [[0.9460, 0.8694, 0.9344],
         [0.9713, 0.9777, 0.8789],
         [0.9478, 0.8613, 0.9309],
         ...,
         [1.2027, 0.9588, 0.9431],
         [0.9963, 0.9505, 0.9277],
         [1.0936, 0.9511, 0.9516]],
        ...,
        [[0.9441, 0.8584, 0.9324],
         [0.9518, 0.9319, 0.8693],
         [0.9464, 0.8494, 0.9282],
         ...,
         [1.1868, 0.9548, 0.9214],
         [0.9807, 0.9181, 0.9055],
         [1.0867, 0.9398, 0.9383]],
        [[0.9489, 0.8881, 0.9374],
         [1.0068, 1.0675, 0.8950],
         [0.9500, 0.8817, 0.9352],
         ...,
         [1.2287, 0.9652, 0.9812],
         [1.0232, 1.0107, 0.9670],
         [1.1045, 0.9695, 0.9739]],
        [[0.9521, 0.9103, 0.9407],
         [1.0527, 1.1953, 0.9136],
         [0.9523, 0.9063, 0.9398],
         ...,
         [1.2581, 0.9722, 1.0282],
         [1.0558, 1.0906, 1.0164],
         [1.1166, 0.9906, 0.9996]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7224, 12.7132, 14.7716],
         [29.9628, 36.3871, 15.8578],
         [11.5376, 12.9444, 15.2727],
         ...,
         [32.3838, 15.5212, 29.5434],
         [27.5811, 23.7072, 29.1611],
         [27.8876, 10.8947, 23.1984]],
        [[10.6160,  8.1273, 13.9739],
         [14.4833, 12.8823, 11.2691],
         [10.7966,  7.8025, 13.1785],
         ...,
         [26.2322, 13.1932, 15.8524],
         [16.4379, 11.3960, 14.6076],
         [26.3117,  9.7621, 16.1876]],
        [[10.4865,  7.6894, 13.8782],
         [13.2369, 11.3285, 10.8025],
         [10.7082,  7.3286, 12.9401],
         ...,
         [25.5570, 12.9305, 14.6767],
         [15.4178, 10.4081, 13.4096],
         [26.1229,  9.6304, 15.4824]],
        ...,
        [[10.3279,  7.1786, 13.7603],
         [11.8380,  9.6579, 10.2502],
         [10.5995,  6.7802, 12.6502],
         ...,
         [24.7430, 12.6116, 13.3379],
         [14.2393,  9.3002, 12.0583],
         [25.8905,  9.4693, 14.6497]],
        [[10.7369,  8.5537, 14.0628],
         [15.7380, 14.5055, 11.7177],
         [10.8788,  8.2673, 13.4025],
         ...,
         [26.8715, 13.4406, 17.0214],
         [17.4395, 12.3911, 15.8085],
         [26.4872,  9.8854, 16.8672]],
        [[11.0088,  9.5754, 14.2611],
         [18.9047, 18.8477, 12.7720],
         [11.0625,  9.3930, 13.9104],
         ...,
         [28.3378, 14.0028, 19.9149],
         [19.8709, 14.9052, 18.8193],
         [26.8786, 10.1628, 18.4695]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9741, 0.9800, 0.9510],
         [1.2151, 1.4876, 0.9687],
         [0.9716, 0.9849, 0.9592],
         ...,
         [1.2471, 1.0402, 1.1913],
         [1.1837, 1.2157, 1.1851],
         [1.1877, 0.9410, 1.0881]],
        [[0.9595, 0.8816, 0.9381],
         [1.0106, 0.9836, 0.8941],
         [0.9618, 0.8747, 0.9251],
         ...,
         [1.1658, 0.9903, 0.9686],
         [1.0364, 0.9517, 0.9484],
         [1.1669, 0.9167, 0.9741]],
        [[0.9577, 0.8723, 0.9365],
         [0.9941, 0.9503, 0.8865],
         [0.9607, 0.8645, 0.9213],
         ...,
         [1.1569, 0.9846, 0.9495],
         [1.0229, 0.9306, 0.9289],
         [1.1644, 0.9139, 0.9626]],
        ...,
        [[0.9557, 0.8613, 0.9346],
         [0.9756, 0.9145, 0.8775],
         [0.9592, 0.8528, 0.9165],
         ...,
         [1.1462, 0.9778, 0.9277],
         [1.0073, 0.9068, 0.9069],
         [1.1613, 0.9104, 0.9491]],
        [[0.9611, 0.8908, 0.9395],
         [1.0271, 1.0184, 0.9014],
         [0.9629, 0.8846, 0.9288],
         ...,
         [1.1743, 0.9956, 0.9876],
         [1.0496, 0.9731, 0.9679],
         [1.1692, 0.9193, 0.9851]],
        [[0.9646, 0.9127, 0.9427],
         [1.0690, 1.1115, 0.9185],
         [0.9654, 0.9088, 0.9370],
         ...,
         [1.1937, 1.0076, 1.0347],
         [1.0818, 1.0270, 1.0169],
         [1.1744, 0.9253, 1.0112]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7902, 12.6314, 14.8524],
         [27.5332, 21.1151, 15.6850],
         [11.8452, 12.6561, 15.9903],
         ...,
         [26.4559, 25.6689, 29.7857],
         [28.5027, 15.5821, 28.1871],
         [35.7817, 15.9496, 24.9293]],
        [[10.5898,  8.2605, 13.9024],
         [16.4236, 10.4550, 11.8140],
         [10.8331,  8.2194, 12.5678],
         ...,
         [17.9564, 14.7105, 16.2779],
         [19.3038,  9.8100, 14.4222],
         [32.8487,  9.3365, 15.9594]],
        [[10.4500,  7.8375, 13.7891],
         [15.4061,  9.5838, 11.4067],
         [10.7140,  7.7918, 12.1986],
         ...,
         [17.1153, 13.7309, 15.1048],
         [18.3947,  9.2639, 13.2742],
         [32.5028,  8.7377, 15.1022]],
        ...,
        [[10.2790,  7.3424, 13.6498],
         [14.2304,  8.6027, 10.9206],
         [10.5680,  7.2918, 11.7554],
         ...,
         [16.1259, 12.6052, 13.7657],
         [17.3256,  8.6281, 11.9755],
         [32.0784,  8.0475, 14.1019]],
        [[10.7206,  8.6714, 14.0078],
         [17.4226, 11.3296, 12.2029],
         [10.9443,  8.6351, 12.9185],
         ...,
         [18.7695, 15.6769, 17.4417],
         [20.1830, 10.3427, 15.5701],
         [33.1713,  9.9258, 16.7939]],
        [[11.0148,  9.6517, 14.2433],
         [19.8473, 13.5269, 13.1071],
         [11.1936,  9.6281, 13.7275],
         ...,
         [20.6966, 18.0399, 20.3126],
         [22.2673, 11.6229, 18.4367],
         [33.8946, 11.3610, 18.7932]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9695, 0.9661, 0.9529],
         [1.1775, 1.1480, 0.9665],
         [0.9702, 0.9666, 0.9715],
         ...,
         [1.1633, 1.2456, 1.1958],
         [1.1903, 1.0293, 1.1698],
         [1.2865, 1.0372, 1.1168]],
        [[0.9536, 0.8723, 0.9375],
         [1.0307, 0.9194, 0.9035],
         [0.9568, 0.8715, 0.9158],
         ...,
         [1.0510, 1.0106, 0.9761],
         [1.0688, 0.9056, 0.9460],
         [1.2478, 0.8954, 0.9710]],
        [[0.9518, 0.8633, 0.9357],
         [1.0173, 0.9007, 0.8969],
         [0.9553, 0.8623, 0.9098],
         ...,
         [1.0398, 0.9896, 0.9571],
         [1.0568, 0.8939, 0.9273],
         [1.2432, 0.8826, 0.9570]],
        ...,
        [[0.9495, 0.8526, 0.9334],
         [1.0017, 0.8797, 0.8890],
         [0.9533, 0.8516, 0.9026],
         ...,
         [1.0268, 0.9655, 0.9353],
         [1.0426, 0.8802, 0.9062],
         [1.2376, 0.8678, 0.9407]],
        [[0.9553, 0.8811, 0.9392],
         [1.0439, 0.9381, 0.9099],
         [0.9583, 0.8804, 0.9215],
         ...,
         [1.0617, 1.0314, 0.9951],
         [1.0804, 0.9170, 0.9646],
         [1.2520, 0.9080, 0.9845]],
        [[0.9592, 0.9022, 0.9430],
         [1.0760, 0.9853, 0.9246],
         [0.9616, 0.9017, 0.9347],
         ...,
         [1.0872, 1.0820, 1.0418],
         [1.1079, 0.9444, 1.0112],
         [1.2616, 0.9388, 1.0170]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8322, 12.7556, 14.7794],
         [27.0368, 20.3693, 15.8599],
         [11.8313, 12.5674, 15.6902],
         ...,
         [26.0764, 24.1522, 29.7217],
         [28.5893, 14.7874, 27.9788],
         [34.6328, 14.6143, 25.0033]],
        [[10.5743,  8.0617, 13.7081],
         [17.0200, 10.3922, 11.9438],
         [10.8322,  8.3703, 12.9040],
         ...,
         [17.4184, 14.4084, 16.3735],
         [20.2448,  9.7336, 14.4084],
         [31.8628,  8.9151, 15.8878]],
        [[10.4282,  7.6165, 13.5810],
         [16.0723,  9.5615, 11.5318],
         [10.7146,  7.9596, 12.5955],
         ...,
         [16.5698, 13.5159, 15.2086],
         [19.3981,  9.2425, 13.2720],
         [31.5357,  8.3860, 15.0205]],
        ...,
        [[10.2497,  7.0980, 13.4249],
         [14.9691,  8.6223, 11.0402],
         [10.5703,  7.4778, 12.2228],
         ...,
         [15.5737, 12.4846, 13.8773],
         [18.3962,  8.6674, 11.9854],
         [31.1343,  7.7727, 14.0096]],
        [[10.7110,  8.4957, 13.8265],
         [17.9445, 11.2230, 12.3373],
         [10.9420,  8.7683, 13.1956],
         ...,
         [18.2405, 15.2846, 17.5281],
         [21.0593, 10.2101, 15.5437],
         [32.1678,  9.4331, 16.7329]],
        [[11.0190,  9.5380, 14.0914],
         [20.1660, 13.2989, 13.2519],
         [11.1882,  9.7146, 13.8625],
         ...,
         [20.1944, 17.4113, 20.3721],
         [22.9745, 11.3457, 18.3755],
         [32.8512, 10.6854, 18.7601]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9815, 0.9720, 0.9523],
         [1.1824, 1.1352, 0.9699],
         [0.9815, 0.9679, 0.9672],
         ...,
         [1.1697, 1.2164, 1.1954],
         [1.2029, 1.0155, 1.1670],
         [1.2828, 1.0118, 1.1186]],
        [[0.9648, 0.8713, 0.9349],
         [1.0500, 0.9213, 0.9062],
         [0.9682, 0.8779, 0.9218],
         ...,
         [1.0553, 1.0074, 0.9783],
         [1.0926, 0.9072, 0.9463],
         [1.2462, 0.8896, 0.9704]],
        [[0.9629, 0.8618, 0.9329],
         [1.0375, 0.9035, 0.8995],
         [0.9667, 0.8691, 0.9168],
         ...,
         [1.0441, 0.9883, 0.9593],
         [1.0815, 0.8966, 0.9278],
         [1.2419, 0.8783, 0.9563]],
        ...,
        [[0.9605, 0.8507, 0.9303],
         [1.0229, 0.8833, 0.8915],
         [0.9648, 0.8588, 0.9108],
         ...,
         [1.0309, 0.9662, 0.9377],
         [1.0682, 0.8843, 0.9069],
         [1.2366, 0.8651, 0.9398]],
        [[0.9666, 0.8806, 0.9368],
         [1.0622, 0.9391, 0.9126],
         [0.9697, 0.8865, 0.9266],
         ...,
         [1.0662, 1.0262, 0.9971],
         [1.1034, 0.9174, 0.9648],
         [1.2502, 0.9007, 0.9841]],
        [[0.9707, 0.9030, 0.9412],
         [1.0916, 0.9836, 0.9275],
         [0.9730, 0.9068, 0.9374],
         ...,
         [1.0920, 1.0718, 1.0433],
         [1.1287, 0.9417, 1.0108],
         [1.2592, 0.9276, 1.0171]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6873, 12.9439, 14.9488],
         [25.7166, 15.7497, 17.6582],
         [12.1034, 12.4147, 14.9197],
         ...,
         [21.9926, 25.2529, 29.5028],
         [28.5518, 10.8662, 26.0605],
         [36.3148, 15.5902, 26.0661]],
        [[10.6302,  7.8032, 13.4109],
         [21.6032,  9.9167, 12.7826],
         [10.8465,  8.6517, 13.2394],
         ...,
         [12.9161, 13.6787, 17.0792],
         [26.0457,  9.0081, 14.4263],
         [33.3073,  8.2161, 15.6595]],
        [[10.5062,  7.3293, 13.2319],
         [21.1420,  9.3648, 12.2814],
         [10.7003,  8.2734, 13.0450],
         ...,
         [12.0925, 12.6789, 15.9618],
         [25.7512,  8.8014, 13.4080],
         [32.9528,  7.5898, 14.7023]],
        ...,
        [[10.3543,  6.7810, 13.0130],
         [20.5834,  8.7222, 11.6866],
         [10.5215,  7.8269, 12.8077],
         ...,
         [11.1430, 11.5391, 14.6759],
         [25.3902,  8.5514, 12.2434],
         [32.5180,  6.8784, 13.5951]],
        [[10.7460,  8.2678, 13.5783],
         [22.0378, 10.4551, 13.2635],
         [10.9832,  9.0162, 13.4214],
         ...,
         [13.7261, 14.6715, 18.1802],
         [26.3206,  9.2032, 15.4351],
         [33.6380,  8.8401, 16.5985]],
        [[11.0060,  9.3934, 13.9552],
         [23.0281, 11.7488, 14.3895],
         [11.2912,  9.8759, 13.8320],
         ...,
         [15.6979, 17.1248, 20.8674],
         [26.9375,  9.6490, 17.9175],
         [34.3794, 10.3900, 18.8747]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9783, 0.9788, 0.9635],
         [1.1637, 1.0390, 1.0076],
         [0.9838, 0.9674, 0.9630],
         ...,
         [1.1144, 1.2427, 1.2002],
         [1.2011, 0.9342, 1.1442],
         [1.3037, 1.0355, 1.1443]],
        [[0.9643, 0.8686, 0.9385],
         [1.1093, 0.9139, 0.9283],
         [0.9671, 0.8867, 0.9357],
         ...,
         [0.9945, 0.9945, 0.9982],
         [1.1680, 0.8944, 0.9550],
         [1.2640, 0.8774, 0.9751]],
        [[0.9626, 0.8584, 0.9356],
         [1.1032, 0.9020, 0.9201],
         [0.9652, 0.8786, 0.9326],
         ...,
         [0.9836, 0.9731, 0.9800],
         [1.1641, 0.8900, 0.9385],
         [1.2593, 0.8640, 0.9595]],
        ...,
        [[0.9606, 0.8466, 0.9320],
         [1.0958, 0.8883, 0.9105],
         [0.9629, 0.8691, 0.9287],
         ...,
         [0.9711, 0.9487, 0.9591],
         [1.1593, 0.8846, 0.9195],
         [1.2535, 0.8487, 0.9415]],
        [[0.9658, 0.8785, 0.9412],
         [1.1150, 0.9254, 0.9361],
         [0.9690, 0.8946, 0.9387],
         ...,
         [1.0052, 1.0158, 1.0161],
         [1.1716, 0.8986, 0.9714],
         [1.2683, 0.8908, 0.9904]],
        [[0.9693, 0.9027, 0.9474],
         [1.1281, 0.9532, 0.9544],
         [0.9730, 0.9130, 0.9454],
         ...,
         [1.0313, 1.0684, 1.0598],
         [1.1798, 0.9081, 1.0118],
         [1.2781, 0.9240, 1.0274]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0663, 13.2148, 15.6038],
         [41.5582, 14.1706, 23.5957],
         [12.5530, 12.6839, 18.7411],
         ...,
         [12.5424, 16.1044, 27.4172],
         [41.6599, 12.9378, 21.5927],
         [26.6850, 14.0813, 27.0490]],
        [[10.8845,  7.5567, 13.4630],
         [39.1245,  8.8195, 15.1000],
         [10.8644,  8.1741, 14.8115],
         ...,
         [10.3564,  8.4856, 18.9387],
         [38.5093,  7.8106, 15.0749],
         [24.9188, 12.0719, 15.0283]],
        [[10.6411,  7.0516, 13.2193],
         [38.8333,  8.3167, 14.2883],
         [10.6719,  7.7414, 14.3863],
         ...,
         [10.1138,  7.8386, 18.0910],
         [38.1363,  7.3376, 14.4190],
         [24.7085, 11.8440, 13.9738]],
        ...,
        [[10.3465,  6.4713, 12.9230],
         [38.4749,  7.7323, 13.3412],
         [10.4376,  7.2361, 13.8754],
         ...,
         [ 9.8205,  7.1037, 17.0913],
         [37.6783,  6.7901, 13.6445],
         [24.4499, 11.5671, 12.7672]],
        [[11.1141,  8.0552, 13.6920],
         [39.3952,  9.3107, 15.8903],
         [11.0453,  8.5950, 15.2152],
         ...,
         [10.5856,  9.1303, 19.7567],
         [38.8570,  8.2743, 15.7068],
         [25.1146, 12.2862, 16.0724]],
        [[11.6382,  9.2745, 14.2111],
         [39.9994, 10.4935, 17.7837],
         [11.4551,  9.6022, 16.1455],
         ...,
         [11.1094, 10.7315, 21.6887],
         [39.6353,  9.3974, 17.1966],
         [25.5521, 12.7727, 18.6402]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9474, 0.9820, 0.9807],
         [1.3240, 1.0025, 1.1107],
         [0.9407, 0.9706, 1.0317],
         ...,
         [0.9405, 1.0440, 1.1728],
         [1.3253, 0.9761, 1.0781],
         [1.1274, 1.0006, 1.1668]],
        [[0.9186, 0.8607, 0.9459],
         [1.2918, 0.8878, 0.9725],
         [0.9184, 0.8739, 0.9678],
         ...,
         [0.9116, 0.8806, 1.0349],
         [1.2837, 0.8661, 0.9721],
         [1.1041, 0.9575, 0.9713]],
        [[0.9154, 0.8499, 0.9419],
         [1.2880, 0.8770, 0.9593],
         [0.9158, 0.8647, 0.9609],
         ...,
         [0.9084, 0.8667, 1.0211],
         [1.2788, 0.8560, 0.9614],
         [1.1013, 0.9526, 0.9542]],
        ...,
        [[0.9115, 0.8374, 0.9371],
         [1.2832, 0.8645, 0.9439],
         [0.9127, 0.8538, 0.9526],
         ...,
         [0.9046, 0.8510, 1.0049],
         [1.2727, 0.8443, 0.9488],
         [1.0979, 0.9467, 0.9346]],
        [[0.9217, 0.8714, 0.9496],
         [1.2954, 0.8983, 0.9854],
         [0.9207, 0.8830, 0.9744],
         ...,
         [0.9147, 0.8944, 1.0482],
         [1.2883, 0.8761, 0.9824],
         [1.1067, 0.9621, 0.9883]],
        [[0.9286, 0.8975, 0.9580],
         [1.3034, 0.9237, 1.0162],
         [0.9262, 0.9046, 0.9895],
         ...,
         [0.9216, 0.9288, 1.0797],
         [1.2986, 0.9002, 1.0066],
         [1.1125, 0.9725, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6281, 13.0560, 15.2098],
         [29.2890, 12.5256, 20.4592],
         [12.2856, 12.5304, 15.4480],
         ...,
         [17.8857, 20.2700, 28.7764],
         [33.6340, 11.5033, 24.1903],
         [31.6984, 11.9285, 26.5064]],
        [[10.8138,  7.6809, 13.4315],
         [27.4854,  9.7327, 13.6539],
         [10.8541,  8.4359, 13.8581],
         ...,
         [11.4719, 11.2409, 17.8155],
         [30.7549,  8.0966, 14.6326],
         [29.3901,  7.9597, 15.3710]],
        [[10.7170,  7.1927, 13.2263],
         [27.2700,  9.4334, 12.9872],
         [10.6889,  8.0326, 13.6730],
         ...,
         [10.8583, 10.4497, 16.7888],
         [30.4160,  7.7521, 13.7498],
         [29.1163,  7.5709, 14.3684]],
        ...,
        [[10.5981,  6.6296, 12.9760],
         [27.0050,  9.0747, 12.2048],
         [10.4873,  7.5588, 13.4467],
         ...,
         [10.1421,  9.5447, 15.5964],
         [30.0007,  7.3449, 12.7278],
         [28.7800,  7.1147, 13.2145]],
        [[10.9039,  8.1610, 13.6237],
         [27.6858, 10.0174, 14.2998],
         [11.0088,  8.8261, 14.0312],
         ...,
         [12.0692, 12.0244, 18.8190],
         [31.0710,  8.4281, 15.4979],
         [29.6451,  8.3363, 16.3587]],
        [[11.1054,  9.3293, 14.0577],
         [28.1331, 10.6754, 15.8351],
         [11.3582,  9.7522, 14.4208],
         ...,
         [13.4995, 13.9520, 21.2380],
         [31.7802,  9.2087, 17.5926],
         [30.2158,  9.2317, 18.7685]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9617, 0.9793, 0.9763],
         [1.1951, 0.9679, 1.0617],
         [0.9704, 0.9680, 0.9802],
         ...,
         [1.0444, 1.1340, 1.1970],
         [1.2526, 0.9460, 1.1224],
         [1.2270, 0.9551, 1.1601]],
        [[0.9510, 0.8640, 0.9474],
         [1.1713, 0.9080, 0.9510],
         [0.9515, 0.8802, 0.9544],
         ...,
         [0.9597, 0.9404, 1.0187],
         [1.2145, 0.8729, 0.9670],
         [1.1965, 0.8700, 0.9790]],
        [[0.9497, 0.8536, 0.9441],
         [1.1684, 0.9016, 0.9402],
         [0.9493, 0.8716, 0.9514],
         ...,
         [0.9516, 0.9234, 1.0020],
         [1.2100, 0.8656, 0.9526],
         [1.1928, 0.8617, 0.9627]],
        ...,
        [[0.9481, 0.8415, 0.9400],
         [1.1649, 0.8939, 0.9275],
         [0.9467, 0.8614, 0.9477],
         ...,
         [0.9421, 0.9040, 0.9826],
         [1.2045, 0.8568, 0.9360],
         [1.1884, 0.8519, 0.9439]],
        [[0.9522, 0.8743, 0.9506],
         [1.1739, 0.9141, 0.9615],
         [0.9535, 0.8886, 0.9572],
         ...,
         [0.9676, 0.9572, 1.0351],
         [1.2187, 0.8801, 0.9810],
         [1.1998, 0.8781, 0.9950]],
        [[0.9548, 0.8994, 0.9576],
         [1.1799, 0.9283, 0.9865],
         [0.9582, 0.9085, 0.9635],
         ...,
         [0.9865, 0.9985, 1.0744],
         [1.2281, 0.8968, 1.0151],
         [1.2074, 0.8973, 1.0342]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7548, 12.9002, 15.1713],
         [28.4903, 12.1506, 20.5407],
         [12.1969, 12.7076, 15.7439],
         ...,
         [19.0262, 17.7575, 28.2948],
         [32.3234, 10.7076, 24.6017],
         [29.3188, 11.4538, 26.3369]],
        [[10.8267,  7.8578, 13.7665],
         [26.7710,  9.4414, 13.6603],
         [10.8505,  8.1362, 13.8340],
         ...,
         [12.0671, 10.3002, 17.8131],
         [29.7213,  8.6052, 14.6449],
         [27.4272,  8.3579, 15.2835]],
        [[10.7170,  7.3901, 13.6019],
         [26.5655,  9.1511, 12.9876],
         [10.6945,  7.6993, 13.6143],
         ...,
         [11.4058,  9.6286, 16.8214],
         [29.4141,  8.3754, 13.7341],
         [27.2017,  8.0382, 14.2879]],
        ...,
        [[10.5825,  6.8481, 13.4003],
         [26.3126,  8.8031, 12.1986],
         [10.5040,  7.1895, 13.3464],
         ...,
         [10.6351,  8.8557, 15.6669],
         [29.0373,  8.0988, 12.6819],
         [26.9243,  7.6583, 13.1418]],
        [[10.9290,  8.3159, 13.9202],
         [26.9621,  9.7175, 14.3122],
         [10.9965,  8.5615, 14.0399],
         ...,
         [12.7117, 10.9617, 18.7805],
         [30.0078,  8.8229, 15.5393],
         [27.6370,  8.6644, 16.2643]],
        [[11.1580,  9.4233, 14.2655],
         [27.3887, 10.3559, 15.8629],
         [11.3257,  9.5805, 14.5054],
         ...,
         [14.2585, 12.5756, 21.1052],
         [30.6497,  9.3229, 17.7111],
         [28.1058,  9.3810, 18.6568]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9785, 0.9796, 0.9783],
         [1.1997, 0.9635, 1.0656],
         [0.9843, 0.9755, 0.9876],
         ...,
         [1.0746, 1.0838, 1.1917],
         [1.2503, 0.9326, 1.1317],
         [1.2106, 0.9486, 1.1599]],
        [[0.9662, 0.8715, 0.9554],
         [1.1769, 0.9054, 0.9537],
         [0.9665, 0.8774, 0.9565],
         ...,
         [0.9826, 0.9238, 1.0212],
         [1.2159, 0.8875, 0.9697],
         [1.1856, 0.8822, 0.9801]],
        [[0.9648, 0.8614, 0.9527],
         [1.1742, 0.8992, 0.9428],
         [0.9645, 0.8681, 0.9529],
         ...,
         [0.9739, 0.9094, 1.0051],
         [1.2119, 0.8826, 0.9549],
         [1.1826, 0.8753, 0.9639]],
        ...,
        [[0.9630, 0.8498, 0.9495],
         [1.1709, 0.8917, 0.9299],
         [0.9620, 0.8571, 0.9486],
         ...,
         [0.9637, 0.8929, 0.9863],
         [1.2069, 0.8766, 0.9378],
         [1.1790, 0.8672, 0.9453]],
        [[0.9676, 0.8813, 0.9579],
         [1.1795, 0.9113, 0.9643],
         [0.9685, 0.8866, 0.9599],
         ...,
         [0.9911, 0.9380, 1.0370],
         [1.2197, 0.8922, 0.9843],
         [1.1884, 0.8888, 0.9960]],
        [[0.9706, 0.9050, 0.9635],
         [1.1851, 0.9250, 0.9895],
         [0.9728, 0.9084, 0.9674],
         ...,
         [1.0116, 0.9726, 1.0748],
         [1.2282, 0.9029, 1.0196],
         [1.1946, 0.9041, 1.0350]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6283, 12.6669, 15.2024],
         [28.4008, 11.4969, 21.0803],
         [12.0837, 12.7146, 15.6797],
         ...,
         [18.2700, 16.6243, 27.2784],
         [30.6686, 10.9115, 24.7132],
         [28.5976, 11.4909, 26.5484]],
        [[10.8196,  8.2017, 14.1573],
         [26.7385,  9.3599, 13.9145],
         [10.8456,  8.1251, 13.9267],
         ...,
         [11.8941,  9.2559, 18.0345],
         [28.3926,  8.3814, 14.6806],
         [26.8155,  8.1259, 15.1369]],
        [[10.7234,  7.7721, 14.0331],
         [26.5396,  9.1247, 13.2171],
         [10.7014,  7.6870, 13.7238],
         ...,
         [11.2787,  8.6087, 17.1340],
         [28.1229,  8.1121, 13.7640],
         [26.6028,  7.7847, 14.1199]],
        ...,
        [[10.6053,  7.2700, 13.8803],
         [26.2948,  8.8409, 12.3998],
         [10.5252,  7.1759, 13.4761],
         ...,
         [10.5589,  7.8679, 16.0785],
         [27.7917,  7.7899, 12.7055],
         [26.3411,  7.3811, 12.9521]],
        [[10.9091,  8.6194, 14.2730],
         [26.9234,  9.5825, 14.5910],
         [10.9804,  8.5518, 14.1167],
         ...,
         [12.4921,  9.8966, 18.9079],
         [28.6439,  8.6379, 15.5810],
         [27.0134,  8.4541, 16.1407]],
        [[11.1092,  9.6180, 14.5317],
         [27.3361, 10.0926, 16.2026],
         [11.2839,  9.5742, 14.5452],
         ...,
         [13.9202, 11.4716, 20.9877],
         [29.2064,  9.2322, 17.7679],
         [27.4553,  9.2261, 18.5976]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9696, 0.9763, 0.9785],
         [1.1912, 0.9512, 1.0741],
         [0.9756, 0.9773, 0.9863],
         ...,
         [1.0573, 1.0612, 1.1749],
         [1.2212, 0.9387, 1.1332],
         [1.1938, 0.9511, 1.1630]],
        [[0.9589, 0.8806, 0.9615],
         [1.1693, 0.9054, 0.9576],
         [0.9592, 0.8789, 0.9578],
         ...,
         [0.9731, 0.9032, 1.0246],
         [1.1911, 0.8844, 0.9700],
         [1.1703, 0.8789, 0.9774]],
        [[0.9576, 0.8713, 0.9595],
         [1.1666, 0.9003, 0.9462],
         [0.9573, 0.8695, 0.9545],
         ...,
         [0.9649, 0.8893, 1.0099],
         [1.1876, 0.8786, 0.9551],
         [1.1675, 0.8716, 0.9609]],
        ...,
        [[0.9560, 0.8606, 0.9570],
         [1.1634, 0.8943, 0.9329],
         [0.9550, 0.8586, 0.9504],
         ...,
         [0.9554, 0.8734, 0.9927],
         [1.1832, 0.8717, 0.9379],
         [1.1640, 0.8630, 0.9419]],
        [[0.9601, 0.8895, 0.9634],
         [1.1717, 0.9102, 0.9686],
         [0.9610, 0.8881, 0.9608],
         ...,
         [0.9810, 0.9169, 1.0388],
         [1.1944, 0.8899, 0.9847],
         [1.1729, 0.8860, 0.9938]],
        [[0.9627, 0.9109, 0.9676],
         [1.1772, 0.9211, 0.9948],
         [0.9650, 0.9100, 0.9678],
         ...,
         [0.9999, 0.9507, 1.0726],
         [1.2019, 0.9027, 1.0202],
         [1.1787, 0.9025, 1.0337]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8553, 12.6697, 15.2464],
         [30.9925, 10.1089, 22.4554],
         [12.0398, 12.7031, 16.2535],
         ...,
         [15.5411, 14.5662, 25.3536],
         [30.8155, 11.5283, 24.0685],
         [27.6697, 11.5324, 26.8175]],
        [[10.8360,  8.1970, 14.1987],
         [29.0939,  9.0770, 14.5744],
         [10.8436,  8.1433, 14.1822],
         ...,
         [11.2808,  7.9284, 18.5570],
         [28.6457,  8.1112, 14.8467],
         [25.9755,  8.1971, 15.0208]],
        [[10.7160,  7.7669, 14.0741],
         [28.8671,  8.9569, 13.8150],
         [10.7040,  7.7072, 13.9449],
         ...,
         [10.8422,  7.3533, 17.8538],
         [28.3879,  7.7658, 13.9849],
         [25.7731,  7.8579, 13.9808]],
        ...,
        [[10.5690,  7.2643, 13.9210],
         [28.5881,  8.8099, 12.9273],
         [10.5333,  7.1983, 13.6559],
         ...,
         [10.3213,  6.6972, 17.0180],
         [28.0712,  7.3574, 12.9844],
         [25.5241,  7.4564, 12.7895]],
        [[10.9479,  8.6153, 14.3147],
         [29.3049,  9.1894, 15.3125],
         [10.9740,  8.5678, 14.4049],
         ...,
         [11.7015,  8.4991, 19.2308],
         [28.8857,  8.4437, 15.6896],
         [26.1637,  8.5232, 16.0495]],
        [[11.1989,  9.6153, 14.5740],
         [29.7758,  9.4424, 17.0761],
         [11.2675,  9.5846, 14.9088],
         ...,
         [12.6862,  9.9082, 20.8055],
         [29.4225,  9.2265, 17.7225],
         [26.5840,  9.2895, 18.5757]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9628, 0.9719, 0.9758],
         [1.2157, 0.9170, 1.0931],
         [0.9652, 0.9726, 0.9922],
         ...,
         [1.0115, 1.0126, 1.1402],
         [1.2134, 0.9474, 1.1193],
         [1.1718, 0.9475, 1.1640]],
        [[0.9493, 0.8760, 0.9588],
         [1.1906, 0.8949, 0.9649],
         [0.9494, 0.8748, 0.9585],
         ...,
         [0.9552, 0.8702, 1.0296],
         [1.1847, 0.8742, 0.9693],
         [1.1494, 0.8760, 0.9721]],
        [[0.9477, 0.8668, 0.9567],
         [1.1876, 0.8923, 0.9525],
         [0.9476, 0.8655, 0.9546],
         ...,
         [0.9494, 0.8579, 1.0182],
         [1.1813, 0.8668, 0.9553],
         [1.1467, 0.8687, 0.9552]],
        ...,
        [[0.9458, 0.8560, 0.9542],
         [1.1839, 0.8891, 0.9381],
         [0.9453, 0.8546, 0.9499],
         ...,
         [0.9425, 0.8438, 1.0046],
         [1.1771, 0.8580, 0.9390],
         [1.1434, 0.8601, 0.9358]],
        [[0.9508, 0.8850, 0.9606],
         [1.1934, 0.8973, 0.9769],
         [0.9512, 0.8840, 0.9621],
         ...,
         [0.9608, 0.8825, 1.0406],
         [1.1879, 0.8813, 0.9830],
         [1.1519, 0.8830, 0.9889]],
        [[0.9541, 0.9064, 0.9649],
         [1.1996, 0.9027, 1.0056],
         [0.9550, 0.9058, 0.9703],
         ...,
         [0.9738, 0.9127, 1.0662],
         [1.1950, 0.8981, 1.0161],
         [1.1574, 0.8994, 1.0300]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1388, 12.6729, 15.2628],
         [41.2946, 12.5297, 25.1046],
         [11.6425, 12.7889, 18.5454],
         ...,
         [14.1493, 20.4751, 20.9050],
         [32.8360, 12.6461, 22.4070],
         [25.1673, 12.3684, 27.4003]],
        [[10.8875,  8.1919, 14.4321],
         [37.7353,  8.3486, 17.3329],
         [10.8156,  8.0119, 15.4744],
         ...,
         [10.9339, 14.8804, 17.8209],
         [30.3386,  7.9158, 15.5993],
         [20.8646, 10.0001, 14.5885]],
        [[10.6371,  7.7612, 14.3325],
         [37.3166,  7.9393, 16.5560],
         [10.7174,  7.5613, 15.1315],
         ...,
         [10.5904, 14.3040, 17.4723],
         [30.0429,  7.4698, 14.9154],
         [20.3859,  9.7404, 13.4934]],
        ...,
        [[10.3343,  7.2579, 14.2098],
         [36.8034,  7.4592, 15.6400],
         [10.5968,  7.0371, 14.7164],
         ...,
         [10.1791, 13.6194, 17.0490],
         [29.6800,  6.9510, 14.1081],
         [19.8070,  9.4274, 12.2479]],
        [[11.1239,  8.6107, 14.5247],
         [38.1261,  8.7451, 18.0825],
         [10.9071,  8.4518, 15.7979],
         ...,
         [11.2608, 15.4332, 18.1490],
         [30.6141,  8.3512, 16.2585],
         [21.3165, 10.2460, 15.6782]],
        [[11.6638,  9.6123, 14.7312],
         [39.0026,  9.6880, 19.8532],
         [11.1116,  9.5097, 16.5359],
         ...,
         [12.0172, 16.7268, 18.8944],
         [31.2310,  9.3985, 17.8133],
         [22.3486, 10.8102, 18.3794]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9570, 0.9705, 0.9627],
         [1.3290, 0.9674, 1.1228],
         [0.9372, 0.9729, 1.0161],
         ...,
         [0.9703, 1.1378, 1.0545],
         [1.2173, 0.9699, 1.0789],
         [1.1159, 0.9639, 1.1602]],
        [[0.9272, 0.8744, 0.9492],
         [1.2820, 0.8777, 0.9964],
         [0.9263, 0.8705, 0.9662],
         ...,
         [0.9278, 1.0178, 1.0044],
         [1.1843, 0.8685, 0.9682],
         [1.0591, 0.9131, 0.9518]],
        [[0.9239, 0.8651, 0.9476],
         [1.2765, 0.8690, 0.9838],
         [0.9250, 0.8608, 0.9606],
         ...,
         [0.9233, 1.0054, 0.9987],
         [1.1803, 0.8589, 0.9571],
         [1.0527, 0.9076, 0.9340]],
        ...,
        [[0.9199, 0.8543, 0.9456],
         [1.2697, 0.8587, 0.9689],
         [0.9234, 0.8496, 0.9539],
         ...,
         [0.9178, 0.9908, 0.9918],
         [1.1756, 0.8478, 0.9440],
         [1.0451, 0.9009, 0.9137]],
        [[0.9303, 0.8834, 0.9507],
         [1.2872, 0.8862, 1.0086],
         [0.9275, 0.8799, 0.9714],
         ...,
         [0.9321, 1.0297, 1.0097],
         [1.1879, 0.8778, 0.9789],
         [1.0650, 0.9184, 0.9695]],
        [[0.9375, 0.9048, 0.9541],
         [1.2988, 0.9065, 1.0374],
         [0.9302, 0.9026, 0.9835],
         ...,
         [0.9421, 1.0574, 1.0218],
         [1.1960, 0.9002, 1.0042],
         [1.0787, 0.9305, 1.0134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9638, 12.9300, 14.9384],
         [37.4032, 12.4800, 25.3784],
         [11.6664, 12.6188, 17.0559],
         ...,
         [13.1063, 11.8594, 21.3494],
         [29.7841, 12.3354, 23.0055],
         [25.8715, 11.6651, 26.9255]],
        [[10.8804,  7.8202, 13.8463],
         [34.2435,  7.9003, 16.5129],
         [10.8224,  8.2817, 14.9484],
         ...,
         [10.8861, 10.9272, 17.4445],
         [27.8133,  7.8705, 15.2974],
         [23.6816,  8.8587, 14.9097]],
        [[10.6469,  7.3483, 13.7168],
         [33.8714,  7.4656, 15.6574],
         [10.7223,  7.8610, 14.7063],
         ...,
         [10.6389, 10.8170, 17.0137],
         [27.5786,  7.4447, 14.5439],
         [23.4238,  8.5620, 13.8578]],
        ...,
        [[10.3641,  6.8019, 13.5577],
         [33.4152,  6.9591, 14.6569],
         [10.5993,  7.3685, 14.4113],
         ...,
         [10.3397, 10.6818, 16.4937],
         [27.2901,  6.9481, 13.6600],
         [23.1076,  8.2075, 12.6548]],
        [[11.1004,  8.2828, 13.9669],
         [34.5907,  8.3241, 17.3442],
         [10.9157,  8.6901, 15.1754],
         ...,
         [11.1195, 11.0299, 17.8519],
         [28.0318,  8.2853, 16.0277],
         [23.9222,  9.1418, 15.9517]],
        [[11.6019,  9.4026, 14.2369],
         [35.3692,  9.3415, 19.3296],
         [11.1244,  9.6638, 15.6887],
         ...,
         [11.6524, 11.2600, 18.7849],
         [28.5199,  9.2795, 17.7649],
         [24.4618,  9.7988, 18.5158]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9759, 0.9795, 0.9683],
         [1.2988, 0.9699, 1.1381],
         [0.9587, 0.9728, 1.0027],
         ...,
         [0.9777, 0.9566, 1.0725],
         [1.1981, 0.9668, 1.0995],
         [1.1464, 0.9524, 1.1632]],
        [[0.9483, 0.8699, 0.9505],
         [1.2571, 0.8717, 0.9939],
         [0.9476, 0.8798, 0.9684],
         ...,
         [0.9484, 0.9366, 1.0090],
         [1.1721, 0.8710, 0.9741],
         [1.1175, 0.8922, 0.9678]],
        [[0.9452, 0.8598, 0.9484],
         [1.2522, 0.8623, 0.9800],
         [0.9462, 0.8708, 0.9645],
         ...,
         [0.9451, 0.9342, 1.0020],
         [1.1690, 0.8619, 0.9618],
         [1.1141, 0.8858, 0.9507]],
        ...,
        [[0.9415, 0.8481, 0.9458],
         [1.2461, 0.8515, 0.9637],
         [0.9446, 0.8602, 0.9597],
         ...,
         [0.9412, 0.9313, 0.9936],
         [1.1652, 0.8512, 0.9475],
         [1.1099, 0.8782, 0.9311]],
        [[0.9512, 0.8799, 0.9525],
         [1.2617, 0.8807, 1.0074],
         [0.9488, 0.8886, 0.9721],
         ...,
         [0.9515, 0.9388, 1.0157],
         [1.1750, 0.8799, 0.9860],
         [1.1207, 0.8983, 0.9847]],
        [[0.9579, 0.9039, 0.9569],
         [1.2720, 0.9026, 1.0397],
         [0.9516, 0.9095, 0.9805],
         ...,
         [0.9585, 0.9437, 1.0308],
         [1.1814, 0.9012, 1.0142],
         [1.1278, 0.9124, 1.0265]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6604, 12.8360, 14.9807],
         [28.1829, 11.5424, 24.8499],
         [11.8435, 12.8528, 14.8394],
         ...,
         [12.3106, 15.0406, 23.1903],
         [25.6935, 11.1543, 24.6056],
         [30.6542, 11.9203, 26.0376]],
        [[10.8281,  7.9443, 13.7515],
         [26.4506,  8.3635, 14.5659],
         [10.8330,  7.9210, 13.5963],
         ...,
         [10.4209,  7.9493, 16.1698],
         [23.3208,  8.2684, 14.7161],
         [28.5667,  7.9633, 15.5034]],
        [[10.7293,  7.4862, 13.6065],
         [26.2437,  8.0365, 13.6339],
         [10.7141,  7.4603, 13.4499],
         ...,
         [10.2082,  7.3460, 15.4639],
         [23.0428,  7.9675, 13.8089],
         [28.3184,  7.5754, 14.5396]],
        ...,
        [[10.6079,  6.9542, 13.4287],
         [25.9892,  7.6484, 12.5596],
         [10.5683,  6.9256, 13.2703],
         ...,
         [ 9.9501,  6.6604, 14.6304],
         [22.7023,  7.6093, 12.7603],
         [28.0132,  7.1202, 13.4263]],
        [[10.9201,  8.3921, 13.8867],
         [26.6431,  8.6771, 15.4829],
         [10.9440,  8.3715, 13.7330],
         ...,
         [10.6213,  8.5503, 16.8501],
         [23.5805,  8.5562, 15.6066],
         [28.7979,  8.3391, 16.4498]],
        [[11.1260,  9.4715, 14.1898],
         [27.0727,  9.4115, 17.7156],
         [11.1929,  9.4584, 14.0393],
         ...,
         [11.0772, 10.0420, 18.4542],
         [24.1638,  9.2272, 17.7667],
         [29.3147,  9.2321, 18.7477]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9872, 0.9733, 0.9724],
         [1.2056, 0.9456, 1.1329],
         [0.9896, 0.9737, 0.9701],
         ...,
         [0.9958, 1.0206, 1.1059],
         [1.1727, 0.9372, 1.1289],
         [1.2382, 0.9537, 1.1522]],
        [[0.9762, 0.8684, 0.9524],
         [1.1827, 0.8774, 0.9656],
         [0.9763, 0.8679, 0.9499],
         ...,
         [0.9708, 0.8685, 0.9917],
         [1.1413, 0.8754, 0.9681],
         [1.2106, 0.8688, 0.9809]],
        [[0.9749, 0.8586, 0.9500],
         [1.1799, 0.8704, 0.9505],
         [0.9747, 0.8580, 0.9475],
         ...,
         [0.9680, 0.8556, 0.9803],
         [1.1376, 0.8689, 0.9533],
         [1.2074, 0.8605, 0.9652]],
        ...,
        [[0.9733, 0.8472, 0.9472],
         [1.1766, 0.8621, 0.9330],
         [0.9728, 0.8466, 0.9446],
         ...,
         [0.9646, 0.8409, 0.9667],
         [1.1331, 0.8612, 0.9363],
         [1.2033, 0.8507, 0.9471]],
        [[0.9774, 0.8780, 0.9546],
         [1.1852, 0.8841, 0.9806],
         [0.9777, 0.8776, 0.9521],
         ...,
         [0.9735, 0.8814, 1.0028],
         [1.1447, 0.8815, 0.9826],
         [1.2137, 0.8769, 0.9963]],
        [[0.9801, 0.9012, 0.9595],
         [1.1909, 0.8999, 1.0169],
         [0.9810, 0.9009, 0.9571],
         ...,
         [0.9795, 0.9134, 1.0289],
         [1.1525, 0.8959, 1.0177],
         [1.2205, 0.8960, 1.0337]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.6805, 12.9126, 14.9454],
         [35.4852, 12.2961, 25.3864],
         [11.6960, 12.6642, 16.5616],
         ...,
         [12.3927, 12.0964, 21.3275],
         [28.7013, 12.1365, 23.2974],
         [26.3761, 11.5209, 26.7747]],
        [[10.8715,  7.8420, 13.8286],
         [32.5937,  7.8675, 16.1264],
         [10.8248,  8.2062, 14.6721],
         ...,
         [10.8583,  9.3511, 17.2916],
         [26.9049,  7.9046, 15.1772],
         [24.5227,  8.5835, 15.0069]],
        [[10.6664,  7.3725, 13.6962],
         [32.2526,  7.4445, 15.2455],
         [10.7216,  7.7770, 14.4537],
         ...,
         [10.6820,  9.0578, 16.8484],
         [26.6905,  7.4960, 14.3931],
         [24.3026,  8.2764, 13.9690]],
        ...,
        [[10.4171,  6.8287, 13.5338],
         [31.8342,  6.9508, 14.2188],
         [10.5949,  7.2755, 14.1872],
         ...,
         [10.4673,  8.7066, 16.3140],
         [26.4268,  7.0180, 13.4759],
         [24.0320,  7.9104, 12.7800]],
        [[11.0645,  8.3019, 13.9518],
         [32.9119,  8.2795, 16.9847],
         [10.9210,  8.6233, 14.8767],
         ...,
         [11.0235,  9.6303, 17.7112],
         [27.1044,  8.3016, 15.9391],
         [24.7278,  8.8771, 16.0334]],
        [[11.5024,  9.4145, 14.2278],
         [33.6250,  9.2664, 19.0439],
         [11.1363,  9.6205, 15.3381],
         ...,
         [11.3972, 10.2762, 18.6734],
         [27.5498,  9.2496, 17.7582],
         [25.1863,  9.5611, 18.5539]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9784, 0.9808, 0.9708],
         [1.2798, 0.9676, 1.1407],
         [0.9654, 0.9755, 0.9971],
         ...,
         [0.9746, 0.9633, 1.0747],
         [1.1902, 0.9642, 1.1067],
         [1.1594, 0.9510, 1.1632]],
        [[0.9545, 0.8721, 0.9527],
         [1.2416, 0.8727, 0.9901],
         [0.9539, 0.8799, 0.9664],
         ...,
         [0.9544, 0.9045, 1.0090],
         [1.1664, 0.8734, 0.9746],
         [1.1349, 0.8880, 0.9718]],
        [[0.9518, 0.8620, 0.9505],
         [1.2371, 0.8636, 0.9757],
         [0.9526, 0.8707, 0.9629],
         ...,
         [0.9520, 0.8982, 1.0018],
         [1.1636, 0.8647, 0.9619],
         [1.1320, 0.8814, 0.9550]],
        ...,
        [[0.9485, 0.8504, 0.9479],
         [1.2316, 0.8530, 0.9590],
         [0.9509, 0.8600, 0.9585],
         ...,
         [0.9492, 0.8906, 0.9931],
         [1.1601, 0.8544, 0.9469],
         [1.1285, 0.8736, 0.9356]],
        [[0.9571, 0.8820, 0.9547],
         [1.2458, 0.8815, 1.0040],
         [0.9552, 0.8889, 0.9697],
         ...,
         [0.9565, 0.9105, 1.0158],
         [1.1691, 0.8820, 0.9870],
         [1.1377, 0.8943, 0.9885]],
        [[0.9629, 0.9058, 0.9592],
         [1.2552, 0.9026, 1.0375],
         [0.9580, 0.9102, 0.9772],
         ...,
         [0.9615, 0.9243, 1.0315],
         [1.1749, 0.9023, 1.0166],
         [1.1437, 0.9090, 1.0295]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0977, 12.7855, 14.9499],
         [32.5691, 12.4749, 25.9675],
         [11.6721, 12.8197, 15.6862],
         ...,
         [11.6888, 12.4753, 20.1772],
         [26.8135, 11.7096, 23.8275],
         [26.8398, 11.3236, 26.5162]],
        [[10.8485,  8.0170, 13.9784],
         [30.1149,  7.7430, 15.6561],
         [10.8198,  7.9673, 14.2098],
         ...,
         [10.8208,  8.5367, 16.2622],
         [25.0738,  8.0284, 15.0442],
         [25.1167,  8.2778, 15.1045]],
        [[10.7031,  7.5669, 13.8626],
         [29.8242,  7.2991, 14.7055],
         [10.7187,  7.5118, 14.0370],
         ...,
         [10.7179,  8.1451, 15.8337],
         [24.8665,  7.6619, 14.2118],
         [24.9113,  7.9629, 14.0881]],
        ...,
        [[10.5253,  7.0432, 13.7202],
         [29.4674,  6.7833, 13.6056],
         [10.5946,  6.9824, 13.8254],
         ...,
         [10.5916,  7.6839, 15.3176],
         [24.6115,  7.2303, 13.2423],
         [24.6586,  7.5887, 12.9211]],
        [[10.9844,  8.4562, 14.0862],
         [30.3857,  8.1767, 16.5881],
         [10.9140,  8.4124, 14.3712],
         ...,
         [10.9166,  8.9150, 16.6681],
         [25.2668,  8.3823, 15.8560],
         [25.3079,  8.5796, 16.1079]],
        [[11.2906,  9.5126, 14.3269],
         [30.9921,  9.2218, 18.8458],
         [11.1247,  9.4845, 14.7340],
         ...,
         [11.1312,  9.8101, 17.6000],
         [25.6979,  9.2193, 17.8057],
         [25.7350,  9.2850, 18.5642]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9821, 0.9796, 0.9739],
         [1.2526, 0.9729, 1.1531],
         [0.9765, 0.9803, 0.9859],
         ...,
         [0.9767, 0.9729, 1.0590],
         [1.1766, 0.9565, 1.1183],
         [1.1769, 0.9482, 1.1621]],
        [[0.9656, 0.8773, 0.9581],
         [1.2202, 0.8714, 0.9854],
         [0.9652, 0.8762, 0.9619],
         ...,
         [0.9652, 0.8884, 0.9953],
         [1.1536, 0.8775, 0.9755],
         [1.1542, 0.8829, 0.9765]],
        [[0.9637, 0.8677, 0.9563],
         [1.2164, 0.8619, 0.9700],
         [0.9639, 0.8665, 0.9591],
         ...,
         [0.9639, 0.8801, 0.9883],
         [1.1509, 0.8697, 0.9619],
         [1.1514, 0.8761, 0.9599]],
        ...,
        [[0.9613, 0.8564, 0.9539],
         [1.2117, 0.8508, 0.9521],
         [0.9622, 0.8551, 0.9557],
         ...,
         [0.9622, 0.8702, 0.9799],
         [1.1475, 0.8604, 0.9462],
         [1.1481, 0.8681, 0.9409]],
        [[0.9674, 0.8867, 0.9599],
         [1.2238, 0.8807, 1.0006],
         [0.9665, 0.8858, 0.9645],
         ...,
         [0.9665, 0.8966, 1.0019],
         [1.1561, 0.8851, 0.9887],
         [1.1567, 0.8894, 0.9928]],
        [[0.9714, 0.9094, 0.9638],
         [1.2318, 0.9031, 1.0373],
         [0.9692, 0.9088, 0.9704],
         ...,
         [0.9693, 0.9158, 1.0170],
         [1.1618, 0.9031, 1.0204],
         [1.1623, 0.9045, 1.0327]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7997, 12.7679, 14.8878],
         [30.1300, 12.4141, 26.3865],
         [11.6067, 12.8467, 15.3402],
         ...,
         [11.7049, 12.5841, 18.6437],
         [25.9397, 11.1427, 24.3158],
         [26.6145, 11.0817, 26.2305]],
        [[10.8301,  8.0431, 13.9863],
         [28.0984,  7.7632, 15.4192],
         [10.8107,  7.9294, 14.1528],
         ...,
         [10.9030,  8.3411, 15.3938],
         [23.8188,  8.2989, 14.9947],
         [24.8308,  8.3237, 15.1391]],
        [[10.7157,  7.5959, 13.8785],
         [27.8567,  7.3249, 14.4271],
         [10.7160,  7.4696, 14.0124],
         ...,
         [10.8077,  7.9271, 15.0330],
         [23.5686,  8.0016, 14.1237],
         [24.6184,  8.0340, 14.1433]],
        ...,
        [[10.5755,  7.0752, 13.7460],
         [27.5595,  6.8152, 13.2841],
         [10.5997,  6.9359, 13.8400],
         ...,
         [10.6905,  7.4417, 14.5971],
         [23.2617,  7.6474, 13.1126],
         [24.3574,  7.6884, 12.9980]],
        [[10.9367,  8.4793, 14.0865],
         [28.3235,  8.1911, 16.3956],
         [10.8988,  8.3789, 14.2838],
         ...,
         [10.9918,  8.7425, 15.7345],
         [24.0521,  8.5831, 15.8465],
         [25.0284,  8.6005, 16.1206]],
        [[11.1758,  9.5274, 14.3101],
         [28.8266,  9.2205, 18.7745],
         [11.0959,  9.4631, 14.5769],
         ...,
         [11.1903,  9.6978, 16.5132],
         [24.5751,  9.2452, 17.9011],
         [25.4701,  9.2441, 18.5174]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9860, 0.9818, 0.9750],
         [1.2283, 0.9742, 1.1620],
         [0.9835, 0.9835, 0.9823],
         ...,
         [0.9848, 0.9778, 1.0360],
         [1.1729, 0.9469, 1.1283],
         [1.1818, 0.9456, 1.1594]],
        [[0.9732, 0.8805, 0.9603],
         [1.2014, 0.8745, 0.9836],
         [0.9730, 0.8780, 0.9630],
         ...,
         [0.9742, 0.8869, 0.9832],
         [1.1449, 0.8860, 0.9767],
         [1.1583, 0.8865, 0.9790]],
        [[0.9717, 0.8709, 0.9585],
         [1.1982, 0.8651, 0.9675],
         [0.9717, 0.8682, 0.9607],
         ...,
         [0.9729, 0.8780, 0.9773],
         [1.1416, 0.8796, 0.9625],
         [1.1554, 0.8803, 0.9628]],
        ...,
        [[0.9699, 0.8597, 0.9564],
         [1.1943, 0.8541, 0.9489],
         [0.9702, 0.8567, 0.9579],
         ...,
         [0.9714, 0.8676, 0.9702],
         [1.1375, 0.8720, 0.9461],
         [1.1520, 0.8729, 0.9442]],
        [[0.9746, 0.8898, 0.9619],
         [1.2044, 0.8836, 0.9995],
         [0.9741, 0.8877, 0.9651],
         ...,
         [0.9754, 0.8955, 0.9887],
         [1.1480, 0.8920, 0.9905],
         [1.1609, 0.8924, 0.9950]],
        [[0.9778, 0.9123, 0.9656],
         [1.2111, 0.9057, 1.0382],
         [0.9767, 0.9109, 0.9699],
         ...,
         [0.9780, 0.9159, 1.0014],
         [1.1549, 0.9062, 1.0240],
         [1.1667, 0.9062, 1.0340]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5200, 12.8911, 14.6833],
         [26.5448, 11.6121, 26.4308],
         [11.5617, 12.8413, 14.7986],
         ...,
         [12.3673, 12.9831, 16.4241],
         [25.5605, 10.3193, 25.1172],
         [26.7019, 10.8523, 25.7637]],
        [[10.7909,  7.8696, 13.7311],
         [24.7412,  8.0794, 15.0309],
         [10.8025,  7.9368, 13.9924],
         ...,
         [10.9712,  7.7574, 14.3803],
         [22.6530,  8.8149, 14.9426],
         [24.9396,  8.3931, 15.2086]],
        [[10.7039,  7.4032, 13.6176],
         [24.5266,  7.7247, 14.0165],
         [10.7121,  7.4779, 13.8957],
         ...,
         [10.8097,  7.2783, 14.1456],
         [22.3169,  8.6446, 14.0121],
         [24.7297,  8.1303, 14.2479]],
        ...,
        [[10.5969,  6.8625, 13.4780],
         [24.2628,  7.3059, 12.8522],
         [10.6009,  6.9450, 13.7766],
         ...,
         [10.6126,  6.7246, 13.8597],
         [21.9066,  8.4378, 12.9375],
         [24.4716,  7.8155, 13.1394]],
        [[10.8718,  8.3262, 13.8367],
         [24.9409,  8.4214, 16.0324],
         [10.8867,  8.3855, 14.0823],
         ...,
         [11.1224,  8.2277, 14.6003],
         [22.9678,  8.9750, 15.8563],
         [25.1350,  8.6432, 16.1529]],
        [[11.0526,  9.4298, 14.0727],
         [25.3875,  9.2281, 18.4849],
         [11.0748,  9.4673, 14.2826],
         ...,
         [11.4636,  9.3688, 15.0979],
         [23.6780,  9.3389, 18.0752],
         [25.5715,  9.2219, 18.4494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9892, 0.9824, 0.9686],
         [1.1878, 0.9549, 1.1597],
         [0.9898, 0.9813, 0.9705],
         ...,
         [1.0004, 0.9843, 0.9970],
         [1.1748, 0.9272, 1.1383],
         [1.1899, 0.9387, 1.1489]],
        [[0.9796, 0.8747, 0.9531],
         [1.1639, 0.8792, 0.9743],
         [0.9797, 0.8761, 0.9574],
         ...,
         [0.9820, 0.8723, 0.9637],
         [1.1364, 0.8950, 0.9729],
         [1.1666, 0.8859, 0.9772]],
        [[0.9784, 0.8647, 0.9513],
         [1.1611, 0.8716, 0.9578],
         [0.9785, 0.8663, 0.9558],
         ...,
         [0.9798, 0.8620, 0.9599],
         [1.1319, 0.8913, 0.9577],
         [1.1638, 0.8803, 0.9616]],
        ...,
        [[0.9770, 0.8531, 0.9490],
         [1.1576, 0.8626, 0.9389],
         [0.9771, 0.8549, 0.9539],
         ...,
         [0.9772, 0.8501, 0.9552],
         [1.1265, 0.8869, 0.9402],
         [1.1604, 0.8735, 0.9435]],
        [[0.9807, 0.8845, 0.9549],
         [1.1666, 0.8865, 0.9906],
         [0.9809, 0.8858, 0.9589],
         ...,
         [0.9840, 0.8824, 0.9673],
         [1.1405, 0.8984, 0.9877],
         [1.1692, 0.8913, 0.9925]],
        [[0.9830, 0.9082, 0.9587],
         [1.1725, 0.9038, 1.0305],
         [0.9833, 0.9090, 0.9621],
         ...,
         [0.9885, 0.9068, 0.9754],
         [1.1499, 0.9062, 1.0238],
         [1.1749, 0.9037, 1.0299]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5429, 12.8999, 14.7009],
         [26.7146, 11.7363, 26.6056],
         [11.5627, 12.8898, 14.9612],
         ...,
         [11.4864, 12.7732, 15.5280],
         [25.6435, 10.4705, 24.9549],
         [26.1993, 10.5334, 25.6565]],
        [[10.7980,  7.8582, 13.7666],
         [24.9551,  8.0648, 15.2133],
         [10.8027,  7.8713, 14.0469],
         ...,
         [10.7684,  8.0352, 14.2939],
         [23.2048,  8.9458, 15.0575],
         [24.2528,  8.6040, 15.1468]],
        [[10.7092,  7.3905, 13.6552],
         [24.7456,  7.6988, 14.1962],
         [10.7122,  7.4051, 13.9377],
         ...,
         [10.6827,  7.5871, 14.1481],
         [22.9195,  8.7732, 14.1447],
         [24.0221,  8.3912, 14.1902]],
        ...,
        [[10.6000,  6.8486, 13.5181],
         [24.4879,  7.2676, 13.0279],
         [10.6009,  6.8646, 13.8033],
         ...,
         [10.5773,  7.0655, 13.9692],
         [22.5703,  8.5636, 13.0883],
         [23.7389,  8.1343, 13.0865]],
        [[10.8806,  8.3162, 13.8703],
         [25.1502,  8.4181, 16.2168],
         [10.8870,  8.3277, 14.1485],
         ...,
         [10.8481,  8.4723, 14.4298],
         [23.4713,  9.1081, 15.9525],
         [24.4677,  8.8053, 16.0872]],
        [[11.0652,  9.4235, 14.1019],
         [25.5861,  9.2535, 18.6718],
         [11.0753,  9.4307, 14.3753],
         ...,
         [11.0261,  9.5229, 14.7343],
         [24.0704,  9.4769, 18.1201],
         [24.9487,  9.2662, 18.3738]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9941, 0.9857, 0.9715],
         [1.1946, 0.9608, 1.1651],
         [0.9944, 0.9855, 0.9757],
         ...,
         [0.9934, 0.9830, 0.9850],
         [1.1804, 0.9336, 1.1383],
         [1.1878, 0.9350, 1.1497]],
        [[0.9843, 0.8776, 0.9563],
         [1.1714, 0.8821, 0.9798],
         [0.9843, 0.8779, 0.9609],
         ...,
         [0.9839, 0.8814, 0.9649],
         [1.1482, 0.9009, 0.9773],
         [1.1621, 0.8936, 0.9788]],
        [[0.9831, 0.8676, 0.9545],
         [1.1686, 0.8742, 0.9633],
         [0.9831, 0.8679, 0.9591],
         ...,
         [0.9827, 0.8718, 0.9625],
         [1.1444, 0.8972, 0.9625],
         [1.1590, 0.8891, 0.9632]],
        ...,
        [[0.9816, 0.8560, 0.9523],
         [1.1652, 0.8650, 0.9443],
         [0.9817, 0.8563, 0.9569],
         ...,
         [0.9813, 0.8606, 0.9596],
         [1.1398, 0.8928, 0.9453],
         [1.1553, 0.8835, 0.9452]],
        [[0.9853, 0.8874, 0.9580],
         [1.1739, 0.8896, 0.9962],
         [0.9854, 0.8877, 0.9625],
         ...,
         [0.9849, 0.8908, 0.9671],
         [1.1517, 0.9044, 0.9919],
         [1.1649, 0.8979, 0.9940]],
        [[0.9878, 0.9112, 0.9618],
         [1.1797, 0.9075, 1.0361],
         [0.9879, 0.9113, 0.9662],
         ...,
         [0.9873, 0.9133, 0.9720],
         [1.1597, 0.9123, 1.0271],
         [1.1713, 0.9078, 1.0312]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5251, 12.8933, 14.6875],
         [26.5851, 11.6422, 26.4759],
         [11.5620, 12.8532, 14.8282],
         ...,
         [12.0831, 12.9328, 16.2009],
         [25.5656, 10.3460, 25.0780],
         [26.5671, 10.7576, 25.7379]],
        [[10.7927,  7.8668, 13.7398],
         [24.7933,  8.0747, 15.0756],
         [10.8026,  7.9203, 14.0069],
         ...,
         [10.9266,  7.8167, 14.3557],
         [22.7869,  8.8425, 14.9701],
         [24.7701,  8.4377, 15.1935]],
        [[10.7053,  7.4001, 13.6268],
         [24.5801,  7.7172, 14.0604],
         [10.7121,  7.4596, 13.9085],
         ...,
         [10.7914,  7.3444, 14.1424],
         [22.4647,  8.6723, 14.0439],
         [24.5563,  8.1878, 14.2338]],
        ...,
        [[10.5978,  6.8591, 13.4878],
         [24.3179,  7.2953, 12.8949],
         [10.6009,  6.9248, 13.7873],
         ...,
         [10.6259,  6.7976, 13.8821],
         [22.0710,  8.4655, 12.9736],
         [24.2934,  7.8878, 13.1265]],
        [[10.8740,  8.3237, 13.8449],
         [24.9918,  8.4196, 16.0777],
         [10.8868,  8.3709, 14.0984],
         ...,
         [11.0530,  8.2797, 14.5555],
         [23.0886,  9.0026, 15.8794],
         [24.9691,  8.6752, 16.1369]],
        [[11.0555,  9.4282, 14.0798],
         [25.4355,  9.2334, 18.5313],
         [11.0749,  9.4581, 14.3025],
         ...,
         [11.3370,  9.4007, 15.0062],
         [23.7683,  9.3663, 18.0860],
         [25.4141,  9.2233, 18.4311]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9904, 0.9843, 0.9693],
         [1.1894, 0.9575, 1.1611],
         [0.9909, 0.9834, 0.9716],
         ...,
         [0.9978, 0.9851, 0.9939],
         [1.1760, 0.9297, 1.1383],
         [1.1892, 0.9385, 1.1491]],
        [[0.9807, 0.8765, 0.9539],
         [1.1657, 0.8810, 0.9756],
         [0.9809, 0.8777, 0.9583],
         ...,
         [0.9825, 0.8754, 0.9639],
         [1.1392, 0.8974, 0.9739],
         [1.1654, 0.8887, 0.9776]],
        [[0.9796, 0.8665, 0.9521],
         [1.1629, 0.8733, 0.9591],
         [0.9797, 0.8678, 0.9567],
         ...,
         [0.9807, 0.8653, 0.9605],
         [1.1350, 0.8938, 0.9589],
         [1.1626, 0.8834, 0.9619]],
        ...,
        [[0.9781, 0.8549, 0.9498],
         [1.1595, 0.8643, 0.9402],
         [0.9782, 0.8563, 0.9547],
         ...,
         [0.9785, 0.8536, 0.9562],
         [1.1298, 0.8893, 0.9414],
         [1.1591, 0.8770, 0.9439]],
        [[0.9818, 0.8863, 0.9556],
         [1.1684, 0.8884, 0.9919],
         [0.9820, 0.8873, 0.9597],
         ...,
         [0.9842, 0.8854, 0.9672],
         [1.1432, 0.9009, 0.9887],
         [1.1681, 0.8938, 0.9929]],
        [[0.9842, 0.9100, 0.9594],
         [1.1742, 0.9058, 1.0318],
         [0.9845, 0.9106, 0.9631],
         ...,
         [0.9879, 0.9094, 0.9745],
         [1.1522, 0.9087, 1.0246],
         [1.1740, 0.9056, 1.0302]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5212, 12.8916, 14.6843],
         [26.5538, 11.6188, 26.4411],
         [11.5618, 12.8440, 14.8046],
         ...,
         [12.3014, 12.9718, 16.3738],
         [25.5609, 10.3247, 25.1084],
         [26.6708, 10.8301, 25.7579]],
        [[10.7913,  7.8689, 13.7330],
         [24.7529,  8.0783, 15.0409],
         [10.8025,  7.9331, 13.9958],
         ...,
         [10.9611,  7.7703, 14.3745],
         [22.6831,  8.8208, 14.9487],
         [24.9013,  8.4027, 15.2052]],
        [[10.7042,  7.4025, 13.6196],
         [24.5386,  7.7229, 14.0264],
         [10.7121,  7.4737, 13.8988],
         ...,
         [10.8057,  7.2927, 14.1447],
         [22.3502,  8.6506, 14.0193],
         [24.6906,  8.1429, 14.2447]],
        ...,
        [[10.5971,  6.8618, 13.4802],
         [24.2753,  7.3035, 12.8618],
         [10.6009,  6.9404, 13.7793],
         ...,
         [10.6159,  6.7405, 13.8644],
         [21.9437,  8.4439, 12.9456],
         [24.4316,  7.8315, 13.1365]],
        [[10.8723,  8.3256, 13.8385],
         [24.9524,  8.4209, 16.0426],
         [10.8867,  8.3822, 14.0859],
         ...,
         [11.1066,  8.2390, 14.5901],
         [22.9949,  8.9810, 15.8615],
         [25.0975,  8.6500, 16.1493]],
        [[11.0532,  9.4294, 14.0743],
         [25.3983,  9.2292, 18.4954],
         [11.0748,  9.4652, 14.2869],
         ...,
         [11.4344,  9.3756, 15.0772],
         [23.6981,  9.3447, 18.0776],
         [25.5357,  9.2217, 18.4453]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9895, 0.9828, 0.9688],
         [1.1882, 0.9555, 1.1600],
         [0.9900, 0.9818, 0.9707],
         ...,
         [0.9998, 0.9845, 0.9963],
         [1.1750, 0.9277, 1.1383],
         [1.1897, 0.9386, 1.1489]],
        [[0.9798, 0.8751, 0.9533],
         [1.1644, 0.8796, 0.9746],
         [0.9800, 0.8765, 0.9576],
         ...,
         [0.9821, 0.8730, 0.9638],
         [1.1370, 0.8955, 0.9731],
         [1.1663, 0.8865, 0.9773]],
        [[0.9787, 0.8651, 0.9515],
         [1.1615, 0.8720, 0.9581],
         [0.9788, 0.8666, 0.9560],
         ...,
         [0.9800, 0.8627, 0.9600],
         [1.1326, 0.8918, 0.9580],
         [1.1635, 0.8810, 0.9616]],
        ...,
        [[0.9773, 0.8535, 0.9492],
         [1.1580, 0.8630, 0.9391],
         [0.9773, 0.8552, 0.9541],
         ...,
         [0.9775, 0.8509, 0.9555],
         [1.1272, 0.8874, 0.9405],
         [1.1601, 0.8743, 0.9436]],
        [[0.9809, 0.8849, 0.9550],
         [1.1670, 0.8869, 0.9909],
         [0.9811, 0.8861, 0.9591],
         ...,
         [0.9840, 0.8830, 0.9673],
         [1.1411, 0.8989, 0.9879],
         [1.1689, 0.8918, 0.9926]],
        [[0.9833, 0.9086, 0.9589],
         [1.1729, 0.9043, 1.0308],
         [0.9836, 0.9093, 0.9623],
         ...,
         [0.9883, 0.9074, 0.9752],
         [1.1504, 0.9067, 1.0240],
         [1.1747, 0.9041, 1.0300]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5385, 12.8178, 14.7868],
         [26.5170, 11.5137, 26.4381],
         [11.5599, 12.8465, 14.9749],
         ...,
         [11.7562, 12.7955, 15.5812],
         [25.7724, 10.3952, 25.0583],
         [26.1306, 10.4623, 25.6021]],
        [[10.7968,  7.9699, 13.9316],
         [24.7077,  8.2186, 15.1947],
         [10.8021,  7.9297, 14.1126],
         ...,
         [10.9035,  8.0022, 14.3015],
         [23.3867,  9.0295, 15.0472],
         [24.1447,  8.6576, 15.1292]],
        [[10.7084,  7.5146, 13.8292],
         [24.4925,  7.8827, 14.1878],
         [10.7119,  7.4700, 14.0094],
         ...,
         [10.8023,  7.5505, 14.1506],
         [23.1072,  8.8734, 14.1266],
         [23.9097,  8.4570, 14.1754]],
        ...,
        [[10.5996,  6.9856, 13.7032],
         [24.2280,  7.4848, 13.0304],
         [10.6008,  6.9362, 13.8823],
         ...,
         [10.6781,  7.0251, 13.9654],
         [22.7649,  8.6835, 13.0619],
         [23.6211,  8.2145, 13.0748]],
        [[10.8791,  8.4147, 14.0268],
         [24.9081,  8.5415, 16.1876],
         [10.8861,  8.3792, 14.2086],
         ...,
         [10.9977,  8.4432, 14.4423],
         [23.6478,  9.1760, 15.9504],
         [24.3638,  8.8470, 16.0667]],
        [[11.0629,  9.4859, 14.2391],
         [25.3560,  9.2994, 18.6142],
         [11.0739,  9.4633, 14.4227],
         ...,
         [11.2086,  9.5042, 14.7578],
         [24.2342,  9.5078, 18.1397],
         [24.8543,  9.2797, 18.3460]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9941, 0.9862, 0.9734],
         [1.1920, 0.9583, 1.1629],
         [0.9943, 0.9868, 0.9764],
         ...,
         [0.9969, 0.9857, 0.9863],
         [1.1822, 0.9343, 1.1404],
         [1.1869, 0.9357, 1.1493]],
        [[0.9843, 0.8823, 0.9594],
         [1.1681, 0.8876, 0.9800],
         [0.9843, 0.8814, 0.9624],
         ...,
         [0.9857, 0.8830, 0.9655],
         [1.1506, 0.9050, 0.9776],
         [1.1607, 0.8970, 0.9789]],
        [[0.9831, 0.8725, 0.9578],
         [1.1652, 0.8804, 0.9636],
         [0.9831, 0.8715, 0.9607],
         ...,
         [0.9843, 0.8733, 0.9630],
         [1.1469, 0.9016, 0.9626],
         [1.1575, 0.8927, 0.9634]],
        ...,
        [[0.9816, 0.8612, 0.9557],
         [1.1618, 0.8719, 0.9448],
         [0.9817, 0.8601, 0.9586],
         ...,
         [0.9827, 0.8620, 0.9600],
         [1.1424, 0.8976, 0.9453],
         [1.1537, 0.8875, 0.9455]],
        [[0.9853, 0.8918, 0.9610],
         [1.1707, 0.8945, 0.9961],
         [0.9854, 0.8910, 0.9639],
         ...,
         [0.9869, 0.8924, 0.9677],
         [1.1541, 0.9081, 0.9923],
         [1.1635, 0.9011, 0.9942]],
        [[0.9878, 0.9148, 0.9644],
         [1.1767, 0.9108, 1.0356],
         [0.9879, 0.9143, 0.9674],
         ...,
         [0.9897, 0.9152, 0.9729],
         [1.1618, 0.9152, 1.0279],
         [1.1700, 0.9104, 1.0312]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5263, 12.8791, 14.7027],
         [26.5638, 11.6065, 26.4600],
         [11.5615, 12.8494, 14.8444],
         ...,
         [12.0710, 12.9189, 16.1329],
         [25.5952, 10.3410, 25.0831],
         [26.5063, 10.7109, 25.7190]],
        [[10.7931,  7.8854, 13.7729],
         [24.7664,  8.0995, 15.0875],
         [10.8025,  7.9255, 14.0236],
         ...,
         [10.9330,  7.8339, 14.3493],
         [22.8664,  8.8675, 14.9782],
         [24.6905,  8.4631, 15.1850]],
        [[10.7056,  7.4208, 13.6619],
         [24.5525,  7.7468, 14.0739],
         [10.7121,  7.4654, 13.9252],
         ...,
         [10.7998,  7.3636, 14.1427],
         [22.5495,  8.7004, 14.0521],
         [24.4746,  8.2199, 14.2262]],
        ...,
        [[10.5980,  6.8820, 13.5255],
         [24.2896,  7.3302, 12.9101],
         [10.6009,  6.9312, 13.8040],
         ...,
         [10.6367,  6.8188, 13.8904],
         [22.1623,  8.4973, 12.9818],
         [24.2092,  7.9278, 13.1198]],
        [[10.8744,  8.3401, 13.8761],
         [24.9655,  8.4395, 16.0879],
         [10.8867,  8.3755, 14.1150],
         ...,
         [11.0574,  8.2949, 14.5427],
         [23.1629,  9.0247, 15.8873],
         [24.8916,  8.6941, 16.1276]],
        [[11.0562,  9.4386, 14.1066],
         [25.4105,  9.2410, 18.5365],
         [11.0747,  9.4610, 14.3190],
         ...,
         [11.3370,  9.4101, 14.9788],
         [23.8309,  9.3814, 18.0934],
         [25.3411,  9.2262, 18.4196]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9908, 0.9845, 0.9699],
         [1.1895, 0.9572, 1.1611],
         [0.9913, 0.9839, 0.9722],
         ...,
         [0.9980, 0.9854, 0.9931],
         [1.1767, 0.9301, 1.1387],
         [1.1888, 0.9380, 1.1490]],
        [[0.9811, 0.8774, 0.9547],
         [1.1658, 0.8820, 0.9761],
         [0.9813, 0.8783, 0.9588],
         ...,
         [0.9830, 0.8763, 0.9641],
         [1.1407, 0.8985, 0.9744],
         [1.1648, 0.8898, 0.9777]],
        [[0.9800, 0.8675, 0.9529],
         [1.1630, 0.8745, 0.9596],
         [0.9801, 0.8684, 0.9572],
         ...,
         [0.9812, 0.8663, 0.9608],
         [1.1365, 0.8949, 0.9593],
         [1.1619, 0.8846, 0.9621]],
        ...,
        [[0.9785, 0.8559, 0.9507],
         [1.1595, 0.8655, 0.9407],
         [0.9786, 0.8570, 0.9553],
         ...,
         [0.9791, 0.8546, 0.9567],
         [1.1314, 0.8906, 0.9419],
         [1.1584, 0.8784, 0.9441]],
        [[0.9822, 0.8872, 0.9564],
         [1.1684, 0.8893, 0.9924],
         [0.9824, 0.8880, 0.9603],
         ...,
         [0.9846, 0.8862, 0.9673],
         [1.1446, 0.9019, 0.9891],
         [1.1674, 0.8948, 0.9930]],
        [[0.9846, 0.9108, 0.9602],
         [1.1743, 0.9065, 1.0322],
         [0.9848, 0.9112, 0.9636],
         ...,
         [0.9883, 0.9101, 0.9744],
         [1.1534, 0.9095, 1.0250],
         [1.1734, 0.9062, 1.0303]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5242, 12.8902, 14.6894],
         [26.5724, 11.6288, 26.4634],
         [11.5618, 12.8500, 14.8242],
         ...,
         [12.1394, 12.9410, 16.2358],
         [25.5692, 10.3385, 25.0873],
         [26.5835, 10.7679, 25.7399]],
        [[10.7924,  7.8708, 13.7441],
         [24.7771,  8.0803, 15.0682],
         [10.8026,  7.9248, 14.0070],
         ...,
         [10.9373,  7.8067, 14.3595],
         [22.7731,  8.8410, 14.9657],
         [24.7912,  8.4324, 15.1951]],
        [[10.7051,  7.4046, 13.6314],
         [24.5634,  7.7242, 14.0535],
         [10.7121,  7.4645, 13.9091],
         ...,
         [10.7971,  7.3333, 14.1429],
         [22.4490,  8.6714, 14.0386],
         [24.5780,  8.1811, 14.2354]],
        ...,
        [[10.5977,  6.8641, 13.4928],
         [24.3008,  7.3040, 12.8886],
         [10.6009,  6.9303, 13.7884],
         ...,
         [10.6254,  6.7854, 13.8785],
         [22.0531,  8.4654, 12.9674],
         [24.3158,  7.8794, 13.1280]],
        [[10.8736,  8.3273, 13.8490],
         [24.9760,  8.4236, 16.0700],
         [10.8867,  8.3749, 14.0981],
         ...,
         [11.0685,  8.2709, 14.5625],
         [23.0765,  9.0005, 15.8759],
         [24.9898,  8.6714, 16.1386]],
        [[11.0550,  9.4305, 14.0833],
         [25.4205,  9.2336, 18.5224],
         [11.0748,  9.4606, 14.3011],
         ...,
         [11.3634,  9.3953, 15.0205],
         [23.7604,  9.3628, 18.0850],
         [25.4336,  9.2228, 18.4328]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9902, 0.9839, 0.9693],
         [1.1891, 0.9569, 1.1608],
         [0.9907, 0.9830, 0.9715],
         ...,
         [0.9984, 0.9850, 0.9944],
         [1.1758, 0.9292, 1.1384],
         [1.1892, 0.9384, 1.1490]],
        [[0.9806, 0.8763, 0.9539],
         [1.1654, 0.8808, 0.9754],
         [0.9807, 0.8774, 0.9582],
         ...,
         [0.9825, 0.8749, 0.9639],
         [1.1389, 0.8971, 0.9738],
         [1.1656, 0.8883, 0.9775]],
        [[0.9794, 0.8663, 0.9521],
         [1.1625, 0.8731, 0.9589],
         [0.9795, 0.8676, 0.9566],
         ...,
         [0.9806, 0.8647, 0.9604],
         [1.1346, 0.8934, 0.9587],
         [1.1627, 0.8829, 0.9619]],
        ...,
        [[0.9780, 0.8547, 0.9498],
         [1.1591, 0.8641, 0.9400],
         [0.9780, 0.8561, 0.9546],
         ...,
         [0.9784, 0.8530, 0.9561],
         [1.1294, 0.8890, 0.9413],
         [1.1593, 0.8765, 0.9439]],
        [[0.9816, 0.8861, 0.9556],
         [1.1680, 0.8881, 0.9917],
         [0.9818, 0.8871, 0.9597],
         ...,
         [0.9842, 0.8849, 0.9672],
         [1.1429, 0.9005, 0.9886],
         [1.1682, 0.8934, 0.9928]],
        [[0.9840, 0.9097, 0.9594],
         [1.1739, 0.9055, 1.0316],
         [0.9843, 0.9104, 0.9630],
         ...,
         [0.9881, 0.9090, 0.9747],
         [1.1519, 0.9083, 1.0245],
         [1.1740, 0.9053, 1.0302]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8922, 14.6870],
         [26.5741, 11.6331, 26.4641],
         [11.5619, 12.8501, 14.8206],
         ...,
         [12.1524, 12.9451, 16.2549],
         [25.5645, 10.3383, 25.0881],
         [26.5982, 10.7788, 25.7438]],
        [[10.7922,  7.8682, 13.7388],
         [24.7791,  8.0768, 15.0647],
         [10.8026,  7.9247, 14.0040],
         ...,
         [10.9381,  7.8018, 14.3615],
         [22.7558,  8.8361, 14.9634],
         [24.8100,  8.4269, 15.1970]],
        [[10.7050,  7.4016, 13.6257],
         [24.5655,  7.7201, 14.0498],
         [10.7121,  7.4644, 13.9060],
         ...,
         [10.7965,  7.3278, 14.1430],
         [22.4304,  8.6661, 14.0361],
         [24.5972,  8.1740, 14.2371]],
        ...,
        [[10.5976,  6.8608, 13.4867],
         [24.3029,  7.2992, 12.8846],
         [10.6009,  6.9301, 13.7855],
         ...,
         [10.6233,  6.7793, 13.8764],
         [22.0328,  8.4595, 12.9647],
         [24.3356,  7.8706, 13.1295]],
        [[10.8734,  8.3250, 13.8440],
         [24.9779,  8.4207, 16.0666],
         [10.8868,  8.3748, 14.0950],
         ...,
         [11.0705,  8.2666, 14.5662],
         [23.0605,  8.9961, 15.8738],
         [25.0081,  8.6673, 16.1406]],
        [[11.0548,  9.4290, 14.0790],
         [25.4224,  9.2323, 18.5198],
         [11.0749,  9.4605, 14.2979],
         ...,
         [11.3684,  9.3926, 15.0283],
         [23.7474,  9.3595, 18.0835],
         [25.4509,  9.2224, 18.4353]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9692],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1757, 0.9290, 1.1383],
         [1.1893, 0.9385, 1.1490]],
        [[0.9805, 0.8761, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8773, 0.9581],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1386, 0.8968, 0.9737],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8661, 0.9519],
         [1.1625, 0.8729, 0.9588],
         [0.9794, 0.8674, 0.9565],
         ...,
         [0.9805, 0.8645, 0.9603],
         [1.1343, 0.8932, 0.9586],
         [1.1629, 0.8826, 0.9619]],
        ...,
        [[0.9779, 0.8545, 0.9496],
         [1.1590, 0.8639, 0.9399],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8527, 0.9560],
         [1.1290, 0.8887, 0.9412],
         [1.1594, 0.8761, 0.9438]],
        [[0.9815, 0.8859, 0.9555],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8846, 0.9672],
         [1.1426, 0.9003, 0.9885],
         [1.1683, 0.8932, 0.9928]],
        [[0.9839, 0.9095, 0.9593],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9088, 0.9747],
         [1.1517, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8926, 14.6865],
         [26.5744, 11.6340, 26.4642],
         [11.5619, 12.8501, 14.8199],
         ...,
         [12.1550, 12.9459, 16.2587],
         [25.5636, 10.3383, 25.0883],
         [26.6011, 10.7810, 25.7445]],
        [[10.7922,  7.8676, 13.7377],
         [24.7795,  8.0761, 15.0640],
         [10.8026,  7.9246, 14.0033],
         ...,
         [10.9383,  7.8008, 14.3618],
         [22.7524,  8.8352, 14.9630],
         [24.8137,  8.4258, 15.1974]],
        [[10.7049,  7.4010, 13.6246],
         [24.5659,  7.7193, 14.0490],
         [10.7121,  7.4644, 13.9055],
         ...,
         [10.7964,  7.3267, 14.1430],
         [22.4267,  8.6650, 14.0357],
         [24.6010,  8.1726, 14.2374]],
        ...,
        [[10.5976,  6.8602, 13.4855],
         [24.3033,  7.2982, 12.8838],
         [10.6009,  6.9301, 13.7849],
         ...,
         [10.6228,  6.7781, 13.8760],
         [22.0288,  8.4583, 12.9642],
         [24.3395,  7.8688, 13.1298]],
        [[10.8734,  8.3245, 13.8430],
         [24.9783,  8.4201, 16.0660],
         [10.8868,  8.3747, 14.0943],
         ...,
         [11.0709,  8.2657, 14.5669],
         [23.0574,  8.9953, 15.8734],
         [25.0117,  8.6665, 16.1410]],
        [[11.0548,  9.4287, 14.0781],
         [25.4227,  9.2320, 18.5192],
         [11.0749,  9.4605, 14.2972],
         ...,
         [11.3694,  9.3921, 15.0298],
         [23.7449,  9.3588, 18.0832],
         [25.4544,  9.2223, 18.4358]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8826, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8527, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8846, 0.9672],
         [1.1425, 0.9002, 0.9885],
         [1.1683, 0.8932, 0.9928]],
        [[0.9839, 0.9095, 0.9593],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5744, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1555, 12.9460, 16.2595],
         [25.5635, 10.3383, 25.0883],
         [26.6017, 10.7815, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7795,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7518,  8.8350, 14.9629],
         [24.8144,  8.4256, 15.1975]],
        [[10.7049,  7.4009, 13.6244],
         [24.5660,  7.7191, 14.0489],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3265, 14.1430],
         [22.4259,  8.6648, 14.0356],
         [24.6017,  8.1723, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4853],
         [24.3034,  7.2981, 12.8837],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6228,  6.7778, 13.8759],
         [22.0280,  8.4581, 12.9641],
         [24.3402,  7.8685, 13.1299]],
        [[10.8734,  8.3244, 13.8428],
         [24.9784,  8.4200, 16.0659],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2656, 14.5671],
         [23.0568,  8.9951, 15.8733],
         [25.0125,  8.6664, 16.1411]],
        [[11.0547,  9.4287, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3695,  9.3920, 15.0301],
         [23.7444,  9.3587, 18.0831],
         [25.4550,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5744, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7815, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8350, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6244],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8837],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0279,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9951, 15.8733],
         [25.0126,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3920, 15.0302],
         [23.7443,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5744, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8350, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9951, 15.8733],
         [25.0126,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0126,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
         [23.8608,  8.5616, 15.8374],3])
        [[11.0577,  9.4756, 14.1832],
         [25.4665,  9.2422, 18.5194],
         [11.0775,  9.4544, 14.2826],
         ...,
         [11.3085,  9.4786, 15.1264],
         [23.9083,  9.3775, 18.0965],
         [25.4564,  9.2245, 18.4293]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9913, 0.9855, 0.9710],
         [1.1906, 0.9582, 1.1603],
         [0.9918, 0.9860, 0.9720],
         ...,
         [0.9977, 0.9854, 0.9953],
         [1.1777, 0.9323, 1.1387],
         [1.1905, 0.9406, 1.1495]],
        [[0.9816, 0.8808, 0.9566],
         [1.1671, 0.8844, 0.9765],
         [0.9817, 0.8800, 0.9585],
         ...,
         [0.9833, 0.8809, 0.9672],
         [1.1424, 0.9002, 0.9749],
         [1.1669, 0.8915, 0.9782]],
        [[0.9805, 0.8710, 0.9548],
         [1.1643, 0.8770, 0.9601],
         [0.9805, 0.8701, 0.9569],
         ...,
         [0.9816, 0.8711, 0.9639],
         [1.1383, 0.8966, 0.9598],
         [1.1641, 0.8861, 0.9626]],
        ...,
        [[0.9790, 0.8596, 0.9527],
         [1.1608, 0.8682, 0.9412],
         [0.9791, 0.8586, 0.9550],
         ...,
         [0.9796, 0.8598, 0.9599],
         [1.1333, 0.8922, 0.9424],
         [1.1607, 0.8798, 0.9447]],
        [[0.9827, 0.8904, 0.9582],
         [1.1697, 0.8916, 0.9927],
         [0.9829, 0.8897, 0.9600],
         ...,
         [0.9849, 0.8905, 0.9702],
         [1.1463, 0.9036, 0.9896],
         [1.1695, 0.8965, 0.9936]],
        [[0.9851, 0.9135, 0.9618],
         [1.1755, 0.9085, 1.0323],
         [0.9854, 0.9131, 0.9634],
         ...,
         [0.9884, 0.9136, 0.9771],
         [1.1549, 0.9114, 1.0254],
         [1.1754, 0.9081, 1.0308]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5248, 12.8793, 14.7000],
         [26.5822, 11.6175, 26.4485],
         [11.5630, 12.8518, 14.8177],
         ...,
         [12.1228, 12.9205, 16.2550],
         [25.5778, 10.3410, 25.0833],
         [26.6020, 10.7724, 25.7401]],
        [[10.7926,  7.8851, 13.7648],
         [24.7900,  8.0854, 15.0690],
         [10.8028,  7.9223, 13.9994],
         ...,
         [10.9349,  7.8320, 14.3951],
         [22.7976,  8.8395, 14.9684],
         [24.8149,  8.4301, 15.1972]],
        [[10.7052,  7.4204, 13.6532],
         [24.5767,  7.7307, 14.0553],
         [10.7123,  7.4617, 13.9013],
         ...,
         [10.7962,  7.3614, 14.1802],
         [22.4752,  8.6695, 14.0417],
         [24.6022,  8.1781, 14.2375]],
        ...,
        [[10.5978,  6.8816, 13.5160],
         [24.3145,  7.3120, 12.8915],
         [10.6009,  6.9272, 13.7804],
         ...,
         [10.6264,  6.8164, 13.9179],
         [22.0813,  8.4630, 12.9709],
         [24.3407,  7.8757, 13.1303]],
        [[10.8739,  8.3399, 13.8686],
         [24.9885,  8.4274, 16.0697],
         [10.8871,  8.3727, 14.0906],
         ...,
         [11.0645,  8.2931, 14.5964],
         [23.0994,  8.9994, 15.8781],
         [25.0129,  8.6696, 16.1405]],
        [[11.0554,  9.4384, 14.1004],
         [25.4323,  9.2340, 18.5192],
         [11.0754,  9.4592, 14.2939],
         ...,
         [11.3561,  9.4091, 15.0506],
         [23.7795,  9.3626, 18.0860],
         [25.4555,  9.2226, 18.4345]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9904, 0.9845, 0.9695],
         [1.1893, 0.9574, 1.1606],
         [0.9909, 0.9839, 0.9715],
         ...,
         [0.9983, 0.9854, 0.9948],
         [1.1761, 0.9300, 1.1384],
         [1.1896, 0.9393, 1.1491]],
        [[0.9807, 0.8774, 0.9543],
         [1.1657, 0.8817, 0.9755],
         [0.9808, 0.8782, 0.9581],
         ...,
         [0.9826, 0.8762, 0.9646],
         [1.1393, 0.8978, 0.9739],
         [1.1660, 0.8891, 0.9776]],
        [[0.9795, 0.8674, 0.9525],
         [1.1628, 0.8741, 0.9591],
         [0.9796, 0.8683, 0.9565],
         ...,
         [0.9807, 0.8661, 0.9611],
         [1.1351, 0.8942, 0.9588],
         [1.1632, 0.8837, 0.9620]],
        ...,
        [[0.9781, 0.8559, 0.9503],
         [1.1594, 0.8651, 0.9401],
         [0.9781, 0.8568, 0.9546],
         ...,
         [0.9785, 0.8545, 0.9568],
         [1.1299, 0.8898, 0.9414],
         [1.1597, 0.8772, 0.9440]],
        [[0.9818, 0.8871, 0.9560],
         [1.1683, 0.8890, 0.9918],
         [0.9819, 0.8878, 0.9596],
         ...,
         [0.9843, 0.8861, 0.9679],
         [1.1433, 0.9013, 0.9887],
         [1.1686, 0.8942, 0.9930]],
        [[0.9842, 0.9107, 0.9598],
         [1.1742, 0.9063, 1.0317],
         [0.9844, 0.9111, 0.9629],
         ...,
         [0.9881, 0.9101, 0.9752],
         [1.1523, 0.9091, 1.0246],
         [1.1745, 0.9061, 1.0303]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5239, 12.8903, 14.6889],
         [26.5759, 11.6311, 26.4613],
         [11.5621, 12.8504, 14.8193],
         ...,
         [12.1496, 12.9414, 16.2587],
         [25.5660, 10.3388, 25.0874],
         [26.6019, 10.7799, 25.7439]],
        [[10.7923,  7.8707, 13.7425],
         [24.7815,  8.0777, 15.0647],
         [10.8026,  7.9242, 14.0025],
         ...,
         [10.9377,  7.8062, 14.3680],
         [22.7600,  8.8358, 14.9639],
         [24.8147,  8.4263, 15.1974]],
        [[10.7050,  7.4044, 13.6297],
         [24.5680,  7.7212, 14.0500],
         [10.7121,  7.4639, 13.9046],
         ...,
         [10.7963,  7.3327, 14.1498],
         [22.4348,  8.6656, 14.0367],
         [24.6020,  8.1733, 14.2375]],
        ...,
        [[10.5976,  6.8639, 13.4909],
         [24.3055,  7.3006, 12.8851],
         [10.6009,  6.9295, 13.7840],
         ...,
         [10.6234,  6.7848, 13.8836],
         [22.0376,  8.4590, 12.9653],
         [24.3405,  7.8697, 13.1300]],
        [[10.8735,  8.3272, 13.8475],
         [24.9803,  8.4213, 16.0665],
         [10.8868,  8.3743, 14.0935],
         ...,
         [11.0698,  8.2705, 14.5725],
         [23.0645,  8.9959, 15.8742],
         [25.0127,  8.6669, 16.1410]],
        [[11.0549,  9.4304, 14.0820],
         [25.4246,  9.2323, 18.5191],
         [11.0750,  9.4602, 14.2965],
         ...,
         [11.3671,  9.3950, 15.0340],
         [23.7507,  9.3594, 18.0836],
         [25.4553,  9.2224, 18.4356]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9839, 0.9692],
         [1.1891, 0.9569, 1.1607],
         [0.9906, 0.9830, 0.9713],
         ...,
         [0.9984, 0.9850, 0.9947],
         [1.1757, 0.9292, 1.1383],
         [1.1894, 0.9386, 1.1490]],
        [[0.9805, 0.8763, 0.9538],
         [1.1653, 0.8807, 0.9753],
         [0.9806, 0.8774, 0.9581],
         ...,
         [0.9824, 0.8749, 0.9640],
         [1.1386, 0.8970, 0.9737],
         [1.1658, 0.8882, 0.9775]],
        [[0.9793, 0.8663, 0.9520],
         [1.1625, 0.8731, 0.9588],
         [0.9794, 0.8675, 0.9565],
         ...,
         [0.9805, 0.8647, 0.9604],
         [1.1343, 0.8933, 0.9586],
         [1.1630, 0.8827, 0.9619]],
        ...,
        [[0.9779, 0.8547, 0.9497],
         [1.1591, 0.8640, 0.9399],
         [0.9779, 0.8561, 0.9545],
         ...,
         [0.9782, 0.8530, 0.9561],
         [1.1291, 0.8889, 0.9412],
         [1.1595, 0.8762, 0.9439]],
        [[0.9815, 0.8860, 0.9555],
         [1.1680, 0.8881, 0.9916],
         [0.9817, 0.8871, 0.9595],
         ...,
         [0.9841, 0.8848, 0.9673],
         [1.1427, 0.9004, 0.9885],
         [1.1684, 0.8933, 0.9928]],
        [[0.9839, 0.9097, 0.9593],
         [1.1738, 0.9055, 1.0315],
         [0.9842, 0.9103, 0.9628],
         ...,
         [0.9881, 0.9089, 0.9748],
         [1.1517, 0.9082, 1.0244],
         [1.1743, 0.9052, 1.0302]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8922, 14.6869],
         [26.5747, 11.6336, 26.4636],
         [11.5619, 12.8502, 14.8196],
         ...,
         [12.1545, 12.9452, 16.2595],
         [25.5639, 10.3384, 25.0881],
         [26.6018, 10.7812, 25.7446]],
        [[10.7922,  7.8681, 13.7384],
         [24.7799,  8.0762, 15.0640],
         [10.8026,  7.9245, 14.0031],
         ...,
         [10.9382,  7.8017, 14.3631],
         [22.7532,  8.8351, 14.9630],
         [24.8146,  8.4257, 15.1975]],
        [[10.7049,  7.4016, 13.6254],
         [24.5664,  7.7195, 14.0491],
         [10.7121,  7.4643, 13.9052],
         ...,
         [10.7964,  7.3276, 14.1443],
         [22.4275,  8.6649, 14.0358],
         [24.6019,  8.1724, 14.2375]],
        ...,
        [[10.5976,  6.8608, 13.4863],
         [24.3038,  7.2985, 12.8839],
         [10.6009,  6.9300, 13.7846],
         ...,
         [10.6229,  6.7791, 13.8774],
         [22.0297,  8.4582, 12.9643],
         [24.3404,  7.8687, 13.1299]],
        [[10.8734,  8.3249, 13.8436],
         [24.9788,  8.4202, 16.0660],
         [10.8868,  8.3747, 14.0941],
         ...,
         [11.0708,  8.2665, 14.5681],
         [23.0581,  8.9952, 15.8735],
         [25.0127,  8.6664, 16.1411]],
        [[11.0548,  9.4290, 14.0787],
         [25.4232,  9.2320, 18.5191],
         [11.0749,  9.4604, 14.2969],
         ...,
         [11.3691,  9.3925, 15.0309],
         [23.7455,  9.3588, 18.0832],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9692],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8761, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8773, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8661, 0.9519],
         [1.1625, 0.8729, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8645, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8826, 0.9618]],
        ...,
        [[0.9779, 0.8545, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8527, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8761, 0.9438]],
        [[0.9815, 0.8859, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8846, 0.9672],
         [1.1425, 0.9002, 0.9885],
         [1.1684, 0.8932, 0.9928]],
        [[0.9839, 0.9095, 0.9593],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9748],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8926, 14.6865],
         [26.5745, 11.6341, 26.4641],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1554, 12.9459, 16.2596],
         [25.5635, 10.3383, 25.0883],
         [26.6018, 10.7815, 25.7447]],
        [[10.7922,  7.8676, 13.7377],
         [24.7796,  8.0760, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8008, 14.3622],
         [22.7519,  8.8350, 14.9629],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4010, 13.6245],
         [24.5661,  7.7191, 14.0489],
         [10.7121,  7.4643, 13.9053],
         ...,
         [10.7964,  7.3266, 14.1432],
         [22.4261,  8.6648, 14.0356],
         [24.6019,  8.1723, 14.2375]],
        ...,
        [[10.5976,  6.8602, 13.4854],
         [24.3035,  7.2981, 12.8837],
         [10.6009,  6.9300, 13.7847],
         ...,
         [10.6228,  6.7780, 13.8762],
         [22.0282,  8.4581, 12.9641],
         [24.3404,  7.8685, 13.1299]],
        [[10.8734,  8.3245, 13.8429],
         [24.9785,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2657, 14.5673],
         [23.0569,  8.9951, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0548,  9.4287, 14.0781],
         [25.4229,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2970],
         ...,
         [11.3695,  9.3921, 15.0304],
         [23.7445,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8826, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8527, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8846, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9460, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7815, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3620],
         [22.7517,  8.8350, 14.9629],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6244],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3265, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4853],
         [24.3035,  7.2980, 12.8837],
         [10.6009,  6.9301, 13.7847],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0279,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8428],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2656, 14.5671],
         [23.0567,  8.9951, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4287, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3920, 15.0303],
         [23.7443,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8350, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6244],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7847],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9951, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7847],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7847],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5238, 12.8927, 14.6864],
         [26.5745, 11.6342, 26.4642],
         [11.5619, 12.8501, 14.8197],
         ...,
         [12.1556, 12.9461, 16.2596],
         [25.5634, 10.3383, 25.0883],
         [26.6018, 10.7816, 25.7447]],
        [[10.7922,  7.8675, 13.7375],
         [24.7796,  8.0759, 15.0638],
         [10.8026,  7.9246, 14.0032],
         ...,
         [10.9383,  7.8006, 14.3619],
         [22.7516,  8.8349, 14.9628],
         [24.8146,  8.4255, 15.1975]],
        [[10.7049,  7.4009, 13.6243],
         [24.5660,  7.7191, 14.0488],
         [10.7121,  7.4644, 13.9053],
         ...,
         [10.7964,  7.3264, 14.1430],
         [22.4258,  8.6648, 14.0355],
         [24.6019,  8.1722, 14.2375]],
        ...,
        [[10.5976,  6.8600, 13.4852],
         [24.3034,  7.2980, 12.8836],
         [10.6009,  6.9301, 13.7848],
         ...,
         [10.6227,  6.7778, 13.8759],
         [22.0278,  8.4581, 12.9641],
         [24.3404,  7.8684, 13.1299]],
        [[10.8734,  8.3244, 13.8427],
         [24.9784,  8.4200, 16.0658],
         [10.8868,  8.3747, 14.0942],
         ...,
         [11.0710,  8.2655, 14.5671],
         [23.0566,  8.9950, 15.8733],
         [25.0127,  8.6663, 16.1411]],
        [[11.0547,  9.4286, 14.0779],
         [25.4228,  9.2320, 18.5191],
         [11.0749,  9.4605, 14.2971],
         ...,
         [11.3696,  9.3919, 15.0302],
         [23.7442,  9.3587, 18.0831],
         [25.4552,  9.2223, 18.4359]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9901, 0.9838, 0.9691],
         [1.1890, 0.9568, 1.1607],
         [0.9906, 0.9829, 0.9713],
         ...,
         [0.9984, 0.9849, 0.9947],
         [1.1756, 0.9290, 1.1383],
         [1.1894, 0.9385, 1.1490]],
        [[0.9804, 0.8760, 0.9537],
         [1.1653, 0.8805, 0.9753],
         [0.9806, 0.8772, 0.9580],
         ...,
         [0.9824, 0.8746, 0.9639],
         [1.1385, 0.8968, 0.9736],
         [1.1657, 0.8880, 0.9775]],
        [[0.9793, 0.8660, 0.9519],
         [1.1625, 0.8728, 0.9588],
         [0.9794, 0.8674, 0.9564],
         ...,
         [0.9805, 0.8644, 0.9603],
         [1.1342, 0.8931, 0.9586],
         [1.1629, 0.8825, 0.9618]],
        ...,
        [[0.9779, 0.8544, 0.9496],
         [1.1590, 0.8638, 0.9398],
         [0.9779, 0.8559, 0.9545],
         ...,
         [0.9782, 0.8526, 0.9560],
         [1.1289, 0.8887, 0.9411],
         [1.1595, 0.8760, 0.9438]],
        [[0.9815, 0.8858, 0.9554],
         [1.1679, 0.8879, 0.9916],
         [0.9817, 0.8869, 0.9595],
         ...,
         [0.9841, 0.8845, 0.9672],
         [1.1425, 0.9002, 0.9884],
         [1.1684, 0.8931, 0.9928]],
        [[0.9839, 0.9095, 0.9592],
         [1.1738, 0.9053, 1.0315],
         [0.9842, 0.9102, 0.9628],
         ...,
         [0.9881, 0.9087, 0.9747],
         [1.1516, 0.9080, 1.0244],
         [1.1742, 0.9051, 1.0301]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 75.2450,  13.5538,  15.8311],
         [ 28.3768,  17.3899,  17.1347],
         [ 46.0351, 117.3261,  27.7266],
         ...,
         [ 23.4094,  14.3042,  16.2482],
         [ 21.4707,  11.3664,  39.8173],
         [ 70.1961,  50.8772,  23.8768]],
        [[ 66.9973,  12.2012,  13.6957],
         [ 17.3589,  11.0448,  11.0512],
         [ 38.6423,  47.5238,  23.6738],
         ...,
         [ 12.9854,  13.1646,  14.9394],
         [ 13.1926,   9.7132,  23.9390],
         [ 58.3603,  12.7113,  13.0211]],
        [[ 66.0413,  12.0434,  13.4522],
         [ 16.3343,  10.4413,  10.4672],
         [ 37.8139,  42.4938,  23.2152],
         ...,
         [ 12.0719,  13.0300,  14.7849],
         [ 12.4208,   9.5260,  22.4777],
         [ 57.0414,  10.7060,  12.0795]],
        ...,
        [[ 64.8737,  11.8504,  13.1560],
         [ 15.1463,   9.7378,   9.7851],
         [ 36.8104,  36.9847,  22.6583],
         ...,
         [ 11.0268,  12.8648,  14.5954],
         [ 11.5252,   9.2988,  20.7874],
         [ 55.4457,   8.6513,  11.0050]],
        [[ 67.8921,  12.3487,  13.9244],
         [ 18.3618,  11.6329,  11.6192],
         [ 39.4232,  52.6946,  24.1052],
         ...,
         [ 13.8901,  13.2901,  15.0835],
         [ 13.9478,   9.8893,  25.3722],
         [ 59.6050,  14.8946,  13.9554]],
        [[ 69.9093,  12.6805,  14.4426],
         [ 20.7847,  13.0438,  12.9781],
         [ 41.2026,  66.1832,  25.0853],
         ...,
         [ 16.1157,  13.5713,  15.4064],
         [ 15.7705,  10.2891,  28.8459],
         [ 62.4464,  21.1316,  16.2612]]], device='cuda:0',
       dtype=torch.float64, grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.8138, 0.9758, 0.9585],
         [1.1944, 1.0580, 0.9797],
         [1.4277, 3.2010, 1.1519],
         ...,
         [1.1287, 0.9919, 0.9652],
         [1.1031, 0.9289, 1.3486],
         [1.7471, 1.7761, 1.0893]],
        [[1.7048, 0.9468, 0.9237],
         [1.0488, 0.9220, 0.8807],
         [1.3300, 1.7042, 1.0860],
         ...,
         [0.9910, 0.9674, 0.9440],
         [0.9937, 0.8934, 1.0903],
         [1.5906, 0.9577, 0.9128]],
        [[1.6921, 0.9434, 0.9198],
         [1.0352, 0.9090, 0.8712],
         [1.3191, 1.5964, 1.0786],
         ...,
         [0.9789, 0.9646, 0.9414],
         [0.9835, 0.8894, 1.0666],
         [1.5732, 0.9147, 0.8974]],
        ...,
        [[1.6767, 0.9393, 0.9149],
         [1.0195, 0.8940, 0.8601],
         [1.3058, 1.4782, 1.0695],
         ...,
         [0.9651, 0.9610, 0.9384],
         [0.9717, 0.8845, 1.0391],
         [1.5521, 0.8707, 0.8800]],
        [[1.7166, 0.9499, 0.9274],
         [1.0620, 0.9346, 0.8899],
         [1.3404, 1.8151, 1.0930],
         ...,
         [1.0029, 0.9701, 0.9463],
         [1.0037, 0.8972, 1.1136],
         [1.6071, 1.0045, 0.9279]],
        [[1.7433, 0.9571, 0.9359],
         [1.0941, 0.9648, 0.9121],
         [1.3639, 2.1044, 1.1090],
         ...,
         [1.0323, 0.9762, 0.9515],
         [1.0278, 0.9058, 1.1701],
         [1.6446, 1.1383, 0.9654]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 73.9739,  13.6439,  15.8850],
         [ 28.3631,  16.8179,  17.1543],
         [ 45.7441, 116.8709,  27.2197],
         ...,
         [ 21.5103,  13.8557,  16.1099],
         [ 21.1213,  11.3166,  39.8743],
         [ 68.4797,  49.4425,  23.9076]],
        [[ 66.2743,  12.3140,  13.6128],
         [ 17.2842,  10.9374,  11.0695],
         [ 38.4196,  47.4899,  23.4174],
         ...,
         [ 12.4639,  12.0578,  14.9466],
         [ 13.0341,   9.5500,  23.7698],
         [ 57.4618,  12.5595,  13.0144]],
        [[ 65.3787,  12.1587,  13.3551],
         [ 16.2563,  10.3701,  10.4852],
         [ 37.5986,  42.4802,  22.9853],
         ...,
         [ 11.6498,  11.8521,  14.8086],
         [ 12.2781,   9.3514,  22.2953],
         [ 56.2275,  10.6000,  12.0706]],
        ...,
        [[ 64.2839,  11.9686,  13.0421],
         [ 15.0651,   9.7068,   9.8027],
         [ 36.6039,  36.9908,  22.4600],
         ...,
         [ 10.7128,  11.6017,  14.6391],
         [ 11.4004,   9.1107,  20.5918],
         [ 54.7323,   8.5875,  10.9939]],
        [[ 67.1120,  12.4592,  13.8551],
         [ 18.2908,  11.4887,  11.6378],
         [ 39.1934,  52.6380,  23.8236],
         ...,
         [ 13.2660,  12.2509,  15.0752],
         [ 13.7734,   9.7370,  25.2175],
         [ 58.6254,  14.6889,  13.9511]],
        [[ 68.9983,  12.7856,  14.4051],
         [ 20.7243,  12.8054,  12.9972],
         [ 40.9567,  66.0591,  24.7449],
         ...,
         [ 15.2232,  12.6879,  15.3629],
         [ 15.5564,  10.1629,  28.7317],
         [ 61.2772,  20.7527,  16.2635]]], device='cuda:0',
       dtype=torch.float64, grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.7964, 0.9778, 0.9596],
         [1.1936, 1.0459, 0.9802],
         [1.4233, 3.1914, 1.1439],
         ...,
         [1.1030, 0.9824, 0.9633],
         [1.0979, 0.9279, 1.3498],
         [1.7238, 1.7455, 1.0901]],
        [[1.6946, 0.9493, 0.9226],
         [1.0472, 0.9198, 0.8813],
         [1.3265, 1.7036, 1.0821],
         ...,
         [0.9835, 0.9438, 0.9443],
         [0.9910, 0.8901, 1.0878],
         [1.5781, 0.9546, 0.9129]],
        [[1.6828, 0.9460, 0.9184],
         [1.0336, 0.9076, 0.8718],
         [1.3156, 1.5962, 1.0751],
         ...,
         [0.9727, 0.9394, 0.9421],
         [0.9810, 0.8858, 1.0639],
         [1.5618, 0.9126, 0.8976]],
        ...,
        [[1.6683, 0.9419, 0.9134],
         [1.0178, 0.8934, 0.8607],
         [1.3025, 1.4785, 1.0665],
         ...,
         [0.9603, 0.9341, 0.9393],
         [0.9694, 0.8806, 1.0361],
         [1.5421, 0.8694, 0.8800]],
        [[1.7057, 0.9524, 0.9266],
         [1.0605, 0.9316, 0.8905],
         [1.3367, 1.8140, 1.0887],
         ...,
         [0.9941, 0.9480, 0.9464],
         [1.0008, 0.8941, 1.1114],
         [1.5935, 1.0003, 0.9281]],
        [[1.7306, 0.9594, 0.9355],
         [1.0926, 0.9599, 0.9126],
         [1.3600, 2.1018, 1.1037],
         ...,
         [1.0199, 0.9573, 0.9511],
         [1.0243, 0.9032, 1.1685],
         [1.6286, 1.1303, 0.9658]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 72.7181,  13.7460,  15.9388],
         [ 28.3427,  16.2582,  17.1717],
         [ 45.4477, 116.3772,  26.7580],
         ...,
         [ 19.3732,  13.5199,  16.0460],
         [ 20.7667,  11.2905,  39.9109],
         [ 66.7858,  48.0308,  23.9391]],
        [[ 65.5173,  12.4182,  13.5339],
         [ 17.2002,  10.8361,  11.0904],
         [ 38.1950,  47.4568,  23.1643],
         ...,
         [ 11.9722,  11.1440,  15.0138],
         [ 12.8871,   9.3981,  23.6201],
         [ 56.5510,  12.4167,  13.0080]],
        [[ 64.6771,  12.2630,  13.2627],
         [ 16.1690,  10.3053,  10.5061],
         [ 37.3817,  42.4693,  22.7544],
         ...,
         [ 11.2798,  10.8806,  14.8907],
         [ 12.1480,   9.1871,  22.1351],
         [ 55.3985,  10.5022,  12.0620]],
        ...,
        [[ 63.6491,  12.0730,  12.9335],
         [ 14.9746,   9.6825,   9.8236],
         [ 36.3964,  37.0014,  22.2557],
         ...,
         [ 10.4757,  10.5623,  14.7394],
         [ 11.2892,   8.9318,  20.4211],
         [ 54.0005,   8.5312,  10.9830]],
        [[ 66.3028,  12.5632,  13.7893],
         [ 18.2106,  11.3504,  11.6586],
         [ 38.9615,  52.5801,  23.5493],
         ...,
         [ 12.6492,  11.3929,  15.1283],
         [ 13.6093,   9.5973,  25.0794],
         [ 57.6364,  14.4928,  13.9471]],
        [[ 68.0695,  12.8892,  14.3699],
         [ 20.6550,  12.5732,  13.0175],
         [ 40.7078,  65.9276,  24.4216],
         ...,
         [ 14.2817,  11.9619,  15.3841],
         [ 15.3495,  10.0517,  28.6265],
         [ 60.1058,  20.3853,  16.2663]]], device='cuda:0',
       dtype=torch.float64, grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.7810, 0.9803, 0.9608],
         [1.1946, 1.0341, 0.9808],
         [1.4206, 3.1811, 1.1368],
         ...,
         [1.0760, 0.9754, 0.9625],
         [1.0945, 0.9276, 1.3507],
         [1.7026, 1.7155, 1.0909]],
        [[1.6859, 0.9518, 0.9217],
         [1.0473, 0.9179, 0.8819],
         [1.3248, 1.7032, 1.0783],
         ...,
         [0.9782, 0.9245, 0.9458],
         [0.9903, 0.8870, 1.0857],
         [1.5674, 0.9518, 0.9131]],
        [[1.6748, 0.9485, 0.9173],
         [1.0337, 0.9065, 0.8724],
         [1.3140, 1.5962, 1.0716],
         ...,
         [0.9691, 0.9188, 0.9437],
         [0.9806, 0.8825, 1.0616],
         [1.5521, 0.9107, 0.8977]],
        ...,
        [[1.6612, 0.9444, 0.9119],
         [1.0179, 0.8931, 0.8613],
         [1.3010, 1.4790, 1.0635],
         ...,
         [0.9585, 0.9120, 0.9413],
         [0.9692, 0.8770, 1.0337],
         [1.5337, 0.8684, 0.8802]],
        [[1.6962, 0.9549, 0.9258],
         [1.0607, 0.9289, 0.8912],
         [1.3349, 1.8130, 1.0846],
         ...,
         [0.9872, 0.9298, 0.9476],
         [0.9999, 0.8913, 1.1095],
         [1.5817, 0.9963, 0.9284]],
        [[1.7196, 0.9619, 0.9353],
         [1.0930, 0.9551, 0.9133],
         [1.3580, 2.0992, 1.0988],
         ...,
         [1.0087, 0.9420, 0.9518],
         [1.0229, 0.9011, 1.1672],
         [1.6143, 1.1226, 0.9661]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 69.4289,  14.1583,  16.1163],
         [ 28.2456,  14.7072,  17.2263],
         [ 44.5654, 114.8716,  25.7118],
         ...,
         [ 13.3060,  12.3809,  15.9777],
         [ 19.6723,  11.2807,  39.5360],
         [ 62.0102,  44.0277,  24.0284]],
        [[ 63.2299,  12.7130,  13.3078],
         [ 16.9382,  10.5309,  11.1528],
         [ 37.5380,  47.3565,  22.4268],
         ...,
         [ 10.8945,   9.2530,  15.2024],
         [ 12.4832,   8.9856,  23.1667],
         [ 53.8390,  12.0176,  12.9937]],
        [[ 62.5021,  12.5447,  12.9960],
         [ 15.8993,  10.1044,  10.5685],
         [ 36.7490,  42.4367,  22.0505],
         ...,
         [ 10.6281,   8.9254,  15.1091],
         [ 11.7998,   8.7361,  21.6835],
         [ 52.9055,  10.2332,  12.0415]],
        ...,
        [[ 61.6103,  12.3389,  12.6192],
         [ 14.6979,   9.5989,   9.8856],
         [ 35.7927,  37.0350,  21.5922],
         ...,
         [ 10.3066,   8.5348,  14.9941],
         [ 11.0033,   8.4361,  19.9739],
         [ 51.7693,   8.3824,  10.9562]],
        [[ 63.9094,  12.8704,  13.6022],
         [ 17.9576,  10.9407,  11.7209],
         [ 38.2814,  52.4035,  22.7799],
         ...,
         [ 11.1463,   9.5661,  15.2891],
         [ 13.1492,   9.2223,  24.6260],
         [ 54.7155,  13.9401,  13.9395]],
        [[ 65.4347,  13.2247,  14.2752],
         [ 20.4294,  11.9022,  13.0791],
         [ 39.9745,  65.5258,  23.5789],
         ...,
         [ 11.7228,  10.2951,  15.4821],
         [ 14.7474,   9.7668,  28.1796],
         [ 56.7004,  19.3409,  16.2772]]], device='cuda:0',
       dtype=torch.float64, grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.7445, 0.9901, 0.9646],
         [1.2003, 1.0019, 0.9827],
         [1.4160, 3.1498, 1.1207],
         ...,
         [1.0028, 0.9520, 0.9624],
         [1.0870, 0.9284, 1.3456],
         [1.6465, 1.6306, 1.0933]],
        [[1.6626, 0.9591, 0.9190],
         [1.0509, 0.9123, 0.8839],
         [1.3231, 1.7020, 1.0673],
         ...,
         [0.9710, 0.8849, 0.9498],
         [0.9920, 0.8792, 1.0793],
         [1.5385, 0.9442, 0.9139]],
        [[1.6530, 0.9555, 0.9139],
         [1.0371, 0.9032, 0.8744],
         [1.3127, 1.5965, 1.0612],
         ...,
         [0.9675, 0.8779, 0.9483],
         [0.9829, 0.8739, 1.0552],
         [1.5262, 0.9060, 0.8984]],
        ...,
        [[1.6412, 0.9511, 0.9078],
         [1.0212, 0.8924, 0.8633],
         [1.3000, 1.4807, 1.0537],
         ...,
         [0.9632, 0.8695, 0.9464],
         [0.9724, 0.8674, 1.0274],
         [1.5112, 0.8663, 0.8807]],
        [[1.6716, 0.9625, 0.9238],
         [1.0643, 0.9211, 0.8932],
         [1.3329, 1.8102, 1.0730],
         ...,
         [0.9743, 0.8916, 0.9512],
         [1.0008, 0.8843, 1.1031],
         [1.5501, 0.9854, 0.9292]],
        [[1.6918, 0.9701, 0.9347],
         [1.0970, 0.9417, 0.9152],
         [1.3553, 2.0916, 1.0860],
         ...,
         [0.9819, 0.9073, 0.9543],
         [1.0219, 0.8960, 1.1609],
         [1.5763, 1.1013, 0.9673]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 66.2246,  14.8249,  16.3243],
         [ 27.9964,  12.8895,  17.2779],
         [ 43.4141, 112.6519,  25.0833],
         ...,
         [ 11.9584,  13.0491,  14.6543],
         [ 18.2401,  11.4810,  38.0507],
         [ 56.4143,  39.3501,  24.1412]],
        [[ 60.0444,  13.0109,  13.0564],
         [ 16.5190,  10.1851,  11.2553],
         [ 36.7083,  47.2320,  21.5103],
         ...,
         [ 10.8396,   7.6876,  13.7602],
         [ 12.0671,   8.5696,  22.6834],
         [ 50.3591,  11.5945,  12.9846]],
        [[ 59.3207,  12.8024,  12.7003],
         [ 15.4747,   9.8924,  10.6737],
         [ 35.9537,  42.4137,  21.1050],
         ...,
         [ 10.7086,   7.2002,  13.6533],
         [ 11.4655,   8.2649,  21.2765],
         [ 49.6562,   9.9669,  12.0251]],
        ...,
        [[ 58.4344,  12.5482,  12.2718],
         [ 14.2698,   9.5409,   9.9935],
         [ 35.0387,  37.1111,  20.6126],
         ...,
         [ 10.5482,   6.6380,  13.5219],
         [ 10.7603,   7.9017,  19.6509],
         [ 48.7974,   8.2608,  10.9322]],
        [[ 60.7205,  13.2064,  13.3940],
         [ 17.5456,  10.4629,  11.8203],
         [ 37.4190,  52.1651,  21.8914],
         ...,
         [ 10.9619,   8.1668,  13.8595],
         [ 12.6505,   8.8609,  24.0649],
         [ 51.0168,  13.3323,  13.9383]],
        [[ 62.2394,  13.6484,  14.1702],
         [ 20.0424,  11.1031,  13.1695],
         [ 39.0363,  64.9505,  22.7565],
         ...,
         [ 11.2369,   9.3326,  14.0813],
         [ 14.0397,   9.5392,  27.4182],
         [ 52.4988,  18.1443,  16.2979]]], device='cuda:0',
       dtype=torch.float64, grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.7022, 1.0068, 0.9683],
         [1.1970, 0.9653, 0.9838],
         [1.4007, 3.1046, 1.1108],
         ...,
         [0.9850, 0.9687, 0.9412],
         [1.0680, 0.9351, 1.3217],
         [1.5725, 1.5327, 1.0955]],
        [[1.6205, 0.9679, 0.9152],
         [1.0453, 0.9073, 0.8859],
         [1.3121, 1.7017, 1.0527],
         ...,
         [0.9702, 0.8537, 0.9266],
         [0.9864, 0.8727, 1.0718],
         [1.4925, 0.9375, 0.9140]],
        [[1.6109, 0.9634, 0.9094],
         [1.0315, 0.9010, 0.8764],
         [1.3021, 1.5984, 1.0461],
         ...,
         [0.9685, 0.8433, 0.9249],
         [0.9785, 0.8661, 1.0489],
         [1.4832, 0.9026, 0.8984]],
        ...,
        [[1.5992, 0.9580, 0.9024],
         [1.0156, 0.8935, 0.8654],
         [1.2900, 1.4847, 1.0381],
         ...,
         [0.9664, 0.8312, 0.9228],
         [0.9692, 0.8583, 1.0224],
         [1.4719, 0.8660, 0.8806]],
        [[1.6294, 0.9721, 0.9207],
         [1.0589, 0.9132, 0.8951],
         [1.3215, 1.8075, 1.0589],
         ...,
         [0.9718, 0.8640, 0.9282],
         [0.9942, 0.8789, 1.0942],
         [1.5012, 0.9748, 0.9295]],
        [[1.6495, 0.9816, 0.9333],
         [1.0918, 0.9270, 0.9170],
         [1.3429, 2.0817, 1.0730],
         ...,
         [0.9755, 0.8890, 0.9319],
         [1.0125, 0.8934, 1.1488],
         [1.5208, 1.0780, 0.9679]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 63.2294,  16.0231,  16.3859],
         [ 27.2794,  10.6166,  17.3392],
         [ 41.6549, 108.9428,  25.2301],
         ...,
         [ 12.1067,  13.5725,  14.4450],
         [ 16.0347,  12.0212,  33.2355],
         [ 49.0095,  33.1832,  24.2971]],
        [[ 55.0364,  13.3803,  12.7269],
         [ 15.7720,   9.6966,  11.4422],
         [ 35.4925,  47.0360,  20.2183],
         ...,
         [ 10.4823,   7.4656,  12.7780],
         [ 11.5805,   8.0920,  21.8186],
         [ 45.1818,  11.0818,  12.9969]],
        [[ 54.0991,  13.0851,  12.3349],
         [ 14.7378,   9.5884,  10.8684],
         [ 34.7960,  42.3912,  19.6716],
         ...,
         [ 10.2970,   6.9331,  12.5855],
         [ 11.1233,   7.7051,  20.7111],
         [ 44.7293,   9.6750,  12.0283]],
        ...,
        [[ 52.9578,  12.7277,  11.8652],
         [ 13.5479,   9.4558,  10.1960],
         [ 33.9506,  37.2589,  19.0135],
         ...,
         [ 10.0716,   6.3248,  12.3506],
         [ 10.5808,   7.2505,  19.4142],
         [ 44.1739,   8.1746,  10.9259]],
        [[ 55.9163,  13.6588,  13.0998],
         [ 16.7912,   9.7976,  11.9989],
         [ 36.1479,  51.7748,  20.7365],
         ...,
         [ 10.6563,   7.9934,  12.9583],
         [ 12.0194,   8.4664,  22.8937],
         [ 45.6037,  12.5616,  13.9603]],
        [[ 57.9079,  14.2940,  13.9618],
         [ 19.2792,  10.0241,  13.3250],
         [ 37.6372,  63.9896,  21.9276],
         ...,
         [ 11.0506,   9.2940,  13.3653],
         [ 13.0474,   9.3552,  25.4572],
         [ 46.5486,  16.5641,  16.3462]]], device='cuda:0',
       dtype=torch.float64, grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.6660, 1.0378, 0.9689],
         [1.1909, 0.9219, 0.9844],
         [1.3809, 3.0303, 1.1127],
         ...,
         [0.9904, 0.9853, 0.9373],
         [1.0423, 0.9520, 1.2429],
         [1.4781, 1.4058, 1.0976]],
        [[1.5578, 0.9811, 0.9094],
         [1.0389, 0.9021, 0.8885],
         [1.2995, 1.7028, 1.0312],
         ...,
         [0.9689, 0.8543, 0.9102],
         [0.9835, 0.8677, 1.0573],
         [1.4275, 0.9318, 0.9138]],
        [[1.5454, 0.9748, 0.9030],
         [1.0252, 0.8998, 0.8792],
         [1.2903, 1.6032, 1.0223],
         ...,
         [0.9665, 0.8429, 0.9071],
         [0.9774, 0.8594, 1.0392],
         [1.4215, 0.9017, 0.8980]],
        ...,
        [[1.5303, 0.9671, 0.8954],
         [1.0095, 0.8970, 0.8682],
         [1.2791, 1.4932, 1.0116],
         ...,
         [0.9635, 0.8298, 0.9033],
         [0.9702, 0.8497, 1.0181],
         [1.4142, 0.8695, 0.8801]],
        [[1.5694, 0.9871, 0.9154],
         [1.0523, 0.9043, 0.8975],
         [1.3081, 1.8045, 1.0397],
         ...,
         [0.9712, 0.8656, 0.9131],
         [0.9893, 0.8758, 1.0747],
         [1.4331, 0.9636, 0.9294]],
        [[1.5957, 1.0007, 0.9295],
         [1.0852, 0.9092, 0.9191],
         [1.3278, 2.0664, 1.0590],
         ...,
         [0.9765, 0.8935, 0.9198],
         [1.0028, 0.8948, 1.1164],
         [1.4456, 1.0494, 0.9682]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[37.8657, 27.8109, 18.7684],
         [11.5535, 12.7524, 18.5794],
         [28.1204, 69.8999, 28.1744],
         ...,
         [22.1223, 31.4213, 20.6845],
         [20.1877, 12.6050, 21.6713],
         [25.2179, 16.4019, 24.6270]],
        [[23.2904, 14.9696, 10.6563],
         [10.6931,  8.0666, 14.0496],
         [25.9502, 43.5827, 16.5177],
         ...,
         [ 9.3827, 14.9518,  9.3411],
         [11.3539,  8.3051,  9.9503],
         [20.1110, 11.5856, 14.7779]],
        [[21.9305, 13.8647,  9.9352],
         [10.5912,  7.6220, 13.5719],
         [25.6934, 41.1072, 15.4611],
         ...,
         [ 8.4375, 13.6385,  8.4657],
         [10.5732,  7.8871,  9.0363],
         [19.5555, 11.0976, 13.8726]],
        ...,
        [[20.3525, 12.6060,  9.1076],
         [10.4660,  7.1041, 13.0015],
         [25.3783, 38.2292, 14.2433],
         ...,
         [ 7.3957, 12.1678,  7.4923],
         [ 9.6784,  7.3974,  8.0177],
         [18.8872, 10.5204, 12.8256]],
        [[24.6206, 16.0677, 11.3684],
         [10.7881,  8.5001, 14.5056],
         [26.1895, 46.0004, 17.5571],
         ...,
         [10.3490, 16.2762, 10.2295],
         [12.1258,  8.7108, 10.8760],
         [20.6379, 12.0552, 15.6662]],
        [[27.8310, 18.7843, 13.1127],
         [11.0008,  9.5408, 15.5648],
         [26.7253, 51.8205, 20.0880],
         ...,
         [12.8481, 19.6288, 12.5004],
         [14.0199,  9.6772, 13.2350],
         [21.8499, 13.1598, 17.8196]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.2709, 1.2906, 0.9600],
         [0.9232, 0.9677, 0.9570],
         [1.1421, 2.1931, 1.1130],
         ...,
         [1.0629, 1.3680, 0.9912],
         [1.0373, 0.9645, 1.0073],
         [1.1038, 1.0460, 1.0553]],
        [[1.0783, 1.0152, 0.8281],
         [0.9118, 0.8672, 0.8833],
         [1.1135, 1.6288, 0.9234],
         ...,
         [0.8945, 1.0149, 0.8067],
         [0.9206, 0.8723, 0.8166],
         [1.0363, 0.9427, 0.8951]],
        [[1.0603, 0.9915, 0.8164],
         [0.9105, 0.8577, 0.8755],
         [1.1101, 1.5757, 0.9063],
         ...,
         [0.8820, 0.9867, 0.7925],
         [0.9102, 0.8634, 0.8018],
         [1.0289, 0.9322, 0.8804]],
        ...,
        [[1.0395, 0.9646, 0.8029],
         [0.9088, 0.8466, 0.8663],
         [1.1059, 1.5140, 0.8864],
         ...,
         [0.8682, 0.9552, 0.7766],
         [0.8984, 0.8529, 0.7852],
         [1.0201, 0.9198, 0.8634]],
        [[1.0959, 1.0388, 0.8397],
         [0.9131, 0.8765, 0.8907],
         [1.1166, 1.6807, 0.9403],
         ...,
         [0.9073, 1.0433, 0.8212],
         [0.9308, 0.8810, 0.8317],
         [1.0432, 0.9527, 0.9096]],
        [[1.1383, 1.0970, 0.8681],
         [0.9159, 0.8988, 0.9079],
         [1.1237, 1.8055, 0.9815],
         ...,
         [0.9403, 1.1152, 0.8581],
         [0.9558, 0.9018, 0.8700],
         [1.0593, 0.9764, 0.9446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[52.6097, 20.8409, 17.1309],
         [19.9229, 11.6257, 17.7048],
         [34.0055, 90.6627, 25.6693],
         ...,
         [15.9758, 18.1069, 16.2141],
         [14.9215, 12.5549, 18.3471],
         [32.3634, 17.1513, 24.7383]],
        [[36.5190, 14.2093, 11.5677],
         [12.6656,  8.6897, 12.5151],
         [30.6789, 45.8495, 18.0623],
         ...,
         [ 9.7530,  9.6966, 10.4821],
         [11.6546,  8.0992, 13.7993],
         [30.2972, 10.2956, 13.4629]],
        [[34.9054, 13.5513, 11.0189],
         [11.9750,  8.3822, 11.9890],
         [30.2905, 42.1387, 17.2933],
         ...,
         [ 9.1750,  8.9752,  9.9311],
         [11.3035,  7.6715, 13.3212],
         [30.0507,  9.6652, 12.4862]],
        ...,
        [[33.0014, 12.7768, 10.3737],
         [11.1699,  8.0156, 11.3667],
         [29.8151, 37.9478, 16.3842],
         ...,
         [ 8.5051,  8.1540,  9.2873],
         [10.8824,  7.1718, 12.7507],
         [29.7477,  8.9363, 11.3719]],
        [[38.0749, 14.8451, 12.0986],
         [13.3386,  8.9837, 13.0212],
         [31.0420, 49.5649, 18.8026],
         ...,
         [10.3189, 10.4140, 11.0179],
         [11.9884,  8.5153, 14.2559],
         [30.5265, 10.9139, 14.4324]],
        [[41.7468, 16.3506, 13.3581],
         [14.9528,  9.6679, 14.2117],
         [31.8585, 58.8635, 20.5453],
         ...,
         [11.6865, 12.1904, 12.2992],
         [12.7593,  9.5106, 15.3177],
         [31.0386, 12.4131, 16.8257]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.4945, 1.1650, 0.9733],
         [1.0626, 0.9674, 0.9827],
         [1.2487, 2.6622, 1.1122],
         ...,
         [1.0104, 1.1064, 0.9584],
         [0.9965, 0.9873, 0.9931],
         [1.2270, 1.0859, 1.0971]],
        [[1.2819, 1.0228, 0.8828],
         [0.9667, 0.9044, 0.8983],
         [1.2047, 1.7013, 0.9885],
         ...,
         [0.9282, 0.9260, 0.8652],
         [0.9533, 0.8918, 0.9191],
         [1.1997, 0.9389, 0.9137]],
        [[1.2606, 1.0087, 0.8739],
         [0.9575, 0.8978, 0.8897],
         [1.1996, 1.6217, 0.9760],
         ...,
         [0.9205, 0.9106, 0.8562],
         [0.9486, 0.8826, 0.9114],
         [1.1964, 0.9254, 0.8978]],
        ...,
        [[1.2354, 0.9921, 0.8634],
         [0.9469, 0.8900, 0.8796],
         [1.1933, 1.5318, 0.9612],
         ...,
         [0.9117, 0.8929, 0.8458],
         [0.9431, 0.8719, 0.9021],
         [1.1924, 0.9097, 0.8797]],
        [[1.3024, 1.0364, 0.8915],
         [0.9755, 0.9107, 0.9065],
         [1.2095, 1.7809, 1.0005],
         ...,
         [0.9356, 0.9414, 0.8739],
         [0.9577, 0.9007, 0.9266],
         [1.2027, 0.9521, 0.9294]],
        [[1.3510, 1.0687, 0.9120],
         [0.9969, 0.9254, 0.9258],
         [1.2203, 1.9803, 1.0289],
         ...,
         [0.9537, 0.9795, 0.8947],
         [0.9679, 0.9220, 0.9438],
         [1.2095, 0.9843, 0.9684]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8696, 31.4213, 24.6210],
         [22.1223, 44.9853, 41.9265],
         [35.8352, 17.2730, 30.4226],
         ...,
         [22.2164, 24.2647, 17.2635],
         [38.6964, 30.2877, 25.2458],
         [38.6964, 31.4213, 27.4552]],
        [[10.5609, 14.9518,  9.5269],
         [ 9.3827, 23.0323, 33.7780],
         [12.2136, 13.8788, 15.5474],
         ...,
         [ 9.5940, 14.8373, 10.2093],
         [11.5794, 19.0836,  9.5617],
         [11.5794, 14.9518, 19.3236]],
        [[10.4093, 13.6385,  8.4705],
         [ 8.4375, 21.2006, 32.8863],
         [10.6900, 13.5079, 14.3077],
         ...,
         [ 8.6468, 13.9609,  9.5666],
         [ 9.9729, 18.0230,  8.4789],
         [ 9.9729, 13.6385, 18.5015]],
        ...,
        [[10.2241, 12.1678,  7.3207],
         [ 7.3957, 19.1284, 31.8123],
         [ 9.0605, 13.0614, 12.9055],
         ...,
         [ 7.6002, 12.9447,  8.8248],
         [ 8.2854, 16.7882,  7.3039],
         [ 8.2854, 12.1678, 17.5295]],
        [[10.7029, 16.2762, 10.6189],
         [10.3490, 24.8637, 34.6226],
         [13.8124, 14.2302, 16.7872],
         ...,
         [10.5603, 15.6953, 10.8410],
         [13.2914, 20.1181, 10.6838],
         [13.2914, 16.2762, 20.1151]],
        [[11.0229, 19.6288, 13.4918],
         [12.8481, 29.4364, 36.5619],
         [18.1201, 15.0374, 19.8838],
         ...,
         [13.0510, 17.7682, 12.3766],
         [18.0183, 22.6036, 13.6478],
         [18.0183, 19.6288, 21.9781]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9274, 1.4460, 1.0463],
         [1.0629, 1.7369, 1.3278],
         [1.2441, 1.1426, 1.1407],
         ...,
         [1.0641, 1.2925, 0.9266],
         [1.2819, 1.4217, 1.0565],
         [1.2819, 1.4460, 1.0924]],
        [[0.9101, 1.0928, 0.8008],
         [0.8945, 1.2661, 1.1952],
         [0.9319, 1.0698, 0.8987],
         ...,
         [0.8973, 1.0904, 0.8119],
         [0.9235, 1.1814, 0.8014],
         [0.9235, 1.0928, 0.9601]],
        [[0.9081, 1.0647, 0.7836],
         [0.8820, 1.2268, 1.1807],
         [0.9118, 1.0619, 0.8785],
         ...,
         [0.8848, 1.0716, 0.8014],
         [0.9023, 1.1587, 0.7837],
         [0.9023, 1.0647, 0.9468]],
        ...,
        [[0.9056, 1.0331, 0.7649],
         [0.8682, 1.1824, 1.1633],
         [0.8902, 1.0523, 0.8557],
         ...,
         [0.8709, 1.0498, 0.7894],
         [0.8800, 1.1322, 0.7646],
         [0.8800, 1.0331, 0.9309]],
        [[0.9120, 1.1212, 0.8185],
         [0.9073, 1.3054, 1.2090],
         [0.9530, 1.0774, 0.9189],
         ...,
         [0.9101, 1.1088, 0.8222],
         [0.9462, 1.2036, 0.8196],
         [0.9462, 1.1212, 0.9730]],
        [[0.9162, 1.1931, 0.8653],
         [0.9403, 1.4034, 1.2405],
         [1.0100, 1.0947, 0.9692],
         ...,
         [0.9430, 1.1532, 0.8471],
         [1.0086, 1.2569, 0.8678],
         [1.0086, 1.1931, 1.0033]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[41.0655, 22.9819, 18.1463],
         [15.2379, 13.1486, 19.2741],
         [27.5000, 59.2079, 25.2427],
         ...,
         [17.2697, 18.4688, 16.9463],
         [20.6611, 12.3504, 15.6546],
         [25.8243, 15.6105, 23.7168]],
        [[25.5928, 14.4082, 10.8523],
         [11.7714, 10.4840, 15.3756],
         [24.0868, 41.7828, 16.8022],
         ...,
         [ 9.6827, 10.9851, 10.0740],
         [12.0853,  9.5028, 12.1262],
         [22.8732, 10.6544, 14.2936]],
        [[24.1377, 13.5990, 10.1832],
         [11.4013, 10.1941, 14.9514],
         [23.6949, 40.0183, 15.9766],
         ...,
         [ 9.0135, 10.3008,  9.4459],
         [11.3091,  9.1994, 11.7488],
         [22.5321, 10.1623, 13.4252]],
        ...,
        [[22.4462, 12.6576,  9.4098],
         [10.9580,  9.8455, 14.4412],
         [23.2174, 37.9314, 15.0081],
         ...,
         [ 8.2467,  9.5105,  8.7204],
         [10.4146,  8.8363, 11.2967],
         [22.1159,  9.5831, 12.4203]],
        [[27.0139, 15.1979, 11.5090],
         [12.1239, 10.7588, 15.7778],
         [24.4544, 43.4809, 17.6023],
         ...,
         [10.3447, 11.6571, 10.6910],
         [12.8492,  9.7918, 12.4854],
         [23.1926, 11.1298, 15.1452]],
        [[30.4353, 17.0971, 13.1022],
         [12.9393, 11.3912, 16.7032],
         [25.2855, 47.4762, 19.5051],
         ...,
         [11.9699, 13.2890, 12.1893],
         [14.7099, 10.4609, 13.3160],
         [23.9134, 12.2553, 17.2082]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.3356, 1.2351, 0.9776],
         [0.9943, 1.0243, 0.9960],
         [1.1564, 2.0120, 1.0931],
         ...,
         [1.0212, 1.1384, 0.9581],
         [1.0660, 1.0072, 0.9371],
         [1.1342, 1.0771, 1.0682]],
        [[1.1312, 1.0513, 0.8590],
         [0.9485, 0.9671, 0.9326],
         [1.1113, 1.6383, 0.9558],
         ...,
         [0.9209, 0.9779, 0.8463],
         [0.9527, 0.9461, 0.8797],
         [1.0952, 0.9708, 0.9150]],
        [[1.1119, 1.0339, 0.8481],
         [0.9436, 0.9609, 0.9257],
         [1.1061, 1.6005, 0.9423],
         ...,
         [0.9121, 0.9632, 0.8361],
         [0.9424, 0.9396, 0.8736],
         [1.0907, 0.9602, 0.9008]],
        ...,
        [[1.0896, 1.0138, 0.8355],
         [0.9378, 0.9535, 0.9174],
         [1.0998, 1.5557, 0.9266],
         ...,
         [0.9019, 0.9463, 0.8243],
         [0.9306, 0.9318, 0.8662],
         [1.0852, 0.9478, 0.8845]],
        [[1.1499, 1.0682, 0.8697],
         [0.9532, 0.9730, 0.9391],
         [1.1161, 1.6747, 0.9688],
         ...,
         [0.9296, 0.9923, 0.8564],
         [0.9627, 0.9523, 0.8856],
         [1.0994, 0.9810, 0.9288]],
        [[1.1952, 1.1090, 0.8956],
         [0.9639, 0.9866, 0.9542],
         [1.1271, 1.7604, 0.9997],
         ...,
         [0.9511, 1.0273, 0.8807],
         [0.9873, 0.9667, 0.8991],
         [1.1090, 1.0051, 0.9624]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[30.0793, 21.9077, 18.5875],
         [12.4283, 12.1769, 19.2808],
         [27.4661, 37.3073, 28.4653],
         ...,
         [18.4448, 15.8633, 16.9597],
         [19.0460, 12.2090, 14.8858],
         [25.3499, 15.9691, 22.4657]],
        [[18.2755, 14.0037, 10.6179],
         [11.0170,  9.1553, 16.4288],
         [18.6377, 29.2132, 15.5928],
         ...,
         [ 9.6097,  9.7379, 10.3281],
         [11.2637,  9.0816, 13.1550],
         [19.4382, 10.5862, 15.3876]],
        [[17.1823, 13.2490,  9.9068],
         [10.8539,  8.8377, 16.1065],
         [17.7642, 28.3421, 14.4732],
         ...,
         [ 8.8645,  9.1670,  9.7131],
         [10.5546,  8.7550, 12.9552],
         [18.8097, 10.0609, 14.6834]],
        ...,
        [[15.9159, 12.3686,  9.0901],
         [10.6547,  8.4588, 15.7151],
         [16.7367, 27.2968, 13.1948],
         ...,
         [ 8.0195,  8.5048,  9.0004],
         [ 9.7362,  8.3658, 12.7115],
         [18.0577,  9.4450, 13.8540]],
        [[19.3464, 14.7385, 11.3196],
         [11.1699,  9.4587, 16.7321],
         [19.4822, 30.0413, 16.7031],
         ...,
         [10.3531, 10.2964, 10.9304],
         [11.9605,  9.3940, 13.3421],
         [20.0372, 11.0954, 16.0677]],
        [[21.9368, 16.4994, 13.0365],
         [11.5146, 10.1641, 17.4214],
         [21.4837, 31.9525, 19.4409],
         ...,
         [12.2034, 11.6448, 12.3868],
         [13.6547, 10.1219, 13.7646],
         [21.4249, 12.3075, 17.6767]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.1853, 1.1957, 0.9870],
         [0.9520, 0.9870, 0.9983],
         [1.1507, 1.5259, 1.1477],
         ...,
         [1.0315, 1.0660, 0.9606],
         [1.0395, 0.9877, 0.9268],
         [1.1228, 1.0683, 1.0501]],
        [[1.0293, 1.0262, 0.8574],
         [0.9333, 0.9222, 0.9519],
         [1.0341, 1.3523, 0.9383],
         ...,
         [0.9148, 0.9347, 0.8527],
         [0.9366, 0.9206, 0.8987],
         [1.0446, 0.9529, 0.9350]],
        [[1.0148, 1.0100, 0.8458],
         [0.9312, 0.9154, 0.9467],
         [1.0225, 1.3336, 0.9201],
         ...,
         [0.9049, 0.9225, 0.8427],
         [0.9272, 0.9136, 0.8954],
         [1.0363, 0.9416, 0.9235]],
        ...,
        [[0.9981, 0.9911, 0.8326],
         [0.9286, 0.9073, 0.9403],
         [1.0089, 1.3112, 0.8993],
         ...,
         [0.8937, 0.9083, 0.8311],
         [0.9164, 0.9053, 0.8915],
         [1.0264, 0.9284, 0.9100]],
        [[1.0434, 1.0419, 0.8688],
         [0.9354, 0.9287, 0.9568],
         [1.0452, 1.3701, 0.9564],
         ...,
         [0.9246, 0.9467, 0.8625],
         [0.9458, 0.9273, 0.9017],
         [1.0526, 0.9638, 0.9460]],
        [[1.0777, 1.0797, 0.8967],
         [0.9399, 0.9438, 0.9681],
         [1.0717, 1.4111, 1.0009],
         ...,
         [0.9490, 0.9756, 0.8862],
         [0.9682, 0.9429, 0.9086],
         [1.0709, 0.9898, 0.9722]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[29.9503, 16.6071, 17.2174],
         [17.6113, 13.1288, 17.8856],
         [27.8236, 29.7062, 29.4960],
         ...,
         [14.5236, 12.3283, 17.7029],
         [12.1314, 12.2790, 24.8844],
         [25.6663, 14.7488, 21.8261]],
        [[18.2946, 12.0989, 11.1915],
         [11.7663,  7.6166, 15.1852],
         [17.6713, 21.0502, 15.4550],
         ...,
         [10.0337,  7.8991, 12.2494],
         [10.8477,  8.9276, 20.8551],
         [23.2517,  9.8498, 14.9436]],
        [[17.2116, 11.6338, 10.6104],
         [11.1933,  7.1202, 14.8806],
         [16.7056, 20.1715, 14.2667],
         ...,
         [ 9.5847,  7.4756, 11.7036],
         [10.6985,  8.5822, 20.4041],
         [22.9691,  9.3697, 14.2590]],
        ...,
        [[15.9562, 11.0812,  9.9308],
         [10.5207,  6.5488, 14.5111],
         [15.5802, 19.1318, 12.9180],
         ...,
         [ 9.0552,  6.9814, 11.0597],
         [10.5163,  8.1721, 19.8577],
         [22.6230,  8.8061, 13.4528]],
        [[19.3548, 12.5449, 11.7563],
         [12.3213,  8.1056, 15.4719],
         [18.6122, 21.8954, 16.6398],
         ...,
         [10.4668,  8.3113, 12.7759],
         [10.9872,  9.2588, 21.2804],
         [23.5157, 10.3149, 15.6048]],
        [[21.9168, 13.5880, 13.1054],
         [13.6404,  9.2987, 16.1239],
         [20.8697, 23.8824, 19.5856],
         ...,
         [11.4900,  9.2988, 14.0193],
         [11.3016, 10.0338, 22.2499],
         [24.1090, 11.4204, 17.1692]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.2069, 1.0575, 0.9834],
         [1.0438, 0.9829, 0.9943],
         [1.1788, 1.3384, 1.1831],
         ...,
         [1.0030, 0.9658, 0.9913],
         [0.9714, 0.9647, 1.1081],
         [1.1503, 1.0177, 1.0584]],
        [[1.0529, 0.9609, 0.8854],
         [0.9666, 0.8647, 0.9504],
         [1.0446, 1.1528, 0.9547],
         ...,
         [0.9437, 0.8708, 0.9026],
         [0.9545, 0.8929, 1.0426],
         [1.1184, 0.9126, 0.9464]],
        [[1.0386, 0.9509, 0.8760],
         [0.9590, 0.8541, 0.9454],
         [1.0319, 1.1340, 0.9354],
         ...,
         [0.9378, 0.8617, 0.8937],
         [0.9525, 0.8855, 1.0352],
         [1.1147, 0.9023, 0.9353]],
        ...,
        [[1.0220, 0.9390, 0.8649],
         [0.9501, 0.8418, 0.9394],
         [1.0170, 1.1117, 0.9135],
         ...,
         [0.9308, 0.8511, 0.8833],
         [0.9501, 0.8767, 1.0264],
         [1.1101, 0.8903, 0.9222]],
        [[1.0669, 0.9704, 0.8946],
         [0.9739, 0.8752, 0.9550],
         [1.0571, 1.1709, 0.9740],
         ...,
         [0.9494, 0.8796, 0.9112],
         [0.9563, 0.9000, 1.0495],
         [1.1219, 0.9226, 0.9572]],
        [[1.1007, 0.9928, 0.9165],
         [0.9914, 0.9008, 0.9656],
         [1.0869, 1.2135, 1.0219],
         ...,
         [0.9630, 0.9008, 0.9314],
         [0.9605, 0.9166, 1.0653],
         [1.1297, 0.9463, 0.9826]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[25.8224, 13.8322, 16.2728],
         [19.5321, 13.2819, 17.2367],
         [28.5598, 16.5696, 30.2233],
         ...,
         [11.4964, 12.5181, 20.0702],
         [12.5648, 12.9029, 38.5008],
         [28.0713, 13.4607, 21.1943]],
        [[16.1152,  9.4861, 11.8210],
         [12.1646,  7.5218, 15.0342],
         [16.2846, 13.4121, 15.5958],
         ...,
         [10.7590, 10.7881, 15.4810],
         [10.3504,  7.8543, 35.6358],
         [26.4921, 11.5261, 14.9914]],
        [[15.2016,  9.0534, 11.3625],
         [11.4720,  7.0106, 14.7819],
         [15.1907, 13.0657, 14.3694],
         ...,
         [10.6710, 10.5913, 14.9913],
         [10.1050,  7.3862, 35.2963],
         [26.3029, 11.3068, 14.3624]],
        ...,
        [[14.1393,  8.5437, 10.8180],
         [10.6670,  6.4242, 14.4746],
         [13.9345, 12.6481, 12.9805],
         ...,
         [10.5629, 10.3520, 14.4051],
         [ 9.8084,  6.8438, 34.8794],
         [26.0699, 11.0405, 13.6183]],
        [[17.0074,  9.9040, 12.2608],
         [12.8410,  8.0269, 15.2709],
         [17.3645, 13.7401, 16.8208],
         ...,
         [10.8408, 10.9731, 15.9472],
         [10.5823,  8.3128, 35.9521],
         [26.6679, 11.7323, 15.5965]],
        [[19.1547, 10.8923, 13.2900],
         [14.4699,  9.2645, 15.8066],
         [20.0074, 14.4926, 19.8751],
         ...,
         [11.0235, 11.3925, 17.0263],
         [11.1126,  9.4213, 36.6601],
         [27.0602, 12.2005, 17.0197]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.1637, 0.9947, 0.9843],
         [1.0805, 0.9829, 1.0000],
         [1.1999, 1.0534, 1.2112],
         ...,
         [0.9743, 0.9665, 1.0461],
         [0.9885, 0.9748, 1.3459],
         [1.1934, 0.9867, 1.0644]],
        [[1.0354, 0.9015, 0.9119],
         [0.9832, 0.8594, 0.9642],
         [1.0376, 0.9857, 0.9733],
         ...,
         [0.9646, 0.9294, 0.9715],
         [0.9592, 0.8665, 1.2993],
         [1.1725, 0.9453, 0.9635]],
        [[1.0233, 0.8922, 0.9045],
         [0.9740, 0.8484, 0.9601],
         [1.0232, 0.9783, 0.9534],
         ...,
         [0.9634, 0.9252, 0.9635],
         [0.9560, 0.8565, 1.2938],
         [1.1700, 0.9406, 0.9533]],
        ...,
        [[1.0093, 0.8813, 0.8956],
         [0.9634, 0.8359, 0.9551],
         [1.0066, 0.9693, 0.9308],
         ...,
         [0.9620, 0.9201, 0.9540],
         [0.9520, 0.8449, 1.2870],
         [1.1669, 0.9348, 0.9412]],
        [[1.0472, 0.9105, 0.9191],
         [0.9921, 0.8702, 0.9681],
         [1.0519, 0.9927, 0.9933],
         ...,
         [0.9657, 0.9334, 0.9791],
         [0.9623, 0.8764, 1.3044],
         [1.1748, 0.9497, 0.9733]],
        [[1.0756, 0.9317, 0.9358],
         [1.0136, 0.8968, 0.9768],
         [1.0868, 1.0089, 1.0429],
         ...,
         [0.9681, 0.9424, 0.9966],
         [0.9693, 0.9001, 1.3159],
         [1.1800, 0.9597, 0.9965]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[28.1736, 15.3520, 16.7834],
         [18.4152, 13.1914, 17.6176],
         [28.0963, 23.8089, 29.8701],
         ...,
         [12.9488, 12.5214, 18.4939],
         [11.4925, 12.5556, 31.2041],
         [26.3978, 13.8728, 21.5548]],
        [[17.3287, 10.8941, 11.4401],
         [11.9270,  7.5714, 15.1190],
         [17.0647, 17.3306, 15.4744],
         ...,
         [10.3155,  8.6101, 13.3865],
         [10.7383,  8.3910, 25.7938],
         [24.5596, 10.2532, 14.9639]],
        [[16.3169, 10.4412, 10.9100],
         [11.3026,  7.0685, 14.8354],
         [16.0432, 16.6625, 14.2645],
         ...,
         [10.0292,  8.2201, 12.8615],
         [10.6485,  7.9826, 25.1930],
         [24.3411,  9.8765, 14.3029]],
        ...,
        [[15.1428,  9.9052, 10.2860],
         [10.5729,  6.4905, 14.4909],
         [14.8600, 15.8689, 12.8935],
         ...,
         [ 9.6849,  7.7604, 12.2384],
         [10.5380,  7.5033, 24.4666],
         [24.0727,  9.4282, 13.5230]],
        [[18.3185, 11.3297, 11.9523],
         [12.5340,  8.0673, 15.3856],
         [18.0654, 17.9712, 16.6823],
         ...,
         [10.5870,  8.9867, 13.8902],
         [10.8220,  8.7865, 26.3613],
         [24.7630, 10.6137, 15.6012]],
        [[20.7072, 12.3534, 13.1653],
         [13.9851,  9.2798, 15.9906],
         [20.4861, 19.4697, 19.6919],
         ...,
         [11.2118,  9.8768, 15.0698],
         [11.0088,  9.7265, 27.6581],
         [25.2179, 11.4546, 17.1053]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.1961, 1.0291, 0.9843],
         [1.0671, 0.9828, 0.9979],
         [1.1950, 1.2104, 1.1972],
         ...,
         [0.9949, 0.9684, 1.0122],
         [0.9756, 0.9691, 1.2189],
         [1.1726, 0.9974, 1.0619]],
        [[1.0527, 0.9335, 0.8974],
         [0.9814, 0.8622, 0.9573],
         [1.0492, 1.0715, 0.9631],
         ...,
         [0.9601, 0.8845, 0.9291],
         [0.9656, 0.8798, 1.1309],
         [1.1483, 0.9198, 0.9548]],
        [[1.0394, 0.9238, 0.8888],
         [0.9731, 0.8515, 0.9527],
         [1.0357, 1.0572, 0.9434],
         ...,
         [0.9563, 0.8762, 0.9206],
         [0.9645, 0.8711, 1.1211],
         [1.1454, 0.9117, 0.9440]],
        ...,
        [[1.0238, 0.9123, 0.8787],
         [0.9635, 0.8391, 0.9471],
         [1.0201, 1.0402, 0.9211],
         ...,
         [0.9517, 0.8663, 0.9104],
         [0.9630, 0.8608, 1.1093],
         [1.1419, 0.9021, 0.9313]],
        [[1.0658, 0.9428, 0.9058],
         [0.9894, 0.8729, 0.9616],
         [1.0625, 1.0853, 0.9827],
         ...,
         [0.9636, 0.8926, 0.9373],
         [0.9667, 0.8883, 1.1401],
         [1.1510, 0.9275, 0.9651]],
        [[1.0974, 0.9648, 0.9255],
         [1.0085, 0.8989, 0.9715],
         [1.0945, 1.1174, 1.0317],
         ...,
         [0.9719, 0.9117, 0.9565],
         [0.9692, 0.9085, 1.1612],
         [1.1570, 0.9455, 0.9896]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[21.0181, 12.8032, 15.9130],
         [13.8612, 13.3068, 15.9237],
         [27.4657, 15.3338, 30.1001],
         ...,
         [11.7746, 12.4745, 16.8978],
         [14.4199, 13.3473, 31.2892],
         [28.5784, 12.0600, 22.0769]],
        [[13.8930,  8.1823, 12.2803],
         [10.9196,  7.5113, 14.0178],
         [17.7015, 12.6704, 15.6495],
         ...,
         [10.8282,  8.5382, 14.2234],
         [ 9.9647,  7.4969, 25.6828],
         [26.9044, 10.6966, 15.3756]],
        [[13.1990,  7.7412, 11.8926],
         [10.6019,  6.9980, 13.7984],
         [16.7646, 12.3747, 14.4324],
         ...,
         [10.7165,  8.1467, 13.9232],
         [ 9.5191,  6.9802, 25.0627],
         [26.7041, 10.5389, 14.7023]],
        ...,
        [[12.3855,  7.2266, 11.4284],
         [10.2204,  6.4093, 13.5307],
         [15.6704, 12.0172, 13.0524],
         ...,
         [10.5795,  7.6857, 13.5595],
         [ 8.9937,  6.3882, 24.3138],
         [26.4575, 10.3464, 13.9074]],
        [[14.5662,  8.6119, 12.6495],
         [11.2214,  8.0186, 14.2236],
         [18.6129, 12.9497, 16.8642],
         ...,
         [10.9324,  8.9163, 14.5062],
         [10.3946,  8.0078, 26.2690],
         [27.0906, 10.8443, 16.0246]],
        [[16.1692,  9.6413, 13.5037],
         [11.9172,  9.2626, 14.6883],
         [20.7934, 13.5880, 19.8887],
         ...,
         [11.1659,  9.8109, 15.1504],
         [11.4099,  9.2616, 27.6102],
         [27.5062, 11.1774, 17.5553]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0882, 0.9716, 0.9792],
         [0.9936, 0.9824, 0.9794],
         [1.1734, 1.0259, 1.2100],
         ...,
         [0.9661, 0.9646, 0.9953],
         [1.0010, 0.9833, 1.2293],
         [1.1881, 0.9557, 1.0795]],
        [[0.9941, 0.8725, 0.9202],
         [0.9548, 0.8582, 0.9484],
         [1.0444, 0.9688, 0.9750],
         ...,
         [0.9536, 0.8802, 0.9518],
         [0.9421, 0.8579, 1.1381],
         [1.1660, 0.9265, 0.9705]],
        [[0.9849, 0.8631, 0.9138],
         [0.9506, 0.8472, 0.9448],
         [1.0320, 0.9624, 0.9552],
         ...,
         [0.9521, 0.8718, 0.9469],
         [0.9362, 0.8468, 1.1281],
         [1.1634, 0.9231, 0.9595]],
        ...,
        [[0.9741, 0.8521, 0.9063],
         [0.9455, 0.8345, 0.9405],
         [1.0175, 0.9548, 0.9327],
         ...,
         [0.9503, 0.8619, 0.9410],
         [0.9293, 0.8341, 1.1159],
         [1.1601, 0.9190, 0.9466]],
        [[1.0029, 0.8818, 0.9262],
         [0.9587, 0.8690, 0.9518],
         [1.0564, 0.9748, 0.9947],
         ...,
         [0.9549, 0.8883, 0.9564],
         [0.9478, 0.8688, 1.1477],
         [1.1685, 0.9296, 0.9811]],
        [[1.0241, 0.9038, 0.9401],
         [0.9679, 0.8957, 0.9593],
         [1.0852, 0.9885, 1.0439],
         ...,
         [0.9580, 0.9075, 0.9668],
         [0.9612, 0.8957, 1.1695],
         [1.1740, 0.9368, 1.0059]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6335, 12.0813, 15.5308],
         [12.5108, 12.2946, 16.4715],
         [26.9483, 12.5467, 28.2506],
         ...,
         [15.3973, 12.2197, 16.5820],
         [13.7656, 13.2808, 27.2244],
         [26.9518, 11.3195, 22.0039]],
        [[10.6534, 10.1730, 14.4043],
         [10.3649,  8.8945, 15.1210],
         [17.4146,  7.9001, 16.4249],
         ...,
         [11.0039,  9.0574, 15.1108],
         [10.1593,  7.5223, 22.4878],
         [24.5846,  9.3644, 15.7599]],
        [[10.5380,  9.9588, 14.2706],
         [10.1263,  8.5451, 14.9617],
         [16.4984,  7.4604, 15.3585],
         ...,
         [10.5557,  8.7278, 14.9381],
         [ 9.7844,  7.0112, 21.9620],
         [24.3064,  9.1471, 15.1220]],
        ...,
        [[10.3965,  9.6992, 14.1065],
         [ 9.8377,  8.1304, 14.7664],
         [15.4279,  6.9485, 14.1306],
         ...,
         [10.0247,  8.3354, 14.7263],
         [ 9.3382,  6.4248, 21.3264],
         [23.9655,  8.8845, 14.3661]],
        [[10.7611, 10.3749, 14.5288],
         [10.5902,  9.2297, 15.2696],
         [18.3056,  8.3289, 17.4751],
         ...,
         [11.4346,  9.3728, 15.2721],
         [10.5182,  8.0272, 22.9845],
         [24.8442,  9.5695, 16.3726]],
        [[11.0026, 10.8346, 14.8073],
         [11.1049, 10.0149, 15.6026],
         [20.4364,  9.3596, 20.0363],
         ...,
         [12.4456, 10.1081, 15.6342],
         [11.3557,  9.2646, 24.1195],
         [25.4269, 10.0382, 17.8104]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9715, 0.9572, 0.9751],
         [0.9831, 0.9618, 0.9904],
         [1.1739, 0.9672, 1.1820],
         ...,
         [1.0213, 0.9602, 0.9922],
         [0.9997, 0.9829, 1.1653],
         [1.1740, 0.9409, 1.0804]],
        [[0.9586, 0.9163, 0.9568],
         [0.9548, 0.8889, 0.9685],
         [1.0479, 0.8675, 0.9897],
         ...,
         [0.9632, 0.8923, 0.9683],
         [0.9521, 0.8594, 1.0883],
         [1.1427, 0.8989, 0.9789]],
        [[0.9571, 0.9117, 0.9546],
         [0.9516, 0.8814, 0.9659],
         [1.0358, 0.8581, 0.9723],
         ...,
         [0.9573, 0.8853, 0.9655],
         [0.9471, 0.8485, 1.0797],
         [1.1390, 0.8943, 0.9685]],
        ...,
        [[0.9552, 0.9061, 0.9520],
         [0.9478, 0.8725, 0.9627],
         [1.0217, 0.8471, 0.9524],
         ...,
         [0.9503, 0.8769, 0.9620],
         [0.9412, 0.8359, 1.0694],
         [1.1345, 0.8886, 0.9562]],
        [[0.9600, 0.9206, 0.9588],
         [0.9577, 0.8960, 0.9709],
         [1.0597, 0.8767, 1.0068],
         ...,
         [0.9689, 0.8991, 0.9709],
         [0.9568, 0.8703, 1.0964],
         [1.1461, 0.9033, 0.9888]],
        [[0.9632, 0.9305, 0.9634],
         [0.9645, 0.9129, 0.9763],
         [1.0879, 0.8988, 1.0484],
         ...,
         [0.9823, 0.9149, 0.9768],
         [0.9679, 0.8968, 1.1148],
         [1.1538, 0.9134, 1.0122]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6542, 12.6400, 14.9897],
         [13.7141, 12.4475, 16.4278],
         [26.3524, 12.5354, 28.9904],
         ...,
         [13.5898, 12.9444, 14.8880],
         [11.5344, 13.0538, 22.0344],
         [26.1180, 10.0892, 22.3853]],
        [[10.6443,  8.1680, 12.0402],
         [10.0900,  8.5889, 14.6738],
         [18.9661,  9.1152, 16.1732],
         ...,
         [10.9070,  7.8025, 13.5233],
         [10.8003,  7.6830, 18.4212],
         [22.7464,  9.0067, 15.5480]],
        [[10.5255,  7.7382, 11.7180],
         [ 9.7138,  8.2034, 14.4701],
         [18.2094,  8.7627, 15.0460],
         ...,
         [10.6141,  7.3286, 13.3633],
         [10.7127,  7.1950, 18.0173],
         [22.3605,  8.8811, 14.8621]],
        ...,
        [[10.3799,  7.2361, 11.3301],
         [ 9.2664,  7.7488, 14.2212],
         [17.3121,  8.3441, 13.7555],
         ...,
         [10.2614,  6.7802, 13.1673],
         [10.6050,  6.6323, 17.5283],
         [21.8906,  8.7276, 14.0526]],
        [[10.7551,  8.5859, 12.3455],
         [10.4501,  8.9610, 14.8644],
         [19.6926,  9.4533, 17.2887],
         ...,
         [11.1846,  8.2672, 13.6727],
         [10.8818,  8.1628, 18.8022],
         [23.1086,  9.1243, 16.2093]],
        [[11.0038,  9.5854, 13.0469],
         [11.2910,  9.8400, 15.2937],
         [21.3957, 10.2442, 20.0301],
         ...,
         [11.8224,  9.3930, 14.0082],
         [11.0638,  9.3303, 19.6709],
         [23.9283,  9.3892, 17.7698]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9708, 0.9725, 0.9686],
         [0.9981, 0.9684, 0.9920],
         [1.1651, 0.9703, 1.1963],
         ...,
         [0.9964, 0.9790, 0.9670],
         [0.9692, 0.9814, 1.0832],
         [1.1620, 0.9178, 1.0889]],
        [[0.9575, 0.8766, 0.9206],
         [0.9502, 0.8856, 0.9635],
         [1.0675, 0.8969, 0.9879],
         ...,
         [0.9610, 0.8688, 0.9448],
         [0.9595, 0.8662, 1.0244],
         [1.1174, 0.8946, 0.9777]],
        [[0.9559, 0.8674, 0.9154],
         [0.9452, 0.8774, 0.9602],
         [1.0575, 0.8894, 0.9695],
         ...,
         [0.9571, 0.8586, 0.9422],
         [0.9584, 0.8557, 1.0178],
         [1.1123, 0.8919, 0.9665]],
        ...,
        [[0.9540, 0.8566, 0.9091],
         [0.9393, 0.8676, 0.9561],
         [1.0456, 0.8804, 0.9485],
         ...,
         [0.9524, 0.8468, 0.9390],
         [0.9570, 0.8437, 1.0099],
         [1.1061, 0.8886, 0.9534]],
        [[0.9589, 0.8856, 0.9256],
         [0.9549, 0.8936, 0.9666],
         [1.0771, 0.9042, 1.0060],
         ...,
         [0.9646, 0.8787, 0.9472],
         [0.9606, 0.8765, 1.0306],
         [1.1222, 0.8971, 0.9884]],
        [[0.9622, 0.9070, 0.9370],
         [0.9660, 0.9125, 0.9735],
         [1.0996, 0.9211, 1.0506],
         ...,
         [0.9731, 0.9029, 0.9526],
         [0.9630, 0.9015, 1.0447],
         [1.1330, 0.9028, 1.0138]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5674, 12.5881, 14.7701],
         [13.1858, 12.7269, 15.7127],
         [26.0752, 12.5701, 28.8444],
         ...,
         [13.4086, 12.7644, 14.9796],
         [11.6661, 13.0453, 22.0967],
         [26.2808, 10.1366, 22.6413]],
        [[10.6855,  8.3419, 12.4616],
         [10.1996,  8.1058, 14.0218],
         [20.3543,  9.3519, 16.2696],
         ...,
         [10.8989,  8.0484, 13.9747],
         [10.6391,  7.6913, 18.5050],
         [23.6507,  9.2620, 15.2705]],
        [[10.5811,  7.9276, 12.2022],
         [ 9.8804,  7.6655, 13.8255],
         [19.7396,  9.0157, 15.1563],
         ...,
         [10.6229,  7.6017, 13.8551],
         [10.5185,  7.2044, 18.1031],
         [23.3440,  9.1591, 14.5438]],
        ...,
        [[10.4530,  7.4419, 11.8877],
         [ 9.4982,  7.1522, 13.5858],
         [19.0025,  8.6152, 13.8798],
         ...,
         [10.2899,  7.0817, 13.7081],
         [10.3706,  6.6427, 17.6164],
         [22.9689,  9.0330, 13.6898]],
        [[10.7828,  8.7435, 12.7060],
         [10.5033,  8.5347, 14.2054],
         [20.9387,  9.6734, 17.3699],
         ...,
         [11.1601,  8.4840, 14.0861],
         [10.7518,  8.1701, 18.8840],
         [23.9375,  9.3580, 15.9735]],
        [[11.0006,  9.6996, 13.2625],
         [11.2061,  9.5631, 14.6192],
         [22.2884, 10.4224, 20.0685],
         ...,
         [11.7589,  9.5304, 14.3349],
         [11.0046,  9.3345, 19.7480],
         [24.5826,  9.5734, 17.6416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9752, 0.9738, 0.9688],
         [0.9965, 0.9768, 0.9841],
         [1.1669, 0.9734, 1.1977],
         ...,
         [0.9995, 0.9776, 0.9722],
         [0.9765, 0.9836, 1.0879],
         [1.1696, 0.9212, 1.0968]],
        [[0.9635, 0.8827, 0.9312],
         [0.9571, 0.8777, 0.9566],
         [1.0913, 0.9044, 0.9931],
         ...,
         [0.9663, 0.8764, 0.9558],
         [0.9629, 0.8688, 1.0295],
         [1.1348, 0.9025, 0.9769]],
        [[0.9621, 0.8738, 0.9270],
         [0.9529, 0.8682, 0.9534],
         [1.0832, 0.8972, 0.9750],
         ...,
         [0.9627, 0.8669, 0.9539],
         [0.9613, 0.8583, 1.0230],
         [1.1308, 0.9002, 0.9651]],
        ...,
        [[0.9604, 0.8634, 0.9219],
         [0.9478, 0.8572, 0.9495],
         [1.0734, 0.8886, 0.9543],
         ...,
         [0.9583, 0.8557, 0.9515],
         [0.9593, 0.8463, 1.0150],
         [1.1258, 0.8975, 0.9512]],
        [[0.9648, 0.8913, 0.9352],
         [0.9611, 0.8869, 0.9596],
         [1.0990, 0.9113, 1.0110],
         ...,
         [0.9698, 0.8858, 0.9576],
         [0.9644, 0.8790, 1.0357],
         [1.1386, 0.9045, 0.9883]],
        [[0.9677, 0.9118, 0.9442],
         [0.9704, 0.9089, 0.9663],
         [1.1168, 0.9273, 1.0549],
         ...,
         [0.9777, 0.9082, 0.9617],
         [0.9677, 0.9040, 1.0497],
         [1.1472, 0.9091, 1.0155]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4883, 12.5425, 14.5980],
         [12.5810, 12.7278, 15.3569],
         [26.3138, 12.6500, 28.4446],
         ...,
         [12.8293, 12.7502, 14.8610],
         [11.5368, 12.9621, 20.3799],
         [26.2541, 10.0942, 23.1725]],
        [[10.7442,  8.4326, 12.9794],
         [10.3461,  8.1045, 13.8094],
         [23.0995,  9.8159, 16.4240],
         ...,
         [10.8750,  8.0699, 14.0990],
         [10.7030,  7.7815, 17.2549],
         [23.9998,  9.3841, 14.9463]],
        [[10.6555,  8.0282, 12.7919],
         [10.0986,  7.6641, 13.6290],
         [22.7300,  9.5125, 15.3446],
         ...,
         [10.6548,  7.6257, 14.0074],
         [10.6041,  7.3051, 16.9030],
         [23.7345,  9.2997, 14.1567]],
        ...,
        [[10.5464,  7.5531, 12.5630],
         [ 9.7997,  7.1506, 13.4084],
         [22.2795,  9.1489, 14.1028],
         ...,
         [10.3877,  7.1082, 13.8946],
         [10.4826,  6.7543, 16.4762],
         [23.4094,  9.1961, 13.2343]],
        [[10.8267,  8.8241, 13.1549],
         [10.5800,  8.5335, 13.9781],
         [23.4461, 10.1046, 17.4880],
         ...,
         [11.0824,  8.5030, 14.1841],
         [10.7952,  8.2488, 17.5863],
         [24.2473,  9.4627, 15.7144]],
        [[11.0111,  9.7533, 13.5506],
         [11.1149,  9.5624, 14.3575],
         [24.2292, 10.7721, 20.0860],
         ...,
         [11.5541,  9.5427, 14.3736],
         [11.0013,  9.3816, 18.3403],
         [24.8025,  9.6384, 17.5520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9813, 0.9757, 0.9776],
         [0.9958, 0.9796, 0.9899],
         [1.1772, 0.9780, 1.2028],
         ...,
         [0.9990, 0.9801, 0.9818],
         [0.9820, 0.9847, 1.0716],
         [1.1765, 0.9232, 1.1170]],
        [[0.9715, 0.8875, 0.9512],
         [0.9662, 0.8805, 0.9647],
         [1.1348, 0.9172, 1.0073],
         ...,
         [0.9732, 0.8798, 0.9695],
         [0.9709, 0.8736, 1.0208],
         [1.1467, 0.9079, 0.9832]],
        [[0.9703, 0.8789, 0.9482],
         [0.9629, 0.8710, 0.9618],
         [1.1299, 0.9107, 0.9897],
         ...,
         [0.9703, 0.8702, 0.9680],
         [0.9696, 0.8634, 1.0151],
         [1.1432, 0.9061, 0.9704]],
        ...,
        [[0.9689, 0.8687, 0.9445],
         [0.9590, 0.8600, 0.9582],
         [1.1239, 0.9029, 0.9695],
         ...,
         [0.9668, 0.8591, 0.9661],
         [0.9680, 0.8515, 1.0081],
         [1.1389, 0.9039, 0.9554]],
        [[0.9726, 0.8959, 0.9541],
         [0.9693, 0.8897, 0.9675],
         [1.1393, 0.9234, 1.0246],
         ...,
         [0.9760, 0.8890, 0.9708],
         [0.9722, 0.8836, 1.0262],
         [1.1499, 0.9096, 0.9957]],
        [[0.9750, 0.9158, 0.9605],
         [0.9764, 0.9118, 0.9737],
         [1.1497, 0.9377, 1.0668],
         ...,
         [0.9822, 0.9113, 0.9739],
         [0.9749, 0.9079, 1.0384],
         [1.1573, 0.9134, 1.0256]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4870, 12.7367, 14.5061],
         [11.5609, 12.6752, 15.5376],
         [26.7120, 12.1836, 27.6711],
         ...,
         [12.0583, 12.7189, 14.9685],
         [11.5642, 12.7443, 18.5606],
         [25.9658, 10.1093, 23.5365]],
        [[10.7695,  8.0906, 13.2686],
         [10.6891,  8.1881, 14.1578],
         [24.3255,  9.4091, 16.6180],
         ...,
         [10.8444,  8.1183, 14.2189],
         [10.8205,  8.0790, 15.9997],
         [23.8005,  9.3583, 14.8021]],
        [[10.6839,  7.6487, 13.1230],
         [10.5858,  7.7570, 13.9957],
         [24.0453,  9.1129, 15.6015],
         ...,
         [10.7029,  7.6794, 14.1288],
         [10.7318,  7.6358, 15.7084],
         [23.5454,  9.2693, 13.9762]],
        ...,
        [[10.5785,  7.1336, 12.9444],
         [10.4591,  7.2533, 13.7972],
         [23.7020,  8.7582, 14.4258],
         ...,
         [10.5299,  7.1676, 14.0177],
         [10.6228,  7.1193, 15.3541],
         [23.2325,  9.1600, 13.0149]],
        [[10.8492,  8.5213, 13.4046],
         [10.7853,  8.6074, 14.3091],
         [24.5871,  9.6911, 17.6152],
         ...,
         [10.9767,  8.5458, 14.3027],
         [10.9030,  8.5110, 16.2735],
         [24.0386,  9.4412, 15.6078]],
        [[11.0271,  9.5545, 13.7094],
         [11.0007,  9.6102, 14.6486],
         [25.1743, 10.3437, 20.0325],
         ...,
         [11.2744,  9.5703, 14.4892],
         [11.0873,  9.5478, 16.8944],
         [24.5723,  9.6268, 17.5444]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9961, 0.9892, 0.9729],
         [0.9971, 0.9879, 0.9897],
         [1.1973, 0.9773, 1.1870],
         ...,
         [1.0036, 0.9888, 0.9804],
         [0.9971, 0.9894, 1.0388],
         [1.1874, 0.9329, 1.1198]],
        [[0.9866, 0.8896, 0.9528],
         [0.9855, 0.8917, 0.9672],
         [1.1658, 0.9179, 1.0072],
         ...,
         [0.9876, 0.8902, 0.9682],
         [0.9873, 0.8893, 0.9972],
         [1.1588, 0.9168, 0.9777]],
        [[0.9855, 0.8801, 0.9504],
         [0.9842, 0.8824, 0.9646],
         [1.1621, 0.9115, 0.9907],
         ...,
         [0.9857, 0.8808, 0.9668],
         [0.9861, 0.8798, 0.9925],
         [1.1554, 0.9149, 0.9643]],
        ...,
        [[0.9841, 0.8691, 0.9475],
         [0.9825, 0.8716, 0.9614],
         [1.1575, 0.9039, 0.9716],
         ...,
         [0.9834, 0.8698, 0.9650],
         [0.9847, 0.8687, 0.9867],
         [1.1513, 0.9125, 0.9486]],
        [[0.9877, 0.8988, 0.9550],
         [0.9868, 0.9007, 0.9697],
         [1.1692, 0.9239, 1.0235],
         ...,
         [0.9893, 0.8993, 0.9696],
         [0.9884, 0.8986, 1.0016],
         [1.1620, 0.9185, 0.9908]],
        [[0.9900, 0.9210, 0.9599],
         [0.9897, 0.9222, 0.9752],
         [1.1770, 0.9379, 1.0628],
         ...,
         [0.9933, 0.9213, 0.9726],
         [0.9908, 0.9208, 1.0117],
         [1.1690, 0.9225, 1.0223]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4853, 12.5834, 14.5679],
         [12.3012, 12.7159, 15.3914],
         [26.3765, 12.5508, 28.2794],
         ...,
         [12.6430, 12.7431, 14.8825],
         [11.5062, 12.9137, 19.9515],
         [26.1806, 10.0965, 23.2548]],
        [[10.7503,  8.3487, 13.0446],
         [10.4237,  8.1231, 13.8879],
         [23.3734,  9.7150, 16.4678],
         ...,
         [10.8679,  8.0808, 14.1265],
         [10.7348,  7.8405, 16.9524],
         [23.9555,  9.3784, 14.9127]],
        [[10.6627,  7.9353, 12.8675],
         [10.2121,  7.6847, 13.7123],
         [23.0263,  9.4118, 15.4016],
         ...,
         [10.6662,  7.6377, 14.0356],
         [10.6430,  7.3709, 16.6140],
         [23.6936,  9.2931, 14.1146]],
        ...,
        [[10.5549,  7.4505, 12.6510],
         [ 9.9555,  7.1734, 13.4974],
         [22.6026,  9.0487, 14.1737],
         ...,
         [10.4211,  7.1215, 13.9237],
         [10.5302,  6.8269, 16.2034],
         [23.3724,  9.1883, 13.1832]],
        [[10.8319,  8.7495, 13.2103],
         [10.6228,  8.5500, 14.0520],
         [23.6985, 10.0036, 17.5175],
         ...,
         [11.0574,  8.5126, 14.2109],
         [10.8203,  8.3007, 17.2710],
         [24.1999,  9.4578, 15.6894]],
        [[11.0140,  9.7032, 13.5834],
         [11.0759,  9.5730, 14.4210],
         [24.4321, 10.6710, 20.0769],
         ...,
         [11.4875,  9.5488, 14.3990],
         [11.0113,  9.4138, 17.9952],
         [24.7481,  9.6354, 17.5497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9850, 0.9784, 0.9776],
         [0.9958, 0.9812, 0.9910],
         [1.1818, 0.9777, 1.2006],
         ...,
         [1.0003, 0.9818, 0.9827],
         [0.9853, 0.9855, 1.0651],
         [1.1792, 0.9251, 1.1189]],
        [[0.9753, 0.8876, 0.9528],
         [0.9710, 0.8828, 0.9665],
         [1.1421, 0.9169, 1.0085],
         ...,
         [0.9769, 0.8818, 0.9704],
         [0.9751, 0.8767, 1.0164],
         [1.1498, 0.9097, 0.9832]],
        [[0.9742, 0.8787, 0.9499],
         [0.9682, 0.8734, 0.9637],
         [1.1376, 0.9104, 0.9911],
         ...,
         [0.9742, 0.8723, 0.9689],
         [0.9739, 0.8666, 1.0109],
         [1.1464, 0.9078, 0.9702]],
        ...,
        [[0.9727, 0.8683, 0.9464],
         [0.9648, 0.8624, 0.9602],
         [1.1320, 0.9026, 0.9712],
         ...,
         [0.9710, 0.8613, 0.9671],
         [0.9724, 0.8550, 1.0042],
         [1.1421, 0.9056, 0.9551]],
        [[0.9764, 0.8962, 0.9555],
         [0.9736, 0.8919, 0.9692],
         [1.1464, 0.9231, 1.0256],
         ...,
         [0.9794, 0.8911, 0.9718],
         [0.9762, 0.8866, 1.0216],
         [1.1531, 0.9114, 0.9958]],
        [[0.9788, 0.9166, 0.9616],
         [0.9796, 0.9138, 0.9752],
         [1.1561, 0.9374, 1.0672],
         ...,
         [0.9851, 0.9133, 0.9748],
         [0.9788, 0.9104, 1.0333],
         [1.1603, 0.9152, 1.0261]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5807, 12.7335, 14.5478],
         [11.7036, 12.7050, 15.2490],
         [27.1887, 12.1217, 27.7649],
         ...,
         [11.8893, 12.9538, 14.7256],
         [11.6158, 12.9407, 17.0182],
         [25.9950, 10.0125, 23.9335]],
        [[10.8063,  8.0956, 13.5293],
         [10.6235,  8.1403, 13.9675],
         [25.1082,  9.5468, 16.4639],
         ...,
         [10.8358,  7.7914, 13.7531],
         [10.8391,  7.8071, 14.9933],
         [23.8793,  9.3137, 14.7214]],
        [[10.7141,  7.6542, 13.4083],
         [10.4970,  7.7039, 13.8166],
         [24.8620,  9.2687, 15.4326],
         ...,
         [10.7120,  7.3162, 13.6372],
         [10.7467,  7.3337, 14.7600],
         [23.6296,  9.2307, 13.8619]],
        ...,
        [[10.6008,  7.1397, 13.2596],
         [10.3419,  7.1945, 13.6315],
         [24.5598,  8.9348, 14.2418],
         ...,
         [10.5604,  6.7664, 13.4948],
         [10.6330,  6.7858, 14.4754],
         [23.3234,  9.1286, 12.8646]],
        [[10.8921,  8.5257, 13.6420],
         [10.7417,  8.5652, 14.1083],
         [25.3377,  9.8109, 17.4772],
         ...,
         [10.9513,  8.2574, 13.8609],
         [10.9252,  8.2713, 15.2119],
         [24.1121,  9.3910, 15.5622]],
        [[11.0839,  9.5573, 13.8940],
         [11.0073,  9.5828, 14.4242],
         [25.8515, 10.4199, 19.9393],
         ...,
         [11.2106,  9.3870, 14.1018],
         [11.1175,  9.3955, 15.7058],
         [24.6339,  9.5639, 17.5913]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9956, 0.9801, 0.9689],
         [0.9972, 0.9795, 0.9803],
         [1.2019, 0.9669, 1.1839],
         ...,
         [0.9997, 0.9848, 0.9718],
         [0.9961, 0.9845, 1.0091],
         [1.1861, 0.9217, 1.1215]],
        [[0.9854, 0.8806, 0.9523],
         [0.9830, 0.8816, 0.9595],
         [1.1744, 0.9117, 1.0001],
         ...,
         [0.9858, 0.8741, 0.9560],
         [0.9858, 0.8744, 0.9761],
         [1.1581, 0.9067, 0.9717]],
        [[0.9842, 0.8711, 0.9504],
         [0.9813, 0.8722, 0.9570],
         [1.1711, 0.9058, 0.9833],
         ...,
         [0.9841, 0.8639, 0.9541],
         [0.9846, 0.8643, 0.9723],
         [1.1548, 0.9050, 0.9577]],
        ...,
        [[0.9827, 0.8601, 0.9479],
         [0.9792, 0.8613, 0.9540],
         [1.1671, 0.8986, 0.9639],
         ...,
         [0.9821, 0.8521, 0.9518],
         [0.9831, 0.8525, 0.9677],
         [1.1508, 0.9028, 0.9415]],
        [[0.9865, 0.8898, 0.9542],
         [0.9845, 0.8907, 0.9617],
         [1.1774, 0.9174, 1.0165],
         ...,
         [0.9873, 0.8841, 0.9577],
         [0.9870, 0.8844, 0.9797],
         [1.1612, 0.9084, 0.9854]],
        [[0.9891, 0.9120, 0.9583],
         [0.9880, 0.9125, 0.9669],
         [1.1842, 0.9305, 1.0566],
         ...,
         [0.9907, 0.9083, 0.9616],
         [0.9895, 0.9085, 0.9877],
         [1.1681, 0.9121, 1.0184]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6289, 12.8660, 14.6344],
         [11.4838, 12.7442, 15.0315],
         [26.4735, 11.3372, 27.6063],
         ...,
         [11.6270, 12.8268, 14.8097],
         [11.7493, 12.8508, 15.9410],
         [25.9548,  9.9973, 24.2222]],
        [[10.8139,  7.9029, 13.7004],
         [10.7565,  8.0791, 14.0417],
         [24.1158,  8.8124, 16.2862],
         ...,
         [10.8136,  7.9571, 14.0016],
         [10.8522,  7.9237, 14.4740],
         [23.8462,  9.2202, 14.6858]],
        [[10.7170,  7.4402, 13.5890],
         [10.6697,  7.6359, 13.9238],
         [23.8389,  8.5418, 15.2563],
         ...,
         [10.7170,  7.5005, 13.9046],
         [10.7460,  7.4633, 14.3020],
         [23.5974,  9.1283, 13.8037]],
        ...,
        [[10.5980,  6.9035, 13.4521],
         [10.5630,  7.1194, 13.7788],
         [23.4997,  8.2175, 14.0681],
         ...,
         [10.5982,  6.9699, 13.7853],
         [10.6157,  6.9289, 14.0914],
         [23.2922,  9.0155, 12.7822]],
        [[10.9041,  8.3556, 13.8041],
         [10.8372,  8.5111, 14.1514],
         [24.3742,  9.0698, 17.2987],
         ...,
         [10.9036,  8.4034, 14.0916],
         [10.9512,  8.3739, 14.6345],
         [24.0783,  9.3058, 15.5501]],
        [[11.1057,  9.4483, 14.0356],
         [11.0175,  9.5479, 14.3966],
         [24.9544,  9.6648, 19.7611],
         ...,
         [11.1049,  9.4787, 14.2925],
         [11.1728,  9.4600, 14.9952],
         [24.5983,  9.4977, 17.6417]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0004, 0.9864, 0.9706],
         [0.9985, 0.9838, 0.9770],
         [1.1966, 0.9536, 1.1815],
         ...,
         [1.0004, 0.9856, 0.9734],
         [1.0020, 0.9861, 0.9918],
         [1.1897, 0.9249, 1.1265]],
        [[0.9896, 0.8800, 0.9554],
         [0.9889, 0.8838, 0.9609],
         [1.1654, 0.8995, 0.9974],
         ...,
         [0.9896, 0.8812, 0.9603],
         [0.9901, 0.8804, 0.9680],
         [1.1619, 0.9082, 0.9714]],
        [[0.9883, 0.8701, 0.9536],
         [0.9877, 0.8743, 0.9590],
         [1.1618, 0.8937, 0.9807],
         ...,
         [0.9883, 0.8714, 0.9587],
         [0.9887, 0.8706, 0.9652],
         [1.1586, 0.9063, 0.9571]],
        ...,
        [[0.9868, 0.8586, 0.9513],
         [0.9863, 0.8632, 0.9566],
         [1.1573, 0.8867, 0.9614],
         ...,
         [0.9868, 0.8600, 0.9568],
         [0.9870, 0.8591, 0.9617],
         [1.1545, 0.9038, 0.9404]],
        [[0.9908, 0.8897, 0.9571],
         [0.9899, 0.8930, 0.9627],
         [1.1688, 0.9050, 1.0139],
         ...,
         [0.9908, 0.8907, 0.9617],
         [0.9914, 0.8901, 0.9706],
         [1.1649, 0.9101, 0.9855]],
        [[0.9935, 0.9131, 0.9608],
         [0.9923, 0.9153, 0.9667],
         [1.1765, 0.9178, 1.0539],
         ...,
         [0.9935, 0.9138, 0.9650],
         [0.9944, 0.9134, 0.9764],
         [1.1718, 0.9142, 1.0195]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5951, 12.7763, 14.5618],
         [11.5977, 12.7175, 15.1744],
         [26.9400, 11.8534, 27.7091],
         ...,
         [11.7963, 12.9139, 14.7442],
         [11.6526, 12.9123, 16.6660],
         [25.9789, 10.0003, 24.0254]],
        [[10.8089,  8.0305, 13.5848],
         [10.6702,  8.1205, 13.9913],
         [24.7894,  9.2726, 16.4083],
         ...,
         [10.8298,  7.8403, 13.8319],
         [10.8440,  7.8423, 14.8215],
         [23.8692,  9.2849, 14.7099]],
        [[10.7153,  7.5819, 13.4685],
         [10.5606,  7.6819, 13.8514],
         [24.5354,  8.9950, 15.3778],
         ...,
         [10.7158,  7.3707, 13.7230],
         [10.7479,  7.3728, 14.6078],
         [23.6202,  9.1999, 13.8432]],
        ...,
        [[10.6003,  7.0598, 13.3255],
         [10.4262,  7.1703, 13.6797],
         [24.2238,  8.6620, 14.1883],
         ...,
         [10.5760,  6.8267, 13.5890],
         [10.6298,  6.8291, 14.3469],
         [23.3148,  9.0956, 12.8380]],
        [[10.8959,  8.4682, 13.6931],
         [10.7723,  8.5477, 14.1217],
         [25.0262,  9.5365, 17.4209],
         ...,
         [10.9362,  8.3005, 13.9333],
         [10.9335,  8.3022, 15.0215],
         [24.1013,  9.3640, 15.5582]],
        [[11.0906,  9.5202, 13.9350],
         [11.0011,  9.5715, 14.4138],
         [25.5569, 10.1458, 19.8819],
         ...,
         [11.1745,  9.4137, 14.1595],
         [11.1336,  9.4147, 15.4725],
         [24.6217,  9.5409, 17.6073]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9978, 0.9825, 0.9692],
         [0.9978, 0.9813, 0.9792],
         [1.2006, 0.9627, 1.1830],
         ...,
         [1.0005, 0.9855, 0.9722],
         [0.9986, 0.9854, 1.0034],
         [1.1879, 0.9230, 1.1231]],
        [[0.9874, 0.8808, 0.9533],
         [0.9856, 0.8827, 0.9599],
         [1.1722, 0.9074, 0.9992],
         ...,
         [0.9877, 0.8767, 0.9573],
         [0.9879, 0.8767, 0.9734],
         [1.1600, 0.9077, 0.9716]],
        [[0.9862, 0.8711, 0.9514],
         [0.9841, 0.8733, 0.9576],
         [1.1688, 0.9014, 0.9825],
         ...,
         [0.9862, 0.8666, 0.9556],
         [0.9866, 0.8667, 0.9700],
         [1.1567, 0.9058, 0.9575]],
        ...,
        [[0.9847, 0.8599, 0.9491],
         [0.9824, 0.8623, 0.9549],
         [1.1647, 0.8943, 0.9631],
         ...,
         [0.9843, 0.8549, 0.9534],
         [0.9850, 0.8550, 0.9657],
         [1.1527, 0.9036, 0.9412]],
        [[0.9886, 0.8901, 0.9551],
         [0.9869, 0.8918, 0.9620],
         [1.1753, 0.9131, 1.0157],
         ...,
         [0.9891, 0.8865, 0.9590],
         [0.9891, 0.8866, 0.9767],
         [1.1631, 0.9094, 0.9854]],
        [[0.9911, 0.9127, 0.9590],
         [0.9900, 0.9138, 0.9668],
         [1.1823, 0.9261, 1.0557],
         ...,
         [0.9922, 0.9104, 0.9627],
         [0.9917, 0.9104, 0.9840],
         [1.1700, 0.9131, 1.0187]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6702, 12.8479, 14.9320],
         [11.6173, 12.8570, 14.7588],
         [26.1740, 10.8482, 27.3947],
         ...,
         [11.5698, 12.8597, 14.7894],
         [11.7842, 12.8279, 15.2146],
         [26.1696, 10.0279, 24.5325]],
        [[10.8189,  7.9277, 14.0231],
         [10.8123,  7.9152, 13.8673],
         [23.7336,  8.5263, 16.1158],
         ...,
         [10.8042,  7.9115, 13.9760],
         [10.8458,  7.9557, 14.0971],
         [24.2067,  9.1607, 14.6495]],
        [[10.7179,  7.4678, 13.9145],
         [10.7166,  7.4539, 13.7607],
         [23.4477,  8.2758, 15.0914],
         ...,
         [10.7130,  7.4498, 13.8785],
         [10.7349,  7.4988, 13.9646],
         [23.9742,  9.0587, 13.7437]],
        ...,
        [[10.5939,  6.9339, 13.7808],
         [10.5990,  6.9185, 13.6296],
         [23.0978,  7.9752, 13.9100],
         ...,
         [10.6010,  6.9139, 13.7584],
         [10.5989,  6.9681, 13.8018],
         [23.6887,  8.9336, 12.6969]],
        [[10.9129,  8.3775, 14.1241],
         [10.9014,  8.3664, 13.9664],
         [24.0005,  8.7642, 17.1233],
         ...,
         [10.8891,  8.3631, 14.0667],
         [10.9491,  8.4021, 14.2205],
         [24.4234,  9.2558, 15.5386]],
        [[11.1234,  9.4622, 14.3496],
         [11.1006,  9.4552, 14.1876],
         [24.6003,  9.3130, 19.5747],
         ...,
         [11.0787,  9.4531, 14.2688],
         [11.1807,  9.4779, 14.4968],
         [24.9084,  9.4694, 17.6963]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9995, 0.9863, 0.9748],
         [0.9988, 0.9865, 0.9720],
         [1.1912, 0.9434, 1.1775],
         ...,
         [0.9982, 0.9866, 0.9725],
         [1.0010, 0.9859, 0.9794],
         [1.1911, 0.9258, 1.1310]],
        [[0.9883, 0.8808, 0.9600],
         [0.9882, 0.8805, 0.9575],
         [1.1589, 0.8936, 0.9941],
         ...,
         [0.9881, 0.8804, 0.9593],
         [0.9886, 0.8814, 0.9612],
         [1.1652, 0.9072, 0.9702]],
        [[0.9869, 0.8709, 0.9583],
         [0.9869, 0.8706, 0.9558],
         [1.1552, 0.8883, 0.9774],
         ...,
         [0.9869, 0.8705, 0.9577],
         [0.9872, 0.8716, 0.9591],
         [1.1621, 0.9050, 0.9555]],
        ...,
        [[0.9853, 0.8595, 0.9561],
         [0.9854, 0.8592, 0.9536],
         [1.1505, 0.8818, 0.9582],
         ...,
         [0.9854, 0.8591, 0.9557],
         [0.9854, 0.8602, 0.9564],
         [1.1584, 0.9024, 0.9385]],
        [[0.9895, 0.8904, 0.9617],
         [0.9894, 0.8902, 0.9591],
         [1.1625, 0.8987, 1.0105],
         ...,
         [0.9892, 0.8901, 0.9607],
         [0.9900, 0.8910, 0.9633],
         [1.1681, 0.9093, 0.9847]],
        [[0.9923, 0.9137, 0.9654],
         [0.9920, 0.9135, 0.9627],
         [1.1704, 0.9105, 1.0503],
         ...,
         [0.9917, 0.9135, 0.9640],
         [0.9931, 0.9140, 0.9677],
         [1.1745, 0.9139, 1.0198]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6636, 12.8642, 14.9385],
         [11.6398, 12.7954, 14.8331],
         [26.0530, 10.7446, 27.2190],
         ...,
         [11.5821, 12.8602, 14.7710],
         [11.7826, 12.7944, 15.0798],
         [26.2066, 10.0562, 24.6461]],
        [[10.8181,  7.9054, 13.9909],
         [10.8153,  8.0024, 14.0159],
         [23.6144,  8.5121, 15.9915],
         ...,
         [10.8066,  7.9108, 13.9709],
         [10.8392,  8.0038, 14.0545],
         [24.2641,  9.1037, 14.6785]],
        [[10.7178,  7.4430, 13.8778],
         [10.7174,  7.5507, 13.9179],
         [23.3289,  8.2702, 14.9725],
         ...,
         [10.7143,  7.4490, 13.8749],
         [10.7278,  7.5523, 13.9325],
         [24.0339,  8.9922, 13.7664]],
        ...,
        [[10.5946,  6.9065, 13.7388],
         [10.5971,  7.0253, 13.7973],
         [22.9793,  7.9795, 13.7976],
         ...,
         [10.6008,  6.9131, 13.7567],
         [10.5911,  7.0271, 13.7826],
         [23.7511,  8.8558, 12.7128]],
        [[10.9116,  8.3578, 14.0960],
         [10.9065,  8.4433, 14.1070],
         [23.8811,  8.7417, 16.9936],
         ...,
         [10.8925,  8.3626, 14.0601],
         [10.9431,  8.4446, 14.1680],
         [24.4786,  9.2078, 15.5741]],
        [[11.1206,  9.4497, 14.3310],
         [11.1105,  9.5043, 14.3100],
         [24.4804,  9.2706, 19.4330],
         ...,
         [11.0846,  9.4528, 14.2589],
         [11.1758,  9.5051, 14.4219],
         [24.9587,  9.4418, 17.7486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9994, 0.9865, 0.9749],
         [0.9990, 0.9850, 0.9732],
         [1.1895, 0.9410, 1.1746],
         ...,
         [0.9983, 0.9864, 0.9722],
         [1.0009, 0.9850, 0.9772],
         [1.1915, 0.9262, 1.1328]],
        [[0.9882, 0.8801, 0.9595],
         [0.9881, 0.8822, 0.9599],
         [1.1573, 0.8931, 0.9920],
         ...,
         [0.9880, 0.8802, 0.9592],
         [0.9885, 0.8822, 0.9605],
         [1.1659, 0.9058, 0.9707]],
        [[0.9869, 0.8702, 0.9577],
         [0.9868, 0.8725, 0.9583],
         [1.1535, 0.8879, 0.9755],
         ...,
         [0.9868, 0.8703, 0.9576],
         [0.9870, 0.8726, 0.9585],
         [1.1628, 0.9034, 0.9558]],
        ...,
        [[0.9852, 0.8587, 0.9554],
         [0.9853, 0.8613, 0.9563],
         [1.1489, 0.8817, 0.9563],
         ...,
         [0.9853, 0.8588, 0.9557],
         [0.9852, 0.8613, 0.9561],
         [1.1591, 0.9005, 0.9387]],
        [[0.9894, 0.8898, 0.9612],
         [0.9893, 0.8917, 0.9614],
         [1.1608, 0.8981, 1.0083],
         ...,
         [0.9892, 0.8899, 0.9606],
         [0.9898, 0.8917, 0.9624],
         [1.1687, 0.9081, 0.9852]],
        [[0.9922, 0.9132, 0.9650],
         [0.9920, 0.9144, 0.9647],
         [1.1687, 0.9094, 1.0480],
         ...,
         [0.9917, 0.9133, 0.9639],
         [0.9929, 0.9144, 0.9665],
         [1.1751, 0.9131, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6753, 12.8530, 15.0097],
         [11.7589, 12.8291, 14.7873],
         [26.0918, 10.5932, 26.9478],
         ...,
         [11.5817, 12.8566, 14.7725],
         [11.7448, 12.7934, 14.8212],
         [26.3147, 10.0846, 24.8448]],
        [[10.8194,  7.9206, 14.0280],
         [10.8270,  7.9539, 13.9770],
         [23.8608,  8.5616, 15.8374],3])
         ...,IZATION:
         [10.8065,  7.9157, 13.9750],
         [10.8259,  8.0053, 13.8770],
         [24.4252,  9.0519, 14.6879]],
         ...,
        [[10.7179,  7.4599, 13.9111],
         [10.7169,  7.4968, 13.8799],
         [23.5983,  8.3388, 14.8289],,
         ...,
         [10.7142,  7.4545, 13.8793],
         [10.7173,  7.5539, 13.7644],
         [24.2010,  8.9316, 13.7627]],
         ...,
        ...,.9223,  7.9569, 14.5156],
         [22.9641,  8.8563, 14.9884],
        [[10.5933,  6.9252, 13.7672],,
         [10.5818,  6.9659, 13.7602],
         [23.2764,  8.0704, 13.6660],
         ...,6153,  7.7732, 14.0790],
         [10.6008,  6.9192, 13.7615],
         [10.5839,  7.0289, 13.6259],
         [23.9255,  8.7845, 12.6949]],
         [22.6537,  8.6869, 14.0641],
        [[10.9140,  8.3712, 14.1369],,
         [10.9297,  8.4005, 14.0674],
         [24.1058,  8.7725, 16.8293],
         ...,
         [10.8924,  8.3669, 14.0639],
         [10.9272,  8.4459, 13.9818],
         [24.6341,  9.1643, 15.5973]],
         ...,
        [[11.1255,  9.4582, 14.3801],
         [11.1597,  9.4769, 14.2687],
         [24.6554,  9.2564, 19.2434],,
         ...,
         [11.0844,  9.4555, 14.2621],
         [11.1540,  9.5059, 14.2158],
         [25.1014,  9.4175, 17.8081]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
         [11.0413,  8.4032, 14.7034],
         [23.2545,  9.0157, 15.8956],
AFTER NORMALIZATION:8.6822, 16.1384]],
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9992, 0.9865, 0.9752],
         [1.0003, 0.9860, 0.9716],
         [1.1897, 0.9381, 1.1694],
         ...,
         [0.9980, 0.9866, 0.9714],
         [1.0001, 0.9853, 0.9722],
         [1.1927, 0.9272, 1.1352]],
        [[0.9879, 0.8808, 0.9593],
         [0.9880, 0.8815, 0.9584],
         [1.1602, 0.8945, 0.9887],
         ...,
         [0.9877, 0.8807, 0.9584],
         [0.9880, 0.8826, 0.9568],
         [1.1677, 0.9050, 0.9700]],
        [[0.9865, 0.8709, 0.9574],
         [0.9865, 0.8717, 0.9569],
         [1.1568, 0.8897, 0.9723],
         ...,
         [0.9865, 0.8708, 0.9568],
         [0.9865, 0.8729, 0.9550],
         [1.1647, 0.9025, 0.9549]],
        ...,
        [[0.9849, 0.8594, 0.9550],
         [0.9847, 0.8603, 0.9549],
         [1.1525, 0.8840, 0.9534],
         ...,
         [0.9850, 0.8593, 0.9549],
         [0.9848, 0.8617, 0.9527],
         [1.1611, 0.8993, 0.9376]],
        [[0.9891, 0.8904, 0.9610],
         [0.9893, 0.8911, 0.9599],
         [1.1635, 0.8990, 1.0048],
         ...,
         [0.9888, 0.8903, 0.9598],
         [0.9893, 0.8920, 0.9585],
         [1.1704, 0.9074, 0.9848]],
        [[0.9919, 0.9137, 0.9650],
         [0.9924, 0.9141, 0.9632],
         [1.1707, 0.9094, 1.0441],
         ...,
         [0.9914, 0.9137, 0.9631],
         [0.9923, 0.9148, 0.9623],
         [1.1766, 0.9129, 1.0207]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6634, 12.8249, 15.0499],
         [11.8309, 12.8546, 14.7777],
         [26.1092, 10.4482, 26.6018],
         ...,
         [11.5924, 12.8676, 14.7702],
         [11.7283, 12.7884, 14.6585],
         [26.3234, 10.1268, 25.0223]],
        [[10.8181,  7.9599, 14.0683],
         [10.8322,  7.9184, 13.9651],
         [24.0362,  8.6368, 15.6122],
         ...,
         [10.8084,  7.9008, 13.9408],
         [10.8245,  8.0127, 13.7379],
         [24.4379,  8.9713, 14.7278]],
        [[10.7178,  7.5035, 13.9513],
         [10.7146,  7.4574, 13.8677],
         [23.7913,  8.4356, 14.6156],
         ...,
         [10.7151,  7.4379, 13.8414],
         [10.7176,  7.5621, 13.6280],
         [24.2141,  8.8377, 13.7925]],
        ...,
        [[10.5946,  6.9732, 13.8075],
         [10.5704,  6.9224, 13.7477],
         [23.4908,  8.1924, 13.4665],
         ...,
         [10.6004,  6.9009, 13.7191],
         [10.5863,  7.0380, 13.4928],
         [23.9392,  8.6747, 12.7138]],
        [[10.9115,  8.4058, 14.1771],
         [10.9419,  8.3692, 14.0557],
         [24.2645,  8.8268, 16.5927],
         ...,
         [10.8953,  8.3537, 14.0332],
         [10.9242,  8.4524, 13.8401],
         [24.6464,  9.0964, 15.6475]],
        [[11.1205,  9.4803, 14.4204],
         [11.1880,  9.4570, 14.2576],
         [24.7761,  9.2609, 18.9795],
         ...,
         [11.0894,  9.4472, 14.2392],
         [11.1473,  9.5101, 14.0683],
         [25.1127,  9.3786, 17.8853]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9997, 0.9855, 0.9758],
         [1.0019, 0.9861, 0.9713],
         [1.1906, 0.9345, 1.1636],
         ...,
         [0.9987, 0.9864, 0.9712],
         [1.0005, 0.9847, 0.9694],
         [1.1934, 0.9276, 1.1379]],
        [[0.9885, 0.8811, 0.9598],
         [0.9887, 0.8803, 0.9581],
         [1.1632, 0.8957, 0.9849],
         ...,
         [0.9884, 0.8799, 0.9577],
         [0.9886, 0.8823, 0.9544],
         [1.1685, 0.9028, 0.9705]],
        [[0.9872, 0.8714, 0.9579],
         [0.9871, 0.8704, 0.9565],
         [1.1599, 0.8913, 0.9687],
         ...,
         [0.9871, 0.8700, 0.9561],
         [0.9872, 0.8726, 0.9526],
         [1.1655, 0.9000, 0.9553]],
        ...,
        [[0.9855, 0.8600, 0.9555],
         [0.9852, 0.8589, 0.9546],
         [1.1560, 0.8861, 0.9500],
         ...,
         [0.9856, 0.8584, 0.9541],
         [0.9854, 0.8614, 0.9504],
         [1.1619, 0.8965, 0.9378]],
        [[0.9897, 0.8907, 0.9616],
         [0.9901, 0.8899, 0.9596],
         [1.1662, 0.8997, 1.0008],
         ...,
         [0.9895, 0.8896, 0.9592],
         [0.9899, 0.8917, 0.9561],
         [1.1712, 0.9055, 0.9855]],
        [[0.9925, 0.9137, 0.9655],
         [0.9934, 0.9132, 0.9629],
         [1.1729, 0.9090, 1.0397],
         ...,
         [0.9921, 0.9130, 0.9626],
         [0.9928, 0.9144, 0.9598],
         [1.1774, 0.9116, 1.0219]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6472, 12.8248, 15.0368],
         [11.8393, 12.8661, 14.7991],
         [26.2181, 10.2710, 26.0162],
         ...,
         [11.6231, 12.8288, 14.8786],
         [11.7020, 12.8176, 14.5779],
         [26.2916, 10.2052, 25.1973]],
        [[10.8162,  7.9600, 14.0518],
         [10.8327,  7.9028, 13.9778],
         [24.2870,  8.7636, 15.2699],
         ...,
         [10.8131,  7.9544, 13.9863],
         [10.8221,  7.9703, 13.6213],
         [24.3916,  8.8739, 14.8113]],
        [[10.7176,  7.5037, 13.9344],
         [10.7142,  7.4401, 13.8793],
         [24.0581,  8.5931, 14.2952],
         ...,
         [10.7168,  7.4974, 13.8796],
         [10.7179,  7.5150, 13.5073],
         [24.1661,  8.7216, 13.8684]],
        ...,
        [[10.5964,  6.9735, 13.7901],
         [10.5690,  6.9033, 13.7581],
         [23.7769,  8.3861, 13.1715],
         ...,
         [10.5985,  6.9665, 13.7484],
         [10.5899,  6.9860, 13.3672],
         [23.8892,  8.5363, 12.7812]],
        [[10.9081,  8.4060, 14.1610],
         [10.9433,  8.3555, 14.0693],
         [24.5003,  8.9240, 16.2287],
         ...,
         [10.9027,  8.4010, 14.0855],
         [10.9192,  8.4150, 13.7273],
         [24.6016,  9.0168, 15.7386]],
        [[11.1136,  9.4804, 14.4050],
         [11.1913,  9.4483, 14.2734],
         [24.9776,  9.2885, 18.5627],
         ...,
         [11.1032,  9.4772, 14.3069],
         [11.1366,  9.4861, 13.9643],
         [25.0714,  9.3403, 17.9954]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9999, 0.9855, 0.9746],
         [1.0024, 0.9864, 0.9707],
         [1.1925, 0.9308, 1.1531],
         ...,
         [0.9996, 0.9856, 0.9720],
         [1.0006, 0.9854, 0.9671],
         [1.1934, 0.9294, 1.1398]],
        [[0.9889, 0.8812, 0.9585],
         [0.9891, 0.8800, 0.9573],
         [1.1669, 0.8984, 0.9784],
         ...,
         [0.9889, 0.8811, 0.9575],
         [0.9890, 0.8814, 0.9515],
         [1.1683, 0.9008, 0.9709]],
        [[0.9876, 0.8714, 0.9566],
         [0.9876, 0.8701, 0.9557],
         [1.1639, 0.8948, 0.9625],
         ...,
         [0.9876, 0.8713, 0.9557],
         [0.9876, 0.8717, 0.9497],
         [1.1654, 0.8975, 0.9556]],
        ...,
        [[0.9860, 0.8601, 0.9543],
         [0.9857, 0.8586, 0.9538],
         [1.1602, 0.8903, 0.9442],
         ...,
         [0.9860, 0.8599, 0.9536],
         [0.9859, 0.8603, 0.9474],
         [1.1617, 0.8936, 0.9379]],
        [[0.9901, 0.8908, 0.9603],
         [0.9906, 0.8897, 0.9588],
         [1.1698, 0.9019, 0.9940],
         ...,
         [0.9901, 0.8907, 0.9591],
         [0.9903, 0.8910, 0.9533],
         [1.1711, 0.9039, 0.9860]],
        [[0.9929, 0.9138, 0.9643],
         [0.9939, 0.9131, 0.9621],
         [1.1761, 0.9097, 1.0319],
         ...,
         [0.9927, 0.9137, 0.9627],
         [0.9932, 0.9139, 0.9571],
         [1.1773, 0.9108, 1.0227]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6257, 12.8182, 14.9588],
         [11.7122, 12.8773, 14.8440],
         [26.3526, 10.1963, 25.4752],
         ...,
         [11.6818, 12.8424, 14.9672],
         [11.6428, 12.7730, 14.7418],
         [26.1945, 10.2688, 25.2136]],
        [[10.8134,  7.9694, 14.0224],
         [10.8231,  7.8879, 13.9587],
         [24.4797,  8.8899, 14.9636],
         ...,
         [10.8201,  7.9352, 13.9426],
         [10.8157,  8.0355, 13.9194],
         [24.2455,  8.8281, 14.9189]],
        [[10.7169,  7.5141, 13.9107],
         [10.7178,  7.4235, 13.8528],
         [24.2573,  8.7403, 14.0097],
         ...,
         [10.7179,  7.4761, 13.8208],
         [10.7174,  7.5875, 13.8208],
         [24.0146,  8.6645, 13.9806]],
        ...,
        [[10.5983,  6.9849, 13.7732],
         [10.5886,  6.8850, 13.7226],
         [23.9841,  8.5581, 12.9099],
         ...,
         [10.5925,  6.9431, 13.6710],
         [10.5968,  7.0660, 13.6994],
         [23.7310,  8.4655, 12.8976]],
        [[10.9033,  8.4142, 14.1264],
         [10.9212,  8.3423, 14.0571],
         [24.6868,  9.0303, 15.9017],
         ...,
         [10.9153,  8.3841, 14.0561],
         [10.9071,  8.4726, 14.0110],
         [24.4607,  8.9820, 15.8410]],
        [[11.1043,  9.4857, 14.3586],
         [11.1408,  9.4399, 14.2768],
         [25.1501,  9.3480, 18.1853],
         ...,
         [11.1282,  9.4664, 14.3097],
         [11.1117,  9.5231, 14.2153],
         [24.9424,  9.3310, 18.0824]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0006, 0.9849, 0.9725],
         [1.0017, 0.9862, 0.9707],
         [1.1952, 0.9287, 1.1436],
         ...,
         [1.0013, 0.9854, 0.9727],
         [1.0008, 0.9839, 0.9690],
         [1.1931, 0.9303, 1.1393]],
        [[0.9898, 0.8809, 0.9573],
         [0.9900, 0.8792, 0.9563],
         [1.1704, 0.9007, 0.9726],
         ...,
         [0.9899, 0.8802, 0.9560],
         [0.9899, 0.8824, 0.9556],
         [1.1673, 0.8994, 0.9719]],
        [[0.9886, 0.8712, 0.9555],
         [0.9886, 0.8692, 0.9545],
         [1.1675, 0.8975, 0.9571],
         ...,
         [0.9886, 0.8704, 0.9540],
         [0.9886, 0.8728, 0.9540],
         [1.1643, 0.8958, 0.9566]],
        ...,
        [[0.9870, 0.8598, 0.9532],
         [0.9869, 0.8577, 0.9524],
         [1.1639, 0.8936, 0.9392],
         ...,
         [0.9869, 0.8589, 0.9516],
         [0.9870, 0.8616, 0.9521],
         [1.1605, 0.8916, 0.9390]],
        [[0.9910, 0.8905, 0.9590],
         [0.9913, 0.8889, 0.9579],
         [1.1732, 0.9037, 0.9879],
         ...,
         [0.9912, 0.8898, 0.9579],
         [0.9911, 0.8917, 0.9571],
         [1.1702, 0.9027, 0.9869]],
        [[0.9937, 0.9135, 0.9628],
         [0.9942, 0.9125, 0.9614],
         [1.1793, 0.9105, 1.0250],
         ...,
         [0.9940, 0.9130, 0.9620],
         [0.9938, 0.9143, 0.9604],
         [1.1766, 0.9101, 1.0233]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6350, 12.8292, 14.9607],
         [11.7062, 12.8498, 14.8679],
         [26.2589, 10.2156, 25.6157],
         ...,
         [11.6602, 12.8285, 14.9505],
         [11.6684, 12.8226, 14.6783],
         [26.1901, 10.2484, 25.1912]],
        [[10.8147,  7.9538, 14.0193],
         [10.8225,  7.9251, 14.0033],
         [24.3432,  8.8624, 15.0238],
         ...,
         [10.8177,  7.9548, 13.9743],
         [10.8187,  7.9632, 13.8058],
         [24.2387,  8.8442, 14.9017]],
        [[10.7172,  7.4968, 13.9070],
         [10.7179,  7.4649, 13.8998],
         [24.1160,  8.7079, 14.0636],
         ...,
         [10.7178,  7.4978, 13.8580],
         [10.7179,  7.5071, 13.7015],
         [24.0075,  8.6843, 13.9640]],
        ...,
        [[10.5975,  6.9659, 13.7688],
         [10.5894,  6.9306, 13.7724],
         [23.8369,  8.5198, 12.9566],
         ...,
         [10.5950,  6.9670, 13.7150],
         [10.5941,  6.9773, 13.5731],
         [23.7235,  8.4899, 12.8818]],
        [[10.9054,  8.4005, 14.1238],
         [10.9200,  8.3752, 14.0995],
         [24.5549,  9.0075, 15.9685],
         ...,
         [10.9108,  8.4013, 14.0826],
         [10.9126,  8.4087, 13.9028],
         [24.4541,  8.9944, 15.8232]],
        [[11.1084,  9.4769, 14.3572],
         [11.1383,  9.4607, 14.3142],
         [25.0285,  9.3362, 18.2685],
         ...,
         [11.1192,  9.4774, 14.3245],
         [11.1226,  9.4821, 14.1193],
         [24.9364,  9.3350, 18.0633]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0007, 0.9863, 0.9731],
         [1.0017, 0.9868, 0.9716],
         [1.1940, 0.9303, 1.1464],
         ...,
         [1.0011, 0.9863, 0.9730],
         [1.0012, 0.9862, 0.9685],
         [1.1931, 0.9310, 1.1395]],
        [[0.9899, 0.8818, 0.9578],
         [0.9900, 0.8812, 0.9575],
         [1.1687, 0.9013, 0.9741],
         ...,
         [0.9899, 0.8818, 0.9571],
         [0.9899, 0.8820, 0.9543],
         [1.1673, 0.9009, 0.9722]],
        [[0.9886, 0.8720, 0.9560],
         [0.9886, 0.8713, 0.9559],
         [1.1657, 0.8980, 0.9585],
         ...,
         [0.9886, 0.8720, 0.9552],
         [0.9886, 0.8722, 0.9526],
         [1.1642, 0.8974, 0.9569]],
        ...,
        [[0.9870, 0.8606, 0.9537],
         [0.9869, 0.8598, 0.9538],
         [1.1620, 0.8939, 0.9405],
         ...,
         [0.9870, 0.8606, 0.9529],
         [0.9870, 0.8608, 0.9505],
         [1.1605, 0.8933, 0.9393]],
        [[0.9911, 0.8914, 0.9595],
         [0.9913, 0.8908, 0.9591],
         [1.1715, 0.9044, 0.9895],
         ...,
         [0.9912, 0.8914, 0.9588],
         [0.9912, 0.8915, 0.9559],
         [1.1701, 0.9041, 0.9871]],
        [[0.9938, 0.9144, 0.9633],
         [0.9942, 0.9141, 0.9626],
         [1.1777, 0.9114, 1.0269],
         ...,
         [0.9939, 0.9145, 0.9628],
         [0.9940, 0.9146, 0.9594],
         [1.1765, 0.9114, 1.0236]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8218, 14.9955],
         [11.7707, 12.8707, 14.8201],
         [26.2816, 10.2277, 25.7536],
         ...,
         [11.6517, 12.8353, 14.9201],
         [11.6715, 12.7967, 14.6518],
         [26.2403, 10.2369, 25.2056]],
        [[10.8148,  7.9642, 14.0365],
         [10.8280,  7.8966, 13.9702],
         [24.3810,  8.8260, 15.1150],
         ...,
         [10.8167,  7.9452, 13.9654],
         [10.8190,  8.0005, 13.7704],
         [24.3153,  8.8508, 14.8661]],
        [[10.7173,  7.5083, 13.9221],
         [10.7166,  7.4332, 13.8685],
         [24.1555,  8.6664, 14.1501],
         ...,
         [10.7176,  7.4872, 13.8515],
         [10.7179,  7.5486, 13.6650],
         [24.0871,  8.6928, 13.9255]],
        ...,
        [[10.5974,  6.9786, 13.7814],
         [10.5800,  6.8957, 13.7432],
         [23.8785,  8.4724, 13.0377],
         ...,
         [10.5959,  6.9553, 13.7115],
         [10.5937,  7.0230, 13.5354],
         [23.8068,  8.5007, 12.8405]],
        [[10.9057,  8.4097, 14.1429],
         [10.9318,  8.3500, 14.0648],
         [24.5911,  8.9759, 16.0642],
         ...,
         [10.9090,  8.3929, 14.0713],
         [10.9132,  8.4417, 13.8684],
         [24.5280,  8.9992, 15.7907]],
        [[11.1089,  9.4827, 14.3806],
         [11.1644,  9.4448, 14.2759],
         [25.0610,  9.3159, 18.3748],
         ...,
         [11.1155,  9.4720, 14.3080],
         [11.1239,  9.5032, 14.0871],
         [25.0038,  9.3355, 18.0397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9853, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1485],
         ...,
         [1.0005, 0.9856, 0.9723],
         [1.0007, 0.9847, 0.9680],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8797, 0.9569],
         [1.1687, 0.8996, 0.9755],
         ...,
         [0.9895, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1678, 0.9001, 0.9715]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8962, 0.9598],
         ...,
         [0.9881, 0.8709, 0.9550],
         [0.9881, 0.8722, 0.9519],
         [1.1648, 0.8967, 0.9562]],
        ...,
        [[0.9866, 0.8600, 0.9538],
         [0.9863, 0.8582, 0.9532],
         [1.1621, 0.8920, 0.9417],
         ...,
         [0.9865, 0.8595, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8907, 0.9597],
         [0.9910, 0.8894, 0.9584],
         [1.1715, 0.9028, 0.9909],
         ...,
         [0.9907, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9137, 0.9636],
         [0.9940, 0.9129, 0.9619],
         [1.1777, 0.9101, 1.0285],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1769, 0.9105, 1.0231]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7736, 12.8716, 14.8181],
         [26.2826, 10.2283, 25.7594],
         ...,
         [11.6513, 12.8356, 14.9189],
         [11.6716, 12.7955, 14.6508],
         [26.2425, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8954, 13.9688],
         [24.3827,  8.8245, 15.1189],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0021, 13.7688],
         [24.3187,  8.8511, 14.8646]],
        [[10.7173,  7.5088, 13.9227],
         [10.7166,  7.4319, 13.8671],
         [24.1572,  8.6647, 14.1539],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5504, 13.6634],
         [24.0905,  8.6932, 13.9239]],
        ...,
        [[10.5974,  6.9791, 13.7820],
         [10.5796,  6.8942, 13.7419],
         [23.8803,  8.4703, 13.0412],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0251, 13.5337],
         [23.8104,  8.5011, 12.8387]],
        [[10.9057,  8.4101, 14.1437],
         [10.9323,  8.3490, 14.0633],
         [24.5926,  8.9746, 16.0683],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4431, 13.8669],
         [24.5312,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3816],
         [11.1655,  9.4441, 14.2743],
         [25.0625,  9.3150, 18.3793],
         ...,
         [11.1154,  9.4718, 14.3073],
         [11.1240,  9.5042, 14.0857],
         [25.0068,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0231]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8181],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8954, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0251, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.6363, 12.8215, 14.9971],
         [11.7738, 12.8717, 14.8180],
         [26.2826, 10.2283, 25.7597],
         ...,
         [11.6513, 12.8356, 14.9188],
         [11.6716, 12.7955, 14.6507],
         [26.2426, 10.2364, 25.2062]],
        [[10.8148,  7.9647, 14.0372],
         [10.8282,  7.8953, 13.9687],
         [24.3827,  8.8244, 15.1191],
         ...,
         [10.8167,  7.9448, 13.9650],
         [10.8190,  8.0022, 13.7688],
         [24.3188,  8.8511, 14.8645]],
        [[10.7173,  7.5088, 13.9228],
         [10.7165,  7.4318, 13.8670],
         [24.1573,  8.6646, 14.1540],
         ...,
         [10.7176,  7.4868, 13.8512],
         [10.7179,  7.5505, 13.6634],
         [24.0907,  8.6932, 13.9238]],
        ...,
        [[10.5974,  6.9792, 13.7820],
         [10.5796,  6.8942, 13.7418],
         [23.8804,  8.4702, 13.0414],
         ...,
         [10.5959,  6.9548, 13.7113],
         [10.5937,  7.0252, 13.5336],
         [23.8105,  8.5011, 12.8386]],
        [[10.9057,  8.4101, 14.1438],
         [10.9323,  8.3489, 14.0633],
         [24.5927,  8.9745, 16.0685],
         ...,
         [10.9090,  8.3925, 14.0708],
         [10.9132,  8.4432, 13.8668],
         [24.5313,  8.9994, 15.7893]],
        [[11.1089,  9.4830, 14.3817],
         [11.1656,  9.4441, 14.2742],
         [25.0625,  9.3150, 18.3795],
         ...,
         [11.1154,  9.4718, 14.3072],
         [11.1240,  9.5042, 14.0856],
         [25.0069,  9.3355, 18.0387]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0003, 0.9852, 0.9736],
         [1.0021, 0.9863, 0.9707],
         [1.1938, 0.9296, 1.1486],
         ...,
         [1.0005, 0.9855, 0.9723],
         [1.0007, 0.9847, 0.9679],
         [1.1933, 0.9298, 1.1396]],
        [[0.9894, 0.8811, 0.9580],
         [0.9896, 0.8796, 0.9569],
         [1.1687, 0.8995, 0.9756],
         ...,
         [0.9894, 0.8807, 0.9568],
         [0.9895, 0.8819, 0.9536],
         [1.1679, 0.9001, 0.9714]],
        [[0.9881, 0.8713, 0.9561],
         [0.9881, 0.8697, 0.9552],
         [1.1657, 0.8961, 0.9599],
         ...,
         [0.9881, 0.8708, 0.9549],
         [0.9881, 0.8722, 0.9519],
         [1.1649, 0.8967, 0.9561]],
        ...,
        [[0.9865, 0.8599, 0.9538],
         [0.9863, 0.8581, 0.9532],
         [1.1621, 0.8919, 0.9418],
         ...,
         [0.9865, 0.8594, 0.9527],
         [0.9865, 0.8609, 0.9498],
         [1.1611, 0.8926, 0.9385]],
        [[0.9906, 0.8906, 0.9597],
         [0.9910, 0.8893, 0.9584],
         [1.1715, 0.9027, 0.9910],
         ...,
         [0.9906, 0.8903, 0.9585],
         [0.9907, 0.8913, 0.9552],
         [1.1707, 0.9033, 0.9865]],
        [[0.9933, 0.9136, 0.9636],
         [0.9940, 0.9128, 0.9618],
         [1.1777, 0.9100, 1.0286],
         ...,
         [0.9934, 0.9134, 0.9624],
         [0.9935, 0.9141, 0.9588],
         [1.1770, 0.9105, 1.0230]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 1, 3])
BEFORE NORMALIZATION:
tensor([[[11.6733, 12.8408, 14.8054]],
        [[10.8192,  7.9375, 13.9146]],
        [[10.7179,  7.4786, 13.8082]],
        ...,
        [[10.5935,  6.9458, 13.6772]],
        [[10.9136,  8.3861, 14.0137]],
        [[11.1247,  9.4677, 14.2347]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1, 3])
tensor([[[1.0015, 0.9870, 1.0309]],
        [[0.9902, 0.8818, 1.0164]],
        [[0.9888, 0.8720, 1.0147]],
        ...,
        [[0.9872, 0.8606, 1.0125]],
        [[0.9914, 0.8914, 1.0180]],
        [[0.9942, 0.9146, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[15.4007, 15.2613, 17.5797],
         [22.6329, 30.3451, 15.1854],
         [26.9029, 15.2552, 31.6523],
         ...,
         [26.6021, 18.3614, 27.9537],
         [13.3024, 38.7248, 18.5244],
         [25.0110, 13.4347, 20.5745]],
        [[11.3832, 11.2730, 11.5968],
         [15.1852, 20.9653, 12.3014],
         [22.7604,  9.9672, 22.8639],
         ...,
         [21.8188, 12.6023, 16.0521],
         [ 9.6150, 11.1353, 13.2637],
         [17.3267, 11.4182, 13.9713]],
        [[10.9651, 10.8581, 11.0147],
         [14.4533, 20.0273, 11.9848],
         [22.2941,  9.4556, 21.9616],
         ...,
         [21.2899, 12.0286, 14.9869],
         [ 9.2363,  9.5432, 12.7264],
         [16.5570, 11.1906, 13.3177]],
        ...,
        [[10.4675, 10.3643, 10.3327],
         [13.5936, 18.9212, 11.6031],
         [21.7287,  8.8571, 20.8910],
         ...,
         [20.6513, 11.3528, 13.7625],
         [ 8.7869,  7.8800, 12.0897],
         [15.6491, 10.9144, 12.5488]],
        [[11.7833, 11.6701, 12.1615],
         [15.8938, 21.8703, 12.6011],
         [23.1995, 10.4640, 23.7297],
         ...,
         [22.3187, 13.1562, 17.1027],
         [ 9.9784, 12.8399, 13.7799],
         [18.0690, 11.6324, 14.6032]],
        [[12.7167, 12.5965, 13.5067],
         [17.5768, 24.0078, 13.2885],
         [24.1988, 11.6497, 25.7583],
         ...,
         [23.4628, 14.4662, 19.6707],
         [10.8297, 17.5821, 14.9911],
         [19.8216, 12.1194, 16.1005]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0140, 1.0107, 0.9956],
         [1.1096, 1.3342, 0.9566],
         [1.1660, 1.0106, 1.2244],
         ...,
         [1.1621, 1.0772, 1.1643],
         [0.9863, 1.5139, 1.0109],
         [1.1410, 0.9716, 1.0443]],
        [[0.9609, 0.9252, 0.8982],
         [1.0112, 1.1331, 0.9097],
         [1.1113, 0.8972, 1.0815],
         ...,
         [1.0989, 0.9537, 0.9707],
         [0.9376, 0.9223, 0.9254],
         [1.0395, 0.9283, 0.9369]],
        [[0.9554, 0.9163, 0.8888],
         [1.0015, 1.1129, 0.9046],
         [1.1051, 0.8862, 1.0668],
         ...,
         [1.0919, 0.9414, 0.9534],
         [0.9326, 0.8881, 0.9166],
         [1.0293, 0.9234, 0.9262]],
        ...,
        [[0.9488, 0.9057, 0.8777],
         [0.9902, 1.0892, 0.8983],
         [1.0977, 0.8734, 1.0494],
         ...,
         [1.0834, 0.9269, 0.9335],
         [0.9266, 0.8525, 0.9063],
         [1.0173, 0.9175, 0.9137]],
        [[0.9662, 0.9337, 0.9074],
         [1.0206, 1.1525, 0.9146],
         [1.1171, 0.9079, 1.0956],
         ...,
         [1.1055, 0.9656, 0.9878],
         [0.9424, 0.9588, 0.9338],
         [1.0493, 0.9329, 0.9471]],
        [[0.9786, 0.9536, 0.9293],
         [1.0428, 1.1983, 0.9258],
         [1.1303, 0.9333, 1.1286],
         ...,
         [1.1206, 0.9937, 1.0296],
         [0.9536, 1.0605, 0.9535],
         [1.0725, 0.9434, 0.9715]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[15.1227, 14.4819, 17.5462],
         [21.4804, 26.4382, 15.0544],
         [26.9297, 15.1635, 30.2016],
         ...,
         [26.6356, 17.6508, 27.7608],
         [13.2636, 37.8067, 18.4855],
         [24.4950, 13.2091, 20.6229]],
        [[11.3428, 10.9930, 11.7125],
         [14.0738, 18.7953, 12.3258],
         [22.8068,  9.9474, 22.4287],
         ...,
         [21.8728, 12.4739, 15.8147],
         [ 9.6062, 11.1061, 13.2399],
         [16.7617, 11.1235, 13.8259]],
        [[10.9461, 10.6242, 11.1409],
         [13.3561, 18.0180, 12.0244],
         [22.3425,  9.4416, 21.6176],
         ...,
         [21.3459, 11.9493, 14.7506],
         [ 9.2302,  9.5434, 12.7041],
         [15.9928, 10.8894, 13.1582]],
        ...,
        [[10.4729, 10.1837, 10.4701],
         [12.5160, 17.0978, 11.6606],
         [21.7793,  8.8494, 20.6515],
         ...,
         [20.7094, 11.3286, 13.5289],
         [ 8.7838,  7.9061, 12.0690],
         [15.0872, 10.6056, 12.3741]],
        [[11.7219, 11.3448, 12.2662],
         [14.7706, 19.5427, 12.6107],
         [23.2441, 10.4384, 23.2045],
         ...,
         [22.3709, 12.9788, 16.8651],
         [ 9.9670, 12.7750, 13.7547],
         [17.5045, 11.3441, 14.4724]],
        [[12.6037, 12.1615, 13.5825],
         [16.4327, 21.2988, 13.2630],
         [24.2389, 11.6093, 25.0128],
         ...,
         [23.5104, 14.1662, 19.4364],
         [10.8118, 17.3992, 14.9625],
         [19.2619, 11.8466, 16.0079]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0104, 0.9953, 0.9967],
         [1.0944, 1.2517, 0.9562],
         [1.1665, 1.0099, 1.2025],
         ...,
         [1.1626, 1.0633, 1.1628],
         [0.9859, 1.4955, 1.0120],
         [1.1343, 0.9680, 1.0467]],
        [[0.9605, 0.9205, 0.9018],
         [0.9966, 1.0878, 0.9118],
         [1.1120, 0.8981, 1.0761],
         ...,
         [1.0996, 0.9523, 0.9685],
         [0.9375, 0.9229, 0.9267],
         [1.0321, 0.9233, 0.9362]],
        [[0.9552, 0.9126, 0.8925],
         [0.9871, 1.0711, 0.9069],
         [1.1058, 0.8872, 1.0629],
         ...,
         [1.0927, 0.9410, 0.9512],
         [0.9326, 0.8894, 0.9180],
         [1.0219, 0.9183, 0.9253]],
        ...,
        [[0.9490, 0.9031, 0.8816],
         [0.9760, 1.0514, 0.9010],
         [1.0984, 0.8745, 1.0472],
         ...,
         [1.0843, 0.9277, 0.9314],
         [0.9267, 0.8543, 0.9076],
         [1.0100, 0.9122, 0.9126]],
        [[0.9655, 0.9280, 0.9108],
         [1.0058, 1.1038, 0.9164],
         [1.1178, 0.9086, 1.0887],
         ...,
         [1.1062, 0.9631, 0.9856],
         [0.9423, 0.9587, 0.9350],
         [1.0419, 0.9280, 0.9467]],
        [[0.9771, 0.9456, 0.9322],
         [1.0277, 1.1415, 0.9270],
         [1.1309, 0.9337, 1.1181],
         ...,
         [1.1213, 0.9885, 1.0275],
         [0.9535, 1.0579, 0.9547],
         [1.0651, 0.9388, 0.9717]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[14.8383, 13.8122, 17.4867],
         [20.0020, 22.4115, 14.9078],
         [26.9562, 15.0662, 28.8168],
         ...,
         [26.6690, 16.9915, 27.5767],
         [13.2248, 36.8848, 18.4464],
         [23.9536, 13.0078, 20.6694]],
        [[11.3049, 10.6522, 11.8591],
         [13.0050, 16.5531, 12.4089],
         [22.8557,  9.9267, 22.0147],
         ...,
         [21.9285, 12.3350, 15.5902],
         [ 9.5980, 11.0769, 13.2167],
         [16.2438, 10.8688, 13.6681]],
        [[10.9307, 10.3151, 11.3025],
         [12.3302, 15.9437, 12.1303],
         [22.3936,  9.4270, 21.2930],
         ...,
         [21.4036, 11.8556, 14.5275],
         [ 9.2246,  9.5444, 12.6824],
         [15.4813, 10.6298, 12.9860]],
        ...,
        [[10.4833,  9.9115, 10.6478],
         [11.5410, 15.2185, 11.7931],
         [21.8329,  8.8417, 20.4301],
         ...,
         [20.7695, 11.2863, 13.3086],
         [ 8.7813,  7.9337, 12.0491],
         [14.5845, 10.3404, 12.1864]],
        [[11.6618, 10.9732, 12.3973],
         [13.6609, 17.1363, 12.6719],
         [23.2908, 10.4115, 22.7026],
         ...,
         [22.4245, 12.7949, 16.6402],
         [ 9.9561, 12.7094, 13.7300],
         [16.9812, 11.0943, 14.3297]],
        [[12.4898, 11.7162, 13.6729],
         [15.2275, 18.4971, 13.2719],
         [24.2805, 11.5667, 24.2977],
         ...,
         [23.5591, 13.8712, 19.2143],
         [10.7944, 17.2138, 14.9343],
         [18.7287, 11.6085, 15.9051]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0067, 0.9823, 0.9955],
         [1.0750, 1.1667, 0.9535],
         [1.1669, 1.0092, 1.1798],
         ...,
         [1.1631, 1.0505, 1.1596],
         [0.9854, 1.4771, 1.0111],
         [1.1272, 0.9651, 1.0473]],
        [[0.9601, 0.9145, 0.9040],
         [0.9825, 1.0411, 0.9129],
         [1.1127, 0.8990, 1.0691],
         ...,
         [1.1004, 0.9506, 0.9646],
         [0.9375, 0.9236, 0.9260],
         [1.0253, 0.9192, 0.9334]],
        [[0.9551, 0.9073, 0.8949],
         [0.9736, 1.0280, 0.9084],
         [1.1066, 0.8883, 1.0574],
         ...,
         [1.0935, 0.9403, 0.9474],
         [0.9326, 0.8908, 0.9174],
         [1.0152, 0.9141, 0.9223]],
        ...,
        [[0.9492, 0.8987, 0.8843],
         [0.9632, 1.0125, 0.9029],
         [1.0992, 0.8757, 1.0434],
         ...,
         [1.0851, 0.9281, 0.9275],
         [0.9267, 0.8562, 0.9071],
         [1.0034, 0.9079, 0.9093]],
        [[0.9648, 0.9214, 0.9127],
         [0.9912, 1.0536, 0.9172],
         [1.1185, 0.9094, 1.0803],
         ...,
         [1.1070, 0.9605, 0.9817],
         [0.9422, 0.9587, 0.9344],
         [1.0351, 0.9240, 0.9441]],
        [[0.9757, 0.9374, 0.9335],
         [1.0119, 1.0828, 0.9269],
         [1.1315, 0.9342, 1.1063],
         ...,
         [1.1220, 0.9836, 1.0236],
         [0.9533, 1.0552, 0.9540],
         [1.0582, 0.9350, 0.9698]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1808, 11.9646, 16.9068],
         [11.6328, 11.8249, 14.1488],
         [27.1253, 14.4928, 22.7811],
         ...,
         [26.8810, 14.4422, 26.5811],
         [13.0030, 31.6979, 18.2150],
         [19.9749, 12.1356, 20.9835]],
        [[11.1662,  9.3050, 13.1894],
         [10.1313, 10.3590, 13.2169],
         [23.1492,  9.8032, 19.8833],
         ...,
         [22.2475, 11.3206, 14.5141],
         [ 9.5514, 10.9160, 13.0817],
         [13.8015,  9.9129, 12.9235]],
        [[10.9392,  9.0199, 12.7902],
         [ 9.9595, 10.1907, 13.1059],
         [22.6995,  9.3401, 19.5512],
         ...,
         [21.7326, 10.9844, 13.4667],
         [ 9.1935,  9.5665, 12.5565],
         [13.1841,  9.6678, 12.1710]],
        ...,
        [[10.6640,  8.6781, 12.3114],
         [ 9.7502,  9.9856, 12.9694],
         [22.1533,  8.7956, 19.1468],
         ...,
         [21.1099, 10.5810, 12.2711],
         [ 8.7679,  8.1212, 11.9338],
         [12.4561,  9.3719, 11.2975]],
        [[11.3799,  9.5762, 13.5690],
         [10.2926, 10.5169, 13.3202],
         [23.5724, 10.2512, 20.1949],
         ...,
         [22.7338, 11.6401, 15.5533],
         [ 9.8941, 12.3303, 13.5861],
         [14.3971, 10.1448, 13.6596]],
        [[11.8660, 10.2030, 14.4459],
         [10.6576, 10.8738, 13.5510],
         [24.5338, 11.3134, 20.8998],
         ...,
         [23.8447, 12.3774, 18.1173],
         [10.6946, 16.1336, 14.7690],
         [15.8040, 10.6758, 15.4356]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9853, 0.9517, 0.9851],
         [0.9649, 0.9487, 0.9403],
         [1.1696, 1.0060, 1.0807],
         ...,
         [1.1664, 1.0049, 1.1425],
         [0.9830, 1.3749, 1.0064],
         [1.0751, 0.9554, 1.0515]],
        [[0.9587, 0.8947, 0.9247],
         [0.9450, 0.9173, 0.9251],
         [1.1171, 0.9054, 1.0336],
         ...,
         [1.1051, 0.9379, 0.9462],
         [0.9374, 0.9292, 0.9229],
         [0.9935, 0.9077, 0.9204]],
        [[0.9557, 0.8886, 0.9182],
         [0.9427, 0.9137, 0.9233],
         [1.1111, 0.8955, 1.0282],
         ...,
         [1.0983, 0.9307, 0.9292],
         [0.9326, 0.9003, 0.9144],
         [0.9854, 0.9025, 0.9081]],
        ...,
        [[0.9521, 0.8813, 0.9104],
         [0.9400, 0.9093, 0.9211],
         [1.1039, 0.8838, 1.0216],
         ...,
         [1.0901, 0.9221, 0.9097],
         [0.9270, 0.8693, 0.9043],
         [0.9757, 0.8961, 0.8939]],
        [[0.9615, 0.9005, 0.9309],
         [0.9472, 0.9207, 0.9268],
         [1.1227, 0.9150, 1.0386],
         ...,
         [1.1116, 0.9448, 0.9631],
         [0.9419, 0.9596, 0.9311],
         [1.0014, 0.9127, 0.9323]],
        [[0.9679, 0.9140, 0.9451],
         [0.9520, 0.9283, 0.9306],
         [1.1354, 0.9378, 1.0501],
         ...,
         [1.1263, 0.9606, 1.0048],
         [0.9525, 1.0411, 0.9504],
         [1.0200, 0.9241, 0.9612]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8475, 11.9808, 17.0770],
         [11.9956, 11.9004, 14.3008],
         [27.1839, 14.2814, 21.9979],
         ...,
         [26.9576, 13.9860, 26.2593],
         [12.9293, 29.9992, 18.1352],
         [18.5113, 12.0703, 21.0607]],
        [[11.1588,  9.4971, 14.0092],
         [ 9.8518, 10.3913, 13.7161],
         [23.2618,  9.7587, 19.1938],
         ...,
         [22.3654, 10.9199, 14.2441],
         [ 9.5380, 10.8643, 13.0384],
         [13.2216,  9.7976, 12.7271]],
        [[10.9659,  9.2278, 13.6699],
         [ 9.6146, 10.2183, 13.6454],
         [22.8174,  9.3094, 18.8725],
         ...,
         [21.8544, 10.5904, 13.2054],
         [ 9.1855,  9.5808, 12.5166],
         [12.6821,  9.5478, 11.9578]],
        ...,
        [[10.7310,  8.9042, 13.2603],
         [ 9.3282, 10.0076, 13.5581],
         [22.2776,  8.7804, 18.4812],
         ...,
         [21.2362, 10.1953, 12.0208],
         [ 8.7660,  8.1964, 11.8978],
         [12.0430,  9.2466, 11.0674]],
        [[11.3400,  9.7526, 14.3298],
         [10.0760, 10.5536, 13.7817],
         [23.6797, 10.1928, 19.4952],
         ...,
         [22.8479, 11.2331, 15.2755],
         [ 9.8754, 12.2016, 13.5395],
         [13.7400, 10.0340, 13.4813]],
        [[11.7502, 10.3411, 15.0636],
         [10.5890, 10.9208, 13.9276],
         [24.6287, 11.2202, 20.1773],
         ...,
         [23.9497, 11.9565, 17.8233],
         [10.6629, 15.7637, 14.7143],
         [14.9571, 10.5760, 15.3072]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9691, 0.9557, 0.9878],
         [0.9578, 0.9540, 0.9427],
         [1.1586, 1.0050, 1.0679],
         ...,
         [1.1556, 0.9987, 1.1372],
         [0.9702, 1.3421, 1.0050],
         [1.0440, 0.9576, 1.0526]],
        [[0.9468, 0.9024, 0.9379],
         [0.9295, 0.9216, 0.9332],
         [1.1067, 0.9081, 1.0223],
         ...,
         [1.0949, 0.9330, 0.9418],
         [0.9254, 0.9318, 0.9221],
         [0.9741, 0.9089, 0.9171]],
        [[0.9442, 0.8967, 0.9324],
         [0.9264, 0.9179, 0.9320],
         [1.1009, 0.8984, 1.0170],
         ...,
         [1.0881, 0.9259, 0.9249],
         [0.9207, 0.9042, 0.9137],
         [0.9669, 0.9035, 0.9046]],
        ...,
        [[0.9411, 0.8897, 0.9258],
         [0.9226, 0.9134, 0.9306],
         [1.0937, 0.8871, 1.0107],
         ...,
         [1.0800, 0.9174, 0.9056],
         [0.9152, 0.8746, 0.9036],
         [0.9585, 0.8971, 0.8901]],
        [[0.9492, 0.9079, 0.9431],
         [0.9325, 0.9251, 0.9342],
         [1.1123, 0.9174, 1.0272],
         ...,
         [1.1013, 0.9397, 0.9585],
         [0.9298, 0.9604, 0.9303],
         [0.9809, 0.9140, 0.9293]],
        [[0.9546, 0.9205, 0.9551],
         [0.9393, 0.9330, 0.9366],
         [1.1248, 0.9394, 1.0383],
         ...,
         [1.1158, 0.9552, 1.0000],
         [0.9402, 1.0368, 0.9494],
         [0.9970, 0.9256, 0.9590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1154, 12.3098, 18.4973],
         [13.5803, 12.2687, 15.1866],
         [27.2342, 14.0543, 21.9166],
         ...,
         [27.0286, 13.6215, 25.9606],
         [12.8582, 28.3674, 18.0575],
         [17.2316, 12.1158, 21.0617]],
        [[11.1892, 10.0521, 15.5615],
         [ 9.1543, 10.5989, 14.5194],
         [23.3896,  9.7129, 18.5336],
         ...,
         [22.5011, 10.5387, 14.0342],
         [ 9.5284, 10.8145, 13.0004],
         [12.7963,  9.7880, 12.5783]],
        [[10.9714,  9.8031, 15.2321],
         [ 8.7181, 10.4086, 14.4388],
         [22.9531,  9.2787, 18.1529],
         ...,
         [21.9962, 10.2092, 13.0053],
         [ 9.1814,  9.5976, 12.4823],
         [12.3335,  9.5329, 11.8007]],
        ...,
        [[10.7069,  9.5026, 14.8329],
         [ 8.2054, 10.1773, 14.3395],
         [22.4227,  8.7666, 17.6913],
         ...,
         [21.3853,  9.8145, 11.8325],
         [ 8.7682,  8.2759, 11.8677],
         [11.7823,  9.2254, 10.9021]],
        [[11.3942, 10.2876, 15.8719],
         [ 9.5763, 10.7776, 14.5941],
         [23.8000, 10.1318, 18.8922],
         ...,
         [22.9775, 10.8523, 15.0563],
         [ 9.8604, 12.0746, 13.4979],
         [13.2390, 10.0296, 13.3415]],
        [[11.8599, 10.8269, 16.5790],
         [10.5778, 11.1827, 14.7604],
         [24.7311, 11.1213, 19.7081],
         ...,
         [24.0648, 11.5778, 17.5826],
         [10.6346, 15.3990, 14.6641],
         [14.2708, 10.5840, 15.1938]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9684, 0.9666, 1.0106],
         [0.9746, 0.9657, 0.9568],
         [1.1550, 1.0040, 1.0662],
         ...,
         [1.1523, 0.9947, 1.1320],
         [0.9650, 1.3109, 1.0035],
         [1.0228, 0.9624, 1.0523]],
        [[0.9430, 0.9182, 0.9629],
         [0.9161, 0.9299, 0.9459],
         [1.1042, 0.9109, 1.0112],
         ...,
         [1.0925, 0.9286, 0.9380],
         [0.9210, 0.9345, 0.9212],
         [0.9642, 0.9125, 0.9143]],
        [[0.9401, 0.9129, 0.9575],
         [0.9103, 0.9258, 0.9446],
         [1.0984, 0.9016, 1.0050],
         ...,
         [1.0858, 0.9216, 0.9213],
         [0.9164, 0.9084, 0.9128],
         [0.9581, 0.9071, 0.9017]],
        ...,
        [[0.9366, 0.9064, 0.9510],
         [0.9035, 0.9209, 0.9430],
         [1.0914, 0.8906, 0.9975],
         ...,
         [1.0777, 0.9131, 0.9022],
         [0.9110, 0.8801, 0.9028],
         [0.9508, 0.9005, 0.8871]],
        [[0.9457, 0.9232, 0.9679],
         [0.9217, 0.9338, 0.9471],
         [1.1096, 0.9199, 1.0170],
         ...,
         [1.0988, 0.9354, 0.9546],
         [0.9254, 0.9616, 0.9293],
         [0.9701, 0.9177, 0.9267]],
        [[0.9518, 0.9348, 0.9794],
         [0.9349, 0.9424, 0.9498],
         [1.1219, 0.9411, 1.0303],
         ...,
         [1.1131, 0.9509, 0.9957],
         [0.9356, 1.0329, 0.9483],
         [0.9837, 0.9296, 0.9569]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.2817, 13.8626, 21.3409],
         [14.1214, 12.3563, 15.8011],
         [27.3003, 13.7558, 22.3918],
         ...,
         [27.1260, 13.1603, 25.5585],
         [12.7662, 26.3146, 17.9544],
         [15.6197, 12.2135, 20.9463]],
        [[11.1800, 11.1763, 18.1844],
         [ 9.0116, 10.7223, 15.0251],
         [23.5685,  9.6531, 17.7268],
         ...,
         [22.6881, 10.0817, 13.8169],
         [ 9.5175, 10.7520, 12.9521],
         [12.3366,  9.8353, 12.5642]],
        [[10.9441, 10.8823, 17.8277],
         [ 8.5243, 10.5357, 14.9317],
         [23.1435,  9.2390, 17.2215],
         ...,
         [22.1919,  9.7546, 12.8039],
         [ 9.1777,  9.6243, 12.4389],
         [11.9815,  9.5752, 11.7939]],
        ...,
        [[10.6582, 10.5280, 17.3946],
         [ 7.9558, 10.3086, 14.8166],
         [22.6267,  8.7497, 16.6143],
         ...,
         [21.5910,  9.3632, 11.6493],
         [ 8.7728,  8.3878, 11.8302],
         [11.5548,  9.2618, 10.9031]],
        [[11.4023, 11.4549, 18.5201],
         [ 9.4863, 10.8976, 15.1118],
         [23.9678, 10.0519, 18.2065],
         ...,
         [23.1561, 10.3935, 14.8231],
         [ 9.8423, 11.9100, 13.4446],
         [12.6738, 10.0818, 13.3199]],
        [[11.9085, 12.0943, 19.2830],
         [10.6241, 11.2944, 15.3049],
         [24.8729, 10.9911, 19.3113],
         ...,
         [24.2233, 11.1160, 17.3104],
         [10.5989, 14.9259, 14.5988],
         [13.4509, 10.6477, 15.1524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9663, 1.0054, 1.0572],
         [0.9774, 0.9731, 0.9671],
         [1.1515, 1.0031, 1.0743],
         ...,
         [1.1492, 0.9903, 1.1258],
         [0.9595, 1.2724, 1.0021],
         [0.9972, 0.9700, 1.0508]],
        [[0.9385, 0.9478, 1.0058],
         [0.9098, 0.9380, 0.9545],
         [1.1022, 0.9151, 0.9984],
         ...,
         [1.0906, 0.9243, 0.9348],
         [0.9165, 0.9387, 0.9207],
         [0.9538, 0.9190, 0.9144]],
        [[0.9354, 0.9415, 1.0000],
         [0.9034, 0.9340, 0.9529],
         [1.0966, 0.9062, 0.9902],
         ...,
         [1.0840, 0.9173, 0.9183],
         [0.9120, 0.9145, 0.9124],
         [0.9491, 0.9134, 0.9019]],
        ...,
        [[0.9316, 0.9339, 0.9930],
         [0.8959, 0.9292, 0.9511],
         [1.0898, 0.8957, 0.9803],
         ...,
         [1.0761, 0.9089, 0.8996],
         [0.9067, 0.8880, 0.9025],
         [0.9435, 0.9067, 0.8874]],
        [[0.9414, 0.9538, 1.0113],
         [0.9161, 0.9418, 0.9559],
         [1.1075, 0.9237, 1.0062],
         ...,
         [1.0968, 0.9310, 0.9512],
         [0.9208, 0.9635, 0.9288],
         [0.9582, 0.9243, 0.9267]],
        [[0.9481, 0.9675, 1.0237],
         [0.9312, 0.9503, 0.9590],
         [1.1195, 0.9438, 1.0242],
         ...,
         [1.1109, 0.9465, 0.9916],
         [0.9308, 1.0282, 0.9475],
         [0.9685, 0.9364, 0.9565]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5977, 13.9796, 23.0989],
         [14.2676, 12.3754, 15.7066],
         [27.3727, 13.3310, 23.4662],
         ...,
         [27.2490, 12.4854, 25.0289],
         [12.6427, 23.6865, 17.8133],
         [13.9288, 12.1610, 20.3174]],
        [[10.9573, 11.4248, 19.6404],
         [ 8.9779, 10.7521, 14.9375],
         [23.8580,  9.5721, 16.8388],
         ...,
         [22.9888,  9.6032, 13.6320],
         [ 9.5103, 10.6688, 12.8955],
         [11.9024, 10.0287, 13.0045]],
        [[10.7697, 11.1429, 19.2500],
         [ 8.4776, 10.5666, 14.8450],
         [23.4556,  9.1876, 16.1610],
         ...,
         [22.5101,  9.2962, 12.6443],
         [ 9.1810,  9.6658, 12.3900],
         [11.6730,  9.7922, 12.3057]],
        ...,
        [[10.5413, 10.8027, 18.7762],
         [ 7.8952, 10.3407, 14.7309],
         [22.9655,  8.7317, 15.3576],
         ...,
         [21.9297,  8.9288, 11.5173],
         [ 8.7880,  8.5510, 11.7900],
         [11.3944,  9.5064, 11.4903]],
        [[11.1334, 11.6914, 20.0079],
         [ 9.4660, 10.9263, 15.0235],
         [24.2357,  9.9414, 17.4897],
         ...,
         [23.4398,  9.8956, 14.6123],
         [ 9.8248, 11.6870, 13.3805],
         [12.1182, 10.2521, 13.6848]],
        [[11.5321, 12.3018, 20.8433],
         [10.6390, 11.3207, 15.2149],
         [25.0904, 10.8076, 19.0166],
         ...,
         [24.4667, 10.5728, 17.0320],
         [10.5562, 14.2908, 14.5163],
         [12.6083, 10.7629, 15.3147]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9608, 1.0161, 1.0863],
         [0.9829, 0.9817, 0.9660],
         [1.1561, 1.0022, 1.0922],
         ...,
         [1.1545, 0.9841, 1.1177],
         [0.9614, 1.2243, 1.0003],
         [0.9784, 0.9771, 1.0410]],
        [[0.9392, 0.9613, 1.0300],
         [0.9130, 0.9469, 0.9535],
         [1.1097, 0.9216, 0.9845],
         ...,
         [1.0982, 0.9223, 0.9323],
         [0.9200, 0.9451, 0.9203],
         [0.9517, 0.9314, 0.9221]],
        [[0.9367, 0.9553, 1.0237],
         [0.9064, 0.9429, 0.9520],
         [1.1043, 0.9134, 0.9734],
         ...,
         [1.0918, 0.9157, 0.9162],
         [0.9157, 0.9236, 0.9121],
         [0.9486, 0.9263, 0.9107]],
        ...,
        [[0.9337, 0.9480, 1.0160],
         [0.8987, 0.9381, 0.9502],
         [1.0979, 0.9036, 0.9604],
         ...,
         [1.0842, 0.9078, 0.8979],
         [0.9105, 0.8997, 0.9023],
         [0.9449, 0.9202, 0.8975]],
        [[0.9415, 0.9670, 1.0360],
         [0.9195, 0.9506, 0.9549],
         [1.1146, 0.9295, 0.9950],
         ...,
         [1.1041, 0.9285, 0.9482],
         [0.9242, 0.9670, 0.9282],
         [0.9545, 0.9362, 0.9332]],
        [[0.9468, 0.9801, 1.0496],
         [0.9350, 0.9591, 0.9580],
         [1.1259, 0.9481, 1.0199],
         ...,
         [1.1177, 0.9431, 0.9876],
         [0.9339, 1.0228, 0.9467],
         [0.9610, 0.9471, 0.9597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1328, 12.6628, 24.1699],
         [13.5489, 12.3291, 14.8306],
         [27.4771, 12.6058, 25.6498],
         ...,
         [27.4657, 11.3158, 24.0593],
         [12.4756, 19.7706, 17.5583],
         [12.3550, 11.8252, 18.7034]],
        [[10.5881, 10.8810, 20.5518],
         [ 9.1635, 10.6807, 14.1501],
         [24.4607,  9.4459, 15.8186],
         ...,
         [23.6073,  9.2003, 13.5356],
         [ 9.5750, 10.5236, 12.8093],
         [11.3270, 10.3593, 15.3004]],
        [[10.4111, 10.6786, 20.1434],
         [ 8.7305, 10.4926, 14.0680],
         [24.1111,  9.1145, 14.8999],
         ...,
         [23.1690,  8.9676, 12.6054],
         [ 9.2665,  9.7334, 12.3189],
         [11.2058, 10.1909, 14.9247]],
        ...,
        [[10.1956, 10.4327, 19.6477],
         [ 8.2213, 10.2637, 13.9669],
         [23.6842,  8.7192, 13.8335],
         ...,
         [22.6363,  8.6870, 11.5392],
         [ 8.8973,  8.8346, 11.7363],
         [11.0572,  9.9858, 14.4712]],
        [[10.7542, 11.0712, 20.9363],
         [ 9.5824, 10.8573, 14.2263],
         [24.7880,  9.7627, 16.7170],
         ...,
         [24.0193,  9.4206, 14.4553],
         [ 9.8690, 11.3100, 13.2794],
         [11.4400, 10.5172, 15.6556]],
        [[11.1299, 11.5029, 21.8102],
         [10.5756, 11.2575, 14.3958],
         [25.5256, 10.4996, 18.8842],
         ...,
         [24.9540,  9.9253, 16.7119],
         [10.5501, 13.2595, 14.3786],
         [11.6934, 10.8741, 16.4689]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9614, 0.9861, 1.1063],
         [0.9801, 0.9790, 0.9544],
         [1.1642, 0.9849, 1.1304],
         ...,
         [1.1640, 0.9572, 1.1045],
         [0.9659, 1.1385, 0.9988],
         [0.9643, 0.9682, 1.0174]],
        [[0.9410, 0.9479, 1.0475],
         [0.9221, 0.9436, 0.9433],
         [1.1243, 0.9171, 0.9705],
         ...,
         [1.1130, 0.9119, 0.9333],
         [0.9276, 0.9402, 0.9215],
         [0.9507, 0.9367, 0.9620]],
        [[0.9386, 0.9436, 1.0408],
         [0.9164, 0.9396, 0.9420],
         [1.1197, 0.9100, 0.9555],
         ...,
         [1.1072, 0.9069, 0.9182],
         [0.9235, 0.9233, 0.9136],
         [0.9491, 0.9331, 0.9559]],
        ...,
        [[0.9358, 0.9383, 1.0328],
         [0.9097, 0.9347, 0.9404],
         [1.1140, 0.9016, 0.9382],
         ...,
         [1.1002, 0.9009, 0.9009],
         [0.9186, 0.9040, 0.9041],
         [0.9472, 0.9287, 0.9486]],
        [[0.9432, 0.9520, 1.0537],
         [0.9277, 0.9474, 0.9446],
         [1.1286, 0.9239, 0.9851],
         ...,
         [1.1185, 0.9166, 0.9483],
         [0.9315, 0.9571, 0.9292],
         [0.9522, 0.9401, 0.9678]],
        [[0.9481, 0.9612, 1.0679],
         [0.9408, 0.9560, 0.9473],
         [1.1384, 0.9397, 1.0203],
         ...,
         [1.1308, 0.9274, 0.9850],
         [0.9405, 0.9989, 0.9471],
         [0.9556, 0.9478, 0.9811]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0047, 12.1589, 24.5612],
         [12.4492, 12.2165, 14.3502],
         [27.5987, 11.8907, 27.5211],
         ...,
         [27.7460, 11.0256, 22.7971],
         [12.2860, 16.8349, 17.2483],
         [13.1060, 12.7735, 23.9573]],
        [[10.1157, 10.5002, 21.1089],
         [ 9.5882, 10.5447, 13.5223],
         [25.2523,  9.3521, 15.3674],
         ...,
         [24.3820,  9.3938, 13.7256],
         [ 9.6746, 10.3206, 12.7173],
         [11.4674, 11.1808, 20.6802]],
        [[ 9.9036, 10.3113, 20.7167],
         [ 9.2832, 10.3543, 13.4232],
         [24.9760,  9.0782, 14.2979],
         ...,
         [23.9951,  9.2093, 12.8900],
         [ 9.3926,  9.7141, 12.2465],
         [11.2794, 10.9980, 20.3070]],
        ...,
        [[ 9.6465, 10.0815, 20.2401],
         [ 8.9182, 10.1228, 13.3012],
         [24.6374,  8.7493, 13.0735],
         ...,
         [23.5232,  8.9855, 11.9233],
         [ 9.0540,  9.0105, 11.6863],
         [11.0503, 10.7752, 19.8532]],
        [[10.3156, 10.6777, 21.4775],
         [ 9.8787, 10.7235, 13.6144],
         [25.5100,  9.6124, 16.4256],
         ...,
         [24.7449,  9.5673, 14.5450],
         [ 9.9425, 10.9142, 13.1680],
         [11.6438, 11.3523, 21.0308]],
        [[10.7708, 11.0800, 22.3138],
         [10.5511, 11.1290, 13.8200],
         [26.0881, 10.2125, 19.0258],
         ...,
         [25.5647,  9.9617, 16.5304],
         [10.5600, 12.3476, 14.2200],
         [12.0427, 11.7400, 21.8256]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9740, 0.9730, 1.1225],
         [0.9799, 0.9742, 0.9564],
         [1.1801, 0.9672, 1.1707],
         ...,
         [1.1820, 0.9487, 1.0938],
         [0.9777, 1.0733, 1.0036],
         [0.9886, 0.9862, 1.1127]],
        [[0.9490, 0.9374, 1.0664],
         [0.9421, 0.9384, 0.9430],
         [1.1491, 0.9128, 0.9730],
         ...,
         [1.1376, 0.9137, 0.9463],
         [0.9432, 0.9336, 0.9299],
         [0.9669, 0.9520, 1.0594]],
        [[0.9462, 0.9334, 1.0600],
         [0.9380, 0.9343, 0.9414],
         [1.1454, 0.9069, 0.9556],
         ...,
         [1.1325, 0.9097, 0.9327],
         [0.9395, 0.9206, 0.9222],
         [0.9644, 0.9481, 1.0533]],
        ...,
        [[0.9428, 0.9284, 1.0522],
         [0.9332, 0.9293, 0.9394],
         [1.1410, 0.8999, 0.9357],
         ...,
         [1.1262, 0.9049, 0.9170],
         [0.9350, 0.9055, 0.9131],
         [0.9614, 0.9433, 1.0459]],
        [[0.9517, 0.9412, 1.0724],
         [0.9459, 0.9422, 0.9445],
         [1.1525, 0.9184, 0.9902],
         ...,
         [1.1424, 0.9174, 0.9596],
         [0.9468, 0.9463, 0.9372],
         [0.9692, 0.9557, 1.0651]],
        [[0.9577, 0.9498, 1.0860],
         [0.9548, 0.9509, 0.9478],
         [1.1601, 0.9312, 1.0325],
         ...,
         [1.1532, 0.9259, 0.9919],
         [0.9549, 0.9770, 0.9543],
         [0.9745, 0.9640, 1.0780]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0226, 12.3606, 24.4028],
         [12.9459, 12.2735, 14.5360],
         [27.5347, 12.2170, 26.7809],
         ...,
         [27.5996, 10.9398, 23.4352],
         [12.3771, 18.0009, 17.3995],
         [12.7291, 12.2435, 20.8671]],
        [[10.3450, 10.6562, 20.8315],
         [ 9.3684, 10.6046, 13.8275],
         [24.8626,  9.3891, 15.4976],
         ...,
         [24.0001,  9.2219, 13.5955],
         [ 9.6254, 10.4264, 12.7622],
         [11.3989, 10.5708, 17.7870]],
        [[10.1543, 10.4623, 20.4274],
         [ 9.0007, 10.4144, 13.7422],
         [24.5504,  9.0880, 14.4830],
         ...,
         [23.5885,  9.0289, 12.7093],
         [ 9.3304,  9.7449, 12.2818],
         [11.2442, 10.3803, 17.4388]],
        ...,
        [[ 9.9225, 10.2265, 19.9368],
         [ 8.5643, 10.1832, 13.6371],
         [24.1684,  8.7278, 13.3155],
         ...,
         [23.0874,  8.7950, 11.6893],
         [ 8.9768,  8.9607, 11.7106],
         [11.0551, 10.1486, 17.0161]],
        [[10.5242, 10.8385, 21.2116],
         [ 9.7211, 10.7832, 13.9067],
         [25.1544,  9.6759, 16.4974],
         ...,
         [24.3864,  9.4037, 14.4684],
         [ 9.9060, 11.0979, 13.2223],
         [11.5436, 10.7497, 18.1146]],
        [[10.9308, 11.2517, 22.0752],
         [10.5473, 11.1881, 14.0831],
         [25.8104, 10.3402, 18.9376],
         ...,
         [25.2612,  9.8177, 16.5981],
         [10.5545, 12.7365, 14.2974],
         [11.8694, 11.1555, 18.8591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9670, 0.9781, 1.1142],
         [0.9792, 0.9763, 0.9537],
         [1.1720, 0.9751, 1.1529],
         ...,
         [1.1728, 0.9477, 1.0985],
         [0.9717, 1.0991, 1.0003],
         [0.9763, 0.9756, 1.0567]],
        [[0.9448, 0.9416, 1.0561],
         [0.9319, 0.9405, 0.9422],
         [1.1367, 0.9144, 0.9694],
         ...,
         [1.1253, 0.9108, 0.9384],
         [0.9353, 0.9367, 0.9249],
         [0.9587, 0.9398, 1.0066]],
        [[0.9423, 0.9374, 1.0495],
         [0.9270, 0.9364, 0.9408],
         [1.1325, 0.9080, 0.9529],
         ...,
         [1.1198, 0.9067, 0.9240],
         [0.9314, 0.9221, 0.9170],
         [0.9567, 0.9357, 1.0009]],
        ...,
        [[0.9392, 0.9324, 1.0416],
         [0.9213, 0.9315, 0.9391],
         [1.1275, 0.9002, 0.9339],
         ...,
         [1.1132, 0.9017, 0.9074],
         [0.9267, 0.9052, 0.9078],
         [0.9542, 0.9307, 0.9941]],
        [[0.9472, 0.9455, 1.0623],
         [0.9366, 0.9443, 0.9435],
         [1.1405, 0.9206, 0.9856],
         ...,
         [1.1304, 0.9147, 0.9526],
         [0.9390, 0.9511, 0.9323],
         [0.9606, 0.9436, 1.0119]],
        [[0.9525, 0.9544, 1.0763],
         [0.9475, 0.9530, 0.9463],
         [1.1492, 0.9348, 1.0253],
         ...,
         [1.1419, 0.9236, 0.9873],
         [0.9476, 0.9862, 0.9498],
         [0.9649, 0.9523, 1.0240]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9809, 12.0841, 22.9565],
         [12.3642, 12.2082, 14.4709],
         [27.5300, 11.9301, 27.4212],
         ...,
         [27.6256, 10.9482, 23.0537],
         [12.2830, 16.9545, 17.2595],
         [14.0819, 12.2596, 22.6420]],
        [[10.2088, 10.4740, 19.7031],
         [ 9.6322, 10.5373, 13.8919],
         [25.2566,  9.3598, 15.3776],
         ...,
         [24.3204,  9.3146, 13.6938],
         [ 9.6763, 10.3086, 12.7430],
         [11.9356, 10.5883, 19.2727]],
        [[10.0085, 10.2902, 19.3338],
         [ 9.3390, 10.3471, 13.8218],
         [24.9886,  9.0829, 14.3151],
         ...,
         [23.9397,  9.1301, 12.8387],
         [ 9.3948,  9.6929, 12.2733],
         [11.6937, 10.3979, 18.8921]],
        ...,
        [[ 9.7654, 10.0666, 18.8851],
         [ 8.9875, 10.1157, 13.7354],
         [24.6599,  8.7505, 13.0978],
         ...,
         [23.4756,  8.9062, 11.8513],
         [ 9.0567,  8.9795, 11.7143],
         [11.4004, 10.1664, 18.4302]],
        [[10.3973, 10.6466, 20.0502],
         [ 9.9110, 10.7161, 13.9569],
         [25.5066,  9.6230, 16.4285],
         ...,
         [24.6771,  9.4882, 14.5338],
         [ 9.9437, 10.9118, 13.1925],
         [12.1633, 10.7671, 19.6308]],
        [[10.8256, 11.0375, 20.8381],
         [10.5552, 11.1213, 14.1013],
         [26.0671, 10.2302, 19.0085],
         ...,
         [25.4831,  9.8829, 16.5740],
         [10.5603, 12.3706, 14.2415],
         [12.6813, 11.1725, 20.4449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9664, 0.9717, 1.0945],
         [0.9715, 0.9743, 0.9564],
         [1.1719, 0.9684, 1.1671],
         ...,
         [1.1732, 0.9473, 1.0960],
         [0.9704, 1.0761, 1.0018],
         [0.9942, 0.9754, 1.0893]],
        [[0.9430, 0.9372, 1.0415],
         [0.9354, 0.9385, 0.9470],
         [1.1419, 0.9133, 0.9712],
         ...,
         [1.1295, 0.9123, 0.9438],
         [0.9360, 0.9336, 0.9283],
         [0.9658, 0.9396, 1.0345]],
        [[0.9404, 0.9332, 1.0355],
         [0.9315, 0.9344, 0.9459],
         [1.1384, 0.9073, 0.9539],
         ...,
         [1.1245, 0.9083, 0.9299],
         [0.9323, 0.9204, 0.9207],
         [0.9627, 0.9355, 1.0284]],
        ...,
        [[0.9372, 0.9284, 1.0282],
         [0.9269, 0.9295, 0.9445],
         [1.1340, 0.9002, 0.9341],
         ...,
         [1.1184, 0.9035, 0.9138],
         [0.9278, 0.9051, 0.9116],
         [0.9588, 0.9306, 1.0208]],
        [[0.9455, 0.9409, 1.0472],
         [0.9391, 0.9423, 0.9481],
         [1.1452, 0.9189, 0.9883],
         ...,
         [1.1342, 0.9160, 0.9575],
         [0.9395, 0.9465, 0.9357],
         [0.9689, 0.9434, 1.0404]],
        [[0.9512, 0.9492, 1.0600],
         [0.9476, 0.9510, 0.9504],
         [1.1526, 0.9319, 1.0302],
         ...,
         [1.1449, 0.9245, 0.9907],
         [0.9477, 0.9778, 0.9527],
         [0.9757, 0.9521, 1.0536]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9683, 11.9785, 22.9129],
         [12.5881, 12.2792, 14.6043],
         [27.5250, 11.6839, 27.7678],
         ...,
         [27.6402, 11.1334, 22.6669],
         [12.1854, 16.3816, 17.1113],
         [14.4277, 12.2264, 23.4610]],
        [[10.1232, 10.4339, 19.6788],
         [ 9.5208, 10.6116, 14.0472],
         [25.6503,  9.3458, 15.3578],
         ...,
         [24.6291,  9.4520, 13.8281],
         [ 9.7323, 10.1580, 12.7284],
         [11.9484, 10.5538, 19.9441]],
        [[ 9.9155, 10.2571, 19.3116],
         [ 9.1973, 10.4216, 13.9797],
         [25.4273,  9.0910, 14.2721],
         ...,
         [24.2799,  9.2623, 13.0075],
         [ 9.4652,  9.5745, 12.2706],
         [11.6727, 10.3634, 19.5472]],
        ...,
        [[ 9.6637, 10.0419, 18.8654],
         [ 8.8109, 10.1905, 13.8965],
         [25.1532,  8.7844, 13.0307],
         ...,
         [23.8534,  9.0322, 12.0563],
         [ 9.1439,  8.8966, 11.7252],
         [11.3394, 10.1317, 19.0654]],
        [[10.3188, 10.5999, 20.0240],
         [ 9.8296, 10.7901, 14.1098],
         [25.8580,  9.5873, 16.4333],
         ...,
         [24.9559,  9.6305, 14.6316],
         [ 9.9856, 10.7282, 13.1662],
         [12.2087, 10.7328, 20.3178]],
        [[10.7638, 10.9754, 20.8073],
         [10.5468, 11.1947, 14.2488],
         [26.3221, 10.1427, 19.0806],
         ...,
         [25.6925, 10.0365, 16.5737],
         [10.5680, 12.1023, 14.1863],
         [12.8032, 11.1384, 21.1672]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9635, 0.9692, 1.0984],
         [0.9717, 0.9756, 0.9633],
         [1.1691, 0.9629, 1.1774],
         ...,
         [1.1706, 0.9511, 1.0944],
         [0.9664, 1.0636, 1.0040],
         [0.9960, 0.9745, 1.1073]],
        [[0.9391, 0.9361, 1.0458],
         [0.9311, 0.9399, 0.9542],
         [1.1443, 0.9127, 0.9755],
         ...,
         [1.1308, 0.9150, 0.9506],
         [0.9339, 0.9302, 0.9328],
         [0.9632, 0.9387, 1.0501]],
        [[0.9364, 0.9323, 1.0398],
         [0.9269, 0.9358, 0.9531],
         [1.1414, 0.9073, 0.9579],
         ...,
         [1.1262, 0.9110, 0.9373],
         [0.9304, 0.9176, 0.9253],
         [0.9596, 0.9346, 1.0437]],
        ...,
        [[0.9330, 0.9277, 1.0326],
         [0.9218, 0.9309, 0.9518],
         [1.1377, 0.9007, 0.9377],
         ...,
         [1.1206, 0.9060, 0.9218],
         [0.9262, 0.9031, 0.9164],
         [0.9552, 0.9296, 1.0358]],
        [[0.9417, 0.9396, 1.0514],
         [0.9352, 0.9437, 0.9552],
         [1.1471, 0.9179, 0.9930],
         ...,
         [1.1351, 0.9189, 0.9637],
         [0.9373, 0.9424, 0.9399],
         [0.9667, 0.9425, 1.0562]],
        [[0.9476, 0.9477, 1.0642],
         [0.9447, 0.9524, 0.9575],
         [1.1532, 0.9298, 1.0361],
         ...,
         [1.1449, 0.9276, 0.9953],
         [0.9450, 0.9719, 0.9565],
         [0.9745, 0.9512, 1.0700]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1219, 11.8491, 22.1354],
         [13.7006, 12.6064, 15.2498],
         [28.7030, 11.0587, 23.2841],
         ...,
         [27.7000, 13.3476, 20.6634],
         [11.6446, 15.2869, 16.1831],
         [17.0554, 11.8759, 27.0254]],
        [[ 9.7706, 10.3722, 18.9963],
         [ 9.1199, 11.0421, 14.6182],
         [27.7235,  9.6259, 16.4992],
         ...,
         [26.4355, 10.8607, 15.1976],
         [10.1209,  9.4032, 12.6868],
         [12.2577, 10.3828, 23.0196]],
        [[ 9.5133, 10.2027, 18.6400],
         [ 8.6718, 10.8625, 14.5418],
         [27.6045,  9.4620, 15.8104],
         ...,
         [26.2830, 10.5870, 14.6305],
         [ 9.9467,  8.8542, 12.3103],
         [11.7666, 10.2116, 22.5670]],
        ...,
        [[ 9.2033,  9.9962, 18.2071],
         [ 8.1461, 10.6436, 14.4476],
         [27.4577,  9.2624, 14.9954],
         ...,
         [26.0950, 10.2569, 13.9559],
         [ 9.7346,  8.2172, 11.8584],
         [11.1843, 10.0029, 22.0175]],
        [[10.0144, 10.5313, 19.3312],
         [ 9.5541, 11.2106, 14.6890],
         [27.8337,  9.7798, 17.1617],
         ...,
         [26.5770, 11.1197, 15.7407],
         [10.2844,  9.9402, 13.0447],
         [12.7292, 10.5435, 23.4456]],
        [[10.5741, 10.8908, 20.0914],
         [10.5868, 11.5915, 14.8466],
         [28.0785, 10.1281, 18.7192],
         ...,
         [26.8921, 11.7132, 17.0088],
         [10.6547, 11.2362, 13.8705],
         [13.8350, 10.9069, 24.4136]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9552, 0.9726, 1.0955],
         [0.9761, 0.9888, 0.9835],
         [1.1743, 0.9557, 1.1142],
         ...,
         [1.1611, 1.0047, 1.0715],
         [0.9489, 1.0463, 0.9987],
         [1.0204, 0.9732, 1.1750]],
        [[0.9241, 0.9409, 1.0444],
         [0.9155, 0.9553, 0.9732],
         [1.1614, 0.9249, 1.0038],
         ...,
         [1.1444, 0.9514, 0.9826],
         [0.9288, 0.9202, 0.9418],
         [0.9570, 0.9412, 1.1099]],
        [[0.9207, 0.9373, 1.0386],
         [0.9096, 0.9514, 0.9720],
         [1.1598, 0.9214, 0.9926],
         ...,
         [1.1424, 0.9455, 0.9734],
         [0.9265, 0.9084, 0.9357],
         [0.9505, 0.9375, 1.1025]],
        ...,
        [[0.9166, 0.9329, 1.0316],
         [0.9027, 0.9468, 0.9704],
         [1.1579, 0.9171, 0.9793],
         ...,
         [1.1399, 0.9385, 0.9624],
         [0.9237, 0.8947, 0.9283],
         [0.9428, 0.9330, 1.0936]],
        [[0.9274, 0.9443, 1.0499],
         [0.9213, 0.9589, 0.9744],
         [1.1628, 0.9282, 1.0146],
         ...,
         [1.1462, 0.9570, 0.9915],
         [0.9309, 0.9317, 0.9476],
         [0.9632, 0.9446, 1.1168]],
        [[0.9348, 0.9521, 1.0622],
         [0.9349, 0.9671, 0.9769],
         [1.1661, 0.9357, 1.0399],
         ...,
         [1.1504, 0.9697, 1.0121],
         [0.9358, 0.9595, 0.9610],
         [0.9778, 0.9524, 1.1325]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1761, 11.8218, 21.1917],
         [14.3706, 12.7223, 15.4116],
         [28.2044, 10.9755, 21.1007],
         ...,
         [27.5427, 13.9619, 20.5660],
         [11.3711, 11.8369, 15.5976],
         [15.6540, 11.8120, 24.5167]],
        [[ 9.7688, 10.3567, 18.0789],
         [ 8.9552, 11.1421, 14.7260],
         [26.9352,  9.6710, 16.6222],
         ...,
         [26.5532, 11.2509, 15.8999],
         [10.4433,  9.2733, 12.9691],
         [12.0084, 10.3360, 21.0407]],
        [[ 9.5060, 10.1884, 17.7268],
         [ 8.4460, 10.9606, 14.6433],
         [26.7821,  9.5207, 16.1385],
         ...,
         [26.4332, 10.9543, 15.4014],
         [10.3338,  8.9973, 12.6762],
         [11.6207, 10.1666, 20.6462]],
        ...,
        [[ 9.1897,  9.9834, 17.2994],
         [ 7.8540, 10.7395, 14.5413],
         [26.5933,  9.3374, 15.5577],
         ...,
         [26.2850, 10.5969, 14.8043],
         [10.1995,  8.6661, 12.3218],
         [11.1568,  9.9602, 20.1668]],
        [[10.0179, 10.5145, 18.4101],
         [ 9.4526, 11.3122, 14.8028],
         [27.0773,  9.8119, 17.0817],
         ...,
         [26.6645, 11.5320, 16.3744],
         [10.5454,  9.5356, 13.2456],
         [12.3778, 10.4949, 21.4116]],
        [[10.5902, 10.8713, 19.1627],
         [10.6500, 11.6970, 14.9737],
         [27.3936, 10.1300, 18.1409],
         ...,
         [26.9117, 12.1772, 17.4723],
         [10.7742, 10.1410, 13.8766],
         [13.2337, 10.8542, 22.2533]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9513, 0.9794, 1.0801],
         [0.9803, 0.9987, 0.9861],
         [1.1631, 0.9613, 1.0787],
         ...,
         [1.1544, 1.0253, 1.0700],
         [0.9406, 0.9797, 0.9892],
         [0.9972, 0.9792, 1.1342]],
        [[0.9195, 0.9480, 1.0295],
         [0.9087, 0.9648, 0.9750],
         [1.1463, 0.9333, 1.0058],
         ...,
         [1.1413, 0.9672, 0.9941],
         [0.9284, 0.9248, 0.9464],
         [0.9491, 0.9476, 1.0777]],
        [[0.9160, 0.9444, 1.0238],
         [0.9020, 0.9610, 0.9736],
         [1.1443, 0.9301, 0.9980],
         ...,
         [1.1397, 0.9608, 0.9860],
         [0.9269, 0.9189, 0.9416],
         [0.9439, 0.9439, 1.0713]],
        ...,
        [[0.9118, 0.9400, 1.0168],
         [0.8942, 0.9562, 0.9720],
         [1.1418, 0.9262, 0.9885],
         ...,
         [1.1377, 0.9532, 0.9763],
         [0.9252, 0.9118, 0.9359],
         [0.9378, 0.9395, 1.0635]],
        [[0.9228, 0.9514, 1.0349],
         [0.9153, 0.9685, 0.9762],
         [1.1482, 0.9363, 1.0133],
         ...,
         [1.1428, 0.9732, 1.0018],
         [0.9297, 0.9304, 0.9509],
         [0.9539, 0.9510, 1.0837]],
        [[0.9303, 0.9590, 1.0471],
         [0.9311, 0.9767, 0.9790],
         [1.1524, 0.9431, 1.0305],
         ...,
         [1.1460, 0.9870, 1.0197],
         [0.9328, 0.9434, 0.9612],
         [0.9653, 0.9587, 1.0974]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1396, 11.8386, 21.8234],
         [13.9114, 12.6411, 15.3026],
         [28.5416, 11.0130, 22.3081],
         ...,
         [27.6078, 13.5564, 20.5664],
         [11.5473, 14.1319, 15.9872],
         [16.5855, 11.8406, 26.1592]],
        [[ 9.7700, 10.3672, 18.6867],
         [ 9.0634, 11.0742, 14.6534],
         [27.4681,  9.6401, 16.5974],
         ...,
         [26.4914, 10.9976, 15.4256],
         [10.2240,  9.3129, 12.7765],
         [12.1779, 10.3682, 22.3515]],
        [[ 9.5109, 10.1983, 18.3312],
         [ 8.5953, 10.8942, 14.5750],
         [27.3381,  9.4825, 16.0008],
         ...,
         [26.3564, 10.7165, 14.8860],
         [10.0711,  8.8443, 12.4268],
         [11.7210, 10.1992, 21.9204]],
        ...,
        [[ 9.1988,  9.9924, 17.8993],
         [ 8.0476, 10.6750, 14.4782],
         [27.1775,  9.2905, 15.2901],
         ...,
         [26.1897, 10.3776, 14.2425],
         [ 9.8846,  8.2954, 12.0061],
         [11.1777,  9.9932, 21.3970]],
        [[10.0155, 10.5257, 19.0211],
         [ 9.5183, 11.2429, 14.7262],
         [27.5887,  9.7879, 17.1679],
         ...,
         [26.6166, 11.2637, 15.9411],
         [10.3672,  9.7675, 13.1081],
         [12.6155, 10.5268, 22.7570]],
        [[10.5793, 10.8839, 19.7802],
         [10.6044, 11.6245, 14.8881],
         [27.8568, 10.1221, 18.4971],
         ...,
         [26.8952, 11.8738, 17.1404],
         [10.6904, 10.8508, 13.8705],
         [13.6376, 10.8853, 23.6779]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9539, 0.9745, 1.0904],
         [0.9773, 0.9917, 0.9843],
         [1.1706, 0.9568, 1.0983],
         ...,
         [1.1583, 1.0114, 1.0700],
         [0.9461, 1.0237, 0.9955],
         [1.0126, 0.9746, 1.1609]],
        [[0.9226, 0.9430, 1.0394],
         [0.9132, 0.9581, 0.9738],
         [1.1565, 0.9274, 1.0054],
         ...,
         [1.1435, 0.9565, 0.9863],
         [0.9286, 0.9204, 0.9433],
         [0.9544, 0.9430, 1.0990]],
        [[0.9191, 0.9393, 1.0336],
         [0.9070, 0.9543, 0.9725],
         [1.1547, 0.9240, 0.9957],
         ...,
         [1.1418, 0.9505, 0.9776],
         [0.9265, 0.9103, 0.9376],
         [0.9483, 0.9394, 1.0920]],
        ...,
        [[0.9150, 0.9349, 1.0266],
         [0.8998, 0.9496, 0.9709],
         [1.1526, 0.9199, 0.9841],
         ...,
         [1.1396, 0.9432, 0.9671],
         [0.9241, 0.8985, 0.9307],
         [0.9412, 0.9349, 1.0835]],
        [[0.9258, 0.9464, 1.0448],
         [0.9192, 0.9617, 0.9750],
         [1.1580, 0.9305, 1.0147],
         ...,
         [1.1452, 0.9622, 0.9947],
         [0.9305, 0.9301, 0.9486],
         [0.9602, 0.9464, 1.1056]],
        [[0.9333, 0.9540, 1.0572],
         [0.9336, 0.9699, 0.9776],
         [1.1616, 0.9377, 1.0363],
         ...,
         [1.1489, 0.9753, 1.0142],
         [0.9347, 0.9533, 0.9610],
         [0.9737, 0.9541, 1.1206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0795, 11.8817, 21.3603],
         [13.8583, 12.4393, 15.0461],
         [27.1006, 10.8422, 22.8597],
         ...,
         [27.1912, 13.0273, 20.8350],
         [11.4604, 12.1896, 15.8463],
         [13.5598, 11.8530, 21.7166]],
        [[ 9.9319, 10.3849, 18.2100],
         [ 9.0772, 10.8479, 14.4254],
         [25.5446,  9.3868, 16.1380],
         ...,
         [25.6385, 10.6078, 15.2437],
         [10.3573,  9.1280, 13.2079],
         [11.5718, 10.3739, 18.5452]],
        [[ 9.6941, 10.2132, 17.8539],
         [ 8.6140, 10.6656, 14.3503],
         [25.3583,  9.2208, 15.4571],
         ...,
         [25.4525, 10.3415, 14.6654],
         [10.2284,  8.8069, 12.9135],
         [11.3469, 10.2042, 18.1863]],
        ...,
        [[ 9.4069, 10.0041, 17.4215],
         [ 8.0718, 10.4436, 14.2578],
         [25.1289,  9.0188, 14.6519],
         ...,
         [25.2236, 10.0201, 13.9779],
         [10.0706,  8.4241, 12.5572],
         [11.0738,  9.9973, 17.7504]],
        [[10.1566, 10.5459, 18.5451],
         [ 9.5269, 11.0189, 14.4950],
         [25.7178,  9.5427, 16.7931],
         ...,
         [25.8113, 10.8599, 15.7979],
         [10.4778,  9.4348, 13.4857],
         [11.7833, 10.5331, 18.8828]],
        [[10.6706, 10.9102, 19.3066],
         [10.5998, 11.4059, 14.6498],
         [26.1042,  9.8960, 18.3345],
         ...,
         [26.1969, 11.4374, 17.0932],
         [10.7487, 10.1487, 14.1195],
         [12.2640, 10.8932, 19.6497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9537, 0.9753, 1.0852],
         [0.9772, 0.9873, 0.9825],
         [1.1522, 0.9530, 1.1096],
         ...,
         [1.1534, 0.9999, 1.0767],
         [0.9456, 0.9819, 0.9955],
         [0.9733, 0.9747, 1.0910]],
        [[0.9254, 0.9432, 1.0340],
         [0.9141, 0.9531, 0.9724],
         [1.1317, 0.9218, 1.0003],
         ...,
         [1.1329, 0.9480, 0.9857],
         [0.9310, 0.9163, 0.9526],
         [0.9470, 0.9430, 1.0394]],
        [[0.9222, 0.9395, 1.0282],
         [0.9079, 0.9492, 0.9712],
         [1.1292, 0.9183, 0.9892],
         ...,
         [1.1305, 0.9423, 0.9763],
         [0.9293, 0.9094, 0.9478],
         [0.9441, 0.9393, 1.0336]],
        ...,
        [[0.9184, 0.9350, 1.0211],
         [0.9008, 0.9445, 0.9697],
         [1.1262, 0.9139, 0.9761],
         ...,
         [1.1274, 0.9354, 0.9651],
         [0.9272, 0.9012, 0.9420],
         [0.9404, 0.9349, 1.0265]],
        [[0.9283, 0.9467, 1.0394],
         [0.9200, 0.9568, 0.9735],
         [1.1340, 0.9252, 1.0109],
         ...,
         [1.1352, 0.9534, 0.9947],
         [0.9326, 0.9228, 0.9571],
         [0.9498, 0.9464, 1.0449]],
        [[0.9351, 0.9545, 1.0518],
         [0.9342, 0.9651, 0.9761],
         [1.1391, 0.9327, 1.0360],
         ...,
         [1.1403, 0.9658, 1.0158],
         [0.9361, 0.9382, 0.9674],
         [0.9562, 0.9541, 1.0574]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1108, 11.9941, 21.3138],
         [13.3242, 12.2983, 14.6983],
         [26.4972, 10.8842, 22.7459],
         ...,
         [26.8570, 12.7226, 21.0133],
         [11.3357, 11.0890, 15.8995],
         [12.5580, 12.0509, 21.8873]],
        [[ 9.9433, 10.4224, 18.1521],
         [ 9.2335, 10.6366, 14.0860],
         [23.8236,  9.2556, 15.7598],
         ...,
         [24.8169, 10.3758, 15.2148],
         [10.5584,  9.3613, 14.0523],
         [11.3372, 10.4440, 18.6443]],
        [[ 9.7035, 10.2427, 17.7948],
         [ 8.8237, 10.4471, 14.0120],
         [23.5120,  9.0717, 15.0600],
         ...,
         [24.5754, 10.1172, 14.6186],
         [10.4659,  9.1671, 13.8391],
         [11.1946, 10.2606, 18.2779]],
        ...,
        [[ 9.4139, 10.0241, 17.3612],
         [ 8.3402, 10.2167, 13.9207],
         [23.1309,  8.8486, 14.2344],
         ...,
         [24.2789,  9.8052, 13.9111],
         [10.3523,  8.9316, 13.5789],
         [11.0200, 10.0374, 17.8330]],
        [[10.1699, 10.5910, 18.4882],
         [ 9.6287, 10.8145, 14.1547],
         [24.1150,  9.4286, 16.4347],
         ...,
         [25.0420, 10.6205, 15.7867],
         [10.6444,  9.5443, 14.2520],
         [11.4705, 10.6162, 18.9892]],
        [[10.6885, 10.9729, 19.2523],
         [10.5618, 11.2177, 14.3074],
         [24.7706,  9.8220, 18.0281],
         ...,
         [25.5459, 11.1809, 17.1260],
         [10.8369,  9.9608, 14.7029],
         [11.7702, 11.0063, 19.7729]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9623, 0.9793, 1.0853],
         [0.9784, 0.9858, 0.9777],
         [1.1524, 0.9555, 1.1086],
         ...,
         [1.1572, 0.9949, 1.0804],
         [0.9521, 0.9599, 0.9973],
         [0.9682, 0.9805, 1.0946]],
        [[0.9337, 0.9456, 1.0339],
         [0.9243, 0.9502, 0.9678],
         [1.1171, 0.9206, 0.9950],
         ...,
         [1.1302, 0.9446, 0.9861],
         [0.9418, 0.9229, 0.9672],
         [0.9521, 0.9461, 1.0419]],
        [[0.9305, 0.9418, 1.0281],
         [0.9189, 0.9462, 0.9666],
         [1.1130, 0.9167, 0.9836],
         ...,
         [1.1270, 0.9391, 0.9764],
         [0.9406, 0.9187, 0.9637],
         [0.9502, 0.9422, 1.0359]],
        ...,
        [[0.9267, 0.9371, 1.0210],
         [0.9125, 0.9412, 0.9651],
         [1.1080, 0.9119, 0.9702],
         ...,
         [1.1231, 0.9324, 0.9649],
         [0.9391, 0.9137, 0.9595],
         [0.9479, 0.9374, 1.0287]],
        [[0.9367, 0.9492, 1.0394],
         [0.9295, 0.9540, 0.9689],
         [1.1210, 0.9243, 1.0060],
         ...,
         [1.1332, 0.9499, 0.9954],
         [0.9429, 0.9268, 0.9705],
         [0.9539, 0.9498, 1.0475]],
        [[0.9435, 0.9574, 1.0518],
         [0.9418, 0.9627, 0.9714],
         [1.1296, 0.9327, 1.0319],
         ...,
         [1.1399, 0.9619, 1.0172],
         [0.9455, 0.9357, 0.9778],
         [0.9578, 0.9581, 1.0603]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3511, 12.1401, 20.8372],
         [12.2496, 12.0224, 14.4177],
         [26.0661, 11.4611, 23.7028],
         ...,
         [26.2081, 11.9204, 21.9686],
         [11.4753, 14.2229, 20.2179],
         [11.6152, 12.3237, 21.9928]],
        [[ 9.9568, 10.4883, 17.7770],
         [ 9.6951, 10.4327, 13.7591],
         [21.3666,  9.2366, 14.9900],
         ...,
         [23.0850,  9.6984, 14.8383],
         [10.6544, 11.4823, 18.1259],
         [10.9155, 10.6727, 18.1070]],
        [[ 9.6947, 10.3002, 17.4309],
         [ 9.4184, 10.2511, 13.6797],
         [20.8471,  8.9932, 14.1634],
         ...,
         [22.7253,  9.4539, 14.1348],
         [10.5570, 11.1821, 17.8824],
         [10.8319, 10.4843, 17.6764]],
        ...,
        [[ 9.3789, 10.0713, 17.0106],
         [ 9.0860, 10.0302, 13.5818],
         [20.2200,  8.6999, 13.2005],
         ...,
         [22.2865,  9.1589, 13.3078],
         [10.4373, 10.8203, 17.5848],
         [10.7289, 10.2552, 17.1562]],
        [[10.2050, 10.6651, 18.1026],
         [ 9.9577, 10.6032, 13.8328],
         [21.8576,  9.4672, 15.7959],
         ...,
         [23.4222,  9.9298, 15.5189],
         [10.7452, 11.7667, 18.3535],
         [10.9933, 10.8496, 18.5138]],
        [[10.7750, 11.0658, 18.8425],
         [10.5627, 10.9893, 13.9969],
         [22.9814,  9.9967, 17.7309],
         ...,
         [24.1838, 10.4600, 17.1333],
         [10.9482, 12.4193, 18.8661],
         [11.1669, 11.2504, 19.4441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9820, 0.9833, 1.0810],
         [0.9807, 0.9808, 0.9766],
         [1.1633, 0.9687, 1.1276],
         ...,
         [1.1652, 0.9786, 1.0994],
         [0.9705, 1.0280, 1.0710],
         [0.9723, 0.9872, 1.0998]],
        [[0.9504, 0.9479, 1.0313],
         [0.9469, 0.9467, 0.9659],
         [1.1012, 0.9210, 0.9859],
         ...,
         [1.1239, 0.9309, 0.9835],
         [0.9596, 0.9692, 1.0369],
         [0.9631, 0.9518, 1.0366]],
        [[0.9469, 0.9438, 1.0256],
         [0.9433, 0.9428, 0.9646],
         [1.0943, 0.9158, 0.9725],
         ...,
         [1.1191, 0.9257, 0.9720],
         [0.9583, 0.9628, 1.0330],
         [0.9620, 0.9478, 1.0296]],
        ...,
        [[0.9428, 0.9389, 1.0188],
         [0.9389, 0.9381, 0.9630],
         [1.0860, 0.9095, 0.9568],
         ...,
         [1.1133, 0.9194, 0.9586],
         [0.9567, 0.9550, 1.0281],
         [0.9606, 0.9429, 1.0212]],
        [[0.9537, 0.9517, 1.0365],
         [0.9504, 0.9503, 0.9671],
         [1.1077, 0.9260, 0.9990],
         ...,
         [1.1283, 0.9359, 0.9945],
         [0.9608, 0.9753, 1.0406],
         [0.9641, 0.9556, 1.0432]],
        [[0.9612, 0.9603, 1.0486],
         [0.9584, 0.9586, 0.9698],
         [1.1225, 0.9373, 1.0305],
         ...,
         [1.1384, 0.9473, 1.0208],
         [0.9635, 0.9893, 1.0490],
         [0.9664, 0.9642, 1.0584]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.2022, 12.0529, 21.1343],
         [12.8617, 12.2043, 14.5747],
         [26.2653, 11.0517, 23.1293],
         ...,
         [26.5992, 12.3459, 21.3631],
         [11.3839, 12.4452, 17.2951],
         [11.8313, 12.1724, 21.5451]],
        [[ 9.9483, 10.4448, 18.0027],
         [ 9.4018, 10.5341, 13.9576],
         [22.8194,  9.2175, 15.4360],
         ...,
         [24.1309, 10.0806, 15.0625],
         [10.5966, 10.1725, 15.4239],
         [11.2190, 10.5094, 18.5762]],
        [[ 9.7000, 10.2613, 17.6488],
         [ 9.0441, 10.3439, 13.8831],
         [22.4256,  9.0127, 14.6823],
         ...,
         [23.8418,  9.8307, 14.4248],
         [10.5030,  9.9217, 15.2068],
         [11.1454, 10.3200, 18.2383]],
        ...,
        [[ 9.4003, 10.0380, 17.2192],
         [ 8.6190, 10.1126, 13.7911],
         [21.9462,  8.7649, 13.7978],
         ...,
         [23.4877,  9.5293, 13.6707],
         [10.3879,  9.6190, 14.9416],
         [11.0548, 10.0897, 17.8275]],
        [[10.1832, 10.6172, 18.3357],
         [ 9.7446, 10.7128, 14.0268],
         [23.1891,  9.4107, 16.1662],
         ...,
         [24.4010, 10.3168, 15.6762],
         [10.6837, 10.4097, 15.6270],
         [11.2873, 10.6873, 18.8936]],
        [[10.7214, 11.0076, 19.0925],
         [10.5459, 11.1179, 14.1807],
         [24.0263,  9.8514, 17.9019],
         ...,
         [25.0077, 10.8580, 17.1205],
         [10.8786, 10.9527, 16.0849],
         [11.4396, 11.0907, 19.6135]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9705, 0.9809, 1.0837],
         [0.9792, 0.9841, 0.9770],
         [1.1563, 0.9594, 1.1162],
         ...,
         [1.1607, 0.9872, 1.0874],
         [0.9597, 0.9893, 1.0213],
         [0.9656, 0.9835, 1.0904]],
        [[0.9407, 0.9464, 1.0328],
         [0.9335, 0.9483, 0.9670],
         [1.1108, 0.9201, 0.9910],
         ...,
         [1.1281, 0.9386, 0.9850],
         [0.9492, 0.9406, 0.9908],
         [0.9575, 0.9478, 1.0421]],
        [[0.9374, 0.9425, 1.0270],
         [0.9287, 0.9443, 0.9658],
         [1.1056, 0.9157, 0.9788],
         ...,
         [1.1243, 0.9332, 0.9746],
         [0.9480, 0.9352, 0.9873],
         [0.9565, 0.9437, 1.0366]],
        ...,
        [[0.9334, 0.9377, 1.0200],
         [0.9231, 0.9393, 0.9643],
         [1.0992, 0.9104, 0.9644],
         ...,
         [1.1196, 0.9268, 0.9623],
         [0.9465, 0.9287, 0.9830],
         [0.9553, 0.9388, 1.0299]],
        [[0.9438, 0.9501, 1.0382],
         [0.9380, 0.9522, 0.9681],
         [1.1157, 0.9242, 1.0029],
         ...,
         [1.1317, 0.9437, 0.9950],
         [0.9504, 0.9457, 0.9942],
         [0.9584, 0.9516, 1.0473]],
        [[0.9509, 0.9585, 1.0505],
         [0.9486, 0.9608, 0.9706],
         [1.1267, 0.9337, 1.0312],
         ...,
         [1.1397, 0.9553, 1.0184],
         [0.9530, 0.9573, 1.0016],
         [0.9604, 0.9603, 1.0590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3977, 12.1742, 21.2195],
         [12.3797, 12.0978, 14.5348],
         [26.0889, 11.2676, 23.4597],
         ...,
         [26.2911, 11.9767, 21.8591],
         [11.6107, 15.5532, 21.7892],
         [11.4927, 12.3382, 21.3885]],
        [[ 9.8759, 10.5107, 18.0830],
         [ 9.6240, 10.4652, 13.9376],
         [22.0175,  9.2178, 15.0830],
         ...,
         [23.3862,  9.7636, 14.9059],
         [10.4555, 12.2323, 19.2996],
         [10.9047, 10.6944, 18.2959]],
        [[ 9.6018, 10.3213, 17.7284],
         [ 9.3286, 10.2791, 13.8654],
         [21.5599,  8.9915, 14.2805],
         ...,
         [23.0497,  9.5198, 14.2160],
         [10.3207, 11.8740, 19.0119],
         [10.8341, 10.5068, 17.9456]],
        ...,
        [[ 9.2720, 10.0909, 17.2981],
         [ 8.9746, 10.0527, 13.7763],
         [21.0051,  8.7183, 13.3434],
         ...,
         [22.6388,  9.2256, 13.4038],
         [10.1559, 11.4438, 18.6608],
         [10.7470, 10.2785, 17.5201]],
        [[10.1359, 10.6887, 18.4165],
         [ 9.9050, 10.6400, 14.0046],
         [22.4486,  9.4318, 15.8640],
         ...,
         [23.7013,  9.9943, 15.5726],
         [10.5814, 12.5728, 19.5691],
         [10.9704, 10.8706, 18.6254]],
        [[10.7342, 11.0922, 19.1746],
         [10.5544, 11.0362, 14.1536],
         [23.4301,  9.9217, 17.7334],
         ...,
         [24.4115, 10.5227, 17.1512],
         [10.8648, 13.3579, 20.1771],
         [11.1166, 11.2697, 19.3736]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9804, 0.9845, 1.0861],
         [0.9801, 0.9828, 0.9773],
         [1.1613, 0.9650, 1.1225],
         ...,
         [1.1640, 0.9802, 1.0965],
         [0.9700, 1.0569, 1.0953],
         [0.9684, 0.9880, 1.0888]],
        [[0.9470, 0.9488, 1.0351],
         [0.9437, 0.9478, 0.9676],
         [1.1075, 0.9211, 0.9863],
         ...,
         [1.1256, 0.9328, 0.9834],
         [0.9547, 0.9857, 1.0548],
         [0.9606, 0.9527, 1.0385]],
        [[0.9434, 0.9447, 1.0293],
         [0.9398, 0.9438, 0.9665],
         [1.1014, 0.9162, 0.9732],
         ...,
         [1.1211, 0.9276, 0.9722],
         [0.9529, 0.9780, 1.0502],
         [0.9597, 0.9487, 1.0328]],
        ...,
        [[0.9391, 0.9398, 1.0223],
         [0.9351, 0.9390, 0.9650],
         [1.0941, 0.9104, 0.9580],
         ...,
         [1.1157, 0.9212, 0.9590],
         [0.9507, 0.9688, 1.0445],
         [0.9585, 0.9438, 1.0259]],
        [[0.9505, 0.9526, 1.0405],
         [0.9474, 0.9516, 0.9687],
         [1.1132, 0.9257, 0.9990],
         ...,
         [1.1297, 0.9377, 0.9942],
         [0.9564, 0.9930, 1.0592],
         [0.9615, 0.9565, 1.0439]],
        [[0.9584, 0.9613, 1.0528],
         [0.9560, 0.9601, 0.9711],
         [1.1262, 0.9362, 1.0294],
         ...,
         [1.1391, 0.9491, 1.0199],
         [0.9601, 1.0099, 1.0691],
         [0.9634, 0.9651, 1.0561]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.2651, 12.0946, 21.1629],
         [12.6955, 12.1715, 14.5615],
         [26.2029, 11.1163, 23.2404],
         ...,
         [26.5001, 12.2115, 21.5214],
         [11.4561, 13.3150, 18.6773],
         [11.5618, 12.2315, 21.4424]],
        [[ 9.9242, 10.4636, 18.0289],
         [ 9.4721, 10.5088, 13.9511],
         [22.5526,  9.2143, 15.3162],
         ...,
         [23.8867,  9.9701, 15.0102],
         [10.5495, 10.8149, 16.5306],
         [11.1385, 10.5587, 18.4983]],
        [[ 9.6674, 10.2777, 17.6747],
         [ 9.1348, 10.3194, 13.8773],
         [22.1377,  9.0028, 14.5456],
         ...,
         [23.5817,  9.7229, 14.3554],
         [10.4424, 10.5400, 16.2826],
         [11.0872, 10.3682, 18.1632]],
        ...,
        [[ 9.3579, 10.0515, 17.2448],
         [ 8.7328, 10.0891, 13.7863],
         [21.6333,  8.7469, 13.6429],
         ...,
         [23.2085,  9.4246, 13.5823],
         [10.3109, 10.2086, 15.9800],
         [11.0238, 10.1365, 17.7556]],
        [[10.1673, 10.6383, 18.3622],
         [ 9.7945, 10.6867, 14.0195],
         [22.9426,  9.4141, 16.0637],
         ...,
         [24.1718, 10.2038, 15.6412],
         [10.6494, 11.0750, 16.7629],
         [11.1861, 10.7376, 18.8132]],
        [[10.7251, 11.0341, 19.1196],
         [10.5454, 11.0900, 14.1718],
         [23.8272,  9.8703, 17.8450],
         ...,
         [24.8131, 10.7393, 17.1291],
         [10.8731, 11.6714, 17.2870],
         [11.2918, 11.1434, 19.5271]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9736, 0.9821, 1.0845],
         [0.9793, 0.9838, 0.9771],
         [1.1578, 0.9611, 1.1183],
         ...,
         [1.1618, 0.9846, 1.0903],
         [0.9629, 1.0083, 1.0441],
         [0.9643, 0.9850, 1.0891]],
        [[0.9427, 0.9471, 1.0335],
         [0.9367, 0.9481, 0.9672],
         [1.1096, 0.9203, 0.9894],
         ...,
         [1.1272, 0.9365, 0.9844],
         [0.9510, 0.9547, 1.0092],
         [0.9588, 0.9492, 1.0412]],
        [[0.9393, 0.9431, 1.0278],
         [0.9323, 0.9440, 0.9660],
         [1.1041, 0.9158, 0.9769],
         ...,
         [1.1232, 0.9312, 0.9738],
         [0.9496, 0.9488, 1.0051],
         [0.9581, 0.9451, 1.0357]],
        ...,
        [[0.9352, 0.9383, 1.0208],
         [0.9270, 0.9391, 0.9645],
         [1.0974, 0.9103, 0.9622],
         ...,
         [1.1183, 0.9249, 0.9612],
         [0.9478, 0.9417, 1.0002],
         [0.9572, 0.9401, 1.0291]],
        [[0.9459, 0.9509, 1.0390],
         [0.9410, 0.9519, 0.9683],
         [1.1147, 0.9246, 1.0016],
         ...,
         [1.1310, 0.9416, 0.9947],
         [0.9523, 0.9602, 1.0129],
         [0.9594, 0.9530, 1.0463]],
        [[0.9533, 0.9594, 1.0513],
         [0.9509, 0.9606, 0.9708],
         [1.1264, 0.9344, 1.0305],
         ...,
         [1.1395, 0.9530, 1.0189],
         [0.9552, 0.9730, 1.0215],
         [0.9608, 0.9617, 1.0579]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3795, 12.1135, 21.2607],
         [12.7117, 12.2115, 14.7384],
         [26.2408, 11.0251, 23.1192],
         ...,
         [26.4881, 12.1505, 21.6173],
         [11.5402, 13.8391, 19.9140],
         [11.5242, 12.2364, 21.6411]],
        [[ 9.8379, 10.4733, 18.1081],
         [ 9.4649, 10.5403, 14.1592],
         [23.0749,  9.2259, 15.3056],
         ...,
         [23.9554,  9.9239, 15.0188],
         [10.3802, 11.1822, 17.5097],
         [11.1256, 10.5636, 18.6777]],
        [[ 9.5619, 10.2864, 17.7519],
         [ 9.1256, 10.3500, 14.0892],
         [22.7105,  9.0247, 14.5438],
         ...,
         [23.6593,  9.6783, 14.3568],
         [10.2449, 10.8909, 17.2330],
         [11.0773, 10.3731, 18.3403]],
        ...,
        [[ 9.2302, 10.0590, 17.3194],
         [ 8.7213, 10.1185, 14.0026],
         [22.2663,  8.7810, 13.6507],
         ...,
         [23.2967,  9.3820, 13.5755],
         [10.0795, 10.5400, 16.8957],
         [11.0175, 10.1414, 17.9300]],
        [[10.0997, 10.6489, 18.4433],
         [ 9.7894, 10.7191, 14.2243],
         [23.4164,  9.4157, 16.0443],
         ...,
         [24.2322, 10.1562, 15.6571],
         [10.5066, 11.4580, 17.7691],
         [11.1705, 10.7425, 18.9947]],
        [[10.7023, 11.0469, 19.2052],
         [10.5453, 11.1244, 14.3688],
         [24.1882,  9.8484, 17.8031],
         ...,
         [24.8542, 10.6881, 17.1633],
         [10.7911, 12.0908, 18.3551],
         [11.2701, 11.1483, 19.7134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9735, 0.9833, 1.0855],
         [0.9779, 0.9854, 0.9795],
         [1.1567, 0.9599, 1.1158],
         ...,
         [1.1599, 0.9840, 1.0913],
         [0.9624, 1.0203, 1.0636],
         [0.9622, 0.9859, 1.0917]],
        [[0.9399, 0.9481, 1.0343],
         [0.9350, 0.9495, 0.9700],
         [1.1148, 0.9213, 0.9887],
         ...,
         [1.1265, 0.9363, 0.9840],
         [0.9471, 0.9633, 1.0245],
         [0.9569, 0.9500, 1.0435]],
        [[0.9362, 0.9441, 1.0285],
         [0.9305, 0.9454, 0.9689],
         [1.1100, 0.9170, 0.9763],
         ...,
         [1.1225, 0.9310, 0.9732],
         [0.9453, 0.9570, 1.0200],
         [0.9563, 0.9459, 1.0380]],
        ...,
        [[0.9319, 0.9392, 1.0214],
         [0.9251, 0.9405, 0.9675],
         [1.1041, 0.9118, 0.9618],
         ...,
         [1.1177, 0.9247, 0.9605],
         [0.9431, 0.9495, 1.0145],
         [0.9555, 0.9410, 1.0314]],
        [[0.9433, 0.9518, 1.0397],
         [0.9392, 0.9534, 0.9711],
         [1.1193, 0.9254, 1.0007],
         ...,
         [1.1301, 0.9413, 0.9944],
         [0.9487, 0.9692, 1.0287],
         [0.9575, 0.9539, 1.0487]],
        [[0.9513, 0.9604, 1.0521],
         [0.9492, 0.9620, 0.9734],
         [1.1295, 0.9347, 1.0293],
         ...,
         [1.1383, 0.9527, 1.0189],
         [0.9525, 0.9828, 1.0383],
         [0.9588, 0.9626, 1.0604]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3830, 12.0846, 21.1171],
         [12.8746, 12.2483, 14.8920],
         [26.3862, 10.9679, 23.3430],
         ...,
         [26.5325, 12.0663, 21.7383],
         [11.6243, 13.5794, 20.1398],
         [11.5754, 12.2456, 21.9772]],
        [[ 9.8045, 10.4588, 17.9871],
         [ 9.3966, 10.5758, 14.2988],
         [23.7513,  9.2525, 15.3264],
         ...,
         [24.1183,  9.8680, 14.9703],
         [10.1835, 11.0454, 17.5860],
         [11.1408, 10.5730, 18.9566]],
        [[ 9.5252, 10.2734, 17.6334],
         [ 9.0373, 10.3853, 14.2270],
         [23.4440,  9.0598, 14.5486],
         ...,
         [23.8352,  9.6253, 14.2947],
         [10.0181, 10.7666, 17.2933],
         [11.0881, 10.3826, 18.6128]],
        ...,
        [[ 9.1895, 10.0479, 17.2041],
         [ 8.6104, 10.1537, 14.1385],
         [23.0681,  8.8261, 13.6379],
         ...,
         [23.4884,  9.3325, 13.4985],
         [ 9.8165, 10.4303, 16.9367],
         [11.0231, 10.1509, 18.1947]],
        [[10.0696, 10.6330, 18.3199],
         [ 9.7409, 10.7548, 14.3654],
         [24.0386,  9.4342, 16.0813],
         ...,
         [24.3827, 10.0974, 15.6222],
         [10.3387, 11.3092, 17.8606],
         [11.1896, 10.7520, 19.2796]],
        [[10.6803, 11.0276, 19.0763],
         [10.5461, 11.1604, 14.5134],
         [24.6849,  9.8476, 17.8814],
         ...,
         [24.9765, 10.6228, 17.1632],
         [10.6896, 11.9139, 18.4820],
         [11.2981, 11.1577, 20.0121]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9711, 0.9825, 1.0828],
         [0.9776, 0.9860, 0.9815],
         [1.1562, 0.9585, 1.1190],
         ...,
         [1.1581, 0.9821, 1.0929],
         [0.9611, 1.0145, 1.0669],
         [0.9604, 0.9859, 1.0968]],
        [[0.9370, 0.9476, 1.0319],
         [0.9316, 0.9501, 0.9719],
         [1.1213, 0.9218, 0.9886],
         ...,
         [1.1262, 0.9350, 0.9828],
         [0.9420, 0.9602, 1.0254],
         [0.9547, 0.9501, 1.0476]],
        [[0.9333, 0.9437, 1.0261],
         [0.9269, 0.9461, 0.9707],
         [1.1173, 0.9176, 0.9759],
         ...,
         [1.1225, 0.9298, 0.9718],
         [0.9399, 0.9542, 1.0206],
         [0.9540, 0.9460, 1.0421]],
        ...,
        [[0.9289, 0.9388, 1.0191],
         [0.9212, 0.9411, 0.9693],
         [1.1123, 0.9126, 0.9611],
         ...,
         [1.1179, 0.9235, 0.9589],
         [0.9372, 0.9470, 1.0148],
         [0.9531, 0.9410, 1.0353]],
        [[0.9405, 0.9514, 1.0373],
         [0.9362, 0.9540, 0.9730],
         [1.1251, 0.9257, 1.0009],
         ...,
         [1.1297, 0.9399, 0.9934],
         [0.9441, 0.9659, 1.0298],
         [0.9553, 0.9539, 1.0529]],
        [[0.9486, 0.9598, 1.0496],
         [0.9468, 0.9627, 0.9754],
         [1.1337, 0.9345, 1.0302],
         ...,
         [1.1375, 0.9511, 1.0185],
         [0.9487, 0.9788, 1.0399],
         [0.9568, 0.9626, 1.0648]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.4046, 12.0471, 20.6592],
         [13.1276, 12.2719, 15.0623],
         [26.4842, 10.9220, 23.1228],
         ...,
         [26.4940, 11.9587, 21.8907],
         [11.6906, 13.5043, 20.6455],
         [11.3134, 12.2616, 21.8150]],
        [[ 9.7687, 10.4424, 17.6084],
         [ 9.3006, 10.6027, 14.4315],
         [24.1875,  9.2801, 15.2752],
         ...,
         [24.1342,  9.7912, 14.9807],
         [10.0813, 10.9415, 18.0807],
         [11.0333, 10.5906, 18.7955]],
        [[ 9.4840, 10.2592, 17.2635],
         [ 8.9122, 10.4125, 14.3553],
         [23.9175,  9.0948, 14.5111],
         ...,
         [23.8571,  9.5518, 14.2935],
         [ 9.8982, 10.6602, 17.7862],
         [10.9992, 10.4002, 18.4520]],
        ...,
        [[ 9.1422, 10.0364, 16.8448],
         [ 8.4526, 10.1812, 14.2613],
         [23.5864,  8.8700, 13.6155],
         ...,
         [23.5176,  9.2628, 13.4843],
         [ 9.6755, 10.3210, 17.4274],
         [10.9569, 10.1687, 18.0344]],
        [[10.0391, 10.6144, 17.9329],
         [ 9.6743, 10.7813, 14.5023],
         [24.4396,  9.4545, 16.0164],
         ...,
         [24.3929, 10.0176, 15.6444],
         [10.2534, 11.2079, 18.3569],
         [11.0650, 10.7694, 19.1182]],
        [[10.6625, 11.0040, 18.6703],
         [10.5527, 11.1863, 14.6596],
         [25.0051,  9.8510, 17.7817],
         ...,
         [24.9736, 10.5357, 17.2148],
         [10.6436, 11.8187, 18.9814],
         [11.1352, 11.1747, 19.8502]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9692, 0.9829, 1.0752],
         [0.9788, 0.9877, 0.9842],
         [1.1553, 0.9588, 1.1153],
         ...,
         [1.1554, 0.9810, 1.0953],
         [0.9598, 1.0142, 1.0750],
         [0.9548, 0.9875, 1.0940]],
        [[0.9344, 0.9485, 1.0256],
         [0.9282, 0.9519, 0.9739],
         [1.1249, 0.9236, 0.9877],
         ...,
         [1.1242, 0.9345, 0.9829],
         [0.9385, 0.9592, 1.0333],
         [0.9511, 0.9517, 1.0449]],
        [[0.9306, 0.9446, 1.0200],
         [0.9231, 0.9479, 0.9727],
         [1.1214, 0.9196, 0.9752],
         ...,
         [1.1206, 0.9294, 0.9717],
         [0.9361, 0.9532, 1.0285],
         [0.9507, 0.9476, 1.0393]],
        ...,
        [[0.9261, 0.9398, 1.0132],
         [0.9170, 0.9429, 0.9712],
         [1.1170, 0.9148, 0.9607],
         ...,
         [1.1161, 0.9232, 0.9585],
         [0.9332, 0.9459, 1.0227],
         [0.9501, 0.9426, 1.0325]],
        [[0.9380, 0.9522, 1.0309],
         [0.9331, 0.9558, 0.9751],
         [1.1283, 0.9273, 0.9997],
         ...,
         [1.1277, 0.9394, 0.9937],
         [0.9408, 0.9649, 1.0378],
         [0.9515, 0.9555, 1.0502]],
        [[0.9462, 0.9605, 1.0429],
         [0.9448, 0.9644, 0.9776],
         [1.1357, 0.9358, 1.0284],
         ...,
         [1.1353, 0.9505, 1.0192],
         [0.9460, 0.9780, 1.0479],
         [0.9524, 0.9642, 1.0621]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.4197, 12.0609, 20.5983],
         [13.0955, 12.2558, 15.0494],
         [26.4945, 10.9362, 23.2874],
         ...,
         [26.4667, 11.8481, 22.0377],
         [11.7969, 13.2801, 20.7698],
         [11.2687, 12.2749, 21.6399]],
        [[ 9.7521, 10.4482, 17.5621],
         [ 9.3122, 10.5840, 14.4243],
         [24.2467,  9.2827, 15.2180],
         ...,
         [24.1034,  9.7145, 14.9298],
         [ 9.9952, 10.7969, 18.1564],
         [10.9504, 10.6064, 18.6567]],
        [[ 9.4645, 10.2642, 17.2189],
         [ 8.9274, 10.3936, 14.3487],
         [23.9820,  9.0963, 14.4373],
         ...,
         [23.8259,  9.4787, 14.2273],
         [ 9.7922, 10.5237, 17.8566],
         [10.9117, 10.4163, 18.3173]],
        ...,
        [[ 9.1193, 10.0403, 16.8021],
         [ 8.4717, 10.1620, 14.2555],
         [23.6576,  8.8700, 13.5238],
         ...,
         [23.4860,  9.1939, 13.4010],
         [ 9.5460, 10.1943, 17.4915],
         [10.8638, 10.1850, 17.9045]],
        [[10.0253, 10.6210, 17.8851],
         [ 9.6822, 10.7629, 14.4944],
         [24.4936,  9.4583, 15.9762],
         ...,
         [24.3624,  9.9375, 15.6093],
         [10.1863, 11.0554, 18.4376],
         [10.9864, 10.7850, 18.9757]],
        [[10.6557, 11.0125, 18.6190],
         [10.5516, 11.1684, 14.6503],
         [25.0474,  9.8575, 17.7856],
         ...,
         [24.9439, 10.4477, 17.2199],
         [10.6211, 11.6478, 19.0736],
         [11.0660, 11.1898, 19.6990]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9697, 0.9833, 1.0745],
         [0.9786, 0.9875, 0.9843],
         [1.1557, 0.9592, 1.1183],
         ...,
         [1.1553, 0.9788, 1.0980],
         [0.9614, 1.0095, 1.0773],
         [0.9545, 0.9879, 1.0915]],
        [[0.9344, 0.9487, 1.0252],
         [0.9286, 0.9517, 0.9741],
         [1.1260, 0.9238, 0.9870],
         ...,
         [1.1241, 0.9330, 0.9823],
         [0.9376, 0.9562, 1.0348],
         [0.9503, 0.9521, 1.0430]],
        [[0.9306, 0.9448, 1.0196],
         [0.9235, 0.9476, 0.9729],
         [1.1225, 0.9198, 0.9743],
         ...,
         [1.1204, 0.9280, 0.9709],
         [0.9350, 0.9504, 1.0299],
         [0.9497, 0.9481, 1.0374]],
        ...,
        [[0.9261, 0.9400, 1.0128],
         [0.9175, 0.9426, 0.9714],
         [1.1182, 0.9149, 0.9595],
         ...,
         [1.1159, 0.9219, 0.9575],
         [0.9317, 0.9433, 1.0240],
         [0.9491, 0.9431, 1.0307]],
        [[0.9380, 0.9525, 1.0304],
         [0.9335, 0.9555, 0.9753],
         [1.1292, 0.9275, 0.9994],
         ...,
         [1.1275, 0.9378, 0.9934],
         [0.9402, 0.9618, 1.0394],
         [0.9507, 0.9560, 1.0481]],
        [[0.9464, 0.9608, 1.0423],
         [0.9450, 0.9642, 0.9778],
         [1.1366, 0.9361, 1.0288],
         ...,
         [1.1352, 0.9487, 1.0196],
         [0.9459, 0.9745, 1.0497],
         [0.9518, 0.9646, 1.0599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5433, 12.1101, 19.9456],
         [12.9931, 12.1792, 15.1466],
         [26.7806, 10.9798, 23.7794],
         ...,
         [26.3010, 11.2861, 22.9130],
         [12.7064, 12.1028, 21.8099],
         [11.7018, 12.3451, 20.7268]],
        [[ 9.5957, 10.4715, 17.0766],
         [ 9.3502, 10.5143, 14.5334],
         [24.9972,  9.3350, 14.9277],
         ...,
         [24.0674,  9.3666, 14.7301],
         [ 9.4672, 10.2337, 18.9082],
         [10.3405, 10.7050, 17.6011]],
        [[ 9.2827, 10.2848, 16.7515],
         [ 8.9771, 10.3247, 14.4593],
         [24.7849,  9.1493, 14.0916],
         ...,
         [23.8044,  9.1529, 13.9461],
         [ 9.1286, 10.0234, 18.5770],
         [10.1834, 10.5178, 17.2485]],
        ...,
        [[ 8.9084, 10.0576, 16.3565],
         [ 8.5345, 10.0942, 14.3677],
         [24.5238,  8.9240, 13.1187],
         ...,
         [23.4820,  8.8945, 13.0308],
         [ 8.7250,  9.7683, 18.1739],
         [ 9.9917, 10.2899, 16.8207]],
        [[ 9.8940, 10.6470, 17.3824],
         [ 9.7085, 10.6925, 14.6022],
         [25.1949,  9.5097, 15.7435],
         ...,
         [24.3128,  9.5683, 15.4930],
         [ 9.7911, 10.4318, 19.2192],
         [10.4877, 10.8808, 17.9330]],
        [[10.5855, 11.0446, 18.0767],
         [10.5484, 11.0963, 14.7552],
         [25.6366,  9.9070, 17.7050],
         ...,
         [24.8631, 10.0289, 17.3190],
         [10.5453, 10.8826, 19.9238],
         [10.8200, 11.2791, 18.6877]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9732, 0.9870, 1.0653],
         [0.9792, 0.9885, 0.9872],
         [1.1614, 0.9627, 1.1277],
         ...,
         [1.1551, 0.9693, 1.1136],
         [0.9754, 0.9868, 1.0956],
         [0.9621, 0.9920, 1.0780]],
        [[0.9343, 0.9518, 1.0186],
         [0.9310, 0.9528, 0.9773],
         [1.1378, 0.9275, 0.9837],
         ...,
         [1.1255, 0.9281, 0.9805],
         [0.9326, 0.9467, 1.0484],
         [0.9441, 0.9568, 1.0272]],
        [[0.9302, 0.9478, 1.0133],
         [0.9261, 0.9487, 0.9761],
         [1.1350, 0.9235, 0.9701],
         ...,
         [1.1221, 0.9236, 0.9677],
         [0.9281, 0.9422, 1.0430],
         [0.9421, 0.9528, 1.0214]],
        ...,
        [[0.9252, 0.9430, 1.0069],
         [0.9203, 0.9437, 0.9746],
         [1.1316, 0.9187, 0.9543],
         ...,
         [1.1178, 0.9180, 0.9528],
         [0.9228, 0.9368, 1.0365],
         [0.9395, 0.9479, 1.0145]],
        [[0.9382, 0.9556, 1.0236],
         [0.9358, 0.9566, 0.9784],
         [1.1404, 0.9312, 0.9969],
         ...,
         [1.1288, 0.9325, 0.9929],
         [0.9369, 0.9510, 1.0535],
         [0.9461, 0.9606, 1.0326]],
        [[0.9474, 0.9641, 1.0349],
         [0.9469, 0.9652, 0.9809],
         [1.1463, 0.9397, 1.0289],
         ...,
         [1.1361, 0.9423, 1.0226],
         [0.9468, 0.9607, 1.0649],
         [0.9505, 0.9692, 1.0448]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.4926, 12.1048, 20.0269],
         [12.9652, 12.1815, 15.1027],
         [26.6161, 10.9597, 23.5430],
         ...,
         [26.3657, 11.3768, 22.7019],
         [12.2917, 12.2393, 20.9419],
         [11.4839, 12.3065, 20.7393]],
        [[ 9.6134, 10.4687, 17.1394],
         [ 9.3609, 10.5161, 14.5025],
         [24.7023,  9.3132, 14.9765],
         ...,
         [24.1500,  9.4345, 14.8000],
         [ 9.6714, 10.2919, 18.2667],
         [10.5018, 10.6479, 17.6626]],
        [[ 9.3066, 10.2823, 16.8123],
         [ 8.9910, 10.3264, 14.4299],
         [24.4752,  9.1274, 14.1610],
         ...,
         [23.8890,  9.2184, 14.0366],
         [ 9.3886, 10.0734, 17.9603],
         [10.3862, 10.4588, 17.3150]],
        ...,
        [[ 8.9394, 10.0554, 16.4148],
         [ 8.5521, 10.0958, 14.3403],
         [24.1962,  8.9019, 13.2102],
         ...,
         [23.5689,  8.9570, 13.1435],
         [ 9.0491,  9.8087, 17.5871],
         [10.2445, 10.2287, 16.8930]],
        [[ 9.9055, 10.6439, 17.4471],
         [ 9.7159, 10.6943, 14.5699],
         [24.9139,  9.4881, 15.7711],
         ...,
         [24.3935,  9.6385, 15.5416],
         [ 9.9401, 10.4977, 18.5543],
         [10.6096, 10.8255, 17.9897]],
        [[10.5821, 11.0409, 18.1458],
         [10.5477, 11.0982, 14.7197],
         [25.3871,  9.8857, 17.6769],
         ...,
         [24.9395, 10.1045, 17.3122],
         [10.5597, 10.9667, 19.2050],
         [10.8516, 11.2281, 18.7332]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9724, 0.9868, 1.0664],
         [0.9786, 0.9884, 0.9863],
         [1.1590, 0.9622, 1.1236],
         ...,
         [1.1557, 0.9711, 1.1099],
         [0.9697, 0.9896, 1.0813],
         [0.9591, 0.9911, 1.0780]],
        [[0.9343, 0.9517, 1.0194],
         [0.9310, 0.9527, 0.9765],
         [1.1338, 0.9269, 0.9842],
         ...,
         [1.1265, 0.9295, 0.9814],
         [0.9351, 0.9479, 1.0377],
         [0.9461, 0.9555, 1.0279]],
        [[0.9303, 0.9477, 1.0141],
         [0.9261, 0.9486, 0.9753],
         [1.1307, 0.9229, 0.9710],
         ...,
         [1.1230, 0.9249, 0.9689],
         [0.9314, 0.9432, 1.0328],
         [0.9446, 0.9515, 1.0223]],
        ...,
        [[0.9254, 0.9428, 1.0076],
         [0.9203, 0.9437, 0.9739],
         [1.1271, 0.9181, 0.9555],
         ...,
         [1.1188, 0.9193, 0.9544],
         [0.9269, 0.9375, 1.0267],
         [0.9427, 0.9465, 1.0154]],
        [[0.9382, 0.9554, 1.0244],
         [0.9357, 0.9565, 0.9776],
         [1.1365, 0.9306, 0.9972],
         ...,
         [1.1297, 0.9339, 0.9934],
         [0.9387, 0.9523, 1.0424],
         [0.9475, 0.9593, 1.0332]],
        [[0.9471, 0.9639, 1.0358],
         [0.9467, 0.9652, 0.9801],
         [1.1428, 0.9392, 1.0282],
         ...,
         [1.1369, 0.9439, 1.0222],
         [0.9468, 0.9624, 1.0530],
         [0.9507, 0.9680, 1.0453]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5237, 12.1118, 19.7459],
         [13.0237, 12.1688, 15.1841],
         [26.5580, 10.9634, 23.4858],
         ...,
         [26.3047, 11.2607, 22.8911],
         [12.4279, 12.0327, 21.0918],
         [11.5613, 12.3208, 20.5320]],
        [[ 9.5536, 10.4724, 16.9396],
         [ 9.3387, 10.5069, 14.5742],
         [24.6878,  9.3128, 14.8899],
         ...,
         [24.1442,  9.3708, 14.7860],
         [ 9.5990, 10.2973, 18.4296],
         [10.3675, 10.6685, 17.4474]],
        [[ 9.2387, 10.2855, 16.6212],
         [ 8.9620, 10.3176, 14.5004],
         [24.4656,  9.1265, 14.0732],
         ...,
         [23.8894,  9.1601, 14.0073],
         [ 9.2970, 10.1007, 18.1244],
         [10.2286, 10.4800, 17.0994]],
        ...,
        [[ 8.8623, 10.0582, 16.2343],
         [ 8.5155, 10.0875, 14.4093],
         [24.1927,  8.9006, 13.1215],
         ...,
         [23.5768,  8.9052, 13.0975],
         [ 8.9353,  9.8618, 17.7525],
         [10.0587, 10.2507, 16.6770]],
        [[ 9.8537, 10.6479, 17.2390],
         [ 9.7005, 10.6847, 14.6426],
         [24.8947,  9.4881, 15.6860],
         ...,
         [24.3818,  9.5697, 15.5434],
         [ 9.8866, 10.4822, 18.7160],
         [10.4974, 10.8455, 17.7751]],
        [[10.5499, 11.0457, 17.9185],
         [10.5493, 11.0878, 14.7948],
         [25.3574,  9.8867, 17.5964],
         ...,
         [24.9145, 10.0235, 17.3546],
         [10.5520, 10.9021, 19.3638],
         [10.7900, 11.2466, 18.5200]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9724, 0.9883, 1.0621],
         [0.9791, 0.9896, 0.9879],
         [1.1579, 0.9637, 1.1229],
         ...,
         [1.1546, 0.9701, 1.1132],
         [0.9712, 0.9866, 1.0840],
         [0.9597, 0.9928, 1.0749]],
        [[0.9332, 0.9532, 1.0164],
         [0.9304, 0.9539, 0.9780],
         [1.1332, 0.9283, 0.9831],
         ...,
         [1.1260, 0.9296, 0.9814],
         [0.9338, 0.9494, 1.0407],
         [0.9440, 0.9574, 1.0247]],
        [[0.9290, 0.9492, 1.0113],
         [0.9254, 0.9499, 0.9768],
         [1.1303, 0.9243, 0.9698],
         ...,
         [1.1226, 0.9250, 0.9687],
         [0.9298, 0.9452, 1.0357],
         [0.9421, 0.9533, 1.0190]],
        ...,
        [[0.9241, 0.9443, 1.0050],
         [0.9195, 0.9449, 0.9753],
         [1.1267, 0.9195, 0.9543],
         ...,
         [1.1185, 0.9196, 0.9539],
         [0.9250, 0.9401, 1.0297],
         [0.9399, 0.9484, 1.0122]],
        [[0.9372, 0.9569, 1.0213],
         [0.9351, 0.9577, 0.9791],
         [1.1359, 0.9321, 0.9960],
         ...,
         [1.1292, 0.9338, 0.9937],
         [0.9376, 0.9534, 1.0453],
         [0.9457, 0.9612, 1.0300]],
        [[0.9464, 0.9655, 1.0324],
         [0.9464, 0.9664, 0.9815],
         [1.1421, 0.9406, 1.0271],
         ...,
         [1.1362, 0.9435, 1.0232],
         [0.9464, 0.9624, 1.0559],
         [0.9495, 0.9698, 1.0421]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8674, 12.1497, 18.1504],
         [13.0727, 12.0726, 15.6134],
         [25.7388, 11.0034, 23.1533],
         ...,
         [25.7250, 11.1535, 23.8937],
         [13.1672, 11.8419, 20.9083],
         [12.3079, 12.3745, 19.1510]],
        [[ 9.3995, 10.4943, 15.9272],
         [ 9.3205, 10.4533, 14.9670],
         [24.2069,  9.2810, 14.4257],
         ...,
         [24.0386,  9.1957, 14.7131],
         [ 9.2867, 10.3075, 18.5196],
         [ 9.6625, 10.7507, 16.2175]],
        [[ 9.0411, 10.3057, 15.6717],
         [ 8.9382, 10.2686, 14.8889],
         [24.0237,  9.0875, 13.6050],
         ...,
         [23.8377,  8.9786, 13.8559],
         [ 8.8938, 10.1320, 18.2436],
         [ 9.3774, 10.5651, 15.8871]],
        ...,
        [[ 8.6152, 10.0764, 15.3602],
         [ 8.4855, 10.0439, 14.7925],
         [23.7983,  8.8529, 12.6511],
         ...,
         [23.5906,  8.7163, 12.8612],
         [ 8.4293,  9.9182, 17.9067],
         [ 9.0351, 10.3392, 15.4864]],
        [[ 9.7430, 10.6714, 16.1668],
         [ 9.6879, 10.6268, 15.0395],
         [24.3772,  9.4634, 15.2272],
         ...,
         [24.2256,  9.4008, 15.5514],
         [ 9.6647, 10.4723, 18.7782],
         [ 9.9335, 10.9249, 16.5286]],
        [[10.5460, 11.0730, 16.7085],
         [10.5508, 11.0198, 15.2007],
         [24.7574,  9.8785, 17.1569],
         ...,
         [24.6434,  9.8697, 17.5742],
         [10.5543, 10.8453, 19.3616],
         [10.5586, 11.3194, 17.2364]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9754, 1.0007, 1.0302],
         [0.9781, 0.9991, 0.9889],
         [1.1455, 0.9761, 1.1115],
         ...,
         [1.1453, 0.9794, 1.1236],
         [0.9793, 0.9941, 1.0750],
         [0.9680, 1.0055, 1.0464]],
        [[0.9295, 0.9652, 0.9940],
         [0.9285, 0.9643, 0.9784],
         [1.1252, 0.9392, 0.9696],
         ...,
         [1.1230, 0.9374, 0.9743],
         [0.9280, 0.9612, 1.0362],
         [0.9330, 0.9707, 0.9987]],
        [[0.9248, 0.9612, 0.9899],
         [0.9234, 0.9604, 0.9771],
         [1.1228, 0.9351, 0.9562],
         ...,
         [1.1203, 0.9327, 0.9603],
         [0.9229, 0.9574, 1.0317],
         [0.9292, 0.9667, 0.9934]],
        ...,
        [[0.9192, 0.9563, 0.9848],
         [0.9175, 0.9556, 0.9756],
         [1.1198, 0.9300, 0.9407],
         ...,
         [1.1171, 0.9271, 0.9441],
         [0.9167, 0.9529, 1.0262],
         [0.9247, 0.9619, 0.9868]],
        [[0.9341, 0.9690, 0.9979],
         [0.9333, 0.9681, 0.9796],
         [1.1275, 0.9431, 0.9826],
         ...,
         [1.1255, 0.9418, 0.9879],
         [0.9330, 0.9647, 1.0404],
         [0.9366, 0.9745, 1.0038]],
        [[0.9447, 0.9776, 1.0067],
         [0.9447, 0.9765, 0.9822],
         [1.1325, 0.9520, 1.0140],
         ...,
         [1.1310, 0.9518, 1.0208],
         [0.9448, 0.9727, 1.0499],
         [0.9449, 0.9829, 1.0153]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.6740, 12.1291, 19.0334],
         [13.0457, 12.1270, 15.3728],
         [26.2425, 10.9791, 23.3502],
         ...,
         [26.0923, 11.0799, 23.3474],
         [12.7410, 11.8621, 21.0153],
         [11.8455, 12.3444, 19.9316]],
        [[ 9.4827, 10.4819, 16.4641],
         [ 9.3305, 10.4807, 14.7484],
         [24.4706,  9.2975, 14.6755],
         ...,
         [24.0985,  9.2546, 14.7510],
         [ 9.4522, 10.3033, 18.4689],
         [10.0327, 10.7039, 16.8710]],
        [[ 9.1483, 10.2942, 16.1712],
         [ 8.9513, 10.2931, 14.6728],
         [24.2597,  9.1081, 13.8555],
         ...,
         [23.8625,  9.0507, 13.9360],
         [ 9.1093, 10.1252, 18.1759],
         [ 9.8285, 10.5166, 16.5264]],
        ...,
        [[ 8.7495, 10.0659, 15.8149],
         [ 8.5019, 10.0649, 14.5797],
         [24.0005,  8.8784, 12.9013],
         ...,
         [23.5728,  8.8038, 12.9867],
         [ 8.7008,  9.9083, 17.8188],
         [ 9.5809, 10.2887, 16.1084]],
        [[ 9.8024, 10.6582, 16.7393],
         [ 9.6948, 10.6569, 14.8184],
         [24.6669,  9.4759, 15.4754],
         ...,
         [24.3184,  9.4470, 15.5458],
         [ 9.7803, 10.4705, 18.7435],
         [10.2250, 10.8798, 17.1955]],
        [[10.5463, 11.0579, 17.3627],
         [10.5499, 11.0563, 14.9742],
         [25.1056,  9.8816, 17.3984],
         ...,
         [24.8108,  9.8858, 17.4544],
         [10.5452, 10.8492, 19.3642],
         [10.6624, 11.2781, 17.9339]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9743, 0.9930, 1.0484],
         [0.9792, 0.9930, 0.9889],
         [1.1536, 0.9684, 1.1187],
         ...,
         [1.1516, 0.9705, 1.1186],
         [0.9752, 0.9873, 1.0807],
         [0.9633, 0.9976, 1.0631]],
        [[0.9321, 0.9577, 1.0067],
         [0.9301, 0.9577, 0.9788],
         [1.1302, 0.9323, 0.9776],
         ...,
         [1.1253, 0.9314, 0.9788],
         [0.9317, 0.9539, 1.0393],
         [0.9394, 0.9625, 1.0133]],
        [[0.9277, 0.9537, 1.0019],
         [0.9251, 0.9536, 0.9775],
         [1.1274, 0.9282, 0.9642],
         ...,
         [1.1222, 0.9270, 0.9655],
         [0.9272, 0.9500, 1.0345],
         [0.9367, 0.9584, 1.0077]],
        ...,
        [[0.9224, 0.9488, 0.9961],
         [0.9192, 0.9488, 0.9760],
         [1.1240, 0.9233, 0.9487],
         ...,
         [1.1183, 0.9217, 0.9501],
         [0.9218, 0.9454, 1.0287],
         [0.9334, 0.9536, 1.0009]],
        [[0.9363, 0.9615, 1.0111],
         [0.9349, 0.9614, 0.9799],
         [1.1328, 0.9361, 0.9906],
         ...,
         [1.1282, 0.9355, 0.9917],
         [0.9361, 0.9574, 1.0437],
         [0.9419, 0.9662, 1.0186]],
        [[0.9462, 0.9700, 1.0213],
         [0.9462, 0.9700, 0.9824],
         [1.1386, 0.9448, 1.0219],
         ...,
         [1.1347, 0.9449, 1.0228],
         [0.9462, 0.9656, 1.0538],
         [0.9477, 0.9748, 1.0306]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8906, 12.1497, 17.8155],
         [13.1764, 12.0607, 15.6788],
         [25.3916, 11.0224, 22.9293],
         ...,
         [25.5982, 11.1781, 23.9494],
         [12.9103, 11.8141, 20.1449],
         [12.4060, 12.3621, 18.8233]],
        [[ 9.3901, 10.4942, 15.7468],
         [ 9.2834, 10.4481, 15.0275],
         [23.7612,  9.2547, 14.3625],
         ...,
         [24.0026,  9.1924, 14.7371],
         [ 9.3823, 10.3308, 18.0210],
         [ 9.6103, 10.7314, 15.9995]],
        [[ 9.0290, 10.3057, 15.5081],
         [ 8.8896, 10.2641, 14.9487],
         [23.5668,  9.0566, 13.5545],
         ...,
         [23.8121,  8.9726, 13.8774],
         [ 9.0188, 10.1607, 17.7742],
         [ 9.3113, 10.5451, 15.6808]],
        ...,
        [[ 8.6000, 10.0763, 15.2167],
         [ 8.4239, 10.0402, 14.8516],
         [23.3277,  8.8166, 12.6144],
         ...,
         [23.5778,  8.7069, 12.8797],
         [ 8.5872,  9.9534, 17.4725],
         [ 8.9531, 10.3184, 15.2941]],
        [[ 9.7364, 10.6714, 15.9705],
         [ 9.6625, 10.6209, 15.1005],
         [23.9421,  9.4415, 15.1513],
         ...,
         [24.1798,  9.4002, 15.5781],
         [ 9.7309, 10.4905, 18.2519],
         [ 9.8949, 10.9063, 16.2995]],
        [[10.5463, 11.0730, 16.4755],
         [10.5547, 11.0124, 15.2630],
         [24.3462,  9.8670, 17.0485],
         ...,
         [24.5755,  9.8755, 17.6074],
         [10.5466, 10.8515, 18.7720],
         [10.5530, 11.3024, 16.9815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9756, 1.0043, 1.0247],
         [0.9793, 1.0024, 0.9900],
         [1.1408, 0.9801, 1.1079],
         ...,
         [1.1435, 0.9835, 1.1245],
         [0.9758, 0.9971, 1.0626],
         [0.9692, 1.0089, 1.0411]],
        [[0.9293, 0.9688, 0.9911],
         [0.9279, 0.9678, 0.9794],
         [1.1192, 0.9422, 0.9685],
         ...,
         [1.1224, 0.9409, 0.9746],
         [0.9292, 0.9653, 1.0280],
         [0.9322, 0.9739, 0.9952]],
        [[0.9245, 0.9648, 0.9872],
         [0.9227, 0.9639, 0.9781],
         [1.1167, 0.9380, 0.9554],
         ...,
         [1.1199, 0.9362, 0.9607],
         [0.9244, 0.9617, 1.0240],
         [0.9283, 0.9699, 0.9900]],
        ...,
        [[0.9189, 0.9599, 0.9824],
         [0.9165, 0.9591, 0.9765],
         [1.1135, 0.9328, 0.9401],
         ...,
         [1.1168, 0.9305, 0.9444],
         [0.9187, 0.9572, 1.0191],
         [0.9235, 0.9651, 0.9837]],
        [[0.9339, 0.9726, 0.9947],
         [0.9329, 0.9715, 0.9805],
         [1.1216, 0.9462, 0.9814],
         ...,
         [1.1248, 0.9454, 0.9883],
         [0.9338, 0.9687, 1.0318],
         [0.9360, 0.9777, 1.0000]],
        [[0.9446, 0.9812, 1.0029],
         [0.9447, 0.9799, 0.9832],
         [1.1270, 0.9554, 1.0122],
         ...,
         [1.1300, 0.9556, 1.0213],
         [0.9446, 0.9765, 1.0403],
         [0.9447, 0.9862, 1.0111]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7399, 12.1356, 18.6573],
         [13.0859, 12.1069, 15.4668],
         [25.9884, 10.9883, 23.2264],
         ...,
         [25.9576, 11.0594, 23.5368],
         [12.7928, 11.8241, 20.7456],
         [12.0016, 12.3498, 19.6004]],
        [[ 9.4535, 10.4857, 16.2315],
         [ 9.3157, 10.4698, 14.8339],
         [24.2485,  9.2825, 14.5766],
         ...,
         [24.0682,  9.2226, 14.7463],
         [ 9.4302, 10.3169, 18.3260],
         [ 9.8950, 10.7123, 16.5888]],
        [[ 9.1107, 10.2977, 15.9540],
         [ 8.9319, 10.2832, 14.7574],
         [24.0414,  9.0907, 13.7598],
         ...,
         [23.8441,  9.0176, 13.9171],
         [ 9.0808, 10.1442, 18.0468],
         [ 9.6614, 10.5253, 16.2498]],
        ...,
        [[ 8.7024, 10.0690, 15.6162],
         [ 8.4775, 10.0562, 14.6629],
         [23.7868,  8.8581, 12.8093],
         ...,
         [23.5688,  8.7694, 12.9523],
         [ 8.6652,  9.9339, 17.7062],
         [ 9.3791, 10.2978, 15.8386]],
        [[ 9.7814, 10.6622, 16.4919],
         [ 9.6846, 10.6451, 14.9049],
         [24.4413,  9.4632, 15.3738],
         ...,
         [24.2770,  9.4160, 15.5558],
         [ 9.7647, 10.4789, 18.5876],
         [10.1157, 10.8879, 16.9081]],
        [[10.5457, 11.0625, 17.0815],
         [10.5512, 11.0423, 15.0628],
         [24.8722,  9.8745, 17.2904],
         ...,
         [24.7441,  9.8573, 17.5026],
         [10.5453, 10.8456, 19.1781],
         [10.6203, 11.2856, 17.6347]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9960, 1.0410],
         [0.9792, 0.9954, 0.9891],
         [1.1498, 0.9714, 1.1154],
         ...,
         [1.1493, 0.9729, 1.1204],
         [0.9754, 0.9893, 1.0750],
         [0.9649, 1.0006, 1.0564]],
        [[0.9312, 0.9606, 1.0016],
         [0.9294, 0.9603, 0.9789],
         [1.1268, 0.9348, 0.9747],
         ...,
         [1.1244, 0.9335, 0.9774],
         [0.9309, 0.9570, 1.0356],
         [0.9371, 0.9655, 1.0074]],
        [[0.9267, 0.9566, 0.9971],
         [0.9243, 0.9563, 0.9776],
         [1.1240, 0.9307, 0.9614],
         ...,
         [1.1214, 0.9291, 0.9639],
         [0.9263, 0.9533, 1.0311],
         [0.9340, 0.9615, 1.0019]],
        ...,
        [[0.9213, 0.9517, 0.9916],
         [0.9183, 0.9514, 0.9761],
         [1.1207, 0.9257, 0.9459],
         ...,
         [1.1178, 0.9238, 0.9482],
         [0.9208, 0.9488, 1.0256],
         [0.9303, 0.9566, 0.9952]],
        [[0.9356, 0.9644, 1.0058],
         [0.9343, 0.9640, 0.9800],
         [1.1293, 0.9387, 0.9876],
         ...,
         [1.1271, 0.9377, 0.9906],
         [0.9353, 0.9605, 1.0399],
         [0.9400, 0.9692, 1.0126]],
        [[0.9457, 0.9730, 1.0154],
         [0.9457, 0.9725, 0.9826],
         [1.1350, 0.9475, 1.0188],
         ...,
         [1.1333, 0.9471, 1.0223],
         [0.9457, 0.9683, 1.0495],
         [0.9467, 0.9778, 1.0244]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0577, 12.1572, 16.4551],
         [13.0441, 11.9684, 15.9112],
         [24.6621, 11.0420, 22.2433],
         ...,
         [25.0877, 11.5542, 24.3862],
         [13.1124, 11.8246, 19.2310],
         [12.7215, 12.3043, 17.4797]],
        [[ 9.3260, 10.4991, 15.0733],
         [ 9.3311, 10.4136, 15.2883],
         [23.2241,  9.2263, 14.1537],
         ...,
         [23.9940,  9.2167, 14.7807],
         [ 9.3061, 10.3589, 17.5387],
         [ 9.4607, 10.6449, 15.2937]],
        [[ 8.9454, 10.3102, 14.9105],
         [ 8.9520, 10.2358, 15.2129],
         [23.0521,  9.0234, 13.3834],
         ...,
         [23.8620,  8.9624, 13.8925],
         [ 8.9194, 10.1905, 17.3399],
         [ 9.1201, 10.4557, 15.0429]],
        ...,
        [[ 8.4946, 10.0806, 14.7109],
         [ 8.5029, 10.0192, 15.1199],
         [22.8403,  8.7777, 12.4854],
         ...,
         [23.6991,  8.6565, 12.8638],
         [ 8.4617,  9.9854, 17.0962],
         [ 8.7144, 10.2255, 14.7373]],
        [[ 9.6917, 10.6765, 15.2251],
         [ 9.6952, 10.5806, 15.3582],
         [23.3842,  9.4177, 14.9042],
         ...,
         [24.1166,  9.4579, 15.6512],
         [ 9.6780, 10.5167, 17.7243],
         [ 9.7863, 10.8226, 15.5290]],
        [[10.5503, 11.0787, 15.5657],
         [10.5499, 10.9585, 15.5137],
         [23.7411,  9.8542, 16.7040],
         ...,
         [24.3892, 10.0127, 17.7577],
         [10.5522, 10.8737, 18.1409],
         [10.5452, 11.2253, 16.0611]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0216, 1.0023],
         [0.9778, 1.0175, 0.9934],
         [1.1313, 0.9976, 1.0964],
         ...,
         [1.1369, 1.0086, 1.1313],
         [0.9787, 1.0144, 1.0474],
         [0.9735, 1.0247, 1.0189]],
        [[0.9286, 0.9860, 0.9798],
         [0.9287, 0.9842, 0.9833],
         [1.1123, 0.9587, 0.9648],
         ...,
         [1.1225, 0.9585, 0.9750],
         [0.9284, 0.9830, 1.0199],
         [0.9304, 0.9891, 0.9834]],
        [[0.9236, 0.9819, 0.9771],
         [0.9237, 0.9803, 0.9821],
         [1.1100, 0.9543, 0.9523],
         ...,
         [1.1207, 0.9530, 0.9606],
         [0.9233, 0.9794, 1.0167],
         [0.9259, 0.9851, 0.9793]],
        ...,
        [[0.9176, 0.9770, 0.9739],
         [0.9178, 0.9757, 0.9806],
         [1.1072, 0.9491, 0.9377],
         ...,
         [1.1186, 0.9465, 0.9439],
         [0.9172, 0.9750, 1.0127],
         [0.9205, 0.9801, 0.9743]],
        [[0.9335, 0.9898, 0.9823],
         [0.9335, 0.9877, 0.9844],
         [1.1144, 0.9628, 0.9770],
         ...,
         [1.1241, 0.9637, 0.9892],
         [0.9333, 0.9864, 1.0229],
         [0.9347, 0.9929, 0.9872]],
        [[0.9448, 0.9984, 0.9878],
         [0.9448, 0.9958, 0.9870],
         [1.1191, 0.9722, 1.0063],
         ...,
         [1.1277, 0.9756, 1.0235],
         [0.9448, 0.9940, 1.0297],
         [0.9447, 1.0016, 0.9959]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7779, 12.1383, 18.3865],
         [13.0807, 12.0902, 15.5212],
         [25.8219, 10.9899, 23.1131],
         ...,
         [25.8628, 11.0614, 23.6454],
         [12.8310, 11.8160, 20.5566],
         [12.0795, 12.3440, 19.3651]],
        [[ 9.4371, 10.4873, 16.0724],
         [ 9.3176, 10.4615, 14.8886],
         [24.1208,  9.2736, 14.5235],
         ...,
         [24.0578,  9.2085, 14.7506],
         [ 9.4143, 10.3256, 18.2227],
         [ 9.8370, 10.7034, 16.4114]],
        [[ 9.0896, 10.2992, 15.8069],
         [ 8.9344, 10.2758, 14.8121],
         [23.9182,  9.0807, 13.7117],
         ...,
         [23.8433,  9.0019, 13.9137],
         [ 9.0603, 10.1547, 17.9529],
         [ 9.5901, 10.5161, 16.0786]],
        ...,
        [[ 8.6761, 10.0704, 15.4836],
         [ 8.4807, 10.0499, 14.7177],
         [23.6690,  8.8469, 12.7670],
         ...,
         [23.5798,  8.7519, 12.9406],
         [ 8.6394,  9.9465, 17.6235],
         [ 9.2923, 10.2882, 15.6749]],
        [[ 9.7697, 10.6640, 16.3214],
         [ 9.6859, 10.6359, 14.9596],
         [24.3094,  9.4553, 15.3156],
         ...,
         [24.2576,  9.4035, 15.5680],
         [ 9.7534, 10.4860, 18.4754],
         [10.0706, 10.8793, 16.7248]],
        [[10.5457, 11.0645, 16.8845],
         [10.5510, 11.0312, 15.1174],
         [24.7308,  9.8690, 17.2196],
         ...,
         [24.7042,  9.8485, 17.5354],
         [10.5456, 10.8486, 19.0456],
         [10.6059, 11.2777, 17.4376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9752, 0.9984, 1.0362],
         [0.9792, 0.9974, 0.9896],
         [1.1476, 0.9738, 1.1131],
         ...,
         [1.1482, 0.9753, 1.1217],
         [0.9759, 0.9915, 1.0715],
         [0.9660, 1.0028, 1.0521]],
        [[0.9311, 0.9630, 0.9986],
         [0.9295, 0.9625, 0.9793],
         [1.1251, 0.9370, 0.9734],
         ...,
         [1.1243, 0.9356, 0.9771],
         [0.9308, 0.9595, 1.0335],
         [0.9364, 0.9676, 1.0041]],
        [[0.9265, 0.9590, 0.9942],
         [0.9244, 0.9585, 0.9781],
         [1.1225, 0.9329, 0.9602],
         ...,
         [1.1215, 0.9312, 0.9635],
         [0.9261, 0.9559, 1.0291],
         [0.9331, 0.9636, 0.9987]],
        ...,
        [[0.9210, 0.9541, 0.9890],
         [0.9184, 0.9536, 0.9765],
         [1.1192, 0.9278, 0.9448],
         ...,
         [1.1180, 0.9258, 0.9476],
         [0.9205, 0.9514, 1.0238],
         [0.9292, 0.9587, 0.9921]],
        [[0.9355, 0.9668, 1.0026],
         [0.9344, 0.9662, 0.9805],
         [1.1276, 0.9409, 0.9863],
         ...,
         [1.1269, 0.9398, 0.9904],
         [0.9353, 0.9630, 1.0376],
         [0.9395, 0.9714, 1.0092]],
        [[0.9457, 0.9754, 1.0118],
         [0.9458, 0.9747, 0.9830],
         [1.1332, 0.9498, 1.0172],
         ...,
         [1.1328, 0.9493, 1.0224],
         [0.9457, 0.9708, 1.0469],
         [0.9465, 0.9800, 1.0208]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7471, 12.1361, 18.6060],
         [13.0849, 12.1037, 15.4771],
         [25.9572, 10.9885, 23.2050],
         ...,
         [25.9402, 11.0584, 23.5575],
         [12.8000, 11.8224, 20.7097],
         [12.0161, 12.3487, 19.5564]],
        [[ 9.4503, 10.4860, 16.2009],
         [ 9.3160, 10.4682, 14.8443],
         [24.2242,  9.2808, 14.5665],
         ...,
         [24.0662,  9.2196, 14.7472],
         [ 9.4272, 10.3186, 18.3062],
         [ 9.8839, 10.7106, 16.5548]],
        [[ 9.1067, 10.2980, 15.9257],
         [ 8.9324, 10.2818, 14.7677],
         [24.0179,  9.0887, 13.7506],
         ...,
         [23.8438,  9.0144, 13.9164],
         [ 9.0769, 10.1463, 18.0288],
         [ 9.6478, 10.5236, 16.2168]],
        ...,
        [[ 8.6974, 10.0693, 15.5906],
         [ 8.4781, 10.0550, 14.6733],
         [23.7643,  8.8559, 12.8012],
         ...,
         [23.5707,  8.7660, 12.9501],
         [ 8.6602,  9.9364, 17.6903],
         [ 9.3625, 10.2959, 15.8069]],
        [[ 9.7791, 10.6626, 16.4592],
         [ 9.6849, 10.6433, 14.9152],
         [24.4163,  9.4617, 15.3627],
         ...,
         [24.2733,  9.4133, 15.5581],
         [ 9.7625, 10.4803, 18.5662],
         [10.1071, 10.8862, 16.8731]],
        [[10.5457, 11.0629, 17.0439],
         [10.5512, 11.0402, 15.0731],
         [24.8455,  9.8734, 17.2770],
         ...,
         [24.7367,  9.8550, 17.5088],
         [10.5453, 10.8461, 19.1528],
         [10.6174, 11.2841, 17.5972]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9748, 0.9964, 1.0401],
         [0.9792, 0.9957, 0.9892],
         [1.1494, 0.9718, 1.1149],
         ...,
         [1.1491, 0.9733, 1.1207],
         [0.9755, 0.9897, 1.0743],
         [0.9651, 1.0010, 1.0556]],
        [[0.9312, 0.9610, 1.0010],
         [0.9294, 0.9607, 0.9789],
         [1.1265, 0.9352, 0.9744],
         ...,
         [1.1244, 0.9339, 0.9774],
         [0.9309, 0.9575, 1.0352],
         [0.9369, 0.9659, 1.0068]],
        [[0.9267, 0.9570, 0.9965],
         [0.9244, 0.9567, 0.9777],
         [1.1237, 0.9311, 0.9611],
         ...,
         [1.1214, 0.9295, 0.9638],
         [0.9263, 0.9538, 1.0307],
         [0.9338, 0.9619, 1.0013]],
        ...,
        [[0.9213, 0.9521, 0.9911],
         [0.9184, 0.9518, 0.9762],
         [1.1204, 0.9261, 0.9457],
         ...,
         [1.1178, 0.9242, 0.9481],
         [0.9208, 0.9493, 1.0252],
         [0.9300, 0.9570, 0.9946]],
        [[0.9356, 0.9648, 1.0052],
         [0.9343, 0.9644, 0.9801],
         [1.1290, 0.9391, 0.9874],
         ...,
         [1.1271, 0.9380, 0.9905],
         [0.9353, 0.9609, 1.0395],
         [0.9399, 0.9696, 1.0119]],
        [[0.9457, 0.9734, 1.0147],
         [0.9458, 0.9729, 0.9827],
         [1.1347, 0.9479, 1.0185],
         ...,
         [1.1332, 0.9475, 1.0223],
         [0.9457, 0.9688, 1.0490],
         [0.9466, 0.9782, 1.0237]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7414, 12.1357, 18.6464],
         [13.0857, 12.1062, 15.4690],
         [25.9818, 10.9884, 23.2218],
         ...,
         [25.9539, 11.0591, 23.5412],
         [12.7943, 11.8238, 20.7380],
         [12.0046, 12.3496, 19.5911]],
        [[ 9.4528, 10.4857, 16.2250],
         [ 9.3158, 10.4695, 14.8361],
         [24.2434,  9.2821, 14.5745],
         ...,
         [24.0678,  9.2220, 14.7465],
         [ 9.4296, 10.3173, 18.3218],
         [ 9.8927, 10.7119, 16.5816]],
        [[ 9.1098, 10.2977, 15.9480],
         [ 8.9320, 10.2829, 14.7596],
         [24.0364,  9.0903, 13.7579],
         ...,
         [23.8440,  9.0169, 13.9169],
         [ 9.0800, 10.1447, 18.0430],
         [ 9.6585, 10.5250, 16.2428]],
        ...,
        [[ 8.7014, 10.0691, 15.6108],
         [ 8.4776, 10.0560, 14.6651],
         [23.7820,  8.8576, 12.8076],
         ...,
         [23.5692,  8.7687, 12.9518],
         [ 8.6641,  9.9344, 17.7028],
         [ 9.3756, 10.2974, 15.8318]],
        [[ 9.7809, 10.6623, 16.4850],
         [ 9.6847, 10.6447, 14.9071],
         [24.4360,  9.4629, 15.3714],
         ...,
         [24.2762,  9.4154, 15.5563],
         [ 9.7642, 10.4792, 18.5830],
         [10.1139, 10.8875, 16.9007]],
        [[10.5457, 11.0626, 17.0736],
         [10.5512, 11.0419, 15.0650],
         [24.8665,  9.8743, 17.2875],
         ...,
         [24.7425,  9.8568, 17.5039],
         [10.5453, 10.8457, 19.1727],
         [10.6197, 11.2852, 17.6267]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9961, 1.0408],
         [0.9792, 0.9954, 0.9892],
         [1.1497, 0.9715, 1.1153],
         ...,
         [1.1493, 0.9730, 1.1205],
         [0.9754, 0.9894, 1.0749],
         [0.9650, 1.0007, 1.0562]],
        [[0.9312, 0.9607, 1.0015],
         [0.9294, 0.9604, 0.9789],
         [1.1267, 0.9349, 0.9746],
         ...,
         [1.1244, 0.9336, 0.9774],
         [0.9309, 0.9571, 1.0356],
         [0.9370, 0.9656, 1.0073]],
        [[0.9267, 0.9567, 0.9970],
         [0.9243, 0.9564, 0.9776],
         [1.1240, 0.9308, 0.9613],
         ...,
         [1.1214, 0.9292, 0.9639],
         [0.9263, 0.9534, 1.0310],
         [0.9339, 0.9615, 1.0017]],
        ...,
        [[0.9213, 0.9518, 0.9915],
         [0.9183, 0.9515, 0.9761],
         [1.1206, 0.9258, 0.9459],
         ...,
         [1.1178, 0.9239, 0.9482],
         [0.9208, 0.9489, 1.0255],
         [0.9302, 0.9567, 0.9951]],
        [[0.9356, 0.9645, 1.0057],
         [0.9343, 0.9641, 0.9800],
         [1.1292, 0.9388, 0.9876],
         ...,
         [1.1271, 0.9377, 0.9906],
         [0.9353, 0.9606, 1.0398],
         [0.9400, 0.9693, 1.0124]],
        [[0.9457, 0.9731, 1.0153],
         [0.9457, 0.9726, 0.9826],
         [1.1349, 0.9476, 1.0187],
         ...,
         [1.1333, 0.9472, 1.0223],
         [0.9457, 0.9684, 1.0494],
         [0.9467, 0.9778, 1.0243]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7452, 12.1360, 18.6197],
         [13.0852, 12.1046, 15.4744],
         [25.9656, 10.9885, 23.2108],
         ...,
         [25.9449, 11.0586, 23.5520],
         [12.7981, 11.8229, 20.7193],
         [12.0122, 12.3490, 19.5682]],
        [[ 9.4512, 10.4859, 16.2091],
         [ 9.3159, 10.4686, 14.8415],
         [24.2307,  9.2812, 14.5692],
         ...,
         [24.0667,  9.2204, 14.7469],
         [ 9.4280, 10.3182, 18.3115],
         [ 9.8869, 10.7111, 16.5639]],
        [[ 9.1077, 10.2979, 15.9333],
         [ 8.9323, 10.2821, 14.7650],
         [24.0242,  9.0893, 13.7531],
         ...,
         [23.8439,  9.0152, 13.9166],
         [ 9.0780, 10.1457, 18.0336],
         [ 9.6514, 10.5240, 16.2256]],
        ...,
        [[ 8.6988, 10.0692, 15.5974],
         [ 8.4779, 10.0553, 14.6705],
         [23.7703,  8.8565, 12.8034],
         ...,
         [23.5702,  8.7669, 12.9507],
         [ 8.6616,  9.9357, 17.6946],
         [ 9.3670, 10.2964, 15.8154]],
        [[ 9.7797, 10.6625, 16.4680],
         [ 9.6848, 10.6438, 14.9125],
         [24.4230,  9.4621, 15.3657],
         ...,
         [24.2743,  9.4140, 15.5575],
         [ 9.7631, 10.4800, 18.5719],
         [10.1094, 10.8867, 16.8825]],
        [[10.5457, 11.0628, 17.0540],
         [10.5512, 11.0408, 15.0703],
         [24.8526,  9.8737, 17.2806],
         ...,
         [24.7387,  9.8556, 17.5072],
         [10.5453, 10.8460, 19.1596],
         [10.6182, 11.2845, 17.6073]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9963, 1.0404],
         [0.9792, 0.9956, 0.9892],
         [1.1495, 0.9717, 1.1150],
         ...,
         [1.1492, 0.9732, 1.1206],
         [0.9754, 0.9896, 1.0745],
         [0.9651, 1.0009, 1.0558]],
        [[0.9312, 0.9609, 1.0012],
         [0.9294, 0.9606, 0.9789],
         [1.1265, 0.9351, 0.9745],
         ...,
         [1.1244, 0.9338, 0.9774],
         [0.9309, 0.9573, 1.0354],
         [0.9370, 0.9658, 1.0069]],
        [[0.9267, 0.9569, 0.9967],
         [0.9244, 0.9566, 0.9777],
         [1.1238, 0.9310, 0.9612],
         ...,
         [1.1214, 0.9294, 0.9639],
         [0.9263, 0.9536, 1.0308],
         [0.9339, 0.9617, 1.0014]],
        ...,
        [[0.9213, 0.9520, 0.9912],
         [0.9184, 0.9517, 0.9761],
         [1.1205, 0.9260, 0.9458],
         ...,
         [1.1178, 0.9241, 0.9482],
         [0.9208, 0.9491, 1.0253],
         [0.9301, 0.9569, 0.9948]],
        [[0.9356, 0.9647, 1.0054],
         [0.9343, 0.9643, 0.9801],
         [1.1291, 0.9390, 0.9874],
         ...,
         [1.1271, 0.9379, 0.9906],
         [0.9353, 0.9608, 1.0396],
         [0.9399, 0.9695, 1.0121]],
        [[0.9457, 0.9733, 1.0149],
         [0.9458, 0.9728, 0.9826],
         [1.1348, 0.9478, 1.0186],
         ...,
         [1.1332, 0.9474, 1.0223],
         [0.9457, 0.9686, 1.0491],
         [0.9466, 0.9781, 1.0239]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7422, 12.1358, 18.6408],
         [13.0856, 12.1058, 15.4701],
         [25.9784, 10.9884, 23.2195],
         ...,
         [25.9520, 11.0590, 23.5435],
         [12.7951, 11.8236, 20.7340],
         [12.0062, 12.3495, 19.5863]],
        [[ 9.4525, 10.4858, 16.2216],
         [ 9.3158, 10.4693, 14.8372],
         [24.2407,  9.2819, 14.5734],
         ...,
         [24.0675,  9.2216, 14.7466],
         [ 9.4292, 10.3175, 18.3196],
         [ 9.8914, 10.7118, 16.5779]],
        [[ 9.1094, 10.2978, 15.9449],
         [ 8.9321, 10.2827, 14.7607],
         [24.0338,  9.0900, 13.7569],
         ...,
         [23.8440,  9.0165, 13.9168],
         [ 9.0796, 10.1449, 18.0410],
         [ 9.6570, 10.5248, 16.2392]],
        ...,
        [[ 8.7008, 10.0691, 15.6080],
         [ 8.4777, 10.0558, 14.6663],
         [23.7795,  8.8574, 12.8067],
         ...,
         [23.5694,  8.7683, 12.9516],
         [ 8.6636,  9.9347, 17.7011],
         [ 9.3738, 10.2972, 15.8283]],
        [[ 9.7806, 10.6624, 16.4814],
         [ 9.6847, 10.6445, 14.9082],
         [24.4333,  9.4627, 15.3702],
         ...,
         [24.2758,  9.4151, 15.5565],
         [ 9.7640, 10.4794, 18.5807],
         [10.1129, 10.8874, 16.8968]],
        [[10.5457, 11.0626, 17.0694],
         [10.5512, 11.0416, 15.0661],
         [24.8636,  9.8742, 17.2861],
         ...,
         [24.7417,  9.8566, 17.5046],
         [10.5453, 10.8457, 19.1700],
         [10.6193, 11.2851, 17.6226]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9961, 1.0407],
         [0.9792, 0.9955, 0.9892],
         [1.1496, 0.9715, 1.1152],
         ...,
         [1.1493, 0.9730, 1.1205],
         [0.9754, 0.9894, 1.0748],
         [0.9650, 1.0007, 1.0561]],
        [[0.9312, 0.9607, 1.0014],
         [0.9294, 0.9604, 0.9789],
         [1.1267, 0.9349, 0.9746],
         ...,
         [1.1244, 0.9336, 0.9774],
         [0.9309, 0.9571, 1.0355],
         [0.9370, 0.9656, 1.0072]],
        [[0.9267, 0.9567, 0.9969],
         [0.9244, 0.9564, 0.9776],
         [1.1239, 0.9308, 0.9613],
         ...,
         [1.1214, 0.9292, 0.9639],
         [0.9263, 0.9534, 1.0310],
         [0.9339, 0.9616, 1.0017]],
        ...,
        [[0.9213, 0.9518, 0.9914],
         [0.9183, 0.9515, 0.9761],
         [1.1206, 0.9258, 0.9459],
         ...,
         [1.1178, 0.9239, 0.9482],
         [0.9208, 0.9489, 1.0255],
         [0.9302, 0.9567, 0.9950]],
        [[0.9356, 0.9645, 1.0056],
         [0.9343, 0.9642, 0.9800],
         [1.1292, 0.9388, 0.9875],
         ...,
         [1.1271, 0.9378, 0.9906],
         [0.9353, 0.9606, 1.0398],
         [0.9400, 0.9694, 1.0124]],
        [[0.9457, 0.9731, 1.0152],
         [0.9457, 0.9727, 0.9826],
         [1.1349, 0.9476, 1.0187],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9685, 1.0493],
         [0.9466, 0.9779, 1.0242]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7441, 12.1359, 18.6269],
         [13.0853, 12.1050, 15.4729],
         [25.9700, 10.9884, 23.2137],
         ...,
         [25.9473, 11.0587, 23.5491],
         [12.7971, 11.8231, 20.7243],
         [12.0102, 12.3492, 19.5744]],
        [[ 9.4516, 10.4858, 16.2134],
         [ 9.3159, 10.4689, 14.8400],
         [24.2341,  9.2815, 14.5707],
         ...,
         [24.0670,  9.2208, 14.7468],
         [ 9.4284, 10.3179, 18.3143],
         [ 9.8884, 10.7113, 16.5686]],
        [[ 9.1083, 10.2978, 15.9372],
         [ 8.9322, 10.2824, 14.7635],
         [24.0275,  9.0895, 13.7544],
         ...,
         [23.8439,  9.0157, 13.9167],
         [ 9.0785, 10.1455, 18.0361],
         [ 9.6533, 10.5243, 16.2302]],
        ...,
        [[ 8.6995, 10.0692, 15.6010],
         [ 8.4779, 10.0555, 14.6691],
         [23.7734,  8.8568, 12.8045],
         ...,
         [23.5699,  8.7674, 12.9510],
         [ 8.6622,  9.9354, 17.6968],
         [ 9.3693, 10.2967, 15.8198]],
        [[ 9.7800, 10.6624, 16.4726],
         [ 9.6848, 10.6440, 14.9110],
         [24.4265,  9.4623, 15.3672],
         ...,
         [24.2748,  9.4144, 15.5572],
         [ 9.7634, 10.4798, 18.5749],
         [10.1106, 10.8869, 16.8873]],
        [[10.5457, 11.0627, 17.0592],
         [10.5512, 11.0411, 15.0689],
         [24.8564,  9.8739, 17.2824],
         ...,
         [24.7397,  9.8559, 17.5063],
         [10.5453, 10.8459, 19.1631],
         [10.6186, 11.2847, 17.6125]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0405],
         [0.9792, 0.9956, 0.9892],
         [1.1495, 0.9716, 1.1151],
         ...,
         [1.1492, 0.9732, 1.1206],
         [0.9754, 0.9895, 1.0746],
         [0.9650, 1.0008, 1.0559]],
        [[0.9312, 0.9609, 1.0012],
         [0.9294, 0.9605, 0.9789],
         [1.1266, 0.9350, 0.9745],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9573, 1.0354],
         [0.9370, 0.9657, 1.0070]],
        [[0.9267, 0.9568, 0.9967],
         [0.9244, 0.9565, 0.9777],
         [1.1238, 0.9309, 0.9612],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9536, 1.0309],
         [0.9339, 0.9617, 1.0015]],
        ...,
        [[0.9213, 0.9519, 0.9913],
         [0.9184, 0.9516, 0.9761],
         [1.1205, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9240, 0.9482],
         [0.9208, 0.9491, 1.0254],
         [0.9301, 0.9568, 0.9948]],
        [[0.9356, 0.9647, 1.0055],
         [0.9343, 0.9643, 0.9801],
         [1.1291, 0.9389, 0.9875],
         ...,
         [1.1271, 0.9379, 0.9906],
         [0.9353, 0.9607, 1.0396],
         [0.9399, 0.9695, 1.0122]],
        [[0.9457, 0.9732, 1.0150],
         [0.9458, 0.9728, 0.9826],
         [1.1348, 0.9477, 1.0186],
         ...,
         [1.1333, 0.9474, 1.0223],
         [0.9457, 0.9686, 1.0492],
         [0.9466, 0.9780, 1.0240]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7426, 12.1358, 18.6378],
         [13.0855, 12.1057, 15.4707],
         [25.9766, 10.9884, 23.2183],
         ...,
         [25.9510, 11.0589, 23.5447],
         [12.7955, 11.8235, 20.7320],
         [12.0071, 12.3494, 19.5838]],
        [[ 9.4523, 10.4858, 16.2199],
         [ 9.3158, 10.4692, 14.8378],
         [24.2393,  9.2818, 14.5728],
         ...,
         [24.0674,  9.2215, 14.7466],
         [ 9.4291, 10.3176, 18.3185],
         [ 9.8908, 10.7117, 16.5759]],
        [[ 9.1092, 10.2978, 15.9433],
         [ 8.9321, 10.2827, 14.7613],
         [24.0325,  9.0899, 13.7563],
         ...,
         [23.8440,  9.0164, 13.9168],
         [ 9.0794, 10.1450, 18.0400],
         [ 9.6562, 10.5247, 16.2373]],
        ...,
        [[ 8.7005, 10.0691, 15.6065],
         [ 8.4777, 10.0557, 14.6669],
         [23.7783,  8.8572, 12.8062],
         ...,
         [23.5695,  8.7681, 12.9515],
         [ 8.6633,  9.9349, 17.7002],
         [ 9.3728, 10.2971, 15.8265]],
        [[ 9.7805, 10.6624, 16.4795],
         [ 9.6847, 10.6444, 14.9088],
         [24.4318,  9.4626, 15.3696],
         ...,
         [24.2756,  9.4150, 15.5567],
         [ 9.7639, 10.4795, 18.5794],
         [10.1124, 10.8873, 16.8948]],
        [[10.5457, 11.0627, 17.0673],
         [10.5512, 11.0415, 15.0667],
         [24.8621,  9.8741, 17.2853],
         ...,
         [24.7413,  9.8564, 17.5050],
         [10.5453, 10.8458, 19.1685],
         [10.6192, 11.2850, 17.6205]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0407],
         [0.9792, 0.9955, 0.9892],
         [1.1496, 0.9716, 1.1152],
         ...,
         [1.1493, 0.9731, 1.1205],
         [0.9754, 0.9895, 1.0748],
         [0.9650, 1.0007, 1.0561]],
        [[0.9312, 0.9608, 1.0014],
         [0.9294, 0.9604, 0.9789],
         [1.1266, 0.9350, 0.9746],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9572, 1.0355],
         [0.9370, 0.9656, 1.0072]],
        [[0.9267, 0.9567, 0.9969],
         [0.9244, 0.9564, 0.9776],
         [1.1239, 0.9308, 0.9613],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9535, 1.0310],
         [0.9339, 0.9616, 1.0016]],
        ...,
        [[0.9213, 0.9518, 0.9914],
         [0.9183, 0.9516, 0.9761],
         [1.1206, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9239, 0.9482],
         [0.9208, 0.9490, 1.0254],
         [0.9302, 0.9567, 0.9950]],
        [[0.9356, 0.9646, 1.0056],
         [0.9343, 0.9642, 0.9800],
         [1.1292, 0.9388, 0.9875],
         ...,
         [1.1271, 0.9378, 0.9906],
         [0.9353, 0.9606, 1.0397],
         [0.9399, 0.9694, 1.0123]],
        [[0.9457, 0.9731, 1.0151],
         [0.9457, 0.9727, 0.9826],
         [1.1349, 0.9477, 1.0187],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9685, 1.0493],
         [0.9466, 0.9779, 1.0241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7436, 12.1359, 18.6306],
         [13.0854, 12.1052, 15.4722],
         [25.9722, 10.9884, 23.2153],
         ...,
         [25.9485, 11.0588, 23.5476],
         [12.7965, 11.8232, 20.7269],
         [12.0091, 12.3492, 19.5776]],
        [[ 9.4518, 10.4858, 16.2156],
         [ 9.3159, 10.4690, 14.8393],
         [24.2359,  9.2816, 14.5714],
         ...,
         [24.0672,  9.2210, 14.7468],
         [ 9.4286, 10.3178, 18.3157],
         [ 9.8892, 10.7114, 16.5711]],
        [[ 9.1086, 10.2978, 15.9393],
         [ 8.9322, 10.2825, 14.7628],
         [24.0292,  9.0897, 13.7550],
         ...,
         [23.8440,  9.0159, 13.9167],
         [ 9.0788, 10.1453, 18.0374],
         [ 9.6543, 10.5244, 16.2326]],
        ...,
        [[ 8.6998, 10.0692, 15.6029],
         [ 8.4778, 10.0556, 14.6683],
         [23.7751,  8.8569, 12.8051],
         ...,
         [23.5698,  8.7676, 12.9511],
         [ 8.6626,  9.9352, 17.6979],
         [ 9.3705, 10.2968, 15.8221]],
        [[ 9.7802, 10.6624, 16.4749],
         [ 9.6847, 10.6442, 14.9103],
         [24.4283,  9.4624, 15.3680],
         ...,
         [24.2751,  9.4146, 15.5570],
         [ 9.7636, 10.4797, 18.5764],
         [10.1112, 10.8870, 16.8899]],
        [[10.5457, 11.0627, 17.0620],
         [10.5512, 11.0412, 15.0682],
         [24.8583,  9.8739, 17.2834],
         ...,
         [24.7403,  9.8561, 17.5058],
         [10.5453, 10.8459, 19.1649],
         [10.6188, 11.2848, 17.6152]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0406],
         [0.9792, 0.9956, 0.9892],
         [1.1495, 0.9716, 1.1151],
         ...,
         [1.1492, 0.9731, 1.1205],
         [0.9754, 0.9895, 1.0747],
         [0.9650, 1.0008, 1.0560]],
        [[0.9312, 0.9608, 1.0013],
         [0.9294, 0.9605, 0.9789],
         [1.1266, 0.9350, 0.9745],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9572, 1.0354],
         [0.9370, 0.9657, 1.0071]],
        [[0.9267, 0.9568, 0.9968],
         [0.9244, 0.9565, 0.9777],
         [1.1239, 0.9309, 0.9613],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9535, 1.0309],
         [0.9339, 0.9617, 1.0016]],
        ...,
        [[0.9213, 0.9519, 0.9913],
         [0.9183, 0.9516, 0.9761],
         [1.1205, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9240, 0.9482],
         [0.9208, 0.9490, 1.0254],
         [0.9301, 0.9568, 0.9949]],
        [[0.9356, 0.9646, 1.0055],
         [0.9343, 0.9642, 0.9801],
         [1.1291, 0.9389, 0.9875],
         ...,
         [1.1271, 0.9379, 0.9906],
         [0.9353, 0.9607, 1.0397],
         [0.9399, 0.9694, 1.0122]],
        [[0.9457, 0.9732, 1.0150],
         [0.9458, 0.9727, 0.9826],
         [1.1348, 0.9477, 1.0186],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9686, 1.0493],
         [0.9466, 0.9780, 1.0240]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7428, 12.1358, 18.6363],
         [13.0855, 12.1056, 15.4710],
         [25.9757, 10.9884, 23.2177],
         ...,
         [25.9505, 11.0589, 23.5453],
         [12.7957, 11.8234, 20.7309],
         [12.0075, 12.3494, 19.5825]],
        [[ 9.4522, 10.4858, 16.2190],
         [ 9.3158, 10.4692, 14.8381],
         [24.2386,  9.2818, 14.5725],
         ...,
         [24.0674,  9.2214, 14.7467],
         [ 9.4290, 10.3176, 18.3179],
         [ 9.8905, 10.7116, 16.5749]],
        [[ 9.1090, 10.2978, 15.9424],
         [ 8.9321, 10.2826, 14.7616],
         [24.0318,  9.0899, 13.7561],
         ...,
         [23.8440,  9.0163, 13.9168],
         [ 9.0792, 10.1451, 18.0394],
         [ 9.6558, 10.5246, 16.2363]],
        ...,
        [[ 8.7004, 10.0691, 15.6057],
         [ 8.4778, 10.0557, 14.6672],
         [23.7776,  8.8572, 12.8060],
         ...,
         [23.5696,  8.7680, 12.9514],
         [ 8.6631,  9.9349, 17.6997],
         [ 9.3723, 10.2970, 15.8256]],
        [[ 9.7804, 10.6624, 16.4786],
         [ 9.6847, 10.6444, 14.9091],
         [24.4311,  9.4626, 15.3693],
         ...,
         [24.2755,  9.4149, 15.5567],
         [ 9.7638, 10.4795, 18.5788],
         [10.1122, 10.8872, 16.8938]],
        [[10.5457, 11.0627, 17.0662],
         [10.5512, 11.0415, 15.0670],
         [24.8613,  9.8741, 17.2849],
         ...,
         [24.7411,  9.8564, 17.5052],
         [10.5453, 10.8458, 19.1678],
         [10.6191, 11.2849, 17.6194]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0407],
         [0.9792, 0.9955, 0.9892],
         [1.1496, 0.9716, 1.1152],
         ...,
         [1.1493, 0.9731, 1.1205],
         [0.9754, 0.9895, 1.0747],
         [0.9650, 1.0007, 1.0561]],
        [[0.9312, 0.9608, 1.0013],
         [0.9294, 0.9604, 0.9789],
         [1.1266, 0.9350, 0.9746],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9572, 1.0355],
         [0.9370, 0.9656, 1.0071]],
        [[0.9267, 0.9568, 0.9968],
         [0.9244, 0.9564, 0.9776],
         [1.1239, 0.9309, 0.9613],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9535, 1.0310],
         [0.9339, 0.9616, 1.0016]],
        ...,
        [[0.9213, 0.9519, 0.9914],
         [0.9183, 0.9516, 0.9761],
         [1.1205, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9240, 0.9482],
         [0.9208, 0.9490, 1.0254],
         [0.9302, 0.9567, 0.9949]],
        [[0.9356, 0.9646, 1.0056],
         [0.9343, 0.9642, 0.9800],
         [1.1292, 0.9388, 0.9875],
         ...,
         [1.1271, 0.9378, 0.9906],
         [0.9353, 0.9607, 1.0397],
         [0.9399, 0.9694, 1.0123]],
        [[0.9457, 0.9732, 1.0151],
         [0.9457, 0.9727, 0.9826],
         [1.1349, 0.9477, 1.0187],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9685, 1.0493],
         [0.9466, 0.9779, 1.0241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7434, 12.1358, 18.6325],
         [13.0854, 12.1053, 15.4718],
         [25.9734, 10.9884, 23.2161],
         ...,
         [25.9492, 11.0588, 23.5468],
         [12.7963, 11.8233, 20.7283],
         [12.0086, 12.3493, 19.5792]],
        [[ 9.4520, 10.4858, 16.2167],
         [ 9.3159, 10.4690, 14.8389],
         [24.2368,  9.2817, 14.5718],
         ...,
         [24.0672,  9.2212, 14.7467],
         [ 9.4287, 10.3177, 18.3165],
         [ 9.8897, 10.7115, 16.5724]],
        [[ 9.1087, 10.2978, 15.9404],
         [ 8.9322, 10.2825, 14.7624],
         [24.0301,  9.0897, 13.7554],
         ...,
         [23.8440,  9.0160, 13.9167],
         [ 9.0790, 10.1452, 18.0381],
         [ 9.6548, 10.5245, 16.2339]],
        ...,
        [[ 8.7000, 10.0692, 15.6038],
         [ 8.4778, 10.0556, 14.6679],
         [23.7759,  8.8570, 12.8054],
         ...,
         [23.5697,  8.7678, 12.9512],
         [ 8.6628,  9.9351, 17.6985],
         [ 9.3711, 10.2969, 15.8233]],
        [[ 9.7803, 10.6624, 16.4762],
         [ 9.6847, 10.6442, 14.9099],
         [24.4293,  9.4625, 15.3684],
         ...,
         [24.2752,  9.4147, 15.5569],
         [ 9.7636, 10.4796, 18.5772],
         [10.1115, 10.8871, 16.8912]],
        [[10.5457, 11.0627, 17.0634],
         [10.5512, 11.0413, 15.0678],
         [24.8593,  9.8740, 17.2839],
         ...,
         [24.7405,  9.8562, 17.5056],
         [10.5453, 10.8458, 19.1659],
         [10.6189, 11.2848, 17.6166]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0406],
         [0.9792, 0.9955, 0.9892],
         [1.1496, 0.9716, 1.1151],
         ...,
         [1.1492, 0.9731, 1.1205],
         [0.9754, 0.9895, 1.0747],
         [0.9650, 1.0008, 1.0560]],
        [[0.9312, 0.9608, 1.0013],
         [0.9294, 0.9605, 0.9789],
         [1.1266, 0.9350, 0.9745],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9572, 1.0355],
         [0.9370, 0.9657, 1.0071]],
        [[0.9267, 0.9568, 0.9968],
         [0.9244, 0.9565, 0.9776],
         [1.1239, 0.9309, 0.9613],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9535, 1.0309],
         [0.9339, 0.9616, 1.0016]],
        ...,
        [[0.9213, 0.9519, 0.9913],
         [0.9183, 0.9516, 0.9761],
         [1.1205, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9240, 0.9482],
         [0.9208, 0.9490, 1.0254],
         [0.9302, 0.9568, 0.9949]],
        [[0.9356, 0.9646, 1.0055],
         [0.9343, 0.9642, 0.9800],
         [1.1292, 0.9389, 0.9875],
         ...,
         [1.1271, 0.9378, 0.9906],
         [0.9353, 0.9607, 1.0397],
         [0.9399, 0.9694, 1.0123]],
        [[0.9457, 0.9732, 1.0151],
         [0.9457, 0.9727, 0.9826],
         [1.1348, 0.9477, 1.0187],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9685, 1.0493],
         [0.9466, 0.9780, 1.0241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7429, 12.1358, 18.6355],
         [13.0855, 12.1055, 15.4712],
         [25.9752, 10.9884, 23.2173],
         ...,
         [25.9502, 11.0589, 23.5456],
         [12.7958, 11.8234, 20.7304],
         [12.0077, 12.3493, 19.5818]],
        [[ 9.4521, 10.4858, 16.2185],
         [ 9.3158, 10.4691, 14.8383],
         [24.2382,  9.2818, 14.5724],
         ...,
         [24.0673,  9.2213, 14.7467],
         [ 9.4289, 10.3176, 18.3176],
         [ 9.8903, 10.7116, 16.5744]],
        [[ 9.1090, 10.2978, 15.9420],
         [ 8.9321, 10.2826, 14.7618],
         [24.0314,  9.0898, 13.7559],
         ...,
         [23.8440,  9.0162, 13.9168],
         [ 9.0792, 10.1451, 18.0392],
         [ 9.6556, 10.5246, 16.2358]],
        ...,
        [[ 8.7003, 10.0692, 15.6053],
         [ 8.4778, 10.0557, 14.6673],
         [23.7772,  8.8571, 12.8059],
         ...,
         [23.5696,  8.7680, 12.9514],
         [ 8.6631,  9.9350, 17.6994],
         [ 9.3721, 10.2970, 15.8251]],
        [[ 9.7804, 10.6624, 16.4781],
         [ 9.6847, 10.6443, 14.9093],
         [24.4307,  9.4626, 15.3691],
         ...,
         [24.2754,  9.4148, 15.5568],
         [ 9.7638, 10.4795, 18.5785],
         [10.1120, 10.8872, 16.8933]],
        [[10.5457, 11.0627, 17.0656],
         [10.5512, 11.0414, 15.0672],
         [24.8609,  9.8740, 17.2847],
         ...,
         [24.7410,  9.8563, 17.5052],
         [10.5453, 10.8458, 19.1674],
         [10.6191, 11.2849, 17.6188]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0406],
         [0.9792, 0.9955, 0.9892],
         [1.1496, 0.9716, 1.1152],
         ...,
         [1.1493, 0.9731, 1.1205],
         [0.9754, 0.9895, 1.0747],
         [0.9650, 1.0008, 1.0560]],
        [[0.9312, 0.9608, 1.0013],
         [0.9294, 0.9604, 0.9789],
         [1.1266, 0.9350, 0.9746],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9572, 1.0355],
         [0.9370, 0.9656, 1.0071]],
        [[0.9267, 0.9568, 0.9968],
         [0.9244, 0.9564, 0.9776],
         [1.1239, 0.9309, 0.9613],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9535, 1.0309],
         [0.9339, 0.9616, 1.0016]],
        ...,
        [[0.9213, 0.9519, 0.9914],
         [0.9183, 0.9516, 0.9761],
         [1.1205, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9240, 0.9482],
         [0.9208, 0.9490, 1.0254],
         [0.9302, 0.9567, 0.9949]],
        [[0.9356, 0.9646, 1.0056],
         [0.9343, 0.9642, 0.9800],
         [1.1292, 0.9389, 0.9875],
         ...,
         [1.1271, 0.9378, 0.9906],
         [0.9353, 0.9607, 1.0397],
         [0.9399, 0.9694, 1.0123]],
        [[0.9457, 0.9732, 1.0151],
         [0.9457, 0.9727, 0.9826],
         [1.1349, 0.9477, 1.0187],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9685, 1.0493],
         [0.9466, 0.9779, 1.0241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7428, 12.1358, 18.6363],
         [13.0855, 12.1056, 15.4710],
         [25.9757, 10.9884, 23.2177],
         ...,
         [25.9505, 11.0589, 23.5453],
         [12.7957, 11.8234, 20.7309],
         [12.0075, 12.3494, 19.5825]],
        [[ 9.4522, 10.4858, 16.2190],
         [ 9.3158, 10.4692, 14.8381],
         [24.2386,  9.2818, 14.5725],
         ...,
         [24.0674,  9.2214, 14.7467],
         [ 9.4290, 10.3176, 18.3179],
         [ 9.8905, 10.7116, 16.5749]],
        [[ 9.1090, 10.2978, 15.9424],
         [ 8.9321, 10.2826, 14.7616],
         [24.0318,  9.0899, 13.7561],
         ...,
         [23.8440,  9.0163, 13.9168],
         [ 9.0792, 10.1451, 18.0394],
         [ 9.6558, 10.5246, 16.2363]],
        ...,
        [[ 8.7004, 10.0691, 15.6057],
         [ 8.4778, 10.0557, 14.6672],
         [23.7776,  8.8572, 12.8060],
         ...,
         [23.5696,  8.7680, 12.9514],
         [ 8.6631,  9.9349, 17.6997],
         [ 9.3723, 10.2970, 15.8256]],
        [[ 9.7804, 10.6624, 16.4786],
         [ 9.6847, 10.6444, 14.9091],
         [24.4311,  9.4626, 15.3693],
         ...,
         [24.2755,  9.4149, 15.5567],
         [ 9.7638, 10.4795, 18.5788],
         [10.1122, 10.8872, 16.8938]],
        [[10.5457, 11.0627, 17.0662],
         [10.5512, 11.0415, 15.0670],
         [24.8613,  9.8741, 17.2849],
         ...,
         [24.7411,  9.8564, 17.5052],
         [10.5453, 10.8458, 19.1678],
         [10.6191, 11.2849, 17.6194]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9747, 0.9962, 1.0407],
         [0.9792, 0.9955, 0.9892],
         [1.1496, 0.9716, 1.1152],
         ...,
         [1.1493, 0.9731, 1.1205],
         [0.9754, 0.9895, 1.0747],
         [0.9650, 1.0007, 1.0561]],
        [[0.9312, 0.9608, 1.0013],
         [0.9294, 0.9604, 0.9789],
         [1.1266, 0.9350, 0.9746],
         ...,
         [1.1244, 0.9337, 0.9774],
         [0.9309, 0.9572, 1.0355],
         [0.9370, 0.9656, 1.0071]],
        [[0.9267, 0.9568, 0.9968],
         [0.9244, 0.9564, 0.9776],
         [1.1239, 0.9309, 0.9613],
         ...,
         [1.1214, 0.9293, 0.9639],
         [0.9263, 0.9535, 1.0310],
         [0.9339, 0.9616, 1.0016]],
        ...,
        [[0.9213, 0.9519, 0.9914],
         [0.9183, 0.9516, 0.9761],
         [1.1205, 0.9259, 0.9458],
         ...,
         [1.1178, 0.9240, 0.9482],
         [0.9208, 0.9490, 1.0254],
         [0.9302, 0.9567, 0.9949]],
        [[0.9356, 0.9646, 1.0056],
         [0.9343, 0.9642, 0.9800],
         [1.1292, 0.9388, 0.9875],
         ...,
         [1.1271, 0.9378, 0.9906],
         [0.9353, 0.9607, 1.0397],
         [0.9399, 0.9694, 1.0123]],
        [[0.9457, 0.9732, 1.0151],
         [0.9457, 0.9727, 0.9826],
         [1.1349, 0.9477, 1.0187],
         ...,
         [1.1333, 0.9473, 1.0223],
         [0.9457, 0.9685, 1.0493],
         [0.9466, 0.9779, 1.0241]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.3351, 12.1926, 15.4600],
         [13.3205, 11.9223, 16.1469],
         [24.6425, 11.1111, 21.7927],
         ...,
         [25.2026, 12.1378, 24.7940],
         [13.0305, 11.8229, 17.8702],
         [13.6115, 12.3328, 16.4673]],
        [[ 9.2300, 10.5245, 14.6849],
         [ 9.2347, 10.3985, 15.5350],
         [23.3037,  9.2075, 13.9928],
         ...,
         [24.3789,  9.3079, 14.7889],
         [ 9.3361, 10.3576, 16.6294],
         [ 9.1452, 10.6862, 14.7638]],
        [[ 8.8190, 10.3346, 14.5917],
         [ 8.8253, 10.2240, 15.4609],
         [23.1431,  8.9958, 13.2461],
         ...,
         [24.2788,  9.0070, 13.8726],
         [ 8.9586, 10.1893, 16.4819],
         [ 8.7059, 10.4983, 14.5655]],
        ...,
        [[ 8.3343, 10.1036, 14.4769],
         [ 8.3423, 10.0114, 15.3694],
         [22.9454,  8.7398, 12.3744],
         ...,
         [24.1551,  8.6470, 12.8138],
         [ 8.5113,  9.9842, 16.3007],
         [ 8.1898, 10.2697, 14.3232]],
        [[ 9.6264, 10.7030, 14.7715],
         [ 9.6296, 10.5623, 15.6038],
         [23.4530,  9.4074, 14.7195],
         ...,
         [24.4716,  9.5946, 15.6886],
         [ 9.6987, 10.5154, 16.7668],
         [ 9.5704, 10.8627, 14.9492]],
        [[10.5624, 11.1076, 14.9644],
         [10.5616, 10.9329, 15.7565],
         [23.7857,  9.8640, 16.4595],
         ...,
         [24.6776, 10.2589, 17.8722],
         [10.5495, 10.8722, 17.0738],
         [10.5801, 11.2625, 15.3666]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9766, 1.0187, 0.9848],
         [0.9764, 1.0129, 0.9959],
         [1.1261, 0.9955, 1.0878],
         ...,
         [1.1335, 1.0176, 1.1366],
         [0.9726, 1.0108, 1.0240],
         [0.9803, 1.0217, 1.0011]],
        [[0.9224, 0.9830, 0.9722],
         [0.9224, 0.9803, 0.9860],
         [1.1084, 0.9547, 0.9609],
         ...,
         [1.1226, 0.9569, 0.9738],
         [0.9238, 0.9794, 1.0038],
         [0.9213, 0.9864, 0.9734]],
        [[0.9169, 0.9789, 0.9706],
         [0.9170, 0.9765, 0.9848],
         [1.1062, 0.9502, 0.9488],
         ...,
         [1.1213, 0.9504, 0.9589],
         [0.9188, 0.9758, 1.0014],
         [0.9155, 0.9824, 0.9702]],
        ...,
        [[0.9105, 0.9739, 0.9688],
         [0.9106, 0.9720, 0.9833],
         [1.1036, 0.9447, 0.9346],
         ...,
         [1.1196, 0.9427, 0.9417],
         [0.9129, 0.9714, 0.9984],
         [0.9086, 0.9775, 0.9663]],
        [[0.9276, 0.9868, 0.9736],
         [0.9277, 0.9838, 0.9871],
         [1.1103, 0.9590, 0.9727],
         ...,
         [1.1238, 0.9630, 0.9885],
         [0.9286, 0.9828, 1.0060],
         [0.9269, 0.9902, 0.9765]],
        [[0.9400, 0.9955, 0.9767],
         [0.9400, 0.9917, 0.9896],
         [1.1147, 0.9688, 1.0010],
         ...,
         [1.1265, 0.9773, 1.0240],
         [0.9398, 0.9904, 1.0110],
         [0.9402, 0.9988, 0.9832]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9533, 12.1577, 17.4565],
         [13.1718, 12.0372, 15.7242],
         [25.4521, 11.0057, 22.7208],
         ...,
         [25.6507, 11.2109, 24.0274],
         [12.8817, 11.8059, 19.6265],
         [12.5114, 12.3431, 18.5086]],
        [[ 9.3659, 10.4994, 15.5804],
         [ 9.2851, 10.4384, 15.0891],
         [23.8915,  9.2430, 14.3534],
         ...,
         [24.1809,  9.1875, 14.7623],
         [ 9.3937, 10.3397, 17.6442],
         [ 9.5819, 10.7020, 15.8230]],
        [[ 8.9974, 10.3105, 15.3626],
         [ 8.8917, 10.2559, 15.0122],
         [23.7051,  9.0454, 13.5601],
         ...,
         [24.0050,  8.9639, 13.8984],
         [ 9.0336, 10.1714, 17.4131],
         [ 9.2706, 10.5146, 15.5189]],
        ...,
        [[ 8.5601, 10.0808, 15.0966],
         [ 8.4266, 10.0338, 14.9174],
         [23.4758,  8.8061, 12.6362],
         ...,
         [23.7883,  8.6939, 12.8962],
         [ 8.6058,  9.9662, 17.1306],
         [ 8.8983, 10.2866, 15.1495]],
        [[ 9.7195, 10.6769, 15.7842],
         [ 9.6636, 10.6098, 15.1603],
         [24.0649,  9.4292, 15.1270],
         ...,
         [24.3446,  9.3989, 15.6074],
         [ 9.7389, 10.4976, 17.8602],
         [ 9.8785, 10.8779, 16.1090]],
        [[10.5478, 11.0791, 16.2433],
         [10.5545, 10.9981, 15.3188],
         [24.4520,  9.8536, 16.9846],
         ...,
         [24.7095,  9.8827, 17.6475],
         [10.5462, 10.8546, 18.3463],
         [10.5660, 11.2764, 16.7587]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9764, 1.0107, 1.0199],
         [0.9793, 1.0081, 0.9917],
         [1.1416, 0.9860, 1.1055],
         ...,
         [1.1442, 0.9904, 1.1267],
         [0.9755, 1.0031, 1.0552],
         [0.9706, 1.0147, 1.0370]],
        [[0.9290, 0.9751, 0.9894],
         [0.9280, 0.9738, 0.9814],
         [1.1210, 0.9482, 0.9694],
         ...,
         [1.1248, 0.9470, 0.9760],
         [0.9294, 0.9717, 1.0229],
         [0.9319, 0.9795, 0.9933]],
        [[0.9242, 0.9711, 0.9858],
         [0.9228, 0.9699, 0.9801],
         [1.1185, 0.9439, 0.9565],
         ...,
         [1.1225, 0.9422, 0.9620],
         [0.9246, 0.9681, 1.0192],
         [0.9278, 0.9754, 0.9884]],
        ...,
        [[0.9184, 0.9661, 0.9815],
         [0.9166, 0.9651, 0.9786],
         [1.1155, 0.9388, 0.9415],
         ...,
         [1.1196, 0.9364, 0.9457],
         [0.9190, 0.9637, 1.0146],
         [0.9229, 0.9706, 0.9823]],
        [[0.9337, 0.9789, 0.9927],
         [0.9330, 0.9775, 0.9825],
         [1.1233, 0.9522, 0.9820],
         ...,
         [1.1270, 0.9515, 0.9898],
         [0.9340, 0.9751, 1.0264],
         [0.9358, 0.9832, 0.9980]],
        [[0.9447, 0.9876, 1.0001],
         [0.9447, 0.9858, 0.9851],
         [1.1284, 0.9613, 1.0122],
         ...,
         [1.1318, 0.9619, 1.0230],
         [0.9446, 0.9827, 1.0343],
         [0.9449, 0.9918, 1.0085]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7747, 12.1393, 18.4550],
         [13.0988, 12.0952, 15.5099],
         [25.8976, 10.9887, 23.1434],
         ...,
         [25.9095, 11.0584, 23.6213],
         [12.8090, 11.8195, 20.5568],
         [12.0789, 12.3484, 19.4245]],
        [[ 9.4385, 10.4878, 16.1143],
         [ 9.3110, 10.4639, 14.8765],
         [24.1843,  9.2749, 14.5383],
         ...,
         [24.0844,  9.2113, 14.7491],
         [ 9.4234, 10.3216, 18.2096],
         [ 9.8401, 10.7101, 16.4523]],
        [[ 9.0914, 10.2997, 15.8461],
         [ 8.9258, 10.2780, 14.7999],
         [23.9803,  9.0823, 13.7252],
         ...,
         [23.8676,  9.0052, 13.9138],
         [ 9.0721, 10.1499, 17.9383],
         [ 9.5935, 10.5230, 16.1175]],
        ...,
        [[ 8.6783, 10.0709, 15.5193],
         [ 8.4698, 10.0517, 14.7054],
         [23.7294,  8.8487, 12.7790],
         ...,
         [23.6013,  8.7558, 12.9425],
         [ 8.6542,  9.9408, 17.6073],
         [ 9.2960, 10.2954, 15.7114]],
        [[ 9.7707, 10.6646, 16.3661],
         [ 9.6814, 10.6386, 14.9476],
         [24.3743,  9.4564, 15.3317],
         ...,
         [24.2863,  9.4057, 15.5647],
         [ 9.7599, 10.4827, 18.4637],
         [10.0733, 10.8857, 16.7675]],
        [[10.5457, 11.0652, 16.9355],
         [10.5517, 11.0345, 15.1056],
         [24.7987,  9.8695, 17.2389],
         ...,
         [24.7378,  9.8494, 17.5277],
         [10.5454, 10.8471, 19.0369],
         [10.6078, 11.2836, 17.4847]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9970, 0.9895],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1486, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0024, 1.0532]],
        [[0.9309, 0.9626, 0.9994],
         [0.9292, 0.9620, 0.9792],
         [1.1258, 0.9365, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0335],
         [0.9362, 0.9673, 1.0049]],
        [[0.9263, 0.9585, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1231, 0.9324, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9553, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9536, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1180, 0.9254, 0.9478],
         [0.9205, 0.9508, 1.0237],
         [0.9290, 0.9584, 0.9928]],
        [[0.9353, 0.9663, 1.0035],
         [0.9341, 0.9658, 0.9804],
         [1.1283, 0.9404, 0.9866],
         ...,
         [1.1271, 0.9393, 0.9904],
         [0.9351, 0.9624, 1.0376],
         [0.9393, 0.9711, 1.0100]],
        [[0.9455, 0.9749, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1339, 0.9493, 1.0177],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9796, 1.0217]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8916, 12.1515, 17.7983],
         [13.1468, 12.0572, 15.6510],
         [25.6064, 10.9971, 22.8681],
         ...,
         [25.7448, 11.1300, 23.8906],
         [12.8568, 11.8090, 19.9399],
         [12.3557, 12.3449, 18.8306]],
        [[ 9.3903, 10.4954, 15.7556],
         [ 9.2938, 10.4466, 15.0160],
         [23.9908,  9.2528, 14.4161],
         ...,
         [24.1472,  9.1896, 14.7578],
         [ 9.4038, 10.3342, 17.8322],
         [ 9.6668, 10.7047, 16.0300]],
        [[ 9.0291, 10.3068, 15.5196],
         [ 8.9033, 10.2628, 14.9392],
         [23.7981,  9.0571, 13.6158],
         ...,
         [23.9564,  8.9742, 13.9035],
         [ 9.0466, 10.1650, 17.5873],
         [ 9.3775, 10.5175, 15.7136]],
        ...,
        [[ 8.6000, 10.0773, 15.2316],
         [ 8.4412, 10.0392, 14.8444],
         [23.5610,  8.8199, 12.6840],
         ...,
         [23.7218,  8.7139, 12.9116],
         [ 8.6222,  9.9588, 17.2880],
         [ 9.0305, 10.2896, 15.3296]],
        [[ 9.7366, 10.6726, 15.9766],
         [ 9.6696, 10.6192, 15.0872],
         [24.1702,  9.4373, 15.1967],
         ...,
         [24.3246,  9.3930, 15.5930],
         [ 9.7460, 10.4930, 18.0614],
         [ 9.9417, 10.8806, 16.3277]],
        [[10.5467, 11.0743, 16.4754],
         [10.5535, 11.0102, 15.2456],
         [24.5707,  9.8574, 17.0720],
         ...,
         [24.7208,  9.8579, 17.6072],
         [10.5458, 10.8520, 18.5774],
         [10.5765, 11.2789, 17.0044]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9759, 1.0058, 1.0259],
         [0.9793, 1.0038, 0.9909],
         [1.1440, 0.9810, 1.1083],
         ...,
         [1.1458, 0.9839, 1.1249],
         [0.9755, 0.9984, 1.0607],
         [0.9688, 1.0099, 1.0426]],
        [[0.9297, 0.9703, 0.9926],
         [0.9284, 0.9692, 0.9806],
         [1.1226, 0.9436, 0.9708],
         ...,
         [1.1247, 0.9423, 0.9764],
         [0.9298, 0.9668, 1.0264],
         [0.9333, 0.9748, 0.9971]],
        [[0.9249, 0.9662, 0.9888],
         [0.9232, 0.9653, 0.9794],
         [1.1201, 0.9394, 0.9578],
         ...,
         [1.1222, 0.9377, 0.9625],
         [0.9251, 0.9632, 1.0224],
         [0.9295, 0.9708, 0.9919]],
        ...,
        [[0.9192, 0.9613, 0.9841],
         [0.9171, 0.9605, 0.9778],
         [1.1169, 0.9344, 0.9427],
         ...,
         [1.1191, 0.9321, 0.9464],
         [0.9195, 0.9588, 1.0176],
         [0.9249, 0.9659, 0.9857]],
        [[0.9342, 0.9741, 0.9962],
         [0.9333, 0.9729, 0.9818],
         [1.1250, 0.9476, 0.9835],
         ...,
         [1.1270, 0.9466, 0.9900],
         [0.9344, 0.9702, 1.0301],
         [0.9369, 0.9785, 1.0019]],
        [[0.9449, 0.9827, 1.0043],
         [0.9450, 0.9813, 0.9843],
         [1.1303, 0.9566, 1.0140],
         ...,
         [1.1323, 0.9566, 1.0227],
         [0.9449, 0.9779, 1.0385],
         [0.9453, 0.9871, 1.0129]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7928, 12.1412, 18.3530],
         [13.1063, 12.0893, 15.5318],
         [25.8532, 10.9893, 23.1013],
         ...,
         [25.8855, 11.0620, 23.6638],
         [12.8164, 11.8175, 20.4595],
         [12.1201, 12.3478, 19.3344]],
        [[ 9.4309, 10.4890, 16.0566],
         [ 9.3083, 10.4611, 14.8981],
         [24.1540,  9.2712, 14.5191],
         ...,
         [24.0940,  9.2064, 14.7504],
         [ 9.4203, 10.3237, 18.1495],
         [ 9.8122, 10.7093, 16.3844]],
        [[ 9.0816, 10.3008, 15.7931],
         [ 8.9223, 10.2754, 14.8215],
         [23.9516,  9.0781, 13.7080],
         ...,
         [23.8811,  8.9995, 13.9121],
         [ 9.0681, 10.1525, 17.8823],
         [ 9.5590, 10.5222, 16.0521]],
        ...,
        [[ 8.6660, 10.0719, 15.4720],
         [ 8.4653, 10.0496, 14.7269],
         [23.7027,  8.8441, 12.7639],
         ...,
         [23.6194,  8.7491, 12.9376],
         [ 8.6492,  9.9439, 17.5561],
         [ 9.2537, 10.2945, 15.6489]],
        [[ 9.7653, 10.6658, 16.3037],
         [ 9.6795, 10.6355, 14.9692],
         [24.3424,  9.4531, 15.3106],
         ...,
         [24.2923,  9.4016, 15.5692],
         [ 9.7577, 10.4844, 18.3997],
         [10.0520, 10.8849, 16.6974]],
        [[10.5458, 11.0666, 16.8627],
         [10.5519, 11.0306, 15.1273],
         [24.7633,  9.8672, 17.2130],
         ...,
         [24.7357,  9.8472, 17.5402],
         [10.5454, 10.8479, 18.9641],
         [10.6020, 11.2829, 17.4093]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9990, 1.0356],
         [0.9793, 0.9979, 0.9898],
         [1.1477, 0.9743, 1.1129],
         ...,
         [1.1481, 0.9759, 1.1220],
         [0.9754, 0.9921, 1.0699],
         [0.9662, 1.0035, 1.0516]],
        [[0.9307, 0.9636, 0.9983],
         [0.9291, 0.9630, 0.9794],
         [1.1253, 0.9375, 0.9733],
         ...,
         [1.1245, 0.9361, 0.9770],
         [0.9305, 0.9601, 1.0323],
         [0.9357, 0.9683, 1.0036]],
        [[0.9261, 0.9596, 0.9940],
         [0.9240, 0.9590, 0.9782],
         [1.1226, 0.9334, 0.9601],
         ...,
         [1.1217, 0.9317, 0.9634],
         [0.9259, 0.9564, 1.0280],
         [0.9324, 0.9643, 0.9982]],
        ...,
        [[0.9206, 0.9547, 0.9888],
         [0.9179, 0.9542, 0.9767],
         [1.1193, 0.9283, 0.9447],
         ...,
         [1.1182, 0.9263, 0.9476],
         [0.9204, 0.9519, 1.0227],
         [0.9283, 0.9594, 0.9917]],
        [[0.9351, 0.9674, 1.0023],
         [0.9340, 0.9668, 0.9806],
         [1.1278, 0.9414, 0.9862],
         ...,
         [1.1271, 0.9403, 0.9904],
         [0.9350, 0.9635, 1.0364],
         [0.9389, 0.9721, 1.0087]],
        [[0.9454, 0.9760, 1.0114],
         [0.9455, 0.9752, 0.9832],
         [1.1333, 0.9503, 1.0171],
         ...,
         [1.1329, 0.9499, 1.0224],
         [0.9454, 0.9713, 1.0456],
         [0.9462, 0.9806, 1.0203]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7784, 12.1396, 18.4345],
         [13.1003, 12.0940, 15.5143],
         [25.8887, 10.9888, 23.1349],
         ...,
         [25.9047, 11.0589, 23.6299],
         [12.8105, 11.8191, 20.5371],
         [12.0872, 12.3483, 19.4064]],
        [[ 9.4370, 10.4881, 16.1026],
         [ 9.3105, 10.4634, 14.8809],
         [24.1782,  9.2742, 14.5344],
         ...,
         [24.0864,  9.2102, 14.7494],
         [ 9.4228, 10.3220, 18.1974],
         [ 9.8344, 10.7099, 16.4385]],
        [[ 9.0894, 10.2999, 15.8353],
         [ 8.9251, 10.2774, 14.8043],
         [23.9745,  9.0814, 13.7217],
         ...,
         [23.8703,  9.0040, 13.9135],
         [ 9.0713, 10.1504, 17.9270],
         [ 9.5865, 10.5229, 16.1042]],
        ...,
        [[ 8.6758, 10.0711, 15.5097],
         [ 8.4689, 10.0513, 14.7098],
         [23.7240,  8.8478, 12.7759],
         ...,
         [23.6049,  8.7545, 12.9415],
         [ 8.6532,  9.9414, 17.5969],
         [ 9.2875, 10.2952, 15.6987]],
        [[ 9.7696, 10.6648, 16.3534],
         [ 9.6810, 10.6380, 14.9519],
         [24.3678,  9.4557, 15.3274],
         ...,
         [24.2875,  9.4048, 15.5656],
         [ 9.7594, 10.4830, 18.4507],
         [10.0690, 10.8856, 16.7533]],
        [[10.5457, 11.0655, 16.9208],
         [10.5517, 11.0337, 15.1100],
         [24.7915,  9.8690, 17.2337],
         ...,
         [24.7374,  9.8488, 17.5302],
         [10.5454, 10.8473, 19.0222],
         [10.6066, 11.2835, 17.4695]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9982, 1.0371],
         [0.9793, 0.9972, 0.9896],
         [1.1483, 0.9735, 1.1135],
         ...,
         [1.1485, 0.9750, 1.1216],
         [0.9754, 0.9913, 1.0713],
         [0.9659, 1.0027, 1.0529]],
        [[0.9308, 0.9628, 0.9992],
         [0.9292, 0.9622, 0.9793],
         [1.1257, 0.9367, 0.9736],
         ...,
         [1.1244, 0.9354, 0.9771],
         [0.9307, 0.9592, 1.0332],
         [0.9361, 0.9675, 1.0046]],
        [[0.9262, 0.9587, 0.9948],
         [0.9241, 0.9582, 0.9780],
         [1.1230, 0.9326, 0.9604],
         ...,
         [1.1216, 0.9309, 0.9635],
         [0.9260, 0.9555, 1.0288],
         [0.9328, 0.9635, 0.9992]],
        ...,
        [[0.9208, 0.9538, 0.9895],
         [0.9180, 0.9534, 0.9765],
         [1.1197, 0.9276, 0.9450],
         ...,
         [1.1181, 0.9256, 0.9477],
         [0.9205, 0.9510, 1.0235],
         [0.9289, 0.9586, 0.9926]],
        [[0.9352, 0.9666, 1.0032],
         [0.9341, 0.9660, 0.9804],
         [1.1282, 0.9406, 0.9865],
         ...,
         [1.1271, 0.9395, 0.9904],
         [0.9351, 0.9627, 1.0373],
         [0.9392, 0.9713, 1.0097]],
        [[0.9455, 0.9751, 1.0125],
         [0.9456, 0.9745, 0.9830],
         [1.1338, 0.9495, 1.0175],
         ...,
         [1.1330, 0.9491, 1.0224],
         [0.9455, 0.9705, 1.0466],
         [0.9463, 0.9798, 1.0214]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.4408, 12.1261, 14.3264],
         [13.0968, 11.8299, 16.3495],
         [25.0885, 11.1276, 20.9414],
         ...,
         [26.1334, 13.0817, 25.2807],
         [13.1414, 11.8369, 16.6506],
         [14.1613, 12.2295, 14.3346]],
        [[ 9.1964, 10.4802, 13.7234],
         [ 9.3117, 10.3624, 15.8246],
         [24.1923,  9.1955, 13.8348],
         ...,
         [25.5076,  9.4947, 14.8339],
         [ 9.2958, 10.3664, 15.8766],
         [ 9.0023, 10.5568, 14.0683]],
        [[ 8.7743, 10.2927, 13.6505],
         [ 8.9267, 10.1939, 15.7608],
         [24.0837,  8.9810, 13.1428],
         ...,
         [25.4311,  9.1254, 13.8865],
         [ 8.9058, 10.1975, 15.7833],
         [ 8.5113, 10.3663, 14.0357]],
        ...,
        [[ 8.2774, 10.0645, 13.5606],
         [ 8.4710,  9.9885, 15.6820],
         [23.9494,  8.7216, 12.3318],
         ...,
         [25.3366,  8.6869, 12.7944],
         [ 8.4444,  9.9918, 15.6683],
         [ 7.9390, 10.1347, 13.9953]],
        [[ 9.6040, 10.6564, 13.7910],
         [ 9.6819, 10.5204, 15.8837],
         [24.2931,  9.3982, 14.5060],
         ...,
         [25.5783,  9.8489, 15.7658],
         [ 9.6709, 10.5247, 15.9632],
         [ 9.4806, 10.7358, 14.0985]],
        [[10.5685, 11.0557, 13.9414],
         [10.5516, 10.8778, 16.0150],
         [24.5170,  9.8612, 16.1046],
         ...,
         [25.7351, 10.6779, 18.0346],
         [10.5533, 10.8828, 16.1560],
         [10.6281, 11.1415, 14.1653]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9701, 1.0134, 0.9647],
         [0.9655, 1.0070, 0.9976],
         [1.1240, 0.9920, 1.0723],
         ...,
         [1.1378, 1.0339, 1.1429],
         [0.9661, 1.0072, 1.0025],
         [0.9796, 1.0156, 0.9648]],
        [[0.9140, 0.9781, 0.9549],
         [0.9155, 0.9756, 0.9891],
         [1.1121, 0.9506, 0.9567],
         ...,
         [1.1295, 0.9570, 0.9730],
         [0.9153, 0.9757, 0.9899],
         [0.9114, 0.9797, 0.9605]],
        [[0.9084, 0.9741, 0.9537],
         [0.9104, 0.9720, 0.9880],
         [1.1107, 0.9460, 0.9455],
         ...,
         [1.1285, 0.9490, 0.9576],
         [0.9101, 0.9720, 0.9884],
         [0.9049, 0.9757, 0.9600]],
        ...,
        [[0.9018, 0.9692, 0.9523],
         [0.9044, 0.9676, 0.9868],
         [1.1089, 0.9404, 0.9323],
         ...,
         [1.1273, 0.9396, 0.9398],
         [0.9040, 0.9676, 0.9865],
         [0.8973, 0.9707, 0.9593]],
        [[0.9194, 0.9819, 0.9560],
         [0.9204, 0.9790, 0.9900],
         [1.1135, 0.9549, 0.9676],
         ...,
         [1.1305, 0.9646, 0.9881],
         [0.9202, 0.9791, 0.9913],
         [0.9177, 0.9836, 0.9610]],
        [[0.9321, 0.9904, 0.9585],
         [0.9319, 0.9866, 0.9922],
         [1.1164, 0.9648, 0.9936],
         ...,
         [1.1325, 0.9823, 1.0250],
         [0.9319, 0.9867, 0.9945],
         [0.9329, 0.9923, 0.9621]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0667, 12.1333, 16.0852],
         [13.0981, 11.9576, 15.8958],
         [25.4848, 11.0039, 22.1953],
         ...,
         [25.8395, 11.6009, 24.4187],
         [12.9580, 11.8073, 18.6660],
         [12.8856, 12.2949, 17.2186]],
        [[ 9.3231, 10.4843, 14.9165],
         [ 9.3113, 10.4100, 15.2945],
         [24.1901,  9.2221, 14.2124],
         ...,
         [24.7275,  9.2132, 14.7888],
         [ 9.3637, 10.3506, 17.0493],
         [ 9.4103, 10.6320, 15.1635]],
        [[ 8.9415, 10.2964, 14.7779],
         [ 8.9261, 10.2330, 15.2216],
         [24.0345,  9.0226, 13.4494],
         ...,
         [24.5932,  8.9541, 13.8986],
         [ 8.9946, 10.1833, 16.8592],
         [ 9.0512, 10.4425, 14.9268]],
        ...,
        [[ 8.4895, 10.0679, 14.6076],
         [ 8.4702, 10.0173, 15.1317],
         [23.8427,  8.7810, 12.5591],
         ...,
         [24.4275,  8.6426, 12.8679],
         [ 8.5566,  9.9794, 16.6261],
         [ 8.6245, 10.2119, 14.6381]],
        [[ 9.6898, 10.6608, 15.0457],
         [ 9.6816, 10.5762, 15.3620],
         [24.3347,  9.4101, 14.9553],
         ...,
         [24.8521,  9.4590, 15.6611],
         [ 9.7179, 10.5076, 17.2267],
         [ 9.7545, 10.8101, 15.3854]],
        [[10.5508, 11.0609, 15.3346],
         [10.5517, 10.9525, 15.5121],
         [24.6568,  9.8388, 16.7346],
         ...,
         [25.1293, 10.0250, 17.7725],
         [10.5476, 10.8623, 17.6249],
         [10.5591, 11.2136, 15.8865]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9788, 1.0204, 0.9969],
         [0.9793, 1.0166, 0.9938],
         [1.1429, 0.9962, 1.0963],
         ...,
         [1.1476, 1.0090, 1.1324],
         [0.9774, 1.0134, 1.0389],
         [0.9764, 1.0239, 1.0153]],
        [[0.9294, 0.9850, 0.9779],
         [0.9292, 0.9834, 0.9840],
         [1.1258, 0.9580, 0.9664],
         ...,
         [1.1329, 0.9578, 0.9758],
         [0.9299, 0.9822, 1.0126],
         [0.9305, 0.9882, 0.9819]],
        [[0.9243, 0.9810, 0.9756],
         [0.9241, 0.9796, 0.9828],
         [1.1238, 0.9537, 0.9540],
         ...,
         [1.1312, 0.9522, 0.9613],
         [0.9250, 0.9786, 1.0095],
         [0.9258, 0.9841, 0.9781]],
        ...,
        [[0.9183, 0.9761, 0.9729],
         [0.9181, 0.9750, 0.9814],
         [1.1212, 0.9485, 0.9395],
         ...,
         [1.1290, 0.9455, 0.9446],
         [0.9192, 0.9742, 1.0057],
         [0.9201, 0.9792, 0.9734]],
        [[0.9342, 0.9888, 0.9800],
         [0.9341, 0.9870, 0.9851],
         [1.1277, 0.9620, 0.9785],
         ...,
         [1.1346, 0.9630, 0.9900],
         [0.9346, 0.9855, 1.0155],
         [0.9351, 0.9920, 0.9855]],
        [[0.9456, 0.9974, 0.9847],
         [0.9456, 0.9951, 0.9876],
         [1.1320, 0.9712, 1.0075],
         ...,
         [1.1383, 0.9752, 1.0243],
         [0.9455, 0.9931, 1.0219],
         [0.9457, 1.0007, 0.9937]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8210, 12.1384, 18.0714],
         [13.0989, 12.0732, 15.5720],
         [25.8347, 10.9853, 22.9967],
         ...,
         [25.8986, 11.0760, 23.7553],
         [12.8329, 11.8152, 20.2387],
         [12.1950, 12.3396, 19.0992]],
        [[ 9.4191, 10.4873, 15.8972],
         [ 9.3110, 10.4536, 14.9430],
         [24.1835,  9.2644, 14.4849],
         ...,
         [24.1854,  9.1973, 14.7556],
         [ 9.4135, 10.3274, 18.0089],
         [ 9.7643, 10.6965, 16.2199]],
        [[ 9.0663, 10.2992, 15.6470],
         [ 8.9257, 10.2689, 14.8670],
         [23.9866,  9.0711, 13.6793],
         ...,
         [23.9814,  8.9881, 13.9110],
         [ 9.0593, 10.1567, 17.7505],
         [ 9.4993, 10.5090, 15.8951]],
        ...,
        [[ 8.6468, 10.0704, 15.3418],
         [ 8.4697, 10.0441, 14.7731],
         [23.7444,  8.8367, 12.7415],
         ...,
         [23.7305,  8.7350, 12.9295],
         [ 8.6381,  9.9488, 17.4350],
         [ 9.1803, 10.2808, 15.5010]],
        [[ 9.7569, 10.6640, 16.1318],
         [ 9.6814, 10.6271, 15.0136],
         [24.3668,  9.4466, 15.2707],
         ...,
         [24.3753,  9.3948, 15.5809],
         [ 9.7529, 10.4874, 18.2507],
         [10.0155, 10.8726, 16.5257]],
        [[10.5459, 11.0646, 16.6618],
         [10.5517, 11.0202, 15.1705],
         [24.7760,  9.8613, 17.1587],
         ...,
         [24.7997,  9.8456, 17.5690],
         [10.5456, 10.8495, 18.7960],
         [10.5931, 11.2716, 17.2209]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9756, 1.0019, 1.0310],
         [0.9793, 1.0005, 0.9903],
         [1.1476, 0.9771, 1.1111],
         ...,
         [1.1484, 0.9791, 1.1234],
         [0.9757, 0.9949, 1.0662],
         [0.9673, 1.0062, 1.0477]],
        [[0.9306, 0.9665, 0.9956],
         [0.9292, 0.9657, 0.9801],
         [1.1257, 0.9402, 0.9726],
         ...,
         [1.1258, 0.9388, 0.9770],
         [0.9305, 0.9630, 1.0299],
         [0.9352, 0.9709, 1.0008]],
        [[0.9260, 0.9624, 0.9915],
         [0.9241, 0.9618, 0.9788],
         [1.1231, 0.9361, 0.9595],
         ...,
         [1.1231, 0.9343, 0.9633],
         [0.9259, 0.9594, 1.0257],
         [0.9317, 0.9669, 0.9956]],
        ...,
        [[0.9204, 0.9575, 0.9866],
         [0.9181, 0.9569, 0.9773],
         [1.1199, 0.9311, 0.9443],
         ...,
         [1.1198, 0.9289, 0.9473],
         [0.9203, 0.9549, 1.0206],
         [0.9275, 0.9620, 0.9892]],
        [[0.9351, 0.9702, 0.9994],
         [0.9341, 0.9695, 0.9812],
         [1.1282, 0.9441, 0.9854],
         ...,
         [1.1283, 0.9430, 0.9905],
         [0.9350, 0.9665, 1.0339],
         [0.9385, 0.9747, 1.0058]],
        [[0.9455, 0.9788, 1.0080],
         [0.9456, 0.9779, 0.9838],
         [1.1336, 0.9530, 1.0161],
         ...,
         [1.1339, 0.9527, 1.0228],
         [0.9455, 0.9742, 1.0427],
         [0.9461, 0.9833, 1.0171]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7824, 12.1392, 18.3930],
         [13.0991, 12.0917, 15.5201],
         [25.8866, 10.9880, 23.1197],
         ...,
         [25.9070, 11.0593, 23.6434],
         [12.8129, 11.8187, 20.5045],
         [12.0977, 12.3470, 19.3726]],
        [[ 9.4353, 10.4878, 16.0786],
         [ 9.3109, 10.4622, 14.8874],
         [24.1831,  9.2731, 14.5295],
         ...,
         [24.1001,  9.2086, 14.7501],
         [ 9.4218, 10.3226, 18.1765],
         [ 9.8274, 10.7080, 16.4139]],
        [[ 9.0872, 10.2997, 15.8131],
         [ 8.9257, 10.2764, 14.8109],
         [23.9802,  9.0804, 13.7176],
         ...,
         [23.8854,  9.0022, 13.9133],
         [ 9.0700, 10.1511, 17.9074],
         [ 9.5777, 10.5208, 16.0805]],
        ...,
        [[ 8.6730, 10.0708, 15.4897],
         [ 8.4696, 10.0504, 14.7165],
         [23.7307,  8.8467, 12.7727],
         ...,
         [23.6215,  8.7524, 12.9403],
         [ 8.6515,  9.9421, 17.5788],
         [ 9.2767, 10.2931, 15.6762]],
        [[ 9.7684, 10.6645, 16.3276],
         [ 9.6813, 10.6367, 14.9584],
         [24.3720,  9.4547, 15.3216],
         ...,
         [24.3001,  9.4034, 15.5674],
         [ 9.7587, 10.4835, 18.4286],
         [10.0636, 10.8837, 16.7277]],
        [[10.5457, 11.0652, 16.8909],
         [10.5517, 11.0322, 15.1162],
         [24.7940,  9.8681, 17.2258],
         ...,
         [24.7472,  9.8478, 17.5345],
         [10.5454, 10.8475, 18.9973],
         [10.6052, 11.2817, 17.4417]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9986, 1.0364],
         [0.9793, 0.9975, 0.9897],
         [1.1482, 0.9739, 1.1133],
         ...,
         [1.1485, 0.9754, 1.1218],
         [0.9755, 0.9917, 1.0707],
         [0.9660, 1.0030, 1.0523]],
        [[0.9308, 0.9631, 0.9987],
         [0.9292, 0.9626, 0.9794],
         [1.1257, 0.9371, 0.9736],
         ...,
         [1.1246, 0.9357, 0.9771],
         [0.9307, 0.9596, 1.0329],
         [0.9360, 0.9679, 1.0042]],
        [[0.9262, 0.9591, 0.9944],
         [0.9241, 0.9586, 0.9781],
         [1.1231, 0.9330, 0.9603],
         ...,
         [1.1218, 0.9313, 0.9635],
         [0.9260, 0.9559, 1.0285],
         [0.9327, 0.9638, 0.9988]],
        ...,
        [[0.9208, 0.9542, 0.9892],
         [0.9181, 0.9538, 0.9766],
         [1.1198, 0.9279, 0.9450],
         ...,
         [1.1183, 0.9259, 0.9477],
         [0.9205, 0.9514, 1.0231],
         [0.9287, 0.9590, 0.9922]],
        [[0.9352, 0.9669, 1.0028],
         [0.9341, 0.9663, 0.9805],
         [1.1282, 0.9410, 0.9864],
         ...,
         [1.1273, 0.9399, 0.9904],
         [0.9351, 0.9630, 1.0370],
         [0.9391, 0.9716, 1.0093]],
        [[0.9455, 0.9755, 1.0120],
         [0.9456, 0.9748, 0.9831],
         [1.1338, 0.9499, 1.0174],
         ...,
         [1.1332, 0.9494, 1.0224],
         [0.9455, 0.9709, 1.0462],
         [0.9463, 0.9802, 1.0209]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7767, 12.1393, 18.4407],
         [13.0991, 12.0944, 15.5125],
         [25.8942, 10.9886, 23.1378],
         ...,
         [25.9082, 11.0586, 23.6266],
         [12.8099, 11.8193, 20.5443],
         [12.0836, 12.3481, 19.4124]],
        [[ 9.4377, 10.4879, 16.1061],
         [ 9.3109, 10.4635, 14.8792],
         [24.1831,  9.2745, 14.5361],
         ...,
         [24.0875,  9.2106, 14.7493],
         [ 9.4230, 10.3218, 18.2017],
         [ 9.8369, 10.7097, 16.4432]],
        [[ 9.0903, 10.2997, 15.8385],
         [ 8.9256, 10.2776, 14.8026],
         [23.9793,  9.0818, 13.7233],
         ...,
         [23.8712,  9.0045, 13.9137],
         [ 9.0716, 10.1502, 17.9310],
         [ 9.5896, 10.5226, 16.1088]],
        ...,
        [[ 8.6770, 10.0709, 15.5125],
         [ 8.4696, 10.0514, 14.7081],
         [23.7287,  8.8482, 12.7773],
         ...,
         [23.6054,  8.7550, 12.9420],
         [ 8.6535,  9.9411, 17.6005],
         [ 9.2912, 10.2950, 15.7031]],
        [[ 9.7701, 10.6646, 16.3572],
         [ 9.6813, 10.6382, 14.9502],
         [24.3728,  9.4560, 15.3292],
         ...,
         [24.2889,  9.4051, 15.5653],
         [ 9.7596, 10.4829, 18.4553],
         [10.0709, 10.8854, 16.7582]],
        [[10.5457, 11.0652, 16.9253],
         [10.5517, 11.0340, 15.1082],
         [24.7966,  9.8692, 17.2358],
         ...,
         [24.7394,  9.8490, 17.5293],
         [10.5454, 10.8472, 19.0275],
         [10.6071, 11.2833, 17.4746]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9981, 1.0372],
         [0.9793, 0.9971, 0.9896],
         [1.1483, 0.9734, 1.1136],
         ...,
         [1.1485, 0.9749, 1.1215],
         [0.9754, 0.9912, 1.0714],
         [0.9658, 1.0026, 1.0530]],
        [[0.9309, 0.9627, 0.9992],
         [0.9292, 0.9622, 0.9793],
         [1.1257, 0.9367, 0.9737],
         ...,
         [1.1245, 0.9353, 0.9772],
         [0.9307, 0.9591, 1.0333],
         [0.9361, 0.9674, 1.0047]],
        [[0.9263, 0.9587, 0.9949],
         [0.9241, 0.9582, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9309, 0.9636],
         [0.9260, 0.9554, 1.0289],
         [0.9329, 0.9634, 0.9993]],
        ...,
        [[0.9208, 0.9537, 0.9896],
         [0.9181, 0.9533, 0.9765],
         [1.1197, 0.9275, 0.9451],
         ...,
         [1.1181, 0.9255, 0.9478],
         [0.9205, 0.9510, 1.0235],
         [0.9289, 0.9586, 0.9927]],
        [[0.9353, 0.9665, 1.0033],
         [0.9341, 0.9659, 0.9804],
         [1.1282, 0.9406, 0.9866],
         ...,
         [1.1271, 0.9395, 0.9904],
         [0.9351, 0.9626, 1.0374],
         [0.9392, 0.9712, 1.0098]],
        [[0.9455, 0.9751, 1.0125],
         [0.9456, 0.9744, 0.9830],
         [1.1338, 0.9494, 1.0176],
         ...,
         [1.1331, 0.9490, 1.0224],
         [0.9455, 0.9704, 1.0467],
         [0.9463, 0.9797, 1.0215]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7757, 12.1393, 18.4489],
         [13.0991, 12.0948, 15.5111],
         [25.8955, 10.9887, 23.1409],
         ...,
         [25.9085, 11.0585, 23.6238],
         [12.8094, 11.8194, 20.5512],
         [12.0812, 12.3483, 19.4192]],
        [[ 9.4381, 10.4879, 16.1109],
         [ 9.3109, 10.4638, 14.8777],
         [24.1831,  9.2747, 14.5372],
         ...,
         [24.0853,  9.2110, 14.7492],
         [ 9.4233, 10.3217, 18.2061],
         [ 9.8385, 10.7100, 16.4483]],
        [[ 9.0909, 10.2997, 15.8429],
         [ 8.9256, 10.2778, 14.8011],
         [23.9791,  9.0820, 13.7243],
         ...,
         [23.8687,  9.0049, 13.9137],
         [ 9.0719, 10.1500, 17.9351],
         [ 9.5916, 10.5229, 16.1137]],
        ...,
        [[ 8.6776, 10.0709, 15.5164],
         [ 8.4696, 10.0516, 14.7066],
         [23.7284,  8.8485, 12.7781],
         ...,
         [23.6026,  8.7555, 12.9422],
         [ 8.6539,  9.9409, 17.6043],
         [ 9.2937, 10.2953, 15.7078]],
        [[ 9.7704, 10.6646, 16.3623],
         [ 9.6813, 10.6384, 14.9488],
         [24.3729,  9.4562, 15.3305],
         ...,
         [24.2870,  9.4054, 15.5650],
         [ 9.7598, 10.4828, 18.4599],
         [10.0721, 10.8857, 16.7634]],
        [[10.5457, 11.0653, 16.9312],
         [10.5517, 11.0343, 15.1068],
         [24.7971,  9.8694, 17.2375],
         ...,
         [24.7380,  9.8492, 17.5284],
         [10.5454, 10.8472, 19.0327],
         [10.6075, 11.2835, 17.4803]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0373],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9734, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9912, 1.0715],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9793],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9634, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9896],
         [0.9181, 0.9533, 0.9765],
         [1.1197, 0.9275, 0.9451],
         ...,
         [1.1181, 0.9255, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9392, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0468],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4504],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1415],
         ...,
         [25.9085, 11.0585, 23.6233],
         [12.8093, 11.8194, 20.5524],
         [12.0808, 12.3484, 19.4204]],
        [[ 9.4382, 10.4879, 16.1117],
         [ 9.3109, 10.4638, 14.8775],
         [24.1831,  9.2748, 14.5374],
         ...,
         [24.0849,  9.2110, 14.7492],
         [ 9.4233, 10.3217, 18.2069],
         [ 9.8388, 10.7101, 16.4492]],
        [[ 9.0910, 10.2997, 15.8436],
         [ 8.9256, 10.2778, 14.8009],
         [23.9791,  9.0821, 13.7244],
         ...,
         [23.8683,  9.0049, 13.9137],
         [ 9.0719, 10.1500, 17.9358],
         [ 9.5919, 10.5230, 16.1145]],
        ...,
        [[ 8.6777, 10.0709, 15.5171],
         [ 8.4696, 10.0516, 14.7064],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6021,  8.7555, 12.9423],
         [ 8.6540,  9.9409, 17.6049],
         [ 9.2941, 10.2953, 15.7086]],
        [[ 9.7705, 10.6646, 16.3632],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4562, 15.3307],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4608],
         [10.0724, 10.8857, 16.7643]],
        [[10.5457, 11.0653, 16.9322],
         [10.5517, 11.0343, 15.1066],
         [24.7971,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0336],
         [10.6075, 11.2836, 17.4813]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9912, 1.0715],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9634, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9255, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0468],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4506],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6232],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4206]],
        [[ 9.4382, 10.4879, 16.1118],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4493]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8009],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0049, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6050],
         [ 9.2942, 10.2954, 15.7087]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4814]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7755, 12.1393, 18.4507],
         [13.0991, 12.0949, 15.5109],
         [25.8957, 10.9887, 23.1416],
         ...,
         [25.9085, 11.0585, 23.6231],
         [12.8093, 11.8194, 20.5526],
         [12.0807, 12.3484, 19.4207]],
        [[ 9.4382, 10.4879, 16.1119],
         [ 9.3109, 10.4638, 14.8774],
         [24.1831,  9.2748, 14.5375],
         ...,
         [24.0848,  9.2110, 14.7491],
         [ 9.4233, 10.3217, 18.2070],
         [ 9.8389, 10.7101, 16.4494]],
        [[ 9.0910, 10.2997, 15.8438],
         [ 8.9256, 10.2778, 14.8008],
         [23.9791,  9.0821, 13.7245],
         ...,
         [23.8682,  9.0050, 13.9137],
         [ 9.0719, 10.1500, 17.9359],
         [ 9.5920, 10.5230, 16.1147]],
        ...,
        [[ 8.6778, 10.0709, 15.5172],
         [ 8.4696, 10.0516, 14.7063],
         [23.7283,  8.8485, 12.7783],
         ...,
         [23.6020,  8.7556, 12.9423],
         [ 8.6540,  9.9409, 17.6051],
         [ 9.2942, 10.2954, 15.7088]],
        [[ 9.7705, 10.6646, 16.3634],
         [ 9.6813, 10.6385, 14.9485],
         [24.3729,  9.4563, 15.3308],
         ...,
         [24.2866,  9.4055, 15.5649],
         [ 9.7598, 10.4828, 18.4609],
         [10.0724, 10.8857, 16.7645]],
        [[10.5457, 11.0653, 16.9324],
         [10.5517, 11.0343, 15.1065],
         [24.7972,  9.8694, 17.2378],
         ...,
         [24.7378,  9.8492, 17.5282],
         [10.5454, 10.8472, 19.0338],
         [10.6076, 11.2836, 17.4815]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9980, 1.0374],
         [0.9793, 0.9971, 0.9896],
         [1.1484, 0.9733, 1.1137],
         ...,
         [1.1485, 0.9748, 1.1215],
         [0.9754, 0.9911, 1.0716],
         [0.9658, 1.0025, 1.0531]],
        [[0.9309, 0.9626, 0.9993],
         [0.9292, 0.9621, 0.9792],
         [1.1257, 0.9366, 0.9737],
         ...,
         [1.1244, 0.9352, 0.9772],
         [0.9307, 0.9590, 1.0334],
         [0.9362, 0.9674, 1.0048]],
        [[0.9263, 0.9586, 0.9950],
         [0.9241, 0.9581, 0.9780],
         [1.1230, 0.9325, 0.9605],
         ...,
         [1.1216, 0.9308, 0.9636],
         [0.9260, 0.9554, 1.0290],
         [0.9329, 0.9633, 0.9994]],
        ...,
        [[0.9208, 0.9537, 0.9897],
         [0.9181, 0.9532, 0.9765],
         [1.1197, 0.9274, 0.9451],
         ...,
         [1.1181, 0.9254, 0.9478],
         [0.9205, 0.9509, 1.0236],
         [0.9290, 0.9585, 0.9928]],
        [[0.9353, 0.9664, 1.0034],
         [0.9341, 0.9658, 0.9804],
         [1.1282, 0.9405, 0.9866],
         ...,
         [1.1271, 0.9394, 0.9904],
         [0.9351, 0.9625, 1.0375],
         [0.9393, 0.9711, 1.0099]],
        [[0.9455, 0.9750, 1.0127],
         [0.9456, 0.9743, 0.9830],
         [1.1338, 0.9493, 1.0176],
         ...,
         [1.1331, 0.9489, 1.0224],
         [0.9455, 0.9703, 1.0469],
         [0.9463, 0.9797, 1.0216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7507, 12.1350, 18.3850],
         [13.0753, 12.0900, 15.4986],
         [25.8538, 10.9902, 23.1350],
         ...,
         [25.9058, 11.0474, 23.6075],
         [12.6341, 11.8067, 20.0820],
         [12.0102, 12.3272, 19.2701]],
        [[ 9.4480, 10.4853, 16.0763],
         [ 9.3196, 10.4614, 14.8725],
         [24.1060,  9.2688, 14.5461],
         ...,
         [24.0811,  9.2118, 14.7552],
         [ 9.4996, 10.3263, 17.8714],
         [ 9.8543, 10.6778, 16.3476]],
        [[ 9.1038, 10.2974, 15.8115],
         [ 8.9370, 10.2757, 14.7968],
         [23.8980,  9.0754, 13.7341],
         ...,
         [23.8643,  9.0069, 13.9212],
         [ 9.1701, 10.1565, 17.6153],
         [ 9.6159, 10.4896, 16.0181]],
        ...,
        [[ 8.6940, 10.0688, 15.4888],
         [ 8.4839, 10.0498, 14.7034],
         [23.6423,  8.8409, 12.7890],
         ...,
         [23.5980,  8.7590, 12.9514],
         [ 8.7770,  9.9495, 17.3025],
         [ 9.3280, 10.2607, 15.6184]],
        [[ 9.7773, 10.6619, 16.3248],
         [ 9.6873, 10.6358, 14.9428],
         [24.2996,  9.4510, 15.3384],
         ...,
         [24.2829,  9.4051, 15.5693],
         [ 9.8142, 10.4856, 18.1112],
         [10.0797, 10.8545, 16.6578]],
        [[10.5452, 11.0621, 16.8867],
         [10.5509, 11.0311, 15.0990],
         [24.7323,  9.8659, 17.2425],
         ...,
         [24.7344,  9.8462, 17.5285],
         [10.5460, 10.8460, 18.6518],
         [10.5954, 11.2549, 17.3633]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9749, 0.9983, 1.0365],
         [0.9792, 0.9973, 0.9896],
         [1.1481, 0.9737, 1.1138],
         ...,
         [1.1488, 0.9749, 1.1215],
         [0.9734, 0.9912, 1.0641],
         [0.9652, 1.0024, 1.0509]],
        [[0.9313, 0.9629, 0.9990],
         [0.9296, 0.9624, 0.9794],
         [1.1250, 0.9368, 0.9741],
         ...,
         [1.1247, 0.9356, 0.9775],
         [0.9320, 0.9595, 1.0282],
         [0.9367, 0.9670, 1.0034]],
        [[0.9267, 0.9589, 0.9947],
         [0.9245, 0.9584, 0.9782],
         [1.1223, 0.9327, 0.9609],
         ...,
         [1.1218, 0.9312, 0.9639],
         [0.9276, 0.9558, 1.0240],
         [0.9335, 0.9630, 0.9980]],
        ...,
        [[0.9213, 0.9540, 0.9894],
         [0.9186, 0.9536, 0.9766],
         [1.1189, 0.9276, 0.9455],
         ...,
         [1.1183, 0.9259, 0.9481],
         [0.9224, 0.9514, 1.0189],
         [0.9297, 0.9581, 0.9915]],
        [[0.9356, 0.9667, 1.0030],
         [0.9345, 0.9661, 0.9805],
         [1.1276, 0.9407, 0.9870],
         ...,
         [1.1273, 0.9397, 0.9907],
         [0.9361, 0.9629, 1.0321],
         [0.9396, 0.9708, 1.0084]],
        [[0.9458, 0.9753, 1.0121],
         [0.9459, 0.9746, 0.9831],
         [1.1333, 0.9496, 1.0179],
         ...,
         [1.1333, 0.9492, 1.0226],
         [0.9458, 0.9706, 1.0408],
         [0.9465, 0.9794, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8601, 12.1154, 17.7660],
         [13.0796, 12.0545, 15.4794],
         [25.3978, 11.0714, 23.0196],
         ...,
         [25.8053, 10.8983, 23.3215],
         [12.8309, 11.8589, 17.9415],
         [12.2609, 12.2521, 18.9295]],
        [[ 9.4024, 10.4743, 15.7907],
         [ 9.3180, 10.4455, 14.9201],
         [23.0577,  9.2085, 14.7450],
         ...,
         [23.9155,  9.2396, 14.8500],
         [ 9.4143, 10.3764, 16.4442],
         [ 9.6887, 10.5800, 16.2511]],
        [[ 9.0449, 10.2873, 15.5620],
         [ 8.9349, 10.2619, 14.8523],
         [22.7835,  9.0009, 13.9540],
         ...,
         [23.6914,  9.0527, 14.0430],
         [ 9.0603, 10.2062, 16.2678],
         [ 9.4104, 10.3895, 15.9471]],
        ...,
        [[ 8.6200, 10.0598, 15.2827],
         [ 8.4813, 10.0384, 14.7685],
         [22.4476,  8.7497, 13.0309],
         ...,
         [23.4162,  8.8259, 13.1021],
         [ 8.6394,  9.9989, 16.0515],
         [ 9.0760, 10.1579, 15.5776]],
        [[ 9.7450, 10.6500, 16.0048],
         [ 9.6862, 10.6179, 14.9830],
         [23.3139,  9.4045, 15.5151],
         ...,
         [24.1243,  9.4156, 15.6361],
         [ 9.7534, 10.5360, 16.6088],
         [ 9.9529, 10.7589, 16.5370]],
        [[10.5459, 11.0482, 16.4877],
         [10.5510, 11.0086, 15.1227],
         [23.8892,  9.8517, 17.3597],
         ...,
         [24.5914,  9.8159, 17.5213],
         [10.5456, 10.8968, 16.9779],
         [10.5618, 11.1645, 17.1856]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9763, 1.0081, 1.0305],
         [0.9792, 1.0068, 0.9933],
         [1.1420, 0.9857, 1.1160],
         ...,
         [1.1474, 0.9820, 1.1209],
         [0.9759, 1.0026, 1.0334],
         [0.9684, 1.0110, 1.0495]],
        [[0.9306, 0.9729, 0.9984],
         [0.9295, 0.9723, 0.9842],
         [1.1111, 0.9457, 0.9814],
         ...,
         [1.1224, 0.9464, 0.9831],
         [0.9308, 0.9708, 1.0090],
         [0.9344, 0.9751, 1.0059]],
        [[0.9259, 0.9689, 0.9947],
         [0.9245, 0.9683, 0.9831],
         [1.1075, 0.9413, 0.9685],
         ...,
         [1.1195, 0.9424, 0.9700],
         [0.9261, 0.9671, 1.0062],
         [0.9307, 0.9711, 1.0009]],
        ...,
        [[0.9203, 0.9640, 0.9901],
         [0.9185, 0.9635, 0.9818],
         [1.1030, 0.9359, 0.9535],
         ...,
         [1.1158, 0.9375, 0.9547],
         [0.9206, 0.9627, 1.0026],
         [0.9263, 0.9661, 0.9949]],
        [[0.9352, 0.9766, 1.0019],
         [0.9344, 0.9759, 0.9853],
         [1.1145, 0.9499, 0.9939],
         ...,
         [1.1252, 0.9502, 0.9959],
         [0.9353, 0.9742, 1.0117],
         [0.9379, 0.9790, 1.0105]],
        [[0.9458, 0.9852, 1.0097],
         [0.9458, 0.9843, 0.9875],
         [1.1221, 0.9595, 1.0239],
         ...,
         [1.1314, 0.9588, 1.0265],
         [0.9457, 0.9819, 1.0177],
         [0.9460, 0.9877, 1.0211]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7704, 12.1314, 18.2695],
         [13.0762, 12.0832, 15.4941],
         [25.7468, 10.9941, 23.1135],
         ...,
         [25.8873, 11.0141, 23.5530],
         [12.6588, 11.8024, 19.6425],
         [12.0433, 12.3126, 19.2008]],
        [[ 9.4397, 10.4832, 16.0204],
         [ 9.3192, 10.4582, 14.8813],
         [23.8946,  9.2526, 14.5823],
         ...,
         [24.0515,  9.2150, 14.7732],
         [ 9.4884, 10.3373, 17.5713],
         [ 9.8204, 10.6565, 16.3247]],
        [[ 9.0930, 10.2954, 15.7620],
         [ 8.9366, 10.2729, 14.8071],
         [23.6748,  9.0571, 13.7741],
         ...,
         [23.8334,  9.0137, 13.9443],
         [ 9.1558, 10.1691, 17.3306],
         [ 9.5754, 10.4677, 16.0001]],
        ...,
        [[ 8.6805, 10.0670, 15.4470],
         [ 8.4834, 10.0474, 14.7156],
         [23.4048,  8.8203, 12.8330],
         ...,
         [23.5656,  8.7701, 12.9799],
         [ 8.7591,  9.9641, 17.0365],
         [ 9.2799, 10.2379, 15.6061]],
        [[ 9.7714, 10.6596, 16.2628],
         [ 9.6871, 10.6322, 14.9501],
         [24.0994,  9.4367, 15.3705],
         ...,
         [24.2545,  9.4047, 15.5821],
         [ 9.8062, 10.4951, 17.7965],
         [10.0521, 10.8339, 16.6303]],
        [[10.5452, 11.0595, 16.8106],
         [10.5509, 11.0267, 15.1030],
         [24.5574,  9.8562, 17.2638],
         ...,
         [24.7086,  9.8374, 17.5272],
         [10.5457, 10.8518, 18.3037],
         [10.5829, 11.2359, 17.3250]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9752, 0.9996, 1.0355],
         [0.9792, 0.9986, 0.9903],
         [1.1467, 0.9753, 1.1143],
         ...,
         [1.1485, 0.9757, 1.1214],
         [0.9737, 0.9926, 1.0578],
         [0.9656, 1.0035, 1.0506]],
        [[0.9312, 0.9643, 0.9989],
         [0.9296, 0.9638, 0.9804],
         [1.1222, 0.9379, 0.9755],
         ...,
         [1.1243, 0.9371, 0.9786],
         [0.9318, 0.9612, 1.0241],
         [0.9362, 0.9680, 1.0039]],
        [[0.9266, 0.9603, 0.9947],
         [0.9245, 0.9598, 0.9792],
         [1.1193, 0.9337, 0.9624],
         ...,
         [1.1214, 0.9328, 0.9651],
         [0.9274, 0.9576, 1.0202],
         [0.9330, 0.9640, 0.9986]],
        ...,
        [[0.9211, 0.9554, 0.9896],
         [0.9185, 0.9550, 0.9777],
         [1.1157, 0.9286, 0.9471],
         ...,
         [1.1179, 0.9276, 0.9495],
         [0.9222, 0.9532, 1.0154],
         [0.9291, 0.9590, 0.9922]],
        [[0.9356, 0.9681, 1.0028],
         [0.9344, 0.9675, 0.9815],
         [1.1249, 0.9419, 0.9883],
         ...,
         [1.1270, 0.9412, 0.9918],
         [0.9360, 0.9646, 1.0278],
         [0.9393, 0.9718, 1.0088]],
        [[0.9458, 0.9767, 1.0118],
         [0.9459, 0.9760, 0.9840],
         [1.1310, 0.9509, 1.0191],
         ...,
         [1.1330, 0.9505, 1.0234],
         [0.9458, 0.9722, 1.0360],
         [0.9463, 0.9804, 1.0201]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7594, 12.1334, 18.3307],
         [13.0758, 12.0867, 15.4962],
         [25.7993, 10.9917, 23.1247],
         ...,
         [25.8977, 11.0310, 23.5816],
         [12.6381, 11.8033, 19.8628],
         [12.0177, 12.3199, 19.2322]],
        [[ 9.4443, 10.4844, 16.0499],
         [ 9.3194, 10.4598, 14.8765],
         [24.0009,  9.2606, 14.5628],
         ...,
         [24.0684,  9.2132, 14.7639],
         [ 9.4978, 10.3306, 17.7216],
         [ 9.8372, 10.6672, 16.3340]],
        [[ 9.0991, 10.2965, 15.7881],
         [ 8.9368, 10.2743, 14.8015],
         [23.7872,  9.0662, 13.7526],
         ...,
         [23.8511,  9.0101, 13.9324],
         [ 9.1678, 10.1616, 17.4731],
         [ 9.5964, 10.4786, 16.0071]],
        ...,
        [[ 8.6880, 10.0680, 15.4691],
         [ 8.4836, 10.0486, 14.7090],
         [23.5246,  8.8306, 12.8093],
         ...,
         [23.5841,  8.7642, 12.9652],
         [ 8.7741,  9.9556, 17.1696],
         [ 9.3056, 10.2493, 15.6104]],
        [[ 9.7747, 10.6609, 16.2955],
         [ 9.6872, 10.6341, 14.9460],
         [24.1999,  9.4438, 15.3531],
         ...,
         [24.2707,  9.4048, 15.5756],
         [ 9.8130, 10.4892, 17.9541],
         [10.0648, 10.8442, 16.6418]],
        [[10.5452, 11.0609, 16.8508],
         [10.5509, 11.0289, 15.1007],
         [24.6450,  9.8609, 17.2522],
         ...,
         [24.7233,  9.8417, 17.5280],
         [10.5460, 10.8477, 18.4781],
         [10.5861, 11.2454, 17.3416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9989, 1.0360],
         [0.9792, 0.9979, 0.9899],
         [1.1474, 0.9744, 1.1140],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9918, 1.0609],
         [0.9652, 1.0029, 1.0507]],
        [[0.9312, 0.9635, 0.9989],
         [0.9296, 0.9630, 0.9798],
         [1.1236, 0.9373, 0.9747],
         ...,
         [1.1245, 0.9363, 0.9780],
         [0.9319, 0.9602, 1.0261],
         [0.9364, 0.9674, 1.0035]],
        [[0.9267, 0.9595, 0.9947],
         [0.9245, 0.9590, 0.9786],
         [1.1208, 0.9331, 0.9616],
         ...,
         [1.1216, 0.9319, 0.9645],
         [0.9276, 0.9566, 1.0221],
         [0.9333, 0.9634, 0.9982]],
        ...,
        [[0.9212, 0.9546, 0.9895],
         [0.9185, 0.9542, 0.9771],
         [1.1173, 0.9281, 0.9462],
         ...,
         [1.1181, 0.9266, 0.9488],
         [0.9224, 0.9522, 1.0171],
         [0.9294, 0.9585, 0.9918]],
        [[0.9356, 0.9673, 1.0029],
         [0.9345, 0.9667, 0.9810],
         [1.1262, 0.9412, 0.9876],
         ...,
         [1.1272, 0.9404, 0.9912],
         [0.9361, 0.9636, 1.0299],
         [0.9394, 0.9712, 1.0086]],
        [[0.9458, 0.9759, 1.0120],
         [0.9459, 0.9752, 0.9835],
         [1.1321, 0.9502, 1.0185],
         ...,
         [1.1332, 0.9497, 1.0230],
         [0.9458, 0.9713, 1.0384],
         [0.9463, 0.9798, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7577, 12.1337, 18.3403],
         [13.0757, 12.0873, 15.4966],
         [25.8078, 10.9915, 23.1265],
         ...,
         [25.8994, 11.0338, 23.5861],
         [12.6348, 11.8036, 19.8976],
         [12.0136, 12.3211, 19.2371]],
        [[ 9.4451, 10.4845, 16.0546],
         [ 9.3194, 10.4601, 14.8757],
         [24.0177,  9.2619, 14.5597],
         ...,
         [24.0710,  9.2130, 14.7625],
         [ 9.4992, 10.3295, 17.7454],
         [ 9.8398, 10.6689, 16.3355]],
        [[ 9.1000, 10.2967, 15.7922],
         [ 8.9368, 10.2746, 14.8006],
         [23.8049,  9.0677, 13.7492],
         ...,
         [23.8539,  9.0096, 13.9306],
         [ 9.1697, 10.1604, 17.4958],
         [ 9.5997, 10.4804, 16.0082]],
        ...,
        [[ 8.6892, 10.0681, 15.4725],
         [ 8.4837, 10.0488, 14.7079],
         [23.5434,  8.8323, 12.8056],
         ...,
         [23.5871,  8.7633, 12.9629],
         [ 8.7765,  9.9542, 17.1907],
         [ 9.3097, 10.2511, 15.6110]],
        [[ 9.7752, 10.6611, 16.3007],
         [ 9.6872, 10.6344, 14.9454],
         [24.2158,  9.4449, 15.3504],
         ...,
         [24.2733,  9.4048, 15.5746],
         [ 9.8140, 10.4882, 17.9791],
         [10.0669, 10.8459, 16.6436]],
        [[10.5452, 11.0611, 16.8571],
         [10.5509, 11.0293, 15.1003],
         [24.6588,  9.8617, 17.2504],
         ...,
         [24.7256,  9.8425, 17.5282],
         [10.5460, 10.8471, 18.5057],
         [10.5866, 11.2469, 17.3442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9988, 1.0361],
         [0.9792, 0.9978, 0.9899],
         [1.1475, 0.9743, 1.1140],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0614],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9798],
         [1.1238, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0264],
         [0.9365, 0.9674, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1210, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9318, 0.9644],
         [0.9276, 0.9565, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9541, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1181, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0174],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9403, 0.9911],
         [0.9361, 0.9635, 1.0302],
         [0.9395, 0.9712, 1.0085]],
        [[0.9458, 0.9758, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0388],
         [0.9463, 0.9798, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7574, 12.1337, 18.3419],
         [13.0757, 12.0874, 15.4966],
         [25.8092, 10.9915, 23.1268],
         ...,
         [25.8996, 11.0342, 23.5869],
         [12.6343, 11.8037, 19.9034],
         [12.0130, 12.3213, 19.2379]],
        [[ 9.4452, 10.4846, 16.0554],
         [ 9.3194, 10.4601, 14.8756],
         [24.0204,  9.2621, 14.5592],
         ...,
         [24.0715,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7494],
         [ 9.8402, 10.6691, 16.3357]],
        [[ 9.1002, 10.2967, 15.7929],
         [ 8.9368, 10.2746, 14.8005],
         [23.8078,  9.0679, 13.7486],
         ...,
         [23.8543,  9.0095, 13.9303],
         [ 9.1700, 10.1601, 17.4995],
         [ 9.6002, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4731],
         [ 8.4837, 10.0489, 14.7077],
         [23.5465,  8.8325, 12.8050],
         ...,
         [23.5875,  8.7632, 12.9625],
         [ 8.7769,  9.9540, 17.1942],
         [ 9.3104, 10.2514, 15.6111]],
        [[ 9.7753, 10.6611, 16.3015],
         [ 9.6872, 10.6344, 14.9453],
         [24.2184,  9.4451, 15.3500],
         ...,
         [24.2737,  9.4048, 15.5744],
         [ 9.8142, 10.4881, 17.9833],
         [10.0672, 10.8461, 16.6439]],
        [[10.5452, 11.0612, 16.8582],
         [10.5509, 11.0294, 15.1002],
         [24.6611,  9.8618, 17.2501],
         ...,
         [24.7260,  9.8426, 17.5282],
         [10.5460, 10.8470, 18.5103],
         [10.5867, 11.2472, 17.3446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9318, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7574, 12.1337, 18.3421],
         [13.0757, 12.0874, 15.4967],
         [25.8094, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9043],
         [12.0129, 12.3213, 19.2380]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0209,  9.2622, 14.5591],
         ...,
         [24.0715,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7501],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7930],
         [ 8.9368, 10.2746, 14.8004],
         [23.8083,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1700, 10.1601, 17.5001],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5470,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1948],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2189,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9840],
         [10.0672, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6615,  9.8618, 17.2501],
         ...,
         [24.7260,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5111],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2380]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1949],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2189,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7260,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1949],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7260,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7260,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7573, 12.1337, 18.3422],
         [13.0757, 12.0874, 15.4967],
         [25.8095, 10.9915, 23.1268],
         ...,
         [25.8997, 11.0343, 23.5870],
         [12.6342, 11.8037, 19.9045],
         [12.0129, 12.3213, 19.2381]],
        [[ 9.4452, 10.4846, 16.0555],
         [ 9.3194, 10.4602, 14.8756],
         [24.0210,  9.2622, 14.5591],
         ...,
         [24.0716,  9.2129, 14.7622],
         [ 9.4995, 10.3293, 17.7502],
         [ 9.8403, 10.6692, 16.3358]],
        [[ 9.1002, 10.2967, 15.7931],
         [ 8.9368, 10.2746, 14.8004],
         [23.8084,  9.0680, 13.7485],
         ...,
         [23.8544,  9.0095, 13.9302],
         [ 9.1701, 10.1601, 17.5003],
         [ 9.6003, 10.4807, 16.0084]],
        ...,
        [[ 8.6894, 10.0681, 15.4732],
         [ 8.4837, 10.0489, 14.7077],
         [23.5471,  8.8326, 12.8049],
         ...,
         [23.5876,  8.7632, 12.9624],
         [ 8.7769,  9.9539, 17.1950],
         [ 9.3105, 10.2514, 15.6112]],
        [[ 9.7753, 10.6611, 16.3017],
         [ 9.6872, 10.6344, 14.9453],
         [24.2190,  9.4452, 15.3499],
         ...,
         [24.2738,  9.4048, 15.5744],
         [ 9.8142, 10.4880, 17.9841],
         [10.0673, 10.8462, 16.6439]],
        [[10.5452, 11.0612, 16.8584],
         [10.5509, 11.0294, 15.1002],
         [24.6616,  9.8618, 17.2500],
         ...,
         [24.7261,  9.8426, 17.5282],
         [10.5460, 10.8469, 18.5112],
         [10.5867, 11.2472, 17.3447]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9750, 0.9987, 1.0361],
         [0.9792, 0.9978, 0.9898],
         [1.1475, 0.9743, 1.1139],
         ...,
         [1.1487, 0.9752, 1.1214],
         [0.9734, 0.9917, 1.0615],
         [0.9652, 1.0028, 1.0507]],
        [[0.9313, 0.9634, 0.9989],
         [0.9296, 0.9629, 0.9797],
         [1.1239, 0.9372, 0.9746],
         ...,
         [1.1245, 0.9361, 0.9779],
         [0.9320, 0.9601, 1.0265],
         [0.9365, 0.9673, 1.0035]],
        [[0.9267, 0.9594, 0.9947],
         [0.9245, 0.9589, 0.9785],
         [1.1211, 0.9330, 0.9614],
         ...,
         [1.1217, 0.9317, 0.9644],
         [0.9276, 0.9564, 1.0224],
         [0.9333, 0.9633, 0.9982]],
        ...,
        [[0.9213, 0.9545, 0.9895],
         [0.9185, 0.9540, 0.9770],
         [1.1176, 0.9280, 0.9461],
         ...,
         [1.1182, 0.9265, 0.9486],
         [0.9224, 0.9520, 1.0175],
         [0.9295, 0.9584, 0.9917]],
        [[0.9356, 0.9672, 1.0029],
         [0.9345, 0.9666, 0.9809],
         [1.1265, 0.9411, 0.9875],
         ...,
         [1.1272, 0.9402, 0.9911],
         [0.9361, 0.9635, 1.0303],
         [0.9395, 0.9711, 1.0085]],
        [[0.9458, 0.9757, 1.0120],
         [0.9459, 0.9751, 0.9834],
         [1.1323, 0.9500, 1.0184],
         ...,
         [1.1332, 0.9496, 1.0229],
         [0.9458, 0.9712, 1.0389],
         [0.9463, 0.9797, 1.0199]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8019, 12.1310, 18.2304],
         [13.0902, 12.0822, 15.4998],
         [25.7375, 10.9896, 23.1061],
         ...,
         [25.8689, 11.0041, 23.5288],
         [12.8246, 11.8118, 19.6789],
         [12.1370, 12.3163, 19.2784]],
        [[ 9.4264, 10.4830, 16.0032],
         [ 9.3141, 10.4577, 14.8915],
         [23.8670,  9.2489, 14.6049],
         ...,
         [24.0189,  9.2160, 14.7773],
         [ 9.4169, 10.3369, 17.5974],
         [ 9.7614, 10.6618, 16.3813]],
        [[ 9.0759, 10.2952, 15.7471],
         [ 8.9299, 10.2725, 14.8178],
         [23.6452,  9.0536, 13.7986],
         ...,
         [23.7993,  9.0159, 13.9505],
         [ 9.0637, 10.1677, 17.3556],
         [ 9.5017, 10.4731, 16.0544]],
        ...,
        [[ 8.6590, 10.0668, 15.4350],
         [ 8.4749, 10.0471, 14.7270],
         [23.3726,  8.8169, 12.8595],
         ...,
         [23.5296,  8.7736, 12.9883],
         [ 8.6436,  9.9614, 17.0600],
         [ 9.1889, 10.2436, 15.6577]],
        [[ 9.7620, 10.6594, 16.2433],
         [ 9.6835, 10.6317, 14.9598],
         [24.0737,  9.4330, 15.3910],
         ...,
         [24.2235,  9.4047, 15.5841],
         [ 9.7553, 10.4957, 17.8237],
         [10.0074, 10.8391, 16.6890]],
        [[10.5453, 11.0592, 16.7859],
         [10.5514, 11.0260, 15.1116],
         [24.5362,  9.8523, 17.2787],
         ...,
         [24.6810,  9.8348, 17.5237],
         [10.5455, 10.8548, 18.3333],
         [10.5726, 11.2406, 17.3887]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9754, 1.0005, 1.0354],
         [0.9792, 0.9995, 0.9909],
         [1.1464, 0.9761, 1.1147],
         ...,
         [1.1481, 0.9764, 1.1215],
         [0.9757, 0.9937, 1.0589],
         [0.9666, 1.0045, 1.0524]],
        [[0.9308, 0.9652, 0.9991],
         [0.9293, 0.9647, 0.9810],
         [1.1217, 0.9387, 0.9764],
         ...,
         [1.1237, 0.9380, 0.9792],
         [0.9307, 0.9621, 1.0251],
         [0.9353, 0.9690, 1.0053]],
        [[0.9262, 0.9612, 0.9950],
         [0.9243, 0.9607, 0.9798],
         [1.1187, 0.9346, 0.9633],
         ...,
         [1.1208, 0.9337, 0.9657],
         [0.9260, 0.9584, 1.0211],
         [0.9318, 0.9650, 1.0000]],
        ...,
        [[0.9207, 0.9563, 0.9899],
         [0.9183, 0.9559, 0.9784],
         [1.1151, 0.9295, 0.9480],
         ...,
         [1.1172, 0.9285, 0.9501],
         [0.9205, 0.9540, 1.0163],
         [0.9277, 0.9601, 0.9935]],
        [[0.9353, 0.9690, 1.0030],
         [0.9342, 0.9684, 0.9822],
         [1.1244, 0.9427, 0.9892],
         ...,
         [1.1264, 0.9421, 0.9923],
         [0.9352, 0.9655, 1.0287],
         [0.9385, 0.9728, 1.0103]],
        [[0.9456, 0.9776, 1.0119],
         [0.9457, 0.9768, 0.9846],
         [1.1305, 0.9517, 1.0199],
         ...,
         [1.1324, 0.9513, 1.0239],
         [0.9456, 0.9732, 1.0370],
         [0.9460, 0.9814, 1.0217]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7766, 12.1331, 18.3061],
         [13.0835, 12.0859, 15.4989],
         [25.7816, 10.9905, 23.1192],
         ...,
         [25.8888, 11.0230, 23.5660],
         [12.7241, 11.8091, 19.8655],
         [12.0642, 12.3216, 19.2692]],
        [[ 9.4370, 10.4842, 16.0389],
         [ 9.3166, 10.4594, 14.8821],
         [23.9628,  9.2571, 14.5754],
         ...,
         [24.0531,  9.2140, 14.7678],
         [ 9.4595, 10.3309, 17.7256],
         [ 9.8069, 10.6696, 16.3642]],
        [[ 9.0897, 10.2964, 15.7785],
         [ 8.9331, 10.2740, 14.8074],
         [23.7468,  9.0625, 13.7664],
         ...,
         [23.8351,  9.0117, 13.9377],
         [ 9.1186, 10.1613, 17.4773],
         [ 9.5586, 10.4812, 16.0365]],
        ...,
        [[ 8.6762, 10.0679, 15.4612],
         [ 8.4790, 10.0483, 14.7153],
         [23.4813,  8.8266, 12.8243],
         ...,
         [23.5673,  8.7669, 12.9719],
         [ 8.7126,  9.9547, 17.1739],
         [ 9.2591, 10.2519, 15.6388]],
        [[ 9.7695, 10.6607, 16.2831],
         [ 9.6852, 10.6336, 14.9513],
         [24.1640,  9.4405, 15.3645],
         ...,
         [24.2562,  9.4047, 15.5780],
         [ 9.7855, 10.4900, 17.9580],
         [10.0418, 10.8466, 16.6727]],
        [[10.5452, 11.0608, 16.8352],
         [10.5511, 11.0284, 15.1052],
         [24.6139,  9.8581, 17.2602],
         ...,
         [24.7103,  9.8396, 17.5267],
         [10.5452, 10.8498, 18.4817],
         [10.5804, 11.2476, 17.3741]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9752, 0.9994, 1.0359],
         [0.9792, 0.9983, 0.9903],
         [1.1471, 0.9749, 1.1142],
         ...,
         [1.1485, 0.9755, 1.1215],
         [0.9745, 0.9924, 1.0613],
         [0.9658, 1.0034, 1.0516]],
        [[0.9310, 0.9640, 0.9990],
         [0.9295, 0.9635, 0.9802],
         [1.1230, 0.9377, 0.9752],
         ...,
         [1.1242, 0.9368, 0.9784],
         [0.9313, 0.9607, 1.0265],
         [0.9359, 0.9680, 1.0043]],
        [[0.9265, 0.9600, 0.9948],
         [0.9244, 0.9595, 0.9790],
         [1.1202, 0.9335, 0.9621],
         ...,
         [1.1213, 0.9324, 0.9649],
         [0.9268, 0.9571, 1.0224],
         [0.9327, 0.9639, 0.9990]],
        ...,
        [[0.9210, 0.9551, 0.9896],
         [0.9184, 0.9546, 0.9775],
         [1.1167, 0.9284, 0.9468],
         ...,
         [1.1178, 0.9272, 0.9492],
         [0.9215, 0.9526, 1.0175],
         [0.9287, 0.9590, 0.9925]],
        [[0.9354, 0.9678, 1.0030],
         [0.9343, 0.9672, 0.9813],
         [1.1257, 0.9416, 0.9881],
         ...,
         [1.1269, 0.9408, 0.9915],
         [0.9357, 0.9641, 1.0302],
         [0.9390, 0.9718, 1.0093]],
        [[0.9457, 0.9764, 1.0120],
         [0.9458, 0.9757, 0.9838],
         [1.1316, 0.9506, 1.0189],
         ...,
         [1.1329, 0.9502, 1.0232],
         [0.9457, 0.9718, 1.0388],
         [0.9462, 0.9804, 1.0208]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7724, 12.1335, 18.3184],
         [13.0824, 12.0865, 15.4988],
         [25.7889, 10.9908, 23.1214],
         ...,
         [25.8921, 11.0262, 23.5721],
         [12.7080, 11.8090, 19.8961],
         [12.0525, 12.3225, 19.2678]],
        [[ 9.4388, 10.4844, 16.0447],
         [ 9.3170, 10.4597, 14.8805],
         [23.9785,  9.2585, 14.5706],
         ...,
         [24.0587,  9.2137, 14.7662],
         [ 9.4666, 10.3298, 17.7468],
         [ 9.8144, 10.6709, 16.3614]],
        [[ 9.0919, 10.2965, 15.7837],
         [ 8.9336, 10.2742, 14.8057],
         [23.7634,  9.0640, 13.7611],
         ...,
         [23.8410,  9.0111, 13.9356],
         [ 9.1277, 10.1601, 17.4974],
         [ 9.5679, 10.4825, 16.0335]],
        ...,
        [[ 8.6791, 10.0680, 15.4655],
         [ 8.4796, 10.0485, 14.7134],
         [23.4991,  8.8282, 12.8186],
         ...,
         [23.5735,  8.7658, 12.9693],
         [ 8.7239,  9.9533, 17.1927],
         [ 9.2707, 10.2533, 15.6357]],
        [[ 9.7708, 10.6609, 16.2896],
         [ 9.6855, 10.6340, 14.9499],
         [24.1788,  9.4418, 15.3602],
         ...,
         [24.2615,  9.4047, 15.5770],
         [ 9.7906, 10.4890, 17.9801],
         [10.0475, 10.8478, 16.6700]],
        [[10.5452, 11.0610, 16.8432],
         [10.5511, 11.0288, 15.1042],
         [24.6267,  9.8592, 17.2572],
         ...,
         [24.7150,  9.8404, 17.5272],
         [10.5453, 10.8491, 18.5061],
         [10.5818, 11.2488, 17.3718]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9992, 1.0360],
         [0.9792, 0.9982, 0.9901],
         [1.1472, 0.9747, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9743, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9633, 0.9801],
         [1.1232, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9366, 0.9782],
         [0.9315, 0.9605, 1.0267],
         [0.9360, 0.9678, 1.0042]],
        [[0.9265, 0.9598, 0.9948],
         [0.9244, 0.9593, 0.9789],
         [1.1204, 0.9334, 0.9619],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9569, 1.0226],
         [0.9328, 0.9638, 0.9988]],
        ...,
        [[0.9210, 0.9549, 0.9896],
         [0.9184, 0.9545, 0.9774],
         [1.1169, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9270, 0.9490],
         [0.9216, 0.9524, 1.0177],
         [0.9289, 0.9589, 0.9924]],
        [[0.9355, 0.9676, 1.0030],
         [0.9343, 0.9670, 0.9812],
         [1.1259, 0.9415, 0.9879],
         ...,
         [1.1270, 0.9407, 0.9914],
         [0.9357, 0.9639, 1.0305],
         [0.9391, 0.9716, 1.0092]],
        [[0.9457, 0.9762, 1.0120],
         [0.9458, 0.9755, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7717, 12.1336, 18.3206],
         [13.0822, 12.0866, 15.4988],
         [25.7903, 10.9909, 23.1218],
         ...,
         [25.8927, 11.0267, 23.5732],
         [12.7050, 11.8090, 19.9017],
         [12.0504, 12.3227, 19.2675]],
        [[ 9.4391, 10.4845, 16.0458],
         [ 9.3170, 10.4598, 14.8802],
         [23.9814,  9.2588, 14.5697],
         ...,
         [24.0597,  9.2136, 14.7660],
         [ 9.4678, 10.3296, 17.7506],
         [ 9.8157, 10.6711, 16.3609]],
        [[ 9.0923, 10.2966, 15.7846],
         [ 8.9337, 10.2743, 14.8054],
         [23.7664,  9.0643, 13.7602],
         ...,
         [23.8421,  9.0110, 13.9352],
         [ 9.1294, 10.1599, 17.5010],
         [ 9.5696, 10.4827, 16.0330]],
        ...,
        [[ 8.6796, 10.0681, 15.4663],
         [ 8.4798, 10.0486, 14.7131],
         [23.5024,  8.8285, 12.8176],
         ...,
         [23.5746,  8.7657, 12.9688],
         [ 8.7260,  9.9531, 17.1961],
         [ 9.2728, 10.2535, 15.6352]],
        [[ 9.7710, 10.6610, 16.2908],
         [ 9.6855, 10.6340, 14.9497],
         [24.1815,  9.4420, 15.3594],
         ...,
         [24.2625,  9.4047, 15.5769],
         [ 9.7915, 10.4888, 17.9842],
         [10.0486, 10.8481, 16.6695]],
        [[10.5452, 11.0611, 16.8447],
         [10.5511, 11.0288, 15.1040],
         [24.6291,  9.8594, 17.2566],
         ...,
         [24.7159,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5105],
         [10.5820, 11.2490, 17.3713]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9743, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9605, 1.0267],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1169, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9343, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9879],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9357, 0.9639, 1.0305],
         [0.9391, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9755, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7716, 12.1336, 18.3210],
         [13.0821, 12.0866, 15.4988],
         [25.7905, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7045, 11.8089, 19.9027],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9819,  9.2588, 14.5696],
         ...,
         [24.0599,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7513],
         [ 9.8160, 10.6712, 16.3608]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8054],
         [23.7670,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0110, 13.9351],
         [ 9.1297, 10.1598, 17.5017],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5030,  8.8286, 12.8174],
         ...,
         [23.5748,  8.7656, 12.9687],
         [ 8.7264,  9.9530, 17.1967],
         [ 9.2731, 10.2535, 15.6351]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1820,  9.4421, 15.3593],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9849],
         [10.0487, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8449],
         [10.5511, 11.0289, 15.1040],
         [24.6295,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5113],
         [10.5821, 11.2490, 17.3713]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9605, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9029],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7514],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9850],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
  warnings.warn(first_warn_msg, RuntimeWarning)
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7765, 12.1324, 18.2899],
         [13.0814, 12.0849, 15.4976],
         [25.7766, 10.9899, 23.1175],
         ...,
         [25.8855, 11.0204, 23.5605],
         [12.7118, 11.8142, 19.7864],
         [12.0661, 12.3183, 19.2504]],
        [[ 9.4371, 10.4838, 16.0307],
         [ 9.3173, 10.4590, 14.8825],
         [23.9515,  9.2560, 14.5799],
         ...,
         [24.0473,  9.2142, 14.7690],
         [ 9.4649, 10.3306, 17.6694],
         [ 9.8057, 10.6647, 16.3523]],
        [[ 9.0897, 10.2959, 15.7712],
         [ 8.9341, 10.2736, 14.8081],
         [23.7348,  9.0613, 13.7713],
         ...,
         [23.8291,  9.0123, 13.9394],
         [ 9.1256, 10.1605, 17.4236],
         [ 9.5571, 10.4761, 16.0253]],
        ...,
        [[ 8.6763, 10.0675, 15.4550],
         [ 8.4802, 10.0480, 14.7163],
         [23.4685,  8.8254, 12.8297],
         ...,
         [23.5609,  8.7678, 12.9741],
         [ 8.7213,  9.9531, 17.1233],
         [ 9.2573, 10.2467, 15.6286]],
        [[ 9.7695, 10.6602, 16.2741],
         [ 9.6857, 10.6331, 14.9516],
         [24.1534,  9.4394, 15.3686],
         ...,
         [24.2506,  9.4047, 15.5787],
         [ 9.7894, 10.4903, 17.8994],
         [10.0409, 10.8419, 16.6601]],
        [[10.5452, 11.0602, 16.8243],
         [10.5511, 11.0278, 15.1051],
         [24.6048,  9.8572, 17.2631],
         ...,
         [24.7053,  9.8389, 17.5261],
         [10.5453, 10.8514, 18.4176],
         [10.5802, 11.2432, 17.3599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9752, 0.9995, 1.0357],
         [0.9792, 0.9985, 0.9903],
         [1.1470, 0.9750, 1.1143],
         ...,
         [1.1485, 0.9757, 1.1215],
         [0.9744, 0.9927, 1.0601],
         [0.9658, 1.0035, 1.0514]],
        [[0.9311, 0.9642, 0.9990],
         [0.9295, 0.9636, 0.9803],
         [1.1229, 0.9378, 0.9754],
         ...,
         [1.1242, 0.9369, 0.9785],
         [0.9314, 0.9609, 1.0257],
         [0.9359, 0.9680, 1.0042]],
        [[0.9265, 0.9601, 0.9948],
         [0.9244, 0.9597, 0.9791],
         [1.1200, 0.9337, 0.9623],
         ...,
         [1.1213, 0.9326, 0.9650],
         [0.9270, 0.9572, 1.0217],
         [0.9327, 0.9640, 0.9989]],
        ...,
        [[0.9210, 0.9552, 0.9896],
         [0.9184, 0.9548, 0.9776],
         [1.1165, 0.9286, 0.9469],
         ...,
         [1.1177, 0.9274, 0.9493],
         [0.9216, 0.9528, 1.0168],
         [0.9287, 0.9591, 0.9925]],
        [[0.9355, 0.9680, 1.0030],
         [0.9344, 0.9674, 0.9815],
         [1.1256, 0.9418, 0.9882],
         ...,
         [1.1268, 0.9410, 0.9917],
         [0.9357, 0.9643, 1.0294],
         [0.9391, 0.9718, 1.0092]],
        [[0.9457, 0.9765, 1.0119],
         [0.9458, 0.9758, 0.9839],
         [1.1315, 0.9507, 1.0190],
         ...,
         [1.1329, 0.9503, 1.0233],
         [0.9457, 0.9720, 1.0378],
         [0.9462, 0.9805, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7725, 12.1333, 18.3151],
         [13.0820, 12.0863, 15.4986],
         [25.7879, 10.9907, 23.1210],
         ...,
         [25.8914, 11.0256, 23.5709],
         [12.7058, 11.8098, 19.8803],
         [12.0531, 12.3218, 19.2642]],
        [[ 9.4388, 10.4843, 16.0431],
         [ 9.3171, 10.4596, 14.8806],
         [23.9761,  9.2583, 14.5716],
         ...,
         [24.0575,  9.2137, 14.7665],
         [ 9.4675, 10.3298, 17.7355],
         [ 9.8140, 10.6699, 16.3591]],
        [[ 9.0919, 10.2965, 15.7822],
         [ 8.9338, 10.2741, 14.8059],
         [23.7608,  9.0637, 13.7622],
         ...,
         [23.8397,  9.0112, 13.9359],
         [ 9.1289, 10.1600, 17.4866],
         [ 9.5675, 10.4815, 16.0314]],
        ...,
        [[ 8.6790, 10.0679, 15.4642],
         [ 8.4799, 10.0485, 14.7136],
         [23.4964,  8.8280, 12.8198],
         ...,
         [23.5722,  8.7660, 12.9697],
         [ 8.7255,  9.9531, 17.1825],
         [ 9.2701, 10.2522, 15.6338]],
        [[ 9.7707, 10.6608, 16.2877],
         [ 9.6856, 10.6339, 14.9500],
         [24.1765,  9.4416, 15.3610],
         ...,
         [24.2604,  9.4047, 15.5772],
         [ 9.7912, 10.4891, 17.9684],
         [10.0473, 10.8469, 16.6676]],
        [[10.5452, 11.0609, 16.8410],
         [10.5511, 11.0286, 15.1042],
         [24.6248,  9.8590, 17.2578],
         ...,
         [24.7140,  9.8403, 17.5271],
         [10.5453, 10.8493, 18.4932],
         [10.5817, 11.2479, 17.3690]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9992, 1.0360],
         [0.9792, 0.9982, 0.9902],
         [1.1472, 0.9747, 1.1141],
         ...,
         [1.1485, 0.9755, 1.1215],
         [0.9743, 0.9923, 1.0614],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9633, 0.9801],
         [1.1232, 0.9376, 0.9751],
         ...,
         [1.1243, 0.9366, 0.9783],
         [0.9315, 0.9605, 1.0265],
         [0.9361, 0.9678, 1.0042]],
        [[0.9265, 0.9598, 0.9948],
         [0.9244, 0.9593, 0.9789],
         [1.1204, 0.9334, 0.9619],
         ...,
         [1.1214, 0.9323, 0.9647],
         [0.9270, 0.9569, 1.0225],
         [0.9328, 0.9638, 0.9988]],
        ...,
        [[0.9211, 0.9549, 0.9896],
         [0.9184, 0.9545, 0.9774],
         [1.1169, 0.9283, 0.9466],
         ...,
         [1.1179, 0.9270, 0.9490],
         [0.9217, 0.9525, 1.0175],
         [0.9289, 0.9589, 0.9924]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9671, 0.9812],
         [1.1259, 0.9415, 0.9879],
         ...,
         [1.1270, 0.9407, 0.9914],
         [0.9357, 0.9639, 1.0303],
         [0.9391, 0.9716, 1.0092]],
        [[0.9457, 0.9762, 1.0120],
         [0.9458, 0.9755, 0.9837],
         [1.1318, 0.9504, 1.0188],
         ...,
         [1.1330, 0.9500, 1.0232],
         [0.9457, 0.9717, 1.0389],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7717, 12.1335, 18.3199],
         [13.0821, 12.0865, 15.4987],
         [25.7901, 10.9909, 23.1217],
         ...,
         [25.8925, 11.0266, 23.5729],
         [12.7047, 11.8091, 19.8985],
         [12.0506, 12.3225, 19.2668]],
        [[ 9.4391, 10.4845, 16.0454],
         [ 9.3171, 10.4598, 14.8803],
         [23.9808,  9.2587, 14.5699],
         ...,
         [24.0595,  9.2136, 14.7660],
         [ 9.4680, 10.3296, 17.7483],
         [ 9.8156, 10.6709, 16.3604]],
        [[ 9.0923, 10.2966, 15.7843],
         [ 8.9337, 10.2742, 14.8054],
         [23.7659,  9.0642, 13.7604],
         ...,
         [23.8418,  9.0110, 13.9353],
         [ 9.1296, 10.1599, 17.4988],
         [ 9.5695, 10.4825, 16.0326]],
        ...,
        [[ 8.6796, 10.0680, 15.4660],
         [ 8.4798, 10.0486, 14.7131],
         [23.5018,  8.8285, 12.8178],
         ...,
         [23.5743,  8.7657, 12.9689],
         [ 8.7263,  9.9531, 17.1940],
         [ 9.2726, 10.2533, 15.6348]],
        [[ 9.7710, 10.6610, 16.2904],
         [ 9.6856, 10.6340, 14.9497],
         [24.1810,  9.4420, 15.3596],
         ...,
         [24.2622,  9.4047, 15.5769],
         [ 9.7916, 10.4889, 17.9818],
         [10.0485, 10.8479, 16.6690]],
        [[10.5452, 11.0610, 16.8442],
         [10.5511, 11.0288, 15.1040],
         [24.6286,  9.8593, 17.2568],
         ...,
         [24.7157,  9.8406, 17.5272],
         [10.5453, 10.8490, 18.5079],
         [10.5820, 11.2488, 17.3708]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9743, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9633, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9605, 1.0267],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9598, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9619],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9549, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1169, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9879],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0305],
         [0.9391, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9755, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7716, 12.1336, 18.3209],
         [13.0821, 12.0866, 15.4988],
         [25.7905, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0268, 23.5733],
         [12.7044, 11.8090, 19.9021],
         [12.0501, 12.3227, 19.2673]],
        [[ 9.4392, 10.4845, 16.0459],
         [ 9.3171, 10.4598, 14.8802],
         [23.9818,  9.2588, 14.5696],
         ...,
         [24.0599,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7508],
         [ 9.8160, 10.6711, 16.3607]],
        [[ 9.0924, 10.2966, 15.7847],
         [ 8.9337, 10.2743, 14.8054],
         [23.7669,  9.0643, 13.7600],
         ...,
         [23.8422,  9.0110, 13.9352],
         [ 9.1297, 10.1598, 17.5012],
         [ 9.5699, 10.4827, 16.0328]],
        ...,
        [[ 8.6797, 10.0681, 15.4664],
         [ 8.4798, 10.0486, 14.7130],
         [23.5028,  8.8286, 12.8175],
         ...,
         [23.5748,  8.7656, 12.9687],
         [ 8.7264,  9.9530, 17.1963],
         [ 9.2731, 10.2535, 15.6350]],
        [[ 9.7710, 10.6610, 16.2909],
         [ 9.6856, 10.6340, 14.9496],
         [24.1819,  9.4421, 15.3593],
         ...,
         [24.2626,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9844],
         [10.0487, 10.8481, 16.6693]],
        [[10.5452, 11.0611, 16.8448],
         [10.5511, 11.0289, 15.1040],
         [24.6294,  9.8594, 17.2566],
         ...,
         [24.7160,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5108],
         [10.5821, 11.2490, 17.3711]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9605, 1.0267],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0305],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8090, 19.9028],
         [12.0500, 12.3227, 19.2674]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7513],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0110, 13.9351],
         [ 9.1297, 10.1598, 17.5017],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5030,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1968],
         [ 9.2732, 10.2535, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9849],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5114],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8090, 19.9029],
         [12.0500, 12.3227, 19.2674]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7514],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9850],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7715, 12.1336, 18.3211],
         [13.0821, 12.0866, 15.4988],
         [25.7906, 10.9909, 23.1218],
         ...,
         [25.8928, 11.0269, 23.5734],
         [12.7044, 11.8089, 19.9030],
         [12.0500, 12.3227, 19.2675]],
        [[ 9.4392, 10.4845, 16.0460],
         [ 9.3171, 10.4598, 14.8802],
         [23.9820,  9.2588, 14.5696],
         ...,
         [24.0600,  9.2136, 14.7659],
         [ 9.4681, 10.3296, 17.7515],
         [ 9.8160, 10.6712, 16.3607]],
        [[ 9.0924, 10.2966, 15.7848],
         [ 8.9337, 10.2743, 14.8053],
         [23.7671,  9.0643, 13.7600],
         ...,
         [23.8423,  9.0109, 13.9351],
         [ 9.1297, 10.1598, 17.5018],
         [ 9.5700, 10.4828, 16.0329]],
        ...,
        [[ 8.6797, 10.0681, 15.4665],
         [ 8.4798, 10.0486, 14.7130],
         [23.5031,  8.8286, 12.8174],
         ...,
         [23.5749,  8.7656, 12.9687],
         [ 8.7265,  9.9530, 17.1969],
         [ 9.2732, 10.2536, 15.6350]],
        [[ 9.7710, 10.6610, 16.2910],
         [ 9.6856, 10.6340, 14.9496],
         [24.1821,  9.4421, 15.3592],
         ...,
         [24.2627,  9.4047, 15.5768],
         [ 9.7917, 10.4888, 17.9851],
         [10.0488, 10.8481, 16.6694]],
        [[10.5452, 11.0611, 16.8450],
         [10.5511, 11.0289, 15.1040],
         [24.6296,  9.8594, 17.2565],
         ...,
         [24.7161,  9.8406, 17.5273],
         [10.5453, 10.8489, 18.5115],
         [10.5821, 11.2490, 17.3712]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9751, 0.9991, 1.0360],
         [0.9792, 0.9981, 0.9901],
         [1.1472, 0.9746, 1.1141],
         ...,
         [1.1485, 0.9754, 1.1214],
         [0.9742, 0.9922, 1.0617],
         [0.9656, 1.0032, 1.0514]],
        [[0.9311, 0.9638, 0.9990],
         [0.9295, 0.9632, 0.9801],
         [1.1233, 0.9375, 0.9750],
         ...,
         [1.1243, 0.9365, 0.9782],
         [0.9315, 0.9604, 1.0268],
         [0.9361, 0.9678, 1.0041]],
        [[0.9265, 0.9597, 0.9948],
         [0.9244, 0.9593, 0.9788],
         [1.1204, 0.9333, 0.9618],
         ...,
         [1.1214, 0.9322, 0.9647],
         [0.9270, 0.9568, 1.0227],
         [0.9328, 0.9637, 0.9988]],
        ...,
        [[0.9211, 0.9548, 0.9896],
         [0.9184, 0.9544, 0.9773],
         [1.1170, 0.9283, 0.9465],
         ...,
         [1.1179, 0.9269, 0.9490],
         [0.9217, 0.9524, 1.0177],
         [0.9289, 0.9588, 0.9923]],
        [[0.9355, 0.9676, 1.0030],
         [0.9344, 0.9670, 0.9812],
         [1.1259, 0.9414, 0.9878],
         ...,
         [1.1270, 0.9406, 0.9914],
         [0.9358, 0.9639, 1.0306],
         [0.9392, 0.9716, 1.0092]],
        [[0.9457, 0.9761, 1.0120],
         [0.9458, 0.9754, 0.9837],
         [1.1318, 0.9504, 1.0187],
         ...,
         [1.1330, 0.9500, 1.0231],
         [0.9457, 0.9716, 1.0391],
         [0.9462, 0.9802, 1.0206]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.3024, 38.7248, 18.5244],
         [15.1455, 18.2966, 32.4904],
         [11.9087, 24.8547, 29.0762],
         ...,
         [37.8958, 25.7216, 27.7438],
         [24.7816, 94.3153, 16.1493],
         [21.3240, 15.0976, 15.9771]],
        [[ 9.6150, 11.1353, 13.2637],
         [ 8.8419, 13.6920, 19.6363],
         [10.1058, 12.9808, 25.8806],
         ...,
         [28.8030, 14.4714, 18.5167],
         [16.6756, 24.8556, 14.9083],
         [14.2201, 13.2081, 15.0333]],
        [[ 9.2363,  9.5432, 12.7264],
         [ 8.2720, 13.2094, 18.4497],
         [ 9.9025, 11.9779, 25.5102],
         ...,
         [27.8411, 13.4769, 17.6127],
         [15.8776, 21.0732, 14.7614],
         [13.5244, 12.9913, 14.9204]],
        ...,
        [[ 8.7869,  7.8800, 12.0897],
         [ 7.6155, 12.6339, 17.0760],
         [ 9.6559, 10.8402, 25.0580],
         ...,
         [26.6919, 12.3370, 16.5518],
         [14.9400, 17.1690, 14.5812],
         [12.7082, 12.7272, 14.7815]],
        [[ 9.9784, 12.8399, 13.7799],
         [ 9.4028, 14.1533, 20.7996],
         [10.2972, 13.9811, 26.2272],
         ...,
         [29.7204, 15.4546, 19.3924],
         [17.4480, 28.9477, 15.0451],
         [14.8940, 13.4115, 15.1383]],
        [[10.8297, 17.5821, 14.9911],
         [10.7698, 15.2268, 23.6161],
         [10.7324, 16.4698, 27.0087],
         ...,
         [31.8496, 17.8670, 21.4742],
         [19.2812, 40.5203, 15.3516],
         [16.4964, 13.8714, 15.3725]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9642, 1.5139, 1.0066],
         [0.9886, 1.0758, 1.2338],
         [0.9458, 1.2165, 1.1782],
         ...,
         [1.2892, 1.2350, 1.1566],
         [1.1159, 2.7059, 0.9680],
         [1.0702, 1.0072, 0.9652]],
        [[0.9155, 0.9223, 0.9211],
         [0.9053, 0.9771, 1.0247],
         [0.9220, 0.9618, 1.1263],
         ...,
         [1.1690, 0.9938, 1.0065],
         [1.0088, 1.2165, 0.9478],
         [0.9763, 0.9667, 0.9498]],
        [[0.9105, 0.8881, 0.9123],
         [0.8977, 0.9667, 1.0054],
         [0.9193, 0.9403, 1.1202],
         ...,
         [1.1563, 0.9725, 0.9918],
         [0.9982, 1.1354, 0.9454],
         [0.9671, 0.9621, 0.9480]],
        ...,
        [[0.9045, 0.8525, 0.9020],
         [0.8890, 0.9544, 0.9831],
         [0.9160, 0.9159, 1.1129],
         ...,
         [1.1412, 0.9480, 0.9745],
         [0.9858, 1.0516, 0.9425],
         [0.9563, 0.9564, 0.9457]],
        [[0.9203, 0.9588, 0.9294],
         [0.9127, 0.9870, 1.0436],
         [0.9245, 0.9833, 1.1319],
         ...,
         [1.1812, 1.0149, 1.0207],
         [1.0190, 1.3042, 0.9500],
         [0.9852, 0.9711, 0.9515]],
        [[0.9315, 1.0605, 0.9491],
         [0.9307, 1.0100, 1.0894],
         [0.9302, 1.0366, 1.1446],
         ...,
         [1.2093, 1.0666, 1.0546],
         [1.0432, 1.5524, 0.9550],
         [1.0064, 0.9809, 0.9554]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.2632, 37.7970, 18.4848],
         [14.8028, 17.1686, 32.8941],
         [11.7815, 21.1246, 28.0507],
         ...,
         [36.8445, 25.2704, 27.4544],
         [24.2277, 93.2270, 16.1252],
         [18.9550, 14.2780, 15.5396]],
        [[ 9.6061, 11.1058, 13.2394],
         [ 8.9027, 13.1735, 19.6821],
         [10.0953, 12.4666, 24.6418],
         ...,
         [27.6506, 14.3394, 18.1652],
         [16.2853, 24.4202, 14.7638],
         [13.4031, 11.8672, 14.8016]],
        [[ 9.2300,  9.5434, 12.7036],
         [ 8.3596, 12.7486, 18.4697],
         [ 9.9041, 11.6788, 24.2497],
         ...,
         [26.6853, 13.3681, 17.2598],
         [15.5038, 20.6886, 14.6034],
         [12.8402, 11.5986, 14.7127]],
        ...,
        [[ 8.7837,  7.9064, 12.0686],
         [ 7.7313, 12.2402, 17.0683],
         [ 9.6718, 10.7697, 23.7717],
         ...,
         [25.5339, 12.2535, 16.1985],
         [14.5858, 16.8399, 14.4069],
         [12.1744, 11.2736, 14.6031]],
        [[ 9.9668, 12.7744, 13.7542],
         [ 9.4353, 13.5784, 20.8719],
         [10.2751, 13.2411, 25.0094],
         ...,
         [28.5728, 15.2988, 19.0432],
         [17.0416, 28.4604, 14.9133],
         [13.9446, 12.1207, 14.8841]],
        [[10.8116, 17.3973, 14.9620],
         [10.7262, 14.5164, 23.7582],
         [10.6832, 15.1247, 25.8401],
         ...,
         [30.7180, 17.6488, 21.1337],
         [18.8373, 39.8992, 15.2488],
         [15.2183, 12.6994, 15.0679]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9661, 1.4953, 1.0064],
         [0.9864, 1.0529, 1.2408],
         [0.9465, 1.1378, 1.1620],
         ...,
         [1.2777, 1.2267, 1.1523],
         [1.1110, 2.6839, 0.9680],
         [1.0413, 0.9910, 0.9585]],
        [[0.9177, 0.9229, 0.9211],
         [0.9084, 0.9673, 1.0259],
         [0.9242, 0.9521, 1.1065],
         ...,
         [1.1562, 0.9923, 1.0012],
         [1.0060, 1.2084, 0.9459],
         [0.9679, 0.9393, 0.9465]],
        [[0.9128, 0.8894, 0.9124],
         [0.9012, 0.9582, 1.0062],
         [0.9217, 0.9352, 1.1002],
         ...,
         [1.1434, 0.9714, 0.9865],
         [0.9957, 1.1284, 0.9433],
         [0.9605, 0.9335, 0.9451]],
        ...,
        [[0.9069, 0.8543, 0.9020],
         [0.8929, 0.9473, 0.9834],
         [0.9186, 0.9157, 1.0924],
         ...,
         [1.1282, 0.9475, 0.9692],
         [0.9835, 1.0459, 0.9401],
         [0.9517, 0.9265, 0.9433]],
        [[0.9225, 0.9587, 0.9295],
         [0.9155, 0.9759, 1.0452],
         [0.9266, 0.9687, 1.1125],
         ...,
         [1.1684, 1.0128, 1.0155],
         [1.0160, 1.2951, 0.9483],
         [0.9751, 0.9447, 0.9478]],
        [[0.9337, 1.0578, 0.9491],
         [0.9325, 0.9961, 1.0922],
         [0.9320, 1.0091, 1.1260],
         ...,
         [1.1967, 1.0632, 1.0495],
         [1.0397, 1.5404, 0.9538],
         [0.9919, 0.9571, 0.9508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.2241, 36.8657, 18.4451],
         [14.4469, 16.0995, 33.1325],
         [11.6586, 17.5726, 26.8835],
         ...,
         [35.8457, 24.6475, 27.1583],
         [23.6752, 91.9930, 16.1051],
         [16.6253, 13.7878, 15.3871]],
        [[ 9.5977, 11.0763, 13.2158],
         [ 8.9745, 12.7020, 19.7343],
         [10.1087, 11.9442, 23.3092],
         ...,
         [26.5523, 14.1586, 17.8494],
         [15.9091, 23.9851, 14.6242],
         [12.6553, 11.1583, 14.7783]],
        [[ 9.2243,  9.5444, 12.6814],
         [ 8.4608, 12.3348, 18.5082],
         [ 9.9317, 11.3868, 22.9012],
         ...,
         [25.5840, 13.2196, 16.9457],
         [15.1451, 20.3083, 14.4506],
         [12.2350, 10.8698, 14.7046]],
        ...,
        [[ 8.7811,  7.9343, 12.0482],
         [ 7.8640, 11.8936, 17.0919],
         [ 9.7164, 10.7309, 22.4046],
         ...,
         [24.4311, 12.1403, 15.8874],
         [14.2477, 16.5185, 14.2380],
         [11.7327, 10.5220, 14.6137]],
        [[ 9.9558, 12.7080, 13.7290],
         [ 9.4763, 13.0508, 20.9382],
         [10.2748, 12.4830, 23.6924],
         ...,
         [27.4788, 15.0847, 18.7265],
         [16.6486, 27.9682, 14.7863],
         [13.0561, 11.4314, 14.8466]],
        [[10.7939, 17.2099, 14.9332],
         [10.6852, 13.8548, 23.8611],
         [10.6512, 13.7597, 24.5603],
         ...,
         [29.6392, 17.3481, 20.8173],
         [18.4042, 39.2552, 15.1504],
         [13.9862, 12.0580, 14.9986]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9682, 1.4767, 1.0062],
         [0.9844, 1.0314, 1.2451],
         [0.9476, 1.0630, 1.1435],
         ...,
         [1.2672, 1.2147, 1.1479],
         [1.1064, 2.6588, 0.9681],
         [1.0132, 0.9818, 0.9565]],
        [[0.9203, 0.9237, 0.9212],
         [0.9121, 0.9585, 1.0272],
         [0.9271, 0.9423, 1.0853],
         ...,
         [1.1444, 0.9898, 0.9965],
         [1.0037, 1.2005, 0.9441],
         [0.9607, 0.9254, 0.9466]],
        [[0.9154, 0.8908, 0.9125],
         [0.9053, 0.9507, 1.0072],
         [0.9247, 0.9303, 1.0787],
         ...,
         [1.1316, 0.9696, 0.9818],
         [0.9936, 1.1216, 0.9412],
         [0.9552, 0.9192, 0.9454]],
        ...,
        [[0.9095, 0.8563, 0.9022],
         [0.8974, 0.9412, 0.9842],
         [0.9219, 0.9163, 1.0706],
         ...,
         [1.1164, 0.9465, 0.9646],
         [0.9818, 1.0404, 0.9378],
         [0.9485, 0.9118, 0.9439]],
        [[0.9251, 0.9587, 0.9295],
         [0.9187, 0.9660, 1.0468],
         [0.9293, 0.9538, 1.0916],
         ...,
         [1.1566, 1.0096, 1.0108],
         [1.0135, 1.2859, 0.9467],
         [0.9660, 0.9313, 0.9477]],
        [[0.9361, 1.0552, 0.9491],
         [0.9347, 0.9832, 1.0943],
         [0.9342, 0.9812, 1.1057],
         ...,
         [1.1852, 1.0582, 1.0448],
         [1.0367, 1.5279, 0.9526],
         [0.9783, 0.9447, 0.9502]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9523, 30.5411, 18.1576],
         [12.3698, 12.4031, 28.0376],
         [11.1669, 12.6254, 17.7945],
         ...,
         [28.5721, 21.0698, 25.2847],
         [19.6899, 80.9756, 15.8183],
         [12.8637, 12.2545, 16.1201]],
        [[ 9.5397, 10.8812, 13.0472],
         [ 9.6846, 10.7949, 19.5056],
         [10.6603, 10.0118, 15.8894],
         ...,
         [19.6560, 12.5939, 15.8865],
         [13.5657, 20.8908, 13.7074],
         [ 9.4010, 10.5826, 15.3835]],
        [[ 9.1854,  9.5762, 12.5241],
         [ 9.3957, 10.6109, 18.6489],
         [10.5992,  9.7285, 15.6683],
         ...,
         [18.7667, 11.8166, 14.9984],
         [12.9543, 17.6652, 13.4665],
         [ 9.0430, 10.3922, 15.2947]],
        ...,
        [[ 8.7638,  8.1720, 11.9040],
         [ 9.0489, 10.3869, 17.6377],
         [10.5238,  9.3879, 15.3980],
         ...,
         [17.7185, 10.9182, 13.9648],
         [12.2335, 14.3454, 13.1734],
         [ 8.6177, 10.1606, 15.1851]],
        [[ 9.8791, 12.2434, 13.5494],
         [ 9.9593, 10.9676, 20.3315],
         [10.7170, 10.2808, 16.0964],
         ...,
         [20.5145, 13.3568, 16.7531],
         [14.1558, 24.3894, 13.9336],
         [ 9.7440, 10.7615, 15.4659]],
        [[10.6711, 15.8831, 14.7273],
         [10.5933, 11.3585, 22.2797],
         [10.8432, 10.9001, 16.5627],
         ...,
         [22.5439, 15.2078, 18.8363],
         [15.5503, 34.3234, 14.4461],
         [10.5459, 11.1671, 15.6494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9777, 1.3525, 1.0052],
         [0.9700, 0.9636, 1.1659],
         [0.9541, 0.9683, 0.9993],
         ...,
         [1.1841, 1.1494, 1.1212],
         [1.0667, 2.4340, 0.9672],
         [0.9765, 0.9604, 0.9721]],
        [[0.9326, 0.9309, 0.9221],
         [0.9345, 0.9291, 1.0272],
         [0.9474, 0.9123, 0.9683],
         ...,
         [1.0663, 0.9677, 0.9683],
         [0.9858, 1.1456, 0.9328],
         [0.9307, 0.9245, 0.9601]],
        [[0.9279, 0.9029, 0.9136],
         [0.9307, 0.9251, 1.0132],
         [0.9466, 0.9062, 0.9647],
         ...,
         [1.0545, 0.9510, 0.9538],
         [0.9777, 1.0764, 0.9289],
         [0.9260, 0.9204, 0.9587]],
        ...,
        [[0.9223, 0.8728, 0.9035],
         [0.9261, 0.9203, 0.9968],
         [0.9456, 0.8989, 0.9603],
         ...,
         [1.0406, 0.9317, 0.9370],
         [0.9682, 1.0052, 0.9242],
         [0.9204, 0.9155, 0.9569]],
        [[0.9370, 0.9601, 0.9303],
         [0.9381, 0.9328, 1.0406],
         [0.9481, 0.9181, 0.9717],
         ...,
         [1.0776, 0.9840, 0.9824],
         [0.9936, 1.2206, 0.9365],
         [0.9353, 0.9284, 0.9615]],
        [[0.9475, 1.0382, 0.9494],
         [0.9465, 0.9412, 1.0723],
         [0.9498, 0.9313, 0.9793],
         ...,
         [1.1044, 1.0237, 1.0163],
         [1.0120, 1.4336, 0.9449],
         [0.9459, 0.9371, 0.9644]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8052, 27.2246, 17.9927],
         [11.5197, 12.0549, 22.1195],
         [11.6940, 12.9049, 22.3255],
         ...,
         [24.3198, 19.0800, 24.1715],
         [17.5279, 72.7517, 15.7380],
         [16.2662, 12.1627, 15.9852]],
        [[ 9.5128, 10.7823, 12.9579],
         [10.3403, 10.4456, 18.2106],
         [10.2153, 10.0752, 19.4625],
         ...,
         [16.7667, 11.4314, 15.1138],
         [12.5286, 19.1877, 13.2571],
         [ 8.6513, 10.5027, 14.7723]],
        [[ 9.1692,  9.6143, 12.4419],
         [10.2029, 10.2620, 17.7774],
         [10.0458,  9.7711, 19.1346],
         ...,
         [16.0123, 10.7290, 14.2603],
         [12.0186, 16.2694, 12.9785],
         [ 8.0008, 10.3137, 14.6287]],
        ...,
        [[ 8.7599,  8.3390, 11.8300],
         [10.0350, 10.0386, 17.2541],
         [ 9.8392,  9.4065, 18.7354],
         ...,
         [15.1230,  9.9169, 13.2677],
         [11.4142, 13.2568, 12.6409],
         [ 7.2611, 10.0838, 14.4524]],
        [[ 9.8415, 11.9862, 13.4533],
         [10.4687, 10.6181, 18.6198],
         [10.3743, 10.3643, 19.7702],
         ...,
         [17.4947, 12.1206, 15.9470],
         [13.0188, 22.3447, 13.5196],
         [ 9.2986, 10.6804, 14.9061]],
        [[10.6075, 15.1400, 14.6144],
         [10.7578, 11.0088, 19.5557],
         [10.7341, 11.0319, 20.4664],
         ...,
         [19.2149, 13.7921, 17.9518],
         [14.1692, 31.2715, 14.1173],
         [10.9036, 11.0830, 15.2057]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9506, 1.2894, 1.0050],
         [0.9336, 0.9641, 1.0721],
         [0.9359, 0.9824, 1.0755],
         ...,
         [1.1028, 1.1148, 1.1055],
         [1.0130, 2.2657, 0.9683],
         [0.9964, 0.9665, 0.9724]],
        [[0.9071, 0.9369, 0.9231],
         [0.9181, 0.9296, 1.0086],
         [0.9164, 0.9217, 1.0289],
         ...,
         [1.0030, 0.9508, 0.9582],
         [0.9470, 1.1171, 0.9280],
         [0.8957, 0.9309, 0.9526]],
        [[0.9026, 0.9118, 0.9147],
         [0.9162, 0.9257, 1.0015],
         [0.9142, 0.9152, 1.0236],
         ...,
         [0.9930, 0.9357, 0.9443],
         [0.9402, 1.0545, 0.9235],
         [0.8871, 0.9268, 0.9503]],
        ...,
        [[0.8972, 0.8845, 0.9048],
         [0.9140, 0.9209, 0.9930],
         [0.9114, 0.9074, 1.0171],
         ...,
         [0.9813, 0.9183, 0.9282],
         [0.9323, 0.9899, 0.9180],
         [0.8774, 0.9219, 0.9474]],
        [[0.9115, 0.9627, 0.9312],
         [0.9198, 0.9333, 1.0152],
         [0.9185, 0.9279, 1.0339],
         ...,
         [1.0126, 0.9656, 0.9717],
         [0.9535, 1.1848, 0.9323],
         [0.9043, 0.9347, 0.9548]],
        [[0.9216, 1.0303, 0.9501],
         [0.9236, 0.9417, 1.0304],
         [0.9233, 0.9422, 1.0453],
         ...,
         [1.0353, 1.0014, 1.0044],
         [0.9687, 1.3762, 0.9420],
         [0.9255, 0.9433, 0.9597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7591, 26.1787, 17.9416],
         [11.4000, 12.1274, 21.0642],
         [12.0682, 12.4634, 26.0222],
         ...,
         [23.3345, 18.0549, 23.6241],
         [16.9775, 69.3073, 15.7289],
         [14.5346, 12.0004, 15.4032]],
        [[ 9.5114, 10.7493, 12.9390],
         [10.5097, 10.4809, 17.9039],
         [ 9.9672, 10.1459, 22.2906],
         ...,
         [16.1885, 10.8944, 15.1111],
         [12.2905, 18.6965, 13.1645],
         [ 8.9207, 10.4246, 14.3880]],
        [[ 9.1718,  9.6279, 12.4259],
         [10.4045, 10.2933, 17.5472],
         [ 9.7340,  9.8907, 21.8675],
         ...,
         [15.4721, 10.2340, 14.2980],
         [11.8087, 15.8973, 12.8776],
         [ 8.3976, 10.2446, 14.2671]],
        ...,
        [[ 8.7670,  8.3972, 11.8172],
         [10.2753, 10.0651, 17.1143],
         [ 9.4521,  9.5830, 21.3536],
         ...,
         [14.6269,  9.4697, 13.3493],
         [11.2369, 12.9986, 12.5302],
         [ 7.7908, 10.0254, 14.1184]],
        [[ 9.8362, 11.9004, 13.4315],
         [10.6079, 10.6572, 18.2396],
         [10.1875, 10.3872, 22.6884],
         ...,
         [16.8793, 11.5419, 15.9029],
         [12.7528, 21.7166, 13.4350],
         [ 9.4326, 10.5937, 14.5006]],
        [[10.5925, 14.8953, 14.5856],
         [10.8276, 11.0566, 19.0029],
         [10.6910, 10.9404, 23.5915],
         ...,
         [18.5097, 13.1101, 17.7998],
         [13.8353, 30.2200, 14.0517],
         [10.6683, 10.9766, 14.7520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9608, 1.2674, 1.0050],
         [0.9429, 0.9661, 1.0558],
         [0.9517, 0.9733, 1.1364],
         ...,
         [1.1006, 1.0932, 1.0974],
         [1.0166, 2.1923, 0.9690],
         [0.9843, 0.9634, 0.9637]],
        [[0.9179, 0.9366, 0.9236],
         [0.9311, 0.9308, 1.0044],
         [0.9239, 0.9236, 1.0757],
         ...,
         [1.0062, 0.9397, 0.9590],
         [0.9547, 1.1070, 0.9273],
         [0.9101, 0.9296, 0.9472]],
        [[0.9134, 0.9125, 0.9153],
         [0.9297, 0.9268, 0.9986],
         [0.9209, 0.9181, 1.0688],
         ...,
         [0.9967, 0.9255, 0.9457],
         [0.9483, 1.0469, 0.9226],
         [0.9032, 0.9257, 0.9452]],
        ...,
        [[0.9081, 0.8861, 0.9054],
         [0.9280, 0.9219, 0.9915],
         [0.9171, 0.9115, 1.0605],
         ...,
         [0.9855, 0.9091, 0.9303],
         [0.9407, 0.9848, 0.9170],
         [0.8952, 0.9210, 0.9428]],
        [[0.9222, 0.9612, 0.9316],
         [0.9324, 0.9346, 1.0098],
         [0.9269, 0.9288, 1.0822],
         ...,
         [1.0153, 0.9536, 0.9718],
         [0.9608, 1.1717, 0.9317],
         [0.9169, 0.9332, 0.9490]],
        [[0.9322, 1.0255, 0.9504],
         [0.9353, 0.9431, 1.0222],
         [0.9335, 0.9407, 1.0969],
         ...,
         [1.0368, 0.9872, 1.0027],
         [0.9751, 1.3541, 0.9417],
         [0.9332, 0.9414, 0.9531]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.6703, 24.2282, 17.8439],
         [11.3772, 12.3939, 21.1910],
         [12.2001, 12.2195, 27.8784],
         ...,
         [21.5548, 15.8002, 22.3230],
         [16.0442, 61.8209, 15.7209],
         [11.9938, 11.8139, 14.4241]],
        [[ 9.5163, 10.6839, 12.9125],
         [10.5870, 10.7808, 18.0629],
         [ 9.8649, 10.1950, 23.6245],
         ...,
         [15.2290, 10.0345, 15.3403],
         [11.9133, 17.7749, 13.0352],
         [ 9.8531, 10.3312, 13.8242]],
        [[ 9.1850,  9.6541, 12.4057],
         [10.4931, 10.5963, 17.7093],
         [ 9.6088,  9.9689, 23.1453],
         ...,
         [14.5880,  9.4861, 14.6442],
         [11.4823, 15.2334, 12.7364],
         [ 9.6161, 10.1611, 13.7517]],
        ...,
        [[ 8.7898,  8.5129, 11.8042],
         [10.3777, 10.3717, 17.2800],
         [ 9.3002,  9.6953, 22.5639],
         ...,
         [13.8298,  8.8469, 13.8240],
         [10.9689, 12.5783, 12.3750],
         [ 9.3300,  9.9539, 13.6622]],
        [[ 9.8328, 11.7319, 13.3988],
         [10.6745, 10.9540, 18.3957],
         [10.1073, 10.4082, 24.0758],
         ...,
         [15.8458, 10.5689, 16.0123],
         [12.3256, 20.4962, 13.3173],
         [10.0770, 10.4908, 13.8915]],
        [[10.5689, 14.4227, 14.5376],
         [10.8700, 11.3460, 19.1517],
         [10.6637, 10.8947, 25.1024],
         ...,
         [17.2967, 11.8509, 17.6011],
         [13.2866, 28.0667, 13.9615],
         [10.5892, 10.8517, 14.0411]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9800, 1.2256, 1.0050],
         [0.9629, 0.9718, 1.0594],
         [0.9738, 0.9681, 1.1682],
         ...,
         [1.0974, 1.0449, 1.0778],
         [1.0246, 2.0317, 0.9704],
         [0.9710, 0.9594, 0.9493]],
        [[0.9383, 0.9352, 0.9248],
         [0.9524, 0.9373, 1.0085],
         [0.9429, 0.9247, 1.0990],
         ...,
         [1.0138, 0.9213, 0.9642],
         [0.9700, 1.0872, 0.9268],
         [0.9427, 0.9276, 0.9396]],
        [[0.9339, 0.9131, 0.9165],
         [0.9512, 0.9333, 1.0028],
         [0.9395, 0.9198, 1.0912],
         ...,
         [1.0053, 0.9095, 0.9529],
         [0.9643, 1.0327, 0.9219],
         [0.9396, 0.9240, 0.9384]],
        ...,
        [[0.9287, 0.8886, 0.9067],
         [0.9497, 0.9285, 0.9958],
         [0.9354, 0.9140, 1.0817],
         ...,
         [0.9953, 0.8958, 0.9396],
         [0.9575, 0.9758, 0.9160],
         [0.9358, 0.9195, 0.9370]],
        [[0.9425, 0.9577, 0.9327],
         [0.9536, 0.9410, 1.0139],
         [0.9461, 0.9293, 1.1063],
         ...,
         [1.0219, 0.9327, 0.9752],
         [0.9754, 1.1456, 0.9313],
         [0.9457, 0.9310, 0.9407]],
        [[0.9522, 1.0154, 0.9512],
         [0.9562, 0.9494, 1.0262],
         [0.9535, 0.9397, 1.1230],
         ...,
         [1.0411, 0.9602, 1.0010],
         [0.9881, 1.3079, 0.9418],
         [0.9525, 0.9388, 0.9431]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5970, 22.6636, 17.7513],
         [11.2768, 12.2869, 20.0584],
         [12.1377, 12.0819, 25.9993],
         ...,
         [19.2167, 14.5150, 21.5131],
         [15.0432, 56.0517, 15.7067],
         [13.2850, 11.8823, 14.9981]],
        [[ 9.5166, 10.6335, 12.8735],
         [10.7709, 10.6215, 17.1677],
         [ 9.9573, 10.2275, 22.2860],
         ...,
         [14.1329,  9.7877, 15.1481],
         [11.5216, 16.8692, 12.8522],
         [ 9.2464, 10.3851, 14.0773]],
        [[ 9.1919,  9.6827, 12.3715],
         [10.7099, 10.4317, 16.8401],
         [ 9.7162, 10.0187, 21.8648],
         ...,
         [13.6054,  9.3217, 14.5044],
         [11.1474, 14.5391, 12.5370],
         [ 8.8408, 10.2134, 13.9673]],
        ...,
        [[ 8.8043,  8.6198, 11.7757],
         [10.6346, 10.2008, 16.4423],
         [ 9.4251,  9.7654, 21.3532],
         ...,
         [12.9780,  8.7741, 13.7433],
         [10.6998, 12.0896, 12.1565],
         [ 8.3620, 10.0042, 13.8320]],
        [[ 9.8266, 11.5941, 13.3550],
         [10.8275, 10.7997, 17.4757],
         [10.1852, 10.4241, 22.6820],
         ...,
         [14.6380, 10.2386, 15.7677],
         [11.8782, 19.3506, 13.1502],
         [ 9.6374, 10.5462, 14.1796]],
        [[10.5467, 14.0320, 14.4821],
         [10.9536, 11.2038, 18.1752],
         [10.7067, 10.8715, 23.5809],
         ...,
         [15.8174, 11.3083, 17.2262],
         [12.7046, 26.1945, 13.8325],
         [10.5597, 10.9105, 14.4080]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9704, 1.1915, 1.0051],
         [0.9530, 0.9690, 1.0426],
         [0.9643, 0.9646, 1.1392],
         ...,
         [1.0579, 1.0168, 1.0662],
         [1.0027, 1.9075, 0.9718],
         [0.9795, 0.9603, 0.9603]],
        [[0.9297, 0.9336, 0.9257],
         [0.9463, 0.9333, 0.9956],
         [0.9355, 0.9249, 1.0788],
         ...,
         [0.9907, 0.9154, 0.9627],
         [0.9562, 1.0673, 0.9254],
         [0.9261, 0.9282, 0.9453]],
        [[0.9254, 0.9132, 0.9176],
         [0.9455, 0.9292, 0.9902],
         [0.9323, 0.9204, 1.0720],
         ...,
         [0.9837, 0.9054, 0.9522],
         [0.9513, 1.0173, 0.9202],
         [0.9208, 0.9245, 0.9435]],
        ...,
        [[0.9203, 0.8904, 0.9079],
         [0.9445, 0.9243, 0.9838],
         [0.9285, 0.9149, 1.0636],
         ...,
         [0.9754, 0.8937, 0.9399],
         [0.9453, 0.9648, 0.9141],
         [0.9144, 0.9201, 0.9413]],
        [[0.9338, 0.9542, 0.9335],
         [0.9470, 0.9371, 1.0006],
         [0.9385, 0.9291, 1.0852],
         ...,
         [0.9974, 0.9251, 0.9728],
         [0.9609, 1.1205, 0.9302],
         [0.9313, 0.9317, 0.9470]],
        [[0.9433, 1.0064, 0.9519],
         [0.9487, 0.9458, 1.0119],
         [0.9454, 0.9387, 1.0999],
         ...,
         [1.0130, 0.9480, 0.9965],
         [0.9718, 1.2672, 0.9413],
         [0.9435, 0.9395, 0.9507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5264, 20.9602, 17.6440],
         [11.4929, 12.2647, 20.9008],
         [11.9608, 12.0694, 23.0263],
         ...,
         [17.0032, 12.9328, 20.4252],
         [14.0942, 48.3012, 15.6901],
         [14.0382, 12.0882, 15.6651]],
        [[ 9.5501, 10.5684, 12.8440],
         [10.6571, 10.5941, 17.8183],
         [10.1121, 10.2307, 20.0983],
         ...,
         [13.1853,  9.8227, 15.3822],
         [11.1814, 15.8618, 12.7174],
         [ 9.0317, 10.4606, 14.5163]],
        [[ 9.2347,  9.7095, 12.3489],
         [10.5579, 10.4038, 17.4699],
         [ 9.9041, 10.0235, 19.7628],
         ...,
         [12.7767,  9.4939, 14.8516],
         [10.8655, 13.8194, 12.3910],
         [ 8.5518, 10.2750, 14.3801]],
        ...,
        [[ 8.8577,  8.7398, 11.7609],
         [10.4361, 10.1724, 17.0468],
         [ 9.6518,  9.7721, 19.3541],
         ...,
         [12.2871,  9.1010, 14.2184],
         [10.4857, 11.6462, 11.9975],
         [ 7.9915, 10.0492, 14.2128]],
        [[ 9.8508, 11.4287, 13.3186],
         [10.7494, 10.7729, 18.1463],
         [10.3080, 10.4258, 20.4131],
         ...,
         [13.5741, 10.1364, 15.8888],
         [11.4811, 18.0145, 13.0264],
         [ 9.4986, 10.6349, 14.6432]],
        [[10.5484, 13.5830, 14.4290],
         [10.9561, 11.1782, 18.8914],
         [10.7539, 10.8695, 21.1254],
         ...,
         [14.4732, 10.8646, 17.0667],
         [12.1714, 23.8552, 13.7351],
         [10.6161, 11.0299, 14.9272]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9619, 1.1552, 1.0052],
         [0.9482, 0.9687, 1.0582],
         [0.9544, 0.9645, 1.0927],
         ...,
         [1.0210, 0.9830, 1.0504],
         [0.9826, 1.7414, 0.9734],
         [0.9819, 0.9649, 0.9730]],
        [[0.9225, 0.9323, 0.9271],
         [0.9372, 0.9329, 1.0080],
         [0.9300, 0.9251, 1.0451],
         ...,
         [0.9706, 0.9163, 0.9684],
         [0.9441, 1.0458, 0.9251],
         [0.9157, 0.9300, 0.9543]],
        [[0.9184, 0.9139, 0.9191],
         [0.9359, 0.9288, 1.0024],
         [0.9272, 0.9206, 1.0397],
         ...,
         [0.9652, 0.9093, 0.9598],
         [0.9399, 1.0020, 0.9198],
         [0.9093, 0.9260, 0.9521]],
        ...,
        [[0.9134, 0.8931, 0.9095],
         [0.9343, 0.9238, 0.9955],
         [0.9239, 0.9152, 1.0330],
         ...,
         [0.9587, 0.9009, 0.9495],
         [0.9349, 0.9554, 0.9134],
         [0.9019, 0.9212, 0.9494]],
        [[0.9265, 0.9508, 0.9348],
         [0.9384, 0.9367, 1.0134],
         [0.9326, 0.9293, 1.0502],
         ...,
         [0.9757, 0.9231, 0.9766],
         [0.9481, 1.0920, 0.9301],
         [0.9219, 0.9337, 0.9564]],
        [[0.9357, 0.9970, 0.9529],
         [0.9411, 0.9454, 1.0255],
         [0.9385, 0.9388, 1.0618],
         ...,
         [0.9876, 0.9387, 0.9958],
         [0.9572, 1.2172, 0.9416],
         [0.9366, 0.9422, 0.9610]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1893, 16.1974, 17.0912],
         [11.9078, 12.2418, 20.8931],
         [12.0648, 11.8850, 18.1227],
         ...,
         [11.4167, 16.6909, 17.8627],
         [11.6062, 20.5646, 15.7256],
         [15.3805, 12.3436, 16.3520]],
        [[ 9.7300, 10.1778, 12.6844],
         [10.6883, 10.5690, 17.7991],
         [10.2881, 10.2875, 16.5887],
         ...,
         [10.3432, 13.2431, 16.0562],
         [10.1552, 11.0522, 12.0395],
         [ 8.7706, 10.7027, 15.1399]],
        [[ 9.4623,  9.6089, 12.2248],
         [10.5463, 10.3785, 17.4494],
         [10.0872, 10.1053, 16.4081],
         ...,
         [10.2175, 12.8692, 15.8457],
         [ 9.9887, 10.2345, 11.6480],
         [ 8.1814, 10.5154, 14.9962]],
        ...,
        [[ 9.1403,  8.9468, 11.6773],
         [10.3727, 10.1468, 17.0249],
         [ 9.8433,  9.8836, 16.1866],
         ...,
         [10.0637, 12.4197, 15.5882],
         [ 9.7859,  9.3032, 11.1796],
         [ 7.5050, 10.2874, 14.8198]],
        [[ 9.9838, 10.7329, 13.1242],
         [10.8211, 10.7480, 18.1281],
         [10.4771, 10.4586, 16.7572],
         ...,
         [10.4606, 13.5980, 16.2531],
         [10.3114, 11.8650, 12.4127],
         [ 9.3521, 10.8786, 15.2737]],
        [[10.5676, 12.0672, 14.1492],
         [11.1200, 11.1537, 18.8758],
         [10.9066, 10.8463, 17.1352],
         ...,
         [10.7243, 14.4151, 16.6960],
         [10.6646, 13.8764, 13.2776],
         [10.7752, 11.2771, 15.5733]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9475, 1.0552, 1.0072],
         [0.9437, 0.9704, 1.0691],
         [0.9458, 0.9628, 1.0240],
         ...,
         [0.9373, 1.0658, 1.0198],
         [0.9398, 1.1489, 0.9850],
         [0.9896, 0.9726, 0.9952]],
        [[0.9150, 0.9262, 0.9356],
         [0.9276, 0.9345, 1.0188],
         [0.9223, 0.9285, 0.9991],
         ...,
         [0.9231, 0.9919, 0.9904],
         [0.9206, 0.9449, 0.9251],
         [0.9023, 0.9374, 0.9755]],
        [[0.9114, 0.9140, 0.9281],
         [0.9258, 0.9305, 1.0131],
         [0.9197, 0.9246, 0.9961],
         ...,
         [0.9214, 0.9839, 0.9870],
         [0.9184, 0.9274, 0.9187],
         [0.8945, 0.9334, 0.9732]],
        ...,
        [[0.9072, 0.8998, 0.9192],
         [0.9235, 0.9255, 1.0062],
         [0.9165, 0.9198, 0.9925],
         ...,
         [0.9194, 0.9742, 0.9828],
         [0.9157, 0.9074, 0.9111],
         [0.8856, 0.9285, 0.9703]],
        [[0.9183, 0.9381, 0.9427],
         [0.9294, 0.9384, 1.0241],
         [0.9248, 0.9322, 1.0018],
         ...,
         [0.9246, 0.9995, 0.9936],
         [0.9227, 0.9623, 0.9312],
         [0.9100, 0.9412, 0.9777]],
        [[0.9260, 0.9667, 0.9594],
         [0.9333, 0.9471, 1.0363],
         [0.9305, 0.9405, 1.0080],
         ...,
         [0.9281, 1.0170, 1.0008],
         [0.9273, 1.0055, 0.9452],
         [0.9288, 0.9497, 0.9826]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3802, 18.1405, 17.4113],
         [11.6602, 12.2552, 20.8984],
         [11.9970, 11.9790, 20.8167],
         ...,
         [13.7806, 12.3004, 19.0090],
         [12.7797, 33.9126, 15.6791],
         [14.5657, 12.2080, 15.9451]],
        [[ 9.6238, 10.4254, 12.7767],
         [10.6696, 10.5833, 17.8104],
         [10.1856, 10.2556, 18.4967],
         ...,
         [11.8926, 10.5287, 15.7586],
         [10.7224, 13.7026, 12.4226],
         [ 8.9144, 10.5372, 14.7711]],
        [[ 9.3284,  9.7346, 12.2964],
         [10.5530, 10.3929, 17.4614],
         [ 9.9813, 10.0603, 18.2281],
         ...,
         [11.6777, 10.3280, 15.3970],
         [10.4920, 12.2485, 12.0697],
         [ 8.3887, 10.3470, 14.6319]],
        ...,
        [[ 8.9743,  8.9404, 11.7254],
         [10.4100, 10.1613, 17.0377],
         [ 9.7334,  9.8231, 17.9002],
         ...,
         [11.4163, 10.0841, 14.9598],
         [10.2128, 10.6565, 11.6456],
         [ 7.7792, 10.1156, 14.4610]],
        [[ 9.9048, 11.1067, 13.2367],
         [10.7784, 10.7622, 18.1389],
         [10.3779, 10.4393, 18.7482],
         ...,
         [12.0946, 10.7175, 16.1000],
         [10.9397, 15.1978, 12.7576],
         [ 9.4289, 10.7159, 14.9008]],
        [[10.5543, 12.7718, 14.3113],
         [11.0225, 11.1678, 18.8852],
         [10.8153, 10.8564, 19.3153],
         ...,
         [12.5525, 11.1463, 16.8797],
         [11.4348, 19.1000, 13.5291],
         [10.6719, 11.1212, 15.1909]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9556, 1.0953, 1.0058],
         [0.9461, 0.9691, 1.0625],
         [0.9505, 0.9631, 1.0612],
         ...,
         [0.9741, 0.9700, 1.0318],
         [0.9609, 1.4335, 0.9776],
         [0.9845, 0.9680, 0.9819]],
        [[0.9192, 0.9298, 0.9304],
         [0.9330, 0.9332, 1.0123],
         [0.9266, 0.9262, 1.0234],
         ...,
         [0.9492, 0.9320, 0.9789],
         [0.9337, 1.0001, 0.9246],
         [0.9098, 0.9322, 0.9628]],
        [[0.9153, 0.9150, 0.9226],
         [0.9314, 0.9291, 1.0066],
         [0.9239, 0.9220, 1.0191],
         ...,
         [0.9463, 0.9277, 0.9730],
         [0.9306, 0.9689, 0.9189],
         [0.9028, 0.9281, 0.9606]],
        ...,
        [[0.9106, 0.8980, 0.9133],
         [0.9296, 0.9242, 0.9997],
         [0.9206, 0.9169, 1.0137],
         ...,
         [0.9429, 0.9225, 0.9659],
         [0.9270, 0.9348, 0.9120],
         [0.8948, 0.9232, 0.9578]],
        [[0.9229, 0.9444, 0.9379],
         [0.9344, 0.9370, 1.0176],
         [0.9291, 0.9301, 1.0275],
         ...,
         [0.9518, 0.9361, 0.9845],
         [0.9366, 1.0322, 0.9301],
         [0.9166, 0.9360, 0.9650]],
        [[0.9315, 0.9801, 0.9554],
         [0.9377, 0.9457, 1.0298],
         [0.9349, 0.9391, 1.0368],
         ...,
         [0.9579, 0.9453, 0.9971],
         [0.9431, 1.1158, 0.9426],
         [0.9330, 0.9447, 0.9697]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0405, 16.0359, 16.8532],
         [12.3034, 12.2398, 21.4556],
         [12.6187, 11.9066, 17.5299],
         ...,
         [12.2131, 31.9517, 19.6880],
         [11.5307, 14.1221, 15.6612],
         [15.2153, 12.4398, 16.5133]],
        [[ 9.8222,  9.9214, 12.6525],
         [10.4300, 10.5670, 18.5189],
         [10.1344, 10.2792, 16.1260],
         ...,
         [10.0158, 20.7431, 18.6240],
         [10.2261,  9.6573, 11.9347],
         [ 8.7967, 10.8487, 15.4797]],
        [[ 9.5777,  9.3489, 12.2114],
         [10.2189, 10.3765, 18.1845],
         [ 9.8631, 10.0939, 15.9602],
         ...,
         [ 9.7729, 19.6629, 18.4964],
         [10.0752,  9.2135, 11.5399],
         [ 8.2198, 10.6664, 15.3563]],
        ...,
        [[ 9.2826,  8.6841, 11.6852],
         [ 9.9628, 10.1448, 17.7779],
         [ 9.5363,  9.8685, 15.7568],
         ...,
         [ 9.4795, 18.4001, 18.3392],
         [ 9.8911,  8.6909, 11.0680],
         [ 7.5561, 10.4444, 15.2045]],
        [[10.0534, 10.4810, 13.0740],
         [10.6288, 10.7460, 18.8330],
         [10.3915, 10.4533, 16.2805],
         ...,
         [10.2454, 21.7930, 18.7427],
         [10.3674, 10.0859, 12.3112],
         [ 9.3652, 11.0197, 15.5944]],
        [[10.5832, 11.8302, 14.0542],
         [11.0809, 11.1517, 19.5453],
         [10.9823, 10.8481, 16.6269],
         ...,
         [10.7710, 24.3015, 19.0071],
         [10.6861, 11.1004, 13.1844],
         [10.7529, 11.4067, 15.8507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9465, 1.0542, 1.0048],
         [0.9500, 0.9728, 1.0797],
         [0.9542, 0.9657, 1.0158],
         ...,
         [0.9488, 1.3955, 1.0509],
         [0.9398, 1.0132, 0.9854],
         [0.9885, 0.9771, 0.9993]],
        [[0.9172, 0.9231, 0.9365],
         [0.9253, 0.9370, 1.0319],
         [0.9214, 0.9308, 0.9930],
         ...,
         [0.9198, 1.1552, 1.0336],
         [0.9226, 0.9175, 0.9248],
         [0.9037, 0.9430, 0.9825]],
        [[0.9140, 0.9109, 0.9293],
         [0.9225, 0.9329, 1.0265],
         [0.9178, 0.9268, 0.9903],
         ...,
         [0.9166, 1.1320, 1.0315],
         [0.9206, 0.9080, 0.9184],
         [0.8961, 0.9391, 0.9805]],
        ...,
        [[0.9101, 0.8966, 0.9208],
         [0.9191, 0.9279, 1.0198],
         [0.9135, 0.9220, 0.9870],
         ...,
         [0.9127, 1.1049, 1.0290],
         [0.9181, 0.8967, 0.9107],
         [0.8873, 0.9343, 0.9780]],
        [[0.9203, 0.9351, 0.9433],
         [0.9279, 0.9408, 1.0370],
         [0.9248, 0.9345, 0.9955],
         ...,
         [0.9228, 1.1777, 1.0355],
         [0.9244, 0.9267, 0.9309],
         [0.9112, 0.9467, 0.9843]],
        [[0.9273, 0.9641, 0.9593],
         [0.9339, 0.9495, 1.0486],
         [0.9326, 0.9430, 1.0011],
         ...,
         [0.9298, 1.2315, 1.0398],
         [0.9286, 0.9484, 0.9451],
         [0.9295, 0.9550, 0.9885]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3154, 17.2976, 17.3100],
         [11.7701, 12.2524, 21.0172],
         [12.1032, 11.9645, 20.1813],
         ...,
         [13.0405, 12.9827, 19.1304],
         [12.4883, 28.4778, 15.6665],
         [14.6783, 12.2504, 16.0433]],
        [[ 9.6584, 10.3498, 12.7540],
         [10.6232, 10.5803, 17.9385],
         [10.1748, 10.2600, 18.0255],
         ...,
         [11.5529, 11.0141, 16.2193],
         [10.6297, 12.8247, 12.3311],
         [ 8.8921, 10.5781, 14.8944]],
        [[ 9.3722,  9.7123, 12.2808],
         [10.4892, 10.3899, 17.5902],
         [ 9.9586, 10.0667, 17.7752],
         ...,
         [11.3809, 10.7922, 15.8912],
         [10.4198, 11.6188, 11.9710],
         [ 8.3572, 10.3876, 14.7580]],
        ...,
        [[ 9.0287,  8.9753, 11.7178],
         [10.3253, 10.1583, 17.1673],
         [ 9.6965,  9.8318, 17.4694],
         ...,
         [11.1711, 10.5230, 15.4932],
         [10.1650, 10.2784, 11.5386],
         [ 7.7378, 10.1560, 14.5905]],
        [[ 9.9304, 10.9755, 13.2071],
         [10.7484, 10.7592, 18.2662],
         [10.3787, 10.4418, 18.2598],
         ...,
         [11.7139, 11.2231, 16.5282],
         [10.8273, 14.0489, 12.6731],
         [ 9.4163, 10.7570, 15.0214]],
        [[10.5581, 12.4933, 14.2646],
         [11.0299, 11.1648, 19.0106],
         [10.8430, 10.8545, 18.7874],
         ...,
         [12.0772, 11.6983, 17.2308],
         [11.2764, 17.1797, 13.4618],
         [10.6850, 11.1627, 15.3056]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9539, 1.0778, 1.0061],
         [0.9467, 0.9696, 1.0664],
         [0.9511, 0.9634, 1.0528],
         ...,
         [0.9635, 0.9852, 1.0357],
         [0.9562, 1.3175, 0.9794],
         [0.9851, 0.9695, 0.9855]],
        [[0.9188, 0.9288, 0.9320],
         [0.9315, 0.9337, 1.0164],
         [0.9256, 0.9269, 1.0178],
         ...,
         [0.9438, 0.9430, 0.9884],
         [0.9316, 0.9818, 0.9251],
         [0.9087, 0.9337, 0.9668]],
        [[0.9150, 0.9151, 0.9243],
         [0.9298, 0.9296, 1.0107],
         [0.9227, 0.9227, 1.0137],
         ...,
         [0.9415, 0.9383, 0.9831],
         [0.9288, 0.9560, 0.9193],
         [0.9016, 0.9296, 0.9646]],
        ...,
        [[0.9105, 0.8993, 0.9152],
         [0.9276, 0.9247, 1.0038],
         [0.9193, 0.9177, 1.0087],
         ...,
         [0.9388, 0.9325, 0.9766],
         [0.9255, 0.9272, 0.9123],
         [0.8934, 0.9246, 0.9619]],
        [[0.9224, 0.9422, 0.9394],
         [0.9332, 0.9376, 1.0217],
         [0.9283, 0.9307, 1.0216],
         ...,
         [0.9459, 0.9475, 0.9934],
         [0.9342, 1.0081, 0.9307],
         [0.9156, 0.9375, 0.9689]],
        [[0.9307, 0.9747, 0.9566],
         [0.9369, 0.9463, 1.0338],
         [0.9344, 0.9396, 1.0302],
         ...,
         [0.9507, 0.9577, 1.0048],
         [0.9402, 1.0752, 0.9435],
         [0.9323, 0.9462, 0.9735]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.2182, 16.5977, 17.1697],
         [11.8958, 12.2503, 21.1265],
         [12.7119, 11.9665, 20.8055],
         ...,
         [12.9666, 13.5262, 19.3013],
         [12.2964, 21.3510, 15.5715],
         [13.9537, 12.1972, 15.7395]],
        [[ 9.7131, 10.2072, 12.7469],
         [10.4831, 10.5780, 18.0880],
         [ 9.9691, 10.2594, 18.4821],
         ...,
         [11.3484, 11.6103, 16.4456],
         [10.6260, 11.7745, 12.3367],
         [ 9.0527, 10.5282, 14.7742]],
        [[ 9.4411,  9.6110, 12.2855],
         [10.3203, 10.3876, 17.7437],
         [ 9.6736, 10.0658, 18.2131],
         ...,
         [11.1627, 11.3928, 16.1229],
         [10.4357, 10.9382, 11.9862],
         [ 8.5805, 10.3382, 14.6590]],
        ...,
        [[ 9.1140,  8.9192, 11.7359],
         [10.1218, 10.1559, 17.3254],
         [ 9.3190,  9.8305, 17.8847],
         ...,
         [10.9364, 11.1285, 15.7311],
         [10.2042,  9.9823, 11.5649],
         [ 8.0286, 10.1070, 14.5171]],
        [[ 9.9712, 10.7904, 13.1883],
         [10.6357, 10.7570, 18.4119],
         [10.2499, 10.4415, 18.7339],
         ...,
         [11.5226, 11.8147, 16.7493],
         [10.8048, 12.6032, 12.6695],
         [ 9.5116, 10.7067, 14.8815]],
        [[10.5652, 12.1979, 14.2171],
         [10.9802, 11.1626, 19.1472],
         [10.8978, 10.8547, 19.3018],
         ...,
         [11.9165, 12.2787, 17.4395],
         [11.2100, 14.6443, 13.4358],
         [10.6082, 11.1115, 15.1209]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9586, 1.0642, 1.0066],
         [0.9543, 0.9709, 1.0709],
         [0.9651, 0.9649, 1.0657],
         ...,
         [0.9685, 0.9983, 1.0412],
         [0.9596, 1.1661, 0.9806],
         [0.9815, 0.9698, 0.9833]],
        [[0.9255, 0.9271, 0.9346],
         [0.9356, 0.9351, 1.0215],
         [0.9288, 0.9283, 1.0279],
         ...,
         [0.9471, 0.9572, 0.9948],
         [0.9375, 0.9607, 0.9280],
         [0.9167, 0.9340, 0.9676]],
        [[0.9219, 0.9143, 0.9271],
         [0.9335, 0.9310, 1.0159],
         [0.9249, 0.9241, 1.0235],
         ...,
         [0.9446, 0.9526, 0.9895],
         [0.9350, 0.9428, 0.9223],
         [0.9105, 0.9299, 0.9657]],
        ...,
        [[0.9175, 0.8995, 0.9182],
         [0.9309, 0.9260, 1.0091],
         [0.9203, 0.9191, 1.0182],
         ...,
         [0.9416, 0.9469, 0.9832],
         [0.9319, 0.9223, 0.9154],
         [0.9032, 0.9250, 0.9634]],
        [[0.9289, 0.9396, 0.9418],
         [0.9377, 0.9389, 1.0268],
         [0.9326, 0.9322, 1.0320],
         ...,
         [0.9494, 0.9616, 0.9997],
         [0.9399, 0.9785, 0.9334],
         [0.9228, 0.9378, 0.9693]],
        [[0.9367, 0.9698, 0.9585],
         [0.9422, 0.9476, 1.0387],
         [0.9411, 0.9410, 1.0412],
         ...,
         [0.9546, 0.9716, 1.0110],
         [0.9452, 1.0223, 0.9458],
         [0.9373, 0.9465, 0.9732]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0945, 16.3468, 16.9885],
         [11.9270, 12.2530, 20.9966],
         [13.3028, 11.9108, 21.5472],
         ...,
         [12.9081, 13.8025, 18.9916],
         [11.7938, 14.6334, 15.4023],
         [12.9585, 12.0170, 15.1356]],
        [[ 9.7877,  9.9882, 12.7514],
         [10.3992, 10.5809, 17.9401],
         [ 9.7974, 10.2777, 19.0482],
         ...,
         [11.1061, 11.8364, 16.0944],
         [10.5400, 10.6373, 12.4449],
         [ 9.3635, 10.4307, 14.3777]],
        [[ 9.5346,  9.3973, 12.3065],
         [10.2243, 10.3905, 17.5941],
         [ 9.4334, 10.0918, 18.7597],
         ...,
         [10.9013, 11.6133, 15.7680],
         [10.3944, 10.2255, 12.1208],
         [ 8.9943, 10.2495, 14.2866]],
        ...,
        [[ 9.2296,  8.7123, 11.7758],
         [10.0112, 10.1588, 17.1739],
         [ 9.0003,  9.8657, 18.4078],
         ...,
         [10.6524, 11.3423, 15.3721],
         [10.2164,  9.7364, 11.7302],
         [ 8.5563, 10.0289, 14.1743]],
        [[10.0273, 10.5667, 13.1765],
         [10.5634, 10.7598, 18.2656],
         [10.1459, 10.4524, 19.3185],
         ...,
         [11.2986, 12.0461, 16.4018],
         [10.6763, 11.0322, 12.7519],
         [ 9.7177, 10.6008, 14.4624]],
        [[10.5770, 11.9645, 14.1651],
         [10.9350, 11.1654, 19.0048],
         [10.9595, 10.8485, 19.9285],
         ...,
         [11.7353, 12.5221, 17.1009],
         [10.9832, 11.9562, 13.4563],
         [10.5476, 10.9861, 14.6510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9678, 1.0608, 1.0071],
         [0.9655, 0.9730, 1.0723],
         [0.9837, 0.9656, 1.0813],
         ...,
         [0.9785, 1.0062, 1.0397],
         [0.9638, 1.0240, 0.9813],
         [0.9792, 0.9679, 0.9770]],
        [[0.9373, 0.9244, 0.9382],
         [0.9454, 0.9371, 1.0226],
         [0.9374, 0.9306, 1.0406],
         ...,
         [0.9547, 0.9641, 0.9926],
         [0.9472, 0.9383, 0.9332],
         [0.9317, 0.9339, 0.9646]],
        [[0.9339, 0.9118, 0.9310],
         [0.9430, 0.9330, 1.0170],
         [0.9326, 0.9266, 1.0359],
         ...,
         [0.9520, 0.9593, 0.9873],
         [0.9453, 0.9295, 0.9279],
         [0.9268, 0.9300, 0.9632]],
        ...,
        [[0.9299, 0.8971, 0.9223],
         [0.9402, 0.9281, 1.0101],
         [0.9269, 0.9218, 1.0302],
         ...,
         [0.9487, 0.9535, 0.9808],
         [0.9429, 0.9190, 0.9216],
         [0.9210, 0.9253, 0.9613]],
        [[0.9404, 0.9368, 0.9451],
         [0.9475, 0.9410, 1.0279],
         [0.9420, 0.9344, 1.0450],
         ...,
         [0.9572, 0.9685, 0.9976],
         [0.9490, 0.9468, 0.9382],
         [0.9363, 0.9376, 0.9660]],
        [[0.9477, 0.9668, 0.9612],
         [0.9524, 0.9497, 1.0399],
         [0.9528, 0.9429, 1.0549],
         ...,
         [0.9630, 0.9788, 1.0089],
         [0.9531, 0.9666, 0.9497],
         [0.9473, 0.9458, 0.9691]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7561, 16.1112, 16.4374],
         [12.0477, 12.2520, 20.6890],
         [14.4223, 11.8273, 22.2242],
         ...,
         [12.5973, 15.7267, 18.0160],
         [11.1735, 13.1010, 14.9978],
         [11.8162, 11.8154, 14.2787]],
        [[10.0274,  9.4421, 12.7829],
         [10.2357, 10.5799, 17.6157],
         [ 9.5539, 10.3170, 19.6162],
         ...,
         [10.1281, 12.4381, 15.0845],
         [10.6501,  9.7767, 13.0272],
         [ 9.9803, 10.3287, 13.7237]],
        [[ 9.8319,  8.8377, 12.3911],
         [10.0313, 10.3894, 17.2685],
         [ 9.0790, 10.1440, 19.3154],
         ...,
         [ 9.8582, 12.0821, 14.7565],
         [10.5870,  9.4288, 12.8020],
         [ 9.7739, 10.1582, 13.6565]],
        ...,
        [[ 9.5945,  8.1411, 11.9215],
         [ 9.7832, 10.1578, 16.8470],
         [ 8.5223,  9.9333, 18.9485],
         ...,
         [ 9.5332, 11.6543, 14.3593],
         [10.5092,  9.0142, 12.5279],
         [ 9.5236,  9.9505, 13.5736]],
        [[10.2113, 10.0366, 13.1555],
         [10.4282, 10.7588, 17.9425],
         [10.0143, 10.4794, 19.8981],
         ...,
         [10.3838, 12.7761, 15.3938],
         [10.7086, 10.1093, 13.2386],
         [10.1748, 10.4887, 13.7860]],
        [[10.6292, 11.4845, 14.0168],
         [10.8657, 11.1644, 18.6851],
         [11.1103, 10.8467, 20.5344],
         ...,
         [10.9711, 13.5548, 16.0989],
         [10.8390, 10.8837, 13.7174],
         [10.6174, 10.8505, 13.9245]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9586, 1.0615, 1.0087],
         [0.9625, 0.9788, 1.0778],
         [0.9939, 0.9697, 1.1028],
         ...,
         [0.9698, 1.0533, 1.0344],
         [0.9509, 0.9970, 0.9853],
         [0.9594, 0.9694, 0.9736]],
        [[0.9358, 0.9185, 0.9492],
         [0.9385, 0.9429, 1.0278],
         [0.9295, 0.9373, 1.0604],
         ...,
         [0.9371, 0.9828, 0.9867],
         [0.9440, 0.9257, 0.9532],
         [0.9352, 0.9375, 0.9645]],
        [[0.9332, 0.9056, 0.9429],
         [0.9358, 0.9388, 1.0222],
         [0.9233, 0.9336, 1.0555],
         ...,
         [0.9336, 0.9751, 0.9813],
         [0.9432, 0.9182, 0.9495],
         [0.9324, 0.9339, 0.9634]],
        ...,
        [[0.9301, 0.8906, 0.9352],
         [0.9326, 0.9339, 1.0153],
         [0.9159, 0.9291, 1.0495],
         ...,
         [0.9293, 0.9660, 0.9749],
         [0.9422, 0.9093, 0.9451],
         [0.9291, 0.9294, 0.9621]],
        [[0.9382, 0.9313, 0.9553],
         [0.9411, 0.9468, 1.0332],
         [0.9356, 0.9408, 1.0650],
         ...,
         [0.9405, 0.9900, 0.9917],
         [0.9448, 0.9328, 0.9566],
         [0.9377, 0.9410, 0.9656]],
        [[0.9437, 0.9623, 0.9693],
         [0.9469, 0.9555, 1.0452],
         [0.9501, 0.9486, 1.0753],
         ...,
         [0.9483, 1.0067, 1.0032],
         [0.9465, 0.9494, 0.9644],
         [0.9436, 0.9487, 0.9678]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9632, 16.4306, 16.7854],
         [11.9681, 12.2526, 20.8878],
         [13.6876, 11.8714, 21.7927],
         ...,
         [12.6121, 14.2770, 18.5999],
         [11.5437, 11.1219, 15.2349],
         [12.4805, 11.9003, 14.7821]],
        [[ 9.8738,  9.7463, 12.7623],
         [10.3383, 10.5805, 17.8195],
         [ 9.7002, 10.2931, 19.2556],
         ...,
         [10.7370, 12.0429, 15.7089],
         [10.5791,  9.8054, 12.6516],
         [ 9.5726, 10.3913, 14.1309]],
        [[ 9.6420,  9.1361, 12.3367],
         [10.1526, 10.3901, 17.4724],
         [ 9.2954, 10.1129, 18.9628],
         ...,
         [10.5251, 11.7919, 15.3838],
         [10.4655,  9.6536, 12.3639],
         [ 9.2633, 10.2183, 14.0523]],
        ...,
        [[ 9.3617,  8.4316, 11.8281],
         [ 9.9268, 10.1585, 17.0511],
         [ 8.8164,  9.8937, 18.6056],
         ...,
         [10.2680, 11.4876, 14.9897],
         [10.3261,  9.4686, 12.0160],
         [ 8.8934, 10.0076, 13.9553]],
        [[10.0928, 10.3457, 13.1683],
         [10.5127, 10.7594, 18.1460],
         [10.0895, 10.4623, 19.5299],
         ...,
         [10.9363, 12.2795, 16.0152],
         [10.6852,  9.9476, 12.9232],
         [ 9.8672, 10.5536, 14.2038]],
        [[10.5934, 11.8021, 14.1105],
         [10.9081, 11.1650, 18.8878],
         [11.0049, 10.8456, 20.1492],
         ...,
         [11.3894, 12.8179, 16.7122],
         [10.9229, 10.2687, 13.5431],
         [10.5499, 10.9207, 14.3661]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9679, 1.0647, 1.0077],
         [0.9680, 0.9751, 1.0744],
         [0.9907, 0.9670, 1.0892],
         ...,
         [0.9765, 1.0185, 1.0372],
         [0.9624, 0.9509, 0.9825],
         [0.9747, 0.9676, 0.9751]],
        [[0.9403, 0.9214, 0.9423],
         [0.9464, 0.9393, 1.0245],
         [0.9380, 0.9331, 1.0479],
         ...,
         [0.9517, 0.9706, 0.9902],
         [0.9496, 0.9226, 0.9405],
         [0.9363, 0.9352, 0.9645]],
        [[0.9372, 0.9083, 0.9354],
         [0.9440, 0.9352, 1.0189],
         [0.9327, 0.9292, 1.0431],
         ...,
         [0.9489, 0.9652, 0.9849],
         [0.9481, 0.9194, 0.9358],
         [0.9322, 0.9315, 0.9633]],
        ...,
        [[0.9335, 0.8932, 0.9271],
         [0.9410, 0.9302, 1.0120],
         [0.9263, 0.9245, 1.0373],
         ...,
         [0.9455, 0.9587, 0.9785],
         [0.9463, 0.9154, 0.9301],
         [0.9273, 0.9270, 0.9617]],
        [[0.9432, 0.9342, 0.9489],
         [0.9487, 0.9431, 1.0299],
         [0.9432, 0.9367, 1.0524],
         ...,
         [0.9543, 0.9757, 0.9952],
         [0.9510, 0.9257, 0.9449],
         [0.9402, 0.9387, 0.9657]],
        [[0.9498, 0.9655, 0.9642],
         [0.9540, 0.9518, 1.0419],
         [0.9552, 0.9450, 1.0624],
         ...,
         [0.9603, 0.9872, 1.0065],
         [0.9542, 0.9326, 0.9550],
         [0.9492, 0.9466, 0.9684]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7513, 16.1566, 16.4513],
         [12.0112, 12.2689, 20.8563],
         [13.8364, 11.8609, 22.3653],
         ...,
         [12.2500, 13.0203, 18.2274],
         [11.3173, 12.1568, 15.6063],
         [12.2513, 11.8411, 14.6075]],
        [[10.0312,  9.4044, 12.8524],
         [10.2308, 10.5991, 17.7797],
         [ 9.6023, 10.2978, 19.6946],
         ...,
         [10.4208, 11.3387, 15.0069],
         [10.6562,  9.9645, 13.7578],
         [ 9.6941, 10.3685, 13.9360]],
        [[ 9.8366,  8.7950, 12.4655],
         [10.0296, 10.4089, 17.4319],
         [ 9.1777, 10.1192, 19.3869],
         ...,
         [10.2143, 11.1462, 14.6501],
         [10.5771,  9.7222, 13.5448],
         [ 9.4172, 10.1994, 13.8550]],
        ...,
        [[ 9.6003,  8.0933, 12.0015],
         [ 9.7854, 10.1776, 17.0096],
         [ 8.6768,  9.9019, 19.0118],
         ...,
         [ 9.9636, 10.9119, 14.2189],
         [10.4797,  9.4297, 13.2850],
         [ 9.0845,  9.9934, 13.7552]],
        [[10.2143, 10.0044, 13.2201],
         [10.4201, 10.7779, 18.1070],
         [10.0116, 10.4655, 19.9829],
         ...,
         [10.6152, 11.5193, 15.3441],
         [10.7298, 10.1936, 13.9575],
         [ 9.9570, 10.5271, 14.0111]],
        [[10.6302, 11.4672, 14.0694],
         [10.8504, 11.1829, 18.8506],
         [10.9778, 10.8452, 20.6341],
         ...,
         [11.0571, 11.9281, 16.1152],
         [10.8939, 10.7178, 14.4083],
         [10.5626, 10.8856, 14.1784]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9625, 1.0627, 1.0079],
         [0.9660, 0.9794, 1.0796],
         [0.9901, 0.9706, 1.1041],
         ...,
         [0.9691, 0.9955, 1.0368],
         [0.9568, 0.9770, 0.9942],
         [0.9691, 0.9702, 0.9779]],
        [[0.9398, 0.9180, 0.9494],
         [0.9424, 0.9436, 1.0295],
         [0.9341, 0.9371, 1.0607],
         ...,
         [0.9449, 0.9594, 0.9844],
         [0.9480, 0.9300, 0.9641],
         [0.9353, 0.9386, 0.9670]],
        [[0.9372, 0.9049, 0.9431],
         [0.9398, 0.9395, 1.0239],
         [0.9285, 0.9333, 1.0557],
         ...,
         [0.9422, 0.9553, 0.9786],
         [0.9470, 0.9248, 0.9607],
         [0.9317, 0.9350, 0.9657]],
        ...,
        [[0.9341, 0.8898, 0.9356],
         [0.9365, 0.9345, 1.0170],
         [0.9219, 0.9286, 1.0496],
         ...,
         [0.9389, 0.9503, 0.9716],
         [0.9457, 0.9185, 0.9564],
         [0.9273, 0.9306, 0.9641]],
        [[0.9422, 0.9308, 0.9554],
         [0.9449, 0.9474, 1.0349],
         [0.9395, 0.9407, 1.0654],
         ...,
         [0.9475, 0.9633, 0.9899],
         [0.9490, 0.9349, 0.9674],
         [0.9388, 0.9420, 0.9682]],
        [[0.9477, 0.9622, 0.9692],
         [0.9506, 0.9561, 1.0470],
         [0.9523, 0.9489, 1.0760],
         ...,
         [0.9533, 0.9721, 1.0025],
         [0.9512, 0.9461, 0.9747],
         [0.9468, 0.9497, 0.9710]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7204, 16.0262, 16.4205],
         [11.9310, 12.2714, 20.8090],
         [13.2310, 11.8795, 22.1461],
         ...,
         [11.9837, 12.3866, 18.4628],
         [11.6095, 12.8096, 16.1448],
         [12.6447, 11.8951, 14.8748]],
        [[10.0564,  9.3334, 12.9434],
         [10.2440, 10.6021, 17.7284],
         [ 9.6844, 10.2897, 19.5227],
         ...,
         [10.6499, 10.7696, 14.9871],
         [10.4351, 10.4418, 14.6755],
         [ 9.4948, 10.3895, 14.0376]],
        [[ 9.8676,  8.7293, 12.5678],
         [10.0525, 10.4120, 17.3803],
         [ 9.3175, 10.1083, 19.2203],
         ...,
         [10.4954, 10.5847, 14.6052],
         [10.2983, 10.1809, 14.5031],
         [ 9.1640, 10.2169, 13.9373]],
        ...,
        [[ 9.6381,  8.0335, 12.1166],
         [ 9.8198, 10.1806, 16.9577],
         [ 8.8813,  9.8876, 18.8516],
         ...,
         [10.3068, 10.3596, 14.1445],
         [10.1309,  9.8662, 14.2921],
         [ 8.7693, 10.0067, 13.8138]],
        [[10.2339,  9.9283, 13.3002],
         [10.4241, 10.7808, 18.0561],
         [10.0361, 10.4601, 19.8060],
         ...,
         [10.7945, 10.9431, 15.3487],
         [10.5631, 10.6885, 14.8364],
         [ 9.8108, 10.5515, 14.1308]],
        [[10.6369, 11.3786, 14.1228],
         [10.8327, 11.1858, 18.8005],
         [10.8577, 10.8460, 20.4459],
         ...,
         [11.1205, 11.3361, 16.1776],
         [10.8510, 11.2539, 15.1977],
         [10.5459, 10.9178, 14.3388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9671, 1.0608, 1.0072],
         [0.9699, 0.9803, 1.0786],
         [0.9871, 0.9719, 1.1004],
         ...,
         [0.9706, 0.9828, 1.0405],
         [0.9656, 0.9918, 1.0028],
         [0.9793, 0.9722, 0.9821]],
        [[0.9451, 0.9173, 0.9507],
         [0.9476, 0.9445, 1.0285],
         [0.9402, 0.9378, 1.0577],
         ...,
         [0.9530, 0.9481, 0.9839],
         [0.9501, 0.9411, 0.9789],
         [0.9377, 0.9400, 0.9685]],
        [[0.9426, 0.9044, 0.9446],
         [0.9451, 0.9404, 1.0229],
         [0.9354, 0.9339, 1.0528],
         ...,
         [0.9509, 0.9441, 0.9777],
         [0.9483, 0.9355, 0.9761],
         [0.9333, 0.9363, 0.9669]],
        ...,
        [[0.9396, 0.8894, 0.9372],
         [0.9420, 0.9355, 1.0160],
         [0.9296, 0.9292, 1.0468],
         ...,
         [0.9484, 0.9393, 0.9702],
         [0.9461, 0.9287, 0.9726],
         [0.9281, 0.9317, 0.9649]],
        [[0.9475, 0.9301, 0.9565],
         [0.9500, 0.9483, 1.0338],
         [0.9448, 0.9415, 1.0623],
         ...,
         [0.9549, 0.9518, 0.9898],
         [0.9518, 0.9464, 0.9815],
         [0.9419, 0.9434, 0.9700]],
        [[0.9528, 0.9612, 0.9699],
         [0.9554, 0.9570, 1.0460],
         [0.9557, 0.9497, 1.0727],
         ...,
         [0.9592, 0.9603, 1.0033],
         [0.9556, 0.9585, 0.9874],
         [0.9516, 0.9513, 0.9734]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5575, 14.2282, 16.1448],
         [11.9366, 12.2528, 20.6155],
         [12.6941, 11.8712, 20.6932],
         ...,
         [11.7032, 12.5795, 18.4885],
         [11.7879, 13.3989, 16.8648],
         [13.2610, 12.0390, 15.2942]],
        [[10.2004,  9.1538, 13.1207],
         [10.2132, 10.5807, 17.5471],
         [ 9.8148, 10.2932, 18.4612],
         ...,
         [10.4083, 11.0157, 15.3764],
         [10.0041, 10.8692, 16.1385],
         [ 9.2545, 10.4391, 14.2822]],
        [[10.0438,  8.6674, 12.7881],
         [10.0180, 10.3903, 17.2006],
         [ 9.5072, 10.1131, 18.2023],
         ...,
         [10.2583, 10.8361, 15.0295],
         [ 9.8029, 10.5913, 16.0508],
         [ 8.8514, 10.2565, 14.1616]],
        ...,
        [[ 9.8529,  8.0995, 12.3870],
         [ 9.7808, 10.1587, 16.7799],
         [ 9.1388,  9.8938, 17.8858],
         ...,
         [10.0752, 10.6173, 14.6099],
         [ 9.5589, 10.2562, 15.9426],
         [ 8.3755, 10.0342, 14.0134]],
        [[10.3470,  9.6270, 13.4354],
         [10.3968, 10.7597, 17.8733],
         [10.1077, 10.4624, 18.7036],
         ...,
         [10.5487, 11.1841, 15.7037],
         [10.1935, 11.1322, 16.2199],
         [ 9.6428, 10.6106, 14.3943]],
        [[10.6782, 10.7597, 14.1569],
         [10.8138, 11.1652, 18.6147],
         [10.7851, 10.8455, 19.2498],
         ...,
         [10.8653, 11.5648, 16.4509],
         [10.6241, 11.7354, 16.4009],
         [10.5585, 10.9991, 14.6450]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9569, 1.0255, 1.0065],
         [0.9620, 0.9831, 1.0792],
         [0.9720, 0.9749, 1.0805],
         ...,
         [0.9589, 0.9901, 1.0446],
         [0.9600, 1.0077, 1.0182],
         [0.9795, 0.9785, 0.9926]],
        [[0.9390, 0.9167, 0.9573],
         [0.9392, 0.9473, 1.0293],
         [0.9339, 0.9411, 1.0442],
         ...,
         [0.9418, 0.9566, 0.9940],
         [0.9364, 0.9534, 1.0064],
         [0.9265, 0.9442, 0.9762]],
        [[0.9369, 0.9062, 0.9519],
         [0.9366, 0.9432, 1.0237],
         [0.9299, 0.9372, 1.0399],
         ...,
         [0.9398, 0.9527, 0.9883],
         [0.9338, 0.9475, 1.0050],
         [0.9212, 0.9403, 0.9742]],
        ...,
        [[0.9344, 0.8940, 0.9454],
         [0.9335, 0.9382, 1.0168],
         [0.9250, 0.9325, 1.0348],
         ...,
         [0.9374, 0.9480, 0.9815],
         [0.9305, 0.9403, 1.0032],
         [0.9149, 0.9355, 0.9718]],
        [[0.9409, 0.9268, 0.9624],
         [0.9416, 0.9511, 1.0346],
         [0.9378, 0.9447, 1.0481],
         ...,
         [0.9436, 0.9602, 0.9993],
         [0.9389, 0.9591, 1.0077],
         [0.9316, 0.9479, 0.9780]],
        [[0.9453, 0.9511, 0.9741],
         [0.9471, 0.9598, 1.0467],
         [0.9467, 0.9529, 1.0570],
         ...,
         [0.9478, 0.9684, 1.0115],
         [0.9446, 0.9720, 1.0106],
         [0.9437, 0.9562, 0.9821]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.3126, 10.9764, 15.7386],
         [12.0594, 12.2286, 20.4189],
         [12.4148, 11.8684, 19.6168],
         ...,
         [11.6433, 12.6714, 18.1971],
         [12.3279, 12.8691, 18.3002],
         [13.5992, 12.1187, 15.5290]],
        [[10.4803,  9.1834, 13.5700],
         [10.0667, 10.5559, 17.3747],
         [ 9.8484, 10.2944, 17.6654],
         ...,
         [10.1221, 11.1006, 15.3828],
         [ 9.6516, 10.6849, 17.8445],
         [ 9.1488, 10.4761, 14.4107]],
        [[10.3816,  8.9829, 13.3232],
         [ 9.8442, 10.3655, 17.0309],
         [ 9.5701, 10.1147, 17.4377],
         ...,
         [ 9.9481, 10.9202, 15.0662],
         [ 9.3636, 10.4417, 17.7889],
         [ 8.7107, 10.2889, 14.2780]],
        ...,
        [[10.2604,  8.7401, 13.0231],
         [ 9.5748, 10.1338, 16.6136],
         [ 9.2355,  9.8960, 17.1592],
         ...,
         [ 9.7364, 10.7004, 14.6822],
         [ 9.0180, 10.1476, 17.7201],
         [ 8.1960, 10.0612, 14.1150]],
        [[10.5722,  9.3725, 13.8018],
         [10.2767, 10.7349, 17.6982],
         [10.1125, 10.4632, 17.8782],
         ...,
         [10.2853, 11.2697, 15.6810],
         [ 9.9254, 10.9145, 17.8960],
         [ 9.5727, 10.6520, 14.5343]],
        [[10.7780,  9.8037, 14.3276],
         [10.7556, 11.1406, 18.4337],
         [10.7207, 10.8454, 18.3569],
         ...,
         [10.6550, 11.6522, 16.3597],
         [10.5573, 11.4387, 18.0101],
         [10.5792, 11.0505, 14.8109]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9500, 0.9624, 1.0045],
         [0.9599, 0.9892, 1.0806],
         [0.9646, 0.9815, 1.0675],
         ...,
         [0.9544, 0.9987, 1.0445],
         [0.9634, 1.0030, 1.0461],
         [0.9802, 0.9869, 1.0011]],
        [[0.9390, 0.9239, 0.9692],
         [0.9336, 0.9534, 1.0311],
         [0.9307, 0.9477, 1.0358],
         ...,
         [0.9343, 0.9650, 0.9987],
         [0.9281, 0.9561, 1.0387],
         [0.9214, 0.9516, 0.9829]],
        [[0.9377, 0.9196, 0.9652],
         [0.9306, 0.9493, 1.0255],
         [0.9270, 0.9439, 1.0321],
         ...,
         [0.9320, 0.9612, 0.9935],
         [0.9243, 0.9509, 1.0378],
         [0.9156, 0.9476, 0.9807]],
        ...,
        [[0.9361, 0.9144, 0.9603],
         [0.9271, 0.9443, 1.0187],
         [0.9226, 0.9392, 1.0276],
         ...,
         [0.9292, 0.9565, 0.9873],
         [0.9197, 0.9446, 1.0367],
         [0.9088, 0.9427, 0.9781]],
        [[0.9402, 0.9280, 0.9730],
         [0.9363, 0.9572, 1.0363],
         [0.9342, 0.9514, 1.0393],
         ...,
         [0.9365, 0.9687, 1.0035],
         [0.9317, 0.9610, 1.0396],
         [0.9270, 0.9554, 0.9849]],
        [[0.9430, 0.9372, 0.9815],
         [0.9427, 0.9659, 1.0483],
         [0.9422, 0.9596, 1.0471],
         ...,
         [0.9413, 0.9769, 1.0146],
         [0.9400, 0.9723, 1.0414],
         [0.9403, 0.9640, 0.9894]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.1569, 11.8689, 16.7224],
         [12.3143, 12.1848, 20.0573],
         [12.3937, 11.8446, 18.7106],
         ...,
         [11.9877, 12.8280, 17.6333],
         [13.7881, 11.8211, 20.7400],
         [14.1046, 12.2141, 15.8626]],
        [[10.8352, 10.2914, 15.2568],
         [ 9.8131, 10.5185, 17.0723],
         [ 9.7106, 10.3061, 17.0270],
         ...,
         [ 9.8572, 11.2192, 15.2614],
         [ 9.0959, 10.3223, 19.2347],
         [ 9.0156, 10.5425, 14.6136]],
        [[10.7960, 10.1114, 15.0846],
         [ 9.5412, 10.3288, 16.7352],
         [ 9.4217, 10.1301, 16.8294],
         ...,
         [ 9.6213, 11.0346, 14.9909],
         [ 8.6394, 10.1505, 19.0561],
         [ 8.5298, 10.3521, 14.4660]],
        ...,
        [[10.7476,  9.8922, 14.8735],
         [ 9.2141, 10.0980, 16.3259],
         [ 9.0751,  9.9158, 16.5873],
         ...,
         [ 9.3363, 10.8097, 14.6618],
         [ 8.1044,  9.9412, 18.8367],
         [ 7.9629, 10.1207, 14.2849]],
        [[10.8715, 10.4605, 15.4176],
         [10.0711, 10.6968, 17.3896],
         [ 9.9852, 10.4713, 17.2115],
         ...,
         [10.0801, 11.3923, 15.5155],
         [ 9.5388, 10.4835, 19.4010],
         [ 9.4888, 10.7213, 14.7512]],
        [[10.9520, 10.8436, 15.7784],
         [10.6646, 11.1009, 18.1108],
         [10.6188, 10.8452, 17.6257],
         ...,
         [10.5900, 11.7839, 16.0911],
         [10.5938, 10.8481, 19.7732],
         [10.6225, 11.1267, 15.0595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9432, 0.9983, 1.0228],
         [0.9585, 1.0051, 1.0770],
         [0.9595, 0.9978, 1.0551],
         ...,
         [0.9542, 1.0188, 1.0376],
         [0.9780, 0.9973, 1.0881],
         [0.9821, 1.0057, 1.0088]],
        [[0.9389, 0.9645, 0.9989],
         [0.9254, 0.9693, 1.0284],
         [0.9241, 0.9648, 1.0277],
         ...,
         [0.9260, 0.9844, 0.9990],
         [0.9160, 0.9651, 1.0636],
         [0.9149, 0.9698, 0.9885]],
        [[0.9384, 0.9606, 0.9961],
         [0.9218, 0.9653, 1.0230],
         [0.9203, 0.9610, 1.0245],
         ...,
         [0.9229, 0.9804, 0.9946],
         [0.9099, 0.9614, 1.0607],
         [0.9085, 0.9658, 0.9861]],
        ...,
        [[0.9378, 0.9559, 0.9927],
         [0.9175, 0.9603, 1.0163],
         [0.9157, 0.9564, 1.0206],
         ...,
         [0.9191, 0.9756, 0.9892],
         [0.9029, 0.9569, 1.0571],
         [0.9010, 0.9608, 0.9831]],
        [[0.9394, 0.9681, 1.0015],
         [0.9288, 0.9731, 1.0336],
         [0.9277, 0.9683, 1.0307],
         ...,
         [0.9290, 0.9881, 1.0031],
         [0.9218, 0.9686, 1.0663],
         [0.9211, 0.9737, 0.9907]],
        [[0.9405, 0.9763, 1.0074],
         [0.9367, 0.9818, 1.0453],
         [0.9361, 0.9763, 1.0374],
         ...,
         [0.9357, 0.9965, 1.0125],
         [0.9358, 0.9764, 1.0724],
         [0.9361, 0.9824, 0.9957]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.2578, 11.3099, 15.8235],
         [12.1217, 12.2172, 20.3225],
         [12.4061, 11.8613, 19.3685],
         ...,
         [11.7301, 12.7091, 18.0486],
         [12.6657, 12.4073, 18.8885],
         [13.7304, 12.1459, 15.6174]],
        [[10.5748,  9.3368, 13.9998],
         [ 9.9967, 10.5453, 17.2921],
         [ 9.8110, 10.2976, 17.4892],
         ...,
         [10.0484, 11.1317, 15.3494],
         [ 9.4853, 10.5205, 18.2045],
         [ 9.1116, 10.4919, 14.4647]],
        [[10.4932,  9.1179, 13.7892],
         [ 9.7610, 10.3549, 16.9499],
         [ 9.5300, 10.1190, 17.2696],
         ...,
         [ 9.8578, 10.9505, 15.0446],
         [ 9.1518, 10.3078, 18.1215],
         [ 8.6606, 10.3035, 14.3281]],
        ...,
        [[10.3927,  8.8532, 13.5322],
         [ 9.4762, 10.1234, 16.5345],
         [ 9.1925,  9.9016, 17.0009],
         ...,
         [ 9.6262, 10.7298, 14.6748],
         [ 8.7541, 10.0498, 18.0191],
         [ 8.1318, 10.0743, 14.1603]],
        [[10.6507,  9.5437, 14.1971],
         [10.2194, 10.7241, 17.6142],
         [10.0777, 10.4654, 17.6944],
         ...,
         [10.2277, 11.3015, 15.6362],
         [ 9.8040, 10.7207, 18.2814],
         [ 9.5488, 10.6689, 14.5920]],
        [[10.8201, 10.0164, 14.6424],
         [10.7284, 11.1296, 18.3463],
         [10.6922, 10.8452, 18.1557],
         ...,
         [10.6347, 11.6856, 16.2882],
         [10.5456, 11.1761, 18.4522],
         [10.5891, 11.0702, 14.8769]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9480, 0.9733, 1.0070],
         [0.9594, 0.9928, 1.0802],
         [0.9632, 0.9851, 1.0647],
         ...,
         [0.9542, 1.0033, 1.0432],
         [0.9666, 0.9968, 1.0568],
         [0.9807, 0.9912, 1.0036]],
        [[0.9390, 0.9310, 0.9773],
         [0.9313, 0.9569, 1.0309],
         [0.9289, 0.9516, 1.0341],
         ...,
         [0.9320, 0.9695, 0.9993],
         [0.9246, 0.9564, 1.0457],
         [0.9196, 0.9558, 0.9849]],
        [[0.9379, 0.9263, 0.9739],
         [0.9282, 0.9528, 1.0253],
         [0.9252, 0.9478, 1.0305],
         ...,
         [0.9295, 0.9656, 0.9943],
         [0.9202, 0.9518, 1.0444],
         [0.9137, 0.9517, 0.9827]],
        ...,
        [[0.9366, 0.9206, 0.9697],
         [0.9244, 0.9479, 1.0186],
         [0.9207, 0.9431, 1.0261],
         ...,
         [0.9264, 0.9609, 0.9883],
         [0.9149, 0.9463, 1.0427],
         [0.9067, 0.9468, 0.9799]],
        [[0.9400, 0.9354, 0.9805],
         [0.9343, 0.9607, 1.0361],
         [0.9324, 0.9552, 1.0374],
         ...,
         [0.9344, 0.9731, 1.0039],
         [0.9288, 0.9607, 1.0470],
         [0.9254, 0.9596, 0.9870]],
        [[0.9422, 0.9456, 0.9878],
         [0.9410, 0.9694, 1.0480],
         [0.9405, 0.9633, 1.0449],
         ...,
         [0.9398, 0.9814, 1.0146],
         [0.9386, 0.9704, 1.0498],
         [0.9392, 0.9682, 0.9916]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.3485, 12.7819, 18.6408],
         [12.3330, 12.1898, 20.1483],
         [12.6622, 11.8409, 19.2109],
         ...,
         [11.9734, 12.6043, 17.6083],
         [13.2116, 11.8694, 18.9301],
         [13.5967, 12.1432, 15.6123]],
        [[10.5790, 10.4989, 16.4971],
         [ 9.7893, 10.5224, 17.1377],
         [ 9.5901, 10.3081, 17.3891],
         ...,
         [ 9.8668, 11.0401, 15.1323],
         [ 9.2712, 10.2935, 18.2242],
         [ 9.1495, 10.4902, 14.4844]],
        [[10.4875, 10.2462, 16.2495],
         [ 9.5134, 10.3325, 16.7978],
         [ 9.2659, 10.1328, 17.1759],
         ...,
         [ 9.6333, 10.8605, 14.8511],
         [ 8.8735, 10.1136, 18.1387],
         [ 8.7116, 10.3019, 14.3505]],
        ...,
        [[10.3749,  9.9411, 15.9474],
         [ 9.1816, 10.1016, 16.3853],
         [ 8.8786,  9.9192, 16.9149],
         ...,
         [ 9.3511, 10.6416, 14.5093],
         [ 8.4035,  9.8946, 18.0331],
         [ 8.1972, 10.0729, 14.1861]],
        [[10.6642, 10.7376, 16.7291],
         [10.0512, 10.7007, 17.4576],
         [ 9.8996, 10.4727, 17.5882],
         ...,
         [10.0875, 11.2086, 15.3967],
         [ 9.6542, 10.4624, 18.3035],
         [ 9.5732, 10.6671, 14.6090]],
        [[10.8548, 11.2839, 17.2525],
         [10.6541, 11.1052, 18.1849],
         [10.6183, 10.8453, 18.0358],
         ...,
         [10.5920, 11.5895, 15.9965],
         [10.5562, 10.8451, 18.4798],
         [10.5790, 11.0681, 14.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9505, 1.0177, 1.0534],
         [0.9635, 1.0050, 1.0779],
         [0.9679, 0.9976, 1.0626],
         ...,
         [0.9588, 1.0139, 1.0366],
         [0.9751, 0.9982, 1.0581],
         [0.9802, 1.0040, 1.0041]],
        [[0.9404, 0.9688, 1.0185],
         [0.9299, 0.9693, 1.0289],
         [0.9273, 0.9647, 1.0330],
         ...,
         [0.9309, 0.9804, 0.9963],
         [0.9231, 0.9644, 1.0466],
         [0.9215, 0.9686, 0.9858]],
        [[0.9391, 0.9634, 1.0145],
         [0.9263, 0.9652, 1.0234],
         [0.9230, 0.9609, 1.0295],
         ...,
         [0.9279, 0.9765, 0.9917],
         [0.9178, 0.9605, 1.0452],
         [0.9157, 0.9646, 0.9836]],
        ...,
        [[0.9377, 0.9568, 1.0095],
         [0.9219, 0.9603, 1.0167],
         [0.9179, 0.9564, 1.0253],
         ...,
         [0.9241, 0.9718, 0.9862],
         [0.9116, 0.9558, 1.0435],
         [0.9089, 0.9596, 0.9809]],
        [[0.9415, 0.9739, 1.0223],
         [0.9334, 0.9731, 1.0341],
         [0.9314, 0.9682, 1.0362],
         ...,
         [0.9339, 0.9840, 1.0006],
         [0.9281, 0.9680, 1.0479],
         [0.9271, 0.9724, 0.9878]],
        [[0.9440, 0.9856, 1.0308],
         [0.9414, 0.9818, 1.0459],
         [0.9409, 0.9762, 1.0435],
         ...,
         [0.9405, 0.9922, 1.0103],
         [0.9401, 0.9762, 1.0507],
         [0.9404, 0.9810, 0.9923]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9472, 16.4838, 28.8352],
         [12.4904, 12.1641, 19.8951],
         [12.9246, 11.8159, 18.8286],
         ...,
         [12.2539, 12.4422, 17.2470],
         [13.2378, 12.9731, 17.3733],
         [13.0379, 12.0616, 15.3591]],
        [[10.1708, 13.0830, 24.3724],
         [ 9.6071, 10.5037, 16.9275],
         [ 9.3767, 10.3281, 17.1343],
         ...,
         [ 9.6926, 10.8520, 15.0579],
         [ 9.2623, 10.0660, 16.6935],
         [ 9.3334, 10.4485, 14.3927]],
        [[ 9.9701, 12.7141, 23.8704],
         [ 9.3000, 10.3146, 16.5924],
         [ 9.0115, 10.1575, 16.9354],
         ...,
         [ 9.4153, 10.6698, 14.8071],
         [ 8.8617,  9.7548, 16.6112],
         [ 8.9550, 10.2644, 14.2774]],
        ...,
        [[ 9.7266, 12.2706, 23.2616],
         [ 8.9324, 10.0846, 16.1857],
         [ 8.5779,  9.9496, 16.6918],
         ...,
         [ 9.0821, 10.4480, 14.5014],
         [ 8.3886,  9.3818, 16.5096],
         [ 8.5067, 10.0405, 14.1356]],
        [[10.3597, 13.4331, 24.8453],
         [ 9.8996, 10.6814, 17.2429],
         [ 9.7270, 10.4882, 17.3199],
         ...,
         [ 9.9559, 11.0229, 15.2934],
         [ 9.6481, 10.3622, 16.7698],
         [ 9.6968, 10.6213, 14.5000]],
        [[10.7889, 14.2391, 25.9215],
         [10.5770, 11.0841, 17.9599],
         [10.5469, 10.8503, 17.7367],
         ...,
         [10.5624, 11.4097, 15.8259],
         [10.5574, 11.0468, 16.9395],
         [10.5497, 11.0130, 14.7396]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.1149, 1.2183],
         [0.9695, 1.0222, 1.0729],
         [0.9753, 1.0148, 1.0555],
         ...,
         [0.9664, 1.0282, 1.0298],
         [0.9794, 1.0396, 1.0319],
         [0.9768, 1.0200, 0.9991]],
        [[0.9389, 1.0419, 1.1457],
         [0.9314, 0.9866, 1.0246],
         [0.9284, 0.9829, 1.0280],
         ...,
         [0.9326, 0.9941, 0.9942],
         [0.9269, 0.9773, 1.0208],
         [0.9278, 0.9855, 0.9834]],
        [[0.9362, 1.0340, 1.1375],
         [0.9274, 0.9826, 1.0192],
         [0.9236, 0.9792, 1.0248],
         ...,
         [0.9289, 0.9902, 0.9901],
         [0.9216, 0.9706, 1.0195],
         [0.9228, 0.9815, 0.9815]],
        ...,
        [[0.9330, 1.0245, 1.1276],
         [0.9225, 0.9777, 1.0126],
         [0.9178, 0.9748, 1.0208],
         ...,
         [0.9245, 0.9854, 0.9852],
         [0.9153, 0.9626, 1.0178],
         [0.9169, 0.9767, 0.9792]],
        [[0.9414, 1.0495, 1.1534],
         [0.9353, 0.9904, 1.0298],
         [0.9330, 0.9863, 1.0310],
         ...,
         [0.9360, 0.9978, 0.9980],
         [0.9320, 0.9836, 1.0221],
         [0.9326, 0.9892, 0.9851]],
        [[0.9471, 1.0667, 1.1709],
         [0.9443, 0.9991, 1.0414],
         [0.9439, 0.9941, 1.0378],
         ...,
         [0.9441, 1.0061, 1.0067],
         [0.9440, 0.9983, 1.0248],
         [0.9439, 0.9976, 0.9890]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4356, 13.2245, 19.9404],
         [12.3561, 12.1857, 20.1074],
         [12.7012, 11.8352, 19.1484],
         ...,
         [12.0167, 12.5713, 17.5507],
         [13.2159, 11.9604, 18.6278],
         [13.5010, 12.1305, 15.5705]],
        [[10.5088, 10.8027, 17.5184],
         [ 9.7592, 10.5192, 17.1033],
         [ 9.5546, 10.3115, 17.3472],
         ...,
         [ 9.8378, 11.0073, 15.1199],
         [ 9.2698, 10.2608, 17.9695],
         [ 9.1779, 10.4827, 14.4694]],
        [[10.3994, 10.5356, 17.2398],
         [ 9.4783, 10.3295, 16.7641],
         [ 9.2237, 10.1371, 17.1364],
         ...,
         [ 9.5971, 10.8277, 14.8434],
         [ 8.8716, 10.0680, 17.8897],
         [ 8.7497, 10.2949, 14.3386]],
        ...,
        [[10.2653, 10.2131, 16.9002],
         [ 9.1408, 10.0987, 16.3524],
         [ 8.8290,  9.9247, 16.8782],
         ...,
         [ 9.3066, 10.6089, 14.5073],
         [ 8.4011,  9.8337, 17.7911],
         [ 8.2459, 10.0666, 14.1779]],
        [[10.6108, 11.0553, 17.7796],
         [10.0259, 10.6975, 17.4225],
         [ 9.8705, 10.4752, 17.5442],
         ...,
         [10.0653, 11.1757, 15.3797],
         [ 9.6532, 10.4421, 18.0436],
         [ 9.5918, 10.6591, 14.5912]],
        [[10.8394, 11.6339, 18.3698],
         [10.6406, 11.1017, 18.1482],
         [10.6052, 10.8457, 17.9868],
         ...,
         [10.5862, 11.5565, 15.9690],
         [10.5564, 10.8536, 18.2080],
         [10.5724, 11.0588, 14.8636]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9527, 1.0304, 1.0743],
         [0.9648, 1.0081, 1.0770],
         [0.9694, 1.0006, 1.0614],
         ...,
         [0.9604, 1.0164, 1.0354],
         [0.9762, 1.0033, 1.0529],
         [0.9800, 1.0069, 1.0032]],
        [[0.9404, 0.9785, 1.0349],
         [0.9305, 0.9724, 1.0281],
         [0.9278, 0.9679, 1.0321],
         ...,
         [0.9316, 0.9829, 0.9959],
         [0.9241, 0.9668, 1.0422],
         [0.9228, 0.9716, 0.9853]],
        [[0.9390, 0.9727, 1.0303],
         [0.9268, 0.9683, 1.0226],
         [0.9234, 0.9642, 1.0287],
         ...,
         [0.9284, 0.9790, 0.9914],
         [0.9188, 0.9627, 1.0409],
         [0.9172, 0.9676, 0.9831]],
        ...,
        [[0.9372, 0.9658, 1.0248],
         [0.9224, 0.9634, 1.0159],
         [0.9182, 0.9596, 1.0245],
         ...,
         [0.9245, 0.9743, 0.9859],
         [0.9126, 0.9577, 1.0393],
         [0.9105, 0.9627, 0.9805]],
        [[0.9418, 0.9839, 1.0391],
         [0.9340, 0.9762, 1.0333],
         [0.9320, 0.9714, 1.0353],
         ...,
         [0.9346, 0.9865, 1.0001],
         [0.9291, 0.9707, 1.0434],
         [0.9283, 0.9754, 0.9873]],
        [[0.9448, 0.9963, 1.0487],
         [0.9422, 0.9849, 1.0451],
         [0.9417, 0.9794, 1.0425],
         ...,
         [0.9415, 0.9946, 1.0097],
         [0.9411, 0.9796, 1.0461],
         [0.9413, 0.9840, 0.9917]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7003, 13.3509, 21.3242],
         [12.2850, 12.1991, 20.1265],
         [12.9193, 11.8238, 19.5486],
         ...,
         [12.0518, 12.4705, 17.5410],
         [12.6871, 12.1661, 17.2489],
         [13.0304, 12.0272, 15.2586]],
        [[10.2452, 10.8372, 18.3528],
         [ 9.7813, 10.5297, 17.1221],
         [ 9.4862, 10.3198, 17.6510],
         ...,
         [ 9.8149, 10.8903, 15.0175],
         [ 9.4757, 10.2071, 16.8395],
         [ 9.3362, 10.4345, 14.2916]],
        [[10.0782, 10.5609, 18.0150],
         [ 9.5092, 10.3397, 16.7829],
         [ 9.1303, 10.1474, 17.4293],
         ...,
         [ 9.5686, 10.7092, 14.7315],
         [ 9.1395,  9.9876, 16.7895],
         [ 8.9587, 10.2526, 14.1762]],
        ...,
        [[ 9.8747, 10.2278, 17.6044],
         [ 9.1819, 10.1085, 16.3711],
         [ 8.7071,  9.9375, 17.1580],
         ...,
         [ 9.2714, 10.4886, 14.3841],
         [ 8.7387,  9.7218, 16.7277],
         [ 8.5114, 10.0313, 14.0344]],
        [[10.4019, 11.0986, 18.6702],
         [10.0394, 10.7083, 17.4414],
         [ 9.8270, 10.4815, 17.8582],
         ...,
         [10.0479, 11.0603, 15.2865],
         [ 9.7971, 10.4140, 16.8858],
         [ 9.6987, 10.6053, 14.3989]],
        [[10.7562, 11.6981, 19.3903],
         [10.6333, 11.1132, 18.1672],
         [10.6231, 10.8474, 18.3240],
         ...,
         [10.5819, 11.4447, 15.8972],
         [10.5454, 10.8854, 16.9884],
         [10.5495, 10.9921, 14.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9616, 1.0344, 1.0962],
         [0.9694, 1.0097, 1.0767],
         [0.9777, 1.0017, 1.0673],
         ...,
         [0.9663, 1.0155, 1.0346],
         [0.9747, 1.0090, 1.0299],
         [0.9792, 1.0060, 0.9975]],
        [[0.9424, 0.9805, 1.0478],
         [0.9363, 0.9739, 1.0278],
         [0.9324, 0.9694, 1.0364],
         ...,
         [0.9367, 0.9816, 0.9936],
         [0.9322, 0.9670, 1.0232],
         [0.9304, 0.9719, 0.9818]],
        [[0.9402, 0.9746, 1.0423],
         [0.9327, 0.9698, 1.0223],
         [0.9277, 0.9657, 1.0328],
         ...,
         [0.9335, 0.9778, 0.9889],
         [0.9278, 0.9623, 1.0224],
         [0.9254, 0.9680, 0.9799]],
        ...,
        [[0.9375, 0.9674, 1.0357],
         [0.9283, 0.9649, 1.0156],
         [0.9221, 0.9612, 1.0284],
         ...,
         [0.9295, 0.9730, 0.9833],
         [0.9225, 0.9566, 1.0214],
         [0.9195, 0.9632, 0.9776]],
        [[0.9445, 0.9861, 1.0530],
         [0.9397, 0.9777, 1.0330],
         [0.9369, 0.9729, 1.0398],
         ...,
         [0.9398, 0.9853, 0.9980],
         [0.9365, 0.9714, 1.0240],
         [0.9352, 0.9755, 0.9835]],
        [[0.9491, 0.9990, 1.0647],
         [0.9475, 0.9864, 1.0448],
         [0.9474, 0.9807, 1.0474],
         ...,
         [0.9468, 0.9935, 1.0079],
         [0.9464, 0.9815, 1.0256],
         [0.9464, 0.9838, 0.9874]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7124, 13.3158, 21.6862],
         [12.2440, 12.2073, 20.0500],
         [12.8420, 11.8175, 19.3809],
         ...,
         [12.1064, 12.4233, 17.5239],
         [12.6403, 11.9944, 17.3448],
         [12.9838, 12.0041, 15.2022]],
        [[10.1845, 10.8204, 18.6707],
         [ 9.7766, 10.5366, 17.0719],
         [ 9.4911, 10.3260, 17.5372],
         ...,
         [ 9.7803, 10.8250, 14.9731],
         [ 9.4968, 10.2511, 16.9728],
         [ 9.3538, 10.4260, 14.2483]],
        [[10.0098, 10.5460, 18.3279],
         [ 9.5080, 10.3464, 16.7354],
         [ 9.1424, 10.1550, 17.3215],
         ...,
         [ 9.5253, 10.6420, 14.6843],
         [ 9.1665, 10.0537, 16.9274],
         [ 8.9817, 10.2456, 14.1344]],
        ...,
        [[ 9.7971, 10.2151, 17.9111],
         [ 9.1848, 10.1150, 16.3270],
         [ 8.7274,  9.9466, 17.0575],
         ...,
         [ 9.2181, 10.4192, 14.3336],
         [ 8.7725,  9.8140, 16.8711],
         [ 8.5403, 10.0261, 13.9944]],
        [[10.3485, 11.0801, 18.9930],
         [10.0313, 10.7154, 17.3885],
         [ 9.8248, 10.4865, 17.7387],
         ...,
         [10.0217, 10.9967, 15.2447],
         [ 9.8122, 10.4368, 17.0150],
         [ 9.7110, 10.5953, 14.3542]],
        [[10.7198, 11.6754, 19.7238],
         [10.6171, 11.1206, 18.1081],
         [10.6033, 10.8494, 18.1916],
         ...,
         [10.5757, 11.3854, 15.8617],
         [10.5459, 10.8584, 17.1082],
         [10.5482, 10.9787, 14.5907]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0375, 1.1018],
         [0.9694, 1.0138, 1.0752],
         [0.9773, 1.0054, 1.0643],
         ...,
         [0.9676, 1.0184, 1.0341],
         [0.9746, 1.0092, 1.0312],
         [0.9792, 1.0094, 0.9963]],
        [[0.9422, 0.9840, 1.0528],
         [0.9368, 0.9779, 1.0267],
         [0.9330, 0.9734, 1.0343],
         ...,
         [0.9368, 0.9841, 0.9926],
         [0.9331, 0.9718, 1.0251],
         [0.9312, 0.9756, 0.9808]],
        [[0.9399, 0.9781, 1.0472],
         [0.9332, 0.9739, 1.0213],
         [0.9284, 0.9698, 1.0308],
         ...,
         [0.9335, 0.9802, 0.9879],
         [0.9287, 0.9676, 1.0244],
         [0.9263, 0.9717, 0.9790]],
        ...,
        [[0.9371, 0.9710, 1.0404],
         [0.9290, 0.9689, 1.0146],
         [0.9229, 0.9653, 1.0265],
         ...,
         [0.9294, 0.9754, 0.9822],
         [0.9235, 0.9624, 1.0235],
         [0.9205, 0.9670, 0.9767]],
        [[0.9444, 0.9896, 1.0580],
         [0.9402, 0.9818, 1.0319],
         [0.9374, 0.9769, 1.0376],
         ...,
         [0.9400, 0.9878, 0.9970],
         [0.9373, 0.9758, 1.0258],
         [0.9359, 0.9792, 0.9825]],
        [[0.9493, 1.0024, 1.0699],
         [0.9479, 0.9905, 1.0436],
         [0.9477, 0.9846, 1.0450],
         ...,
         [0.9474, 0.9961, 1.0071],
         [0.9470, 0.9848, 1.0273],
         [0.9470, 0.9874, 0.9864]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8107, 13.0066, 22.2194],
         [12.2295, 12.2114, 19.9199],
         [12.7705, 11.8123, 18.9853],
         ...,
         [12.2249, 12.4241, 17.5586],
         [12.6458, 11.9143, 17.3031],
         [13.0631, 12.0050, 15.2156]],
        [[ 9.9973, 10.6757, 19.0954],
         [ 9.7334, 10.5402, 16.9849],
         [ 9.4824, 10.3349, 17.2561],
         ...,
         [ 9.7092, 10.8261, 15.0553],
         [ 9.4943, 10.2765, 16.9205],
         [ 9.3240, 10.4263, 14.2604]],
        [[ 9.7931, 10.4178, 18.7406],
         [ 9.4622, 10.3499, 16.6530],
         [ 9.1393, 10.1654, 17.0533],
         ...,
         [ 9.4362, 10.6432, 14.7714],
         [ 9.1633, 10.0901, 16.8737],
         [ 8.9428, 10.2459, 14.1464]],
        ...,
        [[ 9.5455, 10.1065, 18.3093],
         [ 9.1360, 10.1184, 16.2501],
         [ 8.7307,  9.9588, 16.8049],
         ...,
         [ 9.1080, 10.4204, 14.4264],
         [ 8.7685,  9.8634, 16.8159],
         [ 8.4913, 10.0263, 14.0062]],
        [[10.1896, 10.9194, 19.4289],
         [ 9.9907, 10.7189, 17.2971],
         [ 9.8106, 10.4939, 17.4455],
         ...,
         [ 9.9683, 10.9978, 15.3223],
         [ 9.8104, 10.4516, 16.9638],
         [ 9.6904, 10.5957, 14.3665]],
        [[10.6271, 11.4770, 20.1857],
         [10.5827, 11.1243, 18.0066],
         [10.5755, 10.8536, 17.8707],
         ...,
         [10.5646, 11.3864, 15.9284],
         [10.5459, 10.8488, 17.0597],
         [10.5505, 10.9792, 14.6033]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9627, 1.0380, 1.1103],
         [0.9682, 1.0210, 1.0729],
         [0.9754, 1.0124, 1.0577],
         ...,
         [0.9681, 1.0255, 1.0345],
         [0.9737, 1.0146, 1.0303],
         [0.9792, 1.0166, 0.9964]],
        [[0.9387, 0.9880, 1.0595],
         [0.9352, 0.9851, 1.0251],
         [0.9319, 0.9807, 1.0296],
         ...,
         [0.9349, 0.9913, 0.9938],
         [0.9321, 0.9795, 1.0241],
         [0.9298, 0.9827, 0.9808]],
        [[0.9360, 0.9825, 1.0537],
         [0.9316, 0.9811, 1.0198],
         [0.9274, 0.9771, 1.0263],
         ...,
         [0.9313, 0.9874, 0.9891],
         [0.9277, 0.9755, 1.0233],
         [0.9248, 0.9788, 0.9790]],
        ...,
        [[0.9327, 0.9758, 1.0467],
         [0.9273, 0.9761, 1.0132],
         [0.9220, 0.9727, 1.0222],
         ...,
         [0.9270, 0.9826, 0.9835],
         [0.9225, 0.9706, 1.0224],
         [0.9188, 0.9741, 0.9767]],
        [[0.9412, 0.9933, 1.0649],
         [0.9386, 0.9890, 1.0302],
         [0.9362, 0.9842, 1.0326],
         ...,
         [0.9383, 0.9950, 0.9981],
         [0.9362, 0.9832, 1.0248],
         [0.9347, 0.9863, 0.9826]],
        [[0.9470, 1.0052, 1.0772],
         [0.9464, 0.9977, 1.0418],
         [0.9463, 0.9919, 1.0396],
         ...,
         [0.9462, 1.0033, 1.0080],
         [0.9460, 0.9918, 1.0264],
         [0.9460, 0.9946, 0.9864]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3525, 12.1676, 23.3987],
         [12.3543, 12.2022, 19.6205],
         [12.8174, 11.8171, 18.3141],
         ...,
         [12.4050, 12.3662, 17.5563],
         [12.7702, 11.8127, 17.3570],
         [13.0505, 12.0062, 15.2349]],
        [[ 9.6384, 10.4053, 19.9913],
         [ 9.6375, 10.5323, 16.7814],
         [ 9.4199, 10.3522, 16.7845],
         ...,
         [ 9.6108, 10.7378, 15.1805],
         [ 9.4397, 10.3338, 16.8818],
         [ 9.3287, 10.4267, 14.3227]],
        [[ 9.3469, 10.2057, 19.6056],
         [ 9.3457, 10.3422, 16.4599],
         [ 9.0676, 10.1840, 16.6043],
         ...,
         [ 9.3119, 10.5518, 14.9097],
         [ 9.0932, 10.1641, 16.8238],
         [ 8.9489, 10.2462, 14.2136]],
        ...,
        [[ 8.9973,  9.9633, 19.1372],
         [ 8.9958, 10.1109, 16.0693],
         [ 8.6485,  9.9790, 16.3832],
         ...,
         [ 8.9539, 10.3254, 14.5803],
         [ 8.6806,  9.9574, 16.7522],
         [ 8.4990, 10.0266, 14.0794]],
        [[ 9.9156, 10.5930, 20.3541],
         [ 9.9149, 10.7109, 17.0839],
         [ 9.7574, 10.5100, 16.9526],
         ...,
         [ 9.8953, 10.9125, 15.4348],
         [ 9.7714, 10.4930, 16.9354],
         [ 9.6936, 10.5961, 14.4241]],
        [[10.5559, 11.0194, 21.1782],
         [10.5557, 11.1160, 17.7708],
         [10.5454, 10.8667, 17.3296],
         ...,
         [10.5531, 11.3081, 16.0113],
         [10.5452, 10.8530, 17.0544],
         [10.5501, 10.9798, 14.6505]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9700, 1.0314, 1.1283],
         [0.9700, 1.0322, 1.0669],
         [0.9761, 1.0239, 1.0456],
         ...,
         [0.9707, 1.0357, 1.0333],
         [0.9755, 1.0238, 1.0301],
         [0.9792, 1.0280, 0.9955]],
        [[0.9341, 0.9936, 1.0729],
         [0.9341, 0.9964, 1.0207],
         [0.9312, 0.9925, 1.0207],
         ...,
         [0.9338, 1.0008, 0.9946],
         [0.9315, 0.9921, 1.0223],
         [0.9300, 0.9941, 0.9807]],
        [[0.9303, 0.9894, 1.0666],
         [0.9303, 0.9923, 1.0155],
         [0.9266, 0.9889, 1.0178],
         ...,
         [0.9298, 0.9968, 0.9902],
         [0.9269, 0.9885, 1.0214],
         [0.9250, 0.9902, 0.9789]],
        ...,
        [[0.9256, 0.9842, 1.0590],
         [0.9256, 0.9873, 1.0091],
         [0.9210, 0.9845, 1.0142],
         ...,
         [0.9251, 0.9919, 0.9849],
         [0.9215, 0.9840, 1.0202],
         [0.9191, 0.9855, 0.9767]],
        [[0.9378, 0.9977, 1.0788],
         [0.9378, 1.0002, 1.0256],
         [0.9357, 0.9959, 1.0235],
         ...,
         [0.9375, 1.0045, 0.9988],
         [0.9359, 0.9955, 1.0232],
         [0.9349, 0.9977, 0.9823]],
        [[0.9462, 1.0068, 1.0922],
         [0.9462, 1.0089, 1.0368],
         [0.9461, 1.0035, 1.0296],
         ...,
         [0.9462, 1.0130, 1.0082],
         [0.9461, 1.0032, 1.0251],
         [0.9462, 1.0060, 0.9860]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8534, 12.9941, 22.1606],
         [12.2649, 12.2069, 19.9332],
         [12.8230, 11.8127, 19.0632],
         ...,
         [12.1924, 12.4093, 17.5340],
         [12.6705, 11.9126, 17.3203],
         [13.0127, 12.0047, 15.2118]],
        [[10.0197, 10.6574, 19.0355],
         [ 9.7369, 10.5362, 16.9891],
         [ 9.4732, 10.3339, 17.3111],
         ...,
         [ 9.7282, 10.8042, 15.0347],
         [ 9.4832, 10.2771, 16.9461],
         [ 9.3428, 10.4262, 14.2673]],
        [[ 9.8134, 10.3991, 18.6807],
         [ 9.4626, 10.3460, 16.6563],
         [ 9.1247, 10.1642, 17.1058],
         ...,
         [ 9.4600, 10.6206, 14.7512],
         [ 9.1490, 10.0909, 16.9004],
         [ 8.9674, 10.2458, 14.1546]],
        ...,
        [[ 9.5633, 10.0871, 18.2494],
         [ 9.1329, 10.1147, 16.2523],
         [ 8.7099,  9.9575, 16.8542],
         ...,
         [ 9.1375, 10.3969, 14.4068],
         [ 8.7506,  9.8645, 16.8438],
         [ 8.5223, 10.0263, 14.0159]],
        [[10.2140, 10.9016, 19.3691],
         [ 9.9971, 10.7150, 17.3023],
         [ 9.8067, 10.4931, 17.5029],
         ...,
         [ 9.9825, 10.9766, 15.3013],
         [ 9.8024, 10.4520, 16.9885],
         [ 9.7033, 10.5955, 14.3722]],
        [[10.6562, 11.4605, 20.1261],
         [10.5964, 11.1201, 18.0139],
         [10.5849, 10.8530, 17.9337],
         ...,
         [10.5674, 11.3668, 15.9063],
         [10.5456, 10.8486, 17.0823],
         [10.5490, 10.9790, 14.6065]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9639, 1.0372, 1.1092],
         [0.9693, 1.0203, 1.0730],
         [0.9767, 1.0119, 1.0589],
         ...,
         [0.9684, 1.0247, 1.0340],
         [0.9747, 1.0140, 1.0305],
         [0.9792, 1.0160, 0.9962]],
        [[0.9396, 0.9871, 1.0584],
         [0.9359, 0.9845, 1.0251],
         [0.9324, 0.9802, 1.0304],
         ...,
         [0.9358, 0.9902, 0.9933],
         [0.9325, 0.9789, 1.0244],
         [0.9307, 0.9821, 0.9809]],
        [[0.9369, 0.9815, 1.0526],
         [0.9323, 0.9804, 1.0197],
         [0.9278, 0.9765, 1.0270],
         ...,
         [0.9322, 0.9863, 0.9887],
         [0.9281, 0.9749, 1.0237],
         [0.9257, 0.9783, 0.9790]],
        ...,
        [[0.9336, 0.9749, 1.0456],
         [0.9279, 0.9755, 1.0131],
         [0.9223, 0.9721, 1.0229],
         ...,
         [0.9280, 0.9815, 0.9831],
         [0.9229, 0.9701, 1.0228],
         [0.9199, 0.9736, 0.9768]],
        [[0.9422, 0.9923, 1.0638],
         [0.9393, 0.9883, 1.0302],
         [0.9368, 0.9836, 1.0335],
         ...,
         [0.9391, 0.9939, 0.9977],
         [0.9368, 0.9827, 1.0251],
         [0.9355, 0.9858, 0.9826]],
        [[0.9481, 1.0043, 1.0761],
         [0.9473, 0.9970, 1.0418],
         [0.9471, 0.9913, 1.0405],
         ...,
         [0.9469, 1.0023, 1.0075],
         [0.9466, 0.9912, 1.0266],
         [0.9466, 0.9940, 0.9864]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7544, 13.1999, 21.8740],
         [12.2451, 12.2080, 20.0043],
         [12.8251, 11.8151, 19.2464],
         ...,
         [12.1441, 12.4207, 17.5317],
         [12.6471, 11.9613, 17.3284],
         [13.0037, 12.0044, 15.2065]],
        [[10.1176, 10.7576, 18.8174],
         [ 9.7610, 10.5372, 17.0398],
         [ 9.4860, 10.3292, 17.4414],
         ...,
         [ 9.7570, 10.8211, 15.0000],
         [ 9.4937, 10.2610, 16.9588],
         [ 9.3462, 10.4261, 14.2542]],
        [[ 9.9316, 10.4885, 18.4701],
         [ 9.4908, 10.3469, 16.7048],
         [ 9.1384, 10.1588, 17.2300],
         ...,
         [ 9.4962, 10.6380, 14.7132],
         [ 9.1625, 10.0681, 16.9136],
         [ 8.9718, 10.2457, 14.1405]],
        ...,
        [[ 9.7054, 10.1640, 18.0478],
         [ 9.1659, 10.1156, 16.2982],
         [ 8.7246,  9.9512, 16.9713],
         ...,
         [ 9.1822, 10.4150, 14.3648],
         [ 8.7675,  9.8337, 16.8577],
         [ 8.5279, 10.0262, 14.0007]],
        [[10.2925, 11.0121, 19.1439],
         [10.0172, 10.7159, 17.3551],
         [ 9.8187, 10.4891, 17.6388],
         ...,
         [10.0042, 10.9930, 15.2697],
         [ 9.8100, 10.4424, 17.0006],
         [ 9.7057, 10.5954, 14.3599]],
        [[10.6892, 11.5952, 19.8846],
         [10.6067, 11.1212, 18.0715],
         [10.5946, 10.8507, 18.0823],
         ...,
         [10.5718, 11.3819, 15.8823],
         [10.5458, 10.8541, 17.0933],
         [10.5487, 10.9788, 14.5960]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9627, 1.0376, 1.1047],
         [0.9692, 1.0164, 1.0743],
         [0.9768, 1.0079, 1.0620],
         ...,
         [0.9678, 1.0209, 1.0341],
         [0.9745, 1.0111, 1.0308],
         [0.9792, 1.0120, 0.9963]],
        [[0.9410, 0.9853, 1.0550],
         [0.9363, 0.9805, 1.0261],
         [0.9327, 0.9761, 1.0326],
         ...,
         [0.9363, 0.9866, 0.9929],
         [0.9328, 0.9746, 1.0248],
         [0.9309, 0.9782, 0.9808]],
        [[0.9386, 0.9795, 1.0493],
         [0.9328, 0.9765, 1.0206],
         [0.9281, 0.9724, 1.0292],
         ...,
         [0.9328, 0.9827, 0.9882],
         [0.9284, 0.9705, 1.0240],
         [0.9259, 0.9743, 0.9789]],
        ...,
        [[0.9356, 0.9725, 1.0425],
         [0.9285, 0.9715, 1.0140],
         [0.9226, 0.9680, 1.0250],
         ...,
         [0.9287, 0.9779, 0.9826],
         [0.9232, 0.9655, 1.0231],
         [0.9200, 0.9696, 0.9766]],
        [[0.9434, 0.9907, 1.0603],
         [0.9397, 0.9844, 1.0312],
         [0.9371, 0.9795, 1.0358],
         ...,
         [0.9395, 0.9903, 0.9973],
         [0.9370, 0.9785, 1.0254],
         [0.9356, 0.9818, 0.9825]],
        [[0.9486, 1.0032, 1.0723],
         [0.9475, 0.9931, 1.0429],
         [0.9474, 0.9873, 1.0430],
         ...,
         [0.9471, 0.9987, 1.0072],
         [0.9467, 0.9873, 1.0269],
         [0.9467, 0.9900, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7364, 13.2390, 21.8197],
         [12.2414, 12.2082, 20.0178],
         [12.8255, 11.8157, 19.2816],
         ...,
         [12.1350, 12.4229, 17.5314],
         [12.6427, 11.9716, 17.3308],
         [13.0020, 12.0043, 15.2055]],
        [[10.1366, 10.7787, 18.7762],
         [ 9.7656, 10.5374, 17.0496],
         [ 9.4885, 10.3283, 17.4664],
         ...,
         [ 9.7626, 10.8244, 14.9934],
         [ 9.4957, 10.2578, 16.9611],
         [ 9.3468, 10.4260, 14.2517]],
        [[ 9.9544, 10.5078, 18.4303],
         [ 9.4962, 10.3471, 16.7142],
         [ 9.1410, 10.1577, 17.2540],
         ...,
         [ 9.5032, 10.6414, 14.7059],
         [ 9.1651, 10.0635, 16.9158],
         [ 8.9726, 10.2457, 14.1378]],
        ...,
        [[ 9.7328, 10.1811, 18.0098],
         [ 9.1722, 10.1158, 16.3070],
         [ 8.7274,  9.9499, 16.9938],
         ...,
         [ 9.1908, 10.4185, 14.3568],
         [ 8.7707,  9.8275, 16.8599],
         [ 8.5289, 10.0262, 13.9978]],
        [[10.3078, 11.0349, 19.1014],
         [10.0210, 10.7161, 17.3652],
         [ 9.8210, 10.4883, 17.6649],
         ...,
         [10.0083, 10.9961, 15.2637],
         [ 9.8114, 10.4406, 17.0029],
         [ 9.7061, 10.5954, 14.3576]],
        [[10.6959, 11.6222, 19.8389],
         [10.6087, 11.1213, 18.0825],
         [10.5964, 10.8503, 18.1109],
         ...,
         [10.5727, 11.3848, 15.8777],
         [10.5459, 10.8554, 17.0956],
         [10.5487, 10.9788, 14.5941]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9625, 1.0377, 1.1039],
         [0.9691, 1.0156, 1.0746],
         [0.9769, 1.0072, 1.0626],
         ...,
         [0.9677, 1.0202, 1.0341],
         [0.9744, 1.0105, 1.0309],
         [0.9792, 1.0112, 0.9963]],
        [[0.9413, 0.9850, 1.0544],
         [0.9364, 0.9798, 1.0263],
         [0.9328, 0.9753, 1.0331],
         ...,
         [0.9364, 0.9859, 0.9928],
         [0.9329, 0.9738, 1.0248],
         [0.9309, 0.9774, 0.9808]],
        [[0.9389, 0.9791, 1.0487],
         [0.9329, 0.9757, 1.0208],
         [0.9282, 0.9716, 1.0296],
         ...,
         [0.9329, 0.9820, 0.9882],
         [0.9285, 0.9696, 1.0241],
         [0.9259, 0.9735, 0.9789]],
        ...,
        [[0.9360, 0.9721, 1.0419],
         [0.9286, 0.9707, 1.0142],
         [0.9227, 0.9672, 1.0254],
         ...,
         [0.9288, 0.9772, 0.9825],
         [0.9233, 0.9646, 1.0232],
         [0.9201, 0.9688, 0.9766]],
        [[0.9436, 0.9904, 1.0597],
         [0.9398, 0.9836, 1.0314],
         [0.9371, 0.9787, 1.0363],
         ...,
         [0.9396, 0.9896, 0.9972],
         [0.9370, 0.9777, 1.0255],
         [0.9356, 0.9810, 0.9825]],
        [[0.9487, 1.0030, 1.0716],
         [0.9476, 0.9923, 1.0431],
         [0.9474, 0.9865, 1.0435],
         ...,
         [0.9471, 0.9980, 1.0072],
         [0.9467, 0.9866, 1.0270],
         [0.9468, 0.9892, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7327, 13.2470, 21.8085],
         [12.2406, 12.2082, 20.0205],
         [12.8256, 11.8159, 19.2888],
         ...,
         [12.1332, 12.4234, 17.5313],
         [12.6418, 11.9738, 17.3314],
         [13.0017, 12.0043, 15.2053]],
        [[10.1406, 10.7831, 18.7677],
         [ 9.7665, 10.5374, 17.0516],
         [ 9.4890, 10.3281, 17.4716],
         ...,
         [ 9.7637, 10.8251, 14.9920],
         [ 9.4961, 10.2572, 16.9615],
         [ 9.3470, 10.4260, 14.2511]],
        [[ 9.9592, 10.5119, 18.4221],
         [ 9.4973, 10.3472, 16.7161],
         [ 9.1416, 10.1575, 17.2589],
         ...,
         [ 9.5046, 10.6421, 14.7044],
         [ 9.1656, 10.0626, 16.9163],
         [ 8.9728, 10.2457, 14.1373]],
        ...,
        [[ 9.7385, 10.1847, 18.0020],
         [ 9.1735, 10.1158, 16.3089],
         [ 8.7280,  9.9496, 16.9985],
         ...,
         [ 9.1926, 10.4193, 14.3551],
         [ 8.7714,  9.8262, 16.8603],
         [ 8.5292, 10.0262, 13.9972]],
        [[10.3110, 11.0397, 19.0926],
         [10.0218, 10.7162, 17.3673],
         [ 9.8214, 10.4882, 17.6703],
         ...,
         [10.0092, 10.9968, 15.2625],
         [ 9.8117, 10.4402, 17.0034],
         [ 9.7062, 10.5954, 14.3571]],
        [[10.6973, 11.6278, 19.8295],
         [10.6091, 11.1214, 18.0847],
         [10.5968, 10.8502, 18.1168],
         ...,
         [10.5729, 11.3854, 15.8768],
         [10.5459, 10.8557, 17.0961],
         [10.5487, 10.9788, 14.5937]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1037],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0201, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0111, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9715, 1.0297],
         ...,
         [0.9330, 0.9819, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9734, 0.9789]],
        ...,
        [[0.9361, 0.9721, 1.0418],
         [0.9286, 0.9706, 1.0142],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9288, 0.9771, 0.9825],
         [0.9233, 0.9644, 1.0232],
         [0.9201, 0.9687, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9835, 1.0315],
         [0.9372, 0.9786, 1.0364],
         ...,
         [0.9396, 0.9895, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9809, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9891, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7320, 13.2487, 21.8061],
         [12.2404, 12.2083, 20.0211],
         [12.8256, 11.8159, 19.2903],
         ...,
         [12.1328, 12.4235, 17.5313],
         [12.6416, 11.9743, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1414, 10.7840, 18.7660],
         [ 9.7667, 10.5374, 17.0520],
         [ 9.4891, 10.3281, 17.4727],
         ...,
         [ 9.7640, 10.8252, 14.9917],
         [ 9.4962, 10.2571, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9601, 10.5127, 18.4204],
         [ 9.4976, 10.3472, 16.7165],
         [ 9.1417, 10.1574, 17.2599],
         ...,
         [ 9.5049, 10.6422, 14.7041],
         [ 9.1657, 10.0624, 16.9164],
         [ 8.9728, 10.2457, 14.1372]],
        ...,
        [[ 9.7397, 10.1854, 18.0003],
         [ 9.1738, 10.1158, 16.3093],
         [ 8.7281,  9.9496, 16.9995],
         ...,
         [ 9.1929, 10.4194, 14.3547],
         [ 8.7715,  9.8259, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3117, 11.0407, 19.0908],
         [10.0220, 10.7162, 17.3677],
         [ 9.8215, 10.4882, 17.6714],
         ...,
         [10.0094, 10.9969, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6976, 11.6290, 19.8275],
         [10.6092, 11.1214, 18.0852],
         [10.5969, 10.8502, 18.1180],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8557, 17.0962],
         [10.5487, 10.9788, 14.5936]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1037],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9771, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9891, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2491, 21.8056],
         [12.2404, 12.2083, 20.0212],
         [12.8256, 11.8159, 19.2907],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7842, 18.7656],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4729],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4200],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7399, 10.1856, 18.0000],
         [ 9.1738, 10.1158, 16.3093],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3118, 11.0409, 19.0904],
         [10.0220, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6292, 19.8271],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1183],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5936]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1037],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9771, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2491, 21.8055],
         [12.2404, 12.2083, 20.0212],
         [12.8256, 11.8159, 19.2907],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4200],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3118, 11.0410, 19.0903],
         [10.0220, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1037],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0212],
         [12.8256, 11.8159, 19.2907],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4200],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3118, 11.0410, 19.0903],
         [10.0220, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],], device='cuda:0', dtype=torch.float64,
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
         [12.2404, 12.2083, 20.0213],
         [12.8256, 11.8159, 19.2908],
         ...,
         [12.1327, 12.4235, 17.5313],
         [12.6416, 11.9744, 17.3315],
         [13.0016, 12.0043, 15.2052]],
        [[10.1416, 10.7843, 18.7655],
         [ 9.7668, 10.5374, 17.0521],
         [ 9.4891, 10.3281, 17.4730],
         ...,
         [ 9.7640, 10.8252, 14.9916],
         [ 9.4962, 10.2570, 16.9616],
         [ 9.3470, 10.4260, 14.2510]],
        [[ 9.9604, 10.5129, 18.4199],
         [ 9.4976, 10.3472, 16.7166],
         [ 9.1417, 10.1574, 17.2602],
         ...,
         [ 9.5050, 10.6423, 14.7040],
         [ 9.1658, 10.0623, 16.9164],
         [ 8.9728, 10.2457, 14.1371]],
        ...,
        [[ 9.7400, 10.1856, 17.9999],
         [ 9.1738, 10.1158, 16.3094],
         [ 8.7281,  9.9495, 16.9997],
         ...,
         [ 9.1930, 10.4195, 14.3547],
         [ 8.7716,  9.8258, 16.8604],
         [ 8.5292, 10.0262, 13.9971]],
        [[10.3119, 11.0410, 19.0903],
         [10.0221, 10.7162, 17.3678],
         [ 9.8215, 10.4881, 17.6717],
         ...,
         [10.0094, 10.9970, 15.2622],
         [ 9.8118, 10.4401, 17.0035],
         [ 9.7063, 10.5954, 14.3570]],
        [[10.6977, 11.6293, 19.8270],
         [10.6092, 11.1214, 18.0853],
         [10.5969, 10.8502, 18.1184],
         ...,
         [10.5730, 11.3856, 15.8766],
         [10.5459, 10.8558, 17.0963],
         [10.5487, 10.9788, 14.5935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0377, 1.1036],
         [0.9691, 1.0154, 1.0746],
         [0.9769, 1.0070, 1.0627],
         ...,
         [0.9677, 1.0200, 1.0341],
         [0.9744, 1.0104, 1.0309],
         [0.9792, 1.0110, 0.9963]],
        [[0.9414, 0.9849, 1.0542],
         [0.9364, 0.9796, 1.0263],
         [0.9328, 0.9751, 1.0332],
         ...,
         [0.9364, 0.9858, 0.9928],
         [0.9329, 0.9736, 1.0249],
         [0.9309, 0.9772, 0.9808]],
        [[0.9390, 0.9791, 1.0486],
         [0.9329, 0.9755, 1.0209],
         [0.9282, 0.9714, 1.0297],
         ...,
         [0.9330, 0.9818, 0.9881],
         [0.9285, 0.9694, 1.0241],
         [0.9259, 0.9733, 0.9789]],
        ...,
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
         [0.9227, 0.9670, 1.0255],
         ...,
         [0.9289, 0.9770, 0.9825],
         [0.9233, 0.9643, 1.0232],
         [0.9201, 0.9686, 0.9766]],
        [[0.9436, 0.9904, 1.0595],
         [0.9398, 0.9834, 1.0315],
         [0.9372, 0.9785, 1.0364],
         ...,
         [0.9396, 0.9894, 0.9972],
         [0.9370, 0.9775, 1.0255],
         [0.9356, 0.9808, 0.9825]],
        [[0.9487, 1.0030, 1.0715],
         [0.9476, 0.9921, 1.0431],
         [0.9474, 0.9863, 1.0437],
         ...,
         [0.9471, 0.9978, 1.0072],
         [0.9467, 0.9864, 1.0271],
         [0.9468, 0.9890, 0.9863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7648, 12.9820, 21.6615],
         [12.2469, 12.2069, 19.9911],
         [12.8039, 11.8148, 19.1583],
         ...,
         [12.1501, 12.4347, 17.6073],
         [12.6620, 11.9372, 17.3248],
         [13.0678, 12.0166, 15.2462]],
        [[10.0642, 10.6208, 18.6247],
         [ 9.7448, 10.5363, 17.0292],
         [ 9.4861, 10.3296, 17.3737],
         ...,
         [ 9.7534, 10.8414, 15.0805],
         [ 9.4870, 10.2687, 16.9524],
         [ 9.3223, 10.4305, 14.2810]],
        [[ 9.8716, 10.3601, 18.2796],
         [ 9.4730, 10.3461, 16.6945],
         [ 9.1404, 10.1593, 17.1647],
         ...,
         [ 9.4917, 10.6590, 14.7940],
         [ 9.1539, 10.0791, 16.9069],
         [ 8.9406, 10.2494, 14.1659]],
        ...,
        [[ 9.6376, 10.0454, 17.8603],
         [ 9.1461, 10.1147, 16.2882],
         [ 8.7287,  9.9517, 16.9087],
         ...,
         [ 9.1766, 10.4367, 14.4461],
         [ 8.7568,  9.8486, 16.8505],
         [ 8.4885, 10.0289, 14.0242]],
        [[10.2454, 10.8673, 18.9490],
         [10.0027, 10.7150, 17.3442],
         [ 9.8169, 10.4894, 17.5689],
         ...,
         [10.0014, 11.0127, 15.3498],
         [ 9.8052, 10.4469, 16.9946],
         [ 9.6892, 10.6007, 14.3882]],
        [[10.6569, 11.4316, 19.6847],
         [10.5961, 11.1202, 18.0600],
         [10.5882, 10.8509, 18.0075],
         ...,
         [10.5713, 11.4001, 15.9614],
         [10.5457, 10.8512, 17.0880],
         [10.5506, 10.9859, 14.6274]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9620, 1.0340, 1.1011],
         [0.9684, 1.0174, 1.0740],
         [0.9757, 1.0090, 1.0604],
         ...,
         [0.9671, 1.0223, 1.0352],
         [0.9739, 1.0116, 1.0306],
         [0.9792, 1.0133, 0.9968]],
        [[0.9395, 0.9834, 1.0517],
         [0.9353, 0.9816, 1.0258],
         [0.9319, 0.9772, 1.0314],
         ...,
         [0.9354, 0.9881, 0.9941],
         [0.9319, 0.9759, 1.0245],
         [0.9297, 0.9793, 0.9811]],
        [[0.9370, 0.9778, 1.0461],
         [0.9317, 0.9775, 1.0204],
         [0.9273, 0.9735, 1.0280],
         ...,
         [0.9320, 0.9842, 0.9894],
         [0.9275, 0.9718, 1.0238],
         [0.9247, 0.9754, 0.9792]],
        ...,
        [[0.9339, 0.9711, 1.0393],
         [0.9274, 0.9726, 1.0137],
         [0.9219, 0.9691, 1.0238],
         ...,
         [0.9278, 0.9795, 0.9838],
         [0.9223, 0.9668, 1.0229],
         [0.9187, 0.9707, 0.9769]],
        [[0.9419, 0.9887, 1.0570],
         [0.9387, 0.9854, 1.0309],
         [0.9363, 0.9806, 1.0346],
         ...,
         [0.9387, 0.9918, 0.9985],
         [0.9361, 0.9797, 1.0252],
         [0.9346, 0.9830, 0.9828]],
        [[0.9474, 1.0008, 1.0690],
         [0.9466, 0.9941, 1.0426],
         [0.9465, 0.9883, 1.0417],
         ...,
         [0.9462, 1.0001, 1.0084],
         [0.9459, 0.9883, 1.0268],
         [0.9460, 0.9912, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9839, 12.5156, 21.7830],
         [12.2728, 12.2028, 19.8800],
         [12.8057, 11.8118, 18.8486],
         ...,
         [12.2043, 12.4260, 17.7454],
         [12.7172, 11.8771, 17.2021],
         [13.1072, 12.0260, 15.2837]],
        [[ 9.8597, 10.3811, 18.6866],
         [ 9.6820, 10.5328, 16.9471],
         [ 9.4467, 10.3370, 17.1485],
         ...,
         [ 9.7212, 10.8289, 15.2454],
         [ 9.4625, 10.2907, 16.8068],
         [ 9.3080, 10.4341, 14.3287]],
        [[ 9.6244, 10.1435, 18.3353],
         [ 9.4019, 10.3427, 16.6155],
         [ 9.0975, 10.1677, 16.9490],
         ...,
         [ 9.4512, 10.6461, 14.9615],
         [ 9.1225, 10.1096, 16.7585],
         [ 8.9218, 10.2523, 14.2147]],
        ...,
        [[ 9.3402,  9.8562, 17.9084],
         [ 9.0655, 10.1114, 16.2129],
         [ 8.6821,  9.9615, 16.7047],
         ...,
         [ 9.1266, 10.4234, 14.6164],
         [ 8.7174,  9.8894, 16.6987],
         [ 8.4647, 10.0310, 14.0745]],
        [[10.0820, 10.6053, 19.0169],
         [ 9.9479, 10.7115, 17.2591],
         [ 9.7809, 10.4958, 17.3348],
         ...,
         [ 9.9772, 11.0005, 15.5123],
         [ 9.7877, 10.4607, 16.8515],
         [ 9.6793, 10.6048, 14.4348]],
        [[10.5905, 11.1174, 19.7666],
         [10.5610, 11.1165, 17.9680],
         [10.5609, 10.8548, 17.7530],
         ...,
         [10.5663, 11.3889, 16.1178],
         [10.5453, 10.8459, 16.9506],
         [10.5520, 10.9914, 14.6716]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9644, 1.0306, 1.1030],
         [0.9682, 1.0239, 1.0720],
         [0.9753, 1.0155, 1.0552],
         ...,
         [0.9673, 1.0287, 1.0373],
         [0.9741, 1.0169, 1.0285],
         [0.9793, 1.0201, 0.9973]],
        [[0.9363, 0.9849, 1.0526],
         [0.9340, 0.9881, 1.0243],
         [0.9309, 0.9839, 1.0276],
         ...,
         [0.9345, 0.9945, 0.9966],
         [0.9311, 0.9829, 1.0220],
         [0.9291, 0.9860, 0.9817]],
        [[0.9332, 0.9798, 1.0469],
         [0.9303, 0.9840, 1.0189],
         [0.9263, 0.9803, 1.0243],
         ...,
         [0.9309, 0.9905, 0.9920],
         [0.9266, 0.9790, 1.0212],
         [0.9239, 0.9821, 0.9799]],
        ...,
        [[0.9295, 0.9736, 1.0399],
         [0.9258, 0.9791, 1.0124],
         [0.9208, 0.9759, 1.0204],
         ...,
         [0.9267, 0.9858, 0.9864],
         [0.9212, 0.9743, 1.0203],
         [0.9179, 0.9773, 0.9776]],
        [[0.9393, 0.9897, 1.0580],
         [0.9375, 0.9919, 1.0294],
         [0.9353, 0.9873, 1.0306],
         ...,
         [0.9379, 0.9981, 1.0010],
         [0.9354, 0.9866, 1.0228],
         [0.9340, 0.9897, 0.9834]],
        [[0.9460, 1.0006, 1.0702],
         [0.9456, 1.0006, 1.0409],
         [0.9456, 0.9950, 1.0374],
         ...,
         [0.9457, 1.0065, 1.0108],
         [0.9454, 0.9948, 1.0244],
         [0.9455, 0.9979, 0.9873]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8025, 12.8896, 21.6842],
         [12.2513, 12.2062, 19.9709],
         [12.8040, 11.8140, 19.1010],
         ...,
         [12.1600, 12.4331, 17.6317],
         [12.6720, 11.9247, 17.3017],
         [13.0750, 12.0183, 15.2531]],
        [[10.0257, 10.5699, 18.6359],
         [ 9.7332, 10.5357, 17.0141],
         [ 9.4788, 10.3310, 17.3319],
         ...,
         [ 9.7474, 10.8391, 15.1106],
         [ 9.4825, 10.2729, 16.9256],
         [ 9.3197, 10.4312, 14.2898]],
        [[ 9.8253, 10.3135, 18.2897],
         [ 9.4599, 10.3454, 16.6799],
         [ 9.1325, 10.1609, 17.1247],
         ...,
         [ 9.4842, 10.6566, 14.8247],
         [ 9.1481, 10.0850, 16.8796],
         [ 8.9371, 10.2499, 14.1748]],
        ...,
        [[ 9.5820, 10.0038, 17.8689],
         [ 9.1313, 10.1141, 16.2743],
         [ 8.7202,  9.9536, 16.8708],
         ...,
         [ 9.1674, 10.4343, 14.4774],
         [ 8.7495,  9.8566, 16.8227],
         [ 8.4841, 10.0292, 14.0335]],
        [[10.2144, 10.8123, 18.9614],
         [ 9.9925, 10.7144, 17.3285],
         [ 9.8103, 10.4906, 17.5255],
         ...,
         [ 9.9969, 11.0104, 15.3794],
         [ 9.8020, 10.4494, 16.9682],
         [ 9.6873, 10.6014, 14.3967]],
        [[10.6435, 11.3671, 19.6998],
         [10.5895, 11.1195, 18.0431],
         [10.5831, 10.8516, 17.9604],
         ...,
         [10.5703, 11.3980, 15.9897],
         [10.5456, 10.8498, 17.0625],
         [10.5509, 10.9869, 14.6355]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0333, 1.1014],
         [0.9683, 1.0186, 1.0736],
         [0.9757, 1.0102, 1.0594],
         ...,
         [0.9671, 1.0235, 1.0355],
         [0.9739, 1.0126, 1.0301],
         [0.9792, 1.0146, 0.9968]],
        [[0.9389, 0.9835, 1.0518],
         [0.9351, 0.9828, 1.0255],
         [0.9317, 0.9784, 1.0306],
         ...,
         [0.9353, 0.9893, 0.9945],
         [0.9318, 0.9772, 1.0240],
         [0.9296, 0.9805, 0.9812]],
        [[0.9363, 0.9780, 1.0462],
         [0.9315, 0.9787, 1.0200],
         [0.9271, 0.9747, 1.0273],
         ...,
         [0.9318, 0.9854, 0.9899],
         [0.9273, 0.9731, 1.0233],
         [0.9245, 0.9767, 0.9793]],
        ...,
        [[0.9331, 0.9714, 1.0394],
         [0.9271, 0.9737, 1.0134],
         [0.9217, 0.9703, 1.0231],
         ...,
         [0.9276, 0.9806, 0.9842],
         [0.9221, 0.9682, 1.0224],
         [0.9186, 0.9719, 0.9770]],
        [[0.9414, 0.9887, 1.0571],
         [0.9385, 0.9866, 1.0306],
         [0.9361, 0.9818, 1.0338],
         ...,
         [0.9386, 0.9930, 0.9989],
         [0.9360, 0.9809, 1.0247],
         [0.9345, 0.9842, 0.9829]],
        [[0.9471, 1.0006, 1.0692],
         [0.9464, 0.9953, 1.0422],
         [0.9463, 0.9896, 1.0409],
         ...,
         [0.9461, 1.0013, 1.0088],
         [0.9458, 0.9895, 1.0263],
         [0.9459, 0.9925, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7730, 12.9616, 21.6665],
         [12.2479, 12.2068, 19.9867],
         [12.8039, 11.8147, 19.1458],
         ...,
         [12.1523, 12.4344, 17.6126],
         [12.6642, 11.9344, 17.3198],
         [13.0694, 12.0170, 15.2477]],
        [[10.0558, 10.6094, 18.6271],
         [ 9.7423, 10.5361, 17.0259],
         [ 9.4845, 10.3299, 17.3646],
         ...,
         [ 9.7521, 10.8409, 15.0870],
         [ 9.4860, 10.2696, 16.9466],
         [ 9.3217, 10.4307, 14.2829]],
        [[ 9.8614, 10.3496, 18.2818],
         [ 9.4701, 10.3459, 16.6913],
         [ 9.1387, 10.1596, 17.1559],
         ...,
         [ 9.4901, 10.6584, 14.8007],
         [ 9.1527, 10.0804, 16.9009],
         [ 8.9398, 10.2495, 14.1678]],
        ...,
        [[ 9.6254, 10.0360, 17.8622],
         [ 9.1429, 10.1146, 16.2852],
         [ 8.7269,  9.9521, 16.9004],
         ...,
         [ 9.1746, 10.4362, 14.4529],
         [ 8.7552,  9.8504, 16.8445],
         [ 8.4875, 10.0289, 14.0262]],
        [[10.2386, 10.8550, 18.9517],
         [10.0005, 10.7149, 17.3408],
         [ 9.8154, 10.4897, 17.5594],
         ...,
         [10.0004, 11.0122, 15.3563],
         [ 9.8045, 10.4475, 16.9888],
         [ 9.6888, 10.6008, 14.3900]],
        [[10.6539, 11.4173, 19.6880],
         [10.5947, 11.1201, 18.0563],
         [10.5871, 10.8510, 17.9972],
         ...,
         [10.5711, 11.3997, 15.9676],
         [10.5456, 10.8509, 17.0824],
         [10.5507, 10.9861, 14.6292]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9621, 1.0339, 1.1012],
         [0.9684, 1.0177, 1.0739],
         [0.9757, 1.0093, 1.0602],
         ...,
         [0.9671, 1.0226, 1.0353],
         [0.9739, 1.0118, 1.0305],
         [0.9792, 1.0136, 0.9968]],
        [[0.9394, 0.9834, 1.0518],
         [0.9353, 0.9819, 1.0257],
         [0.9319, 0.9774, 1.0312],
         ...,
         [0.9354, 0.9884, 0.9942],
         [0.9319, 0.9761, 1.0244],
         [0.9297, 0.9796, 0.9811]],
        [[0.9368, 0.9779, 1.0462],
         [0.9317, 0.9778, 1.0203],
         [0.9273, 0.9738, 1.0278],
         ...,
         [0.9319, 0.9845, 0.9895],
         [0.9275, 0.9721, 1.0237],
         [0.9247, 0.9757, 0.9792]],
        ...,
        [[0.9337, 0.9711, 1.0393],
         [0.9273, 0.9728, 1.0137],
         [0.9218, 0.9693, 1.0237],
         ...,
         [0.9278, 0.9797, 0.9839],
         [0.9222, 0.9671, 1.0228],
         [0.9187, 0.9710, 0.9769]],
        [[0.9418, 0.9887, 1.0570],
         [0.9387, 0.9857, 1.0308],
         [0.9362, 0.9809, 1.0344],
         ...,
         [0.9387, 0.9921, 0.9986],
         [0.9361, 0.9800, 1.0251],
         [0.9346, 0.9832, 0.9829]],
        [[0.9473, 1.0007, 1.0690],
         [0.9465, 0.9944, 1.0425],
         [0.9464, 0.9886, 1.0415],
         ...,
         [0.9462, 1.0004, 1.0085],
         [0.9459, 0.9886, 1.0266],
         [0.9459, 0.9915, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7924, 12.9139, 21.6782],
         [12.2502, 12.2064, 19.9763],
         [12.8040, 11.8142, 19.1162],
         ...,
         [12.1574, 12.4335, 17.6252],
         [12.6694, 11.9280, 17.3078],
         [13.0731, 12.0179, 15.2513]],
        [[10.0359, 10.5831, 18.6329],
         [ 9.7363, 10.5358, 17.0181],
         [ 9.4808, 10.3306, 17.3430],
         ...,
         [ 9.7490, 10.8397, 15.1026],
         [ 9.4837, 10.2718, 16.9327],
         [ 9.3204, 10.4310, 14.2874]],
        [[ 9.8375, 10.3255, 18.2870],
         [ 9.4634, 10.3456, 16.6838],
         [ 9.1346, 10.1605, 17.1353],
         ...,
         [ 9.4862, 10.6572, 14.8165],
         [ 9.1497, 10.0834, 16.8869],
         [ 8.9380, 10.2497, 14.1724]],
        ...,
        [[ 9.5968, 10.0145, 17.8666],
         [ 9.1352, 10.1143, 16.2780],
         [ 8.7224,  9.9531, 16.8809],
         ...,
         [ 9.1698, 10.4349, 14.4690],
         [ 8.7515,  9.8545, 16.8301],
         [ 8.4852, 10.0291, 14.0310]],
        [[10.2226, 10.8266, 18.9581],
         [ 9.9952, 10.7145, 17.3327],
         [ 9.8120, 10.4903, 17.5370],
         ...,
         [ 9.9981, 11.0110, 15.3715],
         [ 9.8028, 10.4488, 16.9752],
         [ 9.6878, 10.6012, 14.3944]],
        [[10.6470, 11.3840, 19.6958],
         [10.5913, 11.1197, 18.0476],
         [10.5845, 10.8514, 17.9729],
         ...,
         [10.5706, 11.3986, 15.9821],
         [10.5456, 10.8502, 17.0692],
         [10.5508, 10.9867, 14.6334]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9623, 1.0335, 1.1013],
         [0.9684, 1.0183, 1.0737],
         [0.9757, 1.0099, 1.0597],
         ...,
         [0.9671, 1.0232, 1.0354],
         [0.9739, 1.0123, 1.0303],
         [0.9792, 1.0142, 0.9968]],
        [[0.9391, 0.9835, 1.0518],
         [0.9351, 0.9825, 1.0256],
         [0.9318, 0.9781, 1.0308],
         ...,
         [0.9353, 0.9890, 0.9944],
         [0.9318, 0.9768, 1.0242],
         [0.9296, 0.9802, 0.9811]],
        [[0.9365, 0.9780, 1.0462],
         [0.9315, 0.9784, 1.0201],
         [0.9272, 0.9744, 1.0275],
         ...,
         [0.9318, 0.9851, 0.9897],
         [0.9274, 0.9728, 1.0234],
         [0.9246, 0.9763, 0.9793]],
        ...,
        [[0.9333, 0.9713, 1.0394],
         [0.9272, 0.9734, 1.0135],
         [0.9217, 0.9700, 1.0233],
         ...,
         [0.9276, 0.9803, 0.9841],
         [0.9221, 0.9679, 1.0225],
         [0.9186, 0.9716, 0.9770]],
        [[0.9416, 0.9887, 1.0571],
         [0.9386, 0.9863, 1.0307],
         [0.9361, 0.9815, 1.0340],
         ...,
         [0.9386, 0.9927, 0.9988],
         [0.9360, 0.9806, 1.0249],
         [0.9345, 0.9839, 0.9829]],
        [[0.9472, 1.0007, 1.0691],
         [0.9464, 0.9950, 1.0423],
         [0.9463, 0.9892, 1.0411],
         ...,
         [0.9462, 1.0010, 1.0087],
         [0.9458, 0.9892, 1.0264],
         [0.9459, 0.9921, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7991, 12.8978, 21.6821],
         [12.2509, 12.2063, 19.9727],
         [12.8040, 11.8141, 19.1062],
         ...,
         [12.1591, 12.4333, 17.6295],
         [12.6711, 11.9258, 17.3038],
         [13.0744, 12.0182, 15.2525]],
        [[10.0292, 10.5744, 18.6349],
         [ 9.7342, 10.5357, 17.0154],
         [ 9.4795, 10.3309, 17.3357],
         ...,
         [ 9.7480, 10.8393, 15.1079],
         [ 9.4829, 10.2725, 16.9280],
         [ 9.3199, 10.4311, 14.2890]],
        [[ 9.8294, 10.3175, 18.2888],
         [ 9.4611, 10.3455, 16.6812],
         [ 9.1332, 10.1607, 17.1283],
         ...,
         [ 9.4849, 10.6568, 14.8219],
         [ 9.1487, 10.0845, 16.8821],
         [ 8.9374, 10.2498, 14.1740]],
        ...,
        [[ 9.5870, 10.0074, 17.8681],
         [ 9.1326, 10.1142, 16.2755],
         [ 8.7209,  9.9534, 16.8743],
         ...,
         [ 9.1682, 10.4345, 14.4745],
         [ 8.7502,  9.8559, 16.8252],
         [ 8.4845, 10.0292, 14.0326]],
        [[10.2172, 10.8172, 18.9603],
         [ 9.9935, 10.7144, 17.3299],
         [ 9.8109, 10.4905, 17.5294],
         ...,
         [ 9.9973, 11.0106, 15.3767],
         [ 9.8022, 10.4492, 16.9705],
         [ 9.6875, 10.6013, 14.3959]],
        [[10.6447, 11.3728, 19.6985],
         [10.5901, 11.1196, 18.0446],
         [10.5836, 10.8515, 17.9646],
         ...,
         [10.5704, 11.3982, 15.9871],
         [10.5456, 10.8500, 17.0648],
         [10.5508, 10.9868, 14.6348]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9624, 1.0333, 1.1014],
         [0.9683, 1.0185, 1.0736],
         [0.9757, 1.0101, 1.0595],
         ...,
         [0.9671, 1.0234, 1.0355],
         [0.9739, 1.0125, 1.0302],
         [0.9792, 1.0145, 0.9968]],
        [[0.9390, 0.9835, 1.0518],
         [0.9351, 0.9827, 1.0255],
         [0.9317, 0.9783, 1.0307],
         ...,
         [0.9353, 0.9892, 0.9945],
         [0.9318, 0.9770, 1.0241],
         [0.9296, 0.9804, 0.9812]],
        [[0.9363, 0.9780, 1.0462],
         [0.9315, 0.9786, 1.0201],
         [0.9271, 0.9746, 1.0273],
         ...,
         [0.9318, 0.9853, 0.9898],
         [0.9274, 0.9730, 1.0233],
         [0.9246, 0.9765, 0.9793]],
        ...,
        [[0.9331, 0.9713, 1.0394],
         [0.9271, 0.9736, 1.0135],
         [0.9217, 0.9702, 1.0232],
         ...,
         [0.9276, 0.9805, 0.9842],
         [0.9221, 0.9681, 1.0224],
         [0.9186, 0.9718, 0.9770]],
        [[0.9415, 0.9887, 1.0571],
         [0.9385, 0.9865, 1.0306],
         [0.9361, 0.9817, 1.0339],
         ...,
         [0.9386, 0.9929, 0.9988],
         [0.9360, 0.9808, 1.0248],
         [0.9345, 0.9841, 0.9829]],
        [[0.9471, 1.0006, 1.0691],
         [0.9464, 0.9952, 1.0422],
         [0.9463, 0.9894, 1.0409],
         ...,
         [0.9461, 1.0012, 1.0088],
         [0.9458, 0.9894, 1.0263],
         [0.9459, 0.9924, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7937, 12.9107, 21.6790],
         [12.2503, 12.2064, 19.9755],
         [12.8040, 11.8142, 19.1142],
         ...,
         [12.1577, 12.4335, 17.6260],
         [12.6697, 11.9275, 17.3070],
         [13.0734, 12.0179, 15.2515]],
        [[10.0346, 10.5813, 18.6333],
         [ 9.7359, 10.5358, 17.0175],
         [ 9.4805, 10.3307, 17.3415],
         ...,
         [ 9.7488, 10.8396, 15.1036],
         [ 9.4835, 10.2719, 16.9318],
         [ 9.3203, 10.4310, 14.2877]],
        [[ 9.8359, 10.3239, 18.2874],
         [ 9.4629, 10.3456, 16.6833],
         [ 9.1343, 10.1605, 17.1339],
         ...,
         [ 9.4859, 10.6571, 14.8176],
         [ 9.1495, 10.0836, 16.8859],
         [ 8.9379, 10.2498, 14.1728]],
        ...,
        [[ 9.5948, 10.0131, 17.8669],
         [ 9.1347, 10.1143, 16.2775],
         [ 8.7221,  9.9532, 16.8796],
         ...,
         [ 9.1695, 10.4348, 14.4701],
         [ 8.7512,  9.8548, 16.8291],
         [ 8.4851, 10.0292, 14.0313]],
        [[10.2215, 10.8247, 18.9585],
         [ 9.9949, 10.7145, 17.3321],
         [ 9.8118, 10.4903, 17.5355],
         ...,
         [ 9.9980, 11.0109, 15.3726],
         [ 9.8027, 10.4488, 16.9742],
         [ 9.6878, 10.6012, 14.3947]],
        [[10.6465, 11.3817, 19.6964],
         [10.5911, 11.1197, 18.0470],
         [10.5843, 10.8514, 17.9712],
         ...,
         [10.5705, 11.3985, 15.9832],
         [10.5456, 10.8501, 17.0683],
         [10.5508, 10.9867, 14.6337]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9623, 1.0334, 1.1014],
         [0.9684, 1.0183, 1.0737],
         [0.9757, 1.0099, 1.0596],
         ...,
         [0.9671, 1.0232, 1.0354],
         [0.9739, 1.0124, 1.0302],
         [0.9792, 1.0143, 0.9968]],
        [[0.9391, 0.9835, 1.0518],
         [0.9351, 0.9825, 1.0255],
         [0.9317, 0.9781, 1.0308],
         ...,
         [0.9353, 0.9890, 0.9944],
         [0.9318, 0.9769, 1.0241],
         [0.9296, 0.9803, 0.9811]],
        [[0.9364, 0.9780, 1.0462],
         [0.9315, 0.9784, 1.0201],
         [0.9272, 0.9745, 1.0274],
         ...,
         [0.9318, 0.9851, 0.9898],
         [0.9274, 0.9728, 1.0234],
         [0.9246, 0.9764, 0.9793]],
        ...,
        [[0.9333, 0.9713, 1.0394],
         [0.9272, 0.9735, 1.0135],
         [0.9217, 0.9700, 1.0233],
         ...,
         [0.9276, 0.9803, 0.9841],
         [0.9221, 0.9679, 1.0225],
         [0.9186, 0.9716, 0.9770]],
        [[0.9415, 0.9887, 1.0571],
         [0.9385, 0.9863, 1.0307],
         [0.9361, 0.9815, 1.0340],
         ...,
         [0.9386, 0.9927, 0.9988],
         [0.9360, 0.9806, 1.0248],
         [0.9345, 0.9839, 0.9829]],
        [[0.9472, 1.0006, 1.0691],
         [0.9464, 0.9950, 1.0423],
         [0.9463, 0.9893, 1.0411],
         ...,
         [0.9462, 1.0010, 1.0087],
         [0.9458, 0.9893, 1.0264],
         [0.9459, 0.9922, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7924, 12.9139, 21.6782],
         [12.2502, 12.2064, 19.9763],
         [12.8040, 11.8142, 19.1162],
         ...,
         [12.1574, 12.4335, 17.6252],
         [12.6694, 11.9280, 17.3078],
         [13.0731, 12.0179, 15.2513]],
        [[10.0359, 10.5831, 18.6329],
         [ 9.7363, 10.5358, 17.0181],
         [ 9.4808, 10.3306, 17.3430],
         ...,
         [ 9.7490, 10.8397, 15.1026],
         [ 9.4837, 10.2718, 16.9327],
         [ 9.3204, 10.4310, 14.2874]],
        [[ 9.8375, 10.3255, 18.2870],
         [ 9.4634, 10.3456, 16.6838],
         [ 9.1346, 10.1605, 17.1353],
         ...,
         [ 9.4862, 10.6572, 14.8165],
         [ 9.1497, 10.0834, 16.8869],
         [ 8.9380, 10.2497, 14.1724]],
        ...,
        [[ 9.5968, 10.0145, 17.8666],
         [ 9.1352, 10.1143, 16.2780],
         [ 8.7224,  9.9531, 16.8809],
         ...,
         [ 9.1698, 10.4349, 14.4690],
         [ 8.7515,  9.8545, 16.8301],
         [ 8.4852, 10.0291, 14.0310]],
        [[10.2226, 10.8266, 18.9581],
         [ 9.9952, 10.7145, 17.3327],
         [ 9.8120, 10.4903, 17.5370],
         ...,
         [ 9.9981, 11.0110, 15.3715],
         [ 9.8028, 10.4488, 16.9752],
         [ 9.6878, 10.6012, 14.3944]],
        [[10.6470, 11.3840, 19.6958],
         [10.5913, 11.1197, 18.0476],
         [10.5845, 10.8514, 17.9729],
         ...,
         [10.5706, 11.3986, 15.9821],
         [10.5456, 10.8502, 17.0692],
         [10.5508, 10.9867, 14.6334]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9623, 1.0335, 1.1013],
         [0.9684, 1.0183, 1.0737],
         [0.9757, 1.0099, 1.0597],
         ...,
         [0.9671, 1.0232, 1.0354],
         [0.9739, 1.0123, 1.0303],
         [0.9792, 1.0142, 0.9968]],
        [[0.9391, 0.9835, 1.0518],
         [0.9351, 0.9825, 1.0256],
         [0.9318, 0.9781, 1.0308],
         ...,
         [0.9353, 0.9890, 0.9944],
         [0.9318, 0.9768, 1.0242],
         [0.9296, 0.9802, 0.9811]],
        [[0.9365, 0.9780, 1.0462],
         [0.9315, 0.9784, 1.0201],
         [0.9272, 0.9744, 1.0275],
         ...,
         [0.9318, 0.9851, 0.9897],
         [0.9274, 0.9728, 1.0234],
         [0.9246, 0.9763, 0.9793]],
        ...,
        [[0.9333, 0.9713, 1.0394],
         [0.9272, 0.9734, 1.0135],
         [0.9217, 0.9700, 1.0233],
         ...,
         [0.9276, 0.9803, 0.9841],
         [0.9221, 0.9679, 1.0225],
         [0.9186, 0.9716, 0.9770]],
        [[0.9416, 0.9887, 1.0571],
         [0.9386, 0.9863, 1.0307],
         [0.9361, 0.9815, 1.0340],
         ...,
         [0.9386, 0.9927, 0.9988],
         [0.9360, 0.9806, 1.0249],
         [0.9345, 0.9839, 0.9829]],
        [[0.9472, 1.0007, 1.0691],
         [0.9464, 0.9950, 1.0423],
         [0.9463, 0.9892, 1.0411],
         ...,
         [0.9462, 1.0010, 1.0087],
         [0.9458, 0.9892, 1.0264],
         [0.9459, 0.9921, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5809, 11.9347, 22.2196],
         [12.3931, 12.1943, 19.6059],
         [12.8787, 11.8197, 18.2125],
         ...,
         [12.3634, 12.3722, 17.9687],
         [12.8516, 11.8236, 16.8553],
         [13.1678, 12.0267, 15.3135]],
        [[ 9.5242, 10.2394, 19.0298],
         [ 9.6170, 10.5259, 16.7557],
         [ 9.3949, 10.3548, 16.6999],
         ...,
         [ 9.6326, 10.7471, 15.4852],
         [ 9.4059, 10.3200, 16.3829],
         [ 9.2864, 10.4344, 14.3921]],
        [[ 9.2016, 10.0470, 18.6683],
         [ 9.3198, 10.3359, 16.4330],
         [ 9.0352, 10.1866, 16.5217],
         ...,
         [ 9.3396, 10.5614, 15.2026],
         [ 9.0494, 10.1477, 16.3253],
         [ 8.8935, 10.2525, 14.2820]],
        ...,
        [[ 8.8164,  9.8132, 18.2290],
         [ 8.9636, 10.1048, 16.0411],
         [ 8.6078,  9.9816, 16.3030],
         ...,
         [ 8.9882, 10.3354, 14.8591],
         [ 8.6256,  9.9378, 16.2542],
         [ 8.4289, 10.0312, 14.1465]],
        [[ 9.8320, 10.4202, 19.3699],
         [ 9.8998, 10.7043, 17.0592],
         [ 9.7398, 10.5126, 16.8662],
         ...,
         [ 9.9113, 10.9215, 15.7507],
         [ 9.7475, 10.4817, 16.4362],
         [ 9.6646, 10.6051, 14.4945]],
        [[10.5470, 10.8307, 20.1418],
         [10.5537, 11.1090, 17.7486],
         [10.5461, 10.8693, 17.2391],
         ...,
         [10.5552, 11.3163, 16.3527],
         [10.5458, 10.8474, 16.5545],
         [10.5543, 10.9918, 14.7232]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9716, 1.0266, 1.1065],
         [0.9691, 1.0322, 1.0640],
         [0.9755, 1.0242, 1.0414],
         ...,
         [0.9687, 1.0360, 1.0374],
         [0.9751, 1.0242, 1.0193],
         [0.9793, 1.0286, 0.9942]],
        [[0.9312, 0.9903, 1.0547],
         [0.9324, 0.9964, 1.0177],
         [0.9295, 0.9927, 1.0168],
         ...,
         [0.9326, 1.0012, 0.9970],
         [0.9296, 0.9920, 1.0116],
         [0.9280, 0.9945, 0.9792]],
        [[0.9269, 0.9861, 1.0488],
         [0.9285, 0.9923, 1.0124],
         [0.9247, 0.9891, 1.0139],
         ...,
         [0.9287, 0.9972, 0.9924],
         [0.9249, 0.9883, 1.0107],
         [0.9228, 0.9906, 0.9774]],
        ...,
        [[0.9218, 0.9811, 1.0416],
         [0.9238, 0.9874, 1.0060],
         [0.9191, 0.9847, 1.0103],
         ...,
         [0.9241, 0.9923, 0.9868],
         [0.9193, 0.9838, 1.0095],
         [0.9167, 0.9858, 0.9752]],
        [[0.9352, 0.9941, 1.0602],
         [0.9361, 1.0002, 1.0226],
         [0.9340, 0.9961, 1.0195],
         ...,
         [0.9363, 1.0049, 1.0013],
         [0.9341, 0.9955, 1.0125],
         [0.9330, 0.9981, 0.9809]],
        [[0.9447, 1.0030, 1.0727],
         [0.9448, 1.0089, 1.0338],
         [0.9447, 1.0038, 1.0255],
         ...,
         [0.9448, 1.0134, 1.0111],
         [0.9447, 1.0033, 1.0144],
         [0.9448, 1.0064, 0.9846]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0101, 12.5183, 21.8472],
         [12.2934, 12.2026, 19.8626],
         [12.8264, 11.8116, 18.8284],
         ...,
         [12.2202, 12.4127, 17.7258],
         [12.7254, 11.8834, 17.1593],
         [13.1026, 12.0207, 15.2704]],
        [[ 9.8652, 10.4109, 18.7558],
         [ 9.6984, 10.5326, 16.9347],
         [ 9.4536, 10.3386, 17.1365],
         ...,
         [ 9.7119, 10.8093, 15.2211],
         [ 9.4590, 10.2881, 16.7579],
         [ 9.3097, 10.4321, 14.3201]],
        [[ 9.6278, 10.1760, 18.4049],
         [ 9.4179, 10.3425, 16.6036],
         [ 9.1033, 10.1696, 16.9379],
         ...,
         [ 9.4396, 10.6258, 14.9368],
         [ 9.1179, 10.1062, 16.7089],
         [ 8.9240, 10.2506, 14.2067]],
        ...,
        [[ 9.3412,  9.8919, 17.9785],
         [ 9.0810, 10.1113, 16.2017],
         [ 8.6863,  9.9635, 16.6946],
         ...,
         [ 9.1122, 10.4024, 14.5912],
         [ 8.7117,  9.8848, 16.6482],
         [ 8.4675, 10.0298, 14.0671]],
        [[10.0895, 10.6326, 19.0857],
         [ 9.9648, 10.7113, 17.2461],
         [ 9.7891, 10.4972, 17.3219],
         ...,
         [ 9.9703, 10.9816, 15.4884],
         [ 9.7851, 10.4590, 16.8033],
         [ 9.6805, 10.6024, 14.4257]],
        [[10.6027, 11.1385, 19.8344],
         [10.5788, 11.1163, 17.9539],
         [10.5721, 10.8558, 17.7381],
         ...,
         [10.5650, 11.3714, 16.0950],
         [10.5452, 10.8462, 16.9039],
         [10.5518, 10.9883, 14.6613]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9648, 1.0309, 1.1038],
         [0.9686, 1.0241, 1.0715],
         [0.9756, 1.0157, 1.0547],
         ...,
         [0.9676, 1.0286, 1.0368],
         [0.9743, 1.0173, 1.0276],
         [0.9793, 1.0202, 0.9968]],
        [[0.9365, 0.9857, 1.0535],
         [0.9343, 0.9883, 1.0239],
         [0.9310, 0.9841, 1.0272],
         ...,
         [0.9344, 0.9942, 0.9960],
         [0.9311, 0.9831, 1.0210],
         [0.9291, 0.9861, 0.9814]],
        [[0.9333, 0.9807, 1.0478],
         [0.9306, 0.9842, 1.0185],
         [0.9264, 0.9805, 1.0240],
         ...,
         [0.9308, 0.9903, 0.9914],
         [0.9266, 0.9792, 1.0202],
         [0.9240, 0.9823, 0.9795]],
        ...,
        [[0.9295, 0.9746, 1.0409],
         [0.9261, 0.9793, 1.0120],
         [0.9209, 0.9761, 1.0200],
         ...,
         [0.9265, 0.9855, 0.9858],
         [0.9212, 0.9744, 1.0193],
         [0.9180, 0.9775, 0.9773]],
        [[0.9394, 0.9904, 1.0589],
         [0.9378, 0.9921, 1.0290],
         [0.9355, 0.9875, 1.0302],
         ...,
         [0.9379, 0.9979, 1.0004],
         [0.9354, 0.9867, 1.0218],
         [0.9340, 0.9898, 0.9831]],
        [[0.9462, 1.0013, 1.0711],
         [0.9459, 1.0008, 1.0405],
         [0.9458, 0.9952, 1.0370],
         ...,
         [0.9457, 1.0063, 1.0103],
         [0.9455, 0.9950, 1.0234],
         [0.9455, 0.9981, 0.9869]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8331, 12.8332, 21.7113],
         [12.2585, 12.2057, 19.9541],
         [12.8083, 11.8134, 19.0593],
         ...,
         [12.1696, 12.4293, 17.6444],
         [12.6803, 11.9184, 17.2780],
         [13.0789, 12.0184, 15.2550]],
        [[10.0016, 10.5437, 18.6570],
         [ 9.7288, 10.5352, 17.0016],
         [ 9.4754, 10.3322, 17.3021],
         ...,
         [ 9.7417, 10.8337, 15.1258],
         [ 9.4788, 10.2751, 16.8982],
         [ 9.3182, 10.4312, 14.2938]],
        [[ 9.7956, 10.2903, 18.3101],
         [ 9.4544, 10.3450, 16.6679],
         [ 9.1284, 10.1623, 17.0962],
         ...,
         [ 9.4770, 10.6509, 14.8401],
         [ 9.1434, 10.0881, 16.8518],
         [ 8.9353, 10.2499, 14.1792]],
        ...,
        [[ 9.5458,  9.9842, 17.8885],
         [ 9.1245, 10.1137, 16.2628],
         [ 8.7153,  9.9553, 16.8440],
         ...,
         [ 9.1585, 10.4285, 14.4930],
         [ 8.7436,  9.8607, 16.7944],
         [ 8.4818, 10.0293, 14.0381]],
        [[10.1957, 10.7832, 18.9831],
         [ 9.9892, 10.7139, 17.3156],
         [ 9.8075, 10.4916, 17.4944],
         ...,
         [ 9.9926, 11.0051, 15.3944],
         [ 9.7993, 10.4508, 16.9412],
         [ 9.6864, 10.6014, 14.4006]],
        [[10.6374, 11.3310, 19.7230],
         [10.5888, 11.1190, 18.0292],
         [10.5820, 10.8522, 17.9264],
         ...,
         [10.5694, 11.3931, 16.0041],
         [10.5455, 10.8492, 17.0364],
         [10.5510, 10.9870, 14.6388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9628, 1.0329, 1.1018],
         [0.9684, 1.0194, 1.0732],
         [0.9757, 1.0110, 1.0587],
         ...,
         [0.9672, 1.0242, 1.0356],
         [0.9740, 1.0133, 1.0297],
         [0.9792, 1.0154, 0.9968]],
        [[0.9386, 0.9838, 1.0521],
         [0.9350, 0.9836, 1.0252],
         [0.9316, 0.9793, 1.0301],
         ...,
         [0.9351, 0.9900, 0.9947],
         [0.9317, 0.9780, 1.0235],
         [0.9295, 0.9814, 0.9811]],
        [[0.9358, 0.9784, 1.0465],
         [0.9313, 0.9795, 1.0198],
         [0.9270, 0.9756, 1.0267],
         ...,
         [0.9316, 0.9861, 0.9900],
         [0.9272, 0.9740, 1.0228],
         [0.9245, 0.9775, 0.9793]],
        ...,
        [[0.9325, 0.9718, 1.0396],
         [0.9270, 0.9746, 1.0132],
         [0.9216, 0.9712, 1.0226],
         ...,
         [0.9274, 0.9813, 0.9844],
         [0.9219, 0.9692, 1.0218],
         [0.9185, 0.9728, 0.9770]],
        [[0.9411, 0.9889, 1.0574],
         [0.9384, 0.9875, 1.0303],
         [0.9360, 0.9827, 1.0332],
         ...,
         [0.9384, 0.9937, 0.9990],
         [0.9359, 0.9818, 1.0242],
         [0.9344, 0.9850, 0.9829]],
        [[0.9470, 1.0007, 1.0695],
         [0.9463, 0.9961, 1.0419],
         [0.9462, 0.9904, 1.0402],
         ...,
         [0.9461, 1.0020, 1.0090],
         [0.9458, 0.9904, 1.0258],
         [0.9458, 0.9933, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9481, 12.6221, 21.8010],
         [12.2815, 12.2037, 19.8939],
         [12.8202, 11.8119, 18.9066],
         ...,
         [12.2029, 12.4183, 17.6976],
         [12.7100, 11.8945, 17.1991],
         [13.0945, 12.0199, 15.2651]],
        [[ 9.9109, 10.4511, 18.7221],
         [ 9.7087, 10.5335, 16.9573],
         [ 9.4610, 10.3365, 17.1925],
         ...,
         [ 9.7220, 10.8175, 15.1886],
         [ 9.4657, 10.2838, 16.8055],
         [ 9.3126, 10.4318, 14.3112]],
        [[ 9.6842, 10.2097, 18.3726],
         [ 9.4303, 10.3433, 16.6254],
         [ 9.1118, 10.1672, 16.9914],
         ...,
         [ 9.4523, 10.6343, 14.9039],
         [ 9.1266, 10.1002, 16.7574],
         [ 8.9278, 10.2504, 14.1973]],
        ...,
        [[ 9.4100,  9.9179, 17.9478],
         [ 9.0958, 10.1121, 16.2224],
         [ 8.6962,  9.9608, 16.7451],
         ...,
         [ 9.1279, 10.4112, 14.5578],
         [ 8.7225,  9.8769, 16.6979],
         [ 8.4723, 10.0296, 14.0572]],
        [[10.1249, 10.6790, 19.0507],
         [ 9.9731, 10.7122, 17.2697],
         [ 9.7953, 10.4953, 17.3802],
         ...,
         [ 9.9779, 10.9895, 15.4563],
         [ 9.7899, 10.4562, 16.8500],
         [ 9.6825, 10.6021, 14.4171]],
        [[10.6137, 11.1996, 19.7964],
         [10.5822, 11.1172, 17.9795],
         [10.5754, 10.8545, 17.8019],
         ...,
         [10.5665, 11.3787, 16.0639],
         [10.5453, 10.8470, 16.9487],
         [10.5515, 10.9878, 14.6537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9641, 1.0315, 1.1031],
         [0.9685, 1.0225, 1.0721],
         [0.9756, 1.0141, 1.0560],
         ...,
         [0.9675, 1.0271, 1.0364],
         [0.9742, 1.0159, 1.0283],
         [0.9792, 1.0186, 0.9968]],
        [[0.9372, 0.9850, 1.0530],
         [0.9345, 0.9867, 1.0243],
         [0.9312, 0.9825, 1.0282],
         ...,
         [0.9347, 0.9928, 0.9956],
         [0.9313, 0.9814, 1.0219],
         [0.9293, 0.9845, 0.9813]],
        [[0.9342, 0.9798, 1.0474],
         [0.9308, 0.9826, 1.0189],
         [0.9266, 0.9789, 1.0249],
         ...,
         [0.9311, 0.9889, 0.9909],
         [0.9268, 0.9774, 1.0211],
         [0.9242, 0.9807, 0.9795]],
        ...,
        [[0.9306, 0.9735, 1.0405],
         [0.9264, 0.9777, 1.0124],
         [0.9211, 0.9744, 1.0209],
         ...,
         [0.9268, 0.9841, 0.9853],
         [0.9215, 0.9726, 1.0201],
         [0.9182, 0.9759, 0.9772]],
        [[0.9400, 0.9898, 1.0584],
         [0.9380, 0.9906, 1.0294],
         [0.9356, 0.9859, 1.0312],
         ...,
         [0.9381, 0.9965, 0.9999],
         [0.9356, 0.9851, 1.0226],
         [0.9342, 0.9882, 0.9830]],
        [[0.9465, 1.0010, 1.0705],
         [0.9460, 0.9992, 1.0410],
         [0.9460, 0.9936, 1.0381],
         ...,
         [0.9458, 1.0048, 1.0098],
         [0.9456, 0.9934, 1.0242],
         [0.9456, 0.9965, 0.9869]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8540, 12.7930, 21.7281],
         [12.2628, 12.2053, 19.9429],
         [12.8105, 11.8130, 19.0307],
         ...,
         [12.1758, 12.4272, 17.6542],
         [12.6858, 11.9137, 17.2631],
         [13.0818, 12.0187, 15.2569]],
        [[ 9.9845, 10.5249, 18.6691],
         [ 9.7251, 10.5349, 16.9933],
         [ 9.4727, 10.3330, 17.2815],
         ...,
         [ 9.7380, 10.8306, 15.1375],
         [ 9.4763, 10.2767, 16.8809],
         [ 9.3172, 10.4313, 14.2971]],
        [[ 9.7746, 10.2737, 18.3217],
         [ 9.4499, 10.3447, 16.6600],
         [ 9.1253, 10.1632, 17.0765],
         ...,
         [ 9.4724, 10.6478, 14.8520],
         [ 9.1403, 10.0904, 16.8342],
         [ 8.9339, 10.2500, 14.1825]],
        ...,
        [[ 9.5202,  9.9702, 17.8995],
         [ 9.1192, 10.1134, 16.2552],
         [ 8.7118,  9.9563, 16.8254],
         ...,
         [ 9.1528, 10.4252, 14.5051],
         [ 8.7397,  9.8638, 16.7764],
         [ 8.4800, 10.0293, 14.0417]],
        [[10.1823, 10.7623, 18.9957],
         [ 9.9862, 10.7136, 17.3070],
         [ 9.8052, 10.4923, 17.4730],
         ...,
         [ 9.9899, 11.0022, 15.4059],
         [ 9.7976, 10.4518, 16.9241],
         [ 9.6856, 10.6016, 14.4036]],
        [[10.6327, 11.3052, 19.7367],
         [10.5875, 11.1187, 18.0199],
         [10.5808, 10.8526, 17.9031],
         ...,
         [10.5689, 11.3904, 16.0152],
         [10.5454, 10.8487, 17.0200],
         [10.5511, 10.9871, 14.6416]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9630, 1.0326, 1.1020],
         [0.9684, 1.0200, 1.0730],
         [0.9757, 1.0116, 1.0582],
         ...,
         [0.9673, 1.0248, 1.0358],
         [0.9740, 1.0138, 1.0294],
         [0.9792, 1.0160, 0.9968]],
        [[0.9383, 0.9840, 1.0523],
         [0.9349, 0.9842, 1.0250],
         [0.9315, 0.9799, 1.0297],
         ...,
         [0.9350, 0.9905, 0.9948],
         [0.9316, 0.9787, 1.0232],
         [0.9295, 0.9820, 0.9812]],
        [[0.9355, 0.9786, 1.0466],
         [0.9312, 0.9801, 1.0196],
         [0.9270, 0.9762, 1.0264],
         ...,
         [0.9315, 0.9866, 0.9902],
         [0.9271, 0.9747, 1.0224],
         [0.9244, 0.9781, 0.9793]],
        ...,
        [[0.9322, 0.9721, 1.0398],
         [0.9269, 0.9752, 1.0130],
         [0.9215, 0.9718, 1.0223],
         ...,
         [0.9273, 0.9818, 0.9845],
         [0.9219, 0.9698, 1.0215],
         [0.9184, 0.9734, 0.9770]],
        [[0.9409, 0.9891, 1.0576],
         [0.9383, 0.9880, 1.0301],
         [0.9359, 0.9833, 1.0328],
         ...,
         [0.9384, 0.9942, 0.9992],
         [0.9358, 0.9824, 1.0239],
         [0.9344, 0.9856, 0.9829]],
        [[0.9469, 1.0007, 1.0696],
         [0.9463, 0.9967, 1.0417],
         [0.9462, 0.9910, 1.0398],
         ...,
         [0.9460, 1.0025, 1.0091],
         [0.9457, 0.9909, 1.0255],
         [0.9458, 0.9939, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8373, 12.8252, 21.7146],
         [12.2594, 12.2056, 19.9519],
         [12.8088, 11.8133, 19.0537],
         ...,
         [12.1708, 12.4289, 17.6463],
         [12.6814, 11.9174, 17.2750],
         [13.0795, 12.0185, 15.2554]],
        [[ 9.9982, 10.5399, 18.6594],
         [ 9.7281, 10.5351, 17.0000],
         [ 9.4749, 10.3324, 17.2980],
         ...,
         [ 9.7410, 10.8330, 15.1281],
         [ 9.4783, 10.2754, 16.8948],
         [ 9.3180, 10.4312, 14.2945]],
        [[ 9.7914, 10.2869, 18.3124],
         [ 9.4535, 10.3449, 16.6663],
         [ 9.1278, 10.1625, 17.0923],
         ...,
         [ 9.4761, 10.6503, 14.8425],
         [ 9.1428, 10.0885, 16.8483],
         [ 8.9350, 10.2499, 14.1798]],
        ...,
        [[ 9.5407,  9.9814, 17.8907],
         [ 9.1235, 10.1136, 16.2613],
         [ 8.7146,  9.9555, 16.8403],
         ...,
         [ 9.1573, 10.4278, 14.4954],
         [ 8.7428,  9.8613, 16.7908],
         [ 8.4814, 10.0293, 14.0388]],
        [[10.1930, 10.7789, 18.9856],
         [ 9.9886, 10.7138, 17.3139],
         [ 9.8070, 10.4918, 17.4902],
         ...,
         [ 9.9921, 11.0045, 15.3967],
         [ 9.7990, 10.4510, 16.9378],
         [ 9.6862, 10.6015, 14.4012]],
        [[10.6364, 11.3258, 19.7257],
         [10.5885, 11.1190, 18.0273],
         [10.5818, 10.8522, 17.9218],
         ...,
         [10.5693, 11.3926, 16.0063],
         [10.5455, 10.8491, 17.0332],
         [10.5510, 10.9870, 14.6394]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9628, 1.0328, 1.1018],
         [0.9684, 1.0196, 1.0732],
         [0.9757, 1.0111, 1.0586],
         ...,
         [0.9672, 1.0243, 1.0357],
         [0.9740, 1.0134, 1.0296],
         [0.9792, 1.0155, 0.9968]],
        [[0.9385, 0.9838, 1.0521],
         [0.9349, 0.9837, 1.0252],
         [0.9316, 0.9794, 1.0300],
         ...,
         [0.9351, 0.9901, 0.9947],
         [0.9316, 0.9782, 1.0234],
         [0.9295, 0.9815, 0.9812]],
        [[0.9358, 0.9784, 1.0465],
         [0.9313, 0.9797, 1.0197],
         [0.9270, 0.9757, 1.0267],
         ...,
         [0.9316, 0.9862, 0.9901],
         [0.9272, 0.9742, 1.0227],
         [0.9245, 0.9776, 0.9793]],
        ...,
        [[0.9325, 0.9719, 1.0396],
         [0.9270, 0.9747, 1.0131],
         [0.9216, 0.9713, 1.0226],
         ...,
         [0.9274, 0.9814, 0.9844],
         [0.9219, 0.9693, 1.0218],
         [0.9185, 0.9729, 0.9770]],
        [[0.9411, 0.9890, 1.0575],
         [0.9384, 0.9876, 1.0303],
         [0.9360, 0.9828, 1.0331],
         ...,
         [0.9384, 0.9938, 0.9991],
         [0.9359, 0.9819, 1.0241],
         [0.9344, 0.9852, 0.9829]],
        [[0.9470, 1.0007, 1.0695],
         [0.9463, 0.9963, 1.0419],
         [0.9462, 0.9905, 1.0401],
         ...,
         [0.9461, 1.0021, 1.0090],
         [0.9457, 0.9905, 1.0257],
         [0.9458, 0.9934, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8331, 12.8332, 21.7113],
         [12.2585, 12.2057, 19.9541],
         [12.8083, 11.8134, 19.0593],
         ...,
         [12.1696, 12.4293, 17.6444],
         [12.6803, 11.9184, 17.2780],
         [13.0789, 12.0184, 15.2550]],
        [[10.0016, 10.5437, 18.6570],
         [ 9.7288, 10.5352, 17.0016],
         [ 9.4754, 10.3322, 17.3021],
         ...,
         [ 9.7417, 10.8337, 15.1258],
         [ 9.4788, 10.2751, 16.8982],
         [ 9.3182, 10.4312, 14.2938]],
        [[ 9.7956, 10.2903, 18.3101],
         [ 9.4544, 10.3450, 16.6679],
         [ 9.1284, 10.1623, 17.0962],
         ...,
         [ 9.4770, 10.6509, 14.8401],
         [ 9.1434, 10.0881, 16.8518],
         [ 8.9353, 10.2499, 14.1792]],
        ...,
        [[ 9.5458,  9.9842, 17.8885],
         [ 9.1245, 10.1137, 16.2628],
         [ 8.7153,  9.9553, 16.8440],
         ...,
         [ 9.1585, 10.4285, 14.4930],
         [ 8.7436,  9.8607, 16.7944],
         [ 8.4818, 10.0293, 14.0381]],
        [[10.1957, 10.7832, 18.9831],
         [ 9.9892, 10.7139, 17.3156],
         [ 9.8075, 10.4916, 17.4944],
         ...,
         [ 9.9926, 11.0051, 15.3944],
         [ 9.7993, 10.4508, 16.9412],
         [ 9.6864, 10.6014, 14.4006]],
        [[10.6374, 11.3310, 19.7230],
         [10.5888, 11.1190, 18.0292],
         [10.5820, 10.8522, 17.9264],
         ...,
         [10.5694, 11.3931, 16.0041],
         [10.5455, 10.8492, 17.0364],
         [10.5510, 10.9870, 14.6388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9628, 1.0329, 1.1018],
         [0.9684, 1.0194, 1.0732],
         [0.9757, 1.0110, 1.0587],
         ...,
         [0.9672, 1.0242, 1.0356],
         [0.9740, 1.0133, 1.0297],
         [0.9792, 1.0154, 0.9968]],
        [[0.9386, 0.9838, 1.0521],
         [0.9350, 0.9836, 1.0252],
         [0.9316, 0.9793, 1.0301],
         ...,
         [0.9351, 0.9900, 0.9947],
         [0.9317, 0.9780, 1.0235],
         [0.9295, 0.9814, 0.9811]],
        [[0.9358, 0.9784, 1.0465],
         [0.9313, 0.9795, 1.0198],
         [0.9270, 0.9756, 1.0267],
         ...,
         [0.9316, 0.9861, 0.9900],
         [0.9272, 0.9740, 1.0228],
         [0.9245, 0.9775, 0.9793]],
        ...,
        [[0.9325, 0.9718, 1.0396],
         [0.9270, 0.9746, 1.0132],
         [0.9216, 0.9712, 1.0226],
         ...,
         [0.9274, 0.9813, 0.9844],
         [0.9219, 0.9692, 1.0218],
         [0.9185, 0.9728, 0.9770]],
        [[0.9411, 0.9889, 1.0574],
         [0.9384, 0.9875, 1.0303],
         [0.9360, 0.9827, 1.0332],
         ...,
         [0.9384, 0.9937, 0.9990],
         [0.9359, 0.9818, 1.0242],
         [0.9344, 0.9850, 0.9829]],
        [[0.9470, 1.0007, 1.0695],
         [0.9463, 0.9961, 1.0419],
         [0.9462, 0.9904, 1.0402],
         ...,
         [0.9461, 1.0020, 1.0090],
         [0.9458, 0.9904, 1.0258],
         [0.9458, 0.9933, 0.9868]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.3584, 11.9771, 22.7134],
         [12.5138, 12.1791, 19.2949],
         [13.0015, 11.8458, 17.6322],
         ...,
         [12.5016, 12.3179, 18.1565],
         [12.9572, 11.8130, 16.5169],
         [13.0158, 12.0103, 15.2800]],
        [[ 9.2224, 10.2562, 19.4312],
         [ 9.5562, 10.5143, 16.5531],
         [ 9.3470, 10.3707, 16.3005],
         ...,
         [ 9.5622, 10.6642, 15.7023],
         [ 9.3640, 10.3460, 15.9710],
         [ 9.3416, 10.4282, 14.4419]],
        [[ 8.8090, 10.0611, 19.0594],
         [ 9.2425, 10.3247, 16.2420],
         [ 8.9729, 10.2014, 16.1428],
         ...,
         [ 9.2501, 10.4756, 15.4225],
         [ 8.9950, 10.1776, 15.9046],
         [ 8.9658, 10.2475, 14.3414]],
        ...,
        [[ 8.3215,  9.8242, 18.6078],
         [ 8.8674, 10.0941, 15.8640],
         [ 8.5292,  9.9951, 15.9492],
         ...,
         [ 8.8769, 10.2461, 15.0822],
         [ 8.5571,  9.9723, 15.8227],
         [ 8.5203, 10.0275, 14.2177]],
        [[ 9.6213, 10.4396, 19.7809],
         [ 9.8553, 10.6924, 16.8456],
         [ 9.7063, 10.5296, 16.4474],
         ...,
         [ 9.8596, 10.8414, 15.9651],
         [ 9.7181, 10.5040, 16.0324],
         [ 9.7025, 10.5979, 14.5353]],
        [[10.5637, 10.8561, 20.5750],
         [10.5488, 11.0962, 17.5095],
         [10.5486, 10.8887, 16.7764],
         ...,
         [10.5492, 11.2428, 16.5606],
         [10.5476, 10.8612, 16.1689],
         [10.5490, 10.9823, 14.7436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9796, 1.0249, 1.1108],
         [0.9685, 1.0292, 1.0552],
         [0.9749, 1.0221, 1.0282],
         ...,
         [0.9683, 1.0322, 1.0367],
         [0.9743, 1.0214, 1.0100],
         [0.9751, 1.0256, 0.9899]],
        [[0.9250, 0.9880, 1.0574],
         [0.9294, 0.9935, 1.0106],
         [0.9266, 0.9904, 1.0065],
         ...,
         [0.9295, 0.9967, 0.9968],
         [0.9269, 0.9899, 1.0012],
         [0.9266, 0.9917, 0.9763]],
        [[0.9195, 0.9838, 1.0514],
         [0.9252, 0.9895, 1.0056],
         [0.9217, 0.9868, 1.0040],
         ...,
         [0.9253, 0.9927, 0.9922],
         [0.9220, 0.9863, 1.0001],
         [0.9216, 0.9878, 0.9747]],
        ...,
        [[0.9131, 0.9787, 1.0441],
         [0.9203, 0.9845, 0.9994],
         [0.9158, 0.9824, 1.0008],
         ...,
         [0.9204, 0.9878, 0.9867],
         [0.9162, 0.9819, 0.9988],
         [0.9157, 0.9831, 0.9727]],
        [[0.9303, 0.9919, 1.0631],
         [0.9333, 0.9973, 1.0154],
         [0.9314, 0.9938, 1.0089],
         ...,
         [0.9334, 1.0005, 1.0011],
         [0.9315, 0.9933, 1.0022],
         [0.9313, 0.9953, 0.9778]],
        [[0.9427, 1.0008, 1.0761],
         [0.9425, 1.0060, 1.0262],
         [0.9425, 1.0015, 1.0143],
         ...,
         [0.9425, 1.0091, 1.0108],
         [0.9425, 1.0010, 1.0044],
         [0.9425, 1.0036, 0.9812]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.4956, 12.0565, 22.2082],
         [12.3824, 12.1925, 19.6319],
         [12.9026, 11.8174, 18.3321],
         ...,
         [12.3308, 12.3693, 17.8824],
         [12.8162, 11.8312, 16.8843],
         [13.0472, 12.0144, 15.2662]],
        [[ 9.5785, 10.3032, 19.0390],
         [ 9.6410, 10.5245, 16.7728],
         [ 9.4104, 10.3525, 16.7856],
         ...,
         [ 9.6501, 10.7426, 15.4110],
         [ 9.4204, 10.3142, 16.4235],
         [ 9.3299, 10.4297, 14.3678]],
        [[ 9.2684, 10.1048, 18.6796],
         [ 9.3470, 10.3345, 16.4491],
         [ 9.0498, 10.1843, 16.6035],
         ...,
         [ 9.3616, 10.5568, 15.1299],
         [ 9.0682, 10.1405, 16.3674],
         [ 8.9505, 10.2487, 14.2603]],
        ...,
        [[ 8.8974,  9.8637, 18.2428],
         [ 8.9944, 10.1035, 16.0561],
         [ 8.6214,  9.9793, 16.3801],
         ...,
         [ 9.0156, 10.3305, 14.7881],
         [ 8.6493,  9.9289, 16.2979],
         [ 8.5010, 10.0284, 14.1280]],
        [[ 9.8740, 10.4900, 19.3770],
         [ 9.9207, 10.7029, 17.0772],
         [ 9.7560, 10.5103, 16.9555],
         ...,
         [ 9.9242, 10.9171, 15.6752],
         [ 9.7577, 10.4772, 16.4756],
         [ 9.6944, 10.5997, 14.4677]],
        [[10.5587, 10.9140, 20.1442],
         [10.5670, 11.1075, 17.7687],
         [10.5643, 10.8670, 17.3366],
         ...,
         [10.5571, 11.3123, 16.2744],
         [10.5454, 10.8461, 16.5909],
         [10.5500, 10.9846, 14.6907]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9719, 1.0277, 1.1066],
         [0.9704, 1.0306, 1.0647],
         [0.9773, 1.0226, 1.0436],
         ...,
         [0.9697, 1.0344, 1.0363],
         [0.9762, 1.0229, 1.0200],
         [0.9792, 1.0268, 0.9937]],
        [[0.9334, 0.9901, 1.0551],
         [0.9342, 0.9949, 1.0182],
         [0.9312, 0.9912, 1.0184],
         ...,
         [0.9343, 0.9995, 0.9961],
         [0.9313, 0.9904, 1.0125],
         [0.9301, 0.9928, 0.9791]],
        [[0.9293, 0.9859, 1.0492],
         [0.9303, 0.9908, 1.0130],
         [0.9264, 0.9876, 1.0155],
         ...,
         [0.9305, 0.9956, 0.9915],
         [0.9266, 0.9866, 1.0116],
         [0.9251, 0.9889, 0.9774]],
        ...,
        [[0.9244, 0.9807, 1.0421],
         [0.9257, 0.9858, 1.0066],
         [0.9207, 0.9832, 1.0118],
         ...,
         [0.9259, 0.9907, 0.9859],
         [0.9211, 0.9821, 1.0105],
         [0.9191, 0.9842, 0.9752]],
        [[0.9373, 0.9941, 1.0606],
         [0.9379, 0.9987, 1.0232],
         [0.9357, 0.9946, 1.0212],
         ...,
         [0.9379, 1.0033, 1.0004],
         [0.9357, 0.9939, 1.0134],
         [0.9349, 0.9965, 0.9807]],
        [[0.9463, 1.0032, 1.0731],
         [0.9464, 1.0074, 1.0344],
         [0.9464, 1.0022, 1.0274],
         ...,
         [0.9463, 1.0118, 1.0101],
         [0.9462, 1.0018, 1.0153],
         [0.9462, 1.0047, 0.9844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9966, 12.5956, 21.8471],
         [12.2918, 12.2021, 19.8671],
         [12.8338, 11.8117, 18.8565],
         ...,
         [12.2130, 12.4114, 17.7059],
         [12.7172, 11.8872, 17.1654],
         [13.0701, 12.0173, 15.2578]],
        [[ 9.8786, 10.4475, 18.7609],
         [ 9.7044, 10.5322, 16.9378],
         [ 9.4574, 10.3381, 17.1570],
         ...,
         [ 9.7161, 10.8074, 15.2036],
         [ 9.4626, 10.2866, 16.7659],
         [ 9.3215, 10.4308, 14.3141]],
        [[ 9.6438, 10.2084, 18.4106],
         [ 9.4246, 10.3421, 16.6066],
         [ 9.1066, 10.1690, 16.9576],
         ...,
         [ 9.4449, 10.6238, 14.9195],
         [ 9.1225, 10.1040, 16.7171],
         [ 8.9395, 10.2496, 14.2015]],
        ...,
        [[ 9.3603,  9.9193, 17.9848],
         [ 9.0885, 10.1108, 16.2046],
         [ 8.6894,  9.9629, 16.7133],
         ...,
         [ 9.1188, 10.4003, 14.5743],
         [ 8.7175,  9.8820, 16.6567],
         [ 8.4871, 10.0290, 14.0628]],
        [[10.1003, 10.6731, 19.0903],
         [ 9.9701, 10.7108, 17.2494],
         [ 9.7932, 10.4967, 17.3432],
         ...,
         [ 9.9734, 10.9797, 15.4707],
         [ 9.7877, 10.4580, 16.8111],
         [ 9.6886, 10.6010, 14.4190]],
        [[10.6074, 11.1885, 19.8378],
         [10.5825, 11.1158, 17.9575],
         [10.5769, 10.8555, 17.7613],
         ...,
         [10.5656, 11.3696, 16.0767],
         [10.5453, 10.8465, 16.9112],
         [10.5507, 10.9863, 14.6530]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9650, 1.0313, 1.1036],
         [0.9689, 1.0229, 1.0714],
         [0.9761, 1.0145, 1.0550],
         ...,
         [0.9679, 1.0274, 1.0363],
         [0.9746, 1.0161, 1.0275],
         [0.9792, 1.0189, 0.9965]],
        [[0.9371, 0.9852, 1.0534],
         [0.9347, 0.9871, 1.0238],
         [0.9315, 0.9829, 1.0274],
         ...,
         [0.9349, 0.9930, 0.9956],
         [0.9316, 0.9818, 1.0210],
         [0.9297, 0.9849, 0.9811]],
        [[0.9339, 0.9801, 1.0477],
         [0.9311, 0.9830, 1.0184],
         [0.9268, 0.9793, 1.0241],
         ...,
         [0.9313, 0.9890, 0.9910],
         [0.9271, 0.9779, 1.0202],
         [0.9246, 0.9810, 0.9793]],
        ...,
        [[0.9302, 0.9739, 1.0408],
         [0.9266, 0.9780, 1.0119],
         [0.9213, 0.9748, 1.0201],
         ...,
         [0.9270, 0.9842, 0.9853],
         [0.9217, 0.9731, 1.0192],
         [0.9187, 0.9763, 0.9770]],
        [[0.9400, 0.9901, 1.0588],
         [0.9383, 0.9909, 1.0289],
         [0.9359, 0.9863, 1.0304],
         ...,
         [0.9383, 0.9967, 0.9999],
         [0.9358, 0.9855, 1.0217],
         [0.9345, 0.9885, 0.9828]],
        [[0.9467, 1.0011, 1.0710],
         [0.9464, 0.9996, 1.0404],
         [0.9463, 0.9940, 1.0372],
         ...,
         [0.9461, 1.0050, 1.0098],
         [0.9459, 0.9938, 1.0234],
         [0.9459, 0.9968, 0.9866]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8666, 12.7822, 21.7400],
         [12.2655, 12.2049, 19.9358],
         [12.8137, 11.8128, 19.0162],
         ...,
         [12.1787, 12.4254, 17.6572],
         [12.6881, 11.9113, 17.2538],
         [13.0770, 12.0182, 15.2556]],
        [[ 9.9752, 10.5212, 18.6789],
         [ 9.7236, 10.5346, 16.9881],
         [ 9.4716, 10.3335, 17.2712],
         ...,
         [ 9.7363, 10.8280, 15.1422],
         [ 9.4753, 10.2775, 16.8701],
         [ 9.3189, 10.4311, 14.2981]],
        [[ 9.7631, 10.2707, 18.3313],
         [ 9.4481, 10.3444, 16.6549],
         [ 9.1238, 10.1638, 17.0666],
         ...,
         [ 9.4702, 10.6451, 14.8569],
         [ 9.1390, 10.0916, 16.8232],
         [ 8.9362, 10.2498, 14.1839]],
        ...,
        [[ 9.5060,  9.9680, 17.9088],
         [ 9.1169, 10.1131, 16.2504],
         [ 8.7098,  9.9570, 16.8161],
         ...,
         [ 9.1500, 10.4224, 14.5103],
         [ 8.7381,  9.8654, 16.7652],
         [ 8.4829, 10.0292, 14.0433]],
        [[10.1751, 10.7579, 19.0057],
         [ 9.9852, 10.7132, 17.3016],
         [ 9.8045, 10.4927, 17.4622],
         ...,
         [ 9.9885, 10.9996, 15.4105],
         [ 9.7968, 10.4523, 16.9135],
         [ 9.6868, 10.6013, 14.4044]],
        [[10.6305, 11.2992, 19.7472],
         [10.5874, 11.1184, 18.0140],
         [10.5809, 10.8528, 17.8913],
         ...,
         [10.5686, 11.3881, 16.0193],
         [10.5454, 10.8485, 17.0097],
         [10.5509, 10.9868, 14.6418]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9632, 1.0326, 1.1022],
         [0.9685, 1.0202, 1.0728],
         [0.9758, 1.0118, 1.0579],
         ...,
         [0.9674, 1.0249, 1.0358],
         [0.9741, 1.0139, 1.0292],
         [0.9792, 1.0162, 0.9967]],
        [[0.9382, 0.9841, 1.0524],
         [0.9349, 0.9844, 1.0249],
         [0.9316, 0.9800, 1.0295],
         ...,
         [0.9351, 0.9906, 0.9948],
         [0.9316, 0.9788, 1.0229],
         [0.9296, 0.9821, 0.9811]],
        [[0.9354, 0.9787, 1.0467],
         [0.9313, 0.9803, 1.0194],
         [0.9270, 0.9764, 1.0261],
         ...,
         [0.9316, 0.9867, 0.9902],
         [0.9272, 0.9749, 1.0222],
         [0.9245, 0.9782, 0.9793]],
        ...,
        [[0.9320, 0.9722, 1.0398],
         [0.9269, 0.9753, 1.0129],
         [0.9215, 0.9720, 1.0221],
         ...,
         [0.9273, 0.9820, 0.9846],
         [0.9219, 0.9700, 1.0212],
         [0.9185, 0.9735, 0.9770]],
        [[0.9409, 0.9891, 1.0577],
         [0.9384, 0.9882, 1.0300],
         [0.9360, 0.9835, 1.0326],
         ...,
         [0.9384, 0.9943, 0.9992],
         [0.9359, 0.9826, 1.0237],
         [0.9344, 0.9858, 0.9828]],
        [[0.9469, 1.0008, 1.0697],
         [0.9463, 0.9969, 1.0416],
         [0.9462, 0.9912, 1.0396],
         ...,
         [0.9461, 1.0027, 1.0091],
         [0.9458, 0.9911, 1.0252],
         [0.9459, 0.9941, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9514, 12.6583, 21.8106],
         [12.2829, 12.2030, 19.8906],
         [12.8269, 11.8119, 18.9107],
         ...,
         [12.2013, 12.4161, 17.6891],
         [12.7072, 11.8951, 17.1951],
         [13.0725, 12.0176, 15.2570]],
        [[ 9.9111, 10.4708, 18.7330],
         [ 9.7109, 10.5330, 16.9549],
         [ 9.4622, 10.3365, 17.1957],
         ...,
         [ 9.7230, 10.8143, 15.1827],
         [ 9.4669, 10.2835, 16.8013],
         [ 9.3206, 10.4309, 14.3087]],
        [[ 9.6840, 10.2277, 18.3836],
         [ 9.4326, 10.3428, 16.6230],
         [ 9.1125, 10.1672, 16.9945],
         ...,
         [ 9.4535, 10.6310, 14.8982],
         [ 9.1281, 10.0999, 16.7531],
         [ 8.9384, 10.2497, 14.1955]],
        ...,
        [[ 9.4095,  9.9339, 17.9589],
         [ 9.0981, 10.1116, 16.2201],
         [ 8.6963,  9.9609, 16.7481],
         ...,
         [ 9.1294, 10.4078, 14.5525],
         [ 8.7245,  9.8765, 16.6936],
         [ 8.4856, 10.0291, 14.0562]],
        [[10.1254, 10.7003, 19.0615],
         [ 9.9752, 10.7117, 17.2671],
         [ 9.7970, 10.4954, 17.3835],
         ...,
         [ 9.9786, 10.9864, 15.4501],
         [ 9.7908, 10.4561, 16.8458],
         [ 9.6880, 10.6011, 14.4140]],
        [[10.6149, 11.2247, 19.8069],
         [10.5841, 11.1167, 17.9767],
         [10.5783, 10.8545, 17.8054],
         ...,
         [10.5666, 11.3758, 16.0571],
         [10.5453, 10.8471, 16.9445],
         [10.5508, 10.9865, 14.6492]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9644, 1.0317, 1.1031],
         [0.9688, 1.0220, 1.0719],
         [0.9760, 1.0136, 1.0559],
         ...,
         [0.9677, 1.0265, 1.0361],
         [0.9744, 1.0154, 1.0280],
         [0.9792, 1.0180, 0.9965]],
        [[0.9375, 0.9848, 1.0531],
         [0.9348, 0.9861, 1.0241],
         [0.9315, 0.9819, 1.0281],
         ...,
         [0.9350, 0.9922, 0.9953],
         [0.9316, 0.9808, 1.0216],
         [0.9296, 0.9840, 0.9811]],
        [[0.9345, 0.9796, 1.0474],
         [0.9311, 0.9821, 1.0187],
         [0.9269, 0.9783, 1.0248],
         ...,
         [0.9314, 0.9882, 0.9907],
         [0.9271, 0.9769, 1.0209],
         [0.9246, 0.9801, 0.9793]],
        ...,
        [[0.9308, 0.9733, 1.0405],
         [0.9267, 0.9771, 1.0122],
         [0.9214, 0.9739, 1.0208],
         ...,
         [0.9271, 0.9835, 0.9851],
         [0.9218, 0.9721, 1.0199],
         [0.9186, 0.9753, 0.9770]],
        [[0.9403, 0.9897, 1.0584],
         [0.9383, 0.9900, 1.0292],
         [0.9359, 0.9853, 1.0311],
         ...,
         [0.9383, 0.9959, 0.9997],
         [0.9359, 0.9845, 1.0224],
         [0.9345, 0.9876, 0.9828]],
        [[0.9468, 1.0010, 1.0705],
         [0.9463, 0.9987, 1.0408],
         [0.9463, 0.9930, 1.0380],
         ...,
         [0.9461, 1.0042, 1.0095],
         [0.9458, 0.9929, 1.0240],
         [0.9459, 0.9959, 0.9866]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8839, 12.7563, 21.7546],
         [12.2691, 12.2045, 19.9264],
         [12.8164, 11.8126, 18.9943],
         ...,
         [12.1834, 12.4235, 17.6637],
         [12.6920, 11.9078, 17.2415],
         [13.0761, 12.0181, 15.2559]],
        [[ 9.9618, 10.5101, 18.6901],
         [ 9.7210, 10.5342, 16.9812],
         [ 9.4696, 10.3341, 17.2555],
         ...,
         [ 9.7335, 10.8251, 15.1506],
         [ 9.4736, 10.2788, 16.8558],
         [ 9.3193, 10.4311, 14.3003]],
        [[ 9.7466, 10.2611, 18.3421],
         [ 9.4448, 10.3441, 16.6482],
         [ 9.1215, 10.1645, 17.0516],
         ...,
         [ 9.4667, 10.6422, 14.8655],
         [ 9.1367, 10.0933, 16.8087],
         [ 8.9366, 10.2498, 14.1863]],
        ...,
        [[ 9.4859,  9.9603, 17.9192],
         [ 9.1130, 10.1128, 16.2441],
         [ 8.7070,  9.9578, 16.8019],
         ...,
         [ 9.1458, 10.4194, 14.5190],
         [ 8.7352,  9.8677, 16.7504],
         [ 8.4834, 10.0292, 14.0460]],
        [[10.1647, 10.7454, 19.0173],
         [ 9.9831, 10.7129, 17.2944],
         [ 9.8029, 10.4933, 17.4459],
         ...,
         [ 9.9865, 10.9969, 15.4187],
         [ 9.7956, 10.4531, 16.8995],
         [ 9.6871, 10.6013, 14.4064]],
        [[10.6271, 11.2833, 19.7596],
         [10.5867, 11.1180, 18.0063],
         [10.5804, 10.8532, 17.8734],
         ...,
         [10.5682, 11.3855, 16.0271],
         [10.5454, 10.8482, 16.9962],
         [10.5509, 10.9868, 14.6434]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9635, 1.0324, 1.1023],
         [0.9686, 1.0205, 1.0726],
         [0.9758, 1.0121, 1.0575],
         ...,
         [0.9674, 1.0252, 1.0358],
         [0.9742, 1.0142, 1.0289],
         [0.9792, 1.0165, 0.9966]],
        [[0.9381, 0.9842, 1.0525],
         [0.9349, 0.9847, 1.0247],
         [0.9316, 0.9804, 1.0292],
         ...,
         [0.9351, 0.9910, 0.9949],
         [0.9316, 0.9793, 1.0227],
         [0.9296, 0.9825, 0.9811]],
        [[0.9352, 0.9789, 1.0468],
         [0.9312, 0.9807, 1.0193],
         [0.9270, 0.9768, 1.0259],
         ...,
         [0.9315, 0.9870, 0.9903],
         [0.9272, 0.9753, 1.0219],
         [0.9245, 0.9786, 0.9793]],
        ...,
        [[0.9318, 0.9724, 1.0400],
         [0.9269, 0.9757, 1.0127],
         [0.9215, 0.9724, 1.0218],
         ...,
         [0.9273, 0.9823, 0.9847],
         [0.9219, 0.9704, 1.0210],
         [0.9185, 0.9739, 0.9770]],
        [[0.9408, 0.9893, 1.0578],
         [0.9384, 0.9886, 1.0298],
         [0.9360, 0.9839, 1.0323],
         ...,
         [0.9384, 0.9946, 0.9993],
         [0.9359, 0.9830, 1.0234],
         [0.9344, 0.9862, 0.9828]],
        [[0.9469, 1.0008, 1.0699],
         [0.9463, 0.9972, 1.0414],
         [0.9463, 0.9916, 1.0392],
         ...,
         [0.9461, 1.0030, 1.0092],
         [0.9458, 0.9915, 1.0250],
         [0.9459, 0.9944, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9282, 12.6915, 21.7916],
         [12.2782, 12.2035, 19.9028],
         [12.8233, 11.8121, 18.9391],
         ...,
         [12.1952, 12.4186, 17.6804],
         [12.7021, 11.8993, 17.2108],
         [13.0737, 12.0178, 15.2566]],
        [[ 9.9282, 10.4837, 18.7184],
         [ 9.7143, 10.5334, 16.9638],
         [ 9.4647, 10.3357, 17.2160],
         ...,
         [ 9.7265, 10.8180, 15.1718],
         [ 9.4692, 10.2819, 16.8198],
         [ 9.3201, 10.4310, 14.3058]],
        [[ 9.7052, 10.2386, 18.3694],
         [ 9.4367, 10.3433, 16.6316],
         [ 9.1155, 10.1663, 17.0139],
         ...,
         [ 9.4580, 10.6348, 14.8871],
         [ 9.1311, 10.0977, 16.7720],
         [ 8.9378, 10.2497, 14.1924]],
        ...,
        [[ 9.4353,  9.9423, 17.9454],
         [ 9.1032, 10.1120, 16.2282],
         [ 8.6999,  9.9599, 16.7664],
         ...,
         [ 9.1349, 10.4117, 14.5411],
         [ 8.7281,  9.8735, 16.7129],
         [ 8.4849, 10.0291, 14.0527]],
        [[10.1386, 10.7152, 19.0464],
         [ 9.9779, 10.7121, 17.2764],
         [ 9.7990, 10.4947, 17.4047],
         ...,
         [ 9.9812, 10.9899, 15.4394],
         [ 9.7924, 10.4550, 16.8640],
         [ 9.6877, 10.6012, 14.4114]],
        [[10.6189, 11.2443, 19.7908],
         [10.5850, 11.1171, 17.9868],
         [10.5790, 10.8540, 17.8285],
         ...,
         [10.5671, 11.3791, 16.0469],
         [10.5453, 10.8474, 16.9621],
         [10.5508, 10.9866, 14.6472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9641, 1.0319, 1.1028],
         [0.9687, 1.0215, 1.0721],
         [0.9759, 1.0131, 1.0564],
         ...,
         [0.9676, 1.0261, 1.0360],
         [0.9743, 1.0150, 1.0283],
         [0.9792, 1.0175, 0.9966]],
        [[0.9377, 0.9846, 1.0529],
         [0.9348, 0.9857, 1.0243],
         [0.9315, 0.9814, 1.0284],
         ...,
         [0.9350, 0.9918, 0.9952],
         [0.9316, 0.9803, 1.0220],
         [0.9296, 0.9835, 0.9811]],
        [[0.9347, 0.9793, 1.0472],
         [0.9312, 0.9816, 1.0189],
         [0.9269, 0.9778, 1.0251],
         ...,
         [0.9314, 0.9878, 0.9905],
         [0.9271, 0.9763, 1.0212],
         [0.9246, 0.9796, 0.9792]],
        ...,
        [[0.9311, 0.9730, 1.0403],
         [0.9268, 0.9766, 1.0124],
         [0.9214, 0.9734, 1.0211],
         ...,
         [0.9272, 0.9831, 0.9849],
         [0.9218, 0.9715, 1.0202],
         [0.9186, 0.9749, 0.9770]],
        [[0.9404, 0.9896, 1.0582],
         [0.9383, 0.9895, 1.0294],
         [0.9360, 0.9848, 1.0315],
         ...,
         [0.9384, 0.9955, 0.9995],
         [0.9359, 0.9840, 1.0227],
         [0.9345, 0.9871, 0.9828]],
        [[0.9468, 1.0009, 1.0703],
         [0.9463, 0.9982, 1.0410],
         [0.9463, 0.9925, 1.0384],
         ...,
         [0.9461, 1.0038, 1.0094],
         [0.9458, 0.9924, 1.0243],
         [0.9459, 0.9954, 0.9866]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8929, 12.7430, 21.7622],
         [12.2710, 12.2043, 19.9216],
         [12.8178, 11.8125, 18.9829],
         ...,
         [12.1858, 12.4224, 17.6671],
         [12.6941, 11.9060, 17.2352],
         [13.0756, 12.0180, 15.2560]],
        [[ 9.9548, 10.5046, 18.6959],
         [ 9.7196, 10.5341, 16.9776],
         [ 9.4686, 10.3345, 17.2474],
         ...,
         [ 9.7321, 10.8237, 15.1549],
         [ 9.4727, 10.2794, 16.8484],
         [ 9.3195, 10.4311, 14.3015]],
        [[ 9.7380, 10.2563, 18.3477],
         [ 9.4432, 10.3439, 16.6448],
         [ 9.1202, 10.1649, 17.0439],
         ...,
         [ 9.4649, 10.6406, 14.8699],
         [ 9.1356, 10.0942, 16.8011],
         [ 8.9369, 10.2498, 14.1875]],
        ...,
        [[ 9.4755,  9.9564, 17.9245],
         [ 9.1110, 10.1126, 16.2408],
         [ 8.7056,  9.9582, 16.7946],
         ...,
         [ 9.1435, 10.4178, 14.5236],
         [ 8.7338,  9.8689, 16.7427],
         [ 8.4837, 10.0292, 14.0474]],
        [[10.1593, 10.7390, 19.0232],
         [ 9.9820, 10.7127, 17.2907],
         [ 9.8021, 10.4936, 17.4374],
         ...,
         [ 9.9854, 10.9954, 15.4229],
         [ 9.7949, 10.4535, 16.8922],
         [ 9.6872, 10.6013, 14.4075]],
        [[10.6254, 11.2752, 19.7660],
         [10.5864, 11.1178, 18.0023],
         [10.5801, 10.8533, 17.8642],
         ...,
         [10.5680, 11.3842, 16.0312],
         [10.5454, 10.8480, 16.9891],
         [10.5509, 10.9867, 14.6441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9636, 1.0323, 1.1024],
         [0.9686, 1.0207, 1.0725],
         [0.9758, 1.0123, 1.0572],
         ...,
         [0.9675, 1.0254, 1.0358],
         [0.9742, 1.0143, 1.0288],
         [0.9792, 1.0167, 0.9966]],
        [[0.9380, 0.9843, 1.0526],
         [0.9349, 0.9849, 1.0246],
         [0.9316, 0.9806, 1.0290],
         ...,
         [0.9350, 0.9911, 0.9950],
         [0.9316, 0.9795, 1.0225],
         [0.9296, 0.9827, 0.9811]],
        [[0.9351, 0.9790, 1.0469],
         [0.9312, 0.9808, 1.0192],
         [0.9270, 0.9770, 1.0257],
         ...,
         [0.9315, 0.9872, 0.9903],
         [0.9272, 0.9755, 1.0218],
         [0.9245, 0.9788, 0.9792]],
        ...,
        [[0.9317, 0.9725, 1.0400],
         [0.9268, 0.9759, 1.0126],
         [0.9215, 0.9726, 1.0217],
         ...,
         [0.9273, 0.9824, 0.9847],
         [0.9219, 0.9707, 1.0208],
         [0.9185, 0.9741, 0.9770]],
        [[0.9407, 0.9893, 1.0579],
         [0.9383, 0.9888, 1.0297],
         [0.9360, 0.9841, 1.0321],
         ...,
         [0.9384, 0.9948, 0.9993],
         [0.9359, 0.9832, 1.0232],
         [0.9345, 0.9864, 0.9828]],
        [[0.9469, 1.0008, 1.0700],
         [0.9463, 0.9974, 1.0413],
         [0.9463, 0.9918, 1.0390],
         ...,
         [0.9461, 1.0032, 1.0092],
         [0.9458, 0.9917, 1.0248],
         [0.9459, 0.9946, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8858, 12.7535, 21.7562],
         [12.2695, 12.2045, 19.9254],
         [12.8167, 11.8126, 18.9919],
         ...,
         [12.1839, 12.4232, 17.6644],
         [12.6925, 11.9075, 17.2402],
         [13.0760, 12.0181, 15.2559]],
        [[ 9.9603, 10.5090, 18.6913],
         [ 9.7207, 10.5342, 16.9804],
         [ 9.4694, 10.3342, 17.2538],
         ...,
         [ 9.7332, 10.8248, 15.1515],
         [ 9.4734, 10.2789, 16.8543],
         [ 9.3193, 10.4311, 14.3006]],
        [[ 9.7448, 10.2601, 18.3433],
         [ 9.4445, 10.3440, 16.6475],
         [ 9.1212, 10.1646, 17.0500],
         ...,
         [ 9.4664, 10.6419, 14.8664],
         [ 9.1365, 10.0935, 16.8071],
         [ 8.9367, 10.2498, 14.1865]],
        ...,
        [[ 9.4837,  9.9595, 17.9203],
         [ 9.1126, 10.1127, 16.2434],
         [ 8.7067,  9.9579, 16.8004],
         ...,
         [ 9.1453, 10.4190, 14.5200],
         [ 8.7349,  9.8680, 16.7487],
         [ 8.4835, 10.0292, 14.0463]],
        [[10.1635, 10.7441, 19.0185],
         [ 9.9829, 10.7129, 17.2936],
         [ 9.8027, 10.4933, 17.4441],
         ...,
         [ 9.9862, 10.9966, 15.4196],
         [ 9.7955, 10.4532, 16.8979],
         [ 9.6871, 10.6013, 14.4066]],
        [[10.6268, 11.2816, 19.7609],
         [10.5867, 11.1180, 18.0054],
         [10.5803, 10.8532, 17.8715],
         ...,
         [10.5681, 11.3852, 16.0280],
         [10.5454, 10.8481, 16.9947],
         [10.5509, 10.9868, 14.6435]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9635, 1.0324, 1.1024],
         [0.9686, 1.0206, 1.0726],
         [0.9758, 1.0122, 1.0574],
         ...,
         [0.9674, 1.0253, 1.0358],
         [0.9742, 1.0142, 1.0289],
         [0.9792, 1.0166, 0.9966]],
        [[0.9381, 0.9842, 1.0525],
         [0.9349, 0.9848, 1.0247],
         [0.9316, 0.9805, 1.0291],
         ...,
         [0.9351, 0.9910, 0.9949],
         [0.9316, 0.9793, 1.0226],
         [0.9296, 0.9826, 0.9811]],
        [[0.9352, 0.9789, 1.0469],
         [0.9312, 0.9807, 1.0193],
         [0.9270, 0.9768, 1.0258],
         ...,
         [0.9315, 0.9871, 0.9903],
         [0.9272, 0.9753, 1.0219],
         [0.9245, 0.9787, 0.9792]],
        ...,
        [[0.9318, 0.9724, 1.0400],
         [0.9269, 0.9757, 1.0127],
         [0.9215, 0.9724, 1.0218],
         ...,
         [0.9273, 0.9823, 0.9847],
         [0.9219, 0.9705, 1.0209],
         [0.9185, 0.9739, 0.9770]],
        [[0.9407, 0.9893, 1.0578],
         [0.9384, 0.9886, 1.0298],
         [0.9360, 0.9839, 1.0322],
         ...,
         [0.9384, 0.9947, 0.9993],
         [0.9359, 0.9830, 1.0233],
         [0.9344, 0.9862, 0.9828]],
        [[0.9469, 1.0008, 1.0699],
         [0.9463, 0.9973, 1.0414],
         [0.9463, 0.9916, 1.0392],
         ...,
         [0.9461, 1.0030, 1.0092],
         [0.9458, 0.9915, 1.0249],
         [0.9459, 0.9945, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8839, 12.7563, 21.7546],
         [12.2691, 12.2045, 19.9264],
         [12.8164, 11.8126, 18.9943],
         ...,
         [12.1834, 12.4235, 17.6637],
         [12.6920, 11.9078, 17.2415],
         [13.0761, 12.0181, 15.2559]],
        [[ 9.9618, 10.5101, 18.6901],
         [ 9.7210, 10.5342, 16.9812],
         [ 9.4696, 10.3341, 17.2555],
         ...,
         [ 9.7335, 10.8251, 15.1506],
         [ 9.4736, 10.2788, 16.8558],
         [ 9.3193, 10.4311, 14.3003]],
        [[ 9.7466, 10.2611, 18.3421],
         [ 9.4448, 10.3441, 16.6482],
         [ 9.1215, 10.1645, 17.0516],
         ...,
         [ 9.4667, 10.6422, 14.8655],
         [ 9.1367, 10.0933, 16.8087],
         [ 8.9366, 10.2498, 14.1863]],
        ...,
        [[ 9.4859,  9.9603, 17.9192],
         [ 9.1130, 10.1128, 16.2441],
         [ 8.7070,  9.9578, 16.8019],
         ...,
         [ 9.1458, 10.4194, 14.5190],
         [ 8.7352,  9.8677, 16.7504],
         [ 8.4834, 10.0292, 14.0460]],
        [[10.1647, 10.7454, 19.0173],
         [ 9.9831, 10.7129, 17.2944],
         [ 9.8029, 10.4933, 17.4459],
         ...,
         [ 9.9865, 10.9969, 15.4187],
         [ 9.7956, 10.4531, 16.8995],
         [ 9.6871, 10.6013, 14.4064]],
        [[10.6271, 11.2833, 19.7596],
         [10.5867, 11.1180, 18.0063],
         [10.5804, 10.8532, 17.8734],
         ...,
         [10.5682, 11.3855, 16.0271],
         [10.5454, 10.8482, 16.9962],
         [10.5509, 10.9868, 14.6434]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9635, 1.0324, 1.1023],
         [0.9686, 1.0205, 1.0726],
         [0.9758, 1.0121, 1.0575],
         ...,
         [0.9674, 1.0252, 1.0358],
         [0.9742, 1.0142, 1.0289],
         [0.9792, 1.0165, 0.9966]],
        [[0.9381, 0.9842, 1.0525],
         [0.9349, 0.9847, 1.0247],
         [0.9316, 0.9804, 1.0292],
         ...,
         [0.9351, 0.9910, 0.9949],
         [0.9316, 0.9793, 1.0227],
         [0.9296, 0.9825, 0.9811]],
        [[0.9352, 0.9789, 1.0468],
         [0.9312, 0.9807, 1.0193],
         [0.9270, 0.9768, 1.0259],
         ...,
         [0.9315, 0.9870, 0.9903],
         [0.9272, 0.9753, 1.0219],
         [0.9245, 0.9786, 0.9793]],
        ...,
        [[0.9318, 0.9724, 1.0400],
         [0.9269, 0.9757, 1.0127],
         [0.9215, 0.9724, 1.0218],
         ...,
         [0.9273, 0.9823, 0.9847],
         [0.9219, 0.9704, 1.0210],
         [0.9185, 0.9739, 0.9770]],
        [[0.9408, 0.9893, 1.0578],
         [0.9384, 0.9886, 1.0298],
         [0.9360, 0.9839, 1.0323],
         ...,
         [0.9384, 0.9946, 0.9993],
         [0.9359, 0.9830, 1.0234],
         [0.9344, 0.9862, 0.9828]],
        [[0.9469, 1.0008, 1.0699],
         [0.9463, 0.9972, 1.0414],
         [0.9463, 0.9916, 1.0392],
         ...,
         [0.9461, 1.0030, 1.0092],
         [0.9458, 0.9915, 1.0250],
         [0.9459, 0.9944, 0.9867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.8895, 11.9182, 21.1800],
         [12.7183, 12.1753, 18.9509],
         [13.1181, 11.9166, 16.8308],
         ...,
         [12.8354, 12.2258, 18.3526],
         [13.2083, 11.8260, 15.9864],
         [13.5194, 12.0173, 15.3740]],
        [[ 9.0691, 10.2751, 18.3965],
         [ 9.4621, 10.5115, 16.3669],
         [ 9.3041, 10.3967, 15.7777],
         ...,
         [ 9.4125, 10.5532, 15.8808],
         [ 9.2724, 10.3598, 15.3637],
         [ 9.1723, 10.4308, 14.5019]],
        [[ 8.6029, 10.0882, 18.0784],
         [ 9.1219, 10.3220, 16.0726],
         [ 8.9167, 10.2225, 15.6520],
         ...,
         [ 9.0579, 10.3628, 15.5990],
         [ 8.8750, 10.1914, 15.2883],
         [ 8.7423, 10.2496, 14.3974]],
        ...,
        [[ 8.0575,  9.8608, 17.6912],
         [ 8.7167, 10.0916, 15.7146],
         [ 8.4582, 10.0104, 15.4973],
         ...,
         [ 8.6364, 10.1312, 15.2561],
         [ 8.4055,  9.9863, 15.1953],
         [ 8.2364, 10.0290, 14.2688]],
        [[ 9.5218, 10.4508, 18.6951],
         [ 9.7873, 10.6895, 16.6434],
         [ 9.6766, 10.5601, 15.8946],
         ...,
         [ 9.7521, 10.7322, 16.1456],
         [ 9.6550, 10.5177, 15.4336],
         [ 9.5881, 10.6010, 14.5990]],
        [[10.6025, 10.8492, 19.3713],
         [10.5453, 11.0931, 17.2702],
         [10.5524, 10.9298, 16.1557],
         ...,
         [10.5456, 11.1378, 16.7455],
         [10.5561, 10.8747, 15.5890],
         [10.5736, 10.9863, 14.8156]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9812, 1.0210, 1.0818],
         [0.9658, 1.0265, 1.0455],
         [0.9710, 1.0209, 1.0110],
         ...,
         [0.9673, 1.0276, 1.0358],
         [0.9722, 1.0190, 0.9973],
         [0.9764, 1.0231, 0.9873]],
        [[0.9175, 0.9857, 1.0365],
         [0.9227, 0.9908, 1.0035],
         [0.9206, 0.9883, 0.9939],
         ...,
         [0.9221, 0.9917, 0.9956],
         [0.9202, 0.9876, 0.9872],
         [0.9189, 0.9891, 0.9731]],
        [[0.9114, 0.9817, 1.0313],
         [0.9182, 0.9867, 0.9987],
         [0.9155, 0.9846, 0.9919],
         ...,
         [0.9174, 0.9876, 0.9910],
         [0.9150, 0.9839, 0.9859],
         [0.9132, 0.9852, 0.9714]],
        ...,
        [[0.9042, 0.9769, 1.0250],
         [0.9129, 0.9818, 0.9929],
         [0.9095, 0.9801, 0.9893],
         ...,
         [0.9118, 0.9826, 0.9854],
         [0.9088, 0.9795, 0.9844],
         [0.9065, 0.9805, 0.9694]],
        [[0.9235, 0.9895, 1.0414],
         [0.9270, 0.9946, 1.0080],
         [0.9256, 0.9918, 0.9958],
         ...,
         [0.9266, 0.9955, 0.9999],
         [0.9253, 0.9909, 0.9883],
         [0.9244, 0.9927, 0.9747]],
        [[0.9378, 0.9980, 1.0523],
         [0.9370, 1.0033, 1.0182],
         [0.9371, 0.9998, 1.0000],
         ...,
         [0.9371, 1.0042, 1.0096],
         [0.9372, 0.9986, 0.9908],
         [0.9374, 1.0010, 0.9783]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.3705, 12.2914, 21.5837],
         [12.3984, 12.1957, 19.6437],
         [12.9051, 11.8196, 18.3067],
         ...,
         [12.3683, 12.3576, 17.8518],
         [12.8427, 11.8413, 16.8386],
         [13.2072, 12.0178, 15.2908]],
        [[ 9.6472, 10.3631, 18.5978],
         [ 9.6387, 10.5270, 16.7852],
         [ 9.4177, 10.3547, 16.7725],
         ...,
         [ 9.6300, 10.7243, 15.3697],
         [ 9.4095, 10.3079, 16.3721],
         [ 9.2728, 10.4310, 14.3617]],
        [[ 9.3548, 10.1465, 18.2581],
         [ 9.3429, 10.3370, 16.4616],
         [ 9.0575, 10.1865, 16.5918],
         ...,
         [ 9.3363, 10.5378, 15.0874],
         [ 9.0541, 10.1325, 16.3152],
         [ 8.8756, 10.2497, 14.2507]],
        ...,
        [[ 9.0042,  9.8839, 17.8452],
         [ 8.9884, 10.1059, 16.0687],
         [ 8.6295,  9.9815, 16.3702],
         ...,
         [ 8.9841, 10.3107, 14.7444],
         [ 8.6315,  9.9189, 16.2449],
         [ 8.4061, 10.0291, 14.1141]],
        [[ 9.9253, 10.5672, 18.9169],
         [ 9.9201, 10.7055, 17.0896],
         [ 9.7629, 10.5125, 16.9412],
         ...,
         [ 9.9094, 10.8995, 15.6349],
         [ 9.7500, 10.4726, 16.4247],
         [ 9.6553, 10.6012, 14.4649]],
        [[10.5676, 11.0319, 19.6408],
         [10.5704, 11.1103, 17.7810],
         [10.5702, 10.8692, 17.3193],
         ...,
         [10.5550, 11.2962, 16.2365],
         [10.5457, 10.8453, 16.5415],
         [10.5560, 10.9866, 14.6954]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9683, 1.0314, 1.0964],
         [0.9687, 1.0294, 1.0648],
         [0.9754, 1.0213, 1.0431],
         ...,
         [0.9683, 1.0328, 1.0357],
         [0.9746, 1.0218, 1.0192],
         [0.9794, 1.0256, 0.9941]],
        [[0.9323, 0.9901, 1.0478],
         [0.9322, 0.9936, 1.0184],
         [0.9293, 0.9899, 1.0182],
         ...,
         [0.9321, 0.9978, 0.9953],
         [0.9292, 0.9889, 1.0116],
         [0.9274, 0.9915, 0.9789]],
        [[0.9285, 0.9854, 1.0423],
         [0.9283, 0.9895, 1.0131],
         [0.9245, 0.9863, 1.0152],
         ...,
         [0.9282, 0.9938, 0.9907],
         [0.9245, 0.9851, 1.0107],
         [0.9221, 0.9876, 0.9771]],
        ...,
        [[0.9238, 0.9798, 1.0356],
         [0.9236, 0.9846, 1.0067],
         [0.9189, 0.9819, 1.0116],
         ...,
         [0.9236, 0.9889, 0.9852],
         [0.9189, 0.9805, 1.0096],
         [0.9159, 0.9829, 0.9749]],
        [[0.9360, 0.9944, 1.0530],
         [0.9359, 0.9974, 1.0233],
         [0.9339, 0.9933, 1.0209],
         ...,
         [0.9358, 1.0016, 0.9996],
         [0.9337, 0.9924, 1.0125],
         [0.9324, 0.9952, 0.9806]],
        [[0.9445, 1.0044, 1.0648],
         [0.9445, 1.0061, 1.0346],
         [0.9445, 1.0009, 1.0270],
         ...,
         [0.9443, 1.0101, 1.0094],
         [0.9442, 1.0004, 1.0144],
         [0.9443, 1.0034, 0.9844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9825, 11.8546, 20.1665],
         [12.6008, 12.1597, 18.9437],
         [13.0518, 11.8842, 17.0454],
         ...,
         [12.5853, 12.2672, 18.2698],
         [12.9821, 11.8429, 16.2055],
         [12.8109, 11.9943, 15.2386]],
        [[ 9.3543, 10.3008, 17.7044],
         [ 9.5149, 10.5007, 16.3440],
         [ 9.3282, 10.3858, 15.9097],
         ...,
         [ 9.5221, 10.5971, 15.8707],
         [ 9.3544, 10.3694, 15.6116],
         [ 9.4226, 10.4225, 14.4847]],
        [[ 8.9823, 10.1232, 17.4213],
         [ 9.1897, 10.3118, 16.0480],
         [ 8.9483, 10.2139, 15.7745],
         ...,
         [ 9.1990, 10.4069, 15.5965],
         [ 8.9825, 10.2002, 15.5396],
         [ 9.0711, 10.2428, 14.3940]],
        ...,
        [[ 8.5412,  9.9071, 17.0762],
         [ 8.8016, 10.0820, 15.6882],
         [ 8.4982, 10.0046, 15.6083],
         ...,
         [ 8.8131, 10.1755, 15.2628],
         [ 8.5414,  9.9941, 15.4507],
         [ 8.6529, 10.0241, 14.2822]],
        [[ 9.7113, 10.4676, 17.9698],
         [ 9.8253, 10.6782, 16.6220],
         [ 9.6932, 10.5470, 16.0356],
         ...,
         [ 9.8305, 10.7759, 16.1281],
         [ 9.7114, 10.5280, 15.6783],
         [ 9.7593, 10.5912, 14.5689]],
        [[10.5482, 10.8451, 18.5697],
         [10.5466, 11.0806, 17.2525],
         [10.5501, 10.9116, 16.3169],
         ...,
         [10.5469, 11.1810, 16.7110],
         [10.5482, 10.8868, 15.8267],
         [10.5454, 10.9731, 14.7566]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9783, 1.0208, 1.0670],
         [0.9733, 1.0273, 1.0471],
         [0.9792, 1.0214, 1.0162],
         ...,
         [0.9731, 1.0296, 1.0362],
         [0.9783, 1.0205, 1.0026],
         [0.9760, 1.0238, 0.9869]],
        [[0.9304, 0.9875, 1.0270],
         [0.9325, 0.9917, 1.0048],
         [0.9300, 0.9893, 0.9978],
         ...,
         [0.9326, 0.9938, 0.9971],
         [0.9304, 0.9889, 0.9929],
         [0.9313, 0.9901, 0.9746]],
        [[0.9254, 0.9836, 1.0224],
         [0.9282, 0.9877, 1.0000],
         [0.9250, 0.9856, 0.9956],
         ...,
         [0.9283, 0.9897, 0.9927],
         [0.9254, 0.9853, 0.9918],
         [0.9266, 0.9862, 0.9731]],
        ...,
        [[0.9196, 0.9790, 1.0168],
         [0.9230, 0.9828, 0.9942],
         [0.9190, 0.9811, 0.9929],
         ...,
         [0.9232, 0.9848, 0.9873],
         [0.9196, 0.9809, 0.9903],
         [0.9211, 0.9815, 0.9713]],
        [[0.9351, 0.9910, 1.0313],
         [0.9366, 0.9955, 1.0094],
         [0.9348, 0.9927, 0.9998],
         ...,
         [0.9366, 0.9976, 1.0013],
         [0.9351, 0.9923, 0.9940],
         [0.9357, 0.9937, 0.9760]],
        [[0.9461, 0.9991, 1.0410],
         [0.9461, 1.0042, 1.0196],
         [0.9462, 1.0006, 1.0044],
         ...,
         [0.9461, 1.0063, 1.0108],
         [0.9461, 1.0000, 0.9964],
         [0.9461, 1.0019, 0.9790]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.6340, 11.8143, 19.9541],
         [12.5842, 12.1667, 18.9617],
         [13.0008, 11.8898, 17.0667],
         ...,
         [12.5673, 12.2506, 18.1588],
         [12.9608, 11.8314, 16.1498],
         [13.1546, 12.0052, 15.3022]],
        [[ 9.4996, 10.3306, 17.6042],
         [ 9.5226, 10.5054, 16.3636],
         [ 9.3473, 10.3877, 15.9328],
         ...,
         [ 9.5306, 10.5783, 15.7868],
         [ 9.3626, 10.3633, 15.5598],
         [ 9.2911, 10.4263, 14.4846]],
        [[ 9.1702, 10.1604, 17.3333],
         [ 9.1996, 10.3163, 16.0678],
         [ 8.9732, 10.2155, 15.7978],
         ...,
         [ 9.2098, 10.3878, 15.5156],
         [ 8.9932, 10.1947, 15.4883],
         [ 8.8997, 10.2459, 14.3864]],
        ...,
        [[ 8.7771,  9.9530, 17.0028],
         [ 8.8139, 10.0862, 15.7080],
         [ 8.5297, 10.0057, 15.6318],
         ...,
         [ 8.8266, 10.1562, 15.1855],
         [ 8.5548,  9.9893, 15.4000],
         [ 8.4367, 10.0264, 14.2655]],
        [[ 9.8143, 10.4902, 17.8581],
         [ 9.8309, 10.6832, 16.6415],
         [ 9.7064, 10.5493, 16.0585],
         ...,
         [ 9.8366, 10.7572, 16.0414],
         [ 9.7171, 10.5214, 15.6262],
         [ 9.6677, 10.5957, 14.5758]],
        [[10.5460, 10.8513, 18.4314],
         [10.5469, 11.0861, 17.2716],
         [10.5486, 10.9148, 16.3393],
         ...,
         [10.5473, 11.1629, 16.6178],
         [10.5476, 10.8789, 15.7735],
         [10.5538, 10.9793, 14.7790]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9724, 1.0202, 1.0641],
         [0.9718, 1.0278, 1.0480],
         [0.9773, 1.0219, 1.0171],
         ...,
         [0.9715, 1.0296, 1.0349],
         [0.9767, 1.0206, 1.0022],
         [0.9793, 1.0243, 0.9885]],
        [[0.9310, 0.9884, 1.0259],
         [0.9313, 0.9922, 1.0057],
         [0.9290, 0.9896, 0.9987],
         ...,
         [0.9314, 0.9937, 0.9963],
         [0.9292, 0.9891, 0.9926],
         [0.9283, 0.9905, 0.9752]],
        [[0.9267, 0.9848, 1.0215],
         [0.9270, 0.9881, 1.0009],
         [0.9241, 0.9860, 0.9965],
         ...,
         [0.9272, 0.9897, 0.9919],
         [0.9243, 0.9855, 0.9915],
         [0.9231, 0.9866, 0.9736]],
        ...,
        [[0.9215, 0.9803, 1.0161],
         [0.9219, 0.9832, 0.9951],
         [0.9182, 0.9815, 0.9938],
         ...,
         [0.9221, 0.9847, 0.9866],
         [0.9185, 0.9811, 0.9900],
         [0.9170, 0.9819, 0.9716]],
        [[0.9352, 0.9918, 1.0300],
         [0.9354, 0.9960, 1.0102],
         [0.9337, 0.9931, 1.0008],
         ...,
         [0.9355, 0.9976, 1.0005],
         [0.9339, 0.9925, 0.9937],
         [0.9332, 0.9941, 0.9766]],
        [[0.9448, 0.9996, 1.0393],
         [0.9448, 1.0046, 1.0205],
         [0.9449, 1.0009, 1.0053],
         ...,
         [0.9449, 1.0063, 1.0098],
         [0.9449, 1.0002, 0.9961],
         [0.9449, 1.0023, 0.9799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.6941, 11.8117, 19.9591],
         [12.6052, 12.1664, 18.9303],
         [13.0166, 11.8961, 17.0055],
         ...,
         [12.6134, 12.2426, 18.1688],
         [12.9925, 11.8324, 16.1061],
         [13.1288, 12.0013, 15.2910]],
        [[ 9.4727, 10.3383, 17.6243],
         [ 9.5129, 10.5053, 16.3480],
         [ 9.3413, 10.3899, 15.8947],
         ...,
         [ 9.5090, 10.5698, 15.7954],
         [ 9.3504, 10.3639, 15.5111],
         [ 9.3002, 10.4250, 14.4838]],
        [[ 9.1356, 10.1692, 17.3549],
         [ 9.1871, 10.3161, 16.0539],
         [ 8.9655, 10.2172, 15.7624],
         ...,
         [ 9.1822, 10.3793, 15.5240],
         [ 8.9773, 10.1953, 15.4390],
         [ 8.9117, 10.2448, 14.3869]],
        ...,
        [[ 8.7338,  9.9632, 17.0263],
         [ 8.7983, 10.0860, 15.6962],
         [ 8.5199, 10.0069, 15.5996],
         ...,
         [ 8.7922, 10.1477, 15.1937],
         [ 8.5349,  9.9898, 15.3500],
         [ 8.4519, 10.0255, 14.2675]],
        [[ 9.7949, 10.4969, 17.8766],
         [ 9.8238, 10.6830, 16.6243],
         [ 9.7023, 10.5519, 16.0179],
         ...,
         [ 9.8211, 10.7488, 16.0501],
         [ 9.7087, 10.5220, 15.5780],
         [ 9.6740, 10.5941, 14.5738]],
        [[10.5454, 10.8556, 18.4464],
         [10.5465, 11.0859, 17.2507],
         [10.5491, 10.9183, 16.2931],
         ...,
         [10.5464, 11.1545, 16.6269],
         [10.5484, 10.8796, 15.7266],
         [10.5528, 10.9771, 14.7745]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9735, 1.0201, 1.0641],
         [0.9724, 1.0277, 1.0474],
         [0.9778, 1.0219, 1.0161],
         ...,
         [0.9725, 1.0294, 1.0350],
         [0.9775, 1.0206, 1.0015],
         [0.9793, 1.0242, 0.9882]],
        [[0.9310, 0.9885, 1.0262],
         [0.9315, 0.9921, 1.0054],
         [0.9292, 0.9896, 0.9980],
         ...,
         [0.9314, 0.9935, 0.9964],
         [0.9293, 0.9891, 0.9918],
         [0.9287, 0.9904, 0.9751]],
        [[0.9265, 0.9849, 1.0218],
         [0.9272, 0.9881, 1.0006],
         [0.9243, 0.9859, 0.9959],
         ...,
         [0.9271, 0.9894, 0.9920],
         [0.9244, 0.9855, 0.9906],
         [0.9236, 0.9865, 0.9735]],
        ...,
        [[0.9212, 0.9805, 1.0164],
         [0.9221, 0.9831, 0.9948],
         [0.9184, 0.9814, 0.9932],
         ...,
         [0.9220, 0.9844, 0.9866],
         [0.9186, 0.9811, 0.9892],
         [0.9175, 0.9818, 0.9716]],
        [[0.9352, 0.9919, 1.0303],
         [0.9356, 0.9959, 1.0099],
         [0.9340, 0.9931, 1.0000],
         ...,
         [0.9356, 0.9973, 1.0006],
         [0.9341, 0.9925, 0.9929],
         [0.9336, 0.9940, 0.9765]],
        [[0.9451, 0.9996, 1.0395],
         [0.9452, 1.0046, 1.0201],
         [0.9452, 1.0010, 1.0045],
         ...,
         [0.9452, 1.0060, 1.0099],
         [0.9452, 1.0001, 0.9953],
         [0.9452, 1.0022, 0.9798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7515, 11.8212, 19.7119],
         [12.6417, 12.1597, 18.7933],
         [13.0479, 11.9120, 16.8326],
         ...,
         [12.6596, 12.2167, 18.1245],
         [13.0061, 11.8409, 15.9866],
         [13.0240, 11.9900, 15.2549]],
        [[ 9.4477, 10.3561, 17.4890],
         [ 9.4961, 10.5007, 16.2733],
         [ 9.3296, 10.3951, 15.7870],
         ...,
         [ 9.4880, 10.5449, 15.7906],
         [ 9.3453, 10.3684, 15.3842],
         [ 9.3386, 10.4210, 14.4841]],
        [[ 9.1034, 10.1879, 17.2319],
         [ 9.1657, 10.3118, 15.9858],
         [ 8.9502, 10.2213, 15.6621],
         ...,
         [ 9.1553, 10.3545, 15.5234],
         [ 8.9706, 10.1993, 15.3112],
         [ 8.9618, 10.2416, 14.3914]],
        ...,
        [[ 8.6935,  9.9829, 16.9180],
         [ 8.7714, 10.0820, 15.6360],
         [ 8.5006, 10.0097, 15.5086],
         ...,
         [ 8.7585, 10.1230, 15.1981],
         [ 8.5264,  9.9933, 15.2211],
         [ 8.5153, 10.0233, 14.2772]],
        [[ 9.7771, 10.5139, 17.7298],
         [ 9.8118, 10.6782, 16.5432],
         [ 9.6942, 10.5582, 15.9031],
         ...,
         [ 9.8059, 10.7237, 16.0413],
         [ 9.7051, 10.5270, 15.4519],
         [ 9.7004, 10.5894, 14.5702]],
        [[10.5452, 10.8707, 18.2730],
         [10.5459, 11.0806, 17.1550],
         [10.5500, 10.9272, 16.1624],
         ...,
         [10.5457, 11.1292, 16.6088],
         [10.5488, 10.8855, 15.6023],
         [10.5493, 10.9706, 14.7619]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9753, 1.0192, 1.0602],
         [0.9738, 1.0265, 1.0452],
         [0.9792, 1.0212, 1.0133],
         ...,
         [0.9741, 1.0277, 1.0343],
         [0.9787, 1.0196, 0.9996],
         [0.9789, 1.0228, 0.9877]],
        [[0.9316, 0.9878, 1.0240],
         [0.9323, 0.9909, 1.0042],
         [0.9301, 0.9886, 0.9963],
         ...,
         [0.9322, 0.9918, 0.9964],
         [0.9303, 0.9881, 0.9898],
         [0.9302, 0.9892, 0.9751]],
        [[0.9271, 0.9842, 1.0198],
         [0.9279, 0.9868, 0.9996],
         [0.9251, 0.9849, 0.9943],
         ...,
         [0.9278, 0.9878, 0.9920],
         [0.9253, 0.9844, 0.9886],
         [0.9252, 0.9853, 0.9736]],
        ...,
        [[0.9217, 0.9798, 1.0147],
         [0.9227, 0.9819, 0.9939],
         [0.9191, 0.9804, 0.9918],
         ...,
         [0.9225, 0.9828, 0.9867],
         [0.9195, 0.9800, 0.9871],
         [0.9193, 0.9807, 0.9718]],
        [[0.9360, 0.9912, 1.0279],
         [0.9364, 0.9947, 1.0086],
         [0.9349, 0.9921, 0.9982],
         ...,
         [0.9364, 0.9957, 1.0005],
         [0.9350, 0.9915, 0.9909],
         [0.9350, 0.9928, 0.9765]],
        [[0.9461, 0.9988, 1.0368],
         [0.9461, 1.0033, 1.0186],
         [0.9462, 1.0000, 1.0024],
         ...,
         [0.9461, 1.0044, 1.0097],
         [0.9462, 0.9991, 0.9933],
         [0.9462, 1.0010, 0.9797]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8305, 11.8296, 19.4345],
         [12.6768, 12.1549, 18.6823],
         [13.0627, 11.9245, 16.6887],
         ...,
         [12.6979, 12.2005, 18.1150],
         [13.0276, 11.8513, 15.9009],
         [13.0634, 11.9899, 15.2639]],
        [[ 9.4145, 10.3622, 17.3126],
         [ 9.4804, 10.4976, 16.2152],
         [ 9.3242, 10.3992, 15.6972],
         ...,
         [ 9.4710, 10.5309, 15.8091],
         [ 9.3372, 10.3732, 15.2920],
         [ 9.3239, 10.4210, 14.5014]],
        [[ 9.0606, 10.1937, 17.0666],
         [ 9.1454, 10.3088, 15.9334],
         [ 8.9430, 10.2245, 15.5786],
         ...,
         [ 9.1334, 10.3408, 15.5449],
         [ 8.9601, 10.2035, 15.2183],
         [ 8.9427, 10.2416, 14.4097]],
        ...,
        [[ 8.6397,  9.9883, 16.7661],
         [ 8.7461, 10.0793, 15.5905],
         [ 8.4916, 10.0118, 15.4327],
         ...,
         [ 8.7311, 10.1096, 15.2231],
         [ 8.5131,  9.9968, 15.1273],
         [ 8.4911, 10.0233, 14.2966]],
        [[ 9.7536, 10.5202, 17.5429],
         [ 9.8004, 10.6750, 16.4798],
         [ 9.6905, 10.5632, 15.8075],
         ...,
         [ 9.7937, 10.7095, 16.0571],
         [ 9.6995, 10.5323, 15.3604],
         [ 9.6903, 10.5893, 14.5866]],
        [[10.5456, 10.8775, 18.0619],
         [10.5455, 11.0770, 17.0791],
         [10.5505, 10.9341, 16.0535],
         ...,
         [10.5454, 11.1145, 16.6180],
         [10.5494, 10.8922, 15.5124],
         [10.5505, 10.9706, 14.7763]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9761, 1.0189, 1.0556],
         [0.9741, 1.0259, 1.0433],
         [0.9792, 1.0209, 1.0109],
         ...,
         [0.9744, 1.0269, 1.0341],
         [0.9787, 1.0194, 0.9981],
         [0.9792, 1.0224, 0.9877]],
        [[0.9310, 0.9874, 1.0211],
         [0.9319, 0.9904, 1.0032],
         [0.9298, 0.9882, 0.9948],
         ...,
         [0.9317, 0.9911, 0.9966],
         [0.9300, 0.9877, 0.9882],
         [0.9298, 0.9887, 0.9753]],
        [[0.9263, 0.9838, 1.0171],
         [0.9274, 0.9863, 0.9986],
         [0.9248, 0.9845, 0.9929],
         ...,
         [0.9273, 0.9870, 0.9923],
         [0.9250, 0.9840, 0.9870],
         [0.9248, 0.9849, 0.9738]],
        ...,
        [[0.9208, 0.9794, 1.0122],
         [0.9222, 0.9814, 0.9930],
         [0.9188, 0.9799, 0.9905],
         ...,
         [0.9220, 0.9820, 0.9871],
         [0.9191, 0.9796, 0.9855],
         [0.9188, 0.9802, 0.9720]],
        [[0.9355, 0.9908, 1.0248],
         [0.9361, 0.9942, 1.0075],
         [0.9346, 0.9918, 0.9966],
         ...,
         [0.9360, 0.9949, 1.0006],
         [0.9348, 0.9911, 0.9893],
         [0.9346, 0.9923, 0.9767]],
        [[0.9459, 0.9985, 1.0332],
         [0.9459, 1.0028, 1.0173],
         [0.9460, 0.9997, 1.0006],
         ...,
         [0.9459, 1.0036, 1.0098],
         [0.9460, 0.9988, 0.9918],
         [0.9460, 1.0005, 0.9798]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9763, 11.8611, 18.4793],
         [12.7734, 12.1407, 18.3392],
         [13.0820, 11.9598, 16.2768],
         ...,
         [12.8022, 12.1580, 18.0810],
         [13.0741, 11.8911, 15.6706],
         [13.1002, 11.9881, 15.2780]],
        [[ 9.3566, 10.3773, 16.7001],
         [ 9.4384, 10.4887, 16.0462],
         [ 9.3171, 10.4108, 15.4441],
         ...,
         [ 9.4262, 10.4996, 15.8677],
         [ 9.3200, 10.3882, 15.0486],
         [ 9.3105, 10.4203, 14.5534]],
        [[ 8.9854, 10.2070, 16.4921],
         [ 9.0914, 10.3005, 15.7831],
         [ 8.9338, 10.2335, 15.3440],
         ...,
         [ 9.0757, 10.3107, 15.6133],
         [ 8.9376, 10.2159, 14.9733],
         [ 8.9252, 10.2411, 14.4661]],
        ...,
        [[ 8.5450,  9.9995, 16.2376],
         [ 8.6784, 10.0716, 15.4625],
         [ 8.4799, 10.0177, 15.2207],
         ...,
         [ 8.6587, 10.0810, 15.3032],
         [ 8.4847, 10.0060, 14.8804],
         [ 8.4689, 10.0229, 14.3585]],
        [[ 9.7129, 10.5370, 16.8944],
         [ 9.7705, 10.6655, 16.2931],
         [ 9.6856, 10.5771, 15.5371],
         ...,
         [ 9.7619, 10.6771, 16.1063],
         [ 9.6876, 10.5498, 15.1184],
         [ 9.6811, 10.5886, 14.6344]],
        [[10.5480, 10.8982, 17.3313],
         [10.5452, 11.0663, 16.8512],
         [10.5511, 10.9537, 15.7442],
         ...,
         [10.5453, 11.0794, 16.6455],
         [10.5508, 10.9155, 15.2736],
         [10.5517, 10.9695, 14.8149]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9776, 1.0190, 1.0401],
         [0.9749, 1.0250, 1.0378],
         [0.9790, 1.0211, 1.0043],
         ...,
         [0.9753, 1.0253, 1.0336],
         [0.9789, 1.0196, 0.9944],
         [0.9793, 1.0217, 0.9880]],
        [[0.9298, 0.9872, 1.0112],
         [0.9309, 0.9895, 1.0005],
         [0.9293, 0.9879, 0.9907],
         ...,
         [0.9307, 0.9898, 0.9976],
         [0.9293, 0.9874, 0.9843],
         [0.9292, 0.9881, 0.9762]],
        [[0.9249, 0.9835, 1.0078],
         [0.9263, 0.9855, 0.9962],
         [0.9242, 0.9841, 0.9891],
         ...,
         [0.9261, 0.9857, 0.9935],
         [0.9242, 0.9837, 0.9831],
         [0.9241, 0.9842, 0.9748]],
        ...,
        [[0.9191, 0.9791, 1.0036],
         [0.9208, 0.9806, 0.9910],
         [0.9182, 0.9794, 0.9871],
         ...,
         [0.9206, 0.9808, 0.9884],
         [0.9183, 0.9792, 0.9816],
         [0.9180, 0.9796, 0.9731]],
        [[0.9345, 0.9906, 1.0143],
         [0.9352, 0.9933, 1.0045],
         [0.9341, 0.9914, 0.9922],
         ...,
         [0.9351, 0.9936, 1.0015],
         [0.9342, 0.9909, 0.9854],
         [0.9341, 0.9917, 0.9776]],
        [[0.9455, 0.9983, 1.0214],
         [0.9455, 1.0019, 1.0136],
         [0.9456, 0.9995, 0.9956],
         ...,
         [0.9455, 1.0022, 1.0103],
         [0.9456, 0.9987, 0.9880],
         [0.9456, 0.9999, 0.9805]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1335, 11.9254, 17.3370],
         [12.8731, 12.1178, 17.8141],
         [13.1116, 12.0052, 15.7822],
         ...,
         [12.8775, 12.0961, 17.8903],
         [13.0833, 11.9504, 15.3876],
         [13.1319, 11.9860, 15.2938]],
        [[ 9.2985, 10.3995, 15.9946],
         [ 9.3972, 10.4756, 15.8114],
         [ 9.3064, 10.4264, 15.1498],
         ...,
         [ 9.3954, 10.4644, 15.8682],
         [ 9.3166, 10.4077, 14.7626],
         [ 9.2991, 10.4196, 14.6194]],
        [[ 8.9094, 10.2247, 15.8358],
         [ 9.0381, 10.2885, 15.5797],
         [ 8.9198, 10.2460, 15.0733],
         ...,
         [ 9.0358, 10.2784, 15.6344],
         [ 8.9332, 10.2311, 14.6871],
         [ 8.9102, 10.2405, 14.5380]],
        ...,
        [[ 8.4491, 10.0119, 15.6409],
         [ 8.6114, 10.0608, 15.2968],
         [ 8.4621, 10.0264, 14.9789],
         ...,
         [ 8.6086, 10.0521, 15.3489],
         [ 8.4791, 10.0161, 14.5938],
         [ 8.4501, 10.0225, 14.4376]],
        [[ 9.6728, 10.5635, 16.1426],
         [ 9.7413, 10.6514, 16.0284],
         [ 9.6782, 10.5958, 15.2208],
         ...,
         [ 9.7401, 10.6391, 16.0873],
         [ 9.6853, 10.5734, 14.8328],
         [ 9.6733, 10.5877, 14.6949]],
        [[10.5530, 10.9346, 16.4740],
         [10.5460, 11.0499, 16.5178],
         [10.5521, 10.9793, 15.3786],
         ...,
         [10.5461, 11.0351, 16.5813],
         [10.5511, 10.9485, 14.9887],
         [10.5529, 10.9684, 14.8630]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9793, 1.0211, 1.0205],
         [0.9758, 1.0253, 1.0283],
         [0.9790, 1.0228, 0.9952],
         ...,
         [0.9759, 1.0248, 1.0295],
         [0.9786, 1.0217, 0.9888],
         [0.9793, 1.0224, 0.9873]],
        [[0.9286, 0.9884, 0.9987],
         [0.9299, 0.9900, 0.9957],
         [0.9287, 0.9890, 0.9849],
         ...,
         [0.9299, 0.9898, 0.9966],
         [0.9288, 0.9886, 0.9786],
         [0.9286, 0.9888, 0.9763]],
        [[0.9235, 0.9847, 0.9961],
         [0.9252, 0.9860, 0.9919],
         [0.9236, 0.9851, 0.9837],
         ...,
         [0.9251, 0.9858, 0.9928],
         [0.9238, 0.9848, 0.9774],
         [0.9235, 0.9850, 0.9750]],
        ...,
        [[0.9174, 0.9801, 0.9929],
         [0.9195, 0.9811, 0.9873],
         [0.9176, 0.9804, 0.9822],
         ...,
         [0.9195, 0.9810, 0.9882],
         [0.9178, 0.9802, 0.9759],
         [0.9174, 0.9803, 0.9733]],
        [[0.9336, 0.9919, 1.0011],
         [0.9345, 0.9938, 0.9992],
         [0.9336, 0.9926, 0.9861],
         ...,
         [0.9344, 0.9935, 1.0002],
         [0.9337, 0.9921, 0.9798],
         [0.9336, 0.9924, 0.9775]],
        [[0.9452, 0.9999, 1.0065],
         [0.9451, 1.0024, 1.0072],
         [0.9452, 1.0008, 0.9887],
         ...,
         [0.9451, 1.0020, 1.0082],
         [0.9452, 1.0002, 0.9823],
         [0.9452, 1.0006, 0.9803]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0269, 11.9980, 16.3153],
         [12.9614, 12.0879, 17.1297],
         [13.0698, 12.0394, 15.3222],
         ...,
         [12.9616, 12.0563, 17.5007],
         [13.0825, 12.0107, 15.1793],
         [13.0970, 11.9827, 15.2897]],
        [[ 9.3374, 10.4238, 15.3670],
         [ 9.3623, 10.4604, 15.5474],
         [ 9.3216, 10.4393, 14.8799],
         ...,
         [ 9.3623, 10.4462, 15.7869],
         [ 9.3169, 10.4284, 14.5657],
         [ 9.3116, 10.4184, 14.6741]],
        [[ 8.9604, 10.2439, 15.2535],
         [ 8.9929, 10.2748, 15.3620],
         [ 8.9396, 10.2566, 14.8261],
         ...,
         [ 8.9927, 10.2625, 15.5867],
         [ 8.9336, 10.2476, 14.4915],
         [ 8.9266, 10.2396, 14.5997]],
        ...,
        [[ 8.5135, 10.0249, 15.1138],
         [ 8.5544, 10.0490, 15.1349],
         [ 8.4872, 10.0344, 14.7595],
         ...,
         [ 8.5543, 10.0390, 15.3418],
         [ 8.4796, 10.0275, 14.3999],
         [ 8.4708, 10.0219, 14.5078]],
        [[ 9.6996, 10.5927, 15.4725],
         [ 9.7169, 10.6347, 15.7206],
         [ 9.6887, 10.6109, 14.9298],
         ...,
         [ 9.7169, 10.6188, 15.9739],
         [ 9.6855, 10.5981, 14.6345],
         [ 9.6818, 10.5863, 14.7432]],
        [[10.5494, 10.9752, 15.7080],
         [10.5477, 11.0297, 16.1095],
         [10.5507, 10.9994, 15.0405],
         ...,
         [10.5477, 11.0097, 16.3945],
         [10.5511, 10.9825, 14.7876],
         [10.5516, 10.9665, 14.8968]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9783, 1.0263, 1.0015],
         [0.9775, 1.0282, 1.0148],
         [0.9789, 1.0272, 0.9854],
         ...,
         [0.9775, 1.0276, 1.0208],
         [0.9791, 1.0266, 0.9830],
         [0.9793, 1.0260, 0.9848]],
        [[0.9296, 0.9926, 0.9861],
         [0.9299, 0.9933, 0.9890],
         [0.9294, 0.9929, 0.9782],
         ...,
         [0.9299, 0.9930, 0.9929],
         [0.9293, 0.9927, 0.9731],
         [0.9292, 0.9924, 0.9748]],
        [[0.9246, 0.9887, 0.9842],
         [0.9250, 0.9894, 0.9860],
         [0.9243, 0.9890, 0.9773],
         ...,
         [0.9250, 0.9891, 0.9897],
         [0.9242, 0.9888, 0.9719],
         [0.9241, 0.9886, 0.9736]],
        ...,
        [[0.9187, 0.9840, 0.9820],
         [0.9192, 0.9845, 0.9823],
         [0.9183, 0.9842, 0.9762],
         ...,
         [0.9192, 0.9843, 0.9857],
         [0.9182, 0.9841, 0.9704],
         [0.9181, 0.9839, 0.9721]],
        [[0.9344, 0.9962, 0.9878],
         [0.9346, 0.9971, 0.9918],
         [0.9342, 0.9966, 0.9790],
         ...,
         [0.9346, 0.9967, 0.9960],
         [0.9342, 0.9963, 0.9742],
         [0.9341, 0.9960, 0.9759]],
        [[0.9456, 1.0044, 0.9916],
         [0.9456, 1.0055, 0.9982],
         [0.9456, 1.0049, 0.9808],
         ...,
         [0.9456, 1.0051, 1.0028],
         [0.9456, 1.0045, 0.9767],
         [0.9456, 1.0042, 0.9784]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1096, 12.0124, 16.0356],
         [13.0437, 12.0869, 17.0832],
         [13.0673, 12.0521, 15.1908],
         ...,
         [13.0847, 12.0400, 17.6322],
         [13.1604, 12.0336, 15.1047],
         [13.1079, 11.9795, 15.2933]],
        [[ 9.3071, 10.4290, 15.2224],
         [ 9.3312, 10.4599, 15.5296],
         [ 9.3225, 10.4445, 14.7909],
         ...,
         [ 9.3161, 10.4395, 15.8909],
         [ 9.2890, 10.4370, 14.4718],
         [ 9.3077, 10.4173, 14.6866]],
        [[ 8.9207, 10.2481, 15.1246],
         [ 8.9522, 10.2744, 15.3473],
         [ 8.9408, 10.2610, 14.7421],
         ...,
         [ 8.9325, 10.2568, 15.6876],
         [ 8.8970, 10.2547, 14.3953],
         [ 8.9215, 10.2387, 14.6132]],
        ...,
        [[ 8.4633, 10.0279, 15.0042],
         [ 8.5032, 10.0487, 15.1241],
         [ 8.4888, 10.0378, 14.6818],
         ...,
         [ 8.4783, 10.0345, 15.4390],
         [ 8.4333, 10.0329, 14.3009],
         [ 8.4643, 10.0213, 14.5226]],
        [[ 9.6787, 10.5988, 15.3132],
         [ 9.6953, 10.6342, 15.6997],
         [ 9.6893, 10.6168, 14.8361],
         ...,
         [ 9.6849, 10.6111, 16.0808],
         [ 9.6663, 10.6082, 14.5427],
         [ 9.6791, 10.5850, 14.7547]],
        [[10.5521, 10.9835, 15.5155],
         [10.5499, 11.0290, 16.0818],
         [10.5506, 11.0071, 14.9362],
         ...,
         [10.5512, 10.9998, 16.5081],
         [10.5540, 10.9959, 14.7006],
         [10.5520, 10.9647, 14.9061]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9786, 1.0254, 0.9960],
         [0.9778, 1.0270, 1.0131],
         [0.9781, 1.0262, 0.9823],
         ...,
         [0.9783, 1.0260, 1.0220],
         [0.9793, 1.0258, 0.9809],
         [0.9786, 1.0247, 0.9840]],
        [[0.9284, 0.9914, 0.9828],
         [0.9287, 0.9921, 0.9878],
         [0.9286, 0.9917, 0.9758],
         ...,
         [0.9285, 0.9916, 0.9937],
         [0.9282, 0.9916, 0.9706],
         [0.9284, 0.9912, 0.9741]],
        [[0.9233, 0.9875, 0.9812],
         [0.9237, 0.9881, 0.9848],
         [0.9236, 0.9878, 0.9750],
         ...,
         [0.9234, 0.9877, 0.9904],
         [0.9230, 0.9877, 0.9694],
         [0.9233, 0.9873, 0.9729]],
        ...,
        [[0.9172, 0.9828, 0.9793],
         [0.9178, 0.9833, 0.9812],
         [0.9176, 0.9830, 0.9740],
         ...,
         [0.9174, 0.9830, 0.9863],
         [0.9168, 0.9829, 0.9678],
         [0.9173, 0.9827, 0.9714]],
        [[0.9333, 0.9951, 0.9843],
         [0.9335, 0.9958, 0.9906],
         [0.9334, 0.9954, 0.9765],
         ...,
         [0.9334, 0.9953, 0.9968],
         [0.9331, 0.9953, 0.9718],
         [0.9333, 0.9948, 0.9752]],
        [[0.9448, 1.0033, 0.9876],
         [0.9448, 1.0043, 0.9968],
         [0.9448, 1.0038, 0.9782],
         ...,
         [0.9448, 1.0036, 1.0037],
         [0.9449, 1.0036, 0.9743],
         [0.9448, 1.0029, 0.9777]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1159, 12.0135, 16.0147],
         [13.0500, 12.0868, 17.0797],
         [13.0671, 12.0531, 15.1811],
         ...,
         [13.0941, 12.0388, 17.6422],
         [13.1663, 12.0353, 15.0992],
         [13.1087, 11.9792, 15.2936]],
        [[ 9.3048, 10.4294, 15.2116],
         [ 9.3289, 10.4599, 15.5282],
         [ 9.3226, 10.4449, 14.7842],
         ...,
         [ 9.3127, 10.4390, 15.8988],
         [ 9.2869, 10.4377, 14.4647],
         [ 9.3074, 10.4173, 14.6876]],
        [[ 8.9177, 10.2484, 15.1151],
         [ 8.9492, 10.2744, 15.3462],
         [ 8.9409, 10.2614, 14.7358],
         ...,
         [ 8.9280, 10.2564, 15.6953],
         [ 8.8942, 10.2553, 14.3880],
         [ 8.9211, 10.2386, 14.6142]],
        ...,
        [[ 8.4595, 10.0282, 14.9960],
         [ 8.4993, 10.0487, 15.1233],
         [ 8.4889, 10.0380, 14.6759],
         ...,
         [ 8.4726, 10.0342, 15.4464],
         [ 8.4298, 10.0333, 14.2934],
         [ 8.4638, 10.0212, 14.5237]],
        [[ 9.6772, 10.5993, 15.3013],
         [ 9.6937, 10.6341, 15.6981],
         [ 9.6894, 10.6172, 14.8290],
         ...,
         [ 9.6826, 10.6105, 16.0890],
         [ 9.6649, 10.6090, 14.5358],
         [ 9.6789, 10.5849, 14.7556]],
        [[10.5523, 10.9841, 15.5011],
         [10.5501, 11.0290, 16.0797],
         [10.5506, 11.0077, 14.9284],
         ...,
         [10.5515, 10.9990, 16.5168],
         [10.5543, 10.9969, 14.6941],
         [10.5520, 10.9645, 14.9068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0130],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0246, 0.9839]],
        [[0.9283, 0.9913, 0.9826],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9917, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9937],
         [0.9281, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9729]],
        ...,
        [[0.9171, 0.9827, 0.9791],
         [0.9176, 0.9832, 0.9811],
         [0.9175, 0.9829, 0.9739],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9331, 0.9952, 0.9716],
         [0.9332, 0.9947, 0.9752]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9448, 1.0037, 0.9780],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9742],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1164, 12.0136, 16.0130],
         [13.0505, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1803],
         ...,
         [13.0949, 12.0387, 17.6430],
         [13.1668, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2936]],
        [[ 9.3047, 10.4294, 15.2108],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7837],
         ...,
         [ 9.3124, 10.4390, 15.8994],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9175, 10.2485, 15.1143],
         [ 8.9489, 10.2744, 15.3462],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9277, 10.2564, 15.6959],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6755],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5993, 15.3004],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8285],
         ...,
         [ 9.6824, 10.6105, 16.0896],
         [ 9.6648, 10.6090, 14.5353],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.5000],
         [10.5501, 11.0290, 16.0796],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5174],
         [10.5543, 10.9970, 14.6936],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9175, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5353],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0748, 12.0168, 16.0046],
         [12.9772, 12.0822, 17.0194],
         [13.1004, 12.0562, 15.1967],
         ...,
         [12.9538, 12.0278, 17.4938],
         [13.0664, 12.0297, 15.0868],
         [13.0735, 11.9794, 15.2897]],
        [[ 9.3197, 10.4306, 15.2117],
         [ 9.3563, 10.4577, 15.5022],
         [ 9.3104, 10.4462, 14.7965],
         ...,
         [ 9.3653, 10.4348, 15.8158],
         [ 9.3228, 10.4355, 14.4668],
         [ 9.3202, 10.4173, 14.6886]],
        [[ 8.9372, 10.2494, 15.1164],
         [ 8.9849, 10.2725, 15.3241],
         [ 8.9250, 10.2625, 14.7477],
         ...,
         [ 8.9967, 10.2528, 15.6196],
         [ 8.9413, 10.2535, 14.3918],
         [ 8.9379, 10.2387, 14.6158]],
        ...,
        [[ 8.4842, 10.0289, 14.9988],
         [ 8.5445, 10.0471, 15.1058],
         [ 8.4688, 10.0389, 14.6874],
         ...,
         [ 8.5593, 10.0315, 15.3794],
         [ 8.4893, 10.0319, 14.2993],
         [ 8.4850, 10.0212, 14.5260]],
        [[ 9.6874, 10.6008, 15.3003],
         [ 9.7127, 10.6317, 15.6685],
         [ 9.6810, 10.6187, 14.8417],
         ...,
         [ 9.7190, 10.6056, 15.9991],
         [ 9.6895, 10.6064, 14.5363],
         [ 9.6877, 10.5850, 14.7561]],
        [[10.5508, 10.9860, 15.4976],
         [10.5480, 11.0260, 16.0419],
         [10.5517, 11.0096, 14.9419],
         ...,
         [10.5475, 10.9925, 16.4112],
         [10.5506, 10.9936, 14.6910],
         [10.5508, 10.9646, 14.9061]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9789, 1.0256, 0.9960],
         [0.9776, 1.0270, 1.0125],
         [0.9793, 1.0264, 0.9829],
         ...,
         [0.9773, 1.0258, 1.0203],
         [0.9788, 1.0259, 0.9811],
         [0.9789, 1.0248, 0.9844]],
        [[0.9293, 0.9916, 0.9831],
         [0.9298, 0.9922, 0.9879],
         [0.9292, 0.9919, 0.9764],
         ...,
         [0.9299, 0.9917, 0.9930],
         [0.9293, 0.9917, 0.9710],
         [0.9293, 0.9913, 0.9746]],
        [[0.9242, 0.9877, 0.9816],
         [0.9249, 0.9882, 0.9850],
         [0.9241, 0.9880, 0.9756],
         ...,
         [0.9250, 0.9878, 0.9898],
         [0.9243, 0.9878, 0.9698],
         [0.9242, 0.9875, 0.9734]],
        ...,
        [[0.9182, 0.9830, 0.9797],
         [0.9190, 0.9833, 0.9814],
         [0.9180, 0.9832, 0.9746],
         ...,
         [0.9192, 0.9830, 0.9859],
         [0.9183, 0.9830, 0.9683],
         [0.9183, 0.9828, 0.9720]],
        [[0.9341, 0.9952, 0.9846],
         [0.9345, 0.9959, 0.9906],
         [0.9341, 0.9956, 0.9771],
         ...,
         [0.9346, 0.9953, 0.9959],
         [0.9342, 0.9953, 0.9722],
         [0.9342, 0.9949, 0.9757]],
        [[0.9456, 1.0035, 0.9878],
         [0.9455, 1.0043, 0.9966],
         [0.9456, 1.0040, 0.9788],
         ...,
         [0.9455, 1.0036, 1.0026],
         [0.9456, 1.0036, 0.9747],
         [0.9456, 1.0030, 0.9782]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1100, 12.0141, 16.0116],
         [13.0392, 12.0861, 17.0701],
         [13.0722, 12.0536, 15.1828],
         ...,
         [13.0728, 12.0370, 17.6200],
         [13.1512, 12.0346, 15.0969],
         [13.1033, 11.9792, 15.2930]],
        [[ 9.3070, 10.4296, 15.2109],
         [ 9.3329, 10.4595, 15.5241],
         [ 9.3207, 10.4451, 14.7856],
         ...,
         [ 9.3205, 10.4383, 15.8865],
         [ 9.2923, 10.4374, 14.4645],
         [ 9.3094, 10.4173, 14.6878]],
        [[ 8.9205, 10.2486, 15.1146],
         [ 8.9544, 10.2741, 15.3427],
         [ 8.9385, 10.2616, 14.7372],
         ...,
         [ 8.9382, 10.2558, 15.6841],
         [ 8.9012, 10.2550, 14.3881],
         [ 8.9236, 10.2387, 14.6146]],
        ...,
        [[ 8.4630, 10.0283, 14.9959],
         [ 8.5059, 10.0484, 15.1206],
         [ 8.4858, 10.0382, 14.6773],
         ...,
         [ 8.4854, 10.0337, 15.4365],
         [ 8.4386, 10.0331, 14.2938],
         [ 8.4670, 10.0212, 14.5242]],
        [[ 9.6786, 10.5996, 15.3003],
         [ 9.6965, 10.6338, 15.6935],
         [ 9.6881, 10.6175, 14.8305],
         ...,
         [ 9.6879, 10.6097, 16.0756],
         [ 9.6686, 10.6086, 14.5354],
         [ 9.6803, 10.5849, 14.7557]],
        [[10.5521, 10.9845, 15.4996],
         [10.5497, 11.0285, 16.0737],
         [10.5508, 11.0080, 14.9299],
         ...,
         [10.5508, 10.9979, 16.5010],
         [10.5537, 10.9965, 14.6931],
         [10.5518, 10.9645, 14.9068]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9788, 1.0253, 0.9957],
         [0.9778, 1.0269, 1.0129],
         [0.9783, 1.0262, 0.9822],
         ...,
         [0.9783, 1.0258, 1.0218],
         [0.9793, 1.0258, 0.9808],
         [0.9787, 1.0246, 0.9840]],
        [[0.9285, 0.9914, 0.9826],
         [0.9288, 0.9920, 0.9877],
         [0.9287, 0.9917, 0.9757],
         ...,
         [0.9287, 0.9915, 0.9936],
         [0.9283, 0.9915, 0.9705],
         [0.9285, 0.9911, 0.9741]],
        [[0.9234, 0.9875, 0.9811],
         [0.9238, 0.9880, 0.9848],
         [0.9236, 0.9877, 0.9749],
         ...,
         [0.9236, 0.9876, 0.9903],
         [0.9231, 0.9876, 0.9693],
         [0.9234, 0.9873, 0.9729]],
        ...,
        [[0.9173, 0.9827, 0.9791],
         [0.9179, 0.9832, 0.9812],
         [0.9177, 0.9830, 0.9740],
         ...,
         [0.9176, 0.9829, 0.9863],
         [0.9170, 0.9829, 0.9677],
         [0.9174, 0.9826, 0.9715]],
        [[0.9334, 0.9950, 0.9841],
         [0.9337, 0.9957, 0.9905],
         [0.9335, 0.9954, 0.9765],
         ...,
         [0.9335, 0.9952, 0.9967],
         [0.9333, 0.9952, 0.9717],
         [0.9334, 0.9947, 0.9752]],
        [[0.9450, 1.0033, 0.9873],
         [0.9449, 1.0042, 0.9967],
         [0.9449, 1.0038, 0.9781],
         ...,
         [0.9449, 1.0035, 1.0036],
         [0.9450, 1.0035, 0.9742],
         [0.9450, 1.0028, 0.9777]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1156, 12.0137, 16.0127],
         [13.0489, 12.0867, 17.0781],
         [13.0678, 12.0532, 15.1806],
         ...,
         [13.0918, 12.0384, 17.6398],
         [13.1646, 12.0353, 15.0985],
         [13.1080, 11.9792, 15.2936]],
        [[ 9.3050, 10.4295, 15.2107],
         [ 9.3293, 10.4598, 15.5275],
         [ 9.3223, 10.4450, 14.7839],
         ...,
         [ 9.3135, 10.4389, 15.8976],
         [ 9.2876, 10.4377, 14.4641],
         [ 9.3077, 10.4173, 14.6877]],
        [[ 8.9179, 10.2485, 15.1143],
         [ 8.9497, 10.2743, 15.3457],
         [ 8.9406, 10.2614, 14.7355],
         ...,
         [ 8.9291, 10.2563, 15.6943],
         [ 8.8950, 10.2553, 14.3875],
         [ 8.9214, 10.2386, 14.6144]],
        ...,
        [[ 8.4597, 10.0282, 14.9954],
         [ 8.5000, 10.0486, 15.1229],
         [ 8.4885, 10.0381, 14.6757],
         ...,
         [ 8.4740, 10.0341, 15.4455],
         [ 8.4308, 10.0333, 14.2929],
         [ 8.4642, 10.0212, 14.5239]],
        [[ 9.6772, 10.5994, 15.3003],
         [ 9.6940, 10.6341, 15.6974],
         [ 9.6892, 10.6173, 14.8287],
         ...,
         [ 9.6831, 10.6104, 16.0877],
         [ 9.6653, 10.6090, 14.5353],
         [ 9.6791, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5500, 11.0289, 16.0787],
         [10.5506, 11.0078, 14.9281],
         ...,
         [10.5514, 10.9988, 16.5152],
         [10.5542, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0246, 0.9839]],
        [[0.9283, 0.9913, 0.9826],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9917, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9937],
         [0.9281, 0.9915, 0.9704],
         [0.9284, 0.9911, 0.9741]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9729]],
        ...,
        [[0.9171, 0.9827, 0.9791],
         [0.9177, 0.9832, 0.9811],
         [0.9175, 0.9829, 0.9739],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9168, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9335, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9331, 0.9952, 0.9716],
         [0.9333, 0.9947, 0.9752]],
        [[0.9448, 1.0032, 0.9873],
         [0.9448, 1.0042, 0.9967],
         [0.9448, 1.0037, 0.9780],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1163, 12.0136, 16.0129],
         [13.0503, 12.0868, 17.0792],
         [13.0672, 12.0532, 15.1803],
         ...,
         [13.0945, 12.0386, 17.6426],
         [13.1665, 12.0354, 15.0987],
         [13.1087, 11.9792, 15.2936]],
        [[ 9.3047, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5280],
         [ 9.3225, 10.4449, 14.7837],
         ...,
         [ 9.3126, 10.4390, 15.8992],
         [ 9.2869, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9175, 10.2485, 15.1142],
         [ 8.9490, 10.2743, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9278, 10.2564, 15.6957],
         [ 8.8941, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4593, 10.0282, 14.9954],
         [ 8.4991, 10.0486, 15.1232],
         [ 8.4888, 10.0381, 14.6755],
         ...,
         [ 8.4723, 10.0341, 15.4468],
         [ 8.4297, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6771, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6979],
         [ 9.6893, 10.6173, 14.8285],
         ...,
         [ 9.6825, 10.6105, 16.0894],
         [ 9.6649, 10.6090, 14.5353],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0794],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5172],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9826],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9937],
         [0.9281, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9729]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9448, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0505, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1668, 12.0355, 15.0987],
         [13.1088, 11.9792, 15.2936]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8994],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9175, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9277, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0486, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0896],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5174],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1668, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9175, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],,
         [0.9332, 0.9946, 0.9751]],
        [[0.9390, 0.9791, 1.0486],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,330, 0.9818, 0.9881],
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],,
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
        [[0.9361, 0.9720, 1.0418],
         [0.9286, 0.9705, 1.0143],
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
         ...,
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
         ...,
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],device='cuda:0', dtype=torch.float64,
         ...,n=<CopySlices>)
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
COST SHAPE IS  torch.Size([1000, 10, 3])
        ...,LIZATION:
tensor([[[11.7318, 13.2492, 21.8055],
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,1327, 12.4235, 17.5313],
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],,
         [ 8.4638, 10.0212, 14.5238]],
        [[10.1416, 10.7843, 18.7655],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,7640, 10.8252, 14.9916],
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],,
         [ 9.6789, 10.5849, 14.7557]],
        [[ 9.9604, 10.5129, 18.4199],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,5050, 10.6423, 14.7040],
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],,
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
        [[ 9.7400, 10.1856, 17.9999],
AFTER NORMALIZATION:0.1158, 16.3094],
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],7],
         [0.9780, 1.0261, 0.9821],4],
         ...,5292, 10.0262, 13.9971]],
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],3],
         [0.9786, 1.0245, 0.9839]],],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1165, 12.0136, 16.0129],
         [13.0506, 12.0868, 17.0794],
         [13.0671, 12.0532, 15.1802],
         ...,
         [13.0949, 12.0386, 17.6430],
         [13.1669, 12.0355, 15.0988],
         [13.1088, 11.9792, 15.2937]],
        [[ 9.3046, 10.4294, 15.2107],
         [ 9.3287, 10.4599, 15.5281],
         [ 9.3226, 10.4449, 14.7836],
         ...,
         [ 9.3124, 10.4390, 15.8995],
         [ 9.2868, 10.4377, 14.4641],
         [ 9.3074, 10.4173, 14.6877]],
        [[ 8.9174, 10.2485, 15.1142],
         [ 8.9489, 10.2744, 15.3461],
         [ 8.9409, 10.2614, 14.7353],
         ...,
         [ 8.9276, 10.2564, 15.6960],
         [ 8.8940, 10.2553, 14.3874],
         [ 8.9211, 10.2386, 14.6143]],
        ...,
        [[ 8.4592, 10.0282, 14.9954],
         [ 8.4990, 10.0487, 15.1233],
         [ 8.4889, 10.0381, 14.6754],
         ...,
         [ 8.4721, 10.0342, 15.4470],
         [ 8.4295, 10.0333, 14.2928],
         [ 8.4638, 10.0212, 14.5238]],
        [[ 9.6770, 10.5994, 15.3003],
         [ 9.6936, 10.6341, 15.6980],
         [ 9.6894, 10.6173, 14.8284],
         ...,
         [ 9.6824, 10.6105, 16.0897],
         [ 9.6648, 10.6090, 14.5352],
         [ 9.6789, 10.5849, 14.7557]],
        [[10.5523, 10.9842, 15.4999],
         [10.5501, 11.0290, 16.0795],
         [10.5506, 11.0078, 14.9278],
         ...,
         [10.5515, 10.9989, 16.5175],
         [10.5543, 10.9970, 14.6935],
         [10.5520, 10.9645, 14.9069]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9787, 1.0253, 0.9956],
         [0.9778, 1.0269, 1.0129],
         [0.9780, 1.0261, 0.9821],
         ...,
         [0.9784, 1.0258, 1.0221],
         [0.9793, 1.0258, 0.9807],
         [0.9786, 1.0245, 0.9839]],
        [[0.9283, 0.9913, 0.9825],
         [0.9286, 0.9920, 0.9877],
         [0.9285, 0.9916, 0.9756],
         ...,
         [0.9284, 0.9915, 0.9938],
         [0.9280, 0.9915, 0.9704],
         [0.9283, 0.9911, 0.9740]],
        [[0.9232, 0.9874, 0.9810],
         [0.9236, 0.9880, 0.9848],
         [0.9235, 0.9877, 0.9748],
         ...,
         [0.9233, 0.9876, 0.9904],
         [0.9229, 0.9876, 0.9692],
         [0.9232, 0.9872, 0.9728]],
        ...,
        [[0.9171, 0.9827, 0.9790],
         [0.9176, 0.9831, 0.9811],
         [0.9175, 0.9829, 0.9738],
         ...,
         [0.9173, 0.9828, 0.9864],
         [0.9167, 0.9828, 0.9676],
         [0.9172, 0.9826, 0.9714]],
        [[0.9332, 0.9950, 0.9840],
         [0.9334, 0.9957, 0.9905],
         [0.9334, 0.9953, 0.9763],
         ...,
         [0.9333, 0.9952, 0.9968],
         [0.9330, 0.9952, 0.9716],
         [0.9332, 0.9946, 0.9751]],
        [[0.9448, 1.0032, 0.9873],
         [0.9447, 1.0042, 0.9967],
         [0.9447, 1.0037, 0.9779],
         ...,
         [0.9448, 1.0035, 1.0038],
         [0.9448, 1.0035, 0.9741],
         [0.9448, 1.0028, 0.9776]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 15.3957],
         [ 0.1000,  0.1000, 21.1318],
         [ 0.1000,  0.1000, 17.1642],
         ...,
         [ 0.1000,  0.1000, 18.0989],
         [ 0.1000,  0.1000, 27.2250],
         [ 0.1000,  0.1000, 21.0511]],
        [[ 0.1000,  0.1000, 13.6679],
         [ 0.1000,  0.1000, 14.8287],
         [ 0.1000,  0.1000,  9.7343],
         ...,
         [ 0.1000,  0.1000, 11.8907],
         [ 0.1000,  0.1000, 18.2665],
         [ 0.1000,  0.1000,  9.3619]],
        [[ 0.1000,  0.1000, 13.4679],
         [ 0.1000,  0.1000, 14.1926],
         [ 0.1000,  0.1000,  9.0743],
         ...,
         [ 0.1000,  0.1000, 11.2882],
         [ 0.1000,  0.1000, 17.3861],
         [ 0.1000,  0.1000,  8.4685]],
        ...,
        [[ 0.1000,  0.1000, 13.2239],
         [ 0.1000,  0.1000, 13.4408],
         [ 0.1000,  0.1000,  8.3170],
         ...,
         [ 0.1000,  0.1000, 10.5826],
         [ 0.1000,  0.1000, 16.3521],
         [ 0.1000,  0.1000,  7.4771]],
        [[ 0.1000,  0.1000, 13.8551],
         [ 0.1000,  0.1000, 15.4413],
         [ 0.1000,  0.1000, 10.3861],
         ...,
         [ 0.1000,  0.1000, 12.4755],
         [ 0.1000,  0.1000, 19.1189],
         [ 0.1000,  0.1000, 10.2703]],
        [[ 0.1000,  0.1000, 14.2773],
         [ 0.1000,  0.1000, 16.8842],
         [ 0.1000,  0.1000, 11.9832],
         ...,
         [ 0.1000,  0.1000, 13.8698],
         [ 0.1000,  0.1000, 21.1432],
         [ 0.1000,  0.1000, 12.5989]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9044],
         [0.1000, 0.1000, 0.9977],
         [0.1000, 0.1000, 0.9331],
         ...,
         [0.1000, 0.1000, 0.9484],
         [0.1000, 0.1000, 1.0968],
         [0.1000, 0.1000, 0.9964]],
        [[0.1000, 0.1000, 0.8763],
         [0.1000, 0.1000, 0.8952],
         [0.1000, 0.1000, 0.8123],
         ...,
         [0.1000, 0.1000, 0.8474],
         [0.1000, 0.1000, 0.9511],
         [0.1000, 0.1000, 0.8062]],
        [[0.1000, 0.1000, 0.8730],
         [0.1000, 0.1000, 0.8848],
         [0.1000, 0.1000, 0.8016],
         ...,
         [0.1000, 0.1000, 0.8376],
         [0.1000, 0.1000, 0.9368],
         [0.1000, 0.1000, 0.7917]],
        ...,
        [[0.1000, 0.1000, 0.8691],
         [0.1000, 0.1000, 0.8726],
         [0.1000, 0.1000, 0.7893],
         ...,
         [0.1000, 0.1000, 0.8261],
         [0.1000, 0.1000, 0.9199],
         [0.1000, 0.1000, 0.7756]],
        [[0.1000, 0.1000, 0.8793],
         [0.1000, 0.1000, 0.9051],
         [0.1000, 0.1000, 0.8229],
         ...,
         [0.1000, 0.1000, 0.8569],
         [0.1000, 0.1000, 0.9649],
         [0.1000, 0.1000, 0.8210]],
        [[0.1000, 0.1000, 0.8862],
         [0.1000, 0.1000, 0.9286],
         [0.1000, 0.1000, 0.8489],
         ...,
         [0.1000, 0.1000, 0.8796],
         [0.1000, 0.1000, 0.9979],
         [0.1000, 0.1000, 0.8589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 15.7186],
         [ 0.1000,  0.1000, 19.5529],
         [ 0.1000,  0.1000, 15.9923],
         ...,
         [ 0.1000,  0.1000, 17.7765],
         [ 0.1000,  0.1000, 29.4461],
         [ 0.1000,  0.1000, 18.5212]],
        [[ 0.1000,  0.1000, 12.9119],
         [ 0.1000,  0.1000, 15.7841],
         [ 0.1000,  0.1000, 10.2241],
         ...,
         [ 0.1000,  0.1000, 12.9389],
         [ 0.1000,  0.1000, 18.1382],
         [ 0.1000,  0.1000, 10.1230]],
        [[ 0.1000,  0.1000, 12.6013],
         [ 0.1000,  0.1000, 15.3713],
         [ 0.1000,  0.1000,  9.6734],
         ...,
         [ 0.1000,  0.1000, 12.4400],
         [ 0.1000,  0.1000, 17.0822],
         [ 0.1000,  0.1000,  9.3936]],
        ...,
        [[ 0.1000,  0.1000, 12.2262],
         [ 0.1000,  0.1000, 14.8738],
         [ 0.1000,  0.1000,  9.0308],
         ...,
         [ 0.1000,  0.1000, 11.8474],
         [ 0.1000,  0.1000, 15.8567],
         [ 0.1000,  0.1000,  8.5610]],
        [[ 0.1000,  0.1000, 13.2055],
         [ 0.1000,  0.1000, 16.1751],
         [ 0.1000,  0.1000, 10.7605],
         ...,
         [ 0.1000,  0.1000, 13.4172],
         [ 0.1000,  0.1000, 19.1709],
         [ 0.1000,  0.1000, 10.8466]],
        [[ 0.1000,  0.1000, 13.8770],
         [ 0.1000,  0.1000, 17.0726],
         [ 0.1000,  0.1000, 12.0456],
         ...,
         [ 0.1000,  0.1000, 14.5362],
         [ 0.1000,  0.1000, 21.6627],
         [ 0.1000,  0.1000, 12.6316]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9036],
         [0.1000, 0.1000, 0.9660],
         [0.1000, 0.1000, 0.9081],
         ...,
         [0.1000, 0.1000, 0.9371],
         [0.1000, 0.1000, 1.1269],
         [0.1000, 0.1000, 0.9492]],
        [[0.1000, 0.1000, 0.8580],
         [0.1000, 0.1000, 0.9047],
         [0.1000, 0.1000, 0.8143],
         ...,
         [0.1000, 0.1000, 0.8584],
         [0.1000, 0.1000, 0.9430],
         [0.1000, 0.1000, 0.8126]],
        [[0.1000, 0.1000, 0.8529],
         [0.1000, 0.1000, 0.8980],
         [0.1000, 0.1000, 0.8053],
         ...,
         [0.1000, 0.1000, 0.8503],
         [0.1000, 0.1000, 0.9258],
         [0.1000, 0.1000, 0.8007]],
        ...,
        [[0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8899],
         [0.1000, 0.1000, 0.7948],
         ...,
         [0.1000, 0.1000, 0.8407],
         [0.1000, 0.1000, 0.9059],
         [0.1000, 0.1000, 0.7872]],
        [[0.1000, 0.1000, 0.8627],
         [0.1000, 0.1000, 0.9110],
         [0.1000, 0.1000, 0.8230],
         ...,
         [0.1000, 0.1000, 0.8662],
         [0.1000, 0.1000, 0.9598],
         [0.1000, 0.1000, 0.8244]],
        [[0.1000, 0.1000, 0.8737],
         [0.1000, 0.1000, 0.9256],
         [0.1000, 0.1000, 0.8439],
         ...,
         [0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0003],
         [0.1000, 0.1000, 0.8534]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 15.8338],
         [ 0.1000,  0.1000, 20.2893],
         [ 0.1000,  0.1000, 15.8508],
         ...,
         [ 0.1000,  0.1000, 18.2471],
         [ 0.1000,  0.1000, 30.1426],
         [ 0.1000,  0.1000, 18.2507]],
        [[ 0.1000,  0.1000, 12.1841],
         [ 0.1000,  0.1000, 16.8044],
         [ 0.1000,  0.1000, 10.3254],
         ...,
         [ 0.1000,  0.1000, 13.5045],
         [ 0.1000,  0.1000, 18.1165],
         [ 0.1000,  0.1000, 10.2155]],
        [[ 0.1000,  0.1000, 11.7953],
         [ 0.1000,  0.1000, 16.4169],
         [ 0.1000,  0.1000,  9.7918],
         ...,
         [ 0.1000,  0.1000, 13.0106],
         [ 0.1000,  0.1000, 17.0100],
         [ 0.1000,  0.1000,  9.5074]],
        ...,
        [[ 0.1000,  0.1000, 11.3299],
         [ 0.1000,  0.1000, 15.9484],
         [ 0.1000,  0.1000,  9.1678],
         ...,
         [ 0.1000,  0.1000, 12.4226],
         [ 0.1000,  0.1000, 15.7301],
         [ 0.1000,  0.1000,  8.6964]],
        [[ 0.1000,  0.1000, 12.5545],
         [ 0.1000,  0.1000, 17.1703],
         [ 0.1000,  0.1000, 10.8438],
         ...,
         [ 0.1000,  0.1000, 13.9771],
         [ 0.1000,  0.1000, 19.2019],
         [ 0.1000,  0.1000, 10.9160]],
        [[ 0.1000,  0.1000, 13.4121],
         [ 0.1000,  0.1000, 18.0060],
         [ 0.1000,  0.1000, 12.0816],
         ...,
         [ 0.1000,  0.1000, 15.0793],
         [ 0.1000,  0.1000, 21.8326],
         [ 0.1000,  0.1000, 12.6363]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9127],
         [0.1000, 0.1000, 0.9851],
         [0.1000, 0.1000, 0.9129],
         ...,
         [0.1000, 0.1000, 0.9519],
         [0.1000, 0.1000, 1.1454],
         [0.1000, 0.1000, 0.9520]],
        [[0.1000, 0.1000, 0.8533],
         [0.1000, 0.1000, 0.9284],
         [0.1000, 0.1000, 0.8231],
         ...,
         [0.1000, 0.1000, 0.8748],
         [0.1000, 0.1000, 0.9498],
         [0.1000, 0.1000, 0.8213]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9221],
         [0.1000, 0.1000, 0.8144],
         ...,
         [0.1000, 0.1000, 0.8667],
         [0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.8098]],
        ...,
        [[0.1000, 0.1000, 0.8394],
         [0.1000, 0.1000, 0.9145],
         [0.1000, 0.1000, 0.8042],
         ...,
         [0.1000, 0.1000, 0.8572],
         [0.1000, 0.1000, 0.9110],
         [0.1000, 0.1000, 0.7966]],
        [[0.1000, 0.1000, 0.8593],
         [0.1000, 0.1000, 0.9344],
         [0.1000, 0.1000, 0.8315],
         ...,
         [0.1000, 0.1000, 0.8825],
         [0.1000, 0.1000, 0.9674],
         [0.1000, 0.1000, 0.8327]],
        [[0.1000, 0.1000, 0.8733],
         [0.1000, 0.1000, 0.9480],
         [0.1000, 0.1000, 0.8516],
         ...,
         [0.1000, 0.1000, 0.9004],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8606]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.4059],
         [ 0.1000,  0.1000, 24.0164],
         [ 0.1000,  0.1000, 15.3554],
         ...,
         [ 0.1000,  0.1000, 20.4938],
         [ 0.1000,  0.1000, 31.1570],
         [ 0.1000,  0.1000, 17.3025]],
        [[ 0.1000,  0.1000, 10.1614],
         [ 0.1000,  0.1000, 22.1749],
         [ 0.1000,  0.1000, 10.8039],
         ...,
         [ 0.1000,  0.1000, 16.5133],
         [ 0.1000,  0.1000, 17.9819],
         [ 0.1000,  0.1000, 10.6317]],
        [[ 0.1000,  0.1000,  9.4409],
         [ 0.1000,  0.1000, 21.9570],
         [ 0.1000,  0.1000, 10.3438],
         ...,
         [ 0.1000,  0.1000, 16.0777],
         [ 0.1000,  0.1000, 16.7990],
         [ 0.1000,  0.1000, 10.0096]],
        ...,
        [[ 0.1000,  0.1000,  8.6173],
         [ 0.1000,  0.1000, 21.6896],
         [ 0.1000,  0.1000,  9.7999],
         ...,
         [ 0.1000,  0.1000, 15.5530],
         [ 0.1000,  0.1000, 15.4385],
         [ 0.1000,  0.1000,  9.2880]],
        [[ 0.1000,  0.1000, 10.8752],
         [ 0.1000,  0.1000, 22.3780],
         [ 0.1000,  0.1000, 11.2468],
         ...,
         [ 0.1000,  0.1000, 16.9259],
         [ 0.1000,  0.1000, 19.1477],
         [ 0.1000,  0.1000, 11.2402]],
        [[ 0.1000,  0.1000, 12.6330],
         [ 0.1000,  0.1000, 22.8328],
         [ 0.1000,  0.1000, 12.2895],
         ...,
         [ 0.1000,  0.1000, 17.8733],
         [ 0.1000,  0.1000, 21.9948],
         [ 0.1000,  0.1000, 12.7091]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9765],
         [0.1000, 0.1000, 1.0677],
         [0.1000, 0.1000, 0.9269],
         ...,
         [0.1000, 0.1000, 1.0104],
         [0.1000, 0.1000, 1.1839],
         [0.1000, 0.1000, 0.9585]],
        [[0.1000, 0.1000, 0.8424],
         [0.1000, 0.1000, 1.0378],
         [0.1000, 0.1000, 0.8528],
         ...,
         [0.1000, 0.1000, 0.9457],
         [0.1000, 0.1000, 0.9696],
         [0.1000, 0.1000, 0.8500]],
        [[0.1000, 0.1000, 0.8307],
         [0.1000, 0.1000, 1.0342],
         [0.1000, 0.1000, 0.8454],
         ...,
         [0.1000, 0.1000, 0.9386],
         [0.1000, 0.1000, 0.9504],
         [0.1000, 0.1000, 0.8399]],
        ...,
        [[0.1000, 0.1000, 0.8173],
         [0.1000, 0.1000, 1.0299],
         [0.1000, 0.1000, 0.8365],
         ...,
         [0.1000, 0.1000, 0.9301],
         [0.1000, 0.1000, 0.9282],
         [0.1000, 0.1000, 0.8282]],
        [[0.1000, 0.1000, 0.8540],
         [0.1000, 0.1000, 1.0411],
         [0.1000, 0.1000, 0.8601],
         ...,
         [0.1000, 0.1000, 0.9524],
         [0.1000, 0.1000, 0.9886],
         [0.1000, 0.1000, 0.8599]],
        [[0.1000, 0.1000, 0.8826],
         [0.1000, 0.1000, 1.0485],
         [0.1000, 0.1000, 0.8770],
         ...,
         [0.1000, 0.1000, 0.9678],
         [0.1000, 0.1000, 1.0349],
         [0.1000, 0.1000, 0.8838]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.9670],
         [ 0.1000,  0.1000, 24.5295],
         [ 0.1000,  0.1000, 15.2989],
         ...,
         [ 0.1000,  0.1000, 21.0557],
         [ 0.1000,  0.1000, 30.6597],
         [ 0.1000,  0.1000, 17.1412]],
        [[ 0.1000,  0.1000,  9.9882],
         [ 0.1000,  0.1000, 21.8330],
         [ 0.1000,  0.1000, 10.9782],
         ...,
         [ 0.1000,  0.1000, 17.8194],
         [ 0.1000,  0.1000, 17.9144],
         [ 0.1000,  0.1000, 10.7227]],
        [[ 0.1000,  0.1000,  9.2259],
         [ 0.1000,  0.1000, 21.5205],
         [ 0.1000,  0.1000, 10.5363],
         ...,
         [ 0.1000,  0.1000, 17.4551],
         [ 0.1000,  0.1000, 16.7616],
         [ 0.1000,  0.1000, 10.1177]],
        ...,
        [[ 0.1000,  0.1000,  8.3602],
         [ 0.1000,  0.1000, 21.1388],
         [ 0.1000,  0.1000, 10.0125],
         ...,
         [ 0.1000,  0.1000, 17.0132],
         [ 0.1000,  0.1000, 15.4333],
         [ 0.1000,  0.1000,  9.4141]],
        [[ 0.1000,  0.1000, 10.7477],
         [ 0.1000,  0.1000, 22.1255],
         [ 0.1000,  0.1000, 11.4026],
         ...,
         [ 0.1000,  0.1000, 18.1626],
         [ 0.1000,  0.1000, 19.0490],
         [ 0.1000,  0.1000, 11.3133]],
        [[ 0.1000,  0.1000, 12.6344],
         [ 0.1000,  0.1000, 22.7850],
         [ 0.1000,  0.1000, 12.3980],
         ...,
         [ 0.1000,  0.1000, 18.9433],
         [ 0.1000,  0.1000, 21.8135],
         [ 0.1000,  0.1000, 12.7341]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9801],
         [0.1000, 0.1000, 1.0706],
         [0.1000, 0.1000, 0.9205],
         ...,
         [0.1000, 0.1000, 1.0141],
         [0.1000, 0.1000, 1.1703],
         [0.1000, 0.1000, 0.9504]],
        [[0.1000, 0.1000, 0.8341],
         [0.1000, 0.1000, 1.0267],
         [0.1000, 0.1000, 0.8502],
         ...,
         [0.1000, 0.1000, 0.9614],
         [0.1000, 0.1000, 0.9630],
         [0.1000, 0.1000, 0.8460]],
        [[0.1000, 0.1000, 0.8217],
         [0.1000, 0.1000, 1.0216],
         [0.1000, 0.1000, 0.8430],
         ...,
         [0.1000, 0.1000, 0.9555],
         [0.1000, 0.1000, 0.9442],
         [0.1000, 0.1000, 0.8362]],
        ...,
        [[0.1000, 0.1000, 0.8076],
         [0.1000, 0.1000, 1.0154],
         [0.1000, 0.1000, 0.8345],
         ...,
         [0.1000, 0.1000, 0.9483],
         [0.1000, 0.1000, 0.9226],
         [0.1000, 0.1000, 0.8247]],
        [[0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0315],
         [0.1000, 0.1000, 0.8571],
         ...,
         [0.1000, 0.1000, 0.9670],
         [0.1000, 0.1000, 0.9814],
         [0.1000, 0.1000, 0.8556]],
        [[0.1000, 0.1000, 0.8771],
         [0.1000, 0.1000, 1.0422],
         [0.1000, 0.1000, 0.8733],
         ...,
         [0.1000, 0.1000, 0.9797],
         [0.1000, 0.1000, 1.0264],
         [0.1000, 0.1000, 0.8787]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 22.4840],
         [ 0.1000,  0.1000, 23.1374],
         [ 0.1000,  0.1000, 16.3402],
         ...,
         [ 0.1000,  0.1000, 33.3163],
         [ 0.1000,  0.1000, 19.5471],
         [ 0.1000,  0.1000, 17.0733]],
        [[ 0.1000,  0.1000,  9.3596],
         [ 0.1000,  0.1000, 20.7351],
         [ 0.1000,  0.1000, 12.0219],
         ...,
         [ 0.1000,  0.1000, 28.6065],
         [ 0.1000,  0.1000, 15.1336],
         [ 0.1000,  0.1000, 10.7635]],
        [[ 0.1000,  0.1000,  8.3973],
         [ 0.1000,  0.1000, 20.4557],
         [ 0.1000,  0.1000, 11.5737],
         ...,
         [ 0.1000,  0.1000, 28.0719],
         [ 0.1000,  0.1000, 14.6617],
         [ 0.1000,  0.1000, 10.1660]],
        ...,
        [[ 0.1000,  0.1000,  7.3394],
         [ 0.1000,  0.1000, 20.1140],
         [ 0.1000,  0.1000, 11.0407],
         ...,
         [ 0.1000,  0.1000, 27.4221],
         [ 0.1000,  0.1000, 14.0964],
         [ 0.1000,  0.1000,  9.4703]],
        [[ 0.1000,  0.1000, 10.3456],
         [ 0.1000,  0.1000, 20.9966],
         [ 0.1000,  0.1000, 12.4510],
         ...,
         [ 0.1000,  0.1000, 29.1092],
         [ 0.1000,  0.1000, 15.5827],
         [ 0.1000,  0.1000, 11.3462]],
        [[ 0.1000,  0.1000, 12.9046],
         [ 0.1000,  0.1000, 21.5851],
         [ 0.1000,  0.1000, 13.4530],
         ...,
         [ 0.1000,  0.1000, 30.2498],
         [ 0.1000,  0.1000, 16.6216],
         [ 0.1000,  0.1000, 12.7462]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0155],
         [0.1000, 0.1000, 1.0262],
         [0.1000, 0.1000, 0.9156],
         ...,
         [0.1000, 0.1000, 1.1917],
         [0.1000, 0.1000, 0.9678],
         [0.1000, 0.1000, 0.9275]],
        [[0.1000, 0.1000, 0.8021],
         [0.1000, 0.1000, 0.9871],
         [0.1000, 0.1000, 0.8454],
         ...,
         [0.1000, 0.1000, 1.1151],
         [0.1000, 0.1000, 0.8960],
         [0.1000, 0.1000, 0.8249]],
        [[0.1000, 0.1000, 0.7864],
         [0.1000, 0.1000, 0.9825],
         [0.1000, 0.1000, 0.8381],
         ...,
         [0.1000, 0.1000, 1.1064],
         [0.1000, 0.1000, 0.8883],
         [0.1000, 0.1000, 0.8152]],
        ...,
        [[0.1000, 0.1000, 0.7692],
         [0.1000, 0.1000, 0.9770],
         [0.1000, 0.1000, 0.8294],
         ...,
         [0.1000, 0.1000, 1.0959],
         [0.1000, 0.1000, 0.8791],
         [0.1000, 0.1000, 0.8039]],
        [[0.1000, 0.1000, 0.8181],
         [0.1000, 0.1000, 0.9913],
         [0.1000, 0.1000, 0.8524],
         ...,
         [0.1000, 0.1000, 1.1233],
         [0.1000, 0.1000, 0.9033],
         [0.1000, 0.1000, 0.8344]],
        [[0.1000, 0.1000, 0.8597],
         [0.1000, 0.1000, 1.0009],
         [0.1000, 0.1000, 0.8687],
         ...,
         [0.1000, 0.1000, 1.1418],
         [0.1000, 0.1000, 0.9202],
         [0.1000, 0.1000, 0.8572]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.7969],
         [ 0.1000,  0.1000, 21.2272],
         [ 0.1000,  0.1000, 16.5199],
         ...,
         [ 0.1000,  0.1000, 24.5417],
         [ 0.1000,  0.1000, 22.3440],
         [ 0.1000,  0.1000, 17.9993]],
        [[ 0.1000,  0.1000, 10.0373],
         [ 0.1000,  0.1000, 18.8141],
         [ 0.1000,  0.1000, 11.7943],
         ...,
         [ 0.1000,  0.1000, 20.8824],
         [ 0.1000,  0.1000, 17.1451],
         [ 0.1000,  0.1000, 10.3102]],
        [[ 0.1000,  0.1000,  9.2873],
         [ 0.1000,  0.1000, 18.5351],
         [ 0.1000,  0.1000, 11.3125],
         ...,
         [ 0.1000,  0.1000, 20.4692],
         [ 0.1000,  0.1000, 16.5921],
         [ 0.1000,  0.1000,  9.6231]],
        ...,
        [[ 0.1000,  0.1000,  8.4338],
         [ 0.1000,  0.1000, 18.1946],
         [ 0.1000,  0.1000, 10.7418],
         ...,
         [ 0.1000,  0.1000, 19.9676],
         [ 0.1000,  0.1000, 15.9304],
         [ 0.1000,  0.1000,  8.8335]],
        [[ 0.1000,  0.1000, 10.7834],
         [ 0.1000,  0.1000, 19.0754],
         [ 0.1000,  0.1000, 12.2574],
         ...,
         [ 0.1000,  0.1000, 21.2713],
         [ 0.1000,  0.1000, 17.6720],
         [ 0.1000,  0.1000, 10.9882]],
        [[ 0.1000,  0.1000, 12.6320],
         [ 0.1000,  0.1000, 19.6648],
         [ 0.1000,  0.1000, 13.3445],
         ...,
         [ 0.1000,  0.1000, 22.1554],
         [ 0.1000,  0.1000, 18.8926],
         [ 0.1000,  0.1000, 12.6460]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9703],
         [0.1000, 0.1000, 1.0099],
         [0.1000, 0.1000, 0.9333],
         ...,
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0280],
         [0.1000, 0.1000, 0.9574]],
        [[0.1000, 0.1000, 0.8279],
         [0.1000, 0.1000, 0.9706],
         [0.1000, 0.1000, 0.8564],
         ...,
         [0.1000, 0.1000, 1.0043],
         [0.1000, 0.1000, 0.9435],
         [0.1000, 0.1000, 0.8323]],
        [[0.1000, 0.1000, 0.8157],
         [0.1000, 0.1000, 0.9661],
         [0.1000, 0.1000, 0.8486],
         ...,
         [0.1000, 0.1000, 0.9975],
         [0.1000, 0.1000, 0.9345],
         [0.1000, 0.1000, 0.8211]],
        ...,
        [[0.1000, 0.1000, 0.8018],
         [0.1000, 0.1000, 0.9605],
         [0.1000, 0.1000, 0.8393],
         ...,
         [0.1000, 0.1000, 0.9894],
         [0.1000, 0.1000, 0.9237],
         [0.1000, 0.1000, 0.8083]],
        [[0.1000, 0.1000, 0.8400],
         [0.1000, 0.1000, 0.9749],
         [0.1000, 0.1000, 0.8640],
         ...,
         [0.1000, 0.1000, 1.0106],
         [0.1000, 0.1000, 0.9520],
         [0.1000, 0.1000, 0.8433]],
        [[0.1000, 0.1000, 0.8701],
         [0.1000, 0.1000, 0.9845],
         [0.1000, 0.1000, 0.8817],
         ...,
         [0.1000, 0.1000, 1.0250],
         [0.1000, 0.1000, 0.9719],
         [0.1000, 0.1000, 0.8703]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.6984],
         [ 0.1000,  0.1000, 24.8663],
         [ 0.1000,  0.1000, 17.4350],
         ...,
         [ 0.1000,  0.1000, 23.5077],
         [ 0.1000,  0.1000, 20.8740],
         [ 0.1000,  0.1000, 18.1795]],
        [[ 0.1000,  0.1000, 10.0670],
         [ 0.1000,  0.1000, 21.6176],
         [ 0.1000,  0.1000, 12.5665],
         ...,
         [ 0.1000,  0.1000, 19.9809],
         [ 0.1000,  0.1000, 17.2844],
         [ 0.1000,  0.1000, 10.2414]],
        [[ 0.1000,  0.1000,  9.3242],
         [ 0.1000,  0.1000, 21.2462],
         [ 0.1000,  0.1000, 12.0674],
         ...,
         [ 0.1000,  0.1000, 19.5828],
         [ 0.1000,  0.1000, 16.8853],
         [ 0.1000,  0.1000,  9.5392]],
        ...,
        [[ 0.1000,  0.1000,  8.4781],
         [ 0.1000,  0.1000, 20.7940],
         [ 0.1000,  0.1000, 11.4753],
         ...,
         [ 0.1000,  0.1000, 19.0998],
         [ 0.1000,  0.1000, 16.4028],
         [ 0.1000,  0.1000,  8.7341]],
        [[ 0.1000,  0.1000, 10.8052],
         [ 0.1000,  0.1000, 21.9663],
         [ 0.1000,  0.1000, 13.0457],
         ...,
         [ 0.1000,  0.1000, 20.3555],
         [ 0.1000,  0.1000, 17.6612],
         [ 0.1000,  0.1000, 10.9356]],
        [[ 0.1000,  0.1000, 12.6313],
         [ 0.1000,  0.1000, 22.7557],
         [ 0.1000,  0.1000, 14.1687],
         ...,
         [ 0.1000,  0.1000, 21.2073],
         [ 0.1000,  0.1000, 18.5219],
         [ 0.1000,  0.1000, 12.6385]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9777],
         [0.1000, 0.1000, 1.0780],
         [0.1000, 0.1000, 0.9572],
         ...,
         [0.1000, 0.1000, 1.0559],
         [0.1000, 0.1000, 1.0131],
         [0.1000, 0.1000, 0.9693]],
        [[0.1000, 0.1000, 0.8373],
         [0.1000, 0.1000, 1.0252],
         [0.1000, 0.1000, 0.8780],
         ...,
         [0.1000, 0.1000, 0.9986],
         [0.1000, 0.1000, 0.9547],
         [0.1000, 0.1000, 0.8402]],
        [[0.1000, 0.1000, 0.8252],
         [0.1000, 0.1000, 1.0191],
         [0.1000, 0.1000, 0.8699],
         ...,
         [0.1000, 0.1000, 0.9921],
         [0.1000, 0.1000, 0.9482],
         [0.1000, 0.1000, 0.8287]],
        ...,
        [[0.1000, 0.1000, 0.8115],
         [0.1000, 0.1000, 1.0118],
         [0.1000, 0.1000, 0.8602],
         ...,
         [0.1000, 0.1000, 0.9842],
         [0.1000, 0.1000, 0.9404],
         [0.1000, 0.1000, 0.8156]],
        [[0.1000, 0.1000, 0.8493],
         [0.1000, 0.1000, 1.0309],
         [0.1000, 0.1000, 0.8858],
         ...,
         [0.1000, 0.1000, 1.0047],
         [0.1000, 0.1000, 0.9608],
         [0.1000, 0.1000, 0.8515]],
        [[0.1000, 0.1000, 0.8790],
         [0.1000, 0.1000, 1.0437],
         [0.1000, 0.1000, 0.9040],
         ...,
         [0.1000, 0.1000, 1.0185],
         [0.1000, 0.1000, 0.9748],
         [0.1000, 0.1000, 0.8791]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2954],
         [ 0.1000,  0.1000, 25.2730],
         [ 0.1000,  0.1000, 19.2817],
         ...,
         [ 0.1000,  0.1000, 24.9181],
         [ 0.1000,  0.1000, 20.3264],
         [ 0.1000,  0.1000, 18.3832]],
        [[ 0.1000,  0.1000, 10.1996],
         [ 0.1000,  0.1000, 22.0333],
         [ 0.1000,  0.1000, 14.1673],
         ...,
         [ 0.1000,  0.1000, 21.1551],
         [ 0.1000,  0.1000, 17.2992],
         [ 0.1000,  0.1000, 10.1691]],
        [[ 0.1000,  0.1000,  9.4879],
         [ 0.1000,  0.1000, 21.6623],
         [ 0.1000,  0.1000, 13.6369],
         ...,
         [ 0.1000,  0.1000, 20.7307],
         [ 0.1000,  0.1000, 16.9573],
         [ 0.1000,  0.1000,  9.4504]],
        ...,
        [[ 0.1000,  0.1000,  8.6732],
         [ 0.1000,  0.1000, 21.2105],
         [ 0.1000,  0.1000, 13.0062],
         ...,
         [ 0.1000,  0.1000, 20.2157],
         [ 0.1000,  0.1000, 16.5423],
         [ 0.1000,  0.1000,  8.6286]],
        [[ 0.1000,  0.1000, 10.9040],
         [ 0.1000,  0.1000, 22.3814],
         [ 0.1000,  0.1000, 14.6752],
         ...,
         [ 0.1000,  0.1000, 21.5546],
         [ 0.1000,  0.1000, 17.6210],
         [ 0.1000,  0.1000, 10.8810]],
        [[ 0.1000,  0.1000, 12.6351],
         [ 0.1000,  0.1000, 23.1693],
         [ 0.1000,  0.1000, 15.8615],
         ...,
         [ 0.1000,  0.1000, 22.4632],
         [ 0.1000,  0.1000, 18.3524],
         [ 0.1000,  0.1000, 12.6333]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9714],
         [0.1000, 0.1000, 1.0849],
         [0.1000, 0.1000, 0.9875],
         ...,
         [0.1000, 0.1000, 1.0791],
         [0.1000, 0.1000, 1.0045],
         [0.1000, 0.1000, 0.9729]],
        [[0.1000, 0.1000, 0.8397],
         [0.1000, 0.1000, 1.0322],
         [0.1000, 0.1000, 0.9043],
         ...,
         [0.1000, 0.1000, 1.0179],
         [0.1000, 0.1000, 0.9552],
         [0.1000, 0.1000, 0.8393]],
        [[0.1000, 0.1000, 0.8282],
         [0.1000, 0.1000, 1.0262],
         [0.1000, 0.1000, 0.8957],
         ...,
         [0.1000, 0.1000, 1.0110],
         [0.1000, 0.1000, 0.9497],
         [0.1000, 0.1000, 0.8276]],
        ...,
        [[0.1000, 0.1000, 0.8149],
         [0.1000, 0.1000, 1.0188],
         [0.1000, 0.1000, 0.8854],
         ...,
         [0.1000, 0.1000, 1.0027],
         [0.1000, 0.1000, 0.9429],
         [0.1000, 0.1000, 0.8142]],
        [[0.1000, 0.1000, 0.8512],
         [0.1000, 0.1000, 1.0379],
         [0.1000, 0.1000, 0.9125],
         ...,
         [0.1000, 0.1000, 1.0244],
         [0.1000, 0.1000, 0.9605],
         [0.1000, 0.1000, 0.8508]],
        [[0.1000, 0.1000, 0.8794],
         [0.1000, 0.1000, 1.0507],
         [0.1000, 0.1000, 0.9318],
         ...,
         [0.1000, 0.1000, 1.0392],
         [0.1000, 0.1000, 0.9723],
         [0.1000, 0.1000, 0.8793]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.5318],
         [ 0.1000,  0.1000, 28.3904],
         [ 0.1000,  0.1000, 21.4705],
         ...,
         [ 0.1000,  0.1000, 24.9106],
         [ 0.1000,  0.1000, 25.1393],
         [ 0.1000,  0.1000, 18.2874]],
        [[ 0.1000,  0.1000, 10.5145],
         [ 0.1000,  0.1000, 24.0176],
         [ 0.1000,  0.1000, 17.3301],
         ...,
         [ 0.1000,  0.1000, 21.3439],
         [ 0.1000,  0.1000, 21.3441],
         [ 0.1000,  0.1000, 10.2024]],
        [[ 0.1000,  0.1000,  9.8697],
         [ 0.1000,  0.1000, 23.5255],
         [ 0.1000,  0.1000, 16.8765],
         ...,
         [ 0.1000,  0.1000, 20.9395],
         [ 0.1000,  0.1000, 20.9160],
         [ 0.1000,  0.1000,  9.4914]],
        ...,
        [[ 0.1000,  0.1000,  9.1241],
         [ 0.1000,  0.1000, 22.9286],
         [ 0.1000,  0.1000, 16.3301],
         ...,
         [ 0.1000,  0.1000, 20.4482],
         [ 0.1000,  0.1000, 20.3966],
         [ 0.1000,  0.1000,  8.6773]],
        [[ 0.1000,  0.1000, 11.1472],
         [ 0.1000,  0.1000, 24.4812],
         [ 0.1000,  0.1000, 17.7596],
         ...,
         [ 0.1000,  0.1000, 21.7242],
         [ 0.1000,  0.1000, 21.7470],
         [ 0.1000,  0.1000, 10.9061]],
        [[ 0.1000,  0.1000, 12.6812],
         [ 0.1000,  0.1000, 25.5359],
         [ 0.1000,  0.1000, 18.7456],
         ...,
         [ 0.1000,  0.1000, 22.5875],
         [ 0.1000,  0.1000, 22.6634],
         [ 0.1000,  0.1000, 12.6353]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 1.1271],
         [0.1000, 0.1000, 1.0146],
         ...,
         [0.1000, 0.1000, 1.0705],
         [0.1000, 0.1000, 1.0742],
         [0.1000, 0.1000, 0.9628]],
        [[0.1000, 0.1000, 0.8364],
         [0.1000, 0.1000, 1.0560],
         [0.1000, 0.1000, 0.9472],
         ...,
         [0.1000, 0.1000, 1.0125],
         [0.1000, 0.1000, 1.0125],
         [0.1000, 0.1000, 0.8313]],
        [[0.1000, 0.1000, 0.8259],
         [0.1000, 0.1000, 1.0480],
         [0.1000, 0.1000, 0.9398],
         ...,
         [0.1000, 0.1000, 1.0059],
         [0.1000, 0.1000, 1.0055],
         [0.1000, 0.1000, 0.8197]],
        ...,
        [[0.1000, 0.1000, 0.8137],
         [0.1000, 0.1000, 1.0383],
         [0.1000, 0.1000, 0.9309],
         ...,
         [0.1000, 0.1000, 0.9979],
         [0.1000, 0.1000, 0.9971],
         [0.1000, 0.1000, 0.8065]],
        [[0.1000, 0.1000, 0.8467],
         [0.1000, 0.1000, 1.0635],
         [0.1000, 0.1000, 0.9542],
         ...,
         [0.1000, 0.1000, 1.0187],
         [0.1000, 0.1000, 1.0191],
         [0.1000, 0.1000, 0.8427]],
        [[0.1000, 0.1000, 0.8716],
         [0.1000, 0.1000, 1.0807],
         [0.1000, 0.1000, 0.9702],
         ...,
         [0.1000, 0.1000, 1.0327],
         [0.1000, 0.1000, 1.0340],
         [0.1000, 0.1000, 0.8709]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2177],
         [ 0.1000,  0.1000, 27.0895],
         [ 0.1000,  0.1000, 21.9215],
         ...,
         [ 0.1000,  0.1000, 24.9798],
         [ 0.1000,  0.1000, 26.3838],
         [ 0.1000,  0.1000, 18.1436]],
        [[ 0.1000,  0.1000, 10.6786],
         [ 0.1000,  0.1000, 22.9851],
         [ 0.1000,  0.1000, 18.6989],
         ...,
         [ 0.1000,  0.1000, 21.3874],
         [ 0.1000,  0.1000, 22.3682],
         [ 0.1000,  0.1000, 10.2548]],
        [[ 0.1000,  0.1000, 10.0654],
         [ 0.1000,  0.1000, 22.5224],
         [ 0.1000,  0.1000, 18.3344],
         ...,
         [ 0.1000,  0.1000, 20.9802],
         [ 0.1000,  0.1000, 21.9157],
         [ 0.1000,  0.1000,  9.5555]],
        ...,
        [[ 0.1000,  0.1000,  9.3531],
         [ 0.1000,  0.1000, 21.9609],
         [ 0.1000,  0.1000, 17.8919],
         ...,
         [ 0.1000,  0.1000, 20.4856],
         [ 0.1000,  0.1000, 21.3667],
         [ 0.1000,  0.1000,  8.7534]],
        [[ 0.1000,  0.1000, 11.2778],
         [ 0.1000,  0.1000, 23.4208],
         [ 0.1000,  0.1000, 19.0418],
         ...,
         [ 0.1000,  0.1000, 21.7703],
         [ 0.1000,  0.1000, 22.7943],
         [ 0.1000,  0.1000, 10.9458]],
        [[ 0.1000,  0.1000, 12.7216],
         [ 0.1000,  0.1000, 24.4116],
         [ 0.1000,  0.1000, 19.8208],
         ...,
         [ 0.1000,  0.1000, 22.6396],
         [ 0.1000,  0.1000, 23.7634],
         [ 0.1000,  0.1000, 12.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9443],
         [0.1000, 0.1000, 1.1049],
         [0.1000, 0.1000, 1.0208],
         ...,
         [0.1000, 0.1000, 1.0706],
         [0.1000, 0.1000, 1.0934],
         [0.1000, 0.1000, 0.9594]],
        [[0.1000, 0.1000, 0.8379],
         [0.1000, 0.1000, 1.0381],
         [0.1000, 0.1000, 0.9684],
         ...,
         [0.1000, 0.1000, 1.0121],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 0.8311]],
        [[0.1000, 0.1000, 0.8280],
         [0.1000, 0.1000, 1.0306],
         [0.1000, 0.1000, 0.9625],
         ...,
         [0.1000, 0.1000, 1.0055],
         [0.1000, 0.1000, 1.0207],
         [0.1000, 0.1000, 0.8197]],
        ...,
        [[0.1000, 0.1000, 0.8164],
         [0.1000, 0.1000, 1.0215],
         [0.1000, 0.1000, 0.9553],
         ...,
         [0.1000, 0.1000, 0.9975],
         [0.1000, 0.1000, 1.0118],
         [0.1000, 0.1000, 0.8066]],
        [[0.1000, 0.1000, 0.8477],
         [0.1000, 0.1000, 1.0452],
         [0.1000, 0.1000, 0.9740],
         ...,
         [0.1000, 0.1000, 1.0183],
         [0.1000, 0.1000, 1.0350],
         [0.1000, 0.1000, 0.8423]],
        [[0.1000, 0.1000, 0.8712],
         [0.1000, 0.1000, 1.0613],
         [0.1000, 0.1000, 0.9866],
         ...,
         [0.1000, 0.1000, 1.0325],
         [0.1000, 0.1000, 1.0508],
         [0.1000, 0.1000, 0.8698]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.1166],
         [ 0.1000,  0.1000, 21.5260],
         [ 0.1000,  0.1000, 30.9636],
         ...,
         [ 0.1000,  0.1000, 26.0991],
         [ 0.1000,  0.1000, 31.0160],
         [ 0.1000,  0.1000, 17.0836]],
        [[ 0.1000,  0.1000, 10.7373],
         [ 0.1000,  0.1000, 18.3780],
         [ 0.1000,  0.1000, 26.4889],
         ...,
         [ 0.1000,  0.1000, 22.4477],
         [ 0.1000,  0.1000, 25.9172],
         [ 0.1000,  0.1000, 10.7572]],
        [[ 0.1000,  0.1000, 10.1351],
         [ 0.1000,  0.1000, 18.0218],
         [ 0.1000,  0.1000, 25.9820],
         ...,
         [ 0.1000,  0.1000, 22.0328],
         [ 0.1000,  0.1000, 25.3474],
         [ 0.1000,  0.1000, 10.1586]],
        ...,
        [[ 0.1000,  0.1000,  9.4343],
         [ 0.1000,  0.1000, 17.5893],
         [ 0.1000,  0.1000, 25.3663],
         ...,
         [ 0.1000,  0.1000, 21.5284],
         [ 0.1000,  0.1000, 24.6575],
         [ 0.1000,  0.1000,  9.4617]],
        [[ 0.1000,  0.1000, 11.3251],
         [ 0.1000,  0.1000, 18.7131],
         [ 0.1000,  0.1000, 26.9657],
         ...,
         [ 0.1000,  0.1000, 22.8377],
         [ 0.1000,  0.1000, 26.4547],
         [ 0.1000,  0.1000, 11.3412]],
        [[ 0.1000,  0.1000, 12.7384],
         [ 0.1000,  0.1000, 19.4743],
         [ 0.1000,  0.1000, 28.0483],
         ...,
         [ 0.1000,  0.1000, 23.7224],
         [ 0.1000,  0.1000, 27.6804],
         [ 0.1000,  0.1000, 12.7443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9374],
         [0.1000, 0.1000, 1.0091],
         [0.1000, 0.1000, 1.1626],
         ...,
         [0.1000, 0.1000, 1.0835],
         [0.1000, 0.1000, 1.1635],
         [0.1000, 0.1000, 0.9369]],
        [[0.1000, 0.1000, 0.8337],
         [0.1000, 0.1000, 0.9579],
         [0.1000, 0.1000, 1.0899],
         ...,
         [0.1000, 0.1000, 1.0241],
         [0.1000, 0.1000, 1.0806],
         [0.1000, 0.1000, 0.8340]],
        [[0.1000, 0.1000, 0.8239],
         [0.1000, 0.1000, 0.9522],
         [0.1000, 0.1000, 1.0816],
         ...,
         [0.1000, 0.1000, 1.0174],
         [0.1000, 0.1000, 1.0713],
         [0.1000, 0.1000, 0.8243]],
        ...,
        [[0.1000, 0.1000, 0.8125],
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 1.0716],
         ...,
         [0.1000, 0.1000, 1.0092],
         [0.1000, 0.1000, 1.0601],
         [0.1000, 0.1000, 0.8129]],
        [[0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.9634],
         [0.1000, 0.1000, 1.0976],
         ...,
         [0.1000, 0.1000, 1.0305],
         [0.1000, 0.1000, 1.0893],
         [0.1000, 0.1000, 0.8435]],
        [[0.1000, 0.1000, 0.8662],
         [0.1000, 0.1000, 0.9758],
         [0.1000, 0.1000, 1.1152],
         ...,
         [0.1000, 0.1000, 1.0449],
         [0.1000, 0.1000, 1.1092],
         [0.1000, 0.1000, 0.8663]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.5919],
         [ 0.1000,  0.1000, 21.8113],
         [ 0.1000,  0.1000, 24.3376],
         ...,
         [ 0.1000,  0.1000, 24.7121],
         [ 0.1000,  0.1000, 27.8229],
         [ 0.1000,  0.1000, 17.4180]],
        [[ 0.1000,  0.1000, 10.4858],
         [ 0.1000,  0.1000, 18.7169],
         [ 0.1000,  0.1000, 20.6723],
         ...,
         [ 0.1000,  0.1000, 21.2395],
         [ 0.1000,  0.1000, 23.5802],
         [ 0.1000,  0.1000, 10.5710]],
        [[ 0.1000,  0.1000,  9.8353],
         [ 0.1000,  0.1000, 18.3657],
         [ 0.1000,  0.1000, 20.2588],
         ...,
         [ 0.1000,  0.1000, 20.8451],
         [ 0.1000,  0.1000, 23.1022],
         [ 0.1000,  0.1000,  9.9373]],
        ...,
        [[ 0.1000,  0.1000,  9.0836],
         [ 0.1000,  0.1000, 17.9390],
         [ 0.1000,  0.1000, 19.7571],
         ...,
         [ 0.1000,  0.1000, 20.3657],
         [ 0.1000,  0.1000, 22.5223],
         [ 0.1000,  0.1000,  9.2033]],
        [[ 0.1000,  0.1000, 11.1246],
         [ 0.1000,  0.1000, 19.0470],
         [ 0.1000,  0.1000, 21.0616],
         ...,
         [ 0.1000,  0.1000, 21.6103],
         [ 0.1000,  0.1000, 24.0304],
         [ 0.1000,  0.1000, 11.1919]],
        [[ 0.1000,  0.1000, 12.6752],
         [ 0.1000,  0.1000, 19.7963],
         [ 0.1000,  0.1000, 21.9467],
         ...,
         [ 0.1000,  0.1000, 22.4515],
         [ 0.1000,  0.1000, 25.0542],
         [ 0.1000,  0.1000, 12.6940]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9492],
         [0.1000, 0.1000, 1.0178],
         [0.1000, 0.1000, 1.0589],
         ...,
         [0.1000, 0.1000, 1.0650],
         [0.1000, 0.1000, 1.1156],
         [0.1000, 0.1000, 0.9463]],
        [[0.1000, 0.1000, 0.8336],
         [0.1000, 0.1000, 0.9675],
         [0.1000, 0.1000, 0.9993],
         ...,
         [0.1000, 0.1000, 1.0085],
         [0.1000, 0.1000, 1.0466],
         [0.1000, 0.1000, 0.8350]],
        [[0.1000, 0.1000, 0.8230],
         [0.1000, 0.1000, 0.9617],
         [0.1000, 0.1000, 0.9925],
         ...,
         [0.1000, 0.1000, 1.0021],
         [0.1000, 0.1000, 1.0388],
         [0.1000, 0.1000, 0.8247]],
        ...,
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.9548],
         [0.1000, 0.1000, 0.9844],
         ...,
         [0.1000, 0.1000, 0.9943],
         [0.1000, 0.1000, 1.0293],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8440],
         [0.1000, 0.1000, 0.9728],
         [0.1000, 0.1000, 1.0056],
         ...,
         [0.1000, 0.1000, 1.0145],
         [0.1000, 0.1000, 1.0539],
         [0.1000, 0.1000, 0.8451]],
        [[0.1000, 0.1000, 0.8692],
         [0.1000, 0.1000, 0.9850],
         [0.1000, 0.1000, 1.0200],
         ...,
         [0.1000, 0.1000, 1.0282],
         [0.1000, 0.1000, 1.0705],
         [0.1000, 0.1000, 0.8695]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0007],
         [ 0.1000,  0.1000, 22.7919],
         [ 0.1000,  0.1000, 24.8643],
         ...,
         [ 0.1000,  0.1000, 22.8201],
         [ 0.1000,  0.1000, 26.0342],
         [ 0.1000,  0.1000, 18.1244]],
        [[ 0.1000,  0.1000, 10.3097],
         [ 0.1000,  0.1000, 20.2224],
         [ 0.1000,  0.1000, 21.1135],
         ...,
         [ 0.1000,  0.1000, 19.5537],
         [ 0.1000,  0.1000, 22.1005],
         [ 0.1000,  0.1000, 10.2620]],
        [[ 0.1000,  0.1000,  9.6224],
         [ 0.1000,  0.1000, 19.9252],
         [ 0.1000,  0.1000, 20.6904],
         ...,
         [ 0.1000,  0.1000, 19.1833],
         [ 0.1000,  0.1000, 21.6569],
         [ 0.1000,  0.1000,  9.5643]],
        ...,
        [[ 0.1000,  0.1000,  8.8327],
         [ 0.1000,  0.1000, 19.5624],
         [ 0.1000,  0.1000, 20.1771],
         ...,
         [ 0.1000,  0.1000, 18.7333],
         [ 0.1000,  0.1000, 21.1186],
         [ 0.1000,  0.1000,  8.7639]],
        [[ 0.1000,  0.1000, 10.9877],
         [ 0.1000,  0.1000, 20.5008],
         [ 0.1000,  0.1000, 21.5118],
         ...,
         [ 0.1000,  0.1000, 19.9020],
         [ 0.1000,  0.1000, 22.5182],
         [ 0.1000,  0.1000, 10.9512]],
        [[ 0.1000,  0.1000, 12.6459],
         [ 0.1000,  0.1000, 21.1286],
         [ 0.1000,  0.1000, 22.4175],
         ...,
         [ 0.1000,  0.1000, 20.6926],
         [ 0.1000,  0.1000, 23.4679],
         [ 0.1000,  0.1000, 12.6405]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9711],
         [0.1000, 0.1000, 1.0490],
         [0.1000, 0.1000, 1.0827],
         ...,
         [0.1000, 0.1000, 1.0494],
         [0.1000, 0.1000, 1.1017],
         [0.1000, 0.1000, 0.9731]],
        [[0.1000, 0.1000, 0.8460],
         [0.1000, 0.1000, 1.0072],
         [0.1000, 0.1000, 1.0217],
         ...,
         [0.1000, 0.1000, 0.9963],
         [0.1000, 0.1000, 1.0377],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8348],
         [0.1000, 0.1000, 1.0024],
         [0.1000, 0.1000, 1.0148],
         ...,
         [0.1000, 0.1000, 0.9903],
         [0.1000, 0.1000, 1.0305],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 0.9965],
         [0.1000, 0.1000, 1.0064],
         ...,
         [0.1000, 0.1000, 0.9830],
         [0.1000, 0.1000, 1.0218],
         [0.1000, 0.1000, 0.8208]],
        [[0.1000, 0.1000, 0.8570],
         [0.1000, 0.1000, 1.0117],
         [0.1000, 0.1000, 1.0282],
         ...,
         [0.1000, 0.1000, 1.0020],
         [0.1000, 0.1000, 1.0445],
         [0.1000, 0.1000, 0.8564]],
        [[0.1000, 0.1000, 0.8840],
         [0.1000, 0.1000, 1.0219],
         [0.1000, 0.1000, 1.0429],
         ...,
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0600],
         [0.1000, 0.1000, 0.8839]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.3646],
         [ 0.1000,  0.1000, 23.3218],
         [ 0.1000,  0.1000, 24.2837],
         ...,
         [ 0.1000,  0.1000, 23.9032],
         [ 0.1000,  0.1000, 23.8112],
         [ 0.1000,  0.1000, 18.3682]],
        [[ 0.1000,  0.1000, 10.1755],
         [ 0.1000,  0.1000, 20.2461],
         [ 0.1000,  0.1000, 20.7153],
         ...,
         [ 0.1000,  0.1000, 20.5049],
         [ 0.1000,  0.1000, 20.2666],
         [ 0.1000,  0.1000, 10.1742]],
        [[ 0.1000,  0.1000,  9.4583],
         [ 0.1000,  0.1000, 19.8947],
         [ 0.1000,  0.1000, 20.3118],
         ...,
         [ 0.1000,  0.1000, 20.1194],
         [ 0.1000,  0.1000, 19.8662],
         [ 0.1000,  0.1000,  9.4567]],
        ...,
        [[ 0.1000,  0.1000,  8.6380],
         [ 0.1000,  0.1000, 19.4670],
         [ 0.1000,  0.1000, 19.8218],
         ...,
         [ 0.1000,  0.1000, 19.6509],
         [ 0.1000,  0.1000, 19.3803],
         [ 0.1000,  0.1000,  8.6362]],
        [[ 0.1000,  0.1000, 10.8858],
         [ 0.1000,  0.1000, 20.5760],
         [ 0.1000,  0.1000, 21.0950],
         ...,
         [ 0.1000,  0.1000, 20.8675],
         [ 0.1000,  0.1000, 20.6434],
         [ 0.1000,  0.1000, 10.8849]],
        [[ 0.1000,  0.1000, 12.6337],
         [ 0.1000,  0.1000, 21.3231],
         [ 0.1000,  0.1000, 21.9577],
         ...,
         [ 0.1000,  0.1000, 21.6903],
         [ 0.1000,  0.1000, 21.4998],
         [ 0.1000,  0.1000, 12.6336]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9762],
         [0.1000, 0.1000, 1.0569],
         [0.1000, 0.1000, 1.0725],
         ...,
         [0.1000, 0.1000, 1.0663],
         [0.1000, 0.1000, 1.0648],
         [0.1000, 0.1000, 0.9763]],
        [[0.1000, 0.1000, 0.8430],
         [0.1000, 0.1000, 1.0068],
         [0.1000, 0.1000, 1.0145],
         ...,
         [0.1000, 0.1000, 1.0110],
         [0.1000, 0.1000, 1.0072],
         [0.1000, 0.1000, 0.8430]],
        [[0.1000, 0.1000, 0.8314],
         [0.1000, 0.1000, 1.0011],
         [0.1000, 0.1000, 1.0079],
         ...,
         [0.1000, 0.1000, 1.0048],
         [0.1000, 0.1000, 1.0006],
         [0.1000, 0.1000, 0.8313]],
        ...,
        [[0.1000, 0.1000, 0.8180],
         [0.1000, 0.1000, 0.9942],
         [0.1000, 0.1000, 0.9999],
         ...,
         [0.1000, 0.1000, 0.9971],
         [0.1000, 0.1000, 0.9927],
         [0.1000, 0.1000, 0.8180]],
        [[0.1000, 0.1000, 0.8546],
         [0.1000, 0.1000, 1.0122],
         [0.1000, 0.1000, 1.0206],
         ...,
         [0.1000, 0.1000, 1.0169],
         [0.1000, 0.1000, 1.0133],
         [0.1000, 0.1000, 0.8546]],
        [[0.1000, 0.1000, 0.8830],
         [0.1000, 0.1000, 1.0243],
         [0.1000, 0.1000, 1.0347],
         ...,
         [0.1000, 0.1000, 1.0303],
         [0.1000, 0.1000, 1.0272],
         [0.1000, 0.1000, 0.8830]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.3124],
         [ 0.1000,  0.1000, 23.4261],
         [ 0.1000,  0.1000, 24.2298],
         ...,
         [ 0.1000,  0.1000, 24.6371],
         [ 0.1000,  0.1000, 23.3665],
         [ 0.1000,  0.1000, 18.2455]],
        [[ 0.1000,  0.1000, 10.1936],
         [ 0.1000,  0.1000, 20.1157],
         [ 0.1000,  0.1000, 20.7124],
         ...,
         [ 0.1000,  0.1000, 21.1343],
         [ 0.1000,  0.1000, 19.9766],
         [ 0.1000,  0.1000, 10.2174]],
        [[ 0.1000,  0.1000,  9.4806],
         [ 0.1000,  0.1000, 19.7399],
         [ 0.1000,  0.1000, 20.3142],
         ...,
         [ 0.1000,  0.1000, 20.7369],
         [ 0.1000,  0.1000, 19.5928],
         [ 0.1000,  0.1000,  9.5097]],
        ...,
        [[ 0.1000,  0.1000,  8.6645],
         [ 0.1000,  0.1000, 19.2832],
         [ 0.1000,  0.1000, 19.8305],
         ...,
         [ 0.1000,  0.1000, 20.2539],
         [ 0.1000,  0.1000, 19.1266],
         [ 0.1000,  0.1000,  8.6992]],
        [[ 0.1000,  0.1000, 10.8995],
         [ 0.1000,  0.1000, 20.4690],
         [ 0.1000,  0.1000, 21.0871],
         ...,
         [ 0.1000,  0.1000, 21.5080],
         [ 0.1000,  0.1000, 20.3377],
         [ 0.1000,  0.1000, 10.9174]],
        [[ 0.1000,  0.1000, 12.6347],
         [ 0.1000,  0.1000, 21.2708],
         [ 0.1000,  0.1000, 21.9379],
         ...,
         [ 0.1000,  0.1000, 22.3561],
         [ 0.1000,  0.1000, 21.1577],
         [ 0.1000,  0.1000, 12.6364]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9760],
         [0.1000, 0.1000, 1.0592],
         [0.1000, 0.1000, 1.0722],
         ...,
         [0.1000, 0.1000, 1.0789],
         [0.1000, 0.1000, 1.0582],
         [0.1000, 0.1000, 0.9749]],
        [[0.1000, 0.1000, 0.8439],
         [0.1000, 0.1000, 1.0053],
         [0.1000, 0.1000, 1.0150],
         ...,
         [0.1000, 0.1000, 1.0219],
         [0.1000, 0.1000, 1.0031],
         [0.1000, 0.1000, 0.8443]],
        [[0.1000, 0.1000, 0.8323],
         [0.1000, 0.1000, 0.9992],
         [0.1000, 0.1000, 1.0085],
         ...,
         [0.1000, 0.1000, 1.0154],
         [0.1000, 0.1000, 0.9968],
         [0.1000, 0.1000, 0.8328]],
        ...,
        [[0.1000, 0.1000, 0.8191],
         [0.1000, 0.1000, 0.9918],
         [0.1000, 0.1000, 1.0007],
         ...,
         [0.1000, 0.1000, 1.0076],
         [0.1000, 0.1000, 0.9892],
         [0.1000, 0.1000, 0.8196]],
        [[0.1000, 0.1000, 0.8554],
         [0.1000, 0.1000, 1.0111],
         [0.1000, 0.1000, 1.0211],
         ...,
         [0.1000, 0.1000, 1.0280],
         [0.1000, 0.1000, 1.0089],
         [0.1000, 0.1000, 0.8557]],
        [[0.1000, 0.1000, 0.8836],
         [0.1000, 0.1000, 1.0241],
         [0.1000, 0.1000, 1.0349],
         ...,
         [0.1000, 0.1000, 1.0418],
         [0.1000, 0.1000, 1.0223],
         [0.1000, 0.1000, 0.8837]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0452],
         [ 0.1000,  0.1000, 24.4981],
         [ 0.1000,  0.1000, 24.3914],
         ...,
         [ 0.1000,  0.1000, 24.6309],
         [ 0.1000,  0.1000, 23.3982],
         [ 0.1000,  0.1000, 18.0801]],
        [[ 0.1000,  0.1000, 10.2923],
         [ 0.1000,  0.1000, 20.9261],
         [ 0.1000,  0.1000, 21.0176],
         ...,
         [ 0.1000,  0.1000, 21.0920],
         [ 0.1000,  0.1000, 20.1550],
         [ 0.1000,  0.1000, 10.2788]],
        [[ 0.1000,  0.1000,  9.6012],
         [ 0.1000,  0.1000, 20.5218],
         [ 0.1000,  0.1000, 20.6338],
         ...,
         [ 0.1000,  0.1000, 20.6909],
         [ 0.1000,  0.1000, 19.7862],
         [ 0.1000,  0.1000,  9.5848]],
        ...,
        [[ 0.1000,  0.1000,  8.8076],
         [ 0.1000,  0.1000, 20.0309],
         [ 0.1000,  0.1000, 20.1672],
         ...,
         [ 0.1000,  0.1000, 20.2036],
         [ 0.1000,  0.1000, 19.3377],
         [ 0.1000,  0.1000,  8.7882]],
        [[ 0.1000,  0.1000, 10.9744],
         [ 0.1000,  0.1000, 21.3064],
         [ 0.1000,  0.1000, 21.3783],
         ...,
         [ 0.1000,  0.1000, 21.4692],
         [ 0.1000,  0.1000, 20.5017],
         [ 0.1000,  0.1000, 10.9641]],
        [[ 0.1000,  0.1000, 12.6438],
         [ 0.1000,  0.1000, 22.1703],
         [ 0.1000,  0.1000, 22.1961],
         ...,
         [ 0.1000,  0.1000, 22.3256],
         [ 0.1000,  0.1000, 21.2878],
         [ 0.1000,  0.1000, 12.6423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9743],
         [0.1000, 0.1000, 1.0792],
         [0.1000, 0.1000, 1.0775],
         ...,
         [0.1000, 0.1000, 1.0814],
         [0.1000, 0.1000, 1.0614],
         [0.1000, 0.1000, 0.9749]],
        [[0.1000, 0.1000, 0.8482],
         [0.1000, 0.1000, 1.0211],
         [0.1000, 0.1000, 1.0226],
         ...,
         [0.1000, 0.1000, 1.0238],
         [0.1000, 0.1000, 1.0086],
         [0.1000, 0.1000, 0.8480]],
        [[0.1000, 0.1000, 0.8369],
         [0.1000, 0.1000, 1.0146],
         [0.1000, 0.1000, 1.0164],
         ...,
         [0.1000, 0.1000, 1.0173],
         [0.1000, 0.1000, 1.0026],
         [0.1000, 0.1000, 0.8367]],
        ...,
        [[0.1000, 0.1000, 0.8240],
         [0.1000, 0.1000, 1.0066],
         [0.1000, 0.1000, 1.0088],
         ...,
         [0.1000, 0.1000, 1.0094],
         [0.1000, 0.1000, 0.9953],
         [0.1000, 0.1000, 0.8237]],
        [[0.1000, 0.1000, 0.8593],
         [0.1000, 0.1000, 1.0273],
         [0.1000, 0.1000, 1.0285],
         ...,
         [0.1000, 0.1000, 1.0300],
         [0.1000, 0.1000, 1.0142],
         [0.1000, 0.1000, 0.8591]],
        [[0.1000, 0.1000, 0.8864],
         [0.1000, 0.1000, 1.0414],
         [0.1000, 0.1000, 1.0418],
         ...,
         [0.1000, 0.1000, 1.0439],
         [0.1000, 0.1000, 1.0270],
         [0.1000, 0.1000, 0.8864]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.9849],
         [ 0.1000,  0.1000, 24.1953],
         [ 0.1000,  0.1000, 24.5259],
         ...,
         [ 0.1000,  0.1000, 24.4699],
         [ 0.1000,  0.1000, 23.9602],
         [ 0.1000,  0.1000, 17.9825]],
        [[ 0.1000,  0.1000, 10.3160],
         [ 0.1000,  0.1000, 20.7238],
         [ 0.1000,  0.1000, 20.9843],
         ...,
         [ 0.1000,  0.1000, 20.9416],
         [ 0.1000,  0.1000, 20.6078],
         [ 0.1000,  0.1000, 10.3169]],
        [[ 0.1000,  0.1000,  9.6300],
         [ 0.1000,  0.1000, 20.3302],
         [ 0.1000,  0.1000, 20.5831],
         ...,
         [ 0.1000,  0.1000, 20.5418],
         [ 0.1000,  0.1000, 20.2269],
         [ 0.1000,  0.1000,  9.6312]],
        ...,
        [[ 0.1000,  0.1000,  8.8417],
         [ 0.1000,  0.1000, 19.8522],
         [ 0.1000,  0.1000, 20.0958],
         ...,
         [ 0.1000,  0.1000, 20.0562],
         [ 0.1000,  0.1000, 19.7638],
         [ 0.1000,  0.1000,  8.8431]],
        [[ 0.1000,  0.1000, 10.9926],
         [ 0.1000,  0.1000, 21.0939],
         [ 0.1000,  0.1000, 21.3617],
         ...,
         [ 0.1000,  0.1000, 21.3176],
         [ 0.1000,  0.1000, 20.9658],
         [ 0.1000,  0.1000, 10.9933]],
        [[ 0.1000,  0.1000, 12.6467],
         [ 0.1000,  0.1000, 21.9340],
         [ 0.1000,  0.1000, 22.2186],
         ...,
         [ 0.1000,  0.1000, 22.1713],
         [ 0.1000,  0.1000, 21.7781],
         [ 0.1000,  0.1000, 12.6468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9731],
         [0.1000, 0.1000, 1.0741],
         [0.1000, 0.1000, 1.0795],
         ...,
         [0.1000, 0.1000, 1.0786],
         [0.1000, 0.1000, 1.0703],
         [0.1000, 0.1000, 0.9730]],
        [[0.1000, 0.1000, 0.8484],
         [0.1000, 0.1000, 1.0176],
         [0.1000, 0.1000, 1.0219],
         ...,
         [0.1000, 0.1000, 1.0212],
         [0.1000, 0.1000, 1.0157],
         [0.1000, 0.1000, 0.8484]],
        [[0.1000, 0.1000, 0.8372],
         [0.1000, 0.1000, 1.0112],
         [0.1000, 0.1000, 1.0153],
         ...,
         [0.1000, 0.1000, 1.0147],
         [0.1000, 0.1000, 1.0095],
         [0.1000, 0.1000, 0.8372]],
        ...,
        [[0.1000, 0.1000, 0.8244],
         [0.1000, 0.1000, 1.0035],
         [0.1000, 0.1000, 1.0074],
         ...,
         [0.1000, 0.1000, 1.0068],
         [0.1000, 0.1000, 1.0020],
         [0.1000, 0.1000, 0.8244]],
        [[0.1000, 0.1000, 0.8594],
         [0.1000, 0.1000, 1.0236],
         [0.1000, 0.1000, 1.0280],
         ...,
         [0.1000, 0.1000, 1.0273],
         [0.1000, 0.1000, 1.0216],
         [0.1000, 0.1000, 0.8594]],
        [[0.1000, 0.1000, 0.8863],
         [0.1000, 0.1000, 1.0373],
         [0.1000, 0.1000, 1.0419],
         ...,
         [0.1000, 0.1000, 1.0412],
         [0.1000, 0.1000, 1.0348],
         [0.1000, 0.1000, 0.8863]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.1843],
         [ 0.1000,  0.1000, 23.7941],
         [ 0.1000,  0.1000, 24.3341],
         ...,
         [ 0.1000,  0.1000, 24.5962],
         [ 0.1000,  0.1000, 23.5206],
         [ 0.1000,  0.1000, 18.1517]],
        [[ 0.1000,  0.1000, 10.2397],
         [ 0.1000,  0.1000, 20.4012],
         [ 0.1000,  0.1000, 20.8306],
         ...,
         [ 0.1000,  0.1000, 21.0800],
         [ 0.1000,  0.1000, 20.1578],
         [ 0.1000,  0.1000, 10.2517]],
        [[ 0.1000,  0.1000,  9.5370],
         [ 0.1000,  0.1000, 20.0164],
         [ 0.1000,  0.1000, 20.4336],
         ...,
         [ 0.1000,  0.1000, 20.6813],
         [ 0.1000,  0.1000, 19.7765],
         [ 0.1000,  0.1000,  9.5518]],
        ...,
        [[ 0.1000,  0.1000,  8.7315],
         [ 0.1000,  0.1000, 19.5488],
         [ 0.1000,  0.1000, 19.9513],
         ...,
         [ 0.1000,  0.1000, 20.1969],
         [ 0.1000,  0.1000, 19.3132],
         [ 0.1000,  0.1000,  8.7490]],
        [[ 0.1000,  0.1000, 10.9343],
         [ 0.1000,  0.1000, 20.7631],
         [ 0.1000,  0.1000, 21.2040],
         ...,
         [ 0.1000,  0.1000, 21.4550],
         [ 0.1000,  0.1000, 20.5164],
         [ 0.1000,  0.1000, 10.9435]],
        [[ 0.1000,  0.1000, 12.6383],
         [ 0.1000,  0.1000, 21.5845],
         [ 0.1000,  0.1000, 22.0518],
         ...,
         [ 0.1000,  0.1000, 22.3061],
         [ 0.1000,  0.1000, 21.3304],
         [ 0.1000,  0.1000, 12.6395]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0666],
         [0.1000, 0.1000, 1.0754],
         ...,
         [0.1000, 0.1000, 1.0796],
         [0.1000, 0.1000, 1.0621],
         [0.1000, 0.1000, 0.9748]],
        [[0.1000, 0.1000, 0.8461],
         [0.1000, 0.1000, 1.0114],
         [0.1000, 0.1000, 1.0184],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0074],
         [0.1000, 0.1000, 0.8463]],
        [[0.1000, 0.1000, 0.8347],
         [0.1000, 0.1000, 1.0051],
         [0.1000, 0.1000, 1.0119],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 1.0012],
         [0.1000, 0.1000, 0.8349]],
        ...,
        [[0.1000, 0.1000, 0.8216],
         [0.1000, 0.1000, 0.9975],
         [0.1000, 0.1000, 1.0041],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9937],
         [0.1000, 0.1000, 0.8219]],
        [[0.1000, 0.1000, 0.8574],
         [0.1000, 0.1000, 1.0173],
         [0.1000, 0.1000, 1.0245],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0133],
         [0.1000, 0.1000, 0.8576]],
        [[0.1000, 0.1000, 0.8851],
         [0.1000, 0.1000, 1.0306],
         [0.1000, 0.1000, 1.0382],
         ...,
         [0.1000, 0.1000, 1.0424],
         [0.1000, 0.1000, 1.0265],
         [0.1000, 0.1000, 0.8851]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2382],
         [ 0.1000,  0.1000, 23.6900],
         [ 0.1000,  0.1000, 24.2839],
         ...,
         [ 0.1000,  0.1000, 24.6291],
         [ 0.1000,  0.1000, 23.4041],
         [ 0.1000,  0.1000, 18.1973]],
        [[ 0.1000,  0.1000, 10.2200],
         [ 0.1000,  0.1000, 20.3171],
         [ 0.1000,  0.1000, 20.7903],
         ...,
         [ 0.1000,  0.1000, 21.1168],
         [ 0.1000,  0.1000, 20.0416],
         [ 0.1000,  0.1000, 10.2349]],
        [[ 0.1000,  0.1000,  9.5129],
         [ 0.1000,  0.1000, 19.9345],
         [ 0.1000,  0.1000, 20.3944],
         ...,
         [ 0.1000,  0.1000, 20.7184],
         [ 0.1000,  0.1000, 19.6604],
         [ 0.1000,  0.1000,  9.5311]],
        ...,
        [[ 0.1000,  0.1000,  8.7030],
         [ 0.1000,  0.1000, 19.4695],
         [ 0.1000,  0.1000, 19.9134],
         ...,
         [ 0.1000,  0.1000, 20.2344],
         [ 0.1000,  0.1000, 19.1974],
         [ 0.1000,  0.1000,  8.7246]],
        [[ 0.1000,  0.1000, 10.9194],
         [ 0.1000,  0.1000, 20.6769],
         [ 0.1000,  0.1000, 21.1627],
         ...,
         [ 0.1000,  0.1000, 21.4914],
         [ 0.1000,  0.1000, 20.4000],
         [ 0.1000,  0.1000, 10.9307]],
        [[ 0.1000,  0.1000, 12.6367],
         [ 0.1000,  0.1000, 21.4935],
         [ 0.1000,  0.1000, 22.0081],
         ...,
         [ 0.1000,  0.1000, 22.3417],
         [ 0.1000,  0.1000, 21.2137],
         [ 0.1000,  0.1000, 12.6379]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9756],
         [0.1000, 0.1000, 1.0643],
         [0.1000, 0.1000, 1.0739],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0596],
         [0.1000, 0.1000, 0.9749]],
        [[0.1000, 0.1000, 0.8452],
         [0.1000, 0.1000, 1.0094],
         [0.1000, 0.1000, 1.0171],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0049],
         [0.1000, 0.1000, 0.8454]],
        [[0.1000, 0.1000, 0.8337],
         [0.1000, 0.1000, 1.0032],
         [0.1000, 0.1000, 1.0107],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9987],
         [0.1000, 0.1000, 0.8340]],
        ...,
        [[0.1000, 0.1000, 0.8205],
         [0.1000, 0.1000, 0.9956],
         [0.1000, 0.1000, 1.0028],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9912],
         [0.1000, 0.1000, 0.8209]],
        [[0.1000, 0.1000, 0.8566],
         [0.1000, 0.1000, 1.0153],
         [0.1000, 0.1000, 1.0232],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8567]],
        [[0.1000, 0.1000, 0.8845],
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0369],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0240],
         [0.1000, 0.1000, 0.8845]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2475],
         [ 0.1000,  0.1000, 23.6723],
         [ 0.1000,  0.1000, 24.2753],
         ...,
         [ 0.1000,  0.1000, 24.6347],
         [ 0.1000,  0.1000, 23.3842],
         [ 0.1000,  0.1000, 18.2051]],
        [[ 0.1000,  0.1000, 10.2167],
         [ 0.1000,  0.1000, 20.3028],
         [ 0.1000,  0.1000, 20.7834],
         ...,
         [ 0.1000,  0.1000, 21.1231],
         [ 0.1000,  0.1000, 20.0218],
         [ 0.1000,  0.1000, 10.2320]],
        [[ 0.1000,  0.1000,  9.5089],
         [ 0.1000,  0.1000, 19.9205],
         [ 0.1000,  0.1000, 20.3877],
         ...,
         [ 0.1000,  0.1000, 20.7248],
         [ 0.1000,  0.1000, 19.6408],
         [ 0.1000,  0.1000,  9.5276]],
        ...,
        [[ 0.1000,  0.1000,  8.6981],
         [ 0.1000,  0.1000, 19.4561],
         [ 0.1000,  0.1000, 19.9070],
         ...,
         [ 0.1000,  0.1000, 20.2408],
         [ 0.1000,  0.1000, 19.1778],
         [ 0.1000,  0.1000,  8.7204]],
        [[ 0.1000,  0.1000, 10.9169],
         [ 0.1000,  0.1000, 20.6622],
         [ 0.1000,  0.1000, 21.1556],
         ...,
         [ 0.1000,  0.1000, 21.4976],
         [ 0.1000,  0.1000, 20.3802],
         [ 0.1000,  0.1000, 10.9285]],
        [[ 0.1000,  0.1000, 12.6364],
         [ 0.1000,  0.1000, 21.4780],
         [ 0.1000,  0.1000, 22.0006],
         ...,
         [ 0.1000,  0.1000, 22.3478],
         [ 0.1000,  0.1000, 21.1939],
         [ 0.1000,  0.1000, 12.6377]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9756],
         [0.1000, 0.1000, 1.0639],
         [0.1000, 0.1000, 1.0737],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0592],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0091],
         [0.1000, 0.1000, 1.0169],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0045],
         [0.1000, 0.1000, 0.8453]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0029],
         [0.1000, 0.1000, 1.0105],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9983],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9953],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9908],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0149],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0103],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0282],
         [0.1000, 0.1000, 1.0367],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0236],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2492],
         [ 0.1000,  0.1000, 23.6690],
         [ 0.1000,  0.1000, 24.2737],
         ...,
         [ 0.1000,  0.1000, 24.6358],
         [ 0.1000,  0.1000, 23.3805],
         [ 0.1000,  0.1000, 18.2066]],
        [[ 0.1000,  0.1000, 10.2161],
         [ 0.1000,  0.1000, 20.3002],
         [ 0.1000,  0.1000, 20.7822],
         ...,
         [ 0.1000,  0.1000, 21.1242],
         [ 0.1000,  0.1000, 20.0182],
         [ 0.1000,  0.1000, 10.2315]],
        [[ 0.1000,  0.1000,  9.5081],
         [ 0.1000,  0.1000, 19.9180],
         [ 0.1000,  0.1000, 20.3865],
         ...,
         [ 0.1000,  0.1000, 20.7259],
         [ 0.1000,  0.1000, 19.6371],
         [ 0.1000,  0.1000,  9.5270]],
        ...,
        [[ 0.1000,  0.1000,  8.6972],
         [ 0.1000,  0.1000, 19.4536],
         [ 0.1000,  0.1000, 19.9058],
         ...,
         [ 0.1000,  0.1000, 20.2420],
         [ 0.1000,  0.1000, 19.1742],
         [ 0.1000,  0.1000,  8.7197]],
        [[ 0.1000,  0.1000, 10.9164],
         [ 0.1000,  0.1000, 20.6595],
         [ 0.1000,  0.1000, 21.1543],
         ...,
         [ 0.1000,  0.1000, 21.4988],
         [ 0.1000,  0.1000, 20.3766],
         [ 0.1000,  0.1000, 10.9281]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4752],
         [ 0.1000,  0.1000, 21.9993],
         ...,
         [ 0.1000,  0.1000, 22.3489],
         [ 0.1000,  0.1000, 21.1903],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0169],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0149],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0103],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2495],
         [ 0.1000,  0.1000, 23.6684],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3799],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2160],
         [ 0.1000,  0.1000, 20.2997],
         [ 0.1000,  0.1000, 20.7820],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0175],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5080],
         [ 0.1000,  0.1000, 19.9175],
         [ 0.1000,  0.1000, 20.3863],
         ...,
         [ 0.1000,  0.1000, 20.7261],
         [ 0.1000,  0.1000, 19.6365],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6971],
         [ 0.1000,  0.1000, 19.4531],
         [ 0.1000,  0.1000, 19.9056],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1736],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6590],
         [ 0.1000,  0.1000, 21.1541],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3759],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4746],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3491],
         [ 0.1000,  0.1000, 21.1896],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5080],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6364],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1541],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1895],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1895],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:545: RuntimeWarning: Optimization failed on the second try, after generating a new set of initial conditions.
  warnings.warn(
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
  warnings.warn(first_warn_msg, RuntimeWarning)
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.9490],
         [ 0.1000,  0.1000, 24.8593],
         [ 0.1000,  0.1000, 24.4169],
         ...,
         [ 0.1000,  0.1000, 23.8260],
         [ 0.1000,  0.1000, 25.4246],
         [ 0.1000,  0.1000, 17.9621]],
        [[ 0.1000,  0.1000, 10.3303],
         [ 0.1000,  0.1000, 21.4206],
         [ 0.1000,  0.1000, 20.9106],
         ...,
         [ 0.1000,  0.1000, 20.3400],
         [ 0.1000,  0.1000, 22.0340],
         [ 0.1000,  0.1000, 10.3251]],
        [[ 0.1000,  0.1000,  9.6475],
         [ 0.1000,  0.1000, 21.0294],
         [ 0.1000,  0.1000, 20.5131],
         ...,
         [ 0.1000,  0.1000, 19.9455],
         [ 0.1000,  0.1000, 21.6471],
         [ 0.1000,  0.1000,  9.6411]],
        ...,
        [[ 0.1000,  0.1000,  8.8624],
         [ 0.1000,  0.1000, 20.5538],
         [ 0.1000,  0.1000, 20.0303],
         ...,
         [ 0.1000,  0.1000, 19.4666],
         [ 0.1000,  0.1000, 21.1762],
         [ 0.1000,  0.1000,  8.8549]],
        [[ 0.1000,  0.1000, 11.0036],
         [ 0.1000,  0.1000, 21.7882],
         [ 0.1000,  0.1000, 21.2843],
         ...,
         [ 0.1000,  0.1000, 20.7110],
         [ 0.1000,  0.1000, 22.3974],
         [ 0.1000,  0.1000, 10.9996]],
        [[ 0.1000,  0.1000, 12.6486],
         [ 0.1000,  0.1000, 22.6218],
         [ 0.1000,  0.1000, 22.1329],
         ...,
         [ 0.1000,  0.1000, 21.5540],
         [ 0.1000,  0.1000, 23.2206],
         [ 0.1000,  0.1000, 12.6479]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9723],
         [0.1000, 0.1000, 1.0847],
         [0.1000, 0.1000, 1.0775],
         ...,
         [0.1000, 0.1000, 1.0679],
         [0.1000, 0.1000, 1.0939],
         [0.1000, 0.1000, 0.9725]],
        [[0.1000, 0.1000, 0.8484],
         [0.1000, 0.1000, 1.0287],
         [0.1000, 0.1000, 1.0205],
         ...,
         [0.1000, 0.1000, 1.0112],
         [0.1000, 0.1000, 1.0387],
         [0.1000, 0.1000, 0.8483]],
        [[0.1000, 0.1000, 0.8373],
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0140],
         ...,
         [0.1000, 0.1000, 1.0048],
         [0.1000, 0.1000, 1.0324],
         [0.1000, 0.1000, 0.8372]],
        ...,
        [[0.1000, 0.1000, 0.8245],
         [0.1000, 0.1000, 1.0147],
         [0.1000, 0.1000, 1.0061],
         ...,
         [0.1000, 0.1000, 0.9970],
         [0.1000, 0.1000, 1.0248],
         [0.1000, 0.1000, 0.8244]],
        [[0.1000, 0.1000, 0.8593],
         [0.1000, 0.1000, 1.0347],
         [0.1000, 0.1000, 1.0265],
         ...,
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 1.0446],
         [0.1000, 0.1000, 0.8593]],
        [[0.1000, 0.1000, 0.8861],
         [0.1000, 0.1000, 1.0483],
         [0.1000, 0.1000, 1.0403],
         ...,
         [0.1000, 0.1000, 1.0309],
         [0.1000, 0.1000, 1.0580],
         [0.1000, 0.1000, 0.8861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.1764],
         [ 0.1000,  0.1000, 23.9460],
         [ 0.1000,  0.1000, 24.3074],
         ...,
         [ 0.1000,  0.1000, 24.4433],
         [ 0.1000,  0.1000, 23.8563],
         [ 0.1000,  0.1000, 18.1475]],
        [[ 0.1000,  0.1000, 10.2426],
         [ 0.1000,  0.1000, 20.5591],
         [ 0.1000,  0.1000, 20.8124],
         ...,
         [ 0.1000,  0.1000, 20.9339],
         [ 0.1000,  0.1000, 20.4735],
         [ 0.1000,  0.1000, 10.2533]],
        [[ 0.1000,  0.1000,  9.5406],
         [ 0.1000,  0.1000, 20.1746],
         [ 0.1000,  0.1000, 20.4163],
         ...,
         [ 0.1000,  0.1000, 20.5361],
         [ 0.1000,  0.1000, 20.0896],
         [ 0.1000,  0.1000,  9.5537]],
        ...,
        [[ 0.1000,  0.1000,  8.7358],
         [ 0.1000,  0.1000, 19.7074],
         [ 0.1000,  0.1000, 19.9351],
         ...,
         [ 0.1000,  0.1000, 20.0529],
         [ 0.1000,  0.1000, 19.6231],
         [ 0.1000,  0.1000,  8.7513]],
        [[ 0.1000,  0.1000, 10.9365],
         [ 0.1000,  0.1000, 20.9205],
         [ 0.1000,  0.1000, 21.1849],
         ...,
         [ 0.1000,  0.1000, 21.3080],
         [ 0.1000,  0.1000, 20.8344],
         [ 0.1000,  0.1000, 10.9446]],
        [[ 0.1000,  0.1000, 12.6386],
         [ 0.1000,  0.1000, 21.7408],
         [ 0.1000,  0.1000, 22.0307],
         ...,
         [ 0.1000,  0.1000, 22.1574],
         [ 0.1000,  0.1000, 21.6536],
         [ 0.1000,  0.1000, 12.6396]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0691],
         [0.1000, 0.1000, 1.0750],
         ...,
         [0.1000, 0.1000, 1.0772],
         [0.1000, 0.1000, 1.0677],
         [0.1000, 0.1000, 0.9748]],
        [[0.1000, 0.1000, 0.8463],
         [0.1000, 0.1000, 1.0141],
         [0.1000, 0.1000, 1.0182],
         ...,
         [0.1000, 0.1000, 1.0201],
         [0.1000, 0.1000, 1.0127],
         [0.1000, 0.1000, 0.8464]],
        [[0.1000, 0.1000, 0.8348],
         [0.1000, 0.1000, 1.0078],
         [0.1000, 0.1000, 1.0117],
         ...,
         [0.1000, 0.1000, 1.0137],
         [0.1000, 0.1000, 1.0064],
         [0.1000, 0.1000, 0.8351]],
        ...,
        [[0.1000, 0.1000, 0.8217],
         [0.1000, 0.1000, 1.0002],
         [0.1000, 0.1000, 1.0039],
         ...,
         [0.1000, 0.1000, 1.0058],
         [0.1000, 0.1000, 0.9988],
         [0.1000, 0.1000, 0.8220]],
        [[0.1000, 0.1000, 0.8575],
         [0.1000, 0.1000, 1.0199],
         [0.1000, 0.1000, 1.0242],
         ...,
         [0.1000, 0.1000, 1.0262],
         [0.1000, 0.1000, 1.0185],
         [0.1000, 0.1000, 0.8577]],
        [[0.1000, 0.1000, 0.8852],
         [0.1000, 0.1000, 1.0333],
         [0.1000, 0.1000, 1.0380],
         ...,
         [0.1000, 0.1000, 1.0400],
         [0.1000, 0.1000, 1.0319],
         [0.1000, 0.1000, 0.8852]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2362],
         [ 0.1000,  0.1000, 23.7185],
         [ 0.1000,  0.1000, 24.2796],
         ...,
         [ 0.1000,  0.1000, 24.6010],
         [ 0.1000,  0.1000, 23.4659],
         [ 0.1000,  0.1000, 18.1961]],
        [[ 0.1000,  0.1000, 10.2208],
         [ 0.1000,  0.1000, 20.3464],
         [ 0.1000,  0.1000, 20.7874],
         ...,
         [ 0.1000,  0.1000, 21.0897],
         [ 0.1000,  0.1000, 20.0992],
         [ 0.1000,  0.1000, 10.2353]],
        [[ 0.1000,  0.1000,  9.5138],
         [ 0.1000,  0.1000, 19.9638],
         [ 0.1000,  0.1000, 20.3917],
         ...,
         [ 0.1000,  0.1000, 20.6915],
         [ 0.1000,  0.1000, 19.7175],
         [ 0.1000,  0.1000,  9.5317]],
        ...,
        [[ 0.1000,  0.1000,  8.7040],
         [ 0.1000,  0.1000, 19.4989],
         [ 0.1000,  0.1000, 19.9109],
         ...,
         [ 0.1000,  0.1000, 20.2076],
         [ 0.1000,  0.1000, 19.2539],
         [ 0.1000,  0.1000,  8.7253]],
        [[ 0.1000,  0.1000, 10.9199],
         [ 0.1000,  0.1000, 20.7061],
         [ 0.1000,  0.1000, 21.1597],
         ...,
         [ 0.1000,  0.1000, 21.4642],
         [ 0.1000,  0.1000, 20.4581],
         [ 0.1000,  0.1000, 10.9310]],
        [[ 0.1000,  0.1000, 12.6367],
         [ 0.1000,  0.1000, 21.5226],
         [ 0.1000,  0.1000, 22.0047],
         ...,
         [ 0.1000,  0.1000, 22.3142],
         [ 0.1000,  0.1000, 21.2729],
         [ 0.1000,  0.1000, 12.6379]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9756],
         [0.1000, 0.1000, 1.0648],
         [0.1000, 0.1000, 1.0739],
         ...,
         [0.1000, 0.1000, 1.0791],
         [0.1000, 0.1000, 1.0606],
         [0.1000, 0.1000, 0.9749]],
        [[0.1000, 0.1000, 0.8452],
         [0.1000, 0.1000, 1.0099],
         [0.1000, 0.1000, 1.0171],
         ...,
         [0.1000, 0.1000, 1.0220],
         [0.1000, 0.1000, 1.0059],
         [0.1000, 0.1000, 0.8455]],
        [[0.1000, 0.1000, 0.8337],
         [0.1000, 0.1000, 1.0037],
         [0.1000, 0.1000, 1.0106],
         ...,
         [0.1000, 0.1000, 1.0155],
         [0.1000, 0.1000, 0.9997],
         [0.1000, 0.1000, 0.8340]],
        ...,
        [[0.1000, 0.1000, 0.8206],
         [0.1000, 0.1000, 0.9961],
         [0.1000, 0.1000, 1.0028],
         ...,
         [0.1000, 0.1000, 1.0077],
         [0.1000, 0.1000, 0.9921],
         [0.1000, 0.1000, 0.8209]],
        [[0.1000, 0.1000, 0.8566],
         [0.1000, 0.1000, 1.0158],
         [0.1000, 0.1000, 1.0231],
         ...,
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0117],
         [0.1000, 0.1000, 0.8568]],
        [[0.1000, 0.1000, 0.8845],
         [0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 1.0369],
         ...,
         [0.1000, 0.1000, 1.0419],
         [0.1000, 0.1000, 1.0250],
         [0.1000, 0.1000, 0.8845]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2469],
         [ 0.1000,  0.1000, 23.6785],
         [ 0.1000,  0.1000, 24.2746],
         ...,
         [ 0.1000,  0.1000, 24.6289],
         [ 0.1000,  0.1000, 23.3972],
         [ 0.1000,  0.1000, 18.2047]],
        [[ 0.1000,  0.1000, 10.2169],
         [ 0.1000,  0.1000, 20.3091],
         [ 0.1000,  0.1000, 20.7830],
         ...,
         [ 0.1000,  0.1000, 21.1174],
         [ 0.1000,  0.1000, 20.0340],
         [ 0.1000,  0.1000, 10.2322]],
        [[ 0.1000,  0.1000,  9.5091],
         [ 0.1000,  0.1000, 19.9268],
         [ 0.1000,  0.1000, 20.3873],
         ...,
         [ 0.1000,  0.1000, 20.7191],
         [ 0.1000,  0.1000, 19.6528],
         [ 0.1000,  0.1000,  9.5278]],
        ...,
        [[ 0.1000,  0.1000,  8.6985],
         [ 0.1000,  0.1000, 19.4623],
         [ 0.1000,  0.1000, 19.9066],
         ...,
         [ 0.1000,  0.1000, 20.2352],
         [ 0.1000,  0.1000, 19.1897],
         [ 0.1000,  0.1000,  8.7207]],
        [[ 0.1000,  0.1000, 10.9170],
         [ 0.1000,  0.1000, 20.6685],
         [ 0.1000,  0.1000, 21.1552],
         ...,
         [ 0.1000,  0.1000, 21.4920],
         [ 0.1000,  0.1000, 20.3924],
         [ 0.1000,  0.1000, 10.9286]],
        [[ 0.1000,  0.1000, 12.6364],
         [ 0.1000,  0.1000, 21.4843],
         [ 0.1000,  0.1000, 22.0001],
         ...,
         [ 0.1000,  0.1000, 22.3421],
         [ 0.1000,  0.1000, 21.2064],
         [ 0.1000,  0.1000, 12.6377]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9756],
         [0.1000, 0.1000, 1.0640],
         [0.1000, 0.1000, 1.0737],
         ...,
         [0.1000, 0.1000, 1.0794],
         [0.1000, 0.1000, 1.0594],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0092],
         [0.1000, 0.1000, 1.0169],
         ...,
         [0.1000, 0.1000, 1.0223],
         [0.1000, 0.1000, 1.0047],
         [0.1000, 0.1000, 0.8453]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 1.0105],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9985],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9954],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0080],
         [0.1000, 0.1000, 0.9910],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0150],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0284],
         [0.1000, 0.1000, 1.0105],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0283],
         [0.1000, 0.1000, 1.0367],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0238],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2490],
         [ 0.1000,  0.1000, 23.6704],
         [ 0.1000,  0.1000, 24.2736],
         ...,
         [ 0.1000,  0.1000, 24.6345],
         [ 0.1000,  0.1000, 23.3833],
         [ 0.1000,  0.1000, 18.2065]],
        [[ 0.1000,  0.1000, 10.2161],
         [ 0.1000,  0.1000, 20.3015],
         [ 0.1000,  0.1000, 20.7821],
         ...,
         [ 0.1000,  0.1000, 21.1230],
         [ 0.1000,  0.1000, 20.0208],
         [ 0.1000,  0.1000, 10.2315]],
        [[ 0.1000,  0.1000,  9.5082],
         [ 0.1000,  0.1000, 19.9193],
         [ 0.1000,  0.1000, 20.3864],
         ...,
         [ 0.1000,  0.1000, 20.7247],
         [ 0.1000,  0.1000, 19.6397],
         [ 0.1000,  0.1000,  9.5271]],
        ...,
        [[ 0.1000,  0.1000,  8.6973],
         [ 0.1000,  0.1000, 19.4549],
         [ 0.1000,  0.1000, 19.9058],
         ...,
         [ 0.1000,  0.1000, 20.2408],
         [ 0.1000,  0.1000, 19.1768],
         [ 0.1000,  0.1000,  8.7197]],
        [[ 0.1000,  0.1000, 10.9165],
         [ 0.1000,  0.1000, 20.6609],
         [ 0.1000,  0.1000, 21.1543],
         ...,
         [ 0.1000,  0.1000, 21.4976],
         [ 0.1000,  0.1000, 20.3792],
         [ 0.1000,  0.1000, 10.9281]],
        [[ 0.1000,  0.1000, 12.6364],
         [ 0.1000,  0.1000, 21.4765],
         [ 0.1000,  0.1000, 21.9992],
         ...,
         [ 0.1000,  0.1000, 22.3477],
         [ 0.1000,  0.1000, 21.1930],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0592],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0169],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0045],
         [0.1000, 0.1000, 0.8453]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9983],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9953],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0080],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0149],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0103],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2495],
         [ 0.1000,  0.1000, 23.6687],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6357],
         [ 0.1000,  0.1000, 23.3805],
         [ 0.1000,  0.1000, 18.2068]],
        [[ 0.1000,  0.1000, 10.2160],
         [ 0.1000,  0.1000, 20.3000],
         [ 0.1000,  0.1000, 20.7820],
         ...,
         [ 0.1000,  0.1000, 21.1242],
         [ 0.1000,  0.1000, 20.0181],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5080],
         [ 0.1000,  0.1000, 19.9178],
         [ 0.1000,  0.1000, 20.3863],
         ...,
         [ 0.1000,  0.1000, 20.7259],
         [ 0.1000,  0.1000, 19.6370],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6971],
         [ 0.1000,  0.1000, 19.4534],
         [ 0.1000,  0.1000, 19.9056],
         ...,
         [ 0.1000,  0.1000, 20.2419],
         [ 0.1000,  0.1000, 19.1741],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6593],
         [ 0.1000,  0.1000, 21.1541],
         ...,
         [ 0.1000,  0.1000, 21.4987],
         [ 0.1000,  0.1000, 20.3765],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4749],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3489],
         [ 0.1000,  0.1000, 21.1902],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0149],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0103],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2495],
         [ 0.1000,  0.1000, 23.6684],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6359],
         [ 0.1000,  0.1000, 23.3799],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1244],
         [ 0.1000,  0.1000, 20.0175],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5080],
         [ 0.1000,  0.1000, 19.9175],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7261],
         [ 0.1000,  0.1000, 19.6365],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4531],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1736],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6590],
         [ 0.1000,  0.1000, 21.1541],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3759],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4746],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3491],
         [ 0.1000,  0.1000, 21.1896],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6364],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3491],
         [ 0.1000,  0.1000, 21.1895],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1895],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.2496],
         [ 0.1000,  0.1000, 23.6683],
         [ 0.1000,  0.1000, 24.2734],
         ...,
         [ 0.1000,  0.1000, 24.6360],
         [ 0.1000,  0.1000, 23.3797],
         [ 0.1000,  0.1000, 18.2069]],
        [[ 0.1000,  0.1000, 10.2159],
         [ 0.1000,  0.1000, 20.2996],
         [ 0.1000,  0.1000, 20.7819],
         ...,
         [ 0.1000,  0.1000, 21.1245],
         [ 0.1000,  0.1000, 20.0174],
         [ 0.1000,  0.1000, 10.2314]],
        [[ 0.1000,  0.1000,  9.5079],
         [ 0.1000,  0.1000, 19.9174],
         [ 0.1000,  0.1000, 20.3862],
         ...,
         [ 0.1000,  0.1000, 20.7262],
         [ 0.1000,  0.1000, 19.6363],
         [ 0.1000,  0.1000,  9.5269]],
        ...,
        [[ 0.1000,  0.1000,  8.6970],
         [ 0.1000,  0.1000, 19.4530],
         [ 0.1000,  0.1000, 19.9055],
         ...,
         [ 0.1000,  0.1000, 20.2422],
         [ 0.1000,  0.1000, 19.1734],
         [ 0.1000,  0.1000,  8.7195]],
        [[ 0.1000,  0.1000, 10.9163],
         [ 0.1000,  0.1000, 20.6589],
         [ 0.1000,  0.1000, 21.1540],
         ...,
         [ 0.1000,  0.1000, 21.4990],
         [ 0.1000,  0.1000, 20.3758],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 12.6363],
         [ 0.1000,  0.1000, 21.4745],
         [ 0.1000,  0.1000, 21.9990],
         ...,
         [ 0.1000,  0.1000, 22.3492],
         [ 0.1000,  0.1000, 21.1894],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9757],
         [0.1000, 0.1000, 1.0638],
         [0.1000, 0.1000, 1.0736],
         ...,
         [0.1000, 0.1000, 1.0795],
         [0.1000, 0.1000, 1.0591],
         [0.1000, 0.1000, 0.9750]],
        [[0.1000, 0.1000, 0.8450],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 1.0168],
         ...,
         [0.1000, 0.1000, 1.0224],
         [0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8452]],
        [[0.1000, 0.1000, 0.8335],
         [0.1000, 0.1000, 1.0028],
         [0.1000, 0.1000, 1.0104],
         ...,
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.9982],
         [0.1000, 0.1000, 0.8338]],
        ...,
        [[0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 0.9952],
         [0.1000, 0.1000, 1.0026],
         ...,
         [0.1000, 0.1000, 1.0081],
         [0.1000, 0.1000, 0.9907],
         [0.1000, 0.1000, 0.8207]],
        [[0.1000, 0.1000, 0.8564],
         [0.1000, 0.1000, 1.0148],
         [0.1000, 0.1000, 1.0229],
         ...,
         [0.1000, 0.1000, 1.0285],
         [0.1000, 0.1000, 1.0102],
         [0.1000, 0.1000, 0.8566]],
        [[0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0281],
         [0.1000, 0.1000, 1.0366],
         ...,
         [0.1000, 0.1000, 1.0423],
         [0.1000, 0.1000, 1.0235],
         [0.1000, 0.1000, 0.8844]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 14.8678],
         [ 0.1000,  0.1000, 16.6009],
         [ 0.1000,  0.1000, 26.3396],
         ...,
         [ 0.1000,  0.1000, 16.6778],
         [ 0.1000,  0.1000, 33.1673],
         [ 0.1000,  0.1000, 21.0511]],
        [[ 0.1000,  0.1000, 11.3084],
         [ 0.1000,  0.1000, 10.9740],
         [ 0.1000,  0.1000, 19.0390],
         ...,
         [ 0.1000,  0.1000, 10.7133],
         [ 0.1000,  0.1000, 27.6294],
         [ 0.1000,  0.1000,  9.3619]],
        [[ 0.1000,  0.1000, 10.9318],
         [ 0.1000,  0.1000, 10.4259],
         [ 0.1000,  0.1000, 18.2892],
         ...,
         [ 0.1000,  0.1000, 10.1421],
         [ 0.1000,  0.1000, 27.0116],
         [ 0.1000,  0.1000,  8.4685]],
        ...,
        [[ 0.1000,  0.1000, 10.4817],
         [ 0.1000,  0.1000,  9.7835],
         [ 0.1000,  0.1000, 17.3994],
         ...,
         [ 0.1000,  0.1000,  9.4754],
         [ 0.1000,  0.1000, 26.2640],
         [ 0.1000,  0.1000,  7.4771]],
        [[ 0.1000,  0.1000, 11.6677],
         [ 0.1000,  0.1000, 11.5056],
         [ 0.1000,  0.1000, 19.7585],
         ...,
         [ 0.1000,  0.1000, 11.2692],
         [ 0.1000,  0.1000, 28.2123],
         [ 0.1000,  0.1000, 10.2703]],
        [[ 0.1000,  0.1000, 12.5013],
         [ 0.1000,  0.1000, 12.7716],
         [ 0.1000,  0.1000, 21.4439],
         ...,
         [ 0.1000,  0.1000, 12.5999],
         [ 0.1000,  0.1000, 29.5425],
         [ 0.1000,  0.1000, 12.5989]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.8958],
         [0.1000, 0.1000, 0.9240],
         [0.1000, 0.1000, 1.0824],
         ...,
         [0.1000, 0.1000, 0.9252],
         [0.1000, 0.1000, 1.1934],
         [0.1000, 0.1000, 0.9964]],
        [[0.1000, 0.1000, 0.8379],
         [0.1000, 0.1000, 0.8325],
         [0.1000, 0.1000, 0.9636],
         ...,
         [0.1000, 0.1000, 0.8282],
         [0.1000, 0.1000, 1.1034],
         [0.1000, 0.1000, 0.8062]],
        [[0.1000, 0.1000, 0.8318],
         [0.1000, 0.1000, 0.8236],
         [0.1000, 0.1000, 0.9514],
         ...,
         [0.1000, 0.1000, 0.8189],
         [0.1000, 0.1000, 1.0933],
         [0.1000, 0.1000, 0.7917]],
        ...,
        [[0.1000, 0.1000, 0.8245],
         [0.1000, 0.1000, 0.8131],
         [0.1000, 0.1000, 0.9370],
         ...,
         [0.1000, 0.1000, 0.8081],
         [0.1000, 0.1000, 1.0812],
         [0.1000, 0.1000, 0.7756]],
        [[0.1000, 0.1000, 0.8437],
         [0.1000, 0.1000, 0.8411],
         [0.1000, 0.1000, 0.9753],
         ...,
         [0.1000, 0.1000, 0.8373],
         [0.1000, 0.1000, 1.1128],
         [0.1000, 0.1000, 0.8210]],
        [[0.1000, 0.1000, 0.8573],
         [0.1000, 0.1000, 0.8617],
         [0.1000, 0.1000, 1.0028],
         ...,
         [0.1000, 0.1000, 0.8589],
         [0.1000, 0.1000, 1.1345],
         [0.1000, 0.1000, 0.8589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.1143],
         [ 0.1000,  0.1000, 19.1314],
         [ 0.1000,  0.1000, 20.8912],
         ...,
         [ 0.1000,  0.1000, 19.5835],
         [ 0.1000,  0.1000, 21.8504],
         [ 0.1000,  0.1000, 18.5212]],
        [[ 0.1000,  0.1000, 10.5890],
         [ 0.1000,  0.1000,  9.9432],
         [ 0.1000,  0.1000, 17.2333],
         ...,
         [ 0.1000,  0.1000,  9.8305],
         [ 0.1000,  0.1000, 19.0208],
         [ 0.1000,  0.1000, 10.1230]],
        [[ 0.1000,  0.1000, 10.0527],
         [ 0.1000,  0.1000,  9.1694],
         [ 0.1000,  0.1000, 16.8276],
         ...,
         [ 0.1000,  0.1000,  9.0266],
         [ 0.1000,  0.1000, 18.6970],
         [ 0.1000,  0.1000,  9.3936]],
        ...,
        [[ 0.1000,  0.1000,  9.4246],
         [ 0.1000,  0.1000,  8.2923],
         [ 0.1000,  0.1000, 16.3372],
         ...,
         [ 0.1000,  0.1000,  8.1196],
         [ 0.1000,  0.1000, 18.3028],
         [ 0.1000,  0.1000,  8.5610]],
        [[ 0.1000,  0.1000, 11.1095],
         [ 0.1000,  0.1000, 10.7154],
         [ 0.1000,  0.1000, 17.6166],
         ...,
         [ 0.1000,  0.1000, 10.6362],
         [ 0.1000,  0.1000, 19.3247],
         [ 0.1000,  0.1000, 10.8466]],
        [[ 0.1000,  0.1000, 12.3505],
         [ 0.1000,  0.1000, 12.6382],
         [ 0.1000,  0.1000, 18.4929],
         ...,
         [ 0.1000,  0.1000, 12.6552],
         [ 0.1000,  0.1000, 20.0125],
         [ 0.1000,  0.1000, 12.6316]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9286],
         [0.1000, 0.1000, 0.9776],
         [0.1000, 0.1000, 1.0063],
         ...,
         [0.1000, 0.1000, 0.9850],
         [0.1000, 0.1000, 1.0219],
         [0.1000, 0.1000, 0.9677]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8282],
         [0.1000, 0.1000, 0.9468],
         ...,
         [0.1000, 0.1000, 0.8264],
         [0.1000, 0.1000, 0.9758],
         [0.1000, 0.1000, 0.8311]],
        [[0.1000, 0.1000, 0.8300],
         [0.1000, 0.1000, 0.8156],
         [0.1000, 0.1000, 0.9402],
         ...,
         [0.1000, 0.1000, 0.8133],
         [0.1000, 0.1000, 0.9706],
         [0.1000, 0.1000, 0.8193]],
        ...,
        [[0.1000, 0.1000, 0.8198],
         [0.1000, 0.1000, 0.8013],
         [0.1000, 0.1000, 0.9322],
         ...,
         [0.1000, 0.1000, 0.7985],
         [0.1000, 0.1000, 0.9642],
         [0.1000, 0.1000, 0.8057]],
        [[0.1000, 0.1000, 0.8472],
         [0.1000, 0.1000, 0.8408],
         [0.1000, 0.1000, 0.9530],
         ...,
         [0.1000, 0.1000, 0.8395],
         [0.1000, 0.1000, 0.9808],
         [0.1000, 0.1000, 0.8429]],
        [[0.1000, 0.1000, 0.8674],
         [0.1000, 0.1000, 0.8720],
         [0.1000, 0.1000, 0.9673],
         ...,
         [0.1000, 0.1000, 0.8723],
         [0.1000, 0.1000, 0.9920],
         [0.1000, 0.1000, 0.8719]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.0947],
         [ 0.1000,  0.1000, 18.6659],
         [ 0.1000,  0.1000, 20.7428],
         ...,
         [ 0.1000,  0.1000, 18.8327],
         [ 0.1000,  0.1000, 21.7412],
         [ 0.1000,  0.1000, 17.9513]],
        [[ 0.1000,  0.1000, 10.8085],
         [ 0.1000,  0.1000, 10.0770],
         [ 0.1000,  0.1000, 17.6032],
         ...,
         [ 0.1000,  0.1000, 10.0267],
         [ 0.1000,  0.1000, 18.7054],
         [ 0.1000,  0.1000, 10.3294]],
        [[ 0.1000,  0.1000, 10.2887],
         [ 0.1000,  0.1000,  9.3367],
         [ 0.1000,  0.1000, 17.2492],
         ...,
         [ 0.1000,  0.1000,  9.2741],
         [ 0.1000,  0.1000, 18.3604],
         [ 0.1000,  0.1000,  9.6464]],
        ...,
        [[ 0.1000,  0.1000,  9.6781],
         [ 0.1000,  0.1000,  8.4929],
         [ 0.1000,  0.1000, 16.8197],
         ...,
         [ 0.1000,  0.1000,  8.4180],
         [ 0.1000,  0.1000, 17.9410],
         [ 0.1000,  0.1000,  8.8611]],
        [[ 0.1000,  0.1000, 11.3117],
         [ 0.1000,  0.1000, 10.8126],
         [ 0.1000,  0.1000, 17.9365],
         ...,
         [ 0.1000,  0.1000, 10.7757],
         [ 0.1000,  0.1000, 19.0297],
         [ 0.1000,  0.1000, 11.0029]],
        [[ 0.1000,  0.1000, 12.5065],
         [ 0.1000,  0.1000, 12.6312],
         [ 0.1000,  0.1000, 18.6945],
         ...,
         [ 0.1000,  0.1000, 12.6323],
         [ 0.1000,  0.1000, 19.7654],
         [ 0.1000,  0.1000, 12.6485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9346],
         [0.1000, 0.1000, 0.9765],
         [0.1000, 0.1000, 1.0102],
         ...,
         [0.1000, 0.1000, 0.9792],
         [0.1000, 0.1000, 1.0265],
         [0.1000, 0.1000, 0.9648]],
        [[0.1000, 0.1000, 0.8487],
         [0.1000, 0.1000, 0.8368],
         [0.1000, 0.1000, 0.9592],
         ...,
         [0.1000, 0.1000, 0.8359],
         [0.1000, 0.1000, 0.9771],
         [0.1000, 0.1000, 0.8409]],
        [[0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8247],
         [0.1000, 0.1000, 0.9534],
         ...,
         [0.1000, 0.1000, 0.8237],
         [0.1000, 0.1000, 0.9715],
         [0.1000, 0.1000, 0.8298]],
        ...,
        [[0.1000, 0.1000, 0.8303],
         [0.1000, 0.1000, 0.8110],
         [0.1000, 0.1000, 0.9464],
         ...,
         [0.1000, 0.1000, 0.8098],
         [0.1000, 0.1000, 0.9647],
         [0.1000, 0.1000, 0.8170]],
        [[0.1000, 0.1000, 0.8568],
         [0.1000, 0.1000, 0.8487],
         [0.1000, 0.1000, 0.9646],
         ...,
         [0.1000, 0.1000, 0.8481],
         [0.1000, 0.1000, 0.9824],
         [0.1000, 0.1000, 0.8518]],
        [[0.1000, 0.1000, 0.8763],
         [0.1000, 0.1000, 0.8783],
         [0.1000, 0.1000, 0.9769],
         ...,
         [0.1000, 0.1000, 0.8783],
         [0.1000, 0.1000, 0.9943],
         [0.1000, 0.1000, 0.8786]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.4817],
         [ 0.1000,  0.1000, 17.1251],
         [ 0.1000,  0.1000, 26.5137],
         ...,
         [ 0.1000,  0.1000, 16.8699],
         [ 0.1000,  0.1000, 27.3524],
         [ 0.1000,  0.1000, 17.6249]],
        [[ 0.1000,  0.1000, 12.2358],
         [ 0.1000,  0.1000, 10.7322],
         [ 0.1000,  0.1000, 23.0464],
         ...,
         [ 0.1000,  0.1000, 10.8959],
         [ 0.1000,  0.1000, 23.9247],
         [ 0.1000,  0.1000, 10.4705]],
        [[ 0.1000,  0.1000, 11.7928],
         [ 0.1000,  0.1000, 10.1290],
         [ 0.1000,  0.1000, 22.6501],
         ...,
         [ 0.1000,  0.1000, 10.3220],
         [ 0.1000,  0.1000, 23.5314],
         [ 0.1000,  0.1000,  9.8168]],
        ...,
        [[ 0.1000,  0.1000, 11.2652],
         [ 0.1000,  0.1000,  9.4273],
         [ 0.1000,  0.1000, 22.1675],
         ...,
         [ 0.1000,  0.1000,  9.6515],
         [ 0.1000,  0.1000, 23.0523],
         [ 0.1000,  0.1000,  9.0619]],
        [[ 0.1000,  0.1000, 12.6595],
         [ 0.1000,  0.1000, 11.3210],
         [ 0.1000,  0.1000, 23.4186],
         ...,
         [ 0.1000,  0.1000, 11.4541],
         [ 0.1000,  0.1000, 24.2936],
         [ 0.1000,  0.1000, 11.1125]],
        [[ 0.1000,  0.1000, 13.6472],
         [ 0.1000,  0.1000, 12.7369],
         [ 0.1000,  0.1000, 24.2611],
         ...,
         [ 0.1000,  0.1000, 12.7891],
         [ 0.1000,  0.1000, 25.1279],
         [ 0.1000,  0.1000, 12.6721]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9547],
         [0.1000, 0.1000, 0.9652],
         [0.1000, 0.1000, 1.1179],
         ...,
         [0.1000, 0.1000, 0.9610],
         [0.1000, 0.1000, 1.1315],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 0.8857],
         [0.1000, 0.1000, 0.8612],
         [0.1000, 0.1000, 1.0615],
         ...,
         [0.1000, 0.1000, 0.8639],
         [0.1000, 0.1000, 1.0758],
         [0.1000, 0.1000, 0.8570]],
        [[0.1000, 0.1000, 0.8785],
         [0.1000, 0.1000, 0.8514],
         [0.1000, 0.1000, 1.0551],
         ...,
         [0.1000, 0.1000, 0.8545],
         [0.1000, 0.1000, 1.0694],
         [0.1000, 0.1000, 0.8463]],
        ...,
        [[0.1000, 0.1000, 0.8699],
         [0.1000, 0.1000, 0.8400],
         [0.1000, 0.1000, 1.0472],
         ...,
         [0.1000, 0.1000, 0.8436],
         [0.1000, 0.1000, 1.0616],
         [0.1000, 0.1000, 0.8341]],
        [[0.1000, 0.1000, 0.8926],
         [0.1000, 0.1000, 0.8708],
         [0.1000, 0.1000, 1.0676],
         ...,
         [0.1000, 0.1000, 0.8730],
         [0.1000, 0.1000, 1.0818],
         [0.1000, 0.1000, 0.8674]],
        [[0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8938],
         [0.1000, 0.1000, 1.0813],
         ...,
         [0.1000, 0.1000, 0.8947],
         [0.1000, 0.1000, 1.0954],
         [0.1000, 0.1000, 0.8928]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.0909],
         [ 0.1000,  0.1000, 18.4010],
         [ 0.1000,  0.1000, 21.3027],
         ...,
         [ 0.1000,  0.1000, 18.4805],
         [ 0.1000,  0.1000, 22.4270],
         [ 0.1000,  0.1000, 17.9009]],
        [[ 0.1000,  0.1000, 10.9791],
         [ 0.1000,  0.1000, 10.1630],
         [ 0.1000,  0.1000, 18.3168],
         ...,
         [ 0.1000,  0.1000, 10.1364],
         [ 0.1000,  0.1000, 19.3887],
         [ 0.1000,  0.1000, 10.3500]],
        [[ 0.1000,  0.1000, 10.4717],
         [ 0.1000,  0.1000,  9.4430],
         [ 0.1000,  0.1000, 17.9776],
         ...,
         [ 0.1000,  0.1000,  9.4101],
         [ 0.1000,  0.1000, 19.0424],
         [ 0.1000,  0.1000,  9.6713]],
        ...,
        [[ 0.1000,  0.1000,  9.8744],
         [ 0.1000,  0.1000,  8.6198],
         [ 0.1000,  0.1000, 17.5653],
         ...,
         [ 0.1000,  0.1000,  8.5806],
         [ 0.1000,  0.1000, 18.6212],
         [ 0.1000,  0.1000,  8.8905]],
        [[ 0.1000,  0.1000, 11.4694],
         [ 0.1000,  0.1000, 10.8765],
         [ 0.1000,  0.1000, 18.6357],
         ...,
         [ 0.1000,  0.1000, 10.8565],
         [ 0.1000,  0.1000, 19.7140],
         [ 0.1000,  0.1000, 11.0187]],
        [[ 0.1000,  0.1000, 12.6301],
         [ 0.1000,  0.1000, 12.6330],
         [ 0.1000,  0.1000, 19.3591],
         ...,
         [ 0.1000,  0.1000, 12.6320],
         [ 0.1000,  0.1000, 20.4512],
         [ 0.1000,  0.1000, 12.6514]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9381],
         [0.1000, 0.1000, 0.9756],
         [0.1000, 0.1000, 1.0228],
         ...,
         [0.1000, 0.1000, 0.9769],
         [0.1000, 0.1000, 1.0411],
         [0.1000, 0.1000, 0.9675]],
        [[0.1000, 0.1000, 0.8549],
         [0.1000, 0.1000, 0.8416],
         [0.1000, 0.1000, 0.9743],
         ...,
         [0.1000, 0.1000, 0.8412],
         [0.1000, 0.1000, 0.9917],
         [0.1000, 0.1000, 0.8447]],
        [[0.1000, 0.1000, 0.8467],
         [0.1000, 0.1000, 0.8299],
         [0.1000, 0.1000, 0.9687],
         ...,
         [0.1000, 0.1000, 0.8294],
         [0.1000, 0.1000, 0.9861],
         [0.1000, 0.1000, 0.8336]],
        ...,
        [[0.1000, 0.1000, 0.8369],
         [0.1000, 0.1000, 0.8165],
         [0.1000, 0.1000, 0.9620],
         ...,
         [0.1000, 0.1000, 0.8159],
         [0.1000, 0.1000, 0.9792],
         [0.1000, 0.1000, 0.8209]],
        [[0.1000, 0.1000, 0.8629],
         [0.1000, 0.1000, 0.8532],
         [0.1000, 0.1000, 0.9794],
         ...,
         [0.1000, 0.1000, 0.8529],
         [0.1000, 0.1000, 0.9970],
         [0.1000, 0.1000, 0.8556]],
        [[0.1000, 0.1000, 0.8818],
         [0.1000, 0.1000, 0.8818],
         [0.1000, 0.1000, 0.9912],
         ...,
         [0.1000, 0.1000, 0.8818],
         [0.1000, 0.1000, 1.0090],
         [0.1000, 0.1000, 0.8821]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.5694],
         [ 0.1000,  0.1000, 17.6277],
         [ 0.1000,  0.1000, 24.3019],
         ...,
         [ 0.1000,  0.1000, 17.5123],
         [ 0.1000,  0.1000, 24.2380],
         [ 0.1000,  0.1000, 17.8730]],
        [[ 0.1000,  0.1000, 12.0084],
         [ 0.1000,  0.1000, 10.4691],
         [ 0.1000,  0.1000, 20.9915],
         ...,
         [ 0.1000,  0.1000, 10.5239],
         [ 0.1000,  0.1000, 20.7587],
         [ 0.1000,  0.1000, 10.3615]],
        [[ 0.1000,  0.1000, 11.5392],
         [ 0.1000,  0.1000,  9.8152],
         [ 0.1000,  0.1000, 20.6144],
         ...,
         [ 0.1000,  0.1000,  9.8810],
         [ 0.1000,  0.1000, 20.3643],
         [ 0.1000,  0.1000,  9.6853]],
        ...,
        [[ 0.1000,  0.1000, 10.9823],
         [ 0.1000,  0.1000,  9.0601],
         [ 0.1000,  0.1000, 20.1557],
         ...,
         [ 0.1000,  0.1000,  9.1373],
         [ 0.1000,  0.1000, 19.8852],
         [ 0.1000,  0.1000,  8.9070]],
        [[ 0.1000,  0.1000, 12.4585],
         [ 0.1000,  0.1000, 11.1115],
         [ 0.1000,  0.1000, 21.3458],
         ...,
         [ 0.1000,  0.1000, 11.1546],
         [ 0.1000,  0.1000, 21.1296],
         [ 0.1000,  0.1000, 11.0276]],
        [[ 0.1000,  0.1000, 13.5122],
         [ 0.1000,  0.1000, 12.6718],
         [ 0.1000,  0.1000, 22.1488],
         ...,
         [ 0.1000,  0.1000, 12.6833],
         [ 0.1000,  0.1000, 21.9717],
         [ 0.1000,  0.1000, 12.6531]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9528],
         [0.1000, 0.1000, 0.9700],
         [0.1000, 0.1000, 1.0786],
         ...,
         [0.1000, 0.1000, 0.9682],
         [0.1000, 0.1000, 1.0776],
         [0.1000, 0.1000, 0.9740]],
        [[0.1000, 0.1000, 0.8787],
         [0.1000, 0.1000, 0.8536],
         [0.1000, 0.1000, 1.0248],
         ...,
         [0.1000, 0.1000, 0.8545],
         [0.1000, 0.1000, 1.0210],
         [0.1000, 0.1000, 0.8519]],
        [[0.1000, 0.1000, 0.8710],
         [0.1000, 0.1000, 0.8430],
         [0.1000, 0.1000, 1.0186],
         ...,
         [0.1000, 0.1000, 0.8440],
         [0.1000, 0.1000, 1.0146],
         [0.1000, 0.1000, 0.8409]],
        ...,
        [[0.1000, 0.1000, 0.8620],
         [0.1000, 0.1000, 0.8307],
         [0.1000, 0.1000, 1.0112],
         ...,
         [0.1000, 0.1000, 0.8320],
         [0.1000, 0.1000, 1.0068],
         [0.1000, 0.1000, 0.8282]],
        [[0.1000, 0.1000, 0.8860],
         [0.1000, 0.1000, 0.8641],
         [0.1000, 0.1000, 1.0305],
         ...,
         [0.1000, 0.1000, 0.8648],
         [0.1000, 0.1000, 1.0270],
         [0.1000, 0.1000, 0.8627]],
        [[0.1000, 0.1000, 0.9031],
         [0.1000, 0.1000, 0.8894],
         [0.1000, 0.1000, 1.0436],
         ...,
         [0.1000, 0.1000, 0.8896],
         [0.1000, 0.1000, 1.0407],
         [0.1000, 0.1000, 0.8891]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.2011],
         [ 0.1000,  0.1000, 18.0856],
         [ 0.1000,  0.1000, 22.2738],
         ...,
         [ 0.1000,  0.1000, 18.0806],
         [ 0.1000,  0.1000, 23.0943],
         [ 0.1000,  0.1000, 17.8901]],
        [[ 0.1000,  0.1000, 11.3394],
         [ 0.1000,  0.1000, 10.2767],
         [ 0.1000,  0.1000, 19.3173],
         ...,
         [ 0.1000,  0.1000, 10.2786],
         [ 0.1000,  0.1000, 19.9116],
         [ 0.1000,  0.1000, 10.3544]],
        [[ 0.1000,  0.1000, 10.8495],
         [ 0.1000,  0.1000,  9.5822],
         [ 0.1000,  0.1000, 18.9797],
         ...,
         [ 0.1000,  0.1000,  9.5846],
         [ 0.1000,  0.1000, 19.5494],
         [ 0.1000,  0.1000,  9.6767]],
        ...,
        [[ 0.1000,  0.1000, 10.2707],
         [ 0.1000,  0.1000,  8.7852],
         [ 0.1000,  0.1000, 18.5689],
         ...,
         [ 0.1000,  0.1000,  8.7879],
         [ 0.1000,  0.1000, 19.1090],
         [ 0.1000,  0.1000,  8.8969]],
        [[ 0.1000,  0.1000, 11.8113],
         [ 0.1000,  0.1000, 10.9625],
         [ 0.1000,  0.1000, 19.6342],
         ...,
         [ 0.1000,  0.1000, 10.9639],
         [ 0.1000,  0.1000, 20.2519],
         [ 0.1000,  0.1000, 11.0222]],
        [[ 0.1000,  0.1000, 12.9234],
         [ 0.1000,  0.1000, 12.6420],
         [ 0.1000,  0.1000, 20.3522],
         ...,
         [ 0.1000,  0.1000, 12.6422],
         [ 0.1000,  0.1000, 21.0236],
         [ 0.1000,  0.1000, 12.6520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9442],
         [0.1000, 0.1000, 0.9749],
         [0.1000, 0.1000, 1.0430],
         ...,
         [0.1000, 0.1000, 0.9748],
         [0.1000, 0.1000, 1.0563],
         [0.1000, 0.1000, 0.9717]],
        [[0.1000, 0.1000, 0.8652],
         [0.1000, 0.1000, 0.8479],
         [0.1000, 0.1000, 0.9949],
         ...,
         [0.1000, 0.1000, 0.8479],
         [0.1000, 0.1000, 1.0046],
         [0.1000, 0.1000, 0.8491]],
        [[0.1000, 0.1000, 0.8572],
         [0.1000, 0.1000, 0.8366],
         [0.1000, 0.1000, 0.9894],
         ...,
         [0.1000, 0.1000, 0.8366],
         [0.1000, 0.1000, 0.9987],
         [0.1000, 0.1000, 0.8381]],
        ...,
        [[0.1000, 0.1000, 0.8478],
         [0.1000, 0.1000, 0.8236],
         [0.1000, 0.1000, 0.9827],
         ...,
         [0.1000, 0.1000, 0.8237],
         [0.1000, 0.1000, 0.9915],
         [0.1000, 0.1000, 0.8254]],
        [[0.1000, 0.1000, 0.8728],
         [0.1000, 0.1000, 0.8590],
         [0.1000, 0.1000, 1.0001],
         ...,
         [0.1000, 0.1000, 0.8590],
         [0.1000, 0.1000, 1.0101],
         [0.1000, 0.1000, 0.8600]],
        [[0.1000, 0.1000, 0.8909],
         [0.1000, 0.1000, 0.8863],
         [0.1000, 0.1000, 1.0117],
         ...,
         [0.1000, 0.1000, 0.8863],
         [0.1000, 0.1000, 1.0227],
         [0.1000, 0.1000, 0.8865]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.7719],
         [ 0.1000,  0.1000, 17.9099],
         [ 0.1000,  0.1000, 23.9945],
         ...,
         [ 0.1000,  0.1000, 17.8343],
         [ 0.1000,  0.1000, 24.1295],
         [ 0.1000,  0.1000, 17.8270]],
        [[ 0.1000,  0.1000, 12.0002],
         [ 0.1000,  0.1000, 10.3463],
         [ 0.1000,  0.1000, 20.6926],
         ...,
         [ 0.1000,  0.1000, 10.3778],
         [ 0.1000,  0.1000, 20.6975],
         [ 0.1000,  0.1000, 10.3808]],
        [[ 0.1000,  0.1000, 11.5131],
         [ 0.1000,  0.1000,  9.6668],
         [ 0.1000,  0.1000, 20.3169],
         ...,
         [ 0.1000,  0.1000,  9.7050],
         [ 0.1000,  0.1000, 20.3082],
         [ 0.1000,  0.1000,  9.7087]],
        ...,
        [[ 0.1000,  0.1000, 10.9358],
         [ 0.1000,  0.1000,  8.8852],
         [ 0.1000,  0.1000, 19.8599],
         ...,
         [ 0.1000,  0.1000,  8.9303],
         [ 0.1000,  0.1000, 19.8350],
         [ 0.1000,  0.1000,  8.9347]],
        [[ 0.1000,  0.1000, 12.4683],
         [ 0.1000,  0.1000, 11.0159],
         [ 0.1000,  0.1000, 21.0457],
         ...,
         [ 0.1000,  0.1000, 11.0402],
         [ 0.1000,  0.1000, 21.0636],
         [ 0.1000,  0.1000, 11.0426]],
        [[ 0.1000,  0.1000, 13.5666],
         [ 0.1000,  0.1000, 12.6508],
         [ 0.1000,  0.1000, 21.8464],
         ...,
         [ 0.1000,  0.1000, 12.6556],
         [ 0.1000,  0.1000, 21.8946],
         [ 0.1000,  0.1000, 12.6561]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9557],
         [0.1000, 0.1000, 0.9742],
         [0.1000, 0.1000, 1.0731],
         ...,
         [0.1000, 0.1000, 0.9729],
         [0.1000, 0.1000, 1.0753],
         [0.1000, 0.1000, 0.9728]],
        [[0.1000, 0.1000, 0.8780],
         [0.1000, 0.1000, 0.8511],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8517],
         [0.1000, 0.1000, 1.0195],
         [0.1000, 0.1000, 0.8517]],
        [[0.1000, 0.1000, 0.8701],
         [0.1000, 0.1000, 0.8401],
         [0.1000, 0.1000, 1.0133],
         ...,
         [0.1000, 0.1000, 0.8407],
         [0.1000, 0.1000, 1.0132],
         [0.1000, 0.1000, 0.8408]],
        ...,
        [[0.1000, 0.1000, 0.8607],
         [0.1000, 0.1000, 0.8274],
         [0.1000, 0.1000, 1.0059],
         ...,
         [0.1000, 0.1000, 0.8281],
         [0.1000, 0.1000, 1.0055],
         [0.1000, 0.1000, 0.8282]],
        [[0.1000, 0.1000, 0.8857],
         [0.1000, 0.1000, 0.8620],
         [0.1000, 0.1000, 1.0252],
         ...,
         [0.1000, 0.1000, 0.8624],
         [0.1000, 0.1000, 1.0255],
         [0.1000, 0.1000, 0.8625]],
        [[0.1000, 0.1000, 0.9035],
         [0.1000, 0.1000, 0.8886],
         [0.1000, 0.1000, 1.0382],
         ...,
         [0.1000, 0.1000, 0.8887],
         [0.1000, 0.1000, 1.0390],
         [0.1000, 0.1000, 0.8887]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 19.5382],
         [ 0.1000,  0.1000, 17.6206],
         [ 0.1000,  0.1000, 27.7943],
         ...,
         [ 0.1000,  0.1000, 17.4593],
         [ 0.1000,  0.1000, 26.5228],
         [ 0.1000,  0.1000, 17.8148]],
        [[ 0.1000,  0.1000, 14.6806],
         [ 0.1000,  0.1000, 10.4724],
         [ 0.1000,  0.1000, 23.5348],
         ...,
         [ 0.1000,  0.1000, 10.5502],
         [ 0.1000,  0.1000, 22.5300],
         [ 0.1000,  0.1000, 10.3860]],
        [[ 0.1000,  0.1000, 14.1702],
         [ 0.1000,  0.1000,  9.8191],
         [ 0.1000,  0.1000, 23.0551],
         ...,
         [ 0.1000,  0.1000,  9.9124],
         [ 0.1000,  0.1000, 22.0795],
         [ 0.1000,  0.1000,  9.7150]],
        ...,
        [[ 0.1000,  0.1000, 13.5613],
         [ 0.1000,  0.1000,  9.0647],
         [ 0.1000,  0.1000, 22.4733],
         ...,
         [ 0.1000,  0.1000,  9.1741],
         [ 0.1000,  0.1000, 21.5329],
         [ 0.1000,  0.1000,  8.9421]],
        [[ 0.1000,  0.1000, 15.1681],
         [ 0.1000,  0.1000, 11.1141],
         [ 0.1000,  0.1000, 23.9865],
         ...,
         [ 0.1000,  0.1000, 11.1754],
         [ 0.1000,  0.1000, 22.9540],
         [ 0.1000,  0.1000, 11.0467]],
        [[ 0.1000,  0.1000, 16.3019],
         [ 0.1000,  0.1000, 12.6725],
         [ 0.1000,  0.1000, 25.0142],
         ...,
         [ 0.1000,  0.1000, 12.6891],
         [ 0.1000,  0.1000, 23.9182],
         [ 0.1000,  0.1000, 12.6569]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0019],
         [0.1000, 0.1000, 0.9707],
         [0.1000, 0.1000, 1.1362],
         ...,
         [0.1000, 0.1000, 0.9681],
         [0.1000, 0.1000, 1.1155],
         [0.1000, 0.1000, 0.9738]],
        [[0.1000, 0.1000, 0.9229],
         [0.1000, 0.1000, 0.8544],
         [0.1000, 0.1000, 1.0669],
         ...,
         [0.1000, 0.1000, 0.8557],
         [0.1000, 0.1000, 1.0505],
         [0.1000, 0.1000, 0.8530]],
        [[0.1000, 0.1000, 0.9146],
         [0.1000, 0.1000, 0.8438],
         [0.1000, 0.1000, 1.0591],
         ...,
         [0.1000, 0.1000, 0.8453],
         [0.1000, 0.1000, 1.0432],
         [0.1000, 0.1000, 0.8421]],
        ...,
        [[0.1000, 0.1000, 0.9047],
         [0.1000, 0.1000, 0.8315],
         [0.1000, 0.1000, 1.0496],
         ...,
         [0.1000, 0.1000, 0.8333],
         [0.1000, 0.1000, 1.0343],
         [0.1000, 0.1000, 0.8295]],
        [[0.1000, 0.1000, 0.9308],
         [0.1000, 0.1000, 0.8649],
         [0.1000, 0.1000, 1.0742],
         ...,
         [0.1000, 0.1000, 0.8659],
         [0.1000, 0.1000, 1.0574],
         [0.1000, 0.1000, 0.8638]],
        [[0.1000, 0.1000, 0.9492],
         [0.1000, 0.1000, 0.8902],
         [0.1000, 0.1000, 1.0909],
         ...,
         [0.1000, 0.1000, 0.8905],
         [0.1000, 0.1000, 1.0731],
         [0.1000, 0.1000, 0.8900]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0609],
         [ 0.1000,  0.1000, 17.7581],
         [ 0.1000,  0.1000, 25.9612],
         ...,
         [ 0.1000,  0.1000, 17.6362],
         [ 0.1000,  0.1000, 25.3526],
         [ 0.1000,  0.1000, 17.8207]],
        [[ 0.1000,  0.1000, 13.2160],
         [ 0.1000,  0.1000, 10.4105],
         [ 0.1000,  0.1000, 22.1203],
         ...,
         [ 0.1000,  0.1000, 10.4652],
         [ 0.1000,  0.1000, 21.6245],
         [ 0.1000,  0.1000, 10.3835]],
        [[ 0.1000,  0.1000, 12.7148],
         [ 0.1000,  0.1000,  9.7446],
         [ 0.1000,  0.1000, 21.6862],
         ...,
         [ 0.1000,  0.1000,  9.8105],
         [ 0.1000,  0.1000, 21.2030],
         [ 0.1000,  0.1000,  9.7120]],
        ...,
        [[ 0.1000,  0.1000, 12.1191],
         [ 0.1000,  0.1000,  8.9769],
         [ 0.1000,  0.1000, 21.1593],
         ...,
         [ 0.1000,  0.1000,  9.0545],
         [ 0.1000,  0.1000, 20.6911],
         [ 0.1000,  0.1000,  8.9385]],
        [[ 0.1000,  0.1000, 13.6963],
         [ 0.1000,  0.1000, 11.0657],
         [ 0.1000,  0.1000, 22.5288],
         ...,
         [ 0.1000,  0.1000, 11.1084],
         [ 0.1000,  0.1000, 22.0212],
         [ 0.1000,  0.1000, 11.0447]],
        [[ 0.1000,  0.1000, 14.8187],
         [ 0.1000,  0.1000, 12.6610],
         [ 0.1000,  0.1000, 23.4571],
         ...,
         [ 0.1000,  0.1000, 12.6711],
         [ 0.1000,  0.1000, 22.9225],
         [ 0.1000,  0.1000, 12.6565]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9778],
         [0.1000, 0.1000, 0.9728],
         [0.1000, 0.1000, 1.1063],
         ...,
         [0.1000, 0.1000, 0.9709],
         [0.1000, 0.1000, 1.0964],
         [0.1000, 0.1000, 0.9739]],
        [[0.1000, 0.1000, 0.8990],
         [0.1000, 0.1000, 0.8533],
         [0.1000, 0.1000, 1.0438],
         ...,
         [0.1000, 0.1000, 0.8542],
         [0.1000, 0.1000, 1.0357],
         [0.1000, 0.1000, 0.8529]],
        [[0.1000, 0.1000, 0.8908],
         [0.1000, 0.1000, 0.8425],
         [0.1000, 0.1000, 1.0367],
         ...,
         [0.1000, 0.1000, 0.8436],
         [0.1000, 0.1000, 1.0289],
         [0.1000, 0.1000, 0.8420]],
        ...,
        [[0.1000, 0.1000, 0.8811],
         [0.1000, 0.1000, 0.8300],
         [0.1000, 0.1000, 1.0282],
         ...,
         [0.1000, 0.1000, 0.8313],
         [0.1000, 0.1000, 1.0205],
         [0.1000, 0.1000, 0.8294]],
        [[0.1000, 0.1000, 0.9068],
         [0.1000, 0.1000, 0.8640],
         [0.1000, 0.1000, 1.0504],
         ...,
         [0.1000, 0.1000, 0.8647],
         [0.1000, 0.1000, 1.0422],
         [0.1000, 0.1000, 0.8637]],
        [[0.1000, 0.1000, 0.9250],
         [0.1000, 0.1000, 0.8899],
         [0.1000, 0.1000, 1.0655],
         ...,
         [0.1000, 0.1000, 0.8901],
         [0.1000, 0.1000, 1.0568],
         [0.1000, 0.1000, 0.8899]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 19.9519],
         [ 0.1000,  0.1000, 17.6986],
         [ 0.1000,  0.1000, 26.6332],
         ...,
         [ 0.1000,  0.1000, 17.5925],
         [ 0.1000,  0.1000, 26.0900],
         [ 0.1000,  0.1000, 17.9576]],
        [[ 0.1000,  0.1000, 15.4759],
         [ 0.1000,  0.1000, 10.4368],
         [ 0.1000,  0.1000, 22.5785],
         ...,
         [ 0.1000,  0.1000, 10.4856],
         [ 0.1000,  0.1000, 22.1836],
         [ 0.1000,  0.1000, 10.3269]],
        [[ 0.1000,  0.1000, 14.9968],
         [ 0.1000,  0.1000,  9.7763],
         [ 0.1000,  0.1000, 22.1216],
         ...,
         [ 0.1000,  0.1000,  9.8350],
         [ 0.1000,  0.1000, 21.7426],
         [ 0.1000,  0.1000,  9.6433]],
        ...,
        [[ 0.1000,  0.1000, 14.4227],
         [ 0.1000,  0.1000,  9.0143],
         [ 0.1000,  0.1000, 21.5673],
         ...,
         [ 0.1000,  0.1000,  9.0833],
         [ 0.1000,  0.1000, 21.2074],
         [ 0.1000,  0.1000,  8.8574]],
        [[ 0.1000,  0.1000, 15.9318],
         [ 0.1000,  0.1000, 11.0862],
         [ 0.1000,  0.1000, 23.0087],
         ...,
         [ 0.1000,  0.1000, 11.1244],
         [ 0.1000,  0.1000, 22.5986],
         [ 0.1000,  0.1000, 11.0010]],
        [[ 0.1000,  0.1000, 16.9859],
         [ 0.1000,  0.1000, 12.6657],
         [ 0.1000,  0.1000, 23.9874],
         ...,
         [ 0.1000,  0.1000, 12.6751],
         [ 0.1000,  0.1000, 23.5422],
         [ 0.1000,  0.1000, 12.6481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0068],
         [0.1000, 0.1000, 0.9701],
         [0.1000, 0.1000, 1.1155],
         ...,
         [0.1000, 0.1000, 0.9684],
         [0.1000, 0.1000, 1.1066],
         [0.1000, 0.1000, 0.9743]],
        [[0.1000, 0.1000, 0.9340],
         [0.1000, 0.1000, 0.8520],
         [0.1000, 0.1000, 1.0495],
         ...,
         [0.1000, 0.1000, 0.8528],
         [0.1000, 0.1000, 1.0431],
         [0.1000, 0.1000, 0.8502]],
        [[0.1000, 0.1000, 0.9262],
         [0.1000, 0.1000, 0.8413],
         [0.1000, 0.1000, 1.0421],
         ...,
         [0.1000, 0.1000, 0.8422],
         [0.1000, 0.1000, 1.0359],
         [0.1000, 0.1000, 0.8391]],
        ...,
        [[0.1000, 0.1000, 0.9169],
         [0.1000, 0.1000, 0.8289],
         [0.1000, 0.1000, 1.0331],
         ...,
         [0.1000, 0.1000, 0.8300],
         [0.1000, 0.1000, 1.0272],
         [0.1000, 0.1000, 0.8263]],
        [[0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.8626],
         [0.1000, 0.1000, 1.0565],
         ...,
         [0.1000, 0.1000, 0.8632],
         [0.1000, 0.1000, 1.0498],
         [0.1000, 0.1000, 0.8612]],
        [[0.1000, 0.1000, 0.9585],
         [0.1000, 0.1000, 0.8883],
         [0.1000, 0.1000, 1.0724],
         ...,
         [0.1000, 0.1000, 0.8884],
         [0.1000, 0.1000, 1.0652],
         [0.1000, 0.1000, 0.8880]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 21.9165],
         [ 0.1000,  0.1000, 17.8453],
         [ 0.1000,  0.1000, 25.6961],
         ...,
         [ 0.1000,  0.1000, 17.8338],
         [ 0.1000,  0.1000, 25.6948],
         [ 0.1000,  0.1000, 18.2071]],
        [[ 0.1000,  0.1000, 19.0816],
         [ 0.1000,  0.1000, 10.3731],
         [ 0.1000,  0.1000, 21.8032],
         ...,
         [ 0.1000,  0.1000, 10.3779],
         [ 0.1000,  0.1000, 21.8400],
         [ 0.1000,  0.1000, 10.2313]],
        [[ 0.1000,  0.1000, 18.7572],
         [ 0.1000,  0.1000,  9.6993],
         [ 0.1000,  0.1000, 21.3643],
         ...,
         [ 0.1000,  0.1000,  9.7052],
         [ 0.1000,  0.1000, 21.4049],
         [ 0.1000,  0.1000,  9.5268]],
        ...,
        [[ 0.1000,  0.1000, 18.3622],
         [ 0.1000,  0.1000,  8.9236],
         [ 0.1000,  0.1000, 20.8318],
         ...,
         [ 0.1000,  0.1000,  8.9305],
         [ 0.1000,  0.1000, 20.8770],
         [ 0.1000,  0.1000,  8.7194]],
        [[ 0.1000,  0.1000, 19.3861],
         [ 0.1000,  0.1000, 11.0366],
         [ 0.1000,  0.1000, 22.2164],
         ...,
         [ 0.1000,  0.1000, 11.0404],
         [ 0.1000,  0.1000, 22.2495],
         [ 0.1000,  0.1000, 10.9280]],
        [[ 0.1000,  0.1000, 20.0752],
         [ 0.1000,  0.1000, 12.6548],
         [ 0.1000,  0.1000, 23.1562],
         ...,
         [ 0.1000,  0.1000, 12.6556],
         [ 0.1000,  0.1000, 23.1805],
         [ 0.1000,  0.1000, 12.6376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0358],
         [0.1000, 0.1000, 0.9696],
         [0.1000, 0.1000, 1.0973],
         ...,
         [0.1000, 0.1000, 0.9694],
         [0.1000, 0.1000, 1.0972],
         [0.1000, 0.1000, 0.9754]],
        [[0.1000, 0.1000, 0.9897],
         [0.1000, 0.1000, 0.8480],
         [0.1000, 0.1000, 1.0339],
         ...,
         [0.1000, 0.1000, 0.8481],
         [0.1000, 0.1000, 1.0345],
         [0.1000, 0.1000, 0.8457]],
        [[0.1000, 0.1000, 0.9844],
         [0.1000, 0.1000, 0.8371],
         [0.1000, 0.1000, 1.0268],
         ...,
         [0.1000, 0.1000, 0.8372],
         [0.1000, 0.1000, 1.0275],
         [0.1000, 0.1000, 0.8343]],
        ...,
        [[0.1000, 0.1000, 0.9780],
         [0.1000, 0.1000, 0.8245],
         [0.1000, 0.1000, 1.0181],
         ...,
         [0.1000, 0.1000, 0.8246],
         [0.1000, 0.1000, 1.0189],
         [0.1000, 0.1000, 0.8211]],
        [[0.1000, 0.1000, 0.9946],
         [0.1000, 0.1000, 0.8588],
         [0.1000, 0.1000, 1.0407],
         ...,
         [0.1000, 0.1000, 0.8589],
         [0.1000, 0.1000, 1.0412],
         [0.1000, 0.1000, 0.8571]],
        [[0.1000, 0.1000, 1.0058],
         [0.1000, 0.1000, 0.8851],
         [0.1000, 0.1000, 1.0559],
         ...,
         [0.1000, 0.1000, 0.8852],
         [0.1000, 0.1000, 1.0563],
         [0.1000, 0.1000, 0.8849]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 21.9832],
         [ 0.1000,  0.1000, 18.0668],
         [ 0.1000,  0.1000, 24.4253],
         ...,
         [ 0.1000,  0.1000, 18.1329],
         [ 0.1000,  0.1000, 24.5473],
         [ 0.1000,  0.1000, 18.2505]],
        [[ 0.1000,  0.1000, 19.1141],
         [ 0.1000,  0.1000, 10.2839],
         [ 0.1000,  0.1000, 20.7560],
         ...,
         [ 0.1000,  0.1000, 10.2588],
         [ 0.1000,  0.1000, 20.9173],
         [ 0.1000,  0.1000, 10.2156]],
        [[ 0.1000,  0.1000, 18.7860],
         [ 0.1000,  0.1000,  9.5910],
         [ 0.1000,  0.1000, 20.3419],
         ...,
         [ 0.1000,  0.1000,  9.5604],
         [ 0.1000,  0.1000, 20.5070],
         [ 0.1000,  0.1000,  9.5076]],
        ...,
        [[ 0.1000,  0.1000, 18.3867],
         [ 0.1000,  0.1000,  8.7955],
         [ 0.1000,  0.1000, 19.8394],
         ...,
         [ 0.1000,  0.1000,  8.7592],
         [ 0.1000,  0.1000, 20.0089],
         [ 0.1000,  0.1000,  8.6966]],
        [[ 0.1000,  0.1000, 19.4220],
         [ 0.1000,  0.1000, 10.9680],
         [ 0.1000,  0.1000, 21.1457],
         ...,
         [ 0.1000,  0.1000, 10.9488],
         [ 0.1000,  0.1000, 21.3033],
         [ 0.1000,  0.1000, 10.9161]],
        [[ 0.1000,  0.1000, 20.1193],
         [ 0.1000,  0.1000, 12.6428],
         [ 0.1000,  0.1000, 22.0319],
         ...,
         [ 0.1000,  0.1000, 12.6401],
         [ 0.1000,  0.1000, 22.1807],
         [ 0.1000,  0.1000, 12.6363]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0364],
         [0.1000, 0.1000, 0.9727],
         [0.1000, 0.1000, 1.0761],
         ...,
         [0.1000, 0.1000, 0.9737],
         [0.1000, 0.1000, 1.0781],
         [0.1000, 0.1000, 0.9757]],
        [[0.1000, 0.1000, 0.9897],
         [0.1000, 0.1000, 0.8461],
         [0.1000, 0.1000, 1.0164],
         ...,
         [0.1000, 0.1000, 0.8457],
         [0.1000, 0.1000, 1.0190],
         [0.1000, 0.1000, 0.8450]],
        [[0.1000, 0.1000, 0.9844],
         [0.1000, 0.1000, 0.8348],
         [0.1000, 0.1000, 1.0097],
         ...,
         [0.1000, 0.1000, 0.8343],
         [0.1000, 0.1000, 1.0124],
         [0.1000, 0.1000, 0.8335]],
        ...,
        [[0.1000, 0.1000, 0.9779],
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0015],
         ...,
         [0.1000, 0.1000, 0.8213],
         [0.1000, 0.1000, 1.0043],
         [0.1000, 0.1000, 0.8203]],
        [[0.1000, 0.1000, 0.9947],
         [0.1000, 0.1000, 0.8572],
         [0.1000, 0.1000, 1.0228],
         ...,
         [0.1000, 0.1000, 0.8569],
         [0.1000, 0.1000, 1.0253],
         [0.1000, 0.1000, 0.8564]],
        [[0.1000, 0.1000, 1.0061],
         [0.1000, 0.1000, 0.8845],
         [0.1000, 0.1000, 1.0372],
         ...,
         [0.1000, 0.1000, 0.8844],
         [0.1000, 0.1000, 1.0396],
         [0.1000, 0.1000, 0.8843]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 24.9382],
         [ 0.1000,  0.1000, 18.2090],
         [ 0.1000,  0.1000, 24.1307],
         ...,
         [ 0.1000,  0.1000, 18.3018],
         [ 0.1000,  0.1000, 23.8114],
         [ 0.1000,  0.1000, 18.1729]],
        [[ 0.1000,  0.1000, 21.6000],
         [ 0.1000,  0.1000, 10.2306],
         [ 0.1000,  0.1000, 20.5420],
         ...,
         [ 0.1000,  0.1000, 10.1974],
         [ 0.1000,  0.1000, 20.2965],
         [ 0.1000,  0.1000, 10.2439]],
        [[ 0.1000,  0.1000, 21.2192],
         [ 0.1000,  0.1000,  9.5259],
         [ 0.1000,  0.1000, 20.1366],
         ...,
         [ 0.1000,  0.1000,  9.4852],
         [ 0.1000,  0.1000, 19.8992],
         [ 0.1000,  0.1000,  9.5422]],
        ...,
        [[ 0.1000,  0.1000, 20.7558],
         [ 0.1000,  0.1000,  8.7184],
         [ 0.1000,  0.1000, 19.6446],
         ...,
         [ 0.1000,  0.1000,  8.6700],
         [ 0.1000,  0.1000, 19.4168],
         [ 0.1000,  0.1000,  8.7377]],
        [[ 0.1000,  0.1000, 21.9577],
         [ 0.1000,  0.1000, 10.9274],
         [ 0.1000,  0.1000, 20.9235],
         ...,
         [ 0.1000,  0.1000, 10.9023],
         [ 0.1000,  0.1000, 20.6704],
         [ 0.1000,  0.1000, 10.9375]],
        [[ 0.1000,  0.1000, 22.7681],
         [ 0.1000,  0.1000, 12.6375],
         [ 0.1000,  0.1000, 21.7906],
         ...,
         [ 0.1000,  0.1000, 12.6350],
         [ 0.1000,  0.1000, 21.5200],
         [ 0.1000,  0.1000, 12.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0839],
         [0.1000, 0.1000, 0.9744],
         [0.1000, 0.1000, 1.0707],
         ...,
         [0.1000, 0.1000, 0.9759],
         [0.1000, 0.1000, 1.0655],
         [0.1000, 0.1000, 0.9738]],
        [[0.1000, 0.1000, 1.0296],
         [0.1000, 0.1000, 0.8447],
         [0.1000, 0.1000, 1.0124],
         ...,
         [0.1000, 0.1000, 0.8441],
         [0.1000, 0.1000, 1.0084],
         [0.1000, 0.1000, 0.8449]],
        [[0.1000, 0.1000, 1.0234],
         [0.1000, 0.1000, 0.8332],
         [0.1000, 0.1000, 1.0058],
         ...,
         [0.1000, 0.1000, 0.8325],
         [0.1000, 0.1000, 1.0019],
         [0.1000, 0.1000, 0.8335]],
        ...,
        [[0.1000, 0.1000, 1.0158],
         [0.1000, 0.1000, 0.8201],
         [0.1000, 0.1000, 0.9978],
         ...,
         [0.1000, 0.1000, 0.8193],
         [0.1000, 0.1000, 0.9941],
         [0.1000, 0.1000, 0.8204]],
        [[0.1000, 0.1000, 1.0354],
         [0.1000, 0.1000, 0.8560],
         [0.1000, 0.1000, 1.0186],
         ...,
         [0.1000, 0.1000, 0.8556],
         [0.1000, 0.1000, 1.0145],
         [0.1000, 0.1000, 0.8561]],
        [[0.1000, 0.1000, 1.0486],
         [0.1000, 0.1000, 0.8838],
         [0.1000, 0.1000, 1.0327],
         ...,
         [0.1000, 0.1000, 0.8838],
         [0.1000, 0.1000, 1.0283],
         [0.1000, 0.1000, 0.8838]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 24.1818],
         [ 0.1000,  0.1000, 18.0805],
         [ 0.1000,  0.1000, 24.3744],
         ...,
         [ 0.1000,  0.1000, 18.1062],
         [ 0.1000,  0.1000, 24.3660],
         [ 0.1000,  0.1000, 18.0405]],
        [[ 0.1000,  0.1000, 20.7143],
         [ 0.1000,  0.1000, 10.2786],
         [ 0.1000,  0.1000, 20.8836],
         ...,
         [ 0.1000,  0.1000, 10.2688],
         [ 0.1000,  0.1000, 20.8832],
         [ 0.1000,  0.1000, 10.2941]],
        [[ 0.1000,  0.1000, 20.3212],
         [ 0.1000,  0.1000,  9.5846],
         [ 0.1000,  0.1000, 20.4879],
         ...,
         [ 0.1000,  0.1000,  9.5726],
         [ 0.1000,  0.1000, 20.4883],
         [ 0.1000,  0.1000,  9.6034]],
        ...,
        [[ 0.1000,  0.1000, 19.8437],
         [ 0.1000,  0.1000,  8.7879],
         [ 0.1000,  0.1000, 20.0070],
         ...,
         [ 0.1000,  0.1000,  8.7738],
         [ 0.1000,  0.1000, 20.0084],
         [ 0.1000,  0.1000,  8.8102]],
        [[ 0.1000,  0.1000, 21.0840],
         [ 0.1000,  0.1000, 10.9640],
         [ 0.1000,  0.1000, 21.2558],
         ...,
         [ 0.1000,  0.1000, 10.9565],
         [ 0.1000,  0.1000, 21.2546],
         [ 0.1000,  0.1000, 10.9758]],
        [[ 0.1000,  0.1000, 21.9232],
         [ 0.1000,  0.1000, 12.6422],
         [ 0.1000,  0.1000, 22.1007],
         ...,
         [ 0.1000,  0.1000, 12.6412],
         [ 0.1000,  0.1000, 22.0977],
         [ 0.1000,  0.1000, 12.6440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0769],
         ...,
         [0.1000, 0.1000, 0.9750],
         [0.1000, 0.1000, 1.0768],
         [0.1000, 0.1000, 0.9739]],
        [[0.1000, 0.1000, 1.0174],
         [0.1000, 0.1000, 0.8477],
         [0.1000, 0.1000, 1.0201],
         ...,
         [0.1000, 0.1000, 0.8475],
         [0.1000, 0.1000, 1.0201],
         [0.1000, 0.1000, 0.8479]],
        [[0.1000, 0.1000, 1.0110],
         [0.1000, 0.1000, 0.8364],
         [0.1000, 0.1000, 1.0137],
         ...,
         [0.1000, 0.1000, 0.8362],
         [0.1000, 0.1000, 1.0137],
         [0.1000, 0.1000, 0.8367]],
        ...,
        [[0.1000, 0.1000, 1.0032],
         [0.1000, 0.1000, 0.8234],
         [0.1000, 0.1000, 1.0059],
         ...,
         [0.1000, 0.1000, 0.8232],
         [0.1000, 0.1000, 1.0059],
         [0.1000, 0.1000, 0.8238]],
        [[0.1000, 0.1000, 1.0234],
         [0.1000, 0.1000, 0.8588],
         [0.1000, 0.1000, 1.0262],
         ...,
         [0.1000, 0.1000, 0.8587],
         [0.1000, 0.1000, 1.0262],
         [0.1000, 0.1000, 0.8590]],
        [[0.1000, 0.1000, 1.0371],
         [0.1000, 0.1000, 0.8861],
         [0.1000, 0.1000, 1.0399],
         ...,
         [0.1000, 0.1000, 0.8861],
         [0.1000, 0.1000, 1.0399],
         [0.1000, 0.1000, 0.8861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.7555],
         [ 0.1000,  0.1000, 18.1202],
         [ 0.1000,  0.1000, 24.3830],
         ...,
         [ 0.1000,  0.1000, 18.1617],
         [ 0.1000,  0.1000, 24.2471],
         [ 0.1000,  0.1000, 18.0476]],
        [[ 0.1000,  0.1000, 20.3420],
         [ 0.1000,  0.1000, 10.2636],
         [ 0.1000,  0.1000, 20.8856],
         ...,
         [ 0.1000,  0.1000, 10.2480],
         [ 0.1000,  0.1000, 20.7656],
         [ 0.1000,  0.1000, 10.2913]],
        [[ 0.1000,  0.1000, 19.9551],
         [ 0.1000,  0.1000,  9.5662],
         [ 0.1000,  0.1000, 20.4891],
         ...,
         [ 0.1000,  0.1000,  9.5472],
         [ 0.1000,  0.1000, 20.3710],
         [ 0.1000,  0.1000,  9.6001]],
        ...,
        [[ 0.1000,  0.1000, 19.4851],
         [ 0.1000,  0.1000,  8.7662],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7436],
         [ 0.1000,  0.1000, 19.8916],
         [ 0.1000,  0.1000,  8.8063]],
        [[ 0.1000,  0.1000, 20.7059],
         [ 0.1000,  0.1000, 10.9525],
         [ 0.1000,  0.1000, 21.2584],
         ...,
         [ 0.1000,  0.1000, 10.9406],
         [ 0.1000,  0.1000, 21.1367],
         [ 0.1000,  0.1000, 10.9737]],
        [[ 0.1000,  0.1000, 21.5320],
         [ 0.1000,  0.1000, 12.6406],
         [ 0.1000,  0.1000, 22.1049],
         ...,
         [ 0.1000,  0.1000, 12.6391],
         [ 0.1000,  0.1000, 21.9793],
         [ 0.1000,  0.1000, 12.6437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0662],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0764],
         ...,
         [0.1000, 0.1000, 0.9752],
         [0.1000, 0.1000, 1.0742],
         [0.1000, 0.1000, 0.9734]],
        [[0.1000, 0.1000, 1.0107],
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 1.0195],
         ...,
         [0.1000, 0.1000, 0.8465],
         [0.1000, 0.1000, 1.0176],
         [0.1000, 0.1000, 0.8472]],
        [[0.1000, 0.1000, 1.0044],
         [0.1000, 0.1000, 0.8354],
         [0.1000, 0.1000, 1.0131],
         ...,
         [0.1000, 0.1000, 0.8351],
         [0.1000, 0.1000, 1.0112],
         [0.1000, 0.1000, 0.8360]],
        ...,
        [[0.1000, 0.1000, 0.9968],
         [0.1000, 0.1000, 0.8224],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8220],
         [0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8231]],
        [[0.1000, 0.1000, 1.0166],
         [0.1000, 0.1000, 0.8580],
         [0.1000, 0.1000, 1.0256],
         ...,
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0236],
         [0.1000, 0.1000, 0.8583]],
        [[0.1000, 0.1000, 1.0300],
         [0.1000, 0.1000, 0.8854],
         [0.1000, 0.1000, 1.0394],
         ...,
         [0.1000, 0.1000, 0.8854],
         [0.1000, 0.1000, 1.0373],
         [0.1000, 0.1000, 0.8855]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.7022],
         [ 0.1000,  0.1000, 18.1252],
         [ 0.1000,  0.1000, 24.3841],
         ...,
         [ 0.1000,  0.1000, 18.1688],
         [ 0.1000,  0.1000, 24.2320],
         [ 0.1000,  0.1000, 18.0485]],
        [[ 0.1000,  0.1000, 20.2953],
         [ 0.1000,  0.1000, 10.2617],
         [ 0.1000,  0.1000, 20.8858],
         ...,
         [ 0.1000,  0.1000, 10.2454],
         [ 0.1000,  0.1000, 20.7507],
         [ 0.1000,  0.1000, 10.2910]],
        [[ 0.1000,  0.1000, 19.9092],
         [ 0.1000,  0.1000,  9.5639],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5440],
         [ 0.1000,  0.1000, 20.3561],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4401],
         [ 0.1000,  0.1000,  8.7634],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7398],
         [ 0.1000,  0.1000, 19.8768],
         [ 0.1000,  0.1000,  8.8058]],
        [[ 0.1000,  0.1000, 20.6585],
         [ 0.1000,  0.1000, 10.9510],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9386],
         [ 0.1000,  0.1000, 21.1218],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4829],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1054],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9643],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0653],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0764],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0739],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0098],
         [0.1000, 0.1000, 0.8467],
         [0.1000, 0.1000, 1.0195],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0173],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0036],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9959],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0158],
         [0.1000, 0.1000, 0.8579],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8577],
         [0.1000, 0.1000, 1.0233],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0292],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0370],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6945],
         [ 0.1000,  0.1000, 18.1259],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1698],
         [ 0.1000,  0.1000, 24.2298],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2887],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2450],
         [ 0.1000,  0.1000, 20.7486],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9026],
         [ 0.1000,  0.1000,  9.5636],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3540],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4337],
         [ 0.1000,  0.1000,  8.7630],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7393],
         [ 0.1000,  0.1000, 19.8747],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6517],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1197],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4759],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9622],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8579],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6934],
         [ 0.1000,  0.1000, 18.1260],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2877],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2450],
         [ 0.1000,  0.1000, 20.7483],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9017],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4328],
         [ 0.1000,  0.1000,  8.7630],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8744],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6507],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1194],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4749],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9619],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2876],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9016],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7630],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7630],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 23.6933],
         [ 0.1000,  0.1000, 18.1261],
         [ 0.1000,  0.1000, 24.3842],
         ...,
         [ 0.1000,  0.1000, 18.1700],
         [ 0.1000,  0.1000, 24.2295],
         [ 0.1000,  0.1000, 18.0486]],
        [[ 0.1000,  0.1000, 20.2875],
         [ 0.1000,  0.1000, 10.2614],
         [ 0.1000,  0.1000, 20.8859],
         ...,
         [ 0.1000,  0.1000, 10.2449],
         [ 0.1000,  0.1000, 20.7482],
         [ 0.1000,  0.1000, 10.2909]],
        [[ 0.1000,  0.1000, 19.9015],
         [ 0.1000,  0.1000,  9.5635],
         [ 0.1000,  0.1000, 20.4893],
         ...,
         [ 0.1000,  0.1000,  9.5435],
         [ 0.1000,  0.1000, 20.3537],
         [ 0.1000,  0.1000,  9.5996]],
        ...,
        [[ 0.1000,  0.1000, 19.4326],
         [ 0.1000,  0.1000,  8.7629],
         [ 0.1000,  0.1000, 20.0075],
         ...,
         [ 0.1000,  0.1000,  8.7392],
         [ 0.1000,  0.1000, 19.8743],
         [ 0.1000,  0.1000,  8.8057]],
        [[ 0.1000,  0.1000, 20.6506],
         [ 0.1000,  0.1000, 10.9508],
         [ 0.1000,  0.1000, 21.2588],
         ...,
         [ 0.1000,  0.1000, 10.9383],
         [ 0.1000,  0.1000, 21.1193],
         [ 0.1000,  0.1000, 10.9734]],
        [[ 0.1000,  0.1000, 21.4748],
         [ 0.1000,  0.1000, 12.6404],
         [ 0.1000,  0.1000, 22.1055],
         ...,
         [ 0.1000,  0.1000, 12.6388],
         [ 0.1000,  0.1000, 21.9618],
         [ 0.1000,  0.1000, 12.6436]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 1.0651],
         [0.1000, 0.1000, 0.9746],
         [0.1000, 0.1000, 1.0763],
         ...,
         [0.1000, 0.1000, 0.9753],
         [0.1000, 0.1000, 1.0738],
         [0.1000, 0.1000, 0.9733]],
        [[0.1000, 0.1000, 1.0097],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 1.0194],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 1.0172],
         [0.1000, 0.1000, 0.8471]],
        [[0.1000, 0.1000, 1.0034],
         [0.1000, 0.1000, 0.8353],
         [0.1000, 0.1000, 1.0130],
         ...,
         [0.1000, 0.1000, 0.8350],
         [0.1000, 0.1000, 1.0108],
         [0.1000, 0.1000, 0.8359]],
        ...,
        [[0.1000, 0.1000, 0.9958],
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0052],
         ...,
         [0.1000, 0.1000, 0.8219],
         [0.1000, 0.1000, 1.0030],
         [0.1000, 0.1000, 0.8230]],
        [[0.1000, 0.1000, 1.0156],
         [0.1000, 0.1000, 0.8578],
         [0.1000, 0.1000, 1.0255],
         ...,
         [0.1000, 0.1000, 0.8576],
         [0.1000, 0.1000, 1.0232],
         [0.1000, 0.1000, 0.8582]],
        [[0.1000, 0.1000, 1.0290],
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0393],
         ...,
         [0.1000, 0.1000, 0.8853],
         [0.1000, 0.1000, 1.0369],
         [0.1000, 0.1000, 0.8854]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 16.6596],
         [ 0.1000, 11.8247, 19.0390],
         [ 0.1000, 11.8247, 21.7642],
         ...,
         [ 0.1000, 11.8247, 20.5745],
         [ 0.1000, 11.8247, 31.7516],
         [ 0.1000, 11.8247, 16.6009]],
        [[ 0.1000, 10.3191, 11.2802],
         [ 0.1000, 10.3191, 16.0107],
         [ 0.1000, 10.3191, 13.5322],
         ...,
         [ 0.1000, 10.3191, 13.9713],
         [ 0.1000, 10.3191, 28.6980],
         [ 0.1000, 10.3191, 10.9740]],
        [[ 0.1000, 10.1465, 10.7486],
         [ 0.1000, 10.1465, 15.6710],
         [ 0.1000, 10.1465, 12.7591],
         ...,
         [ 0.1000, 10.1465, 13.3177],
         [ 0.1000, 10.1465, 28.3410],
         [ 0.1000, 10.1465, 10.4259]],
        ...,
        [[ 0.1000,  9.9364, 10.1235],
         [ 0.1000,  9.9364, 15.2594],
         [ 0.1000,  9.9364, 11.8607],
         ...,
         [ 0.1000,  9.9364, 12.5488],
         [ 0.1000,  9.9364, 27.9041],
         [ 0.1000,  9.9364,  9.7835]],
        [[ 0.1000, 10.4809, 11.7942],
         [ 0.1000, 10.4809, 16.3308],
         [ 0.1000, 10.4809, 14.2874],
         ...,
         [ 0.1000, 10.4809, 14.6032],
         [ 0.1000, 10.4809, 29.0315],
         [ 0.1000, 10.4809, 11.5056]],
        [[ 0.1000, 10.8472, 13.0130],
         [ 0.1000, 10.8472, 17.0601],
         [ 0.1000, 10.8472, 16.1064],
         ...,
         [ 0.1000, 10.8472, 16.1005],
         [ 0.1000, 10.8472, 29.7814],
         [ 0.1000, 10.8472, 12.7716]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 0.9736],
         [0.1000, 1.0480, 1.0123],
         [0.1000, 1.0480, 1.0566],
         ...,
         [0.1000, 1.0480, 1.0372],
         [0.1000, 1.0480, 1.2190],
         [0.1000, 1.0480, 0.9726]],
        [[0.1000, 1.0157, 0.8861],
         [0.1000, 1.0157, 0.9630],
         [0.1000, 1.0157, 0.9227],
         ...,
         [0.1000, 1.0157, 0.9298],
         [0.1000, 1.0157, 1.1694],
         [0.1000, 1.0157, 0.8811]],
        [[0.1000, 1.0120, 0.8774],
         [0.1000, 1.0120, 0.9575],
         [0.1000, 1.0120, 0.9101],
         ...,
         [0.1000, 1.0120, 0.9192],
         [0.1000, 1.0120, 1.1636],
         [0.1000, 1.0120, 0.8722]],
        ...,
        [[0.1000, 1.0075, 0.8673],
         [0.1000, 1.0075, 0.9508],
         [0.1000, 1.0075, 0.8955],
         ...,
         [0.1000, 1.0075, 0.9067],
         [0.1000, 1.0075, 1.1565],
         [0.1000, 1.0075, 0.8617]],
        [[0.1000, 1.0192, 0.8944],
         [0.1000, 1.0192, 0.9682],
         [0.1000, 1.0192, 0.9350],
         ...,
         [0.1000, 1.0192, 0.9401],
         [0.1000, 1.0192, 1.1748],
         [0.1000, 1.0192, 0.8897]],
        [[0.1000, 1.0270, 0.9143],
         [0.1000, 1.0270, 0.9801],
         [0.1000, 1.0270, 0.9646],
         ...,
         [0.1000, 1.0270, 0.9645],
         [0.1000, 1.0270, 1.1870],
         [0.1000, 1.0270, 0.9103]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 16.8485],
         [ 0.1000, 11.8247, 22.9882],
         [ 0.1000, 11.8247, 20.7753],
         ...,
         [ 0.1000, 11.8247, 20.4396],
         [ 0.1000, 11.8247, 25.1225],
         [ 0.1000, 11.8247, 17.7108]],
        [[ 0.1000, 10.3191, 11.7967],
         [ 0.1000, 10.3191, 20.8208],
         [ 0.1000, 10.3191, 14.0168],
         ...,
         [ 0.1000, 10.3191, 13.4645],
         [ 0.1000, 10.3191, 23.4425],
         [ 0.1000, 10.3191, 10.4314]],
        [[ 0.1000, 10.1465, 11.2875],
         [ 0.1000, 10.1465, 20.5672],
         [ 0.1000, 10.1465, 13.3504],
         ...,
         [ 0.1000, 10.1465, 12.7864],
         [ 0.1000, 10.1465, 23.2425],
         [ 0.1000, 10.1465,  9.7698]],
        ...,
        [[ 0.1000,  9.9364, 10.6860],
         [ 0.1000,  9.9364, 20.2566],
         [ 0.1000,  9.9364, 12.5672],
         ...,
         [ 0.1000,  9.9364, 11.9921],
         [ 0.1000,  9.9364, 22.9966],
         [ 0.1000,  9.9364,  9.0066]],
        [[ 0.1000, 10.4809, 12.2872],
         [ 0.1000, 10.4809, 21.0578],
         [ 0.1000, 10.4809, 14.6616],
         ...,
         [ 0.1000, 10.4809, 14.1224],
         [ 0.1000, 10.4809, 23.6286],
         [ 0.1000, 10.4809, 11.0820]],
        [[ 0.1000, 10.8472, 13.4429],
         [ 0.1000, 10.8472, 21.5903],
         [ 0.1000, 10.8472, 16.1912],
         ...,
         [ 0.1000, 10.8472, 15.6901],
         [ 0.1000, 10.8472, 24.0447],
         [ 0.1000, 10.8472, 12.6647]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 0.9595],
         [0.1000, 1.0480, 1.0594],
         [0.1000, 1.0480, 1.0234],
         ...,
         [0.1000, 1.0480, 1.0179],
         [0.1000, 1.0480, 1.0941],
         [0.1000, 1.0480, 0.9735]],
        [[0.1000, 1.0157, 0.8773],
         [0.1000, 1.0157, 1.0241],
         [0.1000, 1.0157, 0.9135],
         ...,
         [0.1000, 1.0157, 0.9045],
         [0.1000, 1.0157, 1.0668],
         [0.1000, 1.0157, 0.8551]],
        [[0.1000, 1.0120, 0.8691],
         [0.1000, 1.0120, 1.0200],
         [0.1000, 1.0120, 0.9026],
         ...,
         [0.1000, 1.0120, 0.8934],
         [0.1000, 1.0120, 1.0635],
         [0.1000, 1.0120, 0.8444]],
        ...,
        [[0.1000, 1.0075, 0.8593],
         [0.1000, 1.0075, 1.0149],
         [0.1000, 1.0075, 0.8899],
         ...,
         [0.1000, 1.0075, 0.8805],
         [0.1000, 1.0075, 1.0595],
         [0.1000, 1.0075, 0.8320]],
        [[0.1000, 1.0192, 0.8853],
         [0.1000, 1.0192, 1.0280],
         [0.1000, 1.0192, 0.9239],
         ...,
         [0.1000, 1.0192, 0.9152],
         [0.1000, 1.0192, 1.0698],
         [0.1000, 1.0192, 0.8657]],
        [[0.1000, 1.0270, 0.9041],
         [0.1000, 1.0270, 1.0366],
         [0.1000, 1.0270, 0.9488],
         ...,
         [0.1000, 1.0270, 0.9407],
         [0.1000, 1.0270, 1.0766],
         [0.1000, 1.0270, 0.8915]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 17.2739],
         [ 0.1000, 11.8247, 23.8266],
         [ 0.1000, 11.8247, 20.0678],
         ...,
         [ 0.1000, 11.8247, 20.3309],
         [ 0.1000, 11.8247, 23.4641],
         [ 0.1000, 11.8247, 18.0749]],
        [[ 0.1000, 10.3191, 12.4047],
         [ 0.1000, 10.3191, 21.6920],
         [ 0.1000, 10.3191, 14.7042],
         ...,
         [ 0.1000, 10.3191, 13.0448],
         [ 0.1000, 10.3191, 20.3613],
         [ 0.1000, 10.3191, 10.2808]],
        [[ 0.1000, 10.1465, 11.9065],
         [ 0.1000, 10.1465, 21.4414],
         [ 0.1000, 10.1465, 14.1489],
         ...,
         [ 0.1000, 10.1465, 12.3475],
         [ 0.1000, 10.1465, 20.0069],
         [ 0.1000, 10.1465,  9.5872]],
        ...,
        [[ 0.1000,  9.9364, 11.3159],
         [ 0.1000,  9.9364, 21.1344],
         [ 0.1000,  9.9364, 13.4888],
         ...,
         [ 0.1000,  9.9364, 11.5337],
         [ 0.1000,  9.9364, 19.5756],
         [ 0.1000,  9.9364,  8.7910]],
        [[ 0.1000, 10.4809, 12.8831],
         [ 0.1000, 10.4809, 21.9259],
         [ 0.1000, 10.4809, 15.2362],
         ...,
         [ 0.1000, 10.4809, 13.7234],
         [ 0.1000, 10.4809, 20.6940],
         [ 0.1000, 10.4809, 10.9656]],
        [[ 0.1000, 10.8472, 14.0051],
         [ 0.1000, 10.8472, 22.4511],
         [ 0.1000, 10.8472, 16.4793],
         ...,
         [ 0.1000, 10.8472, 15.3484],
         [ 0.1000, 10.8472, 21.4476],
         [ 0.1000, 10.8472, 12.6425]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 0.9618],
         [0.1000, 1.0480, 1.0684],
         [0.1000, 1.0480, 1.0072],
         ...,
         [0.1000, 1.0480, 1.0115],
         [0.1000, 1.0480, 1.0625],
         [0.1000, 1.0480, 0.9748]],
        [[0.1000, 1.0157, 0.8826],
         [0.1000, 1.0157, 1.0337],
         [0.1000, 1.0157, 0.9200],
         ...,
         [0.1000, 1.0157, 0.8930],
         [0.1000, 1.0157, 1.0120],
         [0.1000, 1.0157, 0.8481]],
        [[0.1000, 1.0120, 0.8745],
         [0.1000, 1.0120, 1.0296],
         [0.1000, 1.0120, 0.9110],
         ...,
         [0.1000, 1.0120, 0.8817],
         [0.1000, 1.0120, 1.0063],
         [0.1000, 1.0120, 0.8368]],
        ...,
        [[0.1000, 1.0075, 0.8649],
         [0.1000, 1.0075, 1.0246],
         [0.1000, 1.0075, 0.9002],
         ...,
         [0.1000, 1.0075, 0.8684],
         [0.1000, 1.0075, 0.9992],
         [0.1000, 1.0075, 0.8238]],
        [[0.1000, 1.0192, 0.8904],
         [0.1000, 1.0192, 1.0375],
         [0.1000, 1.0192, 0.9287],
         ...,
         [0.1000, 1.0192, 0.9041],
         [0.1000, 1.0192, 1.0174],
         [0.1000, 1.0192, 0.8592]],
        [[0.1000, 1.0270, 0.9086],
         [0.1000, 1.0270, 1.0460],
         [0.1000, 1.0270, 0.9489],
         ...,
         [0.1000, 1.0270, 0.9305],
         [0.1000, 1.0270, 1.0297],
         [0.1000, 1.0270, 0.8865]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 20.9757],
         [ 0.1000, 11.8247, 27.0412],
         [ 0.1000, 11.8247, 22.7589],
         ...,
         [ 0.1000, 11.8247, 19.8985],
         [ 0.1000, 11.8247, 19.1758],
         [ 0.1000, 11.8247, 19.0436]],
        [[ 0.1000, 10.3191, 17.2409],
         [ 0.1000, 10.3191, 23.0911],
         [ 0.1000, 10.3191, 19.3612],
         ...,
         [ 0.1000, 10.3191, 12.2477],
         [ 0.1000, 10.3191, 17.1561],
         [ 0.1000, 10.3191,  9.9669]],
        [[ 0.1000, 10.1465, 16.8274],
         [ 0.1000, 10.1465, 22.6441],
         [ 0.1000, 10.1465, 18.9775],
         ...,
         [ 0.1000, 10.1465, 11.5336],
         [ 0.1000, 10.1465, 16.9213],
         [ 0.1000, 10.1465,  9.1993]],
        ...,
        [[ 0.1000,  9.9364, 16.3280],
         [ 0.1000,  9.9364, 22.1013],
         [ 0.1000,  9.9364, 18.5118],
         ...,
         [ 0.1000,  9.9364, 10.7049],
         [ 0.1000,  9.9364, 16.6344],
         [ 0.1000,  9.9364,  8.3282]],
        [[ 0.1000, 10.4809, 17.6316],
         [ 0.1000, 10.4809, 23.5116],
         [ 0.1000, 10.4809, 19.7223],
         ...,
         [ 0.1000, 10.4809, 12.9462],
         [ 0.1000, 10.4809, 17.3757],
         [ 0.1000, 10.4809, 10.7324]],
        [[ 0.1000, 10.8472, 18.5254],
         [ 0.1000, 10.8472, 24.4668],
         [ 0.1000, 10.8472, 20.5431],
         ...,
         [ 0.1000, 10.8472, 14.6318],
         [ 0.1000, 10.8472, 17.8703],
         [ 0.1000, 10.8472, 12.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0121],
         [0.1000, 1.0480, 1.1108],
         [0.1000, 1.0480, 1.0411],
         ...,
         [0.1000, 1.0480, 0.9946],
         [0.1000, 1.0480, 0.9828],
         [0.1000, 1.0480, 0.9807]],
        [[0.1000, 1.0157, 0.9514],
         [0.1000, 1.0157, 1.0465],
         [0.1000, 1.0157, 0.9858],
         ...,
         [0.1000, 1.0157, 0.8701],
         [0.1000, 1.0157, 0.9500],
         [0.1000, 1.0157, 0.8330]],
        [[0.1000, 1.0120, 0.9446],
         [0.1000, 1.0120, 1.0392],
         [0.1000, 1.0120, 0.9796],
         ...,
         [0.1000, 1.0120, 0.8585],
         [0.1000, 1.0120, 0.9462],
         [0.1000, 1.0120, 0.8206]],
        ...,
        [[0.1000, 1.0075, 0.9365],
         [0.1000, 1.0075, 1.0304],
         [0.1000, 1.0075, 0.9720],
         ...,
         [0.1000, 1.0075, 0.8450],
         [0.1000, 1.0075, 0.9415],
         [0.1000, 1.0075, 0.8064]],
        [[0.1000, 1.0192, 0.9577],
         [0.1000, 1.0192, 1.0533],
         [0.1000, 1.0192, 0.9917],
         ...,
         [0.1000, 1.0192, 0.8815],
         [0.1000, 1.0192, 0.9535],
         [0.1000, 1.0192, 0.8455]],
        [[0.1000, 1.0270, 0.9722],
         [0.1000, 1.0270, 1.0689],
         [0.1000, 1.0270, 1.0051],
         ...,
         [0.1000, 1.0270, 0.9089],
         [0.1000, 1.0270, 0.9616],
         [0.1000, 1.0270, 0.8765]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 28.2305],
         [ 0.1000, 11.8247, 27.0342],
         [ 0.1000, 11.8247, 35.5749],
         ...,
         [ 0.1000, 11.8247, 17.7417],
         [ 0.1000, 11.8247, 21.1628],
         [ 0.1000, 11.8247, 19.6207]],
        [[ 0.1000, 10.3191, 27.5093],
         [ 0.1000, 10.3191, 23.1301],
         [ 0.1000, 10.3191, 28.7746],
         ...,
         [ 0.1000, 10.3191, 13.5322],
         [ 0.1000, 10.3191, 19.6599],
         [ 0.1000, 10.3191,  9.8219]],
        [[ 0.1000, 10.1465, 27.4213],
         [ 0.1000, 10.1465, 22.6878],
         [ 0.1000, 10.1465, 28.0288],
         ...,
         [ 0.1000, 10.1465, 13.0860],
         [ 0.1000, 10.1465, 19.4814],
         [ 0.1000, 10.1465,  9.0156]],
        ...,
        [[ 0.1000,  9.9364, 27.3125],
         [ 0.1000,  9.9364, 22.1506],
         [ 0.1000,  9.9364, 27.1299],
         ...,
         [ 0.1000,  9.9364, 12.5526],
         [ 0.1000,  9.9364, 19.2622],
         [ 0.1000,  9.9364,  8.1063]],
        [[ 0.1000, 10.4809, 27.5908],
         [ 0.1000, 10.4809, 23.5461],
         [ 0.1000, 10.4809, 29.4808],
         ...,
         [ 0.1000, 10.4809, 13.9576],
         [ 0.1000, 10.4809, 19.8261],
         [ 0.1000, 10.4809, 10.6302]],
        [[ 0.1000, 10.8472, 27.7714],
         [ 0.1000, 10.8472, 24.4907],
         [ 0.1000, 10.8472, 31.1010],
         ...,
         [ 0.1000, 10.8472, 14.9443],
         [ 0.1000, 10.8472, 20.1978],
         [ 0.1000, 10.8472, 12.6570]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.1254],
         [0.1000, 1.0480, 1.1059],
         [0.1000, 1.0480, 1.2448],
         ...,
         [0.1000, 1.0480, 0.9548],
         [0.1000, 1.0480, 1.0104],
         [0.1000, 1.0480, 0.9853]],
        [[0.1000, 1.0157, 1.1136],
         [0.1000, 1.0157, 1.0424],
         [0.1000, 1.0157, 1.1342],
         ...,
         [0.1000, 1.0157, 0.8863],
         [0.1000, 1.0157, 0.9860],
         [0.1000, 1.0157, 0.8259]],
        [[0.1000, 1.0120, 1.1122],
         [0.1000, 1.0120, 1.0352],
         [0.1000, 1.0120, 1.1221],
         ...,
         [0.1000, 1.0120, 0.8790],
         [0.1000, 1.0120, 0.9831],
         [0.1000, 1.0120, 0.8128]],
        ...,
        [[0.1000, 1.0075, 1.1104],
         [0.1000, 1.0075, 1.0265],
         [0.1000, 1.0075, 1.1075],
         ...,
         [0.1000, 1.0075, 0.8704],
         [0.1000, 1.0075, 0.9795],
         [0.1000, 1.0075, 0.7980]],
        [[0.1000, 1.0192, 1.1149],
         [0.1000, 1.0192, 1.0492],
         [0.1000, 1.0192, 1.1457],
         ...,
         [0.1000, 1.0192, 0.8932],
         [0.1000, 1.0192, 0.9887],
         [0.1000, 1.0192, 0.8391]],
        [[0.1000, 1.0270, 1.1179],
         [0.1000, 1.0270, 1.0645],
         [0.1000, 1.0270, 1.1720],
         ...,
         [0.1000, 1.0270, 0.9093],
         [0.1000, 1.0270, 0.9947],
         [0.1000, 1.0270, 0.8721]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 22.9454],
         [ 0.1000, 11.8247, 27.2737],
         [ 0.1000, 11.8247, 26.9981],
         ...,
         [ 0.1000, 11.8247, 19.2651],
         [ 0.1000, 11.8247, 19.8708],
         [ 0.1000, 11.8247, 19.2743]],
        [[ 0.1000, 10.3191, 20.7624],
         [ 0.1000, 10.3191, 23.0983],
         [ 0.1000, 10.3191, 22.9172],
         ...,
         [ 0.1000, 10.3191, 12.5375],
         [ 0.1000, 10.3191, 18.1462],
         [ 0.1000, 10.3191,  9.9059]],
        [[ 0.1000, 10.1465, 20.5070],
         [ 0.1000, 10.1465, 22.6280],
         [ 0.1000, 10.1465, 22.4570],
         ...,
         [ 0.1000, 10.1465, 11.8882],
         [ 0.1000, 10.1465, 17.9434],
         [ 0.1000, 10.1465,  9.1224]],
        ...,
        [[ 0.1000,  9.9364, 20.1944],
         [ 0.1000,  9.9364, 22.0576],
         [ 0.1000,  9.9364, 21.8986],
         ...,
         [ 0.1000,  9.9364, 11.1289],
         [ 0.1000,  9.9364, 17.6949],
         [ 0.1000,  9.9364,  8.2356]],
        [[ 0.1000, 10.4809, 21.0010],
         [ 0.1000, 10.4809, 23.5411],
         [ 0.1000, 10.4809, 23.3505],
         ...,
         [ 0.1000, 10.4809, 13.1684],
         [ 0.1000, 10.4809, 18.3355],
         [ 0.1000, 10.4809, 10.6889]],
        [[ 0.1000, 10.8472, 21.5372],
         [ 0.1000, 10.8472, 24.5486],
         [ 0.1000, 10.8472, 24.3358],
         ...,
         [ 0.1000, 10.8472, 14.6751],
         [ 0.1000, 10.8472, 18.7601],
         [ 0.1000, 10.8472, 12.6426]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0422],
         [0.1000, 1.0480, 1.1126],
         [0.1000, 1.0480, 1.1081],
         ...,
         [0.1000, 1.0480, 0.9823],
         [0.1000, 1.0480, 0.9921],
         [0.1000, 1.0480, 0.9824]],
        [[0.1000, 1.0157, 1.0066],
         [0.1000, 1.0157, 1.0446],
         [0.1000, 1.0157, 1.0417],
         ...,
         [0.1000, 1.0157, 0.8729],
         [0.1000, 1.0157, 0.9641],
         [0.1000, 1.0157, 0.8301]],
        [[0.1000, 1.0120, 1.0025],
         [0.1000, 1.0120, 1.0370],
         [0.1000, 1.0120, 1.0342],
         ...,
         [0.1000, 1.0120, 0.8623],
         [0.1000, 1.0120, 0.9608],
         [0.1000, 1.0120, 0.8173]],
        ...,
        [[0.1000, 1.0075, 0.9974],
         [0.1000, 1.0075, 1.0277],
         [0.1000, 1.0075, 1.0251],
         ...,
         [0.1000, 1.0075, 0.8500],
         [0.1000, 1.0075, 0.9568],
         [0.1000, 1.0075, 0.8029]],
        [[0.1000, 1.0192, 1.0105],
         [0.1000, 1.0192, 1.0518],
         [0.1000, 1.0192, 1.0487],
         ...,
         [0.1000, 1.0192, 0.8831],
         [0.1000, 1.0192, 0.9672],
         [0.1000, 1.0192, 0.8428]],
        [[0.1000, 1.0270, 1.0193],
         [0.1000, 1.0270, 1.0682],
         [0.1000, 1.0270, 1.0648],
         ...,
         [0.1000, 1.0270, 0.9076],
         [0.1000, 1.0270, 0.9741],
         [0.1000, 1.0270, 0.8746]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 23.0801],
         [ 0.1000, 11.8247, 25.3005],
         [ 0.1000, 11.8247, 26.6852],
         ...,
         [ 0.1000, 11.8247, 18.9880],
         [ 0.1000, 11.8247, 25.0235],
         [ 0.1000, 11.8247, 18.6642]],
        [[ 0.1000, 10.3191, 20.7136],
         [ 0.1000, 10.3191, 21.5429],
         [ 0.1000, 10.3191, 22.6173],
         ...,
         [ 0.1000, 10.3191, 12.9804],
         [ 0.1000, 10.3191, 21.6491],
         [ 0.1000, 10.3191, 10.0776]],
        [[ 0.1000, 10.1465, 20.4381],
         [ 0.1000, 10.1465, 21.1184],
         [ 0.1000, 10.1465, 22.1589],
         ...,
         [ 0.1000, 10.1465, 12.3834],
         [ 0.1000, 10.1465, 21.2644],
         [ 0.1000, 10.1465,  9.3373]],
        ...,
        [[ 0.1000,  9.9364, 20.1011],
         [ 0.1000,  9.9364, 20.6031],
         [ 0.1000,  9.9364, 21.6029],
         ...,
         [ 0.1000,  9.9364, 11.6804],
         [ 0.1000,  9.9364, 20.7964],
         [ 0.1000,  9.9364,  8.4937]],
        [[ 0.1000, 10.4809, 20.9713],
         [ 0.1000, 10.4809, 21.9424],
         [ 0.1000, 10.4809, 23.0489],
         ...,
         [ 0.1000, 10.4809, 13.5571],
         [ 0.1000, 10.4809, 22.0105],
         [ 0.1000, 10.4809, 10.8130]],
        [[ 0.1000, 10.8472, 21.5513],
         [ 0.1000, 10.8472, 22.8504],
         [ 0.1000, 10.8472, 24.0306],
         ...,
         [ 0.1000, 10.8472, 14.9220],
         [ 0.1000, 10.8472, 22.8294],
         [ 0.1000, 10.8472, 12.6312]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0499],
         [0.1000, 1.0480, 1.0860],
         [0.1000, 1.0480, 1.1085],
         ...,
         [0.1000, 1.0480, 0.9833],
         [0.1000, 1.0480, 1.0815],
         [0.1000, 1.0480, 0.9780]],
        [[0.1000, 1.0157, 1.0114],
         [0.1000, 1.0157, 1.0249],
         [0.1000, 1.0157, 1.0423],
         ...,
         [0.1000, 1.0157, 0.8856],
         [0.1000, 1.0157, 1.0266],
         [0.1000, 1.0157, 0.8384]],
        [[0.1000, 1.0120, 1.0069],
         [0.1000, 1.0120, 1.0180],
         [0.1000, 1.0120, 1.0349],
         ...,
         [0.1000, 1.0120, 0.8759],
         [0.1000, 1.0120, 1.0203],
         [0.1000, 1.0120, 0.8263]],
        ...,
        [[0.1000, 1.0075, 1.0014],
         [0.1000, 1.0075, 1.0096],
         [0.1000, 1.0075, 1.0258],
         ...,
         [0.1000, 1.0075, 0.8645],
         [0.1000, 1.0075, 1.0127],
         [0.1000, 1.0075, 0.8126]],
        [[0.1000, 1.0192, 1.0156],
         [0.1000, 1.0192, 1.0314],
         [0.1000, 1.0192, 1.0494],
         ...,
         [0.1000, 1.0192, 0.8950],
         [0.1000, 1.0192, 1.0325],
         [0.1000, 1.0192, 0.8503]],
        [[0.1000, 1.0270, 1.0250],
         [0.1000, 1.0270, 1.0461],
         [0.1000, 1.0270, 1.0653],
         ...,
         [0.1000, 1.0270, 0.9172],
         [0.1000, 1.0270, 1.0458],
         [0.1000, 1.0270, 0.8799]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 24.8909],
         [ 0.1000, 11.8247, 25.3512],
         [ 0.1000, 11.8247, 26.9146],
         ...,
         [ 0.1000, 11.8247, 18.5459],
         [ 0.1000, 11.8247, 27.9860],
         [ 0.1000, 11.8247, 18.0586]],
        [[ 0.1000, 10.3191, 21.6833],
         [ 0.1000, 10.3191, 21.5854],
         [ 0.1000, 10.3191, 22.8381],
         ...,
         [ 0.1000, 10.3191, 14.4377],
         [ 0.1000, 10.3191, 23.6995],
         [ 0.1000, 10.3191, 10.2871]],
        [[ 0.1000, 10.1465, 21.3162],
         [ 0.1000, 10.1465, 21.1599],
         [ 0.1000, 10.1465, 22.3784],
         ...,
         [ 0.1000, 10.1465, 13.9970],
         [ 0.1000, 10.1465, 23.2167],
         [ 0.1000, 10.1465,  9.5949]],
        ...,
        [[ 0.1000,  9.9364, 20.8691],
         [ 0.1000,  9.9364, 20.6435],
         [ 0.1000,  9.9364, 21.8208],
         ...,
         [ 0.1000,  9.9364, 13.4687],
         [ 0.1000,  9.9364, 22.6312],
         [ 0.1000,  9.9364,  8.8002]],
        [[ 0.1000, 10.4809, 22.0279],
         [ 0.1000, 10.4809, 21.9858],
         [ 0.1000, 10.4809, 23.2708],
         ...,
         [ 0.1000, 10.4809, 14.8569],
         [ 0.1000, 10.4809, 24.1541],
         [ 0.1000, 10.4809, 10.9704]],
        [[ 0.1000, 10.8472, 22.8078],
         [ 0.1000, 10.8472, 22.8957],
         [ 0.1000, 10.8472, 24.2549],
         ...,
         [ 0.1000, 10.8472, 15.8253],
         [ 0.1000, 10.8472, 25.1883],
         [ 0.1000, 10.8472, 12.6432]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0859],
         [0.1000, 1.0480, 1.0934],
         [0.1000, 1.0480, 1.1188],
         ...,
         [0.1000, 1.0480, 0.9827],
         [0.1000, 1.0480, 1.1362],
         [0.1000, 1.0480, 0.9748]],
        [[0.1000, 1.0157, 1.0337],
         [0.1000, 1.0157, 1.0321],
         [0.1000, 1.0157, 1.0525],
         ...,
         [0.1000, 1.0157, 0.9159],
         [0.1000, 1.0157, 1.0665],
         [0.1000, 1.0157, 0.8484]],
        [[0.1000, 1.0120, 1.0277],
         [0.1000, 1.0120, 1.0252],
         [0.1000, 1.0120, 1.0450],
         ...,
         [0.1000, 1.0120, 0.9087],
         [0.1000, 1.0120, 1.0587],
         [0.1000, 1.0120, 0.8371]],
        ...,
        [[0.1000, 1.0075, 1.0205],
         [0.1000, 1.0075, 1.0168],
         [0.1000, 1.0075, 1.0360],
         ...,
         [0.1000, 1.0075, 0.9001],
         [0.1000, 1.0075, 1.0491],
         [0.1000, 1.0075, 0.8242]],
        [[0.1000, 1.0192, 1.0393],
         [0.1000, 1.0192, 1.0386],
         [0.1000, 1.0192, 1.0595],
         ...,
         [0.1000, 1.0192, 0.9227],
         [0.1000, 1.0192, 1.0739],
         [0.1000, 1.0192, 0.8595]],
        [[0.1000, 1.0270, 1.0520],
         [0.1000, 1.0270, 1.0534],
         [0.1000, 1.0270, 1.0755],
         ...,
         [0.1000, 1.0270, 0.9384],
         [0.1000, 1.0270, 1.0907],
         [0.1000, 1.0270, 0.8867]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 24.8491],
         [ 0.1000, 11.8247, 25.6873],
         [ 0.1000, 11.8247, 25.6692],
         ...,
         [ 0.1000, 11.8247, 20.2465],
         [ 0.1000, 11.8247, 28.6217],
         [ 0.1000, 11.8247, 17.6882]],
        [[ 0.1000, 10.3191, 21.1988],
         [ 0.1000, 10.3191, 21.7926],
         [ 0.1000, 10.3191, 21.8852],
         ...,
         [ 0.1000, 10.3191, 16.8128],
         [ 0.1000, 10.3191, 24.2228],
         [ 0.1000, 10.3191, 10.4415]],
        [[ 0.1000, 10.1465, 20.7860],
         [ 0.1000, 10.1465, 21.3535],
         [ 0.1000, 10.1465, 21.4574],
         ...,
         [ 0.1000, 10.1465, 16.4304],
         [ 0.1000, 10.1465, 23.7276],
         [ 0.1000, 10.1465,  9.7819]],
        ...,
        [[ 0.1000,  9.9364, 20.2847],
         [ 0.1000,  9.9364, 20.8207],
         [ 0.1000,  9.9364, 20.9380],
         ...,
         [ 0.1000,  9.9364, 15.9679],
         [ 0.1000,  9.9364, 23.1270],
         [ 0.1000,  9.9364,  9.0209]],
        [[ 0.1000, 10.4809, 21.5872],
         [ 0.1000, 10.4809, 22.2060],
         [ 0.1000, 10.4809, 22.2877],
         ...,
         [ 0.1000, 10.4809, 17.1737],
         [ 0.1000, 10.4809, 24.6892],
         [ 0.1000, 10.4809, 11.0899]],
        [[ 0.1000, 10.8472, 22.4697],
         [ 0.1000, 10.8472, 23.1461],
         [ 0.1000, 10.8472, 23.2024],
         ...,
         [ 0.1000, 10.8472, 17.9977],
         [ 0.1000, 10.8472, 25.7504],
         [ 0.1000, 10.8472, 12.6665]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0899],
         [0.1000, 1.0480, 1.1036],
         [0.1000, 1.0480, 1.1033],
         ...,
         [0.1000, 1.0480, 1.0151],
         [0.1000, 1.0480, 1.1513],
         [0.1000, 1.0480, 0.9735]],
        [[0.1000, 1.0157, 1.0306],
         [0.1000, 1.0157, 1.0402],
         [0.1000, 1.0157, 1.0417],
         ...,
         [0.1000, 1.0157, 0.9592],
         [0.1000, 1.0157, 1.0798],
         [0.1000, 1.0157, 0.8556]],
        [[0.1000, 1.0120, 1.0239],
         [0.1000, 1.0120, 1.0331],
         [0.1000, 1.0120, 1.0348],
         ...,
         [0.1000, 1.0120, 0.9530],
         [0.1000, 1.0120, 1.0717],
         [0.1000, 1.0120, 0.8449]],
        ...,
        [[0.1000, 1.0075, 1.0157],
         [0.1000, 1.0075, 1.0244],
         [0.1000, 1.0075, 1.0263],
         ...,
         [0.1000, 1.0075, 0.9455],
         [0.1000, 1.0075, 1.0619],
         [0.1000, 1.0075, 0.8325]],
        [[0.1000, 1.0192, 1.0369],
         [0.1000, 1.0192, 1.0470],
         [0.1000, 1.0192, 1.0483],
         ...,
         [0.1000, 1.0192, 0.9651],
         [0.1000, 1.0192, 1.0873],
         [0.1000, 1.0192, 0.8662]],
        [[0.1000, 1.0270, 1.0512],
         [0.1000, 1.0270, 1.0622],
         [0.1000, 1.0270, 1.0632],
         ...,
         [0.1000, 1.0270, 0.9785],
         [0.1000, 1.0270, 1.1046],
         [0.1000, 1.0270, 0.8918]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 26.8195],
         [ 0.1000, 11.8247, 25.9467],
         [ 0.1000, 11.8247, 24.2625],
         ...,
         [ 0.1000, 11.8247, 32.8238],
         [ 0.1000, 11.8247, 27.3252],
         [ 0.1000, 11.8247, 17.2178]],
        [[ 0.1000, 10.3191, 22.8270],
         [ 0.1000, 10.3191, 22.3288],
         [ 0.1000, 10.3191, 20.7860],
         ...,
         [ 0.1000, 10.3191, 29.3962],
         [ 0.1000, 10.3191, 23.4538],
         [ 0.1000, 10.3191, 10.6785]],
        [[ 0.1000, 10.1465, 22.3761],
         [ 0.1000, 10.1465, 21.9176],
         [ 0.1000, 10.1465, 20.3918],
         ...,
         [ 0.1000, 10.1465, 28.9976],
         [ 0.1000, 10.1465, 23.0144],
         [ 0.1000, 10.1465, 10.0654]],
        ...,
        [[ 0.1000,  9.9364, 21.8287],
         [ 0.1000,  9.9364, 21.4177],
         [ 0.1000,  9.9364, 19.9130],
         ...,
         [ 0.1000,  9.9364, 28.5103],
         [ 0.1000,  9.9364, 22.4804],
         [ 0.1000,  9.9364,  9.3530]],
        [[ 0.1000, 10.4809, 23.2514],
         [ 0.1000, 10.4809, 22.7154],
         [ 0.1000, 10.4809, 21.1566],
         ...,
         [ 0.1000, 10.4809, 29.7691],
         [ 0.1000, 10.4809, 23.8669],
         [ 0.1000, 10.4809, 11.2777]],
        [[ 0.1000, 10.8472, 24.2160],
         [ 0.1000, 10.8472, 23.5921],
         [ 0.1000, 10.8472, 21.9981],
         ...,
         [ 0.1000, 10.8472, 30.6087],
         [ 0.1000, 10.8472, 24.8044],
         [ 0.1000, 10.8472, 12.7216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.1291],
         [0.1000, 1.0480, 1.1149],
         [0.1000, 1.0480, 1.0875],
         ...,
         [0.1000, 1.0480, 1.2268],
         [0.1000, 1.0480, 1.1374],
         [0.1000, 1.0480, 0.9730]],
        [[0.1000, 1.0157, 1.0642],
         [0.1000, 1.0157, 1.0561],
         [0.1000, 1.0157, 1.0310],
         ...,
         [0.1000, 1.0157, 1.1710],
         [0.1000, 1.0157, 1.0744],
         [0.1000, 1.0157, 0.8666]],
        [[0.1000, 1.0120, 1.0569],
         [0.1000, 1.0120, 1.0494],
         [0.1000, 1.0120, 1.0246],
         ...,
         [0.1000, 1.0120, 1.1646],
         [0.1000, 1.0120, 1.0672],
         [0.1000, 1.0120, 0.8566]],
        ...,
        [[0.1000, 1.0075, 1.0480],
         [0.1000, 1.0075, 1.0413],
         [0.1000, 1.0075, 1.0168],
         ...,
         [0.1000, 1.0075, 1.1566],
         [0.1000, 1.0075, 1.0586],
         [0.1000, 1.0075, 0.8450]],
        [[0.1000, 1.0192, 1.0711],
         [0.1000, 1.0192, 1.0624],
         [0.1000, 1.0192, 1.0370],
         ...,
         [0.1000, 1.0192, 1.1771],
         [0.1000, 1.0192, 1.0811],
         [0.1000, 1.0192, 0.8764]],
        [[0.1000, 1.0270, 1.0868],
         [0.1000, 1.0270, 1.0766],
         [0.1000, 1.0270, 1.0507],
         ...,
         [0.1000, 1.0270, 1.1908],
         [0.1000, 1.0270, 1.0964],
         [0.1000, 1.0270, 0.8998]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.6405],
         [ 0.1000, 11.8247, 25.8628],
         [ 0.1000, 11.8247, 25.1673],
         ...,
         [ 0.1000, 11.8247, 23.0265],
         [ 0.1000, 11.8247, 28.2111],
         [ 0.1000, 11.8247, 17.5160]],
        [[ 0.1000, 10.3191, 21.7591],
         [ 0.1000, 10.3191, 21.9731],
         [ 0.1000, 10.3191, 21.4925],
         ...,
         [ 0.1000, 10.3191, 20.3610],
         [ 0.1000, 10.3191, 23.9531],
         [ 0.1000, 10.3191, 10.5221]],
        [[ 0.1000, 10.1465, 21.3214],
         [ 0.1000, 10.1465, 21.5342],
         [ 0.1000, 10.1465, 21.0766],
         ...,
         [ 0.1000, 10.1465, 20.0533],
         [ 0.1000, 10.1465, 23.4729],
         [ 0.1000, 10.1465,  9.8788]],
        ...,
        [[ 0.1000,  9.9364, 20.7904],
         [ 0.1000,  9.9364, 21.0017],
         [ 0.1000,  9.9364, 20.5716],
         ...,
         [ 0.1000,  9.9364, 19.6778],
         [ 0.1000,  9.9364, 22.8901],
         [ 0.1000,  9.9364,  9.1348]],
        [[ 0.1000, 10.4809, 22.1711],
         [ 0.1000, 10.4809, 22.3862],
         [ 0.1000, 10.4809, 21.8837],
         ...,
         [ 0.1000, 10.4809, 20.6493],
         [ 0.1000, 10.4809, 24.4052],
         [ 0.1000, 10.4809, 11.1532]],
        [[ 0.1000, 10.8472, 23.1081],
         [ 0.1000, 10.8472, 23.3256],
         [ 0.1000, 10.8472, 22.7724],
         ...,
         [ 0.1000, 10.8472, 21.3000],
         [ 0.1000, 10.8472, 25.4333],
         [ 0.1000, 10.8472, 12.6829]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.1053],
         [0.1000, 1.0480, 1.1089],
         [0.1000, 1.0480, 1.0976],
         ...,
         [0.1000, 1.0480, 1.0627],
         [0.1000, 1.0480, 1.1471],
         [0.1000, 1.0480, 0.9731]],
        [[0.1000, 1.0157, 1.0421],
         [0.1000, 1.0157, 1.0456],
         [0.1000, 1.0157, 1.0378],
         ...,
         [0.1000, 1.0157, 1.0194],
         [0.1000, 1.0157, 1.0778],
         [0.1000, 1.0157, 0.8594]],
        [[0.1000, 1.0120, 1.0350],
         [0.1000, 1.0120, 1.0385],
         [0.1000, 1.0120, 1.0310],
         ...,
         [0.1000, 1.0120, 1.0144],
         [0.1000, 1.0120, 1.0700],
         [0.1000, 1.0120, 0.8489]],
        ...,
        [[0.1000, 1.0075, 1.0264],
         [0.1000, 1.0075, 1.0298],
         [0.1000, 1.0075, 1.0228],
         ...,
         [0.1000, 1.0075, 1.0083],
         [0.1000, 1.0075, 1.0605],
         [0.1000, 1.0075, 0.8368]],
        [[0.1000, 1.0192, 1.0488],
         [0.1000, 1.0192, 1.0523],
         [0.1000, 1.0192, 1.0442],
         ...,
         [0.1000, 1.0192, 1.0241],
         [0.1000, 1.0192, 1.0852],
         [0.1000, 1.0192, 0.8696]],
        [[0.1000, 1.0270, 1.0641],
         [0.1000, 1.0270, 1.0676],
         [0.1000, 1.0270, 1.0586],
         ...,
         [0.1000, 1.0270, 1.0347],
         [0.1000, 1.0270, 1.1019],
         [0.1000, 1.0270, 0.8945]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.3419],
         [ 0.1000, 11.8247, 25.6255],
         [ 0.1000, 11.8247, 24.8226],
         ...,
         [ 0.1000, 11.8247, 25.1678],
         [ 0.1000, 11.8247, 26.2793],
         [ 0.1000, 11.8247, 17.6148]],
        [[ 0.1000, 10.3191, 21.5061],
         [ 0.1000, 10.3191, 21.9072],
         [ 0.1000, 10.3191, 21.2625],
         ...,
         [ 0.1000, 10.3191, 22.1310],
         [ 0.1000, 10.3191, 22.3598],
         [ 0.1000, 10.3191, 10.4751]],
        [[ 0.1000, 10.1465, 21.0735],
         [ 0.1000, 10.1465, 21.4861],
         [ 0.1000, 10.1465, 20.8589],
         ...,
         [ 0.1000, 10.1465, 21.7815],
         [ 0.1000, 10.1465, 21.9172],
         [ 0.1000, 10.1465,  9.8224]],
        ...,
        [[ 0.1000,  9.9364, 20.5488],
         [ 0.1000,  9.9364, 20.9748],
         [ 0.1000,  9.9364, 20.3687],
         ...,
         [ 0.1000,  9.9364, 21.3554],
         [ 0.1000,  9.9364, 21.3800],
         [ 0.1000,  9.9364,  9.0685]],
        [[ 0.1000, 10.4809, 21.9133],
         [ 0.1000, 10.4809, 22.3032],
         [ 0.1000, 10.4809, 21.6421],
         ...,
         [ 0.1000, 10.4809, 22.4586],
         [ 0.1000, 10.4809, 22.7764],
         [ 0.1000, 10.4809, 11.1162]],
        [[ 0.1000, 10.8472, 22.8393],
         [ 0.1000, 10.8472, 23.2027],
         [ 0.1000, 10.8472, 22.5037],
         ...,
         [ 0.1000, 10.8472, 23.1989],
         [ 0.1000, 10.8472, 23.7233],
         [ 0.1000, 10.8472, 12.6730]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0990],
         [0.1000, 1.0480, 1.1036],
         [0.1000, 1.0480, 1.0905],
         ...,
         [0.1000, 1.0480, 1.0962],
         [0.1000, 1.0480, 1.1142],
         [0.1000, 1.0480, 0.9733]],
        [[0.1000, 1.0157, 1.0366],
         [0.1000, 1.0157, 1.0431],
         [0.1000, 1.0157, 1.0326],
         ...,
         [0.1000, 1.0157, 1.0468],
         [0.1000, 1.0157, 1.0505],
         [0.1000, 1.0157, 0.8572]],
        [[0.1000, 1.0120, 1.0296],
         [0.1000, 1.0120, 1.0363],
         [0.1000, 1.0120, 1.0261],
         ...,
         [0.1000, 1.0120, 1.0411],
         [0.1000, 1.0120, 1.0433],
         [0.1000, 1.0120, 0.8466]],
        ...,
        [[0.1000, 1.0075, 1.0210],
         [0.1000, 1.0075, 1.0280],
         [0.1000, 1.0075, 1.0181],
         ...,
         [0.1000, 1.0075, 1.0341],
         [0.1000, 1.0075, 1.0345],
         [0.1000, 1.0075, 0.8343]],
        [[0.1000, 1.0192, 1.0432],
         [0.1000, 1.0192, 1.0496],
         [0.1000, 1.0192, 1.0388],
         ...,
         [0.1000, 1.0192, 1.0521],
         [0.1000, 1.0192, 1.0573],
         [0.1000, 1.0192, 0.8676]],
        [[0.1000, 1.0270, 1.0583],
         [0.1000, 1.0270, 1.0642],
         [0.1000, 1.0270, 1.0528],
         ...,
         [0.1000, 1.0270, 1.0641],
         [0.1000, 1.0270, 1.0727],
         [0.1000, 1.0270, 0.8929]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.8051],
         [ 0.1000, 11.8247, 25.3510],
         [ 0.1000, 11.8247, 25.0778],
         ...,
         [ 0.1000, 11.8247, 24.7309],
         [ 0.1000, 11.8247, 25.2828],
         [ 0.1000, 11.8247, 17.8230]],
        [[ 0.1000, 10.3191, 21.9238],
         [ 0.1000, 10.3191, 21.6931],
         [ 0.1000, 10.3191, 21.4814],
         ...,
         [ 0.1000, 10.3191, 21.3959],
         [ 0.1000, 10.3191, 21.5156],
         [ 0.1000, 10.3191, 10.3825]],
        [[ 0.1000, 10.1465, 21.4858],
         [ 0.1000, 10.1465, 21.2787],
         [ 0.1000, 10.1465, 21.0737],
         ...,
         [ 0.1000, 10.1465, 21.0157],
         [ 0.1000, 10.1465, 21.0901],
         [ 0.1000, 10.1465,  9.7108]],
        ...,
        [[ 0.1000,  9.9364, 20.9544],
         [ 0.1000,  9.9364, 20.7753],
         [ 0.1000,  9.9364, 20.5784],
         ...,
         [ 0.1000,  9.9364, 20.5531],
         [ 0.1000,  9.9364, 20.5737],
         [ 0.1000,  9.9364,  8.9371]],
        [[ 0.1000, 10.4809, 22.3360],
         [ 0.1000, 10.4809, 22.0829],
         [ 0.1000, 10.4809, 21.8648],
         ...,
         [ 0.1000, 10.4809, 21.7531],
         [ 0.1000, 10.4809, 21.9160],
         [ 0.1000, 10.4809, 11.0439]],
        [[ 0.1000, 10.8472, 23.2733],
         [ 0.1000, 10.8472, 22.9679],
         [ 0.1000, 10.8472, 22.7353],
         ...,
         [ 0.1000, 10.8472, 22.5624],
         [ 0.1000, 10.8472, 22.8262],
         [ 0.1000, 10.8472, 12.6563]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.1037],
         [0.1000, 1.0480, 1.0963],
         [0.1000, 1.0480, 1.0919],
         ...,
         [0.1000, 1.0480, 1.0862],
         [0.1000, 1.0480, 1.0952],
         [0.1000, 1.0480, 0.9739]],
        [[0.1000, 1.0157, 1.0406],
         [0.1000, 1.0157, 1.0368],
         [0.1000, 1.0157, 1.0334],
         ...,
         [0.1000, 1.0157, 1.0320],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 0.8529]],
        [[0.1000, 1.0120, 1.0334],
         [0.1000, 1.0120, 1.0301],
         [0.1000, 1.0120, 1.0267],
         ...,
         [0.1000, 1.0120, 1.0258],
         [0.1000, 1.0120, 1.0270],
         [0.1000, 1.0120, 0.8419]],
        ...,
        [[0.1000, 1.0075, 1.0248],
         [0.1000, 1.0075, 1.0219],
         [0.1000, 1.0075, 1.0187],
         ...,
         [0.1000, 1.0075, 1.0183],
         [0.1000, 1.0075, 1.0186],
         [0.1000, 1.0075, 0.8293]],
        [[0.1000, 1.0192, 1.0473],
         [0.1000, 1.0192, 1.0432],
         [0.1000, 1.0192, 1.0396],
         ...,
         [0.1000, 1.0192, 1.0378],
         [0.1000, 1.0192, 1.0404],
         [0.1000, 1.0192, 0.8636]],
        [[0.1000, 1.0270, 1.0625],
         [0.1000, 1.0270, 1.0576],
         [0.1000, 1.0270, 1.0538],
         ...,
         [0.1000, 1.0270, 1.0510],
         [0.1000, 1.0270, 1.0552],
         [0.1000, 1.0270, 0.8898]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.7909],
         [ 0.1000, 11.8247, 25.1756],
         [ 0.1000, 11.8247, 25.2159],
         ...,
         [ 0.1000, 11.8247, 25.1531],
         [ 0.1000, 11.8247, 25.1407],
         [ 0.1000, 11.8247, 17.9242]],
        [[ 0.1000, 10.3191, 21.9531],
         [ 0.1000, 10.3191, 21.5533],
         [ 0.1000, 10.3191, 21.6279],
         ...,
         [ 0.1000, 10.3191, 21.5641],
         [ 0.1000, 10.3191, 21.4697],
         [ 0.1000, 10.3191, 10.3404]],
        [[ 0.1000, 10.1465, 21.5196],
         [ 0.1000, 10.1465, 21.1427],
         [ 0.1000, 10.1465, 21.2208],
         ...,
         [ 0.1000, 10.1465, 21.1570],
         [ 0.1000, 10.1465, 21.0543],
         [ 0.1000, 10.1465,  9.6597]],
        ...,
        [[ 0.1000,  9.9364, 20.9934],
         [ 0.1000,  9.9364, 20.6441],
         [ 0.1000,  9.9364, 20.7262],
         ...,
         [ 0.1000,  9.9364, 20.6624],
         [ 0.1000,  9.9364, 20.5498],
         [ 0.1000,  9.9364,  8.8769]],
        [[ 0.1000, 10.4809, 22.3611],
         [ 0.1000, 10.4809, 21.9393],
         [ 0.1000, 10.4809, 22.0106],
         ...,
         [ 0.1000, 10.4809, 21.9468],
         [ 0.1000, 10.4809, 21.8605],
         [ 0.1000, 10.4809, 11.0114]],
        [[ 0.1000, 10.8472, 23.2884],
         [ 0.1000, 10.8472, 22.8159],
         [ 0.1000, 10.8472, 22.8793],
         ...,
         [ 0.1000, 10.8472, 22.8157],
         [ 0.1000, 10.8472, 22.7483],
         [ 0.1000, 10.8472, 12.6500]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.1022],
         [0.1000, 1.0480, 1.0922],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0918],
         [0.1000, 1.0480, 1.0916],
         [0.1000, 1.0480, 0.9742]],
        [[0.1000, 1.0157, 1.0398],
         [0.1000, 1.0157, 1.0332],
         [0.1000, 1.0157, 1.0345],
         ...,
         [0.1000, 1.0157, 1.0334],
         [0.1000, 1.0157, 1.0319],
         [0.1000, 1.0157, 0.8509]],
        [[0.1000, 1.0120, 1.0327],
         [0.1000, 1.0120, 1.0266],
         [0.1000, 1.0120, 1.0278],
         ...,
         [0.1000, 1.0120, 1.0268],
         [0.1000, 1.0120, 1.0251],
         [0.1000, 1.0120, 0.8398]],
        ...,
        [[0.1000, 1.0075, 1.0241],
         [0.1000, 1.0075, 1.0185],
         [0.1000, 1.0075, 1.0198],
         ...,
         [0.1000, 1.0075, 1.0188],
         [0.1000, 1.0075, 1.0169],
         [0.1000, 1.0075, 0.8271]],
        [[0.1000, 1.0192, 1.0464],
         [0.1000, 1.0192, 1.0395],
         [0.1000, 1.0192, 1.0407],
         ...,
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 1.0382],
         [0.1000, 1.0192, 0.8618]],
        [[0.1000, 1.0270, 1.0615],
         [0.1000, 1.0270, 1.0538],
         [0.1000, 1.0270, 1.0548],
         ...,
         [0.1000, 1.0270, 1.0538],
         [0.1000, 1.0270, 1.0527],
         [0.1000, 1.0270, 0.8884]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.4147],
         [ 0.1000, 11.8247, 25.3408],
         [ 0.1000, 11.8247, 25.3319],
         ...,
         [ 0.1000, 11.8247, 25.3586],
         [ 0.1000, 11.8247, 25.3195],
         [ 0.1000, 11.8247, 17.9489]],
        [[ 0.1000, 10.3191, 21.7152],
         [ 0.1000, 10.3191, 21.6726],
         [ 0.1000, 10.3191, 21.6586],
         ...,
         [ 0.1000, 10.3191, 21.6651],
         [ 0.1000, 10.3191, 21.6646],
         [ 0.1000, 10.3191, 10.3304]],
        [[ 0.1000, 10.1465, 21.2964],
         [ 0.1000, 10.1465, 21.2572],
         [ 0.1000, 10.1465, 21.2427],
         ...,
         [ 0.1000, 10.1465, 21.2470],
         [ 0.1000, 10.1465, 21.2505],
         [ 0.1000, 10.1465,  9.6476]],
        ...,
        [[ 0.1000,  9.9364, 20.7878],
         [ 0.1000,  9.9364, 20.7525],
         [ 0.1000,  9.9364, 20.7374],
         ...,
         [ 0.1000,  9.9364, 20.7392],
         [ 0.1000,  9.9364, 20.7475],
         [ 0.1000,  9.9364,  8.8625]],
        [[ 0.1000, 10.4809, 22.1091],
         [ 0.1000, 10.4809, 22.0634],
         [ 0.1000, 10.4809, 22.0499],
         ...,
         [ 0.1000, 10.4809, 22.0583],
         [ 0.1000, 10.4809, 22.0540],
         [ 0.1000, 10.4809, 11.0037]],
        [[ 0.1000, 10.8472, 23.0039],
         [ 0.1000, 10.8472, 22.9508],
         [ 0.1000, 10.8472, 22.9385],
         ...,
         [ 0.1000, 10.8472, 22.9517],
         [ 0.1000, 10.8472, 22.9384],
         [ 0.1000, 10.8472, 12.6486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0957],
         [0.1000, 1.0480, 1.0945],
         [0.1000, 1.0480, 1.0944],
         ...,
         [0.1000, 1.0480, 1.0948],
         [0.1000, 1.0480, 1.0942],
         [0.1000, 1.0480, 0.9743]],
        [[0.1000, 1.0157, 1.0356],
         [0.1000, 1.0157, 1.0349],
         [0.1000, 1.0157, 1.0347],
         ...,
         [0.1000, 1.0157, 1.0348],
         [0.1000, 1.0157, 1.0347],
         [0.1000, 1.0157, 0.8504]],
        [[0.1000, 1.0120, 1.0288],
         [0.1000, 1.0120, 1.0281],
         [0.1000, 1.0120, 1.0279],
         ...,
         [0.1000, 1.0120, 1.0280],
         [0.1000, 1.0120, 1.0280],
         [0.1000, 1.0120, 0.8393]],
        ...,
        [[0.1000, 1.0075, 1.0205],
         [0.1000, 1.0075, 1.0199],
         [0.1000, 1.0075, 1.0197],
         ...,
         [0.1000, 1.0075, 1.0197],
         [0.1000, 1.0075, 1.0198],
         [0.1000, 1.0075, 0.8265]],
        [[0.1000, 1.0192, 1.0420],
         [0.1000, 1.0192, 1.0412],
         [0.1000, 1.0192, 1.0410],
         ...,
         [0.1000, 1.0192, 1.0412],
         [0.1000, 1.0192, 1.0411],
         [0.1000, 1.0192, 0.8614]],
        [[0.1000, 1.0270, 1.0565],
         [0.1000, 1.0270, 1.0557],
         [0.1000, 1.0270, 1.0555],
         ...,
         [0.1000, 1.0270, 1.0557],
         [0.1000, 1.0270, 1.0555],
         [0.1000, 1.0270, 0.8881]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.4939],
         [ 0.1000, 11.8247, 25.2795],
         [ 0.1000, 11.8247, 25.2594],
         ...,
         [ 0.1000, 11.8247, 25.1449],
         [ 0.1000, 11.8247, 25.2406],
         [ 0.1000, 11.8247, 17.9657]],
        [[ 0.1000, 10.3191, 21.7592],
         [ 0.1000, 10.3191, 21.6344],
         [ 0.1000, 10.3191, 21.6253],
         ...,
         [ 0.1000, 10.3191, 21.4967],
         [ 0.1000, 10.3191, 21.5967],
         [ 0.1000, 10.3191, 10.3237]],
        [[ 0.1000, 10.1465, 21.3367],
         [ 0.1000, 10.1465, 21.2214],
         [ 0.1000, 10.1465, 21.2135],
         ...,
         [ 0.1000, 10.1465, 21.0836],
         [ 0.1000, 10.1465, 21.1838],
         [ 0.1000, 10.1465,  9.6394]],
        ...,
        [[ 0.1000,  9.9364, 20.8236],
         [ 0.1000,  9.9364, 20.7197],
         [ 0.1000,  9.9364, 20.7132],
         ...,
         [ 0.1000,  9.9364, 20.5819],
         [ 0.1000,  9.9364, 20.6824],
         [ 0.1000,  9.9364,  8.8528]],
        [[ 0.1000, 10.4809, 22.1567],
         [ 0.1000, 10.4809, 22.0228],
         [ 0.1000, 10.4809, 22.0127],
         ...,
         [ 0.1000, 10.4809, 21.8853],
         [ 0.1000, 10.4809, 21.9849],
         [ 0.1000, 10.4809, 10.9985]],
        [[ 0.1000, 10.8472, 23.0597],
         [ 0.1000, 10.8472, 22.9049],
         [ 0.1000, 10.8472, 22.8921],
         ...,
         [ 0.1000, 10.8472, 22.7678],
         [ 0.1000, 10.8472, 22.8666],
         [ 0.1000, 10.8472, 12.6477]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0968],
         [0.1000, 1.0480, 1.0933],
         [0.1000, 1.0480, 1.0930],
         ...,
         [0.1000, 1.0480, 1.0911],
         [0.1000, 1.0480, 1.0927],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0341],
         [0.1000, 1.0157, 1.0339],
         ...,
         [0.1000, 1.0157, 1.0318],
         [0.1000, 1.0157, 1.0334],
         [0.1000, 1.0157, 0.8501]],
        [[0.1000, 1.0120, 1.0292],
         [0.1000, 1.0120, 1.0273],
         [0.1000, 1.0120, 1.0272],
         ...,
         [0.1000, 1.0120, 1.0251],
         [0.1000, 1.0120, 1.0267],
         [0.1000, 1.0120, 0.8390]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0192],
         [0.1000, 1.0075, 1.0191],
         ...,
         [0.1000, 1.0075, 1.0169],
         [0.1000, 1.0075, 1.0186],
         [0.1000, 1.0075, 0.8262]],
        [[0.1000, 1.0192, 1.0425],
         [0.1000, 1.0192, 1.0404],
         [0.1000, 1.0192, 1.0402],
         ...,
         [0.1000, 1.0192, 1.0381],
         [0.1000, 1.0192, 1.0398],
         [0.1000, 1.0192, 0.8611]],
        [[0.1000, 1.0270, 1.0572],
         [0.1000, 1.0270, 1.0547],
         [0.1000, 1.0270, 1.0545],
         ...,
         [0.1000, 1.0270, 1.0525],
         [0.1000, 1.0270, 1.0541],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5031],
         [ 0.1000, 11.8247, 25.2723],
         [ 0.1000, 11.8247, 25.2508],
         ...,
         [ 0.1000, 11.8247, 25.1199],
         [ 0.1000, 11.8247, 25.2314],
         [ 0.1000, 11.8247, 17.9676]],
        [[ 0.1000, 10.3191, 21.7643],
         [ 0.1000, 10.3191, 21.6299],
         [ 0.1000, 10.3191, 21.6214],
         ...,
         [ 0.1000, 10.3191, 21.4770],
         [ 0.1000, 10.3191, 21.5887],
         [ 0.1000, 10.3191, 10.3229]],
        [[ 0.1000, 10.1465, 21.3414],
         [ 0.1000, 10.1465, 21.2172],
         [ 0.1000, 10.1465, 21.2101],
         ...,
         [ 0.1000, 10.1465, 21.0645],
         [ 0.1000, 10.1465, 21.1760],
         [ 0.1000, 10.1465,  9.6384]],
        ...,
        [[ 0.1000,  9.9364, 20.8279],
         [ 0.1000,  9.9364, 20.7158],
         [ 0.1000,  9.9364, 20.7104],
         ...,
         [ 0.1000,  9.9364, 20.5635],
         [ 0.1000,  9.9364, 20.6748],
         [ 0.1000,  9.9364,  8.8517]],
        [[ 0.1000, 10.4809, 22.1622],
         [ 0.1000, 10.4809, 22.0181],
         [ 0.1000, 10.4809, 22.0083],
         ...,
         [ 0.1000, 10.4809, 21.8651],
         [ 0.1000, 10.4809, 21.9769],
         [ 0.1000, 10.4809, 10.9979]],
        [[ 0.1000, 10.8472, 23.0662],
         [ 0.1000, 10.8472, 22.8995],
         [ 0.1000, 10.8472, 22.8866],
         ...,
         [ 0.1000, 10.8472, 22.7463],
         [ 0.1000, 10.8472, 22.8582],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0969],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0340],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0315],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0248],
         [0.1000, 1.0120, 1.0266],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0378],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5043],
         [ 0.1000, 11.8247, 25.2714],
         [ 0.1000, 11.8247, 25.2496],
         ...,
         [ 0.1000, 11.8247, 25.1166],
         [ 0.1000, 11.8247, 25.2301],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7650],
         [ 0.1000, 10.3191, 21.6293],
         [ 0.1000, 10.3191, 21.6209],
         ...,
         [ 0.1000, 10.3191, 21.4744],
         [ 0.1000, 10.3191, 21.5877],
         [ 0.1000, 10.3191, 10.3228]],
        [[ 0.1000, 10.1465, 21.3420],
         [ 0.1000, 10.1465, 21.2166],
         [ 0.1000, 10.1465, 21.2096],
         ...,
         [ 0.1000, 10.1465, 21.0620],
         [ 0.1000, 10.1465, 21.1750],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8284],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7100],
         ...,
         [ 0.1000,  9.9364, 20.5610],
         [ 0.1000,  9.9364, 20.6738],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1630],
         [ 0.1000, 10.4809, 22.0174],
         [ 0.1000, 10.4809, 22.0077],
         ...,
         [ 0.1000, 10.4809, 21.8624],
         [ 0.1000, 10.4809, 21.9758],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0671],
         [ 0.1000, 10.8472, 22.8987],
         [ 0.1000, 10.8472, 22.8859],
         ...,
         [ 0.1000, 10.8472, 22.7435],
         [ 0.1000, 10.8472, 22.8571],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0266],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1162],
         [ 0.1000, 11.8247, 25.2300],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4741],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3228]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2166],
         [ 0.1000, 10.1465, 21.2096],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1749],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0174],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7431],
         [ 0.1000, 10.8472, 22.8570],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.4209],
         [ 0.1000, 11.8247, 25.3011],
         [ 0.1000, 11.8247, 25.2792],
         ...,
         [ 0.1000, 11.8247, 25.3957],
         [ 0.1000, 11.8247, 25.3262],
         [ 0.1000, 11.8247, 17.9287]],
        [[ 0.1000, 10.3191, 21.7054],
         [ 0.1000, 10.3191, 21.6440],
         [ 0.1000, 10.3191, 21.6303],
         ...,
         [ 0.1000, 10.3191, 21.7313],
         [ 0.1000, 10.3191, 21.6671],
         [ 0.1000, 10.3191, 10.3386]],
        [[ 0.1000, 10.1465, 21.2849],
         [ 0.1000, 10.1465, 21.2298],
         [ 0.1000, 10.1465, 21.2170],
         ...,
         [ 0.1000, 10.1465, 21.3162],
         [ 0.1000, 10.1465, 21.2525],
         [ 0.1000, 10.1465,  9.6575]],
        ...,
        [[ 0.1000,  9.9364, 20.7744],
         [ 0.1000,  9.9364, 20.7266],
         [ 0.1000,  9.9364, 20.7148],
         ...,
         [ 0.1000,  9.9364, 20.8119],
         [ 0.1000,  9.9364, 20.7490],
         [ 0.1000,  9.9364,  8.8742]],
        [[ 0.1000, 10.4809, 22.1009],
         [ 0.1000, 10.4809, 22.0337],
         [ 0.1000, 10.4809, 22.0192],
         ...,
         [ 0.1000, 10.4809, 22.1218],
         [ 0.1000, 10.4809, 22.0569],
         [ 0.1000, 10.4809, 11.0099]],
        [[ 0.1000, 10.8472, 22.9994],
         [ 0.1000, 10.8472, 22.9185],
         [ 0.1000, 10.8472, 22.9020],
         ...,
         [ 0.1000, 10.8472, 23.0084],
         [ 0.1000, 10.8472, 22.9423],
         [ 0.1000, 10.8472, 12.6497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0961],
         [0.1000, 1.0480, 1.0941],
         [0.1000, 1.0480, 1.0938],
         ...,
         [0.1000, 1.0480, 1.0957],
         [0.1000, 1.0480, 1.0946],
         [0.1000, 1.0480, 0.9742]],
        [[0.1000, 1.0157, 1.0357],
         [0.1000, 1.0157, 1.0347],
         [0.1000, 1.0157, 1.0344],
         ...,
         [0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0350],
         [0.1000, 1.0157, 0.8508]],
        [[0.1000, 1.0120, 1.0288],
         [0.1000, 1.0120, 1.0279],
         [0.1000, 1.0120, 1.0277],
         ...,
         [0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0283],
         [0.1000, 1.0120, 0.8397]],
        ...,
        [[0.1000, 1.0075, 1.0205],
         [0.1000, 1.0075, 1.0197],
         [0.1000, 1.0075, 1.0196],
         ...,
         [0.1000, 1.0075, 1.0211],
         [0.1000, 1.0075, 1.0201],
         [0.1000, 1.0075, 0.8270]],
        [[0.1000, 1.0192, 1.0421],
         [0.1000, 1.0192, 1.0410],
         [0.1000, 1.0192, 1.0408],
         ...,
         [0.1000, 1.0192, 1.0424],
         [0.1000, 1.0192, 1.0414],
         [0.1000, 1.0192, 0.8617]],
        [[0.1000, 1.0270, 1.0567],
         [0.1000, 1.0270, 1.0554],
         [0.1000, 1.0270, 1.0551],
         ...,
         [0.1000, 1.0270, 1.0569],
         [0.1000, 1.0270, 1.0558],
         [0.1000, 1.0270, 0.8884]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5002],
         [ 0.1000, 11.8247, 25.2728],
         [ 0.1000, 11.8247, 25.2510],
         ...,
         [ 0.1000, 11.8247, 25.1304],
         [ 0.1000, 11.8247, 25.2349],
         [ 0.1000, 11.8247, 17.9659]],
        [[ 0.1000, 10.3191, 21.7621],
         [ 0.1000, 10.3191, 21.6300],
         [ 0.1000, 10.3191, 21.6213],
         ...,
         [ 0.1000, 10.3191, 21.4871],
         [ 0.1000, 10.3191, 21.5916],
         [ 0.1000, 10.3191, 10.3236]],
        [[ 0.1000, 10.1465, 21.3392],
         [ 0.1000, 10.1465, 21.2172],
         [ 0.1000, 10.1465, 21.2099],
         ...,
         [ 0.1000, 10.1465, 21.0745],
         [ 0.1000, 10.1465, 21.1788],
         [ 0.1000, 10.1465,  9.6393]],
        ...,
        [[ 0.1000,  9.9364, 20.8257],
         [ 0.1000,  9.9364, 20.7158],
         [ 0.1000,  9.9364, 20.7102],
         ...,
         [ 0.1000,  9.9364, 20.5734],
         [ 0.1000,  9.9364, 20.6775],
         [ 0.1000,  9.9364,  8.8526]],
        [[ 0.1000, 10.4809, 22.1599],
         [ 0.1000, 10.4809, 22.0182],
         [ 0.1000, 10.4809, 22.0082],
         ...,
         [ 0.1000, 10.4809, 21.8752],
         [ 0.1000, 10.4809, 21.9798],
         [ 0.1000, 10.4809, 10.9984]],
        [[ 0.1000, 10.8472, 23.0637],
         [ 0.1000, 10.8472, 22.8996],
         [ 0.1000, 10.8472, 22.8866],
         ...,
         [ 0.1000, 10.8472, 22.7565],
         [ 0.1000, 10.8472, 22.8613],
         [ 0.1000, 10.8472, 12.6477]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0969],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0929],
         ...,
         [0.1000, 1.0480, 1.0909],
         [0.1000, 1.0480, 1.0926],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0340],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0317],
         [0.1000, 1.0157, 1.0334],
         [0.1000, 1.0157, 0.8501]],
        [[0.1000, 1.0120, 1.0292],
         [0.1000, 1.0120, 1.0273],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0249],
         [0.1000, 1.0120, 1.0266],
         [0.1000, 1.0120, 0.8390]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0168],
         [0.1000, 1.0075, 1.0185],
         [0.1000, 1.0075, 0.8262]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0380],
         [0.1000, 1.0192, 1.0397],
         [0.1000, 1.0192, 0.8611]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0523],
         [0.1000, 1.0270, 1.0540],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5043],
         [ 0.1000, 11.8247, 25.2713],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1169],
         [ 0.1000, 11.8247, 25.2302],
         [ 0.1000, 11.8247, 17.9678]],
        [[ 0.1000, 10.3191, 21.7650],
         [ 0.1000, 10.3191, 21.6293],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4747],
         [ 0.1000, 10.3191, 21.5877],
         [ 0.1000, 10.3191, 10.3228]],
        [[ 0.1000, 10.1465, 21.3420],
         [ 0.1000, 10.1465, 21.2166],
         [ 0.1000, 10.1465, 21.2096],
         ...,
         [ 0.1000, 10.1465, 21.0623],
         [ 0.1000, 10.1465, 21.1751],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8284],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5613],
         [ 0.1000,  9.9364, 20.6738],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1629],
         [ 0.1000, 10.4809, 22.0174],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8627],
         [ 0.1000, 10.4809, 21.9758],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0670],
         [ 0.1000, 10.8472, 22.8987],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7438],
         [ 0.1000, 10.8472, 22.8572],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0266],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2300],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4741],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3228]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7431],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 11.8247, 25.5045],
         [ 0.1000, 11.8247, 25.2712],
         [ 0.1000, 11.8247, 25.2495],
         ...,
         [ 0.1000, 11.8247, 25.1161],
         [ 0.1000, 11.8247, 25.2299],
         [ 0.1000, 11.8247, 17.9679]],
        [[ 0.1000, 10.3191, 21.7651],
         [ 0.1000, 10.3191, 21.6292],
         [ 0.1000, 10.3191, 21.6208],
         ...,
         [ 0.1000, 10.3191, 21.4740],
         [ 0.1000, 10.3191, 21.5875],
         [ 0.1000, 10.3191, 10.3227]],
        [[ 0.1000, 10.1465, 21.3421],
         [ 0.1000, 10.1465, 21.2165],
         [ 0.1000, 10.1465, 21.2095],
         ...,
         [ 0.1000, 10.1465, 21.0616],
         [ 0.1000, 10.1465, 21.1748],
         [ 0.1000, 10.1465,  9.6383]],
        ...,
        [[ 0.1000,  9.9364, 20.8285],
         [ 0.1000,  9.9364, 20.7153],
         [ 0.1000,  9.9364, 20.7099],
         ...,
         [ 0.1000,  9.9364, 20.5607],
         [ 0.1000,  9.9364, 20.6736],
         [ 0.1000,  9.9364,  8.8515]],
        [[ 0.1000, 10.4809, 22.1631],
         [ 0.1000, 10.4809, 22.0173],
         [ 0.1000, 10.4809, 22.0076],
         ...,
         [ 0.1000, 10.4809, 21.8620],
         [ 0.1000, 10.4809, 21.9756],
         [ 0.1000, 10.4809, 10.9978]],
        [[ 0.1000, 10.8472, 23.0672],
         [ 0.1000, 10.8472, 22.8986],
         [ 0.1000, 10.8472, 22.8858],
         ...,
         [ 0.1000, 10.8472, 22.7430],
         [ 0.1000, 10.8472, 22.8569],
         [ 0.1000, 10.8472, 12.6476]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0480, 1.0970],
         [0.1000, 1.0480, 1.0932],
         [0.1000, 1.0480, 1.0928],
         ...,
         [0.1000, 1.0480, 1.0907],
         [0.1000, 1.0480, 1.0925],
         [0.1000, 1.0480, 0.9744]],
        [[0.1000, 1.0157, 1.0361],
         [0.1000, 1.0157, 1.0339],
         [0.1000, 1.0157, 1.0338],
         ...,
         [0.1000, 1.0157, 1.0314],
         [0.1000, 1.0157, 1.0333],
         [0.1000, 1.0157, 0.8500]],
        [[0.1000, 1.0120, 1.0293],
         [0.1000, 1.0120, 1.0272],
         [0.1000, 1.0120, 1.0271],
         ...,
         [0.1000, 1.0120, 1.0247],
         [0.1000, 1.0120, 1.0265],
         [0.1000, 1.0120, 0.8389]],
        ...,
        [[0.1000, 1.0075, 1.0209],
         [0.1000, 1.0075, 1.0191],
         [0.1000, 1.0075, 1.0190],
         ...,
         [0.1000, 1.0075, 1.0166],
         [0.1000, 1.0075, 1.0184],
         [0.1000, 1.0075, 0.8261]],
        [[0.1000, 1.0192, 1.0426],
         [0.1000, 1.0192, 1.0403],
         [0.1000, 1.0192, 1.0401],
         ...,
         [0.1000, 1.0192, 1.0377],
         [0.1000, 1.0192, 1.0396],
         [0.1000, 1.0192, 0.8610]],
        [[0.1000, 1.0270, 1.0573],
         [0.1000, 1.0270, 1.0546],
         [0.1000, 1.0270, 1.0544],
         ...,
         [0.1000, 1.0270, 1.0521],
         [0.1000, 1.0270, 1.0539],
         [0.1000, 1.0270, 0.8879]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 1, 3])
BEFORE NORMALIZATION:
tensor([[[11.2027, 11.8247, 24.3462]],
        [[10.9812, 10.3191, 20.8289]],
        [[10.9540, 10.1465, 20.4304]],
        ...,
        [[10.9205,  9.9364, 19.9464]],
        [[11.0063, 10.4809, 21.2036]],
        [[11.0618, 10.8472, 22.0547]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1, 3])
tensor([[[1.0036, 1.0480, 1.2695]],
        [[1.0007, 1.0157, 1.2123]],
        [[1.0003, 1.0120, 1.2058]],
        ...,
        [[0.9999, 1.0075, 1.1979]],
        [[1.0010, 1.0192, 1.2184]],
        [[1.0017, 1.0270, 1.2322]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[21.1051, 15.9679, 17.9547],
         [23.7298, 70.1470, 14.8847],
         [25.4438, 12.6079, 32.0591],
         ...,
         [17.8727, 46.3402, 26.1653],
         [35.8620, 14.8437, 14.6093],
         [21.1920, 13.9449, 15.8291]],
        [[12.6197, 11.0978, 15.8499],
         [15.8262, 25.3648, 10.5414],
         [17.9598, 10.6482, 31.0826],
         ...,
         [13.2565, 11.5127, 14.4697],
         [32.5759, 10.9185, 13.6700],
         [14.2952, 13.3114, 15.2403]],
        [[11.8414, 10.6091, 15.6071],
         [15.0522, 22.3638, 10.1006],
         [17.2018, 10.4279, 30.9638],
         ...,
         [12.7751,  9.6897, 13.4466],
         [32.1906, 10.5112, 13.5580],
         [13.6152, 13.2351, 15.1690]],
        ...,
        [[10.9418, 10.0323, 15.3110],
         [14.1439, 19.1279,  9.5791],
         [16.3054, 10.1607, 30.8170],
         ...,
         [12.2019,  7.8233, 12.2768],
         [31.7187, 10.0267, 13.4203],
         [12.8160, 13.1409, 15.0809]],
        [[13.3837, 11.5690, 16.0774],
         [16.5760, 28.4919, 10.9654],
         [18.6892, 10.8558, 31.1927],
         ...,
         [13.7170, 13.4988, 15.4832],
         [32.9356, 11.3085, 13.7742],
         [14.9531, 13.3824, 15.3065]],
        [[15.2370, 12.6808, 16.5909],
         [18.3589, 36.8242, 11.9622],
         [20.4053, 11.3283, 31.4370],
         ...,
         [14.7905, 19.1785, 17.9780],
         [33.7437, 12.2192, 14.0070],
         [16.5139, 13.5402, 15.4535]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.1018, 1.0188, 0.9966],
         [1.1364, 2.1806, 0.9467],
         [1.1591, 0.9467, 1.2260],
         ...,
         [1.0590, 1.6701, 1.1302],
         [1.2968, 0.9947, 0.9422],
         [1.1029, 0.9754, 0.9620]],
        [[0.9896, 0.9144, 0.9624],
         [1.0320, 1.2203, 0.8760],
         [1.0602, 0.9047, 1.2101],
         ...,
         [0.9980, 0.9233, 0.9399],
         [1.2533, 0.9105, 0.9269],
         [1.0118, 0.9618, 0.9525]],
        [[0.9793, 0.9039, 0.9584],
         [1.0218, 1.1559, 0.8689],
         [1.0502, 0.9000, 1.2082],
         ...,
         [0.9917, 0.8842, 0.9233],
         [1.2483, 0.9018, 0.9251],
         [1.0028, 0.9602, 0.9513]],
        ...,
        [[0.9674, 0.8915, 0.9536],
         [1.0098, 1.0866, 0.8604],
         [1.0383, 0.8943, 1.2058],
         ...,
         [0.9841, 0.8441, 0.9043],
         [1.2420, 0.8914, 0.9229],
         [0.9922, 0.9582, 0.9499]],
        [[0.9997, 0.9245, 0.9661],
         [1.0419, 1.2874, 0.8829],
         [1.0698, 0.9092, 1.2119],
         ...,
         [1.0041, 0.9659, 0.9564],
         [1.2581, 0.9189, 0.9286],
         [1.0205, 0.9634, 0.9535]],
        [[1.0242, 0.9483, 0.9744],
         [1.0655, 1.4660, 0.8991],
         [1.0925, 0.9193, 1.2159],
         ...,
         [1.0183, 1.0876, 0.9970],
         [1.2688, 0.9384, 0.9324],
         [1.0411, 0.9667, 0.9559]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[20.1242, 15.7628, 17.5817],
         [22.0187, 58.7359, 14.8333],
         [25.7001, 12.3581, 30.8992],
         ...,
         [17.8262, 45.5470, 26.1594],
         [34.6137, 15.0447, 14.5281],
         [19.1125, 13.5912, 14.8902]],
        [[12.2608, 10.6063, 15.6374],
         [15.0107, 24.3901, 10.5455],
         [17.6251, 10.4942, 29.9525],
         ...,
         [13.2418, 11.4816, 14.4663],
         [31.5533, 10.9672, 13.5165],
         [13.5558, 12.0222, 14.5850]],
        [[11.5314, 10.0987, 15.4122],
         [14.3154, 21.8758, 10.1094],
         [16.8211, 10.2840, 29.8374],
         ...,
         [12.7633,  9.6810, 13.4434],
         [31.1938, 10.5463, 13.3963],
         [12.9914, 11.8410, 14.5476]],
        ...,
        [[10.6860,  9.5023, 15.1372],
         [13.4970, 19.1125,  9.5931],
         [15.8740, 10.0288, 29.6950],
         ...,
         [12.1934,  7.8337, 12.2739],
         [30.7532, 10.0463, 13.2485],
         [12.3234, 11.6199, 14.5014]],
        [[12.9752, 11.0976, 15.8483],
         [15.6825, 26.9671, 10.9648],
         [18.4015, 10.6921, 30.0592],
         ...,
         [13.6994, 13.4399, 15.4796],
         [31.8889, 11.3706, 13.6284],
         [14.0986, 12.1919, 14.6195]],
        [[14.7023, 12.2638, 16.3237],
         [17.2734, 33.6585, 11.9500],
         [20.2377, 11.1422, 30.2960],
         ...,
         [14.7660, 19.0249, 17.9739],
         [32.6421, 12.3142, 13.8788],
         [15.3745, 12.5750, 14.6961]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0873, 1.0151, 0.9910],
         [1.1123, 1.9366, 0.9463],
         [1.1610, 0.9421, 1.2076],
         ...,
         [1.0569, 1.6538, 1.1305],
         [1.2788, 0.9997, 0.9413],
         [1.0739, 0.9686, 0.9472]],
        [[0.9834, 0.9046, 0.9594],
         [1.0197, 1.2001, 0.8766],
         [1.0543, 0.9022, 1.1922],
         ...,
         [0.9963, 0.9233, 0.9403],
         [1.2383, 0.9123, 0.9249],
         [1.0005, 0.9349, 0.9423]],
        [[0.9737, 0.8937, 0.9557],
         [1.0105, 1.1462, 0.8695],
         [1.0436, 0.8976, 1.1903],
         ...,
         [0.9900, 0.8847, 0.9237],
         [1.2336, 0.9033, 0.9229],
         [0.9930, 0.9310, 0.9417]],
        ...,
        [[0.9626, 0.8809, 0.9512],
         [0.9997, 1.0870, 0.8611],
         [1.0311, 0.8922, 1.1880],
         ...,
         [0.9825, 0.8451, 0.9047],
         [1.2278, 0.8925, 0.9205],
         [0.9842, 0.9263, 0.9409]],
        [[0.9928, 0.9151, 0.9628],
         [1.0286, 1.2554, 0.8834],
         [1.0645, 0.9064, 1.1939],
         ...,
         [1.0024, 0.9653, 0.9568],
         [1.2428, 0.9209, 0.9267],
         [1.0077, 0.9386, 0.9428]],
        [[1.0156, 0.9401, 0.9705],
         [1.0496, 1.3989, 0.8994],
         [1.0888, 0.9160, 1.1978],
         ...,
         [1.0165, 1.0851, 0.9974],
         [1.2527, 0.9412, 0.9308],
         [1.0245, 0.9468, 0.9441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[19.1544, 15.3612, 17.1187],
         [20.2716, 47.2760, 14.7615],
         [25.9797, 12.1278, 29.6802],
         ...,
         [17.7811, 44.7535, 26.1533],
         [33.5014, 15.2640, 14.4636],
         [16.9501, 13.3375, 14.2563]],
        [[11.9276, 10.1571, 15.3822],
         [14.2344, 22.8093, 10.5521],
         [17.3182, 10.3584, 28.8292],
         ...,
         [13.2276, 11.4507, 14.4628],
         [30.6313, 11.0075, 13.3715],
         [12.8446, 11.3034, 13.9122]],
        [[11.2483,  9.6501, 15.1798],
         [13.6249, 20.8415, 10.1226],
         [16.4702, 10.1581, 28.7255],
         ...,
         [12.7520,  9.6727, 13.4402],
         [30.2936, 10.5710, 13.2422],
         [12.4110, 11.0742, 13.8702]],
        ...,
        [[10.4587,  9.0559, 14.9324],
         [12.9045, 18.6335,  9.6138],
         [15.4753,  9.9149, 28.5974],
         ...,
         [12.1854,  7.8450, 12.2709],
         [29.8796, 10.0531, 13.0835],
         [11.8933, 10.7962, 13.8183]],
        [[12.5911, 10.6489, 15.5714],
         [14.8214, 24.7906, 10.9648],
         [18.1398, 10.5468, 28.9252],
         ...,
         [13.6825, 13.3810, 15.4759],
         [30.9465, 11.4266, 13.4921],
         [13.2582, 11.5192, 13.9511]],
        [[14.1887, 11.8198, 15.9971],
         [16.2036, 29.7929, 11.9335],
         [20.0933, 10.9747, 29.1382],
         ...,
         [14.7423, 18.8706, 17.9696],
         [31.6534, 12.4086, 13.7618],
         [14.2188, 12.0101, 14.0373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0734, 1.0073, 0.9841],
         [1.0882, 1.6916, 0.9458],
         [1.1636, 0.9379, 1.1884],
         ...,
         [1.0553, 1.6376, 1.1311],
         [1.2630, 1.0052, 0.9409],
         [1.0443, 0.9639, 0.9376]],
        [[0.9779, 0.8957, 0.9559],
         [1.0084, 1.1670, 0.8773],
         [1.0491, 0.9000, 1.1746],
         ...,
         [0.9951, 0.9234, 0.9409],
         [1.2251, 0.9139, 0.9232],
         [0.9900, 0.9203, 0.9320]],
        [[0.9689, 0.8848, 0.9526],
         [1.0003, 1.1248, 0.8703],
         [1.0379, 0.8957, 1.1729],
         ...,
         [0.9888, 0.8853, 0.9243],
         [1.2206, 0.9046, 0.9211],
         [0.9843, 0.9153, 0.9313]],
        ...,
        [[0.9585, 0.8721, 0.9486],
         [0.9908, 1.0774, 0.8621],
         [1.0248, 0.8905, 1.1708],
         ...,
         [0.9813, 0.8461, 0.9053],
         [1.2151, 0.8935, 0.9185],
         [0.9774, 0.9094, 0.9305]],
        [[0.9867, 0.9062, 0.9590],
         [1.0161, 1.2095, 0.8840],
         [1.0600, 0.9040, 1.1762],
         ...,
         [1.0011, 0.9648, 0.9574],
         [1.2292, 0.9229, 0.9251],
         [0.9955, 0.9249, 0.9326]],
        [[1.0078, 0.9313, 0.9659],
         [1.0344, 1.3167, 0.8998],
         [1.0858, 0.9132, 1.1796],
         ...,
         [1.0151, 1.0825, 0.9980],
         [1.2386, 0.9440, 0.9295],
         [1.0082, 0.9354, 0.9340]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[18.5296, 15.0456, 16.8105],
         [19.1580, 41.1370, 14.7162],
         [26.1672, 11.9914, 28.8757],
         ...,
         [17.7514, 44.2349, 26.1492],
         [32.8121, 15.4178, 14.4262],
         [15.5669, 13.0734, 14.1302]],
        [[11.7241,  9.9344, 15.2146],
         [13.7683, 21.5442, 10.5565],
         [17.1190, 10.2768, 28.1169],
         ...,
         [13.2184, 11.4306, 14.4605],
         [30.0351, 11.0344, 13.2774],
         [12.3823, 10.9729, 13.4623]],
        [[11.0783,  9.4369, 15.0279],
         [13.2166, 19.8865, 10.1312],
         [16.2431, 10.0824, 28.0244],
         ...,
         [12.7446,  9.6676, 13.4381],
         [29.7081, 10.5869, 13.1417],
         [12.0364, 10.7376, 13.3818]],
        ...,
        [[10.3260,  8.8538, 14.7993],
         [12.5625, 18.0052,  9.6271],
         [15.2179,  9.8462, 27.9100],
         ...,
         [12.1801,  7.8527, 12.2689],
         [29.3072, 10.0565, 12.9752],
         [11.6205, 10.4525, 13.2826]],
        [[12.3538, 10.4171, 15.3890],
         [14.2981, 23.1971, 10.9650],
         [17.9697, 10.4596, 28.2026],
         ...,
         [13.6714, 13.3424, 15.4735],
         [30.3402, 11.4645, 13.4039],
         [12.7105, 11.1948, 13.5370]],
        [[13.8654, 11.5666, 15.7811],
         [15.5403, 27.3071, 11.9232],
         [19.9992, 10.8747, 28.3927],
         ...,
         [14.7268, 18.7692, 17.9668],
         [31.0244, 12.4735, 13.6874],
         [13.4657, 11.7004, 13.7033]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[1.0647, 1.0010, 0.9795],
         [1.0730, 1.5605, 0.9455],
         [1.1656, 0.9355, 1.1758],
         ...,
         [1.0544, 1.6269, 1.1314],
         [1.2534, 1.0090, 0.9408],
         [1.0255, 0.9587, 0.9360]],
        [[0.9747, 0.8914, 0.9536],
         [1.0018, 1.1404, 0.8778],
         [1.0460, 0.8988, 1.1634],
         ...,
         [0.9945, 0.9235, 0.9413],
         [1.2167, 0.9150, 0.9221],
         [0.9834, 0.9137, 0.9251]],
        [[0.9662, 0.8807, 0.9505],
         [0.9945, 1.1048, 0.8709],
         [1.0345, 0.8946, 1.1619],
         ...,
         [0.9882, 0.8857, 0.9247],
         [1.2124, 0.9054, 0.9199],
         [0.9789, 0.9086, 0.9238]],
        ...,
        [[0.9563, 0.8682, 0.9468],
         [0.9858, 1.0645, 0.8627],
         [1.0209, 0.8895, 1.1601],
         ...,
         [0.9808, 0.8468, 0.9057],
         [1.2071, 0.8940, 0.9172],
         [0.9734, 0.9025, 0.9222]],
        [[0.9831, 0.9018, 0.9564],
         [1.0088, 1.1758, 0.8845],
         [1.0573, 0.9027, 1.1648],
         ...,
         [1.0005, 0.9645, 0.9578],
         [1.2208, 0.9242, 0.9241],
         [0.9878, 0.9184, 0.9263]],
        [[1.0030, 0.9264, 0.9628],
         [1.0252, 1.2640, 0.9001],
         [1.0841, 0.9116, 1.1679],
         ...,
         [1.0144, 1.0809, 0.9984],
         [1.2298, 0.9459, 0.9287],
         [0.9978, 0.9293, 0.9290]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.0839, 11.8372, 14.4203],
         [11.1522, 14.2186, 14.1763],
         [28.7555, 14.0951, 21.8729],
         ...,
         [17.2685, 36.0514, 26.0776],
         [27.6556, 17.0650, 14.2538],
         [14.8860, 13.9911, 16.0396]],
        [[10.8740, 10.7324, 12.1062],
         [10.7027, 10.0800, 10.5957],
         [14.2189,  9.7330, 18.1883],
         ...,
         [13.0716, 11.1266, 14.4213],
         [21.3719, 11.2064, 11.9129],
         [ 8.7804, 12.0517,  9.7399]],
        [[10.8483, 10.6030, 11.8468],
         [10.6483,  9.6598, 10.2207],
         [13.0318,  9.2969, 17.7777],
         ...,
         [12.6287,  9.6197, 13.4016],
         [20.7007, 10.6380, 11.6513],
         [ 8.2249, 11.8311,  9.1566]],
        ...,
        [[10.8164, 10.4445, 11.5327],
         [10.5812,  9.1625,  9.7736],
         [11.6953,  8.7827, 17.2809],
         ...,
         [12.0998,  8.0300, 12.2357],
         [19.8970,  9.9723, 11.3345],
         [ 7.5841, 11.5629,  8.4810]],
        [[10.8978, 10.8532, 12.3506],
         [10.7531, 10.4842, 10.9542],
         [15.4107, 10.1537, 18.5758],
         ...,
         [13.4942, 12.7266, 15.4314],
         [22.0108, 11.7582, 12.1597],
         [ 9.3264, 12.2590, 10.3113]],
        [[10.9504, 11.1247, 12.9077],
         [10.8653, 11.4343, 11.7887],
         [18.4058, 11.1477, 19.4604],
         ...,
         [14.4759, 17.1187, 17.9178],
         [23.4891, 13.0738, 12.7225],
         [10.6545, 12.7291, 11.6935]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9350, 0.9424, 0.9153],
         [0.9359, 0.9934, 0.9113],
         [1.1685, 0.9908, 1.0365],
         ...,
         [1.0167, 1.4616, 1.1049],
         [1.1540, 1.0545, 0.9126],
         [0.9852, 0.9886, 0.9416]],
        [[0.9322, 0.9187, 0.8776],
         [0.9299, 0.9047, 0.8531],
         [0.9764, 0.8972, 0.9765],
         ...,
         [0.9613, 0.9271, 0.9153],
         [1.0709, 0.9288, 0.8745],
         [0.9045, 0.9470, 0.8391]],
        [[0.9319, 0.9159, 0.8734],
         [0.9292, 0.8957, 0.8470],
         [0.9607, 0.8879, 0.9699],
         ...,
         [0.9554, 0.8948, 0.8987],
         [1.0621, 0.9167, 0.8702],
         [0.8972, 0.9422, 0.8296]],
        ...,
        [[0.9314, 0.9125, 0.8683],
         [0.9283, 0.8850, 0.8397],
         [0.9431, 0.8769, 0.9618],
         ...,
         [0.9484, 0.8607, 0.8797],
         [1.0515, 0.9024, 0.8651],
         [0.8887, 0.9365, 0.8187]],
        [[0.9325, 0.9213, 0.8816],
         [0.9306, 0.9134, 0.8589],
         [0.9922, 0.9063, 0.9828],
         ...,
         [0.9668, 0.9614, 0.9317],
         [1.0794, 0.9407, 0.8785],
         [0.9118, 0.9514, 0.8484]],
        [[0.9332, 0.9271, 0.8907],
         [0.9321, 0.9337, 0.8725],
         [1.0317, 0.9276, 0.9972],
         ...,
         [0.9798, 1.0556, 0.9721],
         [1.0989, 0.9689, 0.8876],
         [0.9293, 0.9615, 0.8709]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.1075, 12.8565, 15.7493],
         [11.8084, 17.2481, 15.4060],
         [28.3424, 14.8419, 20.9117],
         ...,
         [17.1666, 33.9689, 26.0545],
         [27.1974, 17.2728, 14.3016],
         [14.4829, 11.7406, 15.5693]],
        [[10.9548, 11.7261,  9.9000],
         [ 9.9307, 10.2468,  9.7035],
         [13.9821,  9.8244, 16.5697],
         ...,
         [13.0435, 11.0544, 14.4095],
         [20.0736, 11.2051, 11.7011],
         [ 8.8579, 11.4058,  9.9264]],
        [[10.9360, 11.5933,  9.3471],
         [ 9.7201,  9.6071,  9.1639],
         [12.8111,  9.3353, 16.0991],
         ...,
         [12.6075,  9.6201, 13.3908],
         [19.3329, 10.6206, 11.4139],
         [ 8.3349, 11.3651,  9.3884]],
        ...,
        [[10.9128, 11.4305,  8.7035],
         [ 9.4648,  8.8684,  8.5356],
         [11.4931,  8.7619, 15.5336],
         ...,
         [12.0864,  8.0960, 12.2260],
         [18.4514,  9.9374, 11.0674],
         [ 7.7285, 11.3146,  8.7611]],
        [[10.9721, 11.8501, 10.4395],
         [10.1292, 10.8752, 10.2300],
         [15.1580, 10.2988, 17.0163],
         ...,
         [13.4594, 12.5676, 15.4187],
         [20.7826, 11.7732, 11.9725],
         [ 9.3699, 11.4436, 10.4504]],
        [[11.0105, 12.1283, 11.7362],
         [10.5814, 12.4014, 11.4949],
         [18.1147, 11.4281, 18.0450],
         ...,
         [14.4248, 16.6805, 17.9027],
         [22.4370, 13.1309, 12.5941],
         [10.6068, 11.5274, 11.7066]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9382, 0.9676, 0.9396],
         [0.9475, 1.0618, 0.9341],
         [1.1660, 1.0102, 1.0236],
         ...,
         [1.0183, 1.4204, 1.1073],
         [1.1509, 1.0623, 0.9161],
         [0.9828, 0.9437, 0.9367]],
        [[0.9362, 0.9434, 0.8445],
         [0.9227, 0.9117, 0.8413],
         [0.9762, 0.9026, 0.9530],
         ...,
         [0.9638, 0.9290, 0.9179],
         [1.0567, 0.9322, 0.8738],
         [0.9085, 0.9365, 0.8449]],
        [[0.9360, 0.9406, 0.8355],
         [0.9199, 0.8980, 0.8325],
         [0.9607, 0.8921, 0.9453],
         ...,
         [0.9581, 0.8982, 0.9013],
         [1.0469, 0.9197, 0.8691],
         [0.9016, 0.9357, 0.8362]],
        ...,
        [[0.9357, 0.9371, 0.8250],
         [0.9165, 0.8821, 0.8223],
         [0.9433, 0.8798, 0.9361],
         ...,
         [0.9512, 0.8656, 0.8823],
         [1.0353, 0.9050, 0.8635],
         [0.8936, 0.9346, 0.8260]],
        [[0.9364, 0.9461, 0.8533],
         [0.9253, 0.9252, 0.8499],
         [0.9918, 0.9128, 0.9603],
         ...,
         [0.9693, 0.9614, 0.9343],
         [1.0661, 0.9444, 0.8782],
         [0.9153, 0.9373, 0.8535]],
        [[0.9370, 0.9520, 0.8744],
         [0.9313, 0.9579, 0.8704],
         [1.0308, 0.9370, 0.9770],
         ...,
         [0.9821, 1.0496, 0.9747],
         [1.0880, 0.9735, 0.8883],
         [0.9316, 0.9391, 0.8739]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.2469, 11.6997, 15.0363],
         [12.4361, 13.0235, 15.8168],
         [27.7952, 13.6903, 20.9738],
         ...,
         [17.2118, 34.2079, 26.0548],
         [27.5921, 17.0618, 14.2940],
         [12.1789, 11.8708, 14.4161]],
        [[10.5449, 10.9214,  9.9891],
         [ 9.9735, 10.1978,  9.6275],
         [14.5480,  9.7232, 17.0774],
         ...,
         [13.0591, 11.0619, 14.4101],
         [20.8909, 11.1257, 11.8402],
         [ 9.6694, 10.6756, 10.8930]],
        [[10.4611, 10.8288,  9.4960],
         [ 9.7048,  9.8936,  9.0537],
         [13.4276,  9.3200, 16.6484],
         ...,
         [12.6203,  9.6192, 13.3914],
         [20.1837, 10.5522, 11.5674],
         [ 9.3971, 10.5363, 10.5217]],
        ...,
        [[10.3580, 10.7148,  8.9176],
         [ 9.3813,  9.5287,  8.3888],
         [12.1562,  8.8427, 16.1309],
         ...,
         [12.0960,  8.0873, 12.2266],
         [19.3390,  9.8812, 11.2374],
         [ 9.0698, 10.3659, 10.0783]],
        [[10.6229, 11.0077, 10.4671],
         [10.2283, 10.4869, 10.1895],
         [15.6652, 10.1110, 17.4832],
         ...,
         [13.4777, 12.5853, 15.4193],
         [21.5658, 11.6829, 12.0978],
         [ 9.9278, 10.8059, 11.2475]],
        [[10.7970, 11.2005, 11.6043],
         [10.8136, 11.1541, 11.5486],
         [18.4436, 11.0222, 18.4133],
         ...,
         [14.4497, 16.7307, 17.9033],
         [23.1333, 13.0131, 12.6863],
         [10.5226, 11.0990, 12.0712]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9517, 0.9424, 0.9243],
         [0.9674, 0.9708, 0.9370],
         [1.1704, 0.9851, 1.0208],
         ...,
         [1.0305, 1.4251, 1.1035],
         [1.1677, 1.0574, 0.9122],
         [0.9640, 0.9461, 0.9142]],
        [[0.9424, 0.9257, 0.8422],
         [0.9349, 0.9102, 0.8363],
         [0.9953, 0.9000, 0.9575],
         ...,
         [0.9757, 0.9287, 0.9141],
         [1.0792, 0.9301, 0.8723],
         [0.9309, 0.9204, 0.8569]],
        [[0.9413, 0.9237, 0.8341],
         [0.9313, 0.9037, 0.8270],
         [0.9805, 0.8914, 0.9505],
         ...,
         [0.9699, 0.8978, 0.8975],
         [1.0698, 0.9178, 0.8678],
         [0.9273, 0.9175, 0.8508]],
        ...,
        [[0.9400, 0.9213, 0.8247],
         [0.9271, 0.8959, 0.8161],
         [0.9637, 0.8811, 0.9421],
         ...,
         [0.9629, 0.8649, 0.8786],
         [1.0587, 0.9034, 0.8625],
         [0.9229, 0.9138, 0.8436]],
        [[0.9435, 0.9276, 0.8499],
         [0.9382, 0.9164, 0.8454],
         [1.0101, 0.9083, 0.9641],
         ...,
         [0.9812, 0.9614, 0.9305],
         [1.0881, 0.9421, 0.8765],
         [0.9343, 0.9232, 0.8626]],
        [[0.9458, 0.9317, 0.8684],
         [0.9460, 0.9307, 0.8675],
         [1.0468, 0.9279, 0.9792],
         ...,
         [0.9940, 1.0503, 0.9709],
         [1.1088, 0.9706, 0.8860],
         [0.9421, 0.9295, 0.8760]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5870, 11.9465, 14.9289],
         [14.2037, 11.2495, 16.0115],
         [26.5247, 13.1182, 20.0193],
         ...,
         [17.1720, 32.5575, 26.0322],
         [27.5589, 16.8458, 14.3298],
         [11.5029, 11.7806, 13.8074]],
        [[10.1301, 11.4721,  9.9201],
         [ 9.5722, 10.5855,  9.7543],
         [14.8604,  9.7436, 16.1365],
         ...,
         [13.0522, 11.0051, 14.3994],
         [20.5696, 10.9884, 11.8020],
         [10.2179, 10.5555, 12.5221]],
        [[ 9.9629, 11.4147,  9.4306],
         [ 9.1158, 10.5061,  9.1738],
         [13.8319,  9.3915, 15.7115],
         ...,
         [12.6164,  9.6224, 13.3817],
         [19.8381, 10.4223, 11.5218],
         [10.0691, 10.4130, 12.3715]],
        ...,
        [[ 9.7593, 11.3438,  8.8566],
         [ 8.5795, 10.4083,  8.5012],
         [12.6538,  8.9720, 15.1995],
         ...,
         [12.0957,  8.1453, 12.2179],
         [18.9663,  9.7601, 11.1833],
         [ 9.8875, 10.2388, 12.1872]],
        [[10.2868, 11.5253, 10.3945],
         [10.0138, 10.6594, 10.3227],
         [15.8777, 10.0805, 16.5391],
         ...,
         [13.4679, 12.4574, 15.4076],
         [21.2689, 11.5382, 12.0667],
         [10.3571, 10.6888, 12.6627]],
        [[10.6414, 11.6437, 11.5231],
         [11.0617, 10.8242, 11.6970],
         [18.3757, 10.8656, 17.4633],
         ...,
         [14.4326, 16.3767, 17.8892],
         [22.8972, 12.8510, 12.6720],
         [10.6712, 10.9889, 12.9786]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9578, 0.9507, 0.9240],
         [0.9924, 0.9357, 0.9416],
         [1.1553, 0.9758, 1.0068],
         ...,
         [1.0317, 1.3926, 1.1046],
         [1.1689, 1.0557, 0.9142],
         [0.9567, 0.9471, 0.9057]],
        [[0.9386, 0.9405, 0.8425],
         [0.9312, 0.9215, 0.8398],
         [1.0011, 0.9034, 0.9436],
         ...,
         [0.9772, 0.9305, 0.9154],
         [1.0766, 0.9301, 0.8731],
         [0.9398, 0.9208, 0.8848]],
        [[0.9364, 0.9393, 0.8345],
         [0.9252, 0.9198, 0.8304],
         [0.9875, 0.8959, 0.9367],
         ...,
         [0.9715, 0.9008, 0.8988],
         [1.0669, 0.9180, 0.8686],
         [0.9378, 0.9178, 0.8824]],
        ...,
        [[0.9337, 0.9377, 0.8252],
         [0.9181, 0.9177, 0.8194],
         [0.9719, 0.8869, 0.9284],
         ...,
         [0.9646, 0.8692, 0.8799],
         [1.0554, 0.9038, 0.8630],
         [0.9354, 0.9140, 0.8794]],
        [[0.9407, 0.9416, 0.8502],
         [0.9371, 0.9231, 0.8490],
         [1.0146, 0.9107, 0.9502],
         ...,
         [0.9827, 0.9616, 0.9318],
         [1.0858, 0.9419, 0.8774],
         [0.9416, 0.9237, 0.8871]],
        [[0.9454, 0.9442, 0.8686],
         [0.9509, 0.9266, 0.8714],
         [1.0476, 0.9275, 0.9652],
         ...,
         [0.9955, 1.0457, 0.9721],
         [1.1073, 0.9701, 0.8873],
         [0.9457, 0.9301, 0.8922]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4501, 14.6383, 14.7074],
         [14.5471, 11.2240, 15.1988],
         [24.8701, 13.3268, 18.7025],
         ...,
         [17.0794, 30.3453, 26.0025],
         [26.9033, 16.5858, 14.3806],
         [12.6248, 11.7797, 13.7456]],
        [[10.2771, 12.2465, 10.0735],
         [ 9.2016, 10.5860, 10.2923],
         [14.4688,  9.7883, 14.6509],
         ...,
         [13.0292, 10.9324, 14.3852],
         [19.3427, 10.8974, 11.6193],
         [ 9.4316, 10.8131, 12.5616]],
        [[10.1406, 11.9791,  9.6124],
         [ 8.6944, 10.5096,  9.8074],
         [13.5304,  9.4214, 14.2147],
         ...,
         [12.5998,  9.6346, 13.3687],
         [18.5686, 10.3452, 11.3167],
         [ 9.0973, 10.6991, 12.4223]],
        ...,
        [[ 9.9735, 11.6552,  9.0695],
         [ 8.1036, 10.4156,  9.2373],
         [12.4499,  8.9851, 13.6913],
         ...,
         [12.0866,  8.2359, 12.2064],
         [17.6507,  9.6987, 10.9520],
         [ 8.6987, 10.5593, 12.2515]],
        [[10.4049, 12.4988, 10.5187],
         [ 9.6961, 10.6571, 10.7612],
         [15.3928, 10.1396, 15.0655],
         ...,
         [13.4385, 12.2854, 15.3921],
         [20.0860, 11.4332, 11.9059],
         [ 9.7512, 10.9194, 12.6916]],
        [[10.6924, 13.0739, 11.5721],
         [10.8833, 10.8155, 11.8729],
         [17.6459, 10.9603, 16.0223],
         ...,
         [14.3879, 15.8929, 17.8705],
         [21.8288, 12.7108, 12.5636],
         [10.4954, 11.1578, 12.9832]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9481, 1.0129, 0.9347],
         [0.9890, 0.9397, 0.9427],
         [1.1254, 0.9848, 0.9997],
         ...,
         [1.0225, 1.3497, 1.1184],
         [1.1523, 1.0547, 0.9294],
         [0.9636, 0.9516, 0.9191]],
        [[0.9326, 0.9616, 0.8594],
         [0.9184, 0.9260, 0.8629],
         [0.9880, 0.9089, 0.9338],
         ...,
         [0.9689, 0.9334, 0.9295],
         [1.0524, 0.9327, 0.8845],
         [0.9214, 0.9309, 0.8998]],
        [[0.9308, 0.9559, 0.8519],
         [0.9116, 0.9244, 0.8550],
         [0.9756, 0.9010, 0.9267],
         ...,
         [0.9633, 0.9056, 0.9130],
         [1.0421, 0.9208, 0.8796],
         [0.9170, 0.9284, 0.8976]],
        ...,
        [[0.9286, 0.9489, 0.8430],
         [0.9038, 0.9223, 0.8458],
         [0.9613, 0.8917, 0.9182],
         ...,
         [0.9565, 0.8756, 0.8941],
         [1.0300, 0.9070, 0.8737],
         [0.9117, 0.9254, 0.8948]],
        [[0.9343, 0.9670, 0.8666],
         [0.9249, 0.9275, 0.8706],
         [1.0002, 0.9164, 0.9406],
         ...,
         [0.9743, 0.9624, 0.9459],
         [1.0622, 0.9442, 0.8892],
         [0.9256, 0.9332, 0.9020]],
        [[0.9381, 0.9794, 0.8837],
         [0.9406, 0.9309, 0.8886],
         [1.0299, 0.9340, 0.9561],
         ...,
         [0.9869, 1.0398, 0.9862],
         [1.0852, 0.9716, 0.8999],
         [0.9354, 0.9383, 0.9067]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4362, 13.3932, 14.2676],
         [13.8081, 11.6986, 14.6899],
         [23.8477, 12.9765, 17.9890],
         ...,
         [17.0601, 29.4775, 25.9886],
         [26.7008, 16.3144, 14.3934],
         [12.8941, 11.7447, 13.7453]],
        [[10.2934, 11.8776, 10.4795],
         [ 9.2535, 10.5552, 10.9142],
         [14.4080,  9.8386, 14.1600],
         ...,
         [13.0266, 10.9043, 14.3789],
         [19.0306, 10.8171, 11.5903],
         [ 9.3152, 10.8603, 12.5044]],
        [[10.1601, 11.7023, 10.0868],
         [ 8.8062, 10.4216, 10.5201],
         [13.5367,  9.5072, 13.7466],
         ...,
         [12.5988,  9.6413, 13.3630],
         [18.2494, 10.2806, 11.2837],
         [ 8.9477, 10.7555, 12.3588]],
        ...,
        [[ 9.9971, 11.4884,  9.6197],
         [ 8.2810, 10.2582, 10.0506],
         [12.5282,  9.1113, 13.2502],
         ...,
         [12.0873,  8.2751, 12.2014],
         [17.3241,  9.6516, 10.9144],
         [ 8.5117, 10.6269, 12.1804]],
        [[10.4180, 12.0417, 10.8557],
         [ 9.6866, 10.6800, 11.2911],
         [15.2621, 10.1549, 14.5526],
         ...,
         [13.4345, 12.2168, 15.3852],
         [19.7816, 11.3372, 11.8808],
         [ 9.6678, 10.9579, 12.6404]],
        [[10.6983, 12.4120, 11.7342],
         [10.7155, 10.9606, 12.1696],
         [17.3302, 10.8891, 15.4581],
         ...,
         [14.3802, 15.6992, 17.8620],
         [21.5453, 12.5751, 12.5479],
         [10.4939, 11.1764, 12.9456]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9524, 0.9881, 0.9397],
         [0.9837, 0.9518, 0.9466],
         [1.1164, 0.9792, 1.0003],
         ...,
         [1.0267, 1.3331, 1.1304],
         [1.1541, 1.0508, 0.9418],
         [0.9717, 0.9528, 0.9312]],
        [[0.9373, 0.9556, 0.8781],
         [0.9235, 0.9273, 0.8852],
         [0.9917, 0.9119, 0.9380],
         ...,
         [0.9734, 0.9348, 0.9415],
         [1.0528, 0.9329, 0.8962],
         [0.9244, 0.9338, 0.9111]],
        [[0.9355, 0.9519, 0.8717],
         [0.9176, 0.9244, 0.8788],
         [0.9801, 0.9048, 0.9313],
         ...,
         [0.9678, 0.9077, 0.9250],
         [1.0424, 0.9214, 0.8912],
         [0.9195, 0.9316, 0.9087]],
        ...,
        [[0.9334, 0.9473, 0.8641],
         [0.9107, 0.9209, 0.8711],
         [0.9668, 0.8963, 0.9232],
         ...,
         [0.9610, 0.8784, 0.9061],
         [1.0302, 0.9079, 0.8852],
         [0.9137, 0.9288, 0.9058]],
        [[0.9389, 0.9592, 0.8842],
         [0.9293, 0.9300, 0.8913],
         [1.0030, 0.9187, 0.9444],
         ...,
         [0.9788, 0.9629, 0.9579],
         [1.0627, 0.9441, 0.9009],
         [0.9290, 0.9359, 0.9133]],
        [[0.9426, 0.9671, 0.8985],
         [0.9429, 0.9360, 0.9056],
         [1.0303, 0.9344, 0.9591],
         ...,
         [0.9913, 1.0376, 0.9982],
         [1.0860, 0.9706, 0.9118],
         [0.9399, 0.9406, 0.9182]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.5469, 11.5818, 14.9125],
         [11.9735, 15.3304, 16.7854],
         [17.0343, 11.2520, 14.4315],
         ...,
         [16.9408, 24.5034, 25.8972],
         [24.6297, 13.7191, 14.4719],
         [13.6422, 11.7543, 13.7675]],
        [[10.1710, 11.1031, 12.9279],
         [ 9.8050, 12.4621, 16.3182],
         [13.1216, 10.4047, 11.5217],
         ...,
         [13.0111, 10.7557, 14.3391],
         [17.0410, 10.1840, 11.4152],
         [ 9.0619, 10.8473, 13.0032]],
        [[10.0125, 11.0453, 12.7014],
         [ 9.5655, 12.1467, 16.2613],
         [12.7044, 10.3043, 11.2050],
         ...,
         [12.5929,  9.7135, 13.3272],
         [16.2814,  9.8152, 11.0848],
         [ 8.6145, 10.7400, 12.9115]],
        ...,
        [[ 9.8192, 10.9739, 12.4257],
         [ 9.2763, 11.7662, 16.1909],
         [12.2051, 10.1811, 10.8240],
         ...,
         [12.0924,  8.5592, 12.1701],
         [15.3856,  9.3759, 10.6880],
         [ 8.0897, 10.6083, 12.7987]],
        [[10.3195, 11.1568, 13.1406],
         [10.0315, 12.7607, 16.3710],
         [13.5188, 10.4982, 11.8221],
         ...,
         [13.4095, 11.8170, 15.3413],
         [17.7736, 10.5368, 11.7290],
         [ 9.4957, 10.9473, 13.0883]],
        [[10.6551, 11.2762, 13.6225],
         [10.5499, 13.4450, 16.4879],
         [14.4385, 10.7075, 12.5129],
         ...,
         [14.3324, 14.5441, 17.8077],
         [19.5037, 11.3591, 12.4522],
         [10.5276, 11.1713, 13.2782]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9514, 0.9632, 0.9482],
         [0.9570, 1.0436, 0.9786],
         [1.0239, 0.9561, 0.9403],
         ...,
         [1.0227, 1.2403, 1.1268],
         [1.1243, 1.0090, 0.9410],
         [0.9791, 0.9669, 0.9295]],
        [[0.9332, 0.9529, 0.9159],
         [0.9284, 0.9821, 0.9710],
         [0.9722, 0.9379, 0.8930],
         ...,
         [0.9708, 0.9455, 0.9388],
         [1.0240, 0.9332, 0.8913],
         [0.9186, 0.9474, 0.9171]],
        [[0.9311, 0.9517, 0.9122],
         [0.9252, 0.9753, 0.9701],
         [0.9667, 0.9358, 0.8879],
         ...,
         [0.9652, 0.9231, 0.9224],
         [1.0140, 0.9253, 0.8859],
         [0.9127, 0.9451, 0.9156]],
        ...,
        [[0.9286, 0.9501, 0.9077],
         [0.9214, 0.9671, 0.9690],
         [0.9601, 0.9331, 0.8817],
         ...,
         [0.9586, 0.8984, 0.9036],
         [1.0021, 0.9159, 0.8795],
         [0.9057, 0.9423, 0.9138]],
        [[0.9352, 0.9541, 0.9194],
         [0.9314, 0.9885, 0.9719],
         [0.9775, 0.9399, 0.8979],
         ...,
         [0.9760, 0.9682, 0.9551],
         [1.0337, 0.9408, 0.8964],
         [0.9243, 0.9496, 0.9185]],
        [[0.9396, 0.9566, 0.9272],
         [0.9382, 1.0031, 0.9738],
         [0.9896, 0.9444, 0.9091],
         ...,
         [0.9882, 1.0267, 0.9953],
         [1.0566, 0.9584, 0.9082],
         [0.9379, 0.9544, 0.9216]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4406, 12.3878, 14.0934],
         [13.2656, 11.5375, 14.9399],
         [16.8199, 11.2847, 14.3046],
         ...,
         [16.9001, 23.5881, 25.8787],
         [23.6674, 13.2787, 14.4709],
         [13.5447, 11.8555, 13.6869]],
        [[10.2883, 11.5965, 11.8013],
         [ 9.1786, 11.2276, 14.2985],
         [13.0085, 10.5129, 11.1566],
         ...,
         [13.0019, 10.7330, 14.3310],
         [16.3281, 10.0544, 11.3269],
         [ 9.0903, 10.7036, 12.5726]],
        [[10.1540, 11.5021, 11.5448],
         [ 8.7695, 11.1898, 14.2211],
         [12.6013, 10.4211, 10.8185],
         ...,
         [12.5866,  9.7362, 13.3200],
         [15.5947,  9.7141, 10.9886],
         [ 8.6525, 10.5690, 12.4412]],
        ...,
        [[ 9.9897, 11.3860, 11.2342],
         [ 8.2870, 11.1431, 14.1255],
         [12.1134, 10.3083, 10.4132],
         ...,
         [12.0896,  8.6267, 12.1638],
         [14.7302,  9.3077, 10.5827],
         [ 8.1382, 10.4043, 12.2799]],
        [[10.4139, 11.6843, 12.0432],
         [ 9.5732, 11.2626, 14.3704],
         [13.3962, 10.5984, 11.4780],
         ...,
         [13.3974, 11.7437, 15.3324],
         [17.0357, 10.3792, 11.6485],
         [ 9.5142, 10.8293, 12.6953]],
        [[10.6964, 11.8804, 12.5945],
         [10.5049, 11.3402, 14.5303],
         [14.2931, 10.7894, 12.2205],
         ...,
         [14.3133, 14.3234, 17.7967],
         [18.7076, 11.1334, 12.3908],
         [10.5208, 11.1121, 12.9701]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9498, 0.9837, 0.9347],
         [0.9740, 0.9655, 0.9485],
         [1.0209, 0.9600, 0.9382],
         ...,
         [1.0220, 1.2239, 1.1264],
         [1.1114, 1.0028, 0.9409],
         [0.9777, 0.9723, 0.9281]],
        [[0.9346, 0.9667, 0.8975],
         [0.9199, 0.9588, 0.9381],
         [0.9706, 0.9435, 0.8870],
         ...,
         [0.9705, 0.9482, 0.9386],
         [1.0144, 0.9337, 0.8897],
         [0.9188, 0.9476, 0.9100]],
        [[0.9328, 0.9647, 0.8933],
         [0.9145, 0.9580, 0.9368],
         [0.9652, 0.9415, 0.8815],
         ...,
         [0.9650, 0.9268, 0.9222],
         [1.0047, 0.9264, 0.8842],
         [0.9130, 0.9447, 0.9079]],
        ...,
        [[0.9307, 0.9622, 0.8882],
         [0.9082, 0.9570, 0.9353],
         [0.9587, 0.9391, 0.8749],
         ...,
         [0.9584, 0.9031, 0.9034],
         [0.9933, 0.9177, 0.8776],
         [0.9062, 0.9412, 0.9052]],
        [[0.9363, 0.9686, 0.9014],
         [0.9252, 0.9596, 0.9392],
         [0.9757, 0.9453, 0.8922],
         ...,
         [0.9757, 0.9699, 0.9549],
         [1.0238, 0.9406, 0.8950],
         [0.9244, 0.9503, 0.9120]],
        [[0.9400, 0.9728, 0.9104],
         [0.9375, 0.9612, 0.9418],
         [0.9875, 0.9494, 0.9043],
         ...,
         [0.9878, 1.0252, 0.9950],
         [1.0459, 0.9568, 0.9070],
         [0.9377, 0.9563, 0.9165]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.2055, 13.6556, 13.9968],
         [14.0599, 10.8757, 13.6766],
         [15.6681, 12.1805, 14.4585],
         ...,
         [16.8218, 21.0058, 25.8156],
         [20.7377, 11.9890, 14.4350],
         [13.2996, 11.8662, 13.7372]],
        [[10.6100, 11.9533, 10.9063],
         [ 8.9523, 10.6162, 12.3860],
         [12.6274, 10.9119, 10.2929],
         ...,
         [12.9906, 10.6741, 14.3051],
         [14.6416,  9.4910, 11.1650],
         [ 9.1672, 10.5799, 11.6635]],
        [[10.5385, 11.7579, 10.5746],
         [ 8.4658, 10.5845, 12.2350],
         [12.2946, 10.7643,  9.8689],
         ...,
         [12.5816,  9.8160, 13.2970],
         [14.0241,  9.2204, 10.8155],
         [ 8.7546, 10.4307, 11.4296]],
        ...,
        [[10.4505, 11.5198, 10.1770],
         [ 7.8985, 10.5453, 12.0501],
         [11.8937, 10.5840,  9.3668],
         ...,
         [12.0917,  8.8463, 12.1439],
         [13.2938,  8.8953, 10.3970],
         [ 8.2681, 10.2484, 11.1458]],
        [[10.6764, 12.1365, 11.2218],
         [ 9.4263, 10.6456, 12.5271],
         [12.9427, 11.0499, 10.7005],
         ...,
         [13.3800, 11.5327, 15.3036],
         [15.2358,  9.7479, 11.4976],
         [ 9.5655, 10.7195, 11.8837]],
        [[10.8245, 12.5510, 11.9505],
         [10.5629, 10.7106, 12.8442],
         [13.6664, 11.3607, 11.6580],
         ...,
         [14.2812, 13.6797, 17.7604],
         [16.6337, 10.3395, 12.2671],
         [10.5066, 11.0342, 12.3844]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9430, 1.0215, 0.9297],
         [0.9807, 0.9619, 0.9245],
         [1.0020, 0.9899, 0.9372],
         ...,
         [1.0172, 1.1791, 1.1219],
         [1.0690, 0.9858, 0.9368],
         [0.9707, 0.9831, 0.9255]],
        [[0.9351, 0.9850, 0.8794],
         [0.9132, 0.9563, 0.9035],
         [0.9618, 0.9627, 0.8695],
         ...,
         [0.9666, 0.9576, 0.9347],
         [0.9884, 0.9322, 0.8837],
         [0.9161, 0.9556, 0.8918]],
        [[0.9342, 0.9808, 0.8741],
         [0.9068, 0.9557, 0.9011],
         [0.9574, 0.9595, 0.8626],
         ...,
         [0.9612, 0.9392, 0.9183],
         [0.9802, 0.9264, 0.8780],
         [0.9106, 0.9524, 0.8880]],
        ...,
        [[0.9330, 0.9757, 0.8676],
         [0.8993, 0.9548, 0.8981],
         [0.9521, 0.9557, 0.8544],
         ...,
         [0.9547, 0.9184, 0.8996],
         [0.9706, 0.9194, 0.8712],
         [0.9042, 0.9485, 0.8833]],
        [[0.9360, 0.9889, 0.8846],
         [0.9195, 0.9570, 0.9058],
         [0.9660, 0.9656, 0.8761],
         ...,
         [0.9717, 0.9760, 0.9510],
         [0.9963, 0.9377, 0.8891],
         [0.9213, 0.9586, 0.8953]],
        [[0.9380, 0.9978, 0.8964],
         [0.9345, 0.9584, 0.9110],
         [0.9755, 0.9723, 0.8917],
         ...,
         [0.9836, 1.0220, 0.9909],
         [1.0147, 0.9504, 0.9016],
         [0.9338, 0.9653, 0.9035]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.2557, 12.1578, 14.0897],
         [15.9969, 11.3463, 13.7005],
         [12.4117, 32.3078, 18.0984],
         ...,
         [16.6917, 15.6207, 25.6135],
         [13.8008, 12.0484, 14.3022],
         [12.7144, 11.8460, 13.8027]],
        [[10.5317, 11.5327, 10.8489],
         [ 8.6132, 10.5776, 12.0505],
         [10.7730, 19.4596,  9.0428],
         ...,
         [12.9899, 10.5988, 14.2299],
         [11.6941,  9.9868, 10.9404],
         [ 9.3910, 10.5692, 11.8003]],
        [[10.4454, 11.4576, 10.5034],
         [ 7.9778, 10.4861, 11.8606],
         [10.5858, 18.2759,  8.2985],
         ...,
         [12.5929, 10.1020, 13.2313],
         [11.4568,  9.7575, 10.5835],
         [ 9.0453, 10.4211, 11.5736]],
        ...,
        [[10.3392, 11.3650, 10.0900],
         [ 7.2539, 10.3737, 11.6290],
         [10.3580, 16.9063,  7.4594],
         ...,
         [12.1170,  9.5175, 12.0888],
         [11.1689,  9.4802, 10.1566],
         [ 8.6339, 10.2401, 11.2982]],
        [[10.6120, 11.6025, 11.1778],
         [ 9.2447, 10.6627, 12.2285],
         [10.9488, 20.6203,  9.7891],
         ...,
         [13.3675, 11.0792, 15.2186],
         [11.9176, 10.2034, 11.2806],
         [ 9.7219, 10.7079, 12.0136]],
        [[10.7915, 11.7580, 11.9395],
         [10.8069, 10.8530, 12.6307],
         [11.3468, 23.4327, 11.6610],
         ...,
         [14.2401, 12.2177, 17.6503],
         [12.4260, 10.6978, 12.0692],
         [10.4939, 11.0203, 12.4980]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9305, 1.0230, 0.8880],
         [0.9932, 1.0056, 0.8816],
         [0.9458, 1.4551, 0.9532],
         ...,
         [1.0024, 1.0973, 1.0754],
         [0.9642, 1.0206, 0.8914],
         [0.9498, 1.0163, 0.8833]],
        [[0.9210, 1.0096, 0.8353],
         [0.8956, 0.9891, 0.8548],
         [0.9242, 1.1796, 0.8059],
         ...,
         [0.9535, 0.9896, 0.8903],
         [0.9363, 0.9764, 0.8368],
         [0.9059, 0.9889, 0.8507]],
        [[0.9198, 1.0080, 0.8297],
         [0.8872, 0.9871, 0.8517],
         [0.9217, 1.1542, 0.7938],
         ...,
         [0.9482, 0.9789, 0.8740],
         [0.9332, 0.9715, 0.8310],
         [0.9013, 0.9858, 0.8471]],
        ...,
        [[0.9184, 1.0060, 0.8229],
         [0.8776, 0.9847, 0.8480],
         [0.9187, 1.1248, 0.7801],
         ...,
         [0.9419, 0.9664, 0.8554],
         [0.9294, 0.9656, 0.8240],
         [0.8959, 0.9819, 0.8426]],
        [[0.9220, 1.0111, 0.8406],
         [0.9040, 0.9909, 0.8577],
         [0.9265, 1.2045, 0.8180],
         ...,
         [0.9584, 0.9999, 0.9063],
         [0.9393, 0.9811, 0.8423],
         [0.9103, 0.9919, 0.8542]],
        [[0.9244, 1.0144, 0.8530],
         [0.9246, 0.9950, 0.8643],
         [0.9317, 1.2648, 0.8485],
         ...,
         [0.9700, 1.0243, 0.9459],
         [0.9460, 0.9917, 0.8551],
         [0.9205, 0.9986, 0.8621]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.2255, 12.9926, 14.0314],
         [14.7815, 10.9124, 13.6430],
         [13.5886, 15.5266, 15.4186],
         ...,
         [16.7675, 18.4588, 25.7359],
         [17.7419, 11.7053, 14.3695],
         [13.0492, 11.8588, 13.7574]],
        [[10.5779, 11.7641, 10.8829],
         [ 8.7995, 10.6278, 12.2522],
         [11.9083, 12.7554,  9.6882],
         ...,
         [12.9903, 10.6276, 14.2744],
         [13.3341,  9.1610, 11.0731],
         [ 9.2551, 10.5752, 11.7194]],
        [[10.5004, 11.6204, 10.5459],
         [ 8.2522, 10.5930, 12.0902],
         [11.7153, 12.4488,  9.1467],
         ...,
         [12.5863,  9.9256, 13.2700],
         [12.8709,  8.8872, 10.7216],
         [ 8.8698, 10.4263, 11.4891]],
        ...,
        [[10.4050, 11.4444, 10.1421],
         [ 7.6201, 10.5501, 11.8921],
         [11.4801, 12.0784,  8.5164],
         ...,
         [12.1022,  9.1183, 12.1211],
         [12.3183,  8.5588, 10.3008],
         [ 8.4137, 10.2444, 11.2095]],
        [[10.6500, 11.8984, 11.2036],
         [ 9.3369, 10.6599, 12.4036],
         [12.0893, 13.0453, 10.2166],
         ...,
         [13.3748, 11.3198, 15.2691],
         [13.7765,  9.4212, 11.4079],
         [ 9.6258, 10.7146, 11.9361]],
        [[10.8108, 12.2002, 11.9450],
         [10.6417, 10.7312, 12.7446],
         [12.4985, 13.7084, 11.4868],
         ...,
         [14.2640, 13.0109, 17.7162],
         [14.8054, 10.0219, 12.1827],
         [10.4969, 11.0286, 12.4287]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9376, 1.0207, 0.9113],
         [0.9846, 0.9761, 0.9050],
         [0.9688, 1.0751, 0.9339],
         ...,
         [1.0108, 1.1379, 1.1017],
         [1.0237, 0.9931, 0.9168],
         [0.9617, 0.9964, 0.9069]],
        [[0.9290, 0.9944, 0.8601],
         [0.9055, 0.9700, 0.8824],
         [0.9466, 1.0156, 0.8407],
         ...,
         [0.9609, 0.9700, 0.9153],
         [0.9655, 0.9386, 0.8632],
         [0.9115, 0.9689, 0.8737]],
        [[0.9280, 0.9913, 0.8546],
         [0.8983, 0.9693, 0.8797],
         [0.9441, 1.0091, 0.8319],
         ...,
         [0.9556, 0.9550, 0.8989],
         [0.9593, 0.9327, 0.8575],
         [0.9065, 0.9657, 0.8700]],
        ...,
        [[0.9267, 0.9875, 0.8481],
         [0.8899, 0.9684, 0.8765],
         [0.9410, 1.0011, 0.8216],
         ...,
         [0.9492, 0.9376, 0.8802],
         [0.9520, 0.9256, 0.8506],
         [0.9004, 0.9618, 0.8654]],
        [[0.9300, 0.9973, 0.8653],
         [0.9126, 0.9707, 0.8848],
         [0.9490, 1.0219, 0.8493],
         ...,
         [0.9660, 0.9849, 0.9315],
         [0.9713, 0.9441, 0.8686],
         [0.9164, 0.9719, 0.8772]],
        [[0.9321, 1.0037, 0.8774],
         [0.9299, 0.9722, 0.8904],
         [0.9544, 1.0361, 0.8699],
         ...,
         [0.9777, 1.0211, 0.9713],
         [0.9849, 0.9570, 0.8813],
         [0.9280, 0.9786, 0.8853]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.4468, 12.1451, 14.0171],
         [14.0094, 11.8071, 13.8187],
         [12.8926, 15.3682, 14.4373],
         ...,
         [16.8372, 17.0331, 25.6594],
         [16.9494, 11.5387, 14.0479],
         [12.2368, 11.8664, 13.9190]],
        [[10.2810, 11.5291, 10.8535],
         [ 8.9646, 10.5590, 11.3125],
         [11.6283, 12.4742, 10.3707],
         ...,
         [13.0290, 10.5854, 14.2486],
         [13.1388,  9.5869, 11.0613],
         [ 9.6346, 10.6842, 12.3116]],
        [[10.1452, 11.4551, 10.5153],
         [ 8.4827, 10.4140, 11.0357],
         [11.4806, 12.1561,  9.9546],
         ...,
         [12.6219,  9.9801, 13.2480],
         [12.7310,  9.3695, 10.7388],
         [ 9.3536, 10.5464, 12.1260]],
        ...,
        [[ 9.9792, 11.3638, 10.1100],
         [ 7.9203, 10.2368, 10.7015],
         [11.3000, 11.7726,  9.4612],
         ...,
         [12.1343,  9.2767, 12.1031],
         [12.2425,  9.1065, 10.3516],
         [ 9.0162, 10.3777, 11.8995]],
        [[10.4080, 11.5979, 11.1755],
         [ 9.4339, 10.6947, 11.5742],
         [11.7662, 12.7752, 10.7703],
         ...,
         [13.4165, 11.1768, 15.2395],
         [13.5268,  9.7921, 11.3676],
         [ 9.9015, 10.8132, 12.4855]],
        [[10.6938, 11.7511, 11.9202],
         [10.5582, 11.0003, 12.1733],
         [12.0766, 13.4654, 11.7075],
         ...,
         [14.3127, 12.6013, 17.6766],
         [14.4240, 10.2606, 12.0739],
         [10.5169, 11.1031, 12.8779]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9466, 1.0112, 0.9319],
         [0.9805, 1.0040, 0.9287],
         [0.9657, 1.0803, 0.9388],
         ...,
         [1.0179, 1.1160, 1.1213],
         [1.0193, 0.9982, 0.9324],
         [0.9571, 1.0052, 0.9303]],
        [[0.9312, 0.9980, 0.8805],
         [0.9138, 0.9772, 0.8880],
         [0.9490, 1.0183, 0.8726],
         ...,
         [0.9675, 0.9778, 0.9357],
         [0.9690, 0.9564, 0.8839],
         [0.9227, 0.9799, 0.9042]],
        [[0.9294, 0.9964, 0.8750],
         [0.9075, 0.9741, 0.8834],
         [0.9471, 1.0115, 0.8659],
         ...,
         [0.9622, 0.9648, 0.9194],
         [0.9636, 0.9517, 0.8786],
         [0.9190, 0.9769, 0.9012]],
        ...,
        [[0.9272, 0.9945, 0.8684],
         [0.9000, 0.9703, 0.8780],
         [0.9447, 1.0032, 0.8578],
         ...,
         [0.9557, 0.9497, 0.9008],
         [0.9571, 0.9461, 0.8723],
         [0.9145, 0.9733, 0.8975]],
        [[0.9329, 0.9995, 0.8857],
         [0.9200, 0.9801, 0.8922],
         [0.9508, 1.0247, 0.8791],
         ...,
         [0.9727, 0.9905, 0.9518],
         [0.9741, 0.9608, 0.8888],
         [0.9262, 0.9827, 0.9070]],
        [[0.9367, 1.0028, 0.8978],
         [0.9349, 0.9867, 0.9020],
         [0.9550, 1.0395, 0.8944],
         ...,
         [0.9845, 1.0210, 0.9915],
         [0.9860, 0.9708, 0.9003],
         [0.9343, 0.9889, 0.9134]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.8205, 11.6252, 13.8463],
         [12.5550, 11.5371, 14.0036],
         [12.7952, 11.5883, 13.7254],
         ...,
         [16.9818, 16.3229, 25.5859],
         [18.3937, 12.9820, 13.8443],
         [12.1693, 11.8453, 14.0306]],
        [[ 9.9208, 11.3557, 11.2268],
         [ 9.4648, 11.2416, 11.2831],
         [11.6214, 11.3321, 11.6789],
         ...,
         [13.0910, 10.5300, 14.2271],
         [13.8359, 10.9034, 11.1619],
         [ 9.6753, 10.7199, 12.6327]],
        [[ 9.7080, 11.3228, 10.9391],
         [ 9.1395, 11.2056, 10.9854],
         [11.4838, 11.3008, 11.4478],
         ...,
         [12.6761,  9.9738, 13.2302],
         [13.3568, 10.6704, 10.8683],
         [ 9.4045, 10.5882, 12.4697]],
        ...,
        [[ 9.4501, 11.2821, 10.5923],
         [ 8.7512, 11.1610, 10.6267],
         [11.3153, 11.2620, 11.1673],
         ...,
         [12.1793,  9.3242, 12.0893],
         [12.7850, 10.3882, 10.5145],
         [ 9.0788, 10.4271, 12.2702]],
        [[10.1215, 11.3862, 11.4992],
         [ 9.7754, 11.2750, 11.5651],
         [11.7499, 11.3611, 11.8964],
         ...,
         [13.4862, 11.0709, 15.2141],
         [14.2936, 11.1230, 11.4401],
         [ 9.9322, 10.8429, 12.7852]],
        [[10.5787, 11.4538, 12.1237],
         [10.4973, 11.3490, 12.2126],
         [12.0385, 11.4253, 12.3908],
         ...,
         [14.4009, 12.3650, 17.6411],
         [15.3577, 11.6234, 12.0786],
         [10.5237, 11.1194, 13.1281]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9685, 1.0040, 0.9441],
         [0.9782, 1.0021, 0.9467],
         [0.9814, 1.0032, 0.9421],
         ...,
         [1.0367, 1.1047, 1.1350],
         [1.0554, 1.0331, 0.9441],
         [0.9731, 1.0087, 0.9471]],
        [[0.9434, 0.9982, 0.9015],
         [0.9374, 0.9957, 0.9024],
         [0.9659, 0.9977, 0.9088],
         ...,
         [0.9853, 0.9805, 0.9503],
         [0.9952, 0.9885, 0.9004],
         [0.9402, 0.9846, 0.9244]],
        [[0.9406, 0.9975, 0.8968],
         [0.9331, 0.9950, 0.8976],
         [0.9641, 0.9970, 0.9051],
         ...,
         [0.9798, 0.9686, 0.9341],
         [0.9888, 0.9835, 0.8957],
         [0.9366, 0.9817, 0.9217]],
        ...,
        [[0.9372, 0.9966, 0.8912],
         [0.9280, 0.9940, 0.8917],
         [0.9618, 0.9962, 0.9005],
         ...,
         [0.9733, 0.9546, 0.9155],
         [0.9813, 0.9774, 0.8899],
         [0.9323, 0.9783, 0.9185]],
        [[0.9461, 0.9988, 0.9059],
         [0.9415, 0.9965, 0.9070],
         [0.9676, 0.9983, 0.9124],
         ...,
         [0.9905, 0.9921, 0.9663],
         [1.0012, 0.9932, 0.9050],
         [0.9436, 0.9872, 0.9268]],
        [[0.9521, 1.0003, 0.9161],
         [0.9510, 0.9980, 0.9175],
         [0.9714, 0.9997, 0.9204],
         ...,
         [1.0026, 1.0198, 1.0058],
         [1.0153, 1.0039, 0.9153],
         [0.9514, 0.9931, 0.9324]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9905, 11.8169, 13.7080],
         [11.9602, 11.7638, 13.7543],
         [11.4071, 11.6037, 13.8022],
         ...,
         [17.0645, 14.9172, 25.4336],
         [15.7726, 14.9730, 14.1576],
         [12.7348, 11.8871, 13.8919]],
        [[ 9.7930, 11.4320, 11.7346],
         [ 9.8145, 11.4141, 11.7870],
         [10.9779, 11.3429, 11.4996],
         ...,
         [13.1453, 10.4304, 14.1816],
         [12.7644, 12.5958, 11.3484],
         [ 9.3820, 10.6205, 12.2897]],
        [[ 9.5506, 11.3852, 11.5110],
         [ 9.5772, 11.3716, 11.5640],
         [10.9259, 11.3110, 11.2427],
         ...,
         [12.7275,  9.9785, 13.1924],
         [12.4344, 12.3291, 11.0420],
         [ 9.0338, 10.4734, 12.1046]],
        ...,
        [[ 9.2581, 11.3275, 11.2393],
         [ 9.2907, 11.3190, 11.2929],
         [10.8617, 11.2716, 10.9318],
         ...,
         [12.2273,  9.4448, 12.0600],
         [12.0366, 12.0059, 10.6730],
         [ 8.6195, 10.2937, 11.8788]],
        [[10.0222, 11.4754, 11.9449],
         [10.0389, 11.4536, 11.9968],
         [11.0261, 11.3724, 11.7420],
         ...,
         [13.5432, 10.8657, 15.1607],
         [13.0769, 12.8472, 11.6390],
         [ 9.7154, 10.7582, 12.4630]],
        [[10.5472, 11.5716, 12.4225],
         [10.5521, 11.5411, 12.4730],
         [11.1333, 11.4378, 12.2951],
         ...,
         [14.4644, 11.8918, 17.5669],
         [13.7937, 13.4197, 12.3066],
         [10.4937, 11.0682, 12.8542]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9681, 1.0103, 0.9417],
         [0.9677, 1.0092, 0.9425],
         [0.9604, 1.0058, 0.9432],
         ...,
         [1.0351, 1.0768, 1.1324],
         [1.0181, 1.0780, 0.9490],
         [0.9779, 1.0118, 0.9447]],
        [[0.9390, 1.0021, 0.9096],
         [0.9393, 1.0017, 0.9105],
         [0.9547, 1.0002, 0.9058],
         ...,
         [0.9833, 0.9806, 0.9494],
         [0.9783, 1.0270, 0.9033],
         [0.9336, 0.9847, 0.9186]],
        [[0.9358, 1.0011, 0.9060],
         [0.9362, 1.0008, 0.9068],
         [0.9540, 0.9995, 0.9016],
         ...,
         [0.9778, 0.9709, 0.9333],
         [0.9739, 1.0213, 0.8983],
         [0.9290, 0.9815, 0.9156]],
        ...,
        [[0.9320, 0.9998, 0.9016],
         [0.9324, 0.9997, 0.9024],
         [0.9532, 0.9986, 0.8966],
         ...,
         [0.9712, 0.9595, 0.9149],
         [0.9687, 1.0144, 0.8923],
         [0.9235, 0.9777, 0.9120]],
        [[0.9421, 1.0030, 0.9130],
         [0.9423, 1.0025, 0.9139],
         [0.9553, 1.0008, 0.9097],
         ...,
         [0.9886, 0.9899, 0.9653],
         [0.9824, 1.0324, 0.9081],
         [0.9380, 0.9876, 0.9215]],
        [[0.9490, 1.0051, 0.9208],
         [0.9491, 1.0044, 0.9216],
         [0.9567, 1.0022, 0.9187],
         ...,
         [1.0008, 1.0119, 1.0045],
         [0.9919, 1.0447, 0.9189],
         [0.9483, 0.9943, 0.9278]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.7803, 11.5492, 13.7197],
         [12.1611, 11.7922, 13.6432],
         [11.2961, 12.7781, 13.9845],
         ...,
         [17.0939, 14.8899, 25.4064],
         [14.5672, 12.8132, 13.8756],
         [13.0410, 11.8832, 13.8320]],
        [[ 9.9538, 11.2888, 11.7739],
         [ 9.6804, 10.7962, 12.0631],
         [10.8198, 11.7043, 10.9959],
         ...,
         [13.1585, 10.4057, 14.1743],
         [12.2728, 11.2184, 11.4370],
         [ 9.2582, 10.6003, 12.0977]],
        [[ 9.7484, 11.2570, 11.5531],
         [ 9.4109, 10.6789, 11.8807],
         [10.7623, 11.5778, 10.6735],
         ...,
         [12.7391,  9.9542, 13.1865],
         [12.0152, 11.0353, 11.1666],
         [ 8.8738, 10.4514, 11.8987]],
        ...,
        [[ 9.4993, 11.2176, 11.2848],
         [ 9.0867, 10.5351, 11.6581],
         [10.6913, 11.4227, 10.2864],
         ...,
         [12.2371,  9.4210, 12.0556],
         [11.7030, 10.8122, 10.8398],
         [ 8.4188, 10.2696, 11.6563]],
        [[10.1473, 11.3183, 11.9815],
         [ 9.9361, 10.9056, 12.2340],
         [10.8732, 11.8223, 11.3023],
         ...,
         [13.5579, 10.8407, 15.1519],
         [12.5156, 11.3901, 11.6924],
         [ 9.6279, 10.7396, 12.2843]],
        [[10.5877, 11.3836, 12.4527],
         [10.5246, 11.1510, 12.6197],
         [10.9920, 12.0869, 12.0088],
         ...,
         [14.4827, 11.8660, 17.5543],
         [13.0684, 11.7784, 12.2765],
         [10.4967, 11.0535, 12.7065]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9612, 1.0043, 0.9419],
         [0.9662, 1.0095, 0.9406],
         [0.9548, 1.0307, 0.9462],
         ...,
         [1.0314, 1.0760, 1.1320],
         [0.9980, 1.0314, 0.9444],
         [0.9779, 1.0115, 0.9437]],
        [[0.9371, 0.9987, 0.9102],
         [0.9335, 0.9882, 0.9149],
         [0.9485, 1.0076, 0.8976],
         ...,
         [0.9794, 0.9798, 0.9493],
         [0.9677, 0.9972, 0.9048],
         [0.9279, 0.9840, 0.9155]],
        [[0.9343, 0.9981, 0.9067],
         [0.9299, 0.9857, 0.9120],
         [0.9477, 1.0049, 0.8923],
         ...,
         [0.9739, 0.9701, 0.9332],
         [0.9643, 0.9933, 0.9004],
         [0.9228, 0.9808, 0.9123]],
        ...,
        [[0.9311, 0.9972, 0.9023],
         [0.9256, 0.9826, 0.9084],
         [0.9468, 1.0016, 0.8860],
         ...,
         [0.9672, 0.9587, 0.9148],
         [0.9602, 0.9885, 0.8950],
         [0.9168, 0.9769, 0.9083]],
        [[0.9396, 0.9994, 0.9136],
         [0.9368, 0.9905, 0.9177],
         [0.9492, 1.0102, 0.9026],
         ...,
         [0.9847, 0.9891, 0.9652],
         [0.9709, 1.0009, 0.9089],
         [0.9328, 0.9870, 0.9185]],
        [[0.9454, 1.0008, 0.9213],
         [0.9446, 0.9958, 0.9240],
         [0.9508, 1.0159, 0.9141],
         ...,
         [0.9969, 1.0111, 1.0043],
         [0.9782, 1.0092, 0.9184],
         [0.9442, 0.9937, 0.9254]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[11.9095, 11.5703, 13.7391],
         [12.1726, 11.6984, 13.6517],
         [11.2303, 12.8709, 13.9537],
         ...,
         [17.1846, 14.8297, 25.3342],
         [14.6421, 12.7521, 13.8439],
         [12.7959, 11.8871, 13.8822]],
        [[ 9.8518, 11.1258, 11.7271],
         [ 9.6733, 10.9232, 11.9210],
         [10.7000, 11.7301, 11.2360],
         ...,
         [13.1995, 10.3339, 14.1561],
         [12.3003, 11.5674, 11.5947],
         [ 9.3557, 10.6212, 12.3036]],
        [[ 9.6231, 11.0720, 11.4995],
         [ 9.4020, 10.8309, 11.7227],
         [10.6361, 11.5961, 10.9387],
         ...,
         [12.7754,  9.8820, 13.1721],
         [12.0378, 11.4286, 11.3430],
         [ 9.0000, 10.4742, 12.1212]],
        ...,
        [[ 9.3467, 11.0055, 11.2231],
         [ 9.0758, 10.7174, 11.4810],
         [10.5574, 11.4319, 10.5806],
         ...,
         [12.2678,  9.3485, 12.0453],
         [11.7197, 11.2586, 11.0382],
         [ 8.5772, 10.2945, 11.8984]],
        [[10.0677, 11.1757, 11.9412],
         [ 9.9307, 11.0091, 12.1072],
         [10.7593, 11.8552, 11.5176],
         ...,
         [13.6036, 10.7694, 15.1297],
         [12.5477, 11.6970, 11.8320],
         [ 9.6966, 10.7588, 12.4746]],
        [[10.5610, 11.2867, 12.4277],
         [10.5233, 11.2012, 12.5282],
         [10.8914, 12.1360, 12.1643],
         ...,
         [14.5395, 11.7965, 17.5217],
         [13.1115, 11.9882, 12.3731],
         [10.4934, 11.0687, 12.8602]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9652, 1.0050, 0.9422],
         [0.9687, 1.0077, 0.9408],
         [0.9562, 1.0328, 0.9457],
         ...,
         [1.0349, 1.0748, 1.1308],
         [1.0013, 1.0303, 0.9439],
         [0.9769, 1.0117, 0.9445]],
        [[0.9380, 0.9954, 0.9095],
         [0.9357, 0.9911, 0.9126],
         [0.9492, 1.0084, 0.9015],
         ...,
         [0.9823, 0.9784, 0.9490],
         [0.9704, 1.0049, 0.9073],
         [0.9315, 0.9846, 0.9189]],
        [[0.9350, 0.9943, 0.9058],
         [0.9321, 0.9891, 0.9094],
         [0.9484, 1.0055, 0.8967],
         ...,
         [0.9766, 0.9688, 0.9330],
         [0.9669, 1.0019, 0.9032],
         [0.9268, 0.9814, 0.9159]],
        ...,
        [[0.9313, 0.9928, 0.9013],
         [0.9278, 0.9867, 0.9055],
         [0.9473, 1.0020, 0.8908],
         ...,
         [0.9699, 0.9573, 0.9147],
         [0.9627, 0.9983, 0.8983],
         [0.9212, 0.9776, 0.9123]],
        [[0.9409, 0.9965, 0.9130],
         [0.9391, 0.9929, 0.9157],
         [0.9500, 1.0111, 0.9061],
         ...,
         [0.9876, 0.9878, 0.9648],
         [0.9736, 1.0077, 0.9112],
         [0.9360, 0.9876, 0.9216]],
        [[0.9474, 0.9989, 0.9209],
         [0.9469, 0.9970, 0.9225],
         [0.9517, 1.0171, 0.9166],
         ...,
         [1.0000, 1.0098, 1.0037],
         [0.9811, 1.0139, 0.9200],
         [0.9465, 0.9942, 0.9279]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.1475, 11.6195, 13.7387],
         [12.2846, 11.6071, 13.6667],
         [11.3010, 12.6390, 13.9775],
         ...,
         [17.3820, 15.0215, 25.1601],
         [14.6208, 12.3396, 13.7113],
         [12.5276, 11.8848, 13.9685]],
        [[ 9.6889, 11.0388, 11.6898],
         [ 9.6069, 11.0589, 11.7956],
         [10.4663, 11.6658, 11.4436],
         ...,
         [13.2895, 10.1588, 14.1153],
         [12.2617, 11.6499, 11.7140],
         [ 9.4781, 10.6385, 12.5771]],
        [[ 9.4214, 10.9689, 11.4584],
         [ 9.3189, 10.9929, 11.5825],
         [10.3674, 11.5506, 11.1637],
         ...,
         [12.8551,  9.6787, 13.1407],
         [11.9975, 11.5672, 11.4879],
         [ 9.1565, 10.4937, 12.4148]],
        ...,
        [[ 9.0997, 10.8829, 11.1776],
         [ 8.9734, 10.9115, 11.3235],
         [10.2459, 11.4093, 10.8258],
         ...,
         [12.3356,  9.1141, 12.0240],
         [11.6775, 11.4654, 11.2134],
         [ 8.7723, 10.3166, 12.2163]],
        [[ 9.9426, 11.1037, 11.9076],
         [ 9.8806, 11.1202, 11.9957],
         [10.5585, 11.7731, 11.7082],
         ...,
         [13.7036, 10.6232, 15.0792],
         [12.5108, 11.7267, 11.9267],
         [ 9.7852, 10.7741, 12.7288]],
        [[10.5261, 11.2482, 12.4026],
         [10.5127, 11.2567, 12.4495],
         [10.7648, 12.0134, 12.3139],
         ...,
         [14.6635, 11.7246, 17.4456],
         [13.0784, 11.8980, 12.4097],
         [10.4983, 11.0793, 13.0702]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9703, 1.0042, 0.9422],
         [0.9721, 1.0039, 0.9411],
         [0.9591, 1.0261, 0.9461],
         ...,
         [1.0395, 1.0772, 1.1280],
         [1.0030, 1.0196, 0.9418],
         [0.9753, 1.0099, 0.9460]],
        [[0.9378, 0.9917, 0.9089],
         [0.9367, 0.9922, 0.9106],
         [0.9481, 1.0052, 0.9049],
         ...,
         [0.9854, 0.9729, 0.9484],
         [0.9718, 1.0049, 0.9093],
         [0.9350, 0.9832, 0.9234]],
        [[0.9343, 0.9902, 0.9052],
         [0.9329, 0.9908, 0.9072],
         [0.9468, 1.0027, 0.9004],
         ...,
         [0.9797, 0.9626, 0.9325],
         [0.9683, 1.0031, 0.9056],
         [0.9308, 0.9801, 0.9207]],
        ...,
        [[0.9300, 0.9884, 0.9006],
         [0.9284, 0.9890, 0.9030],
         [0.9452, 0.9997, 0.8949],
         ...,
         [0.9728, 0.9505, 0.9144],
         [0.9641, 1.0009, 0.9012],
         [0.9257, 0.9763, 0.9175]],
        [[0.9412, 0.9931, 0.9125],
         [0.9404, 0.9935, 0.9139],
         [0.9493, 1.0075, 0.9092],
         ...,
         [0.9909, 0.9828, 0.9640],
         [0.9751, 1.0065, 0.9128],
         [0.9391, 0.9861, 0.9258]],
        [[0.9489, 0.9962, 0.9205],
         [0.9487, 0.9964, 0.9213],
         [0.9520, 1.0126, 0.9191],
         ...,
         [1.0036, 1.0065, 1.0025],
         [0.9826, 1.0102, 0.9206],
         [0.9485, 0.9926, 0.9314]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7402, 11.7648, 13.6809],
         [12.4970, 11.5385, 13.7263],
         [11.9828, 11.9267, 14.0923],
         ...,
         [18.0413, 15.9497, 24.4809],
         [13.9249, 16.1960, 13.8296],
         [12.3214, 11.8870, 14.1586]],
        [[ 9.3797, 10.8333, 11.7608],
         [ 9.4933, 11.2574, 11.6794],
         [ 9.7985, 11.4662, 11.7703],
         ...,
         [13.5941,  9.7473, 13.9890],
         [11.7561, 12.7418, 11.8815],
         [ 9.5861, 10.6247, 12.9592]],
        [[ 9.0308, 10.7232, 11.5426],
         [ 9.1757, 11.2231, 11.4483],
         [ 9.5574, 11.4104, 11.5108],
         ...,
         [13.1261,  9.1708, 13.0528],
         [11.5122, 12.3690, 11.6603],
         [ 9.2928, 10.4781, 12.8180]],
        ...,
        [[ 8.6157, 10.5882, 11.2775],
         [ 8.7962, 11.1806, 11.1677],
         [ 9.2664, 11.3416, 11.1968],
         ...,
         [12.5675,  8.5025, 11.9773],
         [11.2166, 11.9214, 11.3915],
         [ 8.9412, 10.2989, 12.6448]],
        [[ 9.7137, 10.9359, 11.9658],
         [ 9.7963, 11.2892, 11.8970],
         [10.0264, 11.5179, 12.0150],
         ...,
         [14.0410, 10.3116, 14.9130],
         [11.9858, 13.0959, 12.0895],
         [ 9.8651, 10.7619, 13.0910]],
        [[10.4936, 11.1658, 12.4310],
         [10.4996, 11.3596, 12.3915],
         [10.5484, 11.6328, 12.5731],
         ...,
         [15.0799, 11.6751, 17.1734],
         [12.5086, 13.9126, 12.5614],
         [10.5098, 11.0709, 13.3865]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 0.9889, 0.9334],
         [0.9747, 0.9841, 0.9341],
         [0.9679, 0.9924, 0.9400],
         ...,
         [1.0480, 1.0787, 1.1090],
         [0.9936, 1.0839, 0.9358],
         [0.9724, 0.9915, 0.9411]],
        [[0.9335, 0.9689, 0.9021],
         [0.9350, 0.9780, 0.9008],
         [0.9390, 0.9825, 0.9023],
         ...,
         [0.9892, 0.9456, 0.9384],
         [0.9649, 1.0099, 0.9041],
         [0.9362, 0.9645, 0.9216]],
        [[0.9289, 0.9666, 0.8986],
         [0.9308, 0.9773, 0.8970],
         [0.9358, 0.9813, 0.8981],
         ...,
         [0.9830, 0.9333, 0.9231],
         [0.9617, 1.0019, 0.9005],
         [0.9323, 0.9613, 0.9193]],
        ...,
        [[0.9234, 0.9637, 0.8943],
         [0.9258, 0.9764, 0.8925],
         [0.9320, 0.9798, 0.8930],
         ...,
         [0.9756, 0.9190, 0.9056],
         [0.9578, 0.9923, 0.8961],
         [0.9277, 0.9575, 0.9165]],
        [[0.9379, 0.9711, 0.9055],
         [0.9390, 0.9787, 0.9043],
         [0.9420, 0.9836, 0.9063],
         ...,
         [0.9951, 0.9577, 0.9534],
         [0.9679, 1.0175, 0.9075],
         [0.9399, 0.9674, 0.9238]],
        [[0.9482, 0.9761, 0.9130],
         [0.9483, 0.9802, 0.9124],
         [0.9489, 0.9861, 0.9153],
         ...,
         [1.0088, 0.9870, 0.9902],
         [0.9748, 1.0350, 0.9151],
         [0.9484, 0.9740, 0.9286]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8838, 11.8266, 13.6737],
         [12.5991, 11.5707, 13.7377],
         [12.2374, 11.5946, 14.0215],
         ...,
         [18.5732, 14.9151, 23.8437],
         [13.5287, 16.5330, 14.0586],
         [12.3450, 11.8809, 14.2583]],
        [[ 9.3193, 10.7480, 11.7621],
         [ 9.4437, 11.3169, 11.5651],
         [ 9.6342, 11.0801, 12.1843],
         ...,
         [13.8375,  9.6950, 13.8955],
         [11.6298, 12.8535, 11.9188],
         [ 9.5730, 10.5956, 12.9838]],
        [[ 8.9531, 10.6215, 11.5448],
         [ 9.1127, 11.2858, 11.3213],
         [ 9.3532, 11.0180, 11.9743],
         ...,
         [13.3424,  9.1916, 12.9971],
         [11.4141, 12.4591, 11.6776],
         [ 9.2763, 10.4465, 12.8341]],
        ...,
        [[ 8.5185, 10.4665, 11.2808],
         [ 8.7178, 11.2474, 11.0258],
         [ 9.0157, 10.9415, 11.7186],
         ...,
         [12.7524,  8.6029, 11.9623],
         [11.1520, 11.9864, 11.3851],
         [ 8.9209, 10.2644, 12.6508]],
        [[ 9.6708, 10.8661, 11.9662],
         [ 9.7600, 11.3456, 11.7949],
         [ 9.9012, 11.1377, 12.3814],
         ...,
         [14.3109, 10.1843, 14.7800],
         [11.8326, 13.2286, 12.1458],
         [ 9.8553, 10.7352, 13.1235]],
        [[10.4938, 11.1313, 12.4294],
         [10.4960, 11.4092, 12.3183],
         [10.5168, 11.2660, 12.8278],
         ...,
         [15.4136, 11.3530, 16.9361],
         [12.2926, 14.0957, 12.6623],
         [10.5081, 11.0497, 13.4371]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9778, 0.9966, 0.9190],
         [0.9741, 0.9911, 0.9201],
         [0.9693, 0.9916, 0.9247],
         ...,
         [1.0530, 1.0628, 1.0844],
         [0.9863, 1.0975, 0.9253],
         [0.9707, 0.9978, 0.9285]],
        [[0.9307, 0.9735, 0.8879],
         [0.9324, 0.9857, 0.8847],
         [0.9349, 0.9806, 0.8948],
         ...,
         [0.9904, 0.9509, 0.9226],
         [0.9612, 1.0186, 0.8905],
         [0.9341, 0.9702, 0.9078]],
        [[0.9259, 0.9708, 0.8844],
         [0.9280, 0.9850, 0.8808],
         [0.9312, 0.9793, 0.8914],
         ...,
         [0.9839, 0.9401, 0.9080],
         [0.9584, 1.0102, 0.8866],
         [0.9301, 0.9670, 0.9054]],
        ...,
        [[0.9201, 0.9675, 0.8801],
         [0.9228, 0.9842, 0.8760],
         [0.9267, 0.9776, 0.8872],
         ...,
         [0.9761, 0.9275, 0.8912],
         [0.9549, 1.0000, 0.8818],
         [0.9254, 0.9631, 0.9024]],
        [[0.9354, 0.9760, 0.8913],
         [0.9365, 0.9863, 0.8885],
         [0.9384, 0.9818, 0.8980],
         ...,
         [0.9967, 0.9614, 0.9370],
         [0.9639, 1.0267, 0.8942],
         [0.9378, 0.9732, 0.9101]],
        [[0.9462, 0.9817, 0.8988],
         [0.9463, 0.9877, 0.8970],
         [0.9465, 0.9846, 0.9053],
         ...,
         [1.0113, 0.9865, 0.9721],
         [0.9700, 1.0453, 0.9026],
         [0.9464, 0.9800, 0.9152]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.9786, 11.0507, 14.4357],
         [13.8012, 12.2248, 14.0537],
         [15.9969, 15.5620, 17.9692],
         ...,
         [25.0099, 11.8377, 14.1791],
         [11.5441, 15.4371, 17.1889],
         [13.0287, 11.0608, 14.8283]],
        [[ 8.9723, 10.6113, 12.2754],
         [ 9.0181, 11.5514, 10.8300],
         [ 8.6132, 10.0667, 17.6118],
         ...,
         [17.3120, 10.5663, 12.2539],
         [10.1739, 12.4960, 11.8762],
         [ 9.2628, 10.5733, 13.4981]],
        [[ 8.4931, 10.5581, 12.0315],
         [ 8.5553, 11.4706, 10.4863],
         [ 7.9778,  9.5382, 17.5681],
         ...,
         [16.5413, 10.4187, 12.0346],
         [10.0161, 12.1733, 11.3449],
         [ 8.8798, 10.5145, 13.3420]],
        ...,
        [[ 7.9338, 10.4925, 11.7355],
         [ 8.0139, 11.3712, 10.0747],
         [ 7.2539,  8.9207, 17.5140],
         ...,
         [15.6323, 10.2384, 11.7678],
         [ 9.8235, 11.7844, 10.7184],
         [ 8.4263, 10.4420, 13.1507]],
        [[ 9.4387, 10.6606, 12.5049],
         [ 9.4675, 11.6264, 11.1574],
         [ 9.2447, 10.5805, 17.6523],
         ...,
         [18.0553, 10.7044, 12.4600],
         [10.3219, 12.8016, 12.3888],
         [ 9.6311, 10.6279, 13.6439]],
        [[10.5553, 10.7703, 13.0267],
         [10.5400, 11.7937, 11.9152],
         [10.8069, 11.8091, 17.7420],
         ...,
         [19.8106, 11.0155, 12.9271],
         [10.6561, 13.5025, 13.5995],
         [10.4964, 10.7494, 13.9711]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9665, 0.9850, 0.8819],
         [0.9642, 1.0102, 0.8757],
         [0.9932, 1.0818, 0.9394],
         ...,
         [1.1123, 1.0019, 0.8777],
         [0.9343, 1.0791, 0.9267],
         [0.9540, 0.9852, 0.8883]],
        [[0.9004, 0.9756, 0.8468],
         [0.9010, 0.9957, 0.8232],
         [0.8956, 0.9639, 0.9336],
         ...,
         [1.0106, 0.9746, 0.8464],
         [0.9162, 1.0160, 0.8403],
         [0.9042, 0.9748, 0.8666]],
        [[0.8940, 0.9744, 0.8428],
         [0.8948, 0.9940, 0.8177],
         [0.8872, 0.9526, 0.9328],
         ...,
         [1.0004, 0.9715, 0.8428],
         [0.9142, 1.0091, 0.8316],
         [0.8991, 0.9735, 0.8641]],
        ...,
        [[0.8866, 0.9730, 0.8380],
         [0.8877, 0.9919, 0.8110],
         [0.8776, 0.9393, 0.9320],
         ...,
         [0.9884, 0.9676, 0.8385],
         [0.9116, 1.0007, 0.8214],
         [0.8931, 0.9720, 0.8610]],
        [[0.9065, 0.9766, 0.8505],
         [0.9069, 0.9974, 0.8286],
         [0.9040, 0.9749, 0.9342],
         ...,
         [1.0204, 0.9776, 0.8498],
         [0.9182, 1.0226, 0.8486],
         [0.9091, 0.9759, 0.8690]],
        [[0.9213, 0.9790, 0.8590],
         [0.9211, 1.0009, 0.8409],
         [0.9246, 1.0013, 0.9357],
         ...,
         [1.0436, 0.9843, 0.8574],
         [0.9226, 1.0376, 0.8683],
         [0.9205, 0.9786, 0.8743]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1222, 11.8866, 13.7211],
         [12.8549, 11.6667, 13.7623],
         [12.8846, 11.8400, 14.0530],
         ...,
         [20.1973, 11.5407, 21.5790],
         [12.3597, 16.2600, 14.7377],
         [12.4961, 11.7464, 14.3820]],
        [[ 9.2284, 10.6128, 11.8946],
         [ 9.3311, 11.3762, 11.3792],
         [ 9.3190, 10.5670, 13.2676],
         ...,
         [14.6030,  9.0106, 13.6174],
         [11.3375, 12.7629, 11.9101],
         [ 9.4938, 10.5531, 13.1055]],
        [[ 8.8349, 10.4650, 11.6861],
         [ 8.9683, 11.3408, 11.1145],
         [ 8.9527, 10.4193, 13.1735],
         ...,
         [14.0284,  8.7387, 12.8631],
         [11.2170, 12.3859, 11.6001],
         [ 9.1763, 10.4141, 12.9555]],
        ...,
        [[ 8.3698, 10.2843, 11.4324],
         [ 8.5376, 11.2969, 10.7945],
         [ 8.5180, 10.2388, 13.0576],
         ...,
         [13.3465,  8.4127, 11.9846],
         [11.0692, 11.9335, 11.2266],
         [ 8.7969, 10.2441, 12.7718]],
        [[ 9.6073, 10.7512, 12.0904],
         [ 9.6791, 11.4090, 11.6292],
         [ 9.6705, 10.7053, 13.3551],
         ...,
         [15.1545,  9.2691, 14.3530],
         [11.4499, 13.1210, 12.2036],
         [ 9.7966, 10.6831, 13.2454]],
        [[10.4992, 11.0630, 12.5339],
         [10.4936, 11.4818, 12.2004],
         [10.4938, 11.0168, 13.5502],
         ...,
         [16.4460,  9.8660, 16.1200],
         [11.7019, 13.9473, 12.8771],
         [10.4996, 10.9757, 13.5596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0093, 0.9092],
         [0.9744, 1.0046, 0.9098],
         [0.9748, 1.0083, 0.9146],
         ...,
         [1.0714, 1.0019, 1.0370],
         [0.9679, 1.1031, 0.9257],
         [0.9697, 1.0063, 0.9199]],
        [[0.9265, 0.9820, 0.8795],
         [0.9278, 0.9984, 0.8711],
         [0.9277, 0.9810, 0.9018],
         ...,
         [0.9975, 0.9476, 0.9075],
         [0.9544, 1.0281, 0.8797],
         [0.9300, 0.9807, 0.8992]],
        [[0.9213, 0.9788, 0.8761],
         [0.9230, 0.9976, 0.8668],
         [0.9228, 0.9778, 0.9003],
         ...,
         [0.9899, 0.9418, 0.8952],
         [0.9528, 1.0200, 0.8747],
         [0.9258, 0.9777, 0.8967]],
        ...,
        [[0.9151, 0.9749, 0.8719],
         [0.9173, 0.9967, 0.8616],
         [0.9171, 0.9740, 0.8984],
         ...,
         [0.9809, 0.9348, 0.8809],
         [0.9508, 1.0103, 0.8686],
         [0.9208, 0.9741, 0.8937]],
        [[0.9315, 0.9850, 0.8826],
         [0.9324, 0.9991, 0.8751],
         [0.9323, 0.9840, 0.9032],
         ...,
         [1.0048, 0.9532, 0.9194],
         [0.9558, 1.0358, 0.8845],
         [0.9340, 0.9835, 0.9014]],
        [[0.9433, 0.9916, 0.8899],
         [0.9432, 1.0006, 0.8844],
         [0.9432, 0.9906, 0.9064],
         ...,
         [1.0219, 0.9660, 0.9482],
         [0.9592, 1.0535, 0.8954],
         [0.9433, 0.9898, 0.9065]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7723, 11.7944, 14.3740],
         [12.6125, 11.6701, 13.7013],
         [13.6755, 11.8541, 14.0452],
         ...,
         [20.2934, 17.7751, 20.4588],
         [12.7082, 14.9468, 14.3307],
         [12.4722, 11.8452, 14.6400]],
        [[ 9.3658, 10.7931, 11.7408],
         [ 9.4374, 10.9631, 11.5999],
         [ 9.0525, 10.5728, 12.5991],
         ...,
         [14.6556, 10.3483, 13.3272],
         [11.4273, 12.3417, 11.5915],
         [ 9.5058, 10.5689, 13.0682]],
        [[ 9.0130, 10.6752, 11.4504],
         [ 9.1046, 10.8786, 11.3633],
         [ 8.6018, 10.4241, 12.4308],
         ...,
         [14.0769,  9.6780, 12.6386],
         [11.2780, 12.0526, 11.2911],
         [ 9.1915, 10.4208, 12.8858]],
        ...,
        [[ 8.5935, 10.5307, 11.0998],
         [ 8.7078, 10.7746, 11.0763],
         [ 8.0735, 10.2425, 12.2250],
         ...,
         [13.3903,  8.9061, 11.8331],
         [11.0954, 11.7031, 10.9290],
         [ 8.8158, 10.2399, 12.6629]],
        [[ 9.7038, 10.9031, 12.0155],
         [ 9.7554, 11.0416, 11.8228],
         [ 9.4896, 10.7119, 12.7565],
         ...,
         [15.2111, 11.0083, 13.9963],
         [11.5669, 12.6148, 11.8760],
         [ 9.8055, 10.7075, 13.2390]],
        [[10.4934, 11.1498, 12.6445],
         [10.4957, 11.2170, 12.3297],
         [10.5301, 11.0254, 13.1109],
         ...,
         [16.5123, 12.6174, 15.5939],
         [11.8810, 13.2390, 12.5286],
         [10.5007, 11.0199, 13.6236]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9673, 0.9925, 0.8809],
         [0.9652, 0.9898, 0.8699],
         [0.9792, 0.9938, 0.8755],
         ...,
         [1.0667, 1.1207, 0.9799],
         [0.9664, 1.0601, 0.8802],
         [0.9633, 0.9936, 0.8852]],
        [[0.9222, 0.9710, 0.8381],
         [0.9232, 0.9746, 0.8358],
         [0.9181, 0.9663, 0.8520],
         ...,
         [0.9922, 0.9615, 0.8639],
         [0.9495, 1.0042, 0.8356],
         [0.9241, 0.9662, 0.8597]],
        [[0.9176, 0.9685, 0.8333],
         [0.9188, 0.9728, 0.8319],
         [0.9122, 0.9631, 0.8493],
         ...,
         [0.9845, 0.9471, 0.8527],
         [0.9475, 0.9980, 0.8307],
         [0.9199, 0.9630, 0.8567]],
        ...,
        [[0.9120, 0.9654, 0.8276],
         [0.9136, 0.9706, 0.8273],
         [0.9052, 0.9592, 0.8459],
         ...,
         [0.9754, 0.9305, 0.8396],
         [0.9451, 0.9905, 0.8249],
         [0.9150, 0.9591, 0.8531]],
        [[0.9267, 0.9734, 0.8425],
         [0.9274, 0.9763, 0.8394],
         [0.9239, 0.9693, 0.8546],
         ...,
         [0.9995, 0.9756, 0.8747],
         [0.9513, 1.0101, 0.8403],
         [0.9281, 0.9692, 0.8624]],
        [[0.9372, 0.9787, 0.8528],
         [0.9372, 0.9801, 0.8476],
         [0.9376, 0.9760, 0.8603],
         ...,
         [1.0167, 1.0101, 0.9007],
         [0.9555, 1.0235, 0.8509],
         [0.9372, 0.9759, 0.8687]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9343, 11.8632, 13.9907],
         [12.7255, 11.5573, 13.7278],
         [13.2794, 11.8477, 13.7705],
         ...,
         [20.2477, 12.8151, 20.9937],
         [12.5409, 15.5541, 14.5047],
         [12.4836, 11.8056, 14.5138]],
        [[ 9.2992, 10.6901, 11.8179],
         [ 9.3861, 11.1545, 11.4936],
         [ 9.1740, 10.5699, 12.9492],
         ...,
         [14.6306,  9.4490, 13.4687],
         [11.3845, 12.5334, 11.7429],
         [ 9.5001, 10.5588, 13.0860]],
        [[ 8.9270, 10.5531, 11.5736],
         [ 9.0391, 11.1056, 11.2436],
         [ 8.7634, 10.4216, 12.8510],
         ...,
         [14.0538,  9.0992, 12.7486],
         [11.2490, 12.2028, 11.4398],
         [ 9.1842, 10.4139, 12.9193]],
        ...,
        [[ 8.4857, 10.3856, 11.2773],
         [ 8.6261, 11.0452, 10.9409],
         [ 8.2793, 10.2405, 12.7302],
         ...,
         [13.3694,  8.6830, 11.9082],
         [11.0830, 11.8046, 11.0745],
         [ 8.8068, 10.2368, 12.7154]],
        [[ 9.6565, 10.8180, 12.0481],
         [ 9.7184, 11.1998, 11.7293],
         [ 9.5700, 10.7087, 13.0406],
         ...,
         [15.1841,  9.7839, 14.1695],
         [11.5111, 12.8465, 12.0298],
         [ 9.8013, 10.6943, 13.2418]],
        [[10.4945, 11.1059, 12.5720],
         [10.4937, 11.3004, 12.2667],
         [10.5056, 11.0214, 13.2444],
         ...,
         [16.4808, 10.5654, 15.8478],
         [11.7954, 13.5655, 12.6880],
         [10.5001, 10.9997, 13.5922]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9736, 1.0090, 0.8926],
         [0.9708, 1.0024, 0.8883],
         [0.9782, 1.0087, 0.8890],
         ...,
         [1.0703, 1.0294, 1.0065],
         [0.9684, 1.0882, 0.9010],
         [0.9677, 1.0078, 0.9011]],
        [[0.9256, 0.9838, 0.8573],
         [0.9267, 0.9938, 0.8520],
         [0.9239, 0.9813, 0.8757],
         ...,
         [0.9960, 0.9572, 0.8841],
         [0.9531, 1.0234, 0.8561],
         [0.9282, 0.9810, 0.8779]],
        [[0.9207, 0.9809, 0.8533],
         [0.9221, 0.9928, 0.8479],
         [0.9185, 0.9781, 0.8741],
         ...,
         [0.9884, 0.9497, 0.8724],
         [0.9513, 1.0163, 0.8511],
         [0.9240, 0.9779, 0.8752]],
        ...,
        [[0.9148, 0.9773, 0.8485],
         [0.9167, 0.9915, 0.8430],
         [0.9121, 0.9742, 0.8721],
         ...,
         [0.9794, 0.9408, 0.8587],
         [0.9491, 1.0077, 0.8452],
         [0.9191, 0.9741, 0.8719]],
        [[0.9303, 0.9866, 0.8610],
         [0.9311, 0.9948, 0.8558],
         [0.9291, 0.9842, 0.8772],
         ...,
         [1.0033, 0.9644, 0.8955],
         [0.9548, 1.0301, 0.8607],
         [0.9322, 0.9839, 0.8804]],
        [[0.9414, 0.9928, 0.8695],
         [0.9414, 0.9969, 0.8646],
         [0.9415, 0.9910, 0.8805],
         ...,
         [1.0205, 0.9812, 0.9228],
         [0.9586, 1.0455, 0.8714],
         [0.9414, 0.9905, 0.8861]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.0996, 11.8398, 14.4246],
         [12.5610, 11.8494, 13.7647],
         [12.1123, 10.8058, 14.6663],
         ...,
         [21.4347, 12.9092, 18.3759],
         [12.1756, 11.8387, 14.0059],
         [13.0655, 11.5725, 14.2400]],
        [[ 9.7194, 10.7284, 11.7678],
         [ 9.4619, 10.7134, 11.8100],
         [ 9.7112, 10.6357, 13.1359],
         ...,
         [15.1920,  9.5496, 12.6490],
         [11.2892, 10.7300, 11.2853],
         [ 9.2491, 10.5574, 12.4794]],
        [[ 9.4594, 10.5983, 11.4750],
         [ 9.1358, 10.5806, 11.5882],
         [ 9.4492, 10.6149, 12.9579],
         ...,
         [14.5582,  9.1999, 12.0776],
         [11.1841, 10.6002, 10.9876],
         [ 8.8619, 10.4381, 12.2772]],
        ...,
        [[ 9.1463, 10.4390, 11.1216],
         [ 8.7466, 10.4180, 11.3187],
         [ 9.1338, 10.5890, 12.7403],
         ...,
         [13.8082,  8.7835, 11.4041],
         [11.0549, 10.4413, 10.6290],
         [ 8.4038, 10.2918, 12.0307]],
        [[ 9.9658, 10.8500, 12.0448],
         [ 9.7733, 10.8375, 12.0185],
         [ 9.9595, 10.6550, 13.3024],
         ...,
         [15.8016,  9.8844, 13.2006],
         [11.3871, 10.8513, 11.5674],
         [ 9.6216, 10.6687, 12.6691]],
        [[10.5318, 11.1231, 12.6793],
         [10.4971, 11.1165, 12.4919],
         [10.5302, 10.6978, 13.6773],
         ...,
         [17.2347, 10.6651, 14.5043],
         [11.6063, 11.1237, 12.2149],
         [10.4974, 10.9186, 13.0978]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9651, 1.0106, 0.9616],
         [0.9712, 1.0108, 0.9509],
         [0.9653, 0.9884, 0.9655],
         ...,
         [1.0885, 1.0335, 1.0259],
         [0.9661, 1.0106, 0.9548],
         [0.9779, 1.0049, 0.9586]],
        [[0.9337, 0.9868, 0.9184],
         [0.9303, 0.9865, 0.9191],
         [0.9336, 0.9848, 0.9406],
         ...,
         [1.0060, 0.9615, 0.9327],
         [0.9544, 0.9868, 0.9106],
         [0.9274, 0.9831, 0.9300]],
        [[0.9302, 0.9840, 0.9136],
         [0.9259, 0.9836, 0.9155],
         [0.9301, 0.9843, 0.9378],
         ...,
         [0.9976, 0.9540, 0.9234],
         [0.9530, 0.9840, 0.9057],
         [0.9223, 0.9806, 0.9267]],
        ...,
        [[0.9261, 0.9806, 0.9079],
         [0.9208, 0.9801, 0.9111],
         [0.9259, 0.9838, 0.9342],
         ...,
         [0.9877, 0.9451, 0.9125],
         [0.9513, 0.9806, 0.8999],
         [0.9163, 0.9774, 0.9227]],
        [[0.9369, 0.9894, 0.9229],
         [0.9344, 0.9891, 0.9225],
         [0.9368, 0.9852, 0.9434],
         ...,
         [1.0140, 0.9687, 0.9417],
         [0.9557, 0.9894, 0.9151],
         [0.9324, 0.9855, 0.9331]],
        [[0.9444, 0.9952, 0.9332],
         [0.9439, 0.9951, 0.9302],
         [0.9444, 0.9861, 0.9495],
         ...,
         [1.0330, 0.9854, 0.9629],
         [0.9586, 0.9953, 0.9257],
         [0.9439, 0.9909, 0.9400]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.5232, 11.8861, 14.2370],
         [12.3823, 11.8571, 13.6990],
         [13.0454, 11.0311, 14.7471],
         ...,
         [21.8158, 12.0521, 17.4707],
         [11.6660, 12.1180, 14.0865],
         [13.1388, 11.5959, 14.2309]],
        [[ 9.4803, 10.6097, 11.9498],
         [ 9.5527, 10.7009, 11.9918],
         [ 9.2566, 10.6137, 13.3258],
         ...,
         [15.3824,  9.5938, 12.3459],
         [11.1516, 11.5215, 11.0895],
         [ 9.2225, 10.5559, 12.5418]],
        [[ 9.1592, 10.4616, 11.6936],
         [ 9.2508, 10.5658, 11.7959],
         [ 8.8716, 10.5631, 13.1597],
         ...,
         [14.7313,  9.3267, 11.8265],
         [11.0896, 11.4497, 10.7659],
         [ 8.8272, 10.4338, 12.3471]],
        ...,
        [[ 8.7757, 10.2806, 11.3831],
         [ 8.8893, 10.4006, 11.5571],
         [ 8.4161, 10.5007, 12.9564],
         ...,
         [13.9613,  9.0055, 11.2122],
         [11.0130, 11.3612, 10.3774],
         [ 8.3600, 10.2843, 12.1097]],
        [[ 9.7867, 10.7484, 12.1914],
         [ 9.8402, 10.8271, 12.1756],
         [ 9.6267, 10.6606, 13.4810],
         ...,
         [16.0091,  9.8472, 12.8457],
         [11.2093, 11.5881, 11.3969],
         [ 9.6032, 10.6699, 12.7242]],
        [[10.4985, 11.0608, 12.7419],
         [10.5056, 11.1109, 12.5913],
         [10.4968, 10.7648, 13.8300],
         ...,
         [17.4838, 10.4304, 14.0212],
         [11.3374, 11.7366, 12.1056],
         [10.4997, 10.9257, 13.1362]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9698, 1.0185, 0.9551],
         [0.9680, 1.0179, 0.9463],
         [0.9767, 1.0002, 0.9634],
         ...,
         [1.0926, 1.0221, 1.0077],
         [0.9585, 1.0235, 0.9526],
         [0.9780, 1.0123, 0.9550]],
        [[0.9296, 0.9912, 0.9179],
         [0.9306, 0.9931, 0.9186],
         [0.9267, 0.9913, 0.9402],
         ...,
         [1.0076, 0.9694, 0.9243],
         [0.9517, 1.0107, 0.9039],
         [0.9262, 0.9900, 0.9275]],
        [[0.9254, 0.9880, 0.9137],
         [0.9266, 0.9902, 0.9154],
         [0.9216, 0.9902, 0.9375],
         ...,
         [0.9990, 0.9637, 0.9159],
         [0.9509, 1.0092, 0.8986],
         [0.9210, 0.9874, 0.9243]],
        ...,
        [[0.9203, 0.9841, 0.9087],
         [0.9218, 0.9867, 0.9115],
         [0.9155, 0.9888, 0.9342],
         ...,
         [0.9888, 0.9568, 0.9059],
         [0.9499, 1.0073, 0.8923],
         [0.9148, 0.9842, 0.9205]],
        [[0.9337, 0.9941, 0.9218],
         [0.9344, 0.9958, 0.9215],
         [0.9315, 0.9923, 0.9428],
         ...,
         [1.0159, 0.9748, 0.9324],
         [0.9525, 1.0122, 0.9089],
         [0.9312, 0.9925, 0.9305]],
        [[0.9431, 1.0008, 0.9308],
         [0.9432, 1.0019, 0.9283],
         [0.9430, 0.9945, 0.9484],
         ...,
         [1.0354, 0.9873, 0.9516],
         [0.9542, 1.0153, 0.9204],
         [0.9431, 0.9979, 0.9372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8388, 11.8333, 14.1416],
         [12.4377, 11.8285, 13.7043],
         [13.0387, 11.3430, 14.8767],
         ...,
         [21.8885, 11.7764, 16.4803],
         [11.3639, 13.0064, 14.0837],
         [12.9285, 11.7166, 14.3227]],
        [[ 9.3378, 10.5649, 12.1805],
         [ 9.5235, 10.7452, 12.0571],
         [ 9.2591, 10.5779, 13.5941],
         ...,
         [15.4142,  9.9245, 11.9861],
         [11.0645, 11.7680, 11.1450],
         [ 9.3015, 10.5523, 12.6737]],
        [[ 8.9769, 10.4177, 11.9574],
         [ 9.2140, 10.6182, 11.8675],
         [ 8.8749, 10.4869, 13.4432],
         ...,
         [14.7594,  9.7165, 11.5228],
         [11.0280, 11.6231, 10.8268],
         [ 8.9300, 10.4165, 12.4833]],
        ...,
        [[ 8.5483, 10.2378, 11.6863],
         [ 8.8437, 10.4626, 11.6363],
         [ 8.4202, 10.3749, 13.2583],
         ...,
         [13.9852,  9.4644, 10.9727],
         [10.9828, 11.4458, 10.4444],
         [ 8.4895, 10.2504, 12.2508]],
        [[ 9.6838, 10.7027, 12.3901],
         [ 9.8186, 10.8638, 12.2349],
         [ 9.6285, 10.6627, 13.7349],
         ...,
         [16.0445, 10.1204, 12.4303],
         [11.0983, 11.9033, 11.4471],
         [ 9.6582, 10.6793, 12.8521]],
        [[10.4935, 11.0131, 12.8654],
         [10.5024, 11.1302, 12.6364],
         [10.4966, 10.8521, 14.0508],
         ...,
         [17.5281, 10.5667, 13.4697],
         [11.1733, 12.2075, 12.1430],
         [10.4944, 10.9649, 13.2548]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9752, 1.0219, 0.9549],
         [0.9699, 1.0218, 0.9478],
         [0.9779, 1.0114, 0.9668],
         ...,
         [1.0948, 1.0207, 0.9929],
         [0.9557, 1.0471, 0.9539],
         [0.9764, 1.0194, 0.9578]],
        [[0.9290, 0.9947, 0.9230],
         [0.9314, 0.9986, 0.9210],
         [0.9279, 0.9950, 0.9460],
         ...,
         [1.0093, 0.9810, 0.9198],
         [0.9518, 1.0205, 0.9061],
         [0.9285, 0.9944, 0.9310]],
        [[0.9242, 0.9916, 0.9194],
         [0.9273, 0.9959, 0.9179],
         [0.9228, 0.9930, 0.9435],
         ...,
         [1.0006, 0.9765, 0.9123],
         [0.9513, 1.0174, 0.9010],
         [0.9236, 0.9915, 0.9279]],
        ...,
        [[0.9185, 0.9877, 0.9150],
         [0.9224, 0.9925, 0.9141],
         [0.9168, 0.9906, 0.9405],
         ...,
         [0.9904, 0.9711, 0.9033],
         [0.9507, 1.0136, 0.8948],
         [0.9177, 0.9880, 0.9241]],
        [[0.9335, 0.9977, 0.9264],
         [0.9353, 1.0011, 0.9239],
         [0.9328, 0.9968, 0.9483],
         ...,
         [1.0176, 0.9852, 0.9271],
         [0.9522, 1.0234, 0.9111],
         [0.9332, 0.9972, 0.9339]],
        [[0.9442, 1.0043, 0.9341],
         [0.9443, 1.0068, 0.9304],
         [0.9443, 1.0009, 0.9534],
         ...,
         [1.0372, 0.9948, 0.9440],
         [0.9532, 1.0299, 0.9224],
         [0.9442, 1.0033, 0.9405]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.7601, 11.0261, 14.3192],
         [12.7937, 11.8021, 13.8205],
         [13.2425, 11.5405, 15.7870],
         ...,
         [22.2331, 12.5044, 15.1311],
         [11.3579, 15.4424, 14.1805],
         [12.4098, 11.8687, 14.6621]],
        [[ 9.0291, 10.6143, 13.4298],
         [ 9.3567, 10.7826, 12.3403],
         [ 9.1864, 10.5596, 15.0148],
         ...,
         [15.5885, 11.7148,  9.8917],
         [10.3899, 12.4977, 11.2703],
         [ 9.5381, 10.5818, 13.1417]],
        [[ 8.5703, 10.5644, 13.3237],
         [ 9.0012, 10.6627, 12.1685],
         [ 8.7798, 10.4441, 14.9219],
         ...,
         [14.9182, 11.6206,  9.3847],
         [10.2760, 12.1747, 10.9544],
         [ 9.2324, 10.4325, 12.9648]],
        ...,
        [[ 8.0331, 10.5027, 13.1930],
         [ 8.5787, 10.5157, 11.9585],
         [ 8.3001, 10.3026, 14.8074],
         ...,
         [14.1262, 11.5047,  8.7914],
         [10.1363, 11.7853, 10.5745],
         [ 8.8665, 10.2502, 12.7485]],
        [[ 9.4745, 10.6605, 13.5286],
         [ 9.6973, 10.8945, 12.5011],
         [ 9.5785, 10.6674, 15.1011],
         ...,
         [16.2341, 11.8024, 10.3841],
         [10.4962, 12.8036, 11.5701],
         [ 9.8294, 10.7215, 13.3071]],
        [[10.5366, 10.7634, 13.7492],
         [10.4934, 11.1456, 12.8634],
         [10.5039, 10.9090, 15.2933],
         ...,
         [17.7547, 11.9982, 11.5591],
         [10.7347, 13.5053, 12.2601],
         [10.5039, 11.0364, 13.6797]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9795, 0.9946, 0.9219],
         [0.9667, 1.0113, 0.9138],
         [0.9727, 1.0057, 0.9457],
         ...,
         [1.0915, 1.0263, 0.9351],
         [0.9478, 1.0893, 0.9196],
         [0.9617, 1.0127, 0.9274]],
        [[0.9170, 0.9858, 0.9074],
         [0.9213, 0.9894, 0.8897],
         [0.9191, 0.9846, 0.9332],
         ...,
         [1.0037, 1.0094, 0.8499],
         [0.9350, 1.0262, 0.8723],
         [0.9237, 0.9851, 0.9027]],
        [[0.9109, 0.9847, 0.9057],
         [0.9166, 0.9869, 0.8869],
         [0.9137, 0.9822, 0.9317],
         ...,
         [0.9948, 1.0074, 0.8416],
         [0.9335, 1.0193, 0.8671],
         [0.9197, 0.9819, 0.8998]],
        ...,
        [[0.9038, 0.9834, 0.9036],
         [0.9110, 0.9837, 0.8835],
         [0.9073, 0.9791, 0.9298],
         ...,
         [0.9843, 1.0049, 0.8320],
         [0.9316, 1.0109, 0.8610],
         [0.9148, 0.9780, 0.8963]],
        [[0.9229, 0.9868, 0.9090],
         [0.9258, 0.9918, 0.8923],
         [0.9242, 0.9870, 0.9346],
         ...,
         [1.0122, 1.0113, 0.8579],
         [0.9364, 1.0328, 0.8772],
         [0.9276, 0.9881, 0.9054]],
        [[0.9369, 0.9890, 0.9126],
         [0.9363, 0.9972, 0.8982],
         [0.9365, 0.9921, 0.9377],
         ...,
         [1.0323, 1.0155, 0.8770],
         [0.9395, 1.0478, 0.8884],
         [0.9365, 0.9949, 0.9115]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1570, 11.6396, 14.1434],
         [12.5652, 11.8192, 13.7366],
         [13.1133, 11.4212, 15.1614],
         ...,
         [22.0169, 11.8211, 14.6722],
         [11.0901, 13.8323, 14.1146],
         [12.7247, 11.7916, 14.4374]],
        [[ 9.2160, 10.5537, 12.6186],
         [ 9.4598, 10.7587, 12.1619],
         [ 9.2316, 10.5700, 14.0958],
         ...,
         [15.4788, 10.5371, 11.2104],
         [10.8451, 12.0049, 11.1918],
         [ 9.3865, 10.5568, 12.8447]],
        [[ 8.8187, 10.4265, 12.4417],
         [ 9.1332, 10.6342, 11.9800],
         [ 8.8391, 10.4691, 13.9692],
         ...,
         [14.8182, 10.3881, 10.8431],
         [10.8152, 11.7961, 10.8749],
         [ 9.0395, 10.4132, 12.6602]],
        ...,
        [[ 8.3493, 10.2708, 12.2255],
         [ 8.7434, 10.4817, 11.7580],
         [ 8.3751, 10.3453, 13.8136],
         ...,
         [14.0373, 10.2062, 10.4039],
         [10.7781, 11.5421, 10.4941],
         [ 8.6266, 10.2377, 12.4348]],
        [[ 9.5987, 10.6725, 12.7842],
         [ 9.7718, 10.8749, 12.3324],
         [ 9.6095, 10.6640, 14.2137],
         ...,
         [16.1148, 10.6764, 11.5606],
         [10.8728, 12.2009, 11.4926],
         [ 9.7186, 10.6911, 13.0175]],
        [[10.5004, 10.9394, 13.1573],
         [10.4970, 11.1358, 12.7169],
         [10.4989, 10.8743, 14.4773],
         ...,
         [17.6123, 10.9906, 12.3724],
         [10.9343, 12.6447, 12.1851],
         [10.4937, 10.9935, 13.4069]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9780, 1.0132, 0.9516],
         [0.9702, 1.0170, 0.9450],
         [0.9774, 1.0085, 0.9681],
         ...,
         [1.0951, 1.0171, 0.9602],
         [0.9507, 1.0602, 0.9511],
         [0.9723, 1.0164, 0.9564]],
        [[0.9259, 0.9899, 0.9268],
         [0.9291, 0.9943, 0.9194],
         [0.9261, 0.9903, 0.9508],
         ...,
         [1.0087, 0.9895, 0.9039],
         [0.9474, 1.0210, 0.9036],
         [0.9281, 0.9900, 0.9305]],
        [[0.9206, 0.9872, 0.9239],
         [0.9248, 0.9916, 0.9164],
         [0.9209, 0.9881, 0.9488],
         ...,
         [0.9999, 0.9864, 0.8979],
         [0.9470, 1.0165, 0.8984],
         [0.9236, 0.9869, 0.9275]],
        ...,
        [[0.9144, 0.9838, 0.9204],
         [0.9197, 0.9884, 0.9128],
         [0.9148, 0.9854, 0.9462],
         ...,
         [0.9896, 0.9825, 0.8908],
         [0.9465, 1.0111, 0.8922],
         [0.9181, 0.9831, 0.9238]],
        [[0.9310, 0.9924, 0.9295],
         [0.9332, 0.9968, 0.9221],
         [0.9311, 0.9923, 0.9527],
         ...,
         [1.0171, 0.9925, 0.9096],
         [0.9478, 1.0252, 0.9085],
         [0.9325, 0.9928, 0.9333]],
        [[0.9429, 0.9982, 0.9355],
         [0.9428, 1.0024, 0.9284],
         [0.9428, 0.9968, 0.9570],
         ...,
         [1.0369, 0.9993, 0.9228],
         [0.9486, 1.0347, 0.9197],
         [0.9428, 0.9993, 0.9396]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[14.1801, 10.9478, 15.1101],
         [13.0613, 11.8735, 14.1224],
         [12.6767, 11.8293, 15.6372],
         ...,
         [17.6144, 35.6334, 18.5093],
         [11.5950, 17.3857, 13.8549],
         [11.9236, 11.8043, 14.7848]],
        [[ 8.9240, 10.5992, 14.6565],
         [ 9.2507, 10.6699, 12.9610],
         [ 9.4079, 10.7440, 14.8072],
         ...,
         [13.4465, 20.0369,  8.9551],
         [10.1221, 13.1429, 11.3577],
         [ 9.8413, 10.7795, 13.4078]],
        [[ 8.4268, 10.5568, 14.6013],
         [ 8.8639, 10.5296, 12.8241],
         [ 9.0669, 10.6168, 14.7076],
         ...,
         [13.0045, 18.6587,  8.1854],
         [ 9.9533, 12.6955, 11.0817],
         [ 9.6102, 10.6590, 13.2465]],
        ...,
        [[ 7.8480, 10.5044, 14.5331],
         [ 8.4064, 10.3581, 12.6561],
         [ 8.6608, 10.4610, 14.5849],
         ...,
         [12.4760, 17.0791,  7.3214],
         [ 9.7477, 12.1614, 10.7484],
         [ 9.3310, 10.5113, 13.0490]],
        [[ 9.4090, 10.6384, 14.7077],
         [ 9.6226, 10.8010, 13.0888],
         [ 9.7340, 10.8628, 14.8998],
         ...,
         [13.8679, 21.3996,  9.7299],
         [10.2805, 13.5699, 11.6187],
         [10.0595, 10.8920, 13.5585]],
        [[10.5746, 10.7256, 14.8212],
         [10.4973, 11.0961, 13.3751],
         [10.4944, 11.1297, 15.1062],
         ...,
         [14.8450, 24.7434, 11.6850],
         [10.6388, 14.5619, 12.2158],
         [10.5584, 11.1443, 13.8969]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9813, 0.9955, 0.9016],
         [0.9665, 1.0153, 0.8856],
         [0.9614, 1.0144, 0.9102],
         ...,
         [1.0267, 1.5248, 0.9569],
         [0.9471, 1.1335, 0.8812],
         [0.9515, 1.0138, 0.8963]],
        [[0.9118, 0.9880, 0.8943],
         [0.9161, 0.9895, 0.8667],
         [0.9182, 0.9911, 0.8967],
         ...,
         [0.9716, 1.1904, 0.8015],
         [0.9276, 1.0425, 0.8406],
         [0.9239, 0.9918, 0.8739]],
        [[0.9052, 0.9871, 0.8934],
         [0.9110, 0.9865, 0.8644],
         [0.9137, 0.9884, 0.8951],
         ...,
         [0.9657, 1.1608, 0.7890],
         [0.9254, 1.0329, 0.8361],
         [0.9209, 0.9893, 0.8713]],
        ...,
        [[0.8976, 0.9859, 0.8922],
         [0.9050, 0.9828, 0.8617],
         [0.9083, 0.9850, 0.8931],
         ...,
         [0.9588, 1.1269, 0.7749],
         [0.9227, 1.0215, 0.8307],
         [0.9172, 0.9861, 0.8681]],
        [[0.9182, 0.9888, 0.8951],
         [0.9210, 0.9923, 0.8688],
         [0.9225, 0.9936, 0.8982],
         ...,
         [0.9772, 1.2196, 0.8141],
         [0.9297, 1.0517, 0.8448],
         [0.9268, 0.9943, 0.8764]],
        [[0.9336, 0.9907, 0.8969],
         [0.9326, 0.9986, 0.8734],
         [0.9326, 0.9994, 0.9016],
         ...,
         [0.9901, 1.2913, 0.8459],
         [0.9345, 1.0730, 0.8546],
         [0.9334, 0.9997, 0.8819]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.4591, 11.3458, 14.2761],
         [12.7155, 11.8406, 13.8115],
         [12.9675, 11.7429, 15.3017],
         ...,
         [20.5899, 12.4109, 14.4745],
         [11.2096, 14.8528, 14.0219],
         [12.4396, 11.8752, 14.5359]],
        [[ 9.1162, 10.5776, 13.2192],
         [ 9.3905, 10.7271, 12.4098],
         [ 9.2862, 10.5530, 14.3169],
         ...,
         [14.7774, 11.4299, 10.3184],
         [10.6033, 12.3126, 11.2444],
         [ 9.5226, 10.5879, 13.0202]],
        [[ 8.6870, 10.4862, 13.0939],
         [ 9.0447, 10.5968, 12.2465],
         [ 8.9102, 10.4143, 14.1995],
         ...,
         [14.1830, 11.3140,  9.8950],
         [10.5306, 12.0300, 10.9413],
         [ 9.2127, 10.4386, 12.8439]],
        ...,
        [[ 8.1823, 10.3739, 12.9400],
         [ 8.6331, 10.4372, 12.0468],
         [ 8.4646, 10.2448, 14.0551],
         ...,
         [13.4783, 11.1718,  9.3936],
         [10.4410, 11.6882, 10.5764],
         [ 8.8421, 10.2561, 12.6284]],
        [[ 9.5313, 10.6627, 13.3359],
         [ 9.7215, 10.8489, 12.5625],
         [ 9.6474, 10.6826, 14.4262],
         ...,
         [15.3484, 11.5380, 10.7253],
         [10.6709, 12.5794, 11.5317],
         [ 9.8179, 10.7276, 13.1851]],
        [[10.5154, 10.8529, 13.5971],
         [10.4938, 11.1225, 12.9062],
         [10.4950, 10.9744, 14.6702],
         ...,
         [16.6875, 11.7801, 11.6810],
         [10.8216, 13.1887, 12.1918],
         [10.5023, 11.0426, 13.5564]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9786, 1.0048, 0.9347],
         [0.9687, 1.0154, 0.9272],
         [0.9721, 1.0133, 0.9514],
         ...,
         [1.0728, 1.0276, 0.9379],
         [0.9488, 1.0800, 0.9306],
         [0.9651, 1.0161, 0.9389]],
        [[0.9212, 0.9883, 0.9175],
         [0.9248, 0.9915, 0.9044],
         [0.9234, 0.9878, 0.9354],
         ...,
         [0.9960, 1.0066, 0.8703],
         [0.9408, 1.0255, 0.8854],
         [0.9265, 0.9885, 0.9143]],
        [[0.9155, 0.9864, 0.9155],
         [0.9202, 0.9887, 0.9017],
         [0.9184, 0.9848, 0.9335],
         ...,
         [0.9881, 1.0041, 0.8635],
         [0.9399, 1.0195, 0.8805],
         [0.9224, 0.9853, 0.9114]],
        ...,
        [[0.9088, 0.9839, 0.9130],
         [0.9148, 0.9853, 0.8985],
         [0.9126, 0.9812, 0.9311],
         ...,
         [0.9788, 1.0011, 0.8553],
         [0.9387, 1.0121, 0.8745],
         [0.9175, 0.9814, 0.9079]],
        [[0.9267, 0.9901, 0.9194],
         [0.9292, 0.9941, 0.9068],
         [0.9282, 0.9906, 0.9372],
         ...,
         [1.0035, 1.0089, 0.8770],
         [0.9417, 1.0312, 0.8901],
         [0.9304, 0.9915, 0.9170]],
        [[0.9397, 0.9942, 0.9237],
         [0.9394, 1.0000, 0.9124],
         [0.9394, 0.9968, 0.9411],
         ...,
         [1.0212, 1.0141, 0.8925],
         [0.9437, 1.0443, 0.9008],
         [0.9395, 0.9983, 0.9230]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.2906, 11.4890, 14.2287],
         [12.8012, 11.8409, 13.8084],
         [12.9184, 11.7149, 15.0027],
         ...,
         [18.5198, 11.7484, 14.2869],
         [11.1535, 14.4966, 13.9583],
         [12.5490, 11.8467, 14.4627]],
        [[ 9.1702, 10.5638, 13.0668],
         [ 9.3535, 10.7268, 12.3780],
         [ 9.3055, 10.5523, 13.8274],
         ...,
         [13.8518, 10.8553, 10.4574],
         [10.7003, 12.2033, 11.3114],
         [ 9.4677, 10.5695, 12.8477]],
        [[ 8.7585, 10.4546, 12.9297],
         [ 8.9971, 10.5964, 12.2116],
         [ 8.9352, 10.4167, 13.6884],
         ...,
         [13.3627, 10.7496, 10.0612],
         [10.6455, 11.9459, 11.0208],
         [ 9.1432, 10.4213, 12.6607]],
        ...,
        [[ 8.2731, 10.3206, 12.7616],
         [ 8.5736, 10.4367, 12.0081],
         [ 8.4960, 10.2507, 13.5179],
         ...,
         [12.7795, 10.6198,  9.5902],
         [10.5778, 11.6340, 10.6705],
         [ 8.7558, 10.2402, 12.4325]],
        [[ 9.5675, 10.6656, 13.1946],
         [ 9.6950, 10.8486, 12.5337],
         [ 9.6610, 10.6791, 13.9569],
         ...,
         [14.3193, 10.9538, 10.8370],
         [10.7511, 12.4459, 11.5865],
         [ 9.7775, 10.7082, 13.0227]],
        [[10.5061, 10.8939, 13.4812],
         [10.4934, 11.1223, 12.8841],
         [10.4942, 10.9644, 14.2470],
         ...,
         [15.4075, 11.1744, 11.7243],
         [10.8642, 12.9983, 12.2175],
         [10.4975, 11.0208, 13.4175]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9782, 1.0106, 0.9385],
         [0.9717, 1.0181, 0.9316],
         [0.9733, 1.0154, 0.9510],
         ...,
         [1.0473, 1.0161, 0.9394],
         [0.9499, 1.0751, 0.9341],
         [0.9684, 1.0182, 0.9423]],
        [[0.9237, 0.9907, 0.9196],
         [0.9262, 0.9942, 0.9084],
         [0.9255, 0.9905, 0.9319],
         ...,
         [0.9856, 0.9970, 0.8771],
         [0.9440, 1.0259, 0.8910],
         [0.9277, 0.9908, 0.9160]],
        [[0.9183, 0.9884, 0.9173],
         [0.9214, 0.9914, 0.9056],
         [0.9206, 0.9876, 0.9297],
         ...,
         [0.9791, 0.9947, 0.8707],
         [0.9432, 1.0204, 0.8863],
         [0.9234, 0.9877, 0.9130]],
        ...,
        [[0.9119, 0.9855, 0.9146],
         [0.9159, 0.9880, 0.9023],
         [0.9148, 0.9840, 0.9269],
         ...,
         [0.9714, 0.9919, 0.8630],
         [0.9423, 1.0137, 0.8806],
         [0.9183, 0.9838, 0.9092]],
        [[0.9290, 0.9929, 0.9216],
         [0.9307, 0.9968, 0.9109],
         [0.9302, 0.9932, 0.9340],
         ...,
         [0.9918, 0.9991, 0.8833],
         [0.9446, 1.0311, 0.8955],
         [0.9318, 0.9938, 0.9188]],
        [[0.9414, 0.9978, 0.9263],
         [0.9412, 1.0027, 0.9166],
         [0.9412, 0.9993, 0.9388],
         ...,
         [1.0062, 1.0038, 0.8977],
         [0.9461, 1.0429, 0.9057],
         [0.9413, 1.0005, 0.9253]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8723, 11.8124, 14.1836],
         [12.7981, 11.8730, 13.8412],
         [12.6797, 11.6992, 14.5772],
         ...,
         [14.2437, 11.7862, 14.0125],
         [11.0855, 12.6121, 13.9163],
         [12.6365, 11.8254, 14.3674]],
        [[ 9.3240, 10.5600, 12.7405],
         [ 9.3548, 10.6710, 12.3429],
         [ 9.4065, 10.5523, 12.8915],
         ...,
         [12.1281, 10.8044, 11.6171],
         [10.8646, 11.6584, 11.3598],
         [ 9.4262, 10.5628, 12.6962]],
        [[ 8.9591, 10.4145, 12.5724],
         [ 8.9988, 10.5309, 12.1690],
         [ 9.0652, 10.4184, 12.6968],
         ...,
         [11.8891, 10.6887, 11.3506],
         [10.8376, 11.5454, 11.0779],
         [ 9.0903, 10.4162, 12.5033]],
        ...,
        [[ 8.5260, 10.2367, 12.3668],
         [ 8.5758, 10.3596, 11.9567],
         [ 8.6587, 10.2545, 12.4593],
         ...,
         [11.5989, 10.5468, 11.0284],
         [10.8042, 11.4068, 10.7377],
         [ 8.6900, 10.2371, 12.2680]],
        [[ 9.6741, 10.6961, 12.8977],
         [ 9.6960, 10.8020, 12.5055],
         [ 9.7331, 10.6775, 13.0738],
         ...,
         [12.3530, 10.9123, 11.8687],
         [10.8896, 11.7636, 11.6264],
         [ 9.7473, 10.7000, 12.8769]],
        [[10.4937, 11.0028, 13.2515],
         [10.4934, 11.0967, 12.8722],
         [10.4943, 10.9589, 13.4853],
         ...,
         [12.8642, 11.1543, 12.4433],
         [10.9450, 11.9992, 12.2370],
         [10.4951, 11.0091, 13.2848]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9778, 1.0140, 0.9623],
         [0.9768, 1.0153, 0.9568],
         [0.9753, 1.0115, 0.9687],
         ...,
         [0.9959, 1.0134, 0.9596],
         [0.9542, 1.0311, 0.9580],
         [0.9747, 1.0142, 0.9653]],
        [[0.9309, 0.9871, 0.9389],
         [0.9313, 0.9895, 0.9324],
         [0.9320, 0.9869, 0.9413],
         ...,
         [0.9680, 0.9923, 0.9206],
         [0.9513, 1.0107, 0.9164],
         [0.9323, 0.9872, 0.9382]],
        [[0.9261, 0.9840, 0.9361],
         [0.9266, 0.9865, 0.9296],
         [0.9275, 0.9841, 0.9382],
         ...,
         [0.9648, 0.9899, 0.9163],
         [0.9509, 1.0082, 0.9118],
         [0.9278, 0.9840, 0.9350]],
        ...,
        [[0.9204, 0.9802, 0.9328],
         [0.9210, 0.9828, 0.9261],
         [0.9221, 0.9805, 0.9343],
         ...,
         [0.9610, 0.9868, 0.9110],
         [0.9505, 1.0053, 0.9063],
         [0.9226, 0.9802, 0.9312]],
        [[0.9356, 0.9900, 0.9414],
         [0.9358, 0.9923, 0.9351],
         [0.9363, 0.9896, 0.9443],
         ...,
         [0.9710, 0.9947, 0.9247],
         [0.9516, 1.0129, 0.9208],
         [0.9365, 0.9901, 0.9411]],
        [[0.9464, 0.9966, 0.9472],
         [0.9464, 0.9986, 0.9410],
         [0.9464, 0.9957, 0.9510],
         ...,
         [0.9777, 0.9998, 0.9340],
         [0.9524, 1.0180, 0.9307],
         [0.9464, 0.9967, 0.9477]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.1120, 11.6531, 14.2055],
         [12.7999, 11.8562, 13.8216],
         [12.8177, 11.7085, 14.7937],
         ...,
         [16.6796, 11.7645, 14.0159],
         [11.1194, 13.6566, 13.9407],
         [12.5848, 11.8385, 14.4221]],
        [[ 9.2321, 10.5532, 12.9302],
         [ 9.3540, 10.7022, 12.3635],
         [ 9.3466, 10.5523, 13.4267],
         ...,
         [13.0787, 10.8336, 10.8992],
         [10.7684, 11.9536, 11.3313],
         [ 9.4505, 10.5665, 12.7847]],
        [[ 8.8397, 10.4245, 12.7805],
         [ 8.9978, 10.5674, 12.1940],
         [ 8.9882, 10.4173, 13.2665],
         ...,
         [12.6908, 10.7236, 10.5651],
         [10.7257, 11.7581, 11.0443],
         [ 9.1213, 10.4189, 12.5954]],
        ...,
        [[ 8.3758, 10.2669, 12.5971],
         [ 8.5745, 10.4025, 11.9870],
         [ 8.5625, 10.2522, 13.0704],
         ...,
         [12.2254, 10.5887, 10.1646],
         [10.6729, 11.5199, 10.6982],
         [ 8.7285, 10.2385, 12.3644]],
        [[ 9.6098, 10.6735, 13.0699],
         [ 9.6954, 10.8282, 12.5220],
         [ 9.6901, 10.6784, 13.5763],
         ...,
         [13.4473, 10.9362, 11.2170],
         [10.8079, 12.1369, 11.6029],
         [ 9.7649, 10.7047, 12.9620]],
        [[10.4988, 10.9437, 13.3837],
         [10.4934, 11.1115, 12.8791],
         [10.4934, 10.9621, 13.9124],
         ...,
         [14.2979, 11.1659, 11.9515],
         [10.8957, 12.5515, 12.2254],
         [10.4964, 11.0160, 13.3620]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0121, 0.9506],
         [0.9738, 1.0165, 0.9443],
         [0.9740, 1.0133, 0.9601],
         ...,
         [1.0251, 1.0145, 0.9475],
         [0.9516, 1.0551, 0.9463],
         [0.9710, 1.0161, 0.9541]],
        [[0.9267, 0.9886, 0.9298],
         [0.9283, 0.9918, 0.9206],
         [0.9282, 0.9885, 0.9379],
         ...,
         [0.9775, 0.9946, 0.8968],
         [0.9470, 1.0186, 0.9038],
         [0.9295, 0.9888, 0.9275]],
        [[0.9215, 0.9858, 0.9274],
         [0.9236, 0.9889, 0.9178],
         [0.9234, 0.9856, 0.9353],
         ...,
         [0.9724, 0.9922, 0.8914],
         [0.9464, 1.0144, 0.8991],
         [0.9252, 0.9857, 0.9244]],
        ...,
        [[0.9153, 0.9824, 0.9244],
         [0.9180, 0.9853, 0.9145],
         [0.9178, 0.9821, 0.9321],
         ...,
         [0.9662, 0.9893, 0.8848],
         [0.9457, 1.0093, 0.8935],
         [0.9200, 0.9818, 0.9206]],
        [[0.9316, 0.9911, 0.9321],
         [0.9328, 0.9945, 0.9232],
         [0.9327, 0.9912, 0.9403],
         ...,
         [0.9824, 0.9968, 0.9020],
         [0.9475, 1.0225, 0.9082],
         [0.9337, 0.9918, 0.9303]],
        [[0.9434, 0.9969, 0.9372],
         [0.9433, 1.0005, 0.9290],
         [0.9433, 0.9973, 0.9458],
         ...,
         [0.9936, 1.0017, 0.9139],
         [0.9486, 1.0314, 0.9184],
         [0.9434, 0.9985, 0.9368]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.7223, 11.8344, 14.2584],
         [12.7143, 11.8856, 13.8498],
         [12.7932, 11.5514, 14.5821],
         ...,
         [15.4467, 11.6102, 13.8802],
         [11.1000, 12.3674, 13.9441],
         [12.8249, 11.7623, 14.3249]],
        [[ 9.3875, 10.5653, 12.6462],
         [ 9.3911, 10.6349, 12.3263],
         [ 9.3569, 10.5588, 12.9063],
         ...,
         [12.5743, 11.3470, 11.9240],
         [10.8148, 11.5908, 11.3461],
         [ 9.3436, 10.5540, 12.6316]],
        [[ 9.0408, 10.4179, 12.4598],
         [ 9.0454, 10.4896, 12.1497],
         [ 9.0015, 10.4420, 12.7127],
         ...,
         [12.2581, 11.3149, 11.7018],
         [10.7800, 11.4982, 11.0602],
         [ 8.9843, 10.4133, 12.4364]],
        ...,
        [[ 8.6283, 10.2379, 12.2322],
         [ 8.6340, 10.3119, 11.9341],
         [ 8.5791, 10.2989, 12.4765],
         ...,
         [11.8767, 11.2751, 11.4318],
         [10.7369, 11.3842, 10.7153],
         [ 8.5576, 10.2413, 12.1983]],
        [[ 9.7194, 10.7031, 12.8208],
         [ 9.7219, 10.7709, 12.4915],
         [ 9.6974, 10.6678, 13.0876],
         ...,
         [12.8735, 11.3768, 12.1328],
         [10.8470, 11.6771, 11.6166],
         [ 9.6879, 10.6856, 12.8145]],
        [[10.4938, 11.0138, 13.2147],
         [10.4939, 11.0772, 12.8641],
         [10.4934, 10.9123, 13.4968],
         ...,
         [13.5591, 11.4428, 12.6066],
         [10.9184, 11.8696, 12.2367],
         [10.4934, 10.9817, 13.2276]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9765, 1.0168, 0.9630],
         [0.9764, 1.0179, 0.9563],
         [0.9774, 1.0107, 0.9682],
         ...,
         [1.0125, 1.0120, 0.9568],
         [0.9550, 1.0282, 0.9579],
         [0.9778, 1.0153, 0.9641]],
        [[0.9324, 0.9896, 0.9367],
         [0.9325, 0.9911, 0.9315],
         [0.9320, 0.9895, 0.9410],
         ...,
         [0.9745, 1.0064, 0.9250],
         [0.9513, 1.0116, 0.9156],
         [0.9318, 0.9894, 0.9365]],
        [[0.9278, 0.9864, 0.9337],
         [0.9279, 0.9880, 0.9287],
         [0.9273, 0.9870, 0.9378],
         ...,
         [0.9704, 1.0057, 0.9214],
         [0.9508, 1.0096, 0.9110],
         [0.9271, 0.9863, 0.9333]],
        ...,
        [[0.9224, 0.9826, 0.9300],
         [0.9225, 0.9842, 0.9252],
         [0.9217, 0.9839, 0.9340],
         ...,
         [0.9653, 1.0048, 0.9170],
         [0.9502, 1.0072, 0.9053],
         [0.9214, 0.9827, 0.9295]],
        [[0.9368, 0.9926, 0.9396],
         [0.9368, 0.9940, 0.9342],
         [0.9365, 0.9918, 0.9439],
         ...,
         [0.9785, 1.0070, 0.9284],
         [0.9517, 1.0134, 0.9200],
         [0.9364, 0.9922, 0.9395]],
        [[0.9470, 0.9992, 0.9460],
         [0.9470, 1.0006, 0.9403],
         [0.9470, 0.9970, 0.9506],
         ...,
         [0.9875, 1.0084, 0.9361],
         [0.9526, 1.0176, 0.9301],
         [0.9470, 0.9985, 0.9462]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.9863, 11.7233, 14.2185],
         [12.7731, 11.8692, 13.8301],
         [12.8101, 11.6649, 14.7186],
         ...,
         [16.2916, 11.6669, 13.9068],
         [11.1129, 13.2251, 13.9417],
         [12.6572, 11.8187, 14.3907]],
        [[ 9.2789, 10.5524, 12.8407],
         [ 9.3654, 10.6789, 12.3519],
         [ 9.3498, 10.5528, 13.2613],
         ...,
         [12.9180, 10.9675, 11.1942],
         [10.7828, 11.8297, 11.3359],
         [ 9.4167, 10.5613, 12.7369]],
        [[ 8.9007, 10.4159, 12.6798],
         [ 9.0125, 10.5401, 12.1803],
         [ 8.9923, 10.4228, 13.0913],
         ...,
         [12.5523, 10.8839, 10.8976],
         [10.7426, 11.6675, 11.0492],
         [ 9.0782, 10.4152, 12.5459]],
        ...,
        [[ 8.4527, 10.2489, 12.4828],
         [ 8.5929, 10.3704, 11.9706],
         [ 8.5676, 10.2636, 12.8832],
         ...,
         [12.1127, 10.7810, 10.5402],
         [10.6929, 11.4693, 10.7035],
         [ 8.6749, 10.2368, 12.3127]],
        [[ 9.6423, 10.6801, 12.9912],
         [ 9.7035, 10.8087, 12.5125],
         [ 9.6924, 10.6744, 13.4203],
         ...,
         [13.2652, 11.0453, 11.4753],
         [10.8200, 11.9814, 11.6071],
         [ 9.7404, 10.6979, 12.9159]],
        [[10.4954, 10.9673, 13.3294],
         [10.4934, 11.1006, 12.8744],
         [10.4934, 10.9475, 13.7778],
         ...,
         [14.0645, 11.2188, 12.1207],
         [10.9026, 12.3231, 12.2289],
         [10.4947, 11.0058, 13.3197]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9778, 1.0139, 0.9589],
         [0.9750, 1.0170, 0.9526],
         [0.9755, 1.0127, 0.9670],
         ...,
         [1.0215, 1.0127, 0.9538],
         [0.9531, 1.0461, 0.9544],
         [0.9735, 1.0160, 0.9617]],
        [[0.9288, 0.9888, 0.9365],
         [0.9300, 0.9915, 0.9285],
         [0.9298, 0.9888, 0.9433],
         ...,
         [0.9769, 0.9977, 0.9097],
         [0.9487, 1.0162, 0.9120],
         [0.9307, 0.9890, 0.9348]],
        [[0.9238, 0.9859, 0.9339],
         [0.9253, 0.9885, 0.9257],
         [0.9251, 0.9860, 0.9406],
         ...,
         [0.9721, 0.9959, 0.9049],
         [0.9482, 1.0127, 0.9073],
         [0.9262, 0.9859, 0.9317]],
        ...,
        [[0.9179, 0.9823, 0.9307],
         [0.9198, 0.9849, 0.9223],
         [0.9194, 0.9826, 0.9372],
         ...,
         [0.9663, 0.9937, 0.8991],
         [0.9475, 1.0085, 0.9017],
         [0.9209, 0.9820, 0.9279]],
        [[0.9336, 0.9915, 0.9389],
         [0.9344, 0.9943, 0.9311],
         [0.9343, 0.9914, 0.9459],
         ...,
         [0.9815, 0.9994, 0.9143],
         [0.9492, 1.0195, 0.9164],
         [0.9349, 0.9919, 0.9377]],
        [[0.9449, 0.9977, 0.9444],
         [0.9449, 1.0006, 0.9370],
         [0.9449, 0.9973, 0.9517],
         ...,
         [0.9921, 1.0031, 0.9248],
         [0.9503, 1.0268, 0.9265],
         [0.9449, 0.9985, 0.9443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0838, 11.6697, 14.2081],
         [12.7940, 11.8594, 13.8234],
         [12.8160, 11.6993, 14.7763],
         ...,
         [16.5932, 11.7444, 13.9872],
         [11.1179, 13.5586, 13.9409],
         [12.6007, 11.8344, 14.4150]],
        [[ 9.2424, 10.5527, 12.9102],
         [ 9.3566, 10.6969, 12.3609],
         [ 9.3473, 10.5523, 13.3898],
         ...,
         [13.0428, 10.8607, 10.9628],
         [10.7715, 11.9252, 11.3323],
         [ 9.4429, 10.5653, 12.7741]],
        [[ 8.8531, 10.4221, 12.7581],
         [ 9.0011, 10.5611, 12.1910],
         [ 8.9891, 10.4184, 13.2274],
         ...,
         [12.6598, 10.7561, 10.6371],
         [10.7294, 11.7372, 11.0454],
         [ 9.1117, 10.4179, 12.5844]],
        ...,
        [[ 8.3928, 10.2622, 12.5717],
         [ 8.5786, 10.3950, 11.9833],
         [ 8.5636, 10.2545, 13.0287],
         ...,
         [12.2000, 10.6276, 10.2463],
         [10.6774, 11.5079, 10.6994],
         [ 8.7166, 10.2379, 12.3529]],
        [[ 9.6169, 10.6748, 13.0524],
         [ 9.6972, 10.8237, 12.5199],
         [ 9.6906, 10.6775, 13.5414],
         ...,
         [13.4066, 10.9582, 11.2723],
         [10.8106, 12.1014, 11.6038],
         [ 9.7595, 10.7031, 12.9518]],
        [[10.4979, 10.9491, 13.3715],
         [10.4934, 11.1090, 12.8780],
         [10.4934, 10.9590, 13.8821],
         ...,
         [14.2459, 11.1766, 11.9866],
         [10.8972, 12.4996, 12.2262],
         [10.4960, 11.0137, 13.3526]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0126, 0.9524],
         [0.9741, 1.0166, 0.9461],
         [0.9744, 1.0132, 0.9616],
         ...,
         [1.0243, 1.0142, 0.9488],
         [0.9519, 1.0531, 0.9480],
         [0.9715, 1.0161, 0.9557]],
        [[0.9271, 0.9886, 0.9313],
         [0.9286, 0.9917, 0.9223],
         [0.9285, 0.9886, 0.9391],
         ...,
         [0.9774, 0.9952, 0.8996],
         [0.9473, 1.0180, 0.9056],
         [0.9298, 0.9889, 0.9291]],
        [[0.9220, 0.9858, 0.9288],
         [0.9239, 0.9888, 0.9196],
         [0.9238, 0.9857, 0.9364],
         ...,
         [0.9723, 0.9930, 0.8943],
         [0.9468, 1.0140, 0.9009],
         [0.9254, 0.9857, 0.9260]],
        ...,
        [[0.9159, 0.9824, 0.9258],
         [0.9184, 0.9852, 0.9162],
         [0.9182, 0.9822, 0.9332],
         ...,
         [0.9662, 0.9902, 0.8879],
         [0.9461, 1.0091, 0.8953],
         [0.9202, 0.9819, 0.9222]],
        [[0.9321, 0.9912, 0.9336],
         [0.9331, 0.9944, 0.9249],
         [0.9331, 0.9913, 0.9415],
         ...,
         [0.9822, 0.9973, 0.9046],
         [0.9479, 1.0218, 0.9100],
         [0.9340, 0.9918, 0.9319]],
        [[0.9437, 0.9971, 0.9388],
         [0.9437, 1.0005, 0.9307],
         [0.9437, 0.9973, 0.9471],
         ...,
         [0.9933, 1.0020, 0.9162],
         [0.9490, 1.0304, 0.9201],
         [0.9437, 0.9985, 0.9385]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0192, 11.7059, 14.2147],
         [12.7802, 11.8661, 13.8278],
         [12.8121, 11.6769, 14.7376],
         ...,
         [16.3939, 11.6941, 13.9304],
         [11.1146, 13.3366, 13.9415],
         [12.6379, 11.8243, 14.3989]],
        [[ 9.2664, 10.5523, 12.8643],
         [ 9.3624, 10.6849, 12.3550],
         [ 9.3489, 10.5526, 13.3047],
         ...,
         [12.9602, 10.9292, 11.1141],
         [10.7790, 11.8614, 11.3347],
         [ 9.4256, 10.5625, 12.7495]],
        [[ 8.8845, 10.4176, 12.7063],
         [ 9.0086, 10.5471, 12.1839],
         [ 8.9912, 10.4211, 13.1374],
         ...,
         [12.5886, 10.8380, 10.8077],
         [10.7381, 11.6906, 11.0479],
         [ 9.0895, 10.4160, 12.5590]],
        ...,
        [[ 8.4322, 10.2529, 12.5129],
         [ 8.5880, 10.3785, 11.9749],
         [ 8.5663, 10.2603, 12.9325],
         ...,
         [12.1421, 10.7259, 10.4391],
         [10.6876, 11.4819, 10.7021],
         [ 8.6890, 10.2370, 12.3264]],
        [[ 9.6336, 10.6781, 13.0119],
         [ 9.7014, 10.8137, 12.5150],
         [ 9.6918, 10.6754, 13.4612],
         ...,
         [13.3130, 11.0140, 11.4047],
         [10.8168, 12.0214, 11.6060],
         [ 9.7469, 10.6996, 12.9280]],
        [[10.4962, 10.9612, 13.3436],
         [10.4934, 11.1034, 12.8756],
         [10.4934, 10.9515, 13.8129],
         ...,
         [14.1260, 11.2035, 12.0732],
         [10.9008, 12.3821, 12.2280],
         [10.4951, 11.0085, 13.3308]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0135, 0.9567],
         [0.9747, 1.0169, 0.9504],
         [0.9751, 1.0129, 0.9652],
         ...,
         [1.0224, 1.0132, 0.9520],
         [0.9527, 1.0484, 0.9522],
         [0.9728, 1.0160, 0.9596]],
        [[0.9283, 0.9887, 0.9347],
         [0.9295, 0.9916, 0.9264],
         [0.9293, 0.9887, 0.9419],
         ...,
         [0.9771, 0.9968, 0.9062],
         [0.9482, 1.0168, 0.9098],
         [0.9304, 0.9890, 0.9328]],
        [[0.9232, 0.9859, 0.9321],
         [0.9248, 0.9886, 0.9236],
         [0.9246, 0.9859, 0.9391],
         ...,
         [0.9722, 0.9949, 0.9012],
         [0.9477, 1.0131, 0.9051],
         [0.9259, 0.9858, 0.9297]],
        ...,
        [[0.9172, 0.9823, 0.9290],
         [0.9193, 0.9850, 0.9202],
         [0.9190, 0.9825, 0.9358],
         ...,
         [0.9663, 0.9925, 0.8952],
         [0.9470, 1.0087, 0.8995],
         [0.9206, 0.9820, 0.9259]],
        [[0.9331, 0.9914, 0.9371],
         [0.9340, 0.9943, 0.9290],
         [0.9339, 0.9914, 0.9444],
         ...,
         [0.9817, 0.9986, 0.9109],
         [0.9487, 1.0202, 0.9142],
         [0.9346, 0.9919, 0.9357]],
        [[0.9445, 0.9975, 0.9425],
         [0.9445, 1.0006, 0.9349],
         [0.9445, 0.9973, 0.9501],
         ...,
         [0.9925, 1.0027, 0.9218],
         [0.9499, 1.0280, 0.9243],
         [0.9445, 0.9985, 0.9423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.4194, 11.8841, 14.2854],
         [12.5591, 11.8791, 13.8450],
         [12.5093, 11.8034, 14.4370],
         ...,
         [15.4833, 11.7210, 13.8798],
         [11.1658, 11.7408, 13.8576],
         [12.8058, 11.8190, 14.2315]],
        [[ 9.5331, 10.6416, 12.4605],
         [ 9.4628, 10.5929, 12.4157],
         [ 9.4872, 10.5584, 12.2860],
         ...,
         [12.5517, 10.8923, 12.8735],
         [10.9931, 11.4059, 11.2731],
         [ 9.3515, 10.5613, 12.5736]],
        [[ 9.2260, 10.4971, 12.2514],
         [ 9.1369, 10.4436, 12.2494],
         [ 9.1679, 10.4138, 12.0431],
         ...,
         [12.2298, 10.7939, 12.7541],
         [10.9719, 11.3651, 10.9887],
         [ 8.9946, 10.4153, 12.3822]],
        ...,
        [[ 8.8586, 10.3205, 11.9968],
         [ 8.7480, 10.2614, 12.0460],
         [ 8.7866, 10.2369, 11.7482],
         ...,
         [11.8416, 10.6730, 12.6075],
         [10.9457, 11.3147, 10.6456],
         [ 8.5705, 10.2368, 12.1488]],
        [[ 9.8256, 10.7767, 12.6567],
         [ 9.7739, 10.7325, 12.5713],
         [ 9.7918, 10.6938, 12.5147],
         ...,
         [12.8565, 10.9840, 12.9847],
         [11.0127, 11.4437, 11.5422],
         [ 9.6936, 10.6980, 12.7528]],
        [[10.5034, 11.0811, 13.1005],
         [10.4972, 11.0472, 12.9215],
         [10.4990, 10.9987, 13.0343],
         ...,
         [13.5554, 11.1890, 13.2335],
         [11.0561, 11.5275, 12.1589],
         [10.4934, 11.0059, 13.1574]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9727, 1.0197, 0.9624],
         [0.9746, 1.0196, 0.9552],
         [0.9739, 1.0180, 0.9648],
         ...,
         [1.0132, 1.0162, 0.9558],
         [0.9562, 1.0166, 0.9554],
         [0.9779, 1.0183, 0.9615]],
        [[0.9346, 0.9931, 0.9327],
         [0.9337, 0.9920, 0.9320],
         [0.9340, 0.9913, 0.9299],
         ...,
         [0.9745, 0.9985, 0.9394],
         [0.9539, 1.0095, 0.9134],
         [0.9322, 0.9914, 0.9345]],
        [[0.9305, 0.9900, 0.9293],
         [0.9294, 0.9888, 0.9293],
         [0.9298, 0.9882, 0.9259],
         ...,
         [0.9702, 0.9963, 0.9375],
         [0.9536, 1.0086, 0.9088],
         [0.9275, 0.9882, 0.9314]],
        ...,
        [[0.9257, 0.9862, 0.9252],
         [0.9242, 0.9849, 0.9260],
         [0.9247, 0.9844, 0.9211],
         ...,
         [0.9651, 0.9937, 0.9351],
         [0.9533, 1.0075, 0.9032],
         [0.9219, 0.9844, 0.9276]],
        [[0.9385, 0.9960, 0.9359],
         [0.9378, 0.9950, 0.9345],
         [0.9380, 0.9942, 0.9336],
         ...,
         [0.9785, 1.0004, 0.9412],
         [0.9542, 1.0103, 0.9178],
         [0.9367, 0.9943, 0.9374]],
        [[0.9474, 1.0025, 0.9431],
         [0.9473, 1.0018, 0.9402],
         [0.9474, 1.0007, 0.9420],
         ...,
         [0.9878, 1.0048, 0.9453],
         [0.9547, 1.0121, 0.9278],
         [0.9473, 1.0009, 0.9440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[12.8695, 11.7922, 14.2234],
         [12.7227, 11.8787, 13.8300],
         [12.7242, 11.7305, 14.6303],
         ...,
         [16.2393, 11.7305, 13.7399],
         [11.0910, 12.9211, 13.9119],
         [12.6637, 11.8287, 14.3572]],
        [[ 9.3251, 10.5568, 12.7712],
         [ 9.3873, 10.6579, 12.3757],
         [ 9.3867, 10.5526, 13.0426],
         ...,
         [12.8873, 10.8794, 11.4739],
         [10.8419, 11.7441, 11.3162],
         [ 9.4138, 10.5637, 12.7125]],
        [[ 8.9606, 10.4132, 12.6021],
         [ 9.0406, 10.5158, 12.2067],
         [ 9.0398, 10.4153, 12.8585],
         ...,
         [12.5237, 10.7784, 11.2208],
         [10.8115, 11.6061, 11.0305],
         [ 9.0744, 10.4168, 12.5225]],
        ...,
        [[ 8.5279, 10.2376, 12.3953],
         [ 8.6280, 10.3421, 12.0001],
         [ 8.6270, 10.2473, 12.6335],
         ...,
         [12.0867, 10.6543, 10.9143],
         [10.7738, 11.4370, 10.6860],
         [ 8.6702, 10.2373, 12.2906]],
        [[ 9.6749, 10.6912, 12.9294],
         [ 9.7192, 10.7909, 12.5339],
         [ 9.7188, 10.6810, 13.2150],
         ...,
         [13.2324, 10.9734, 11.7127],
         [10.8701, 11.8730, 11.5864],
         [ 9.7383, 10.7011, 12.8905]],
        [[10.4937, 10.9938, 13.2854],
         [10.4938, 11.0900, 12.8900],
         [10.4938, 10.9699, 13.6034],
         ...,
         [14.0268, 11.1839, 12.2573],
         [10.9325, 12.1625, 12.2059],
         [10.4946, 11.0107, 13.2921]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9778, 1.0161, 0.9619],
         [0.9759, 1.0179, 0.9555],
         [0.9759, 1.0148, 0.9686],
         ...,
         [1.0224, 1.0148, 0.9541],
         [0.9543, 1.0403, 0.9569],
         [0.9751, 1.0169, 0.9641]],
        [[0.9310, 0.9896, 0.9383],
         [0.9318, 0.9918, 0.9319],
         [0.9318, 0.9895, 0.9427],
         ...,
         [0.9781, 0.9965, 0.9172],
         [0.9510, 1.0151, 0.9147],
         [0.9322, 0.9897, 0.9374]],
        [[0.9262, 0.9865, 0.9356],
         [0.9272, 0.9887, 0.9291],
         [0.9272, 0.9866, 0.9397],
         ...,
         [0.9733, 0.9943, 0.9131],
         [0.9506, 1.0121, 0.9100],
         [0.9277, 0.9866, 0.9343]],
        ...,
        [[0.9204, 0.9827, 0.9322],
         [0.9218, 0.9850, 0.9258],
         [0.9218, 0.9830, 0.9361],
         ...,
         [0.9675, 0.9917, 0.9081],
         [0.9501, 1.0085, 0.9044],
         [0.9223, 0.9827, 0.9305]],
        [[0.9356, 0.9925, 0.9409],
         [0.9362, 0.9946, 0.9345],
         [0.9362, 0.9923, 0.9455],
         ...,
         [0.9826, 0.9985, 0.9211],
         [0.9514, 1.0178, 0.9191],
         [0.9364, 0.9927, 0.9403]],
        [[0.9464, 0.9990, 0.9467],
         [0.9464, 1.0010, 0.9403],
         [0.9464, 0.9984, 0.9519],
         ...,
         [0.9931, 1.0030, 0.9300],
         [0.9522, 1.0240, 0.9291],
         [0.9464, 0.9993, 0.9468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0299, 11.7036, 14.2117],
         [12.7775, 11.8651, 13.8255],
         [12.7970, 11.7021, 14.7382],
         ...,
         [16.4900, 11.7336, 13.9177],
         [11.1113, 13.3913, 13.9350],
         [12.6192, 11.8317, 14.4008]],
        [[ 9.2624, 10.5523, 12.8750],
         [ 9.3636, 10.6867, 12.3629],
         [ 9.3553, 10.5523, 13.3060],
         ...,
         [12.9982, 10.8752, 11.0842],
         [10.7867, 11.8771, 11.3296],
         [ 9.4343, 10.5645, 12.7579]],
        [[ 8.8792, 10.4179, 12.7185],
         [ 9.0101, 10.5492, 12.1929],
         [ 8.9994, 10.4180, 13.1387],
         ...,
         [12.6210, 10.7734, 10.7762],
         [10.7472, 11.7019, 11.0430],
         [ 9.1006, 10.4174, 12.5680]],
        ...,
        [[ 8.4256, 10.2534, 12.5270],
         [ 8.5898, 10.3810, 11.9852],
         [ 8.5765, 10.2538, 12.9340],
         ...,
         [12.1679, 10.6484, 10.4058],
         [10.6983, 11.4882, 10.6973],
         [ 8.7029, 10.2376, 12.3362]],
        [[ 9.6308, 10.6779, 13.0212],
         [ 9.7022, 10.8152, 12.5219],
         [ 9.6963, 10.6778, 13.4624],
         ...,
         [13.3565, 10.9701, 11.3764],
         [10.8233, 12.0411, 11.6008],
         [ 9.7532, 10.7021, 12.9357]],
        [[10.4964, 10.9604, 13.3496],
         [10.4934, 11.1043, 12.8800],
         [10.4934, 10.9599, 13.8140],
         ...,
         [14.1826, 11.1823, 12.0486],
         [10.9045, 12.4110, 12.2224],
         [10.4955, 11.0123, 13.3370]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0135, 0.9560],
         [0.9745, 1.0170, 0.9497],
         [0.9748, 1.0135, 0.9645],
         ...,
         [1.0236, 1.0141, 0.9512],
         [0.9525, 1.0497, 0.9515],
         [0.9724, 1.0162, 0.9591]],
        [[0.9281, 0.9888, 0.9342],
         [0.9294, 0.9917, 0.9259],
         [0.9293, 0.9888, 0.9413],
         ...,
         [0.9774, 0.9957, 0.9051],
               torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6775, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7681],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5120, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9937],
         [10.7731, 11.9117, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5581, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5791]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1879, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0439],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2993],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8980, 12.4749, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9919, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9937],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[13.0703, 11.6774, 14.2094],
         [12.7911, 11.8608, 13.8243],
         [12.8152, 11.6947, 14.7682],
         ...,
         [16.5519, 11.7343, 13.9743],
         [11.1172, 13.5121, 13.9410],
         [12.6084, 11.8324, 14.4117]],
        [[ 9.2473, 10.5526, 12.9007],
         [ 9.3578, 10.6943, 12.3597],
         [ 9.3476, 10.5523, 13.3721],
         ...,
         [13.0256, 10.8742, 10.9936],
         [10.7731, 11.9118, 11.3328],
         [ 9.4393, 10.5647, 12.7690]],
        [[ 8.8596, 10.4211, 12.7473],
         [ 9.0026, 10.5582, 12.1895],
         [ 8.9896, 10.4189, 13.2087],
         ...,
         [12.6450, 10.7722, 10.6720],
         [10.7312, 11.7273, 11.0459],
         [ 9.1071, 10.4175, 12.5792]],
        ...,
        [[ 8.4009, 10.2601, 12.5595],
         [ 8.5805, 10.3915, 11.9816],
         [ 8.5642, 10.2556, 13.0087],
         ...,
         [12.1880, 10.6470, 10.2858],
         [10.6795, 11.5024, 10.6999],
         [ 8.7109, 10.2377, 12.3474]],
        [[ 9.6203, 10.6754, 13.0440],
         [ 9.6981, 10.8216, 12.5189],
         [ 9.6908, 10.6770, 13.5247],
         ...,
         [13.3872, 10.9692, 11.2992],
         [10.8119, 12.0846, 11.6043],
         [ 9.7568, 10.7024, 12.9468]],
        [[10.4975, 10.9516, 13.3657],
         [10.4934, 11.1079, 12.8775],
         [10.4934, 10.9574, 13.8677],
         ...,
         [14.2210, 11.1819, 12.0040],
         [10.8979, 12.4750, 12.2266],
         [10.4958, 11.0127, 13.3481]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.9779, 1.0128, 0.9533],
         [0.9742, 1.0167, 0.9470],
         [0.9745, 1.0131, 0.9623],
         ...,
         [1.0239, 1.0140, 0.9494],
         [0.9521, 1.0521, 0.9489],
         [0.9718, 1.0161, 0.9565]],
        [[0.9274, 0.9886, 0.9320],
         [0.9288, 0.9917, 0.9232],
         [0.9287, 0.9886, 0.9396],
         ...,
         [0.9773, 0.9955, 0.9010],
         [0.9475, 1.0178, 0.9065],
         [0.9299, 0.9889, 0.9298]],
        [[0.9222, 0.9858, 0.9295],
         [0.9241, 0.9888, 0.9204],
         [0.9240, 0.9858, 0.9370],
         ...,
         [0.9723, 0.9933, 0.8957],
         [0.9470, 1.0138, 0.9018],
         [0.9255, 0.9857, 0.9267]],
        ...,
        [[0.9162, 0.9824, 0.9264],
         [0.9186, 0.9852, 0.9170],
         [0.9183, 0.9823, 0.9337],
         ...,
         [0.9662, 0.9907, 0.8894],
         [0.9463, 1.0090, 0.8962],
         [0.9203, 0.9819, 0.9230]],
        [[0.9323, 0.9913, 0.9343],
         [0.9333, 0.9944, 0.9258],
         [0.9332, 0.9913, 0.9421],
         ...,
         [0.9821, 0.9976, 0.9059],
         [0.9480, 1.0215, 0.9109],
         [0.9341, 0.9918, 0.9327]],
        [[0.9439, 0.9972, 0.9395],
         [0.9438, 1.0005, 0.9316],
         [0.9438, 0.9973, 0.9477],
         ...,
         [0.9931, 1.0021, 0.9174],
         [0.9492, 1.0299, 0.9210],
         [0.9439, 0.9985, 0.9392]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.1753],
         [ 0.1000,  0.1000, 14.8847],
         [ 0.1000,  0.1000, 13.6814],
         ...,
         [ 0.1000,  0.1000, 15.4314],
         [ 0.1000,  0.1000, 37.0164],
         [ 0.1000,  0.1000, 18.7053]],
        [[ 0.1000,  0.1000,  9.3234],
         [ 0.1000,  0.1000, 10.5414],
         [ 0.1000,  0.1000, 11.7171],
         ...,
         [ 0.1000,  0.1000, 10.2201],
         [ 0.1000,  0.1000, 25.9264],
         [ 0.1000,  0.1000,  8.8316]],
        [[ 0.1000,  0.1000,  8.7087],
         [ 0.1000,  0.1000, 10.1006],
         [ 0.1000,  0.1000, 11.4944],
         ...,
         [ 0.1000,  0.1000,  9.7119],
         [ 0.1000,  0.1000, 24.8084],
         [ 0.1000,  0.1000,  8.0481]],
        ...,
        [[ 0.1000,  0.1000,  8.0018],
         [ 0.1000,  0.1000,  9.5791],
         [ 0.1000,  0.1000, 11.2239],
         ...,
         [ 0.1000,  0.1000,  9.1161],
         [ 0.1000,  0.1000, 23.4875],
         [ 0.1000,  0.1000,  7.1716]],
        [[ 0.1000,  0.1000,  9.9293],
         [ 0.1000,  0.1000, 10.9654],
         [ 0.1000,  0.1000, 11.9265],
         ...,
         [ 0.1000,  0.1000, 10.7129],
         [ 0.1000,  0.1000, 27.0033],
         [ 0.1000,  0.1000,  9.6225]],
        [[ 0.1000,  0.1000, 11.4094],
         [ 0.1000,  0.1000, 11.9622],
         [ 0.1000,  0.1000, 12.4019],
         ...,
         [ 0.1000,  0.1000, 11.8860],
         [ 0.1000,  0.1000, 29.5406],
         [ 0.1000,  0.1000, 11.6275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9163],
         [0.1000, 0.1000, 0.8953],
         [0.1000, 0.1000, 0.8757],
         ...,
         [0.1000, 0.1000, 0.9042],
         [0.1000, 0.1000, 1.2552],
         [0.1000, 0.1000, 0.9574]],
        [[0.1000, 0.1000, 0.8048],
         [0.1000, 0.1000, 0.8246],
         [0.1000, 0.1000, 0.8438],
         ...,
         [0.1000, 0.1000, 0.8194],
         [0.1000, 0.1000, 1.0749],
         [0.1000, 0.1000, 0.7968]],
        [[0.1000, 0.1000, 0.7948],
         [0.1000, 0.1000, 0.8175],
         [0.1000, 0.1000, 0.8401],
         ...,
         [0.1000, 0.1000, 0.8112],
         [0.1000, 0.1000, 1.0567],
         [0.1000, 0.1000, 0.7841]],
        ...,
        [[0.1000, 0.1000, 0.7833],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8357],
         ...,
         [0.1000, 0.1000, 0.8015],
         [0.1000, 0.1000, 1.0352],
         [0.1000, 0.1000, 0.7698]],
        [[0.1000, 0.1000, 0.8147],
         [0.1000, 0.1000, 0.8315],
         [0.1000, 0.1000, 0.8472],
         ...,
         [0.1000, 0.1000, 0.8274],
         [0.1000, 0.1000, 1.0924],
         [0.1000, 0.1000, 0.8097]],
        [[0.1000, 0.1000, 0.8388],
         [0.1000, 0.1000, 0.8478],
         [0.1000, 0.1000, 0.8549],
         ...,
         [0.1000, 0.1000, 0.8465],
         [0.1000, 0.1000, 1.1337],
         [0.1000, 0.1000, 0.8423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.4161],
         [ 0.1000,  0.1000, 17.0954],
         [ 0.1000,  0.1000, 18.8515],
         ...,
         [ 0.1000,  0.1000, 15.6176],
         [ 0.1000,  0.1000, 33.4298],
         [ 0.1000,  0.1000, 18.5785]],
        [[ 0.1000,  0.1000,  9.2434],
         [ 0.1000,  0.1000,  9.3140],
         [ 0.1000,  0.1000,  8.7623],
         ...,
         [ 0.1000,  0.1000,  9.9685],
         [ 0.1000,  0.1000, 23.4091],
         [ 0.1000,  0.1000,  8.9415]],
        [[ 0.1000,  0.1000,  8.6090],
         [ 0.1000,  0.1000,  8.6395],
         [ 0.1000,  0.1000,  7.9695],
         ...,
         [ 0.1000,  0.1000,  9.4296],
         [ 0.1000,  0.1000, 22.3989],
         [ 0.1000,  0.1000,  8.1676]],
        ...,
        [[ 0.1000,  0.1000,  7.8819],
         [ 0.1000,  0.1000,  7.8699],
         [ 0.1000,  0.1000,  7.0845],
         ...,
         [ 0.1000,  0.1000,  8.8010],
         [ 0.1000,  0.1000, 21.2056],
         [ 0.1000,  0.1000,  7.2995]],
        [[ 0.1000,  0.1000,  9.8705],
         [ 0.1000,  0.1000,  9.9834],
         [ 0.1000,  0.1000,  9.5641],
         ...,
         [ 0.1000,  0.1000, 10.4934],
         [ 0.1000,  0.1000, 24.3820],
         [ 0.1000,  0.1000,  9.7209]],
        [[ 0.1000,  0.1000, 11.4089],
         [ 0.1000,  0.1000, 11.6357],
         [ 0.1000,  0.1000, 11.6026],
         ...,
         [ 0.1000,  0.1000, 11.7514],
         [ 0.1000,  0.1000, 26.6745],
         [ 0.1000,  0.1000, 11.6897]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9186],
         [0.1000, 0.1000, 0.9296],
         [0.1000, 0.1000, 0.9582],
         ...,
         [0.1000, 0.1000, 0.9056],
         [0.1000, 0.1000, 1.1953],
         [0.1000, 0.1000, 0.9538]],
        [[0.1000, 0.1000, 0.8019],
         [0.1000, 0.1000, 0.8031],
         [0.1000, 0.1000, 0.7941],
         ...,
         [0.1000, 0.1000, 0.8137],
         [0.1000, 0.1000, 1.0323],
         [0.1000, 0.1000, 0.7970]],
        [[0.1000, 0.1000, 0.7916],
         [0.1000, 0.1000, 0.7921],
         [0.1000, 0.1000, 0.7812],
         ...,
         [0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 1.0159],
         [0.1000, 0.1000, 0.7844]],
        ...,
        [[0.1000, 0.1000, 0.7798],
         [0.1000, 0.1000, 0.7796],
         [0.1000, 0.1000, 0.7668],
         ...,
         [0.1000, 0.1000, 0.7947],
         [0.1000, 0.1000, 0.9965],
         [0.1000, 0.1000, 0.7703]],
        [[0.1000, 0.1000, 0.8121],
         [0.1000, 0.1000, 0.8140],
         [0.1000, 0.1000, 0.8072],
         ...,
         [0.1000, 0.1000, 0.8223],
         [0.1000, 0.1000, 1.0482],
         [0.1000, 0.1000, 0.8097]],
        [[0.1000, 0.1000, 0.8372],
         [0.1000, 0.1000, 0.8408],
         [0.1000, 0.1000, 0.8403],
         ...,
         [0.1000, 0.1000, 0.8427],
         [0.1000, 0.1000, 1.0854],
         [0.1000, 0.1000, 0.8417]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.5037],
         [ 0.1000,  0.1000, 18.0893],
         [ 0.1000,  0.1000, 19.1611],
         ...,
         [ 0.1000,  0.1000, 15.4250],
         [ 0.1000,  0.1000, 31.1775],
         [ 0.1000,  0.1000, 17.9719]],
        [[ 0.1000,  0.1000,  9.2152],
         [ 0.1000,  0.1000,  9.0449],
         [ 0.1000,  0.1000,  8.7417],
         ...,
         [ 0.1000,  0.1000,  9.9449],
         [ 0.1000,  0.1000, 21.6954],
         [ 0.1000,  0.1000,  9.0722]],
        [[ 0.1000,  0.1000,  8.5738],
         [ 0.1000,  0.1000,  8.3012],
         [ 0.1000,  0.1000,  7.9324],
         ...,
         [ 0.1000,  0.1000,  9.4190],
         [ 0.1000,  0.1000, 20.7431],
         [ 0.1000,  0.1000,  8.3360]],
        ...,
        [[ 0.1000,  0.1000,  7.8395],
         [ 0.1000,  0.1000,  7.4626],
         [ 0.1000,  0.1000,  7.0313],
         ...,
         [ 0.1000,  0.1000,  8.8047],
         [ 0.1000,  0.1000, 19.6191],
         [ 0.1000,  0.1000,  7.5049]],
        [[ 0.1000,  0.1000,  9.8498],
         [ 0.1000,  0.1000,  9.7905],
         [ 0.1000,  0.1000,  9.5619],
         ...,
         [ 0.1000,  0.1000, 10.4565],
         [ 0.1000,  0.1000, 22.6133],
         [ 0.1000,  0.1000,  9.8094]],
        [[ 0.1000,  0.1000, 11.4091],
         [ 0.1000,  0.1000, 11.6606],
         [ 0.1000,  0.1000, 11.6546],
         ...,
         [ 0.1000,  0.1000, 11.6805],
         [ 0.1000,  0.1000, 24.7787],
         [ 0.1000,  0.1000, 11.6550]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9187],
         [0.1000, 0.1000, 0.9445],
         [0.1000, 0.1000, 0.9619],
         ...,
         [0.1000, 0.1000, 0.9012],
         [0.1000, 0.1000, 1.1574],
         [0.1000, 0.1000, 0.9426]],
        [[0.1000, 0.1000, 0.8002],
         [0.1000, 0.1000, 0.7974],
         [0.1000, 0.1000, 0.7925],
         ...,
         [0.1000, 0.1000, 0.8120],
         [0.1000, 0.1000, 1.0031],
         [0.1000, 0.1000, 0.7978]],
        [[0.1000, 0.1000, 0.7897],
         [0.1000, 0.1000, 0.7853],
         [0.1000, 0.1000, 0.7793],
         ...,
         [0.1000, 0.1000, 0.8035],
         [0.1000, 0.1000, 0.9877],
         [0.1000, 0.1000, 0.7859]],
        ...,
        [[0.1000, 0.1000, 0.7778],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7646],
         ...,
         [0.1000, 0.1000, 0.7935],
         [0.1000, 0.1000, 0.9694],
         [0.1000, 0.1000, 0.7723]],
        [[0.1000, 0.1000, 0.8105],
         [0.1000, 0.1000, 0.8095],
         [0.1000, 0.1000, 0.8058],
         ...,
         [0.1000, 0.1000, 0.8203],
         [0.1000, 0.1000, 1.0181],
         [0.1000, 0.1000, 0.8098]],
        [[0.1000, 0.1000, 0.8358],
         [0.1000, 0.1000, 0.8399],
         [0.1000, 0.1000, 0.8398],
         ...,
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 1.0533],
         [0.1000, 0.1000, 0.8398]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.7183],
         [ 0.1000,  0.1000, 19.4742],
         [ 0.1000,  0.1000, 19.0466],
         ...,
         [ 0.1000,  0.1000, 14.9159],
         [ 0.1000,  0.1000, 27.1314],
         [ 0.1000,  0.1000, 17.0136]],
        [[ 0.1000,  0.1000,  9.1491],
         [ 0.1000,  0.1000,  8.7873],
         [ 0.1000,  0.1000,  8.8559],
         ...,
         [ 0.1000,  0.1000,  9.9215],
         [ 0.1000,  0.1000, 17.4562],
         [ 0.1000,  0.1000,  9.3407]],
        [[ 0.1000,  0.1000,  8.4912],
         [ 0.1000,  0.1000,  7.9629],
         [ 0.1000,  0.1000,  8.0549],
         ...,
         [ 0.1000,  0.1000,  9.4331],
         [ 0.1000,  0.1000, 16.5289],
         [ 0.1000,  0.1000,  8.6725]],
        ...,
        [[ 0.1000,  0.1000,  7.7400],
         [ 0.1000,  0.1000,  7.0465],
         [ 0.1000,  0.1000,  7.1608],
         ...,
         [ 0.1000,  0.1000,  8.8603],
         [ 0.1000,  0.1000, 15.4460],
         [ 0.1000,  0.1000,  7.9092]],
        [[ 0.1000,  0.1000,  9.8017],
         [ 0.1000,  0.1000,  9.6239],
         [ 0.1000,  0.1000,  9.6659],
         ...,
         [ 0.1000,  0.1000, 10.3947],
         [ 0.1000,  0.1000, 18.3586],
         [ 0.1000,  0.1000, 10.0033]],
        [[ 0.1000,  0.1000, 11.4111],
         [ 0.1000,  0.1000, 11.7628],
         [ 0.1000,  0.1000, 11.7251],
         ...,
         [ 0.1000,  0.1000, 11.5204],
         [ 0.1000,  0.1000, 20.5182],
         [ 0.1000,  0.1000, 11.6364]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9219],
         [0.1000, 0.1000, 0.9667],
         [0.1000, 0.1000, 0.9598],
         ...,
         [0.1000, 0.1000, 0.8926],
         [0.1000, 0.1000, 1.0913],
         [0.1000, 0.1000, 0.9267]],
        [[0.1000, 0.1000, 0.7988],
         [0.1000, 0.1000, 0.7929],
         [0.1000, 0.1000, 0.7940],
         ...,
         [0.1000, 0.1000, 0.8114],
         [0.1000, 0.1000, 0.9339],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7881],
         [0.1000, 0.1000, 0.7795],
         [0.1000, 0.1000, 0.7810],
         ...,
         [0.1000, 0.1000, 0.8034],
         [0.1000, 0.1000, 0.9188],
         [0.1000, 0.1000, 0.7911]],
        ...,
        [[0.1000, 0.1000, 0.7759],
         [0.1000, 0.1000, 0.7646],
         [0.1000, 0.1000, 0.7665],
         ...,
         [0.1000, 0.1000, 0.7941],
         [0.1000, 0.1000, 0.9012],
         [0.1000, 0.1000, 0.7786]],
        [[0.1000, 0.1000, 0.8094],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8072],
         ...,
         [0.1000, 0.1000, 0.8191],
         [0.1000, 0.1000, 0.9486],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8356],
         [0.1000, 0.1000, 0.8413],
         [0.1000, 0.1000, 0.8407],
         ...,
         [0.1000, 0.1000, 0.8374],
         [0.1000, 0.1000, 0.9837],
         [0.1000, 0.1000, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.8239],
         [ 0.1000,  0.1000, 19.0335],
         [ 0.1000,  0.1000, 18.1181],
         ...,
         [ 0.1000,  0.1000, 16.7318],
         [ 0.1000,  0.1000, 26.6444],
         [ 0.1000,  0.1000, 17.0720]],
        [[ 0.1000,  0.1000,  9.1191],
         [ 0.1000,  0.1000,  8.8581],
         [ 0.1000,  0.1000,  9.0383],
         ...,
         [ 0.1000,  0.1000,  9.1536],
         [ 0.1000,  0.1000, 16.0881],
         [ 0.1000,  0.1000,  9.3216]],
        [[ 0.1000,  0.1000,  8.4533],
         [ 0.1000,  0.1000,  8.0579],
         [ 0.1000,  0.1000,  8.2928],
         ...,
         [ 0.1000,  0.1000,  8.4951],
         [ 0.1000,  0.1000, 15.1141],
         [ 0.1000,  0.1000,  8.6489]],
        ...,
        [[ 0.1000,  0.1000,  7.6941],
         [ 0.1000,  0.1000,  7.1644],
         [ 0.1000,  0.1000,  7.4524],
         ...,
         [ 0.1000,  0.1000,  7.7432],
         [ 0.1000,  0.1000, 13.9867],
         [ 0.1000,  0.1000,  7.8810]],
        [[ 0.1000,  0.1000,  9.7802],
         [ 0.1000,  0.1000,  9.6673],
         [ 0.1000,  0.1000,  9.7860],
         ...,
         [ 0.1000,  0.1000,  9.8069],
         [ 0.1000,  0.1000, 17.0429],
         [ 0.1000,  0.1000,  9.9890]],
        [[ 0.1000,  0.1000, 11.4136],
         [ 0.1000,  0.1000, 11.7240],
         [ 0.1000,  0.1000, 11.6620],
         ...,
         [ 0.1000,  0.1000, 11.4181],
         [ 0.1000,  0.1000, 19.3553],
         [ 0.1000,  0.1000, 11.6358]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9262],
         [0.1000, 0.1000, 0.9621],
         [0.1000, 0.1000, 0.9472],
         ...,
         [0.1000, 0.1000, 0.9247],
         [0.1000, 0.1000, 1.0859],
         [0.1000, 0.1000, 0.9302]],
        [[0.1000, 0.1000, 0.8008],
         [0.1000, 0.1000, 0.7966],
         [0.1000, 0.1000, 0.7995],
         ...,
         [0.1000, 0.1000, 0.8014],
         [0.1000, 0.1000, 0.9142],
         [0.1000, 0.1000, 0.8041]],
        [[0.1000, 0.1000, 0.7900],
         [0.1000, 0.1000, 0.7836],
         [0.1000, 0.1000, 0.7874],
         ...,
         [0.1000, 0.1000, 0.7907],
         [0.1000, 0.1000, 0.8983],
         [0.1000, 0.1000, 0.7932]],
        ...,
        [[0.1000, 0.1000, 0.7777],
         [0.1000, 0.1000, 0.7690],
         [0.1000, 0.1000, 0.7737],
         ...,
         [0.1000, 0.1000, 0.7785],
         [0.1000, 0.1000, 0.8800],
         [0.1000, 0.1000, 0.7807]],
        [[0.1000, 0.1000, 0.8116],
         [0.1000, 0.1000, 0.8098],
         [0.1000, 0.1000, 0.8117],
         ...,
         [0.1000, 0.1000, 0.8120],
         [0.1000, 0.1000, 0.9297],
         [0.1000, 0.1000, 0.8150]],
        [[0.1000, 0.1000, 0.8382],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8422],
         ...,
         [0.1000, 0.1000, 0.8382],
         [0.1000, 0.1000, 0.9673],
         [0.1000, 0.1000, 0.8418]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.9358],
         [ 0.1000,  0.1000, 18.2174],
         [ 0.1000,  0.1000, 17.4754],
         ...,
         [ 0.1000,  0.1000, 18.6725],
         [ 0.1000,  0.1000, 26.4757],
         [ 0.1000,  0.1000, 17.3697]],
        [[ 0.1000,  0.1000,  9.0900],
         [ 0.1000,  0.1000,  9.0162],
         [ 0.1000,  0.1000,  9.2000],
         ...,
         [ 0.1000,  0.1000,  8.7775],
         [ 0.1000,  0.1000, 15.2624],
         [ 0.1000,  0.1000,  9.2302]],
        [[ 0.1000,  0.1000,  8.4161],
         [ 0.1000,  0.1000,  8.2644],
         [ 0.1000,  0.1000,  8.4976],
         ...,
         [ 0.1000,  0.1000,  7.9944],
         [ 0.1000,  0.1000, 14.2564],
         [ 0.1000,  0.1000,  8.5353]],
        ...,
        [[ 0.1000,  0.1000,  7.6487],
         [ 0.1000,  0.1000,  7.4179],
         [ 0.1000,  0.1000,  7.6999],
         ...,
         [ 0.1000,  0.1000,  7.1190],
         [ 0.1000,  0.1000, 13.0995],
         [ 0.1000,  0.1000,  7.7452]],
        [[ 0.1000,  0.1000,  9.7599],
         [ 0.1000,  0.1000,  9.7709],
         [ 0.1000,  0.1000,  9.9000],
         ...,
         [ 0.1000,  0.1000,  9.5683],
         [ 0.1000,  0.1000, 16.2541],
         [ 0.1000,  0.1000,  9.9218]],
        [[ 0.1000,  0.1000, 11.4183],
         [ 0.1000,  0.1000, 11.6673],
         [ 0.1000,  0.1000, 11.6387],
         ...,
         [ 0.1000,  0.1000, 11.5748],
         [ 0.1000,  0.1000, 18.6764],
         [ 0.1000,  0.1000, 11.6369]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9279],
         [0.1000, 0.1000, 0.9487],
         [0.1000, 0.1000, 0.9367],
         ...,
         [0.1000, 0.1000, 0.9561],
         [0.1000, 0.1000, 1.0831],
         [0.1000, 0.1000, 0.9349]],
        [[0.1000, 0.1000, 0.8003],
         [0.1000, 0.1000, 0.7991],
         [0.1000, 0.1000, 0.8021],
         ...,
         [0.1000, 0.1000, 0.7952],
         [0.1000, 0.1000, 0.9007],
         [0.1000, 0.1000, 0.8026]],
        [[0.1000, 0.1000, 0.7893],
         [0.1000, 0.1000, 0.7869],
         [0.1000, 0.1000, 0.7906],
         ...,
         [0.1000, 0.1000, 0.7825],
         [0.1000, 0.1000, 0.8843],
         [0.1000, 0.1000, 0.7913]],
        ...,
        [[0.1000, 0.1000, 0.7768],
         [0.1000, 0.1000, 0.7731],
         [0.1000, 0.1000, 0.7777],
         ...,
         [0.1000, 0.1000, 0.7682],
         [0.1000, 0.1000, 0.8655],
         [0.1000, 0.1000, 0.7784]],
        [[0.1000, 0.1000, 0.8112],
         [0.1000, 0.1000, 0.8114],
         [0.1000, 0.1000, 0.8135],
         ...,
         [0.1000, 0.1000, 0.8081],
         [0.1000, 0.1000, 0.9168],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8381],
         [0.1000, 0.1000, 0.8422],
         [0.1000, 0.1000, 0.8417],
         ...,
         [0.1000, 0.1000, 0.8407],
         [0.1000, 0.1000, 0.9562],
         [0.1000, 0.1000, 0.8417]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2276],
         [ 0.1000,  0.1000, 17.0116],
         [ 0.1000,  0.1000, 16.7738],
         ...,
         [ 0.1000,  0.1000, 19.6511],
         [ 0.1000,  0.1000, 25.4468],
         [ 0.1000,  0.1000, 17.9398]],
        [[ 0.1000,  0.1000,  9.0248],
         [ 0.1000,  0.1000,  9.3414],
         [ 0.1000,  0.1000,  9.4241],
         ...,
         [ 0.1000,  0.1000,  8.7195],
         [ 0.1000,  0.1000, 14.1615],
         [ 0.1000,  0.1000,  9.0798]],
        [[ 0.1000,  0.1000,  8.3306],
         [ 0.1000,  0.1000,  8.6733],
         [ 0.1000,  0.1000,  8.7749],
         ...,
         [ 0.1000,  0.1000,  7.8851],
         [ 0.1000,  0.1000, 13.1705],
         [ 0.1000,  0.1000,  8.3458]],
        ...,
        [[ 0.1000,  0.1000,  7.5429],
         [ 0.1000,  0.1000,  7.9102],
         [ 0.1000,  0.1000,  8.0310],
         ...,
         [ 0.1000,  0.1000,  6.9596],
         [ 0.1000,  0.1000, 12.0363],
         [ 0.1000,  0.1000,  7.5167]],
        [[ 0.1000,  0.1000,  9.7169],
         [ 0.1000,  0.1000, 10.0038],
         [ 0.1000,  0.1000, 10.0660],
         ...,
         [ 0.1000,  0.1000,  9.5681],
         [ 0.1000,  0.1000, 15.1425],
         [ 0.1000,  0.1000,  9.8147]],
        [[ 0.1000,  0.1000, 11.4377],
         [ 0.1000,  0.1000, 11.6364],
         [ 0.1000,  0.1000, 11.6413],
         ...,
         [ 0.1000,  0.1000, 11.7441],
         [ 0.1000,  0.1000, 17.5544],
         [ 0.1000,  0.1000, 11.6536]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9286],
         [0.1000, 0.1000, 0.9251],
         [0.1000, 0.1000, 0.9212],
         ...,
         [0.1000, 0.1000, 0.9680],
         [0.1000, 0.1000, 1.0623],
         [0.1000, 0.1000, 0.9402]],
        [[0.1000, 0.1000, 0.7952],
         [0.1000, 0.1000, 0.8003],
         [0.1000, 0.1000, 0.8017],
         ...,
         [0.1000, 0.1000, 0.7902],
         [0.1000, 0.1000, 0.8787],
         [0.1000, 0.1000, 0.7961]],
        [[0.1000, 0.1000, 0.7839],
         [0.1000, 0.1000, 0.7895],
         [0.1000, 0.1000, 0.7911],
         ...,
         [0.1000, 0.1000, 0.7767],
         [0.1000, 0.1000, 0.8626],
         [0.1000, 0.1000, 0.7842]],
        ...,
        [[0.1000, 0.1000, 0.7711],
         [0.1000, 0.1000, 0.7771],
         [0.1000, 0.1000, 0.7790],
         ...,
         [0.1000, 0.1000, 0.7616],
         [0.1000, 0.1000, 0.8442],
         [0.1000, 0.1000, 0.7707]],
        [[0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8111],
         [0.1000, 0.1000, 0.8121],
         ...,
         [0.1000, 0.1000, 0.8040],
         [0.1000, 0.1000, 0.8947],
         [0.1000, 0.1000, 0.8080]],
        [[0.1000, 0.1000, 0.8344],
         [0.1000, 0.1000, 0.8377],
         [0.1000, 0.1000, 0.8378],
         ...,
         [0.1000, 0.1000, 0.8394],
         [0.1000, 0.1000, 0.9339],
         [0.1000, 0.1000, 0.8380]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 20.0374],
         [ 0.1000,  0.1000, 29.4832],
         [ 0.1000,  0.1000, 15.4265],
         ...,
         [ 0.1000,  0.1000, 15.3352],
         [ 0.1000,  0.1000, 15.6071],
         [ 0.1000,  0.1000, 20.0374]],
        [[ 0.1000,  0.1000,  8.7087],
         [ 0.1000,  0.1000, 25.1165],
         [ 0.1000,  0.1000, 14.5045],
         ...,
         [ 0.1000,  0.1000, 10.1844],
         [ 0.1000,  0.1000, 10.1243],
         [ 0.1000,  0.1000,  8.7087]],
        [[ 0.1000,  0.1000,  7.8551],
         [ 0.1000,  0.1000, 24.6230],
         [ 0.1000,  0.1000, 14.3943],
         ...,
         [ 0.1000,  0.1000,  9.6812],
         [ 0.1000,  0.1000,  9.5962],
         [ 0.1000,  0.1000,  7.8551]],
        ...,
        [[ 0.1000,  0.1000,  6.9111],
         [ 0.1000,  0.1000, 24.0240],
         [ 0.1000,  0.1000, 14.2586],
         ...,
         [ 0.1000,  0.1000,  9.0912],
         [ 0.1000,  0.1000,  8.9788],
         [ 0.1000,  0.1000,  6.9111]],
        [[ 0.1000,  0.1000,  9.5788],
         [ 0.1000,  0.1000, 25.5808],
         [ 0.1000,  0.1000, 14.6070],
         ...,
         [ 0.1000,  0.1000, 10.6721],
         [ 0.1000,  0.1000, 10.6376],
         [ 0.1000,  0.1000,  9.5788]],
        [[ 0.1000,  0.1000, 11.8189],
         [ 0.1000,  0.1000, 26.6361],
         [ 0.1000,  0.1000, 14.8358],
         ...,
         [ 0.1000,  0.1000, 11.8325],
         [ 0.1000,  0.1000, 11.8644],
         [ 0.1000,  0.1000, 11.8189]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9730],
         [0.1000, 0.1000, 1.1266],
         [0.1000, 0.1000, 0.8980],
         ...,
         [0.1000, 0.1000, 0.8965],
         [0.1000, 0.1000, 0.9009],
         [0.1000, 0.1000, 0.9730]],
        [[0.1000, 0.1000, 0.7887],
         [0.1000, 0.1000, 1.0556],
         [0.1000, 0.1000, 0.8830],
         ...,
         [0.1000, 0.1000, 0.8127],
         [0.1000, 0.1000, 0.8118],
         [0.1000, 0.1000, 0.7887]],
        [[0.1000, 0.1000, 0.7749],
         [0.1000, 0.1000, 1.0476],
         [0.1000, 0.1000, 0.8812],
         ...,
         [0.1000, 0.1000, 0.8046],
         [0.1000, 0.1000, 0.8032],
         [0.1000, 0.1000, 0.7749]],
        ...,
        [[0.1000, 0.1000, 0.7595],
         [0.1000, 0.1000, 1.0378],
         [0.1000, 0.1000, 0.8790],
         ...,
         [0.1000, 0.1000, 0.7950],
         [0.1000, 0.1000, 0.7931],
         [0.1000, 0.1000, 0.7595]],
        [[0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 1.0632],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.8207],
         [0.1000, 0.1000, 0.8201],
         [0.1000, 0.1000, 0.8029]],
        [[0.1000, 0.1000, 0.8393],
         [0.1000, 0.1000, 1.0803],
         [0.1000, 0.1000, 0.8884],
         ...,
         [0.1000, 0.1000, 0.8396],
         [0.1000, 0.1000, 0.8401],
         [0.1000, 0.1000, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.1933],
         [ 0.1000,  0.1000, 14.5797],
         [ 0.1000,  0.1000, 14.7125],
         ...,
         [ 0.1000,  0.1000, 17.4229],
         [ 0.1000,  0.1000, 20.0862],
         [ 0.1000,  0.1000, 18.7489]],
        [[ 0.1000,  0.1000,  8.8694],
         [ 0.1000,  0.1000, 12.8990],
         [ 0.1000,  0.1000, 10.8756],
         ...,
         [ 0.1000,  0.1000,  9.1708],
         [ 0.1000,  0.1000, 12.4834],
         [ 0.1000,  0.1000,  8.9089]],
        [[ 0.1000,  0.1000,  8.1146],
         [ 0.1000,  0.1000, 12.7049],
         [ 0.1000,  0.1000, 10.4763],
         ...,
         [ 0.1000,  0.1000,  8.4704],
         [ 0.1000,  0.1000, 11.7696],
         [ 0.1000,  0.1000,  8.1250]],
        ...,
        [[ 0.1000,  0.1000,  7.2665],
         [ 0.1000,  0.1000, 12.4680],
         [ 0.1000,  0.1000, 10.0010],
         ...,
         [ 0.1000,  0.1000,  7.6751],
         [ 0.1000,  0.1000, 10.9402],
         [ 0.1000,  0.1000,  7.2472]],
        [[ 0.1000,  0.1000,  9.6284],
         [ 0.1000,  0.1000, 13.0808],
         [ 0.1000,  0.1000, 11.2577],
         ...,
         [ 0.1000,  0.1000,  9.8687],
         [ 0.1000,  0.1000, 13.1808],
         [ 0.1000,  0.1000,  9.6997]],
        [[ 0.1000,  0.1000, 11.5409],
         [ 0.1000,  0.1000, 13.4911],
         [ 0.1000,  0.1000, 12.1492],
         ...,
         [ 0.1000,  0.1000, 11.6024],
         [ 0.1000,  0.1000, 14.8605],
         [ 0.1000,  0.1000, 11.7018]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9502],
         [0.1000, 0.1000, 0.8914],
         [0.1000, 0.1000, 0.8936],
         ...,
         [0.1000, 0.1000, 0.9377],
         [0.1000, 0.1000, 0.9810],
         [0.1000, 0.1000, 0.9592]],
        [[0.1000, 0.1000, 0.7985],
         [0.1000, 0.1000, 0.8641],
         [0.1000, 0.1000, 0.8312],
         ...,
         [0.1000, 0.1000, 0.8034],
         [0.1000, 0.1000, 0.8573],
         [0.1000, 0.1000, 0.7992]],
        [[0.1000, 0.1000, 0.7863],
         [0.1000, 0.1000, 0.8609],
         [0.1000, 0.1000, 0.8247],
         ...,
         [0.1000, 0.1000, 0.7921],
         [0.1000, 0.1000, 0.8457],
         [0.1000, 0.1000, 0.7864]],
        ...,
        [[0.1000, 0.1000, 0.7725],
         [0.1000, 0.1000, 0.8571],
         [0.1000, 0.1000, 0.8169],
         ...,
         [0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.8322],
         [0.1000, 0.1000, 0.7722]],
        [[0.1000, 0.1000, 0.8109],
         [0.1000, 0.1000, 0.8670],
         [0.1000, 0.1000, 0.8374],
         ...,
         [0.1000, 0.1000, 0.8148],
         [0.1000, 0.1000, 0.8687],
         [0.1000, 0.1000, 0.8120]],
        [[0.1000, 0.1000, 0.8420],
         [0.1000, 0.1000, 0.8737],
         [0.1000, 0.1000, 0.8519],
         ...,
         [0.1000, 0.1000, 0.8430],
         [0.1000, 0.1000, 0.8960],
         [0.1000, 0.1000, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 19.3977],
         [ 0.1000,  0.1000, 21.7714],
         [ 0.1000,  0.1000, 14.6682],
         ...,
         [ 0.1000,  0.1000, 15.8503],
         [ 0.1000,  0.1000, 15.2456],
         [ 0.1000,  0.1000, 19.6169]],
        [[ 0.1000,  0.1000,  8.7511],
         [ 0.1000,  0.1000, 20.3171],
         [ 0.1000,  0.1000, 13.1406],
         ...,
         [ 0.1000,  0.1000,  9.8151],
         [ 0.1000,  0.1000, 10.8537],
         [ 0.1000,  0.1000,  8.7662]],
        [[ 0.1000,  0.1000,  7.9300],
         [ 0.1000,  0.1000, 20.1440],
         [ 0.1000,  0.1000, 12.9629],
         ...,
         [ 0.1000,  0.1000,  9.2497],
         [ 0.1000,  0.1000, 10.4066],
         [ 0.1000,  0.1000,  7.9343]],
        ...,
        [[ 0.1000,  0.1000,  7.0171],
         [ 0.1000,  0.1000, 19.9311],
         [ 0.1000,  0.1000, 12.7457],
         ...,
         [ 0.1000,  0.1000,  8.5930],
         [ 0.1000,  0.1000,  9.8772],
         [ 0.1000,  0.1000,  7.0106]],
        [[ 0.1000,  0.1000,  9.5845],
         [ 0.1000,  0.1000, 20.4783],
         [ 0.1000,  0.1000, 13.3068],
         ...,
         [ 0.1000,  0.1000, 10.3677],
         [ 0.1000,  0.1000, 11.2834],
         [ 0.1000,  0.1000,  9.6115]],
        [[ 0.1000,  0.1000, 11.7152],
         [ 0.1000,  0.1000, 20.8384],
         [ 0.1000,  0.1000, 13.6810],
         ...,
         [ 0.1000,  0.1000, 11.6997],
         [ 0.1000,  0.1000, 12.2930],
         [ 0.1000,  0.1000, 11.7764]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9647],
         [0.1000, 0.1000, 1.0033],
         [0.1000, 0.1000, 0.8878],
         ...,
         [0.1000, 0.1000, 0.9070],
         [0.1000, 0.1000, 0.8972],
         [0.1000, 0.1000, 0.9683]],
        [[0.1000, 0.1000, 0.7916],
         [0.1000, 0.1000, 0.9797],
         [0.1000, 0.1000, 0.8630],
         ...,
         [0.1000, 0.1000, 0.8089],
         [0.1000, 0.1000, 0.8258],
         [0.1000, 0.1000, 0.7918]],
        [[0.1000, 0.1000, 0.7782],
         [0.1000, 0.1000, 0.9769],
         [0.1000, 0.1000, 0.8601],
         ...,
         [0.1000, 0.1000, 0.7997],
         [0.1000, 0.1000, 0.8185],
         [0.1000, 0.1000, 0.7783]],
        ...,
        [[0.1000, 0.1000, 0.7634],
         [0.1000, 0.1000, 0.9734],
         [0.1000, 0.1000, 0.8565],
         ...,
         [0.1000, 0.1000, 0.7890],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.7633]],
        [[0.1000, 0.1000, 0.8051],
         [0.1000, 0.1000, 0.9823],
         [0.1000, 0.1000, 0.8657],
         ...,
         [0.1000, 0.1000, 0.8179],
         [0.1000, 0.1000, 0.8327],
         [0.1000, 0.1000, 0.8056]],
        [[0.1000, 0.1000, 0.8398],
         [0.1000, 0.1000, 0.9882],
         [0.1000, 0.1000, 0.8717],
         ...,
         [0.1000, 0.1000, 0.8395],
         [0.1000, 0.1000, 0.8492],
         [0.1000, 0.1000, 0.8408]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.5097],
         [ 0.1000,  0.1000, 15.1107],
         [ 0.1000,  0.1000, 14.5068],
         ...,
         [ 0.1000,  0.1000, 17.4418],
         [ 0.1000,  0.1000, 17.6234],
         [ 0.1000,  0.1000, 19.0981]],
        [[ 0.1000,  0.1000,  8.8396],
         [ 0.1000,  0.1000, 14.0124],
         [ 0.1000,  0.1000, 11.3378],
         ...,
         [ 0.1000,  0.1000,  9.2095],
         [ 0.1000,  0.1000, 11.8489],
         [ 0.1000,  0.1000,  8.8471]],
        [[ 0.1000,  0.1000,  8.0668],
         [ 0.1000,  0.1000, 13.8821],
         [ 0.1000,  0.1000, 10.9971],
         ...,
         [ 0.1000,  0.1000,  8.5095],
         [ 0.1000,  0.1000, 11.2806],
         [ 0.1000,  0.1000,  8.0433]],
        ...,
        [[ 0.1000,  0.1000,  7.2009],
         [ 0.1000,  0.1000, 13.7221],
         [ 0.1000,  0.1000, 10.5884],
         ...,
         [ 0.1000,  0.1000,  7.7141],
         [ 0.1000,  0.1000, 10.6131],
         [ 0.1000,  0.1000,  7.1464]],
        [[ 0.1000,  0.1000,  9.6187],
         [ 0.1000,  0.1000, 14.1338],
         [ 0.1000,  0.1000, 11.6617],
         ...,
         [ 0.1000,  0.1000,  9.9068],
         [ 0.1000,  0.1000, 12.3988],
         [ 0.1000,  0.1000,  9.6604]],
        [[ 0.1000,  0.1000, 11.5894],
         [ 0.1000,  0.1000, 14.4053],
         [ 0.1000,  0.1000, 12.4096],
         ...,
         [ 0.1000,  0.1000, 11.6381],
         [ 0.1000,  0.1000, 13.7045],
         [ 0.1000,  0.1000, 11.7294]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9532],
         [0.1000, 0.1000, 0.8979],
         [0.1000, 0.1000, 0.8881],
         ...,
         [0.1000, 0.1000, 0.9358],
         [0.1000, 0.1000, 0.9388],
         [0.1000, 0.1000, 0.9628]],
        [[0.1000, 0.1000, 0.7959],
         [0.1000, 0.1000, 0.8800],
         [0.1000, 0.1000, 0.8365],
         ...,
         [0.1000, 0.1000, 0.8019],
         [0.1000, 0.1000, 0.8448],
         [0.1000, 0.1000, 0.7960]],
        [[0.1000, 0.1000, 0.7833],
         [0.1000, 0.1000, 0.8779],
         [0.1000, 0.1000, 0.8310],
         ...,
         [0.1000, 0.1000, 0.7905],
         [0.1000, 0.1000, 0.8356],
         [0.1000, 0.1000, 0.7830]],
        ...,
        [[0.1000, 0.1000, 0.7693],
         [0.1000, 0.1000, 0.8753],
         [0.1000, 0.1000, 0.8243],
         ...,
         [0.1000, 0.1000, 0.7776],
         [0.1000, 0.1000, 0.8247],
         [0.1000, 0.1000, 0.7684]],
        [[0.1000, 0.1000, 0.8086],
         [0.1000, 0.1000, 0.8820],
         [0.1000, 0.1000, 0.8418],
         ...,
         [0.1000, 0.1000, 0.8133],
         [0.1000, 0.1000, 0.8538],
         [0.1000, 0.1000, 0.8093]],
        [[0.1000, 0.1000, 0.8406],
         [0.1000, 0.1000, 0.8864],
         [0.1000, 0.1000, 0.8540],
         ...,
         [0.1000, 0.1000, 0.8414],
         [0.1000, 0.1000, 0.8750],
         [0.1000, 0.1000, 0.8429]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 19.1007],
         [ 0.1000,  0.1000, 18.4739],
         [ 0.1000,  0.1000, 14.4730],
         ...,
         [ 0.1000,  0.1000, 16.3019],
         [ 0.1000,  0.1000, 15.6895],
         [ 0.1000,  0.1000, 19.4481]],
        [[ 0.1000,  0.1000,  8.7777],
         [ 0.1000,  0.1000, 18.0354],
         [ 0.1000,  0.1000, 12.5030],
         ...,
         [ 0.1000,  0.1000,  9.6001],
         [ 0.1000,  0.1000, 11.1739],
         [ 0.1000,  0.1000,  8.7912]],
        [[ 0.1000,  0.1000,  7.9722],
         [ 0.1000,  0.1000, 17.9818],
         [ 0.1000,  0.1000, 12.2786],
         ...,
         [ 0.1000,  0.1000,  8.9910],
         [ 0.1000,  0.1000, 10.7142],
         [ 0.1000,  0.1000,  7.9683]],
        ...,
        [[ 0.1000,  0.1000,  7.0745],
         [ 0.1000,  0.1000, 17.9156],
         [ 0.1000,  0.1000, 12.0057],
         ...,
         [ 0.1000,  0.1000,  8.2885],
         [ 0.1000,  0.1000, 10.1698],
         [ 0.1000,  0.1000,  7.0531]],
        [[ 0.1000,  0.1000,  9.5933],
         [ 0.1000,  0.1000, 18.0850],
         [ 0.1000,  0.1000, 12.7139],
         ...,
         [ 0.1000,  0.1000, 10.1990],
         [ 0.1000,  0.1000, 11.6159],
         [ 0.1000,  0.1000,  9.6263]],
        [[ 0.1000,  0.1000, 11.6715],
         [ 0.1000,  0.1000, 18.1949],
         [ 0.1000,  0.1000, 13.1918],
         ...,
         [ 0.1000,  0.1000, 11.6560],
         [ 0.1000,  0.1000, 12.6540],
         [ 0.1000,  0.1000, 11.7604]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9608],
         [0.1000, 0.1000, 0.9506],
         [0.1000, 0.1000, 0.8855],
         ...,
         [0.1000, 0.1000, 0.9153],
         [0.1000, 0.1000, 0.9053],
         [0.1000, 0.1000, 0.9665]],
        [[0.1000, 0.1000, 0.7929],
         [0.1000, 0.1000, 0.9435],
         [0.1000, 0.1000, 0.8535],
         ...,
         [0.1000, 0.1000, 0.8063],
         [0.1000, 0.1000, 0.8319],
         [0.1000, 0.1000, 0.7931]],
        [[0.1000, 0.1000, 0.7798],
         [0.1000, 0.1000, 0.9426],
         [0.1000, 0.1000, 0.8498],
         ...,
         [0.1000, 0.1000, 0.7964],
         [0.1000, 0.1000, 0.8244],
         [0.1000, 0.1000, 0.7797]],
        ...,
        [[0.1000, 0.1000, 0.7652],
         [0.1000, 0.1000, 0.9415],
         [0.1000, 0.1000, 0.8454],
         ...,
         [0.1000, 0.1000, 0.7849],
         [0.1000, 0.1000, 0.8155],
         [0.1000, 0.1000, 0.7649]],
        [[0.1000, 0.1000, 0.8062],
         [0.1000, 0.1000, 0.9443],
         [0.1000, 0.1000, 0.8569],
         ...,
         [0.1000, 0.1000, 0.8160],
         [0.1000, 0.1000, 0.8391],
         [0.1000, 0.1000, 0.8067]],
        [[0.1000, 0.1000, 0.8400],
         [0.1000, 0.1000, 0.9461],
         [0.1000, 0.1000, 0.8647],
         ...,
         [0.1000, 0.1000, 0.8397],
         [0.1000, 0.1000, 0.8559],
         [0.1000, 0.1000, 0.8414]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.9395],
         [ 0.1000,  0.1000, 16.8540],
         [ 0.1000,  0.1000, 14.4656],
         ...,
         [ 0.1000,  0.1000, 18.2404],
         [ 0.1000,  0.1000, 15.4273],
         [ 0.1000,  0.1000, 19.3582]],
        [[ 0.1000,  0.1000,  8.8405],
         [ 0.1000,  0.1000, 16.4037],
         [ 0.1000,  0.1000, 12.4657],
         ...,
         [ 0.1000,  0.1000,  9.0112],
         [ 0.1000,  0.1000, 10.7544],
         [ 0.1000,  0.1000,  8.8051]],
        [[ 0.1000,  0.1000,  8.0448],
         [ 0.1000,  0.1000, 16.3488],
         [ 0.1000,  0.1000, 12.2381],
         ...,
         [ 0.1000,  0.1000,  8.2580],
         [ 0.1000,  0.1000, 10.2847],
         [ 0.1000,  0.1000,  7.9869]],
        ...,
        [[ 0.1000,  0.1000,  7.1561],
         [ 0.1000,  0.1000, 16.2809],
         [ 0.1000,  0.1000, 11.9615],
         ...,
         [ 0.1000,  0.1000,  7.4100],
         [ 0.1000,  0.1000,  9.7300],
         [ 0.1000,  0.1000,  7.0764]],
        [[ 0.1000,  0.1000,  9.6448],
         [ 0.1000,  0.1000, 16.4545],
         [ 0.1000,  0.1000, 12.6795],
         ...,
         [ 0.1000,  0.1000,  9.7675],
         [ 0.1000,  0.1000, 11.2072],
         [ 0.1000,  0.1000,  9.6346]],
        [[ 0.1000,  0.1000, 11.6880],
         [ 0.1000,  0.1000, 16.5673],
         [ 0.1000,  0.1000, 13.1643],
         ...,
         [ 0.1000,  0.1000, 11.6686],
         [ 0.1000,  0.1000, 12.2748],
         [ 0.1000,  0.1000, 11.7521]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9587],
         [0.1000, 0.1000, 0.9248],
         [0.1000, 0.1000, 0.8859],
         ...,
         [0.1000, 0.1000, 0.9473],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9655]],
        [[0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.9174],
         [0.1000, 0.1000, 0.8534],
         ...,
         [0.1000, 0.1000, 0.7972],
         [0.1000, 0.1000, 0.8256],
         [0.1000, 0.1000, 0.7938]],
        [[0.1000, 0.1000, 0.7815],
         [0.1000, 0.1000, 0.9165],
         [0.1000, 0.1000, 0.8497],
         ...,
         [0.1000, 0.1000, 0.7849],
         [0.1000, 0.1000, 0.8179],
         [0.1000, 0.1000, 0.7805]],
        ...,
        [[0.1000, 0.1000, 0.7670],
         [0.1000, 0.1000, 0.9154],
         [0.1000, 0.1000, 0.8452],
         ...,
         [0.1000, 0.1000, 0.7712],
         [0.1000, 0.1000, 0.8089],
         [0.1000, 0.1000, 0.7657]],
        [[0.1000, 0.1000, 0.8075],
         [0.1000, 0.1000, 0.9183],
         [0.1000, 0.1000, 0.8569],
         ...,
         [0.1000, 0.1000, 0.8095],
         [0.1000, 0.1000, 0.8329],
         [0.1000, 0.1000, 0.8073]],
        [[0.1000, 0.1000, 0.8407],
         [0.1000, 0.1000, 0.9201],
         [0.1000, 0.1000, 0.8647],
         ...,
         [0.1000, 0.1000, 0.8404],
         [0.1000, 0.1000, 0.8503],
         [0.1000, 0.1000, 0.8418]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0955],
         [ 0.1000,  0.1000, 16.9440],
         [ 0.1000,  0.1000, 15.1699],
         ...,
         [ 0.1000,  0.1000, 19.8477],
         [ 0.1000,  0.1000, 15.6084],
         [ 0.1000,  0.1000, 18.5914]],
        [[ 0.1000,  0.1000,  9.0435],
         [ 0.1000,  0.1000, 16.5148],
         [ 0.1000,  0.1000, 14.1095],
         ...,
         [ 0.1000,  0.1000,  8.7338],
         [ 0.1000,  0.1000,  9.9224],
         [ 0.1000,  0.1000,  8.9389]],
        [[ 0.1000,  0.1000,  8.2994],
         [ 0.1000,  0.1000, 16.4624],
         [ 0.1000,  0.1000, 13.9835],
         ...,
         [ 0.1000,  0.1000,  7.8899],
         [ 0.1000,  0.1000,  9.3813],
         [ 0.1000,  0.1000,  8.1643]],
        ...,
        [[ 0.1000,  0.1000,  7.4604],
         [ 0.1000,  0.1000, 16.3976],
         [ 0.1000,  0.1000, 13.8286],
         ...,
         [ 0.1000,  0.1000,  6.9549],
         [ 0.1000,  0.1000,  8.7506],
         [ 0.1000,  0.1000,  7.2955]],
        [[ 0.1000,  0.1000,  9.7895],
         [ 0.1000,  0.1000, 16.5633],
         [ 0.1000,  0.1000, 14.2268],
         ...,
         [ 0.1000,  0.1000,  9.5928],
         [ 0.1000,  0.1000, 10.4497],
         [ 0.1000,  0.1000,  9.7192]],
        [[ 0.1000,  0.1000, 11.6609],
         [ 0.1000,  0.1000, 16.6708],
         [ 0.1000,  0.1000, 14.4892],
         ...,
         [ 0.1000,  0.1000, 11.7993],
         [ 0.1000,  0.1000, 11.7144],
         [ 0.1000,  0.1000, 11.6905]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9424],
         [0.1000, 0.1000, 0.9236],
         [0.1000, 0.1000, 0.8948],
         ...,
         [0.1000, 0.1000, 0.9709],
         [0.1000, 0.1000, 0.9019],
         [0.1000, 0.1000, 0.9504]],
        [[0.1000, 0.1000, 0.7951],
         [0.1000, 0.1000, 0.9166],
         [0.1000, 0.1000, 0.8775],
         ...,
         [0.1000, 0.1000, 0.7901],
         [0.1000, 0.1000, 0.8094],
         [0.1000, 0.1000, 0.7934]],
        [[0.1000, 0.1000, 0.7830],
         [0.1000, 0.1000, 0.9158],
         [0.1000, 0.1000, 0.8755],
         ...,
         [0.1000, 0.1000, 0.7764],
         [0.1000, 0.1000, 0.8006],
         [0.1000, 0.1000, 0.7808]],
        ...,
        [[0.1000, 0.1000, 0.7694],
         [0.1000, 0.1000, 0.9147],
         [0.1000, 0.1000, 0.8730],
         ...,
         [0.1000, 0.1000, 0.7612],
         [0.1000, 0.1000, 0.7904],
         [0.1000, 0.1000, 0.7667]],
        [[0.1000, 0.1000, 0.8073],
         [0.1000, 0.1000, 0.9174],
         [0.1000, 0.1000, 0.8794],
         ...,
         [0.1000, 0.1000, 0.8041],
         [0.1000, 0.1000, 0.8180],
         [0.1000, 0.1000, 0.8061]],
        [[0.1000, 0.1000, 0.8377],
         [0.1000, 0.1000, 0.9192],
         [0.1000, 0.1000, 0.8837],
         ...,
         [0.1000, 0.1000, 0.8399],
         [0.1000, 0.1000, 0.8386],
         [0.1000, 0.1000, 0.8382]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.6508],
         [ 0.1000,  0.1000, 15.7088],
         [ 0.1000,  0.1000, 15.2393],
         ...,
         [ 0.1000,  0.1000, 19.3710],
         [ 0.1000,  0.1000, 15.5756],
         [ 0.1000,  0.1000, 18.3742]],
        [[ 0.1000,  0.1000,  9.1524],
         [ 0.1000,  0.1000, 14.9072],
         [ 0.1000,  0.1000, 14.2201],
         ...,
         [ 0.1000,  0.1000,  8.8031],
         [ 0.1000,  0.1000,  9.8526],
         [ 0.1000,  0.1000,  8.9827]],
        [[ 0.1000,  0.1000,  8.4377],
         [ 0.1000,  0.1000, 14.8109],
         [ 0.1000,  0.1000, 14.0988],
         ...,
         [ 0.1000,  0.1000,  7.9842],
         [ 0.1000,  0.1000,  9.3095],
         [ 0.1000,  0.1000,  8.2212]],
        ...,
        [[ 0.1000,  0.1000,  7.6278],
         [ 0.1000,  0.1000, 14.6922],
         [ 0.1000,  0.1000, 13.9496],
         ...,
         [ 0.1000,  0.1000,  7.0730],
         [ 0.1000,  0.1000,  8.6770],
         [ 0.1000,  0.1000,  7.3651]],
        [[ 0.1000,  0.1000,  9.8658],
         [ 0.1000,  0.1000, 14.9967],
         [ 0.1000,  0.1000, 14.3330],
         ...,
         [ 0.1000,  0.1000,  9.6334],
         [ 0.1000,  0.1000, 10.3820],
         [ 0.1000,  0.1000,  9.7483]],
        [[ 0.1000,  0.1000, 11.6430],
         [ 0.1000,  0.1000, 15.1961],
         [ 0.1000,  0.1000, 14.5854],
         ...,
         [ 0.1000,  0.1000, 11.7533],
         [ 0.1000,  0.1000, 11.6530],
         [ 0.1000,  0.1000, 11.6764]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9376],
         [0.1000, 0.1000, 0.9061],
         [0.1000, 0.1000, 0.8984],
         ...,
         [0.1000, 0.1000, 0.9656],
         [0.1000, 0.1000, 0.9039],
         [0.1000, 0.1000, 0.9494]],
        [[0.1000, 0.1000, 0.7994],
         [0.1000, 0.1000, 0.8930],
         [0.1000, 0.1000, 0.8818],
         ...,
         [0.1000, 0.1000, 0.7937],
         [0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.7967]],
        [[0.1000, 0.1000, 0.7878],
         [0.1000, 0.1000, 0.8915],
         [0.1000, 0.1000, 0.8799],
         ...,
         [0.1000, 0.1000, 0.7804],
         [0.1000, 0.1000, 0.8020],
         [0.1000, 0.1000, 0.7843]],
        ...,
        [[0.1000, 0.1000, 0.7746],
         [0.1000, 0.1000, 0.8895],
         [0.1000, 0.1000, 0.8774],
         ...,
         [0.1000, 0.1000, 0.7656],
         [0.1000, 0.1000, 0.7917],
         [0.1000, 0.1000, 0.7704]],
        [[0.1000, 0.1000, 0.8110],
         [0.1000, 0.1000, 0.8945],
         [0.1000, 0.1000, 0.8837],
         ...,
         [0.1000, 0.1000, 0.8072],
         [0.1000, 0.1000, 0.8194],
         [0.1000, 0.1000, 0.8091]],
        [[0.1000, 0.1000, 0.8399],
         [0.1000, 0.1000, 0.8977],
         [0.1000, 0.1000, 0.8878],
         ...,
         [0.1000, 0.1000, 0.8417],
         [0.1000, 0.1000, 0.8401],
         [0.1000, 0.1000, 0.8405]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3713],
         [ 0.1000,  0.1000, 15.7921],
         [ 0.1000,  0.1000, 16.1249],
         ...,
         [ 0.1000,  0.1000, 18.0923],
         [ 0.1000,  0.1000, 15.6498],
         [ 0.1000,  0.1000, 17.9761]],
        [[ 0.1000,  0.1000,  9.2297],
         [ 0.1000,  0.1000, 15.0219],
         [ 0.1000,  0.1000, 15.4682],
         ...,
         [ 0.1000,  0.1000,  9.0442],
         [ 0.1000,  0.1000,  9.6062],
         [ 0.1000,  0.1000,  9.0712]],
        [[ 0.1000,  0.1000,  8.5347],
         [ 0.1000,  0.1000, 14.9292],
         [ 0.1000,  0.1000, 15.3888],
         ...,
         [ 0.1000,  0.1000,  8.3003],
         [ 0.1000,  0.1000,  9.0430],
         [ 0.1000,  0.1000,  8.3348]],
        ...,
        [[ 0.1000,  0.1000,  7.7445],
         [ 0.1000,  0.1000, 14.8150],
         [ 0.1000,  0.1000, 15.2908],
         ...,
         [ 0.1000,  0.1000,  7.4615],
         [ 0.1000,  0.1000,  8.3897],
         [ 0.1000,  0.1000,  7.5033]],
        [[ 0.1000,  0.1000,  9.9215],
         [ 0.1000,  0.1000, 15.1080],
         [ 0.1000,  0.1000, 15.5419],
         ...,
         [ 0.1000,  0.1000,  9.7900],
         [ 0.1000,  0.1000, 10.1572],
         [ 0.1000,  0.1000,  9.8087]],
        [[ 0.1000,  0.1000, 11.6370],
         [ 0.1000,  0.1000, 15.2997],
         [ 0.1000,  0.1000, 15.7057],
         ...,
         [ 0.1000,  0.1000, 11.6607],
         [ 0.1000,  0.1000, 11.4876],
         [ 0.1000,  0.1000, 11.6552]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9157],
         [0.1000, 0.1000, 0.9211],
         ...,
         [0.1000, 0.1000, 0.9531],
         [0.1000, 0.1000, 0.9134],
         [0.1000, 0.1000, 0.9512]],
        [[0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.9032],
         [0.1000, 0.1000, 0.9104],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8151],
         [0.1000, 0.1000, 0.8064]],
        [[0.1000, 0.1000, 0.7977],
         [0.1000, 0.1000, 0.9017],
         [0.1000, 0.1000, 0.9092],
         ...,
         [0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8059],
         [0.1000, 0.1000, 0.7944]],
        ...,
        [[0.1000, 0.1000, 0.7848],
         [0.1000, 0.1000, 0.8998],
         [0.1000, 0.1000, 0.9076],
         ...,
         [0.1000, 0.1000, 0.7802],
         [0.1000, 0.1000, 0.7953],
         [0.1000, 0.1000, 0.7809]],
        [[0.1000, 0.1000, 0.8202],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9116],
         ...,
         [0.1000, 0.1000, 0.8181],
         [0.1000, 0.1000, 0.8241],
         [0.1000, 0.1000, 0.8184]],
        [[0.1000, 0.1000, 0.8481],
         [0.1000, 0.1000, 0.9077],
         [0.1000, 0.1000, 0.9143],
         ...,
         [0.1000, 0.1000, 0.8485],
         [0.1000, 0.1000, 0.8457],
         [0.1000, 0.1000, 0.8484]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2364],
         [ 0.1000,  0.1000, 15.8600],
         [ 0.1000,  0.1000, 17.0993],
         ...,
         [ 0.1000,  0.1000, 17.7294],
         [ 0.1000,  0.1000, 15.8587],
         [ 0.1000,  0.1000, 17.9297]],
        [[ 0.1000,  0.1000,  9.2699],
         [ 0.1000,  0.1000, 15.1143],
         [ 0.1000,  0.1000, 16.7024],
         ...,
         [ 0.1000,  0.1000,  9.1319],
         [ 0.1000,  0.1000,  9.4846],
         [ 0.1000,  0.1000,  9.0822]],
        [[ 0.1000,  0.1000,  8.5848],
         [ 0.1000,  0.1000, 15.0245],
         [ 0.1000,  0.1000, 16.6540],
         ...,
         [ 0.1000,  0.1000,  8.4119],
         [ 0.1000,  0.1000,  8.8999],
         [ 0.1000,  0.1000,  8.3489]],
        ...,
        [[ 0.1000,  0.1000,  7.8044],
         [ 0.1000,  0.1000, 14.9137],
         [ 0.1000,  0.1000, 16.5940],
         ...,
         [ 0.1000,  0.1000,  7.5967],
         [ 0.1000,  0.1000,  8.2240],
         [ 0.1000,  0.1000,  7.5204]],
        [[ 0.1000,  0.1000,  9.9508],
         [ 0.1000,  0.1000, 15.1978],
         [ 0.1000,  0.1000, 16.7473],
         ...,
         [ 0.1000,  0.1000,  9.8513],
         [ 0.1000,  0.1000, 10.0585],
         [ 0.1000,  0.1000,  9.8164]],
        [[ 0.1000,  0.1000, 11.6357],
         [ 0.1000,  0.1000, 15.3835],
         [ 0.1000,  0.1000, 16.8468],
         ...,
         [ 0.1000,  0.1000, 11.6455],
         [ 0.1000,  0.1000, 11.4508],
         [ 0.1000,  0.1000, 11.6531]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9352],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9330],
         ...,
         [0.1000, 0.1000, 0.9432],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9465]],
        [[0.1000, 0.1000, 0.8056],
         [0.1000, 0.1000, 0.9007],
         [0.1000, 0.1000, 0.9265],
         ...,
         [0.1000, 0.1000, 0.8034],
         [0.1000, 0.1000, 0.8091],
         [0.1000, 0.1000, 0.8026]],
        [[0.1000, 0.1000, 0.7945],
         [0.1000, 0.1000, 0.8992],
         [0.1000, 0.1000, 0.9257],
         ...,
         [0.1000, 0.1000, 0.7917],
         [0.1000, 0.1000, 0.7996],
         [0.1000, 0.1000, 0.7907]],
        ...,
        [[0.1000, 0.1000, 0.7818],
         [0.1000, 0.1000, 0.8974],
         [0.1000, 0.1000, 0.9248],
         ...,
         [0.1000, 0.1000, 0.7784],
         [0.1000, 0.1000, 0.7886],
         [0.1000, 0.1000, 0.7772]],
        [[0.1000, 0.1000, 0.8167],
         [0.1000, 0.1000, 0.9021],
         [0.1000, 0.1000, 0.9273],
         ...,
         [0.1000, 0.1000, 0.8151],
         [0.1000, 0.1000, 0.8185],
         [0.1000, 0.1000, 0.8145]],
        [[0.1000, 0.1000, 0.8441],
         [0.1000, 0.1000, 0.9051],
         [0.1000, 0.1000, 0.9289],
         ...,
         [0.1000, 0.1000, 0.8443],
         [0.1000, 0.1000, 0.8411],
         [0.1000, 0.1000, 0.8444]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2162],
         [ 0.1000,  0.1000, 15.8704],
         [ 0.1000,  0.1000, 17.2696],
         ...,
         [ 0.1000,  0.1000, 17.6760],
         [ 0.1000,  0.1000, 15.8939],
         [ 0.1000,  0.1000, 17.9227]],
        [[ 0.1000,  0.1000,  9.2760],
         [ 0.1000,  0.1000, 15.1284],
         [ 0.1000,  0.1000, 16.9012],
         ...,
         [ 0.1000,  0.1000,  9.1458],
         [ 0.1000,  0.1000,  9.4666],
         [ 0.1000,  0.1000,  9.0839]],
        [[ 0.1000,  0.1000,  8.5924],
         [ 0.1000,  0.1000, 15.0390],
         [ 0.1000,  0.1000, 16.8561],
         ...,
         [ 0.1000,  0.1000,  8.4294],
         [ 0.1000,  0.1000,  8.8785],
         [ 0.1000,  0.1000,  8.3510]],
        ...,
        [[ 0.1000,  0.1000,  7.8136],
         [ 0.1000,  0.1000, 14.9288],
         [ 0.1000,  0.1000, 16.8004],
         ...,
         [ 0.1000,  0.1000,  7.6178],
         [ 0.1000,  0.1000,  8.1990],
         [ 0.1000,  0.1000,  7.5230]],
        [[ 0.1000,  0.1000,  9.9554],
         [ 0.1000,  0.1000, 15.2115],
         [ 0.1000,  0.1000, 16.9429],
         ...,
         [ 0.1000,  0.1000,  9.8611],
         [ 0.1000,  0.1000, 10.0441],
         [ 0.1000,  0.1000,  9.8175]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3962],
         [ 0.1000,  0.1000, 17.0353],
         ...,
         [ 0.1000,  0.1000, 11.6438],
         [ 0.1000,  0.1000, 11.4463],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9343],
         [0.1000, 0.1000, 0.9124],
         [0.1000, 0.1000, 0.9351],
         ...,
         [0.1000, 0.1000, 0.9417],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9458]],
        [[0.1000, 0.1000, 0.8051],
         [0.1000, 0.1000, 0.9003],
         [0.1000, 0.1000, 0.9291],
         ...,
         [0.1000, 0.1000, 0.8030],
         [0.1000, 0.1000, 0.8082],
         [0.1000, 0.1000, 0.8020]],
        [[0.1000, 0.1000, 0.7940],
         [0.1000, 0.1000, 0.8989],
         [0.1000, 0.1000, 0.9284],
         ...,
         [0.1000, 0.1000, 0.7914],
         [0.1000, 0.1000, 0.7987],
         [0.1000, 0.1000, 0.7901]],
        ...,
        [[0.1000, 0.1000, 0.7813],
         [0.1000, 0.1000, 0.8971],
         [0.1000, 0.1000, 0.9275],
         ...,
         [0.1000, 0.1000, 0.7782],
         [0.1000, 0.1000, 0.7876],
         [0.1000, 0.1000, 0.7766]],
        [[0.1000, 0.1000, 0.8162],
         [0.1000, 0.1000, 0.9017],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8146],
         [0.1000, 0.1000, 0.8176],
         [0.1000, 0.1000, 0.8139]],
        [[0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.9047],
         [0.1000, 0.1000, 0.9313],
         ...,
         [0.1000, 0.1000, 0.8436],
         [0.1000, 0.1000, 0.8404],
         [0.1000, 0.1000, 0.8438]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2125],
         [ 0.1000,  0.1000, 15.8724],
         [ 0.1000,  0.1000, 17.3023],
         ...,
         [ 0.1000,  0.1000, 17.6661],
         [ 0.1000,  0.1000, 15.9006],
         [ 0.1000,  0.1000, 17.9214]],
        [[ 0.1000,  0.1000,  9.2772],
         [ 0.1000,  0.1000, 15.1311],
         [ 0.1000,  0.1000, 16.9383],
         ...,
         [ 0.1000,  0.1000,  9.1484],
         [ 0.1000,  0.1000,  9.4633],
         [ 0.1000,  0.1000,  9.0842]],
        [[ 0.1000,  0.1000,  8.5939],
         [ 0.1000,  0.1000, 15.0417],
         [ 0.1000,  0.1000, 16.8937],
         ...,
         [ 0.1000,  0.1000,  8.4327],
         [ 0.1000,  0.1000,  8.8745],
         [ 0.1000,  0.1000,  8.3514]],
        ...,
        [[ 0.1000,  0.1000,  7.8153],
         [ 0.1000,  0.1000, 14.9316],
         [ 0.1000,  0.1000, 16.8386],
         ...,
         [ 0.1000,  0.1000,  7.6217],
         [ 0.1000,  0.1000,  8.1944],
         [ 0.1000,  0.1000,  7.5235]],
        [[ 0.1000,  0.1000,  9.9562],
         [ 0.1000,  0.1000, 15.2140],
         [ 0.1000,  0.1000, 16.9795],
         ...,
         [ 0.1000,  0.1000,  9.8629],
         [ 0.1000,  0.1000, 10.0415],
         [ 0.1000,  0.1000,  9.8177]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3986],
         [ 0.1000,  0.1000, 17.0708],
         ...,
         [ 0.1000,  0.1000, 11.6435],
         [ 0.1000,  0.1000, 11.4455],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9356],
         ...,
         [0.1000, 0.1000, 0.9415],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9296],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8081],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9289],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7985],
         [0.1000, 0.1000, 0.7900]],
        ...,
        [[0.1000, 0.1000, 0.7813],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9280],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9303],
         ...,
         [0.1000, 0.1000, 0.8146],
         [0.1000, 0.1000, 0.8175],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9318],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8437]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2118],
         [ 0.1000,  0.1000, 15.8727],
         [ 0.1000,  0.1000, 17.3087],
         ...,
         [ 0.1000,  0.1000, 17.6642],
         [ 0.1000,  0.1000, 15.9019],
         [ 0.1000,  0.1000, 17.9212]],
        [[ 0.1000,  0.1000,  9.2774],
         [ 0.1000,  0.1000, 15.1316],
         [ 0.1000,  0.1000, 16.9455],
         ...,
         [ 0.1000,  0.1000,  9.1489],
         [ 0.1000,  0.1000,  9.4626],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5941],
         [ 0.1000,  0.1000, 15.0423],
         [ 0.1000,  0.1000, 16.9010],
         ...,
         [ 0.1000,  0.1000,  8.4333],
         [ 0.1000,  0.1000,  8.8737],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8156],
         [ 0.1000,  0.1000, 14.9321],
         [ 0.1000,  0.1000, 16.8460],
         ...,
         [ 0.1000,  0.1000,  7.6225],
         [ 0.1000,  0.1000,  8.1935],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2145],
         [ 0.1000,  0.1000, 16.9866],
         ...,
         [ 0.1000,  0.1000,  9.8633],
         [ 0.1000,  0.1000, 10.0410],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3991],
         [ 0.1000,  0.1000, 17.0777],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4454],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9356],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9297],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7900]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3099],
         ...,
         [ 0.1000,  0.1000, 17.6639],
         [ 0.1000,  0.1000, 15.9021],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9469],
         ...,
         [ 0.1000,  0.1000,  9.1489],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9025],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8736],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9322],
         [ 0.1000,  0.1000, 16.8475],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9880],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0790],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7900]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9471],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9027],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8736],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8478],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9882],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0793],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8736],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8478],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0793],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8478],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8478],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2116],
         [ 0.1000,  0.1000, 15.8728],
         [ 0.1000,  0.1000, 17.3102],
         ...,
         [ 0.1000,  0.1000, 17.6638],
         [ 0.1000,  0.1000, 15.9022],
         [ 0.1000,  0.1000, 17.9211]],
        [[ 0.1000,  0.1000,  9.2775],
         [ 0.1000,  0.1000, 15.1317],
         [ 0.1000,  0.1000, 16.9472],
         ...,
         [ 0.1000,  0.1000,  9.1490],
         [ 0.1000,  0.1000,  9.4625],
         [ 0.1000,  0.1000,  9.0843]],
        [[ 0.1000,  0.1000,  8.5942],
         [ 0.1000,  0.1000, 15.0424],
         [ 0.1000,  0.1000, 16.9028],
         ...,
         [ 0.1000,  0.1000,  8.4334],
         [ 0.1000,  0.1000,  8.8735],
         [ 0.1000,  0.1000,  8.3515]],
        ...,
        [[ 0.1000,  0.1000,  7.8157],
         [ 0.1000,  0.1000, 14.9323],
         [ 0.1000,  0.1000, 16.8479],
         ...,
         [ 0.1000,  0.1000,  7.6226],
         [ 0.1000,  0.1000,  8.1933],
         [ 0.1000,  0.1000,  7.5236]],
        [[ 0.1000,  0.1000,  9.9564],
         [ 0.1000,  0.1000, 15.2146],
         [ 0.1000,  0.1000, 16.9883],
         ...,
         [ 0.1000,  0.1000,  9.8634],
         [ 0.1000,  0.1000, 10.0409],
         [ 0.1000,  0.1000,  9.8178]],
        [[ 0.1000,  0.1000, 11.6356],
         [ 0.1000,  0.1000, 15.3992],
         [ 0.1000,  0.1000, 17.0794],
         ...,
         [ 0.1000,  0.1000, 11.6434],
         [ 0.1000,  0.1000, 11.4453],
         [ 0.1000,  0.1000, 11.6528]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9341],
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9357],
         ...,
         [0.1000, 0.1000, 0.9414],
         [0.1000, 0.1000, 0.9128],
         [0.1000, 0.1000, 0.9456]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9002],
         [0.1000, 0.1000, 0.9298],
         ...,
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8080],
         [0.1000, 0.1000, 0.8019]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8988],
         [0.1000, 0.1000, 0.9290],
         ...,
         [0.1000, 0.1000, 0.7913],
         [0.1000, 0.1000, 0.7984],
         [0.1000, 0.1000, 0.7899]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8970],
         [0.1000, 0.1000, 0.9281],
         ...,
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7874],
         [0.1000, 0.1000, 0.7765]],
        [[0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.9016],
         [0.1000, 0.1000, 0.9304],
         ...,
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.8138]],
        [[0.1000, 0.1000, 0.8434],
         [0.1000, 0.1000, 0.9046],
         [0.1000, 0.1000, 0.9319],
         ...,
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.6228],
         [ 0.1000,  0.1000, 16.0940],
         [ 0.1000,  0.1000, 14.9662],
         ...,
         [ 0.1000,  0.1000, 17.6790],
         [ 0.1000,  0.1000, 15.9340],
         [ 0.1000,  0.1000, 17.7136]],
        [[ 0.1000,  0.1000,  9.1598],
         [ 0.1000,  0.1000, 15.4274],
         [ 0.1000,  0.1000, 13.7620],
         ...,
         [ 0.1000,  0.1000,  9.1450],
         [ 0.1000,  0.1000,  9.4409],
         [ 0.1000,  0.1000,  9.1360]],
        [[ 0.1000,  0.1000,  8.4471],
         [ 0.1000,  0.1000, 15.3469],
         [ 0.1000,  0.1000, 13.6198],
         ...,
         [ 0.1000,  0.1000,  8.4284],
         [ 0.1000,  0.1000,  8.8486],
         [ 0.1000,  0.1000,  8.4171]],
        ...,
        [[ 0.1000,  0.1000,  7.6391],
         [ 0.1000,  0.1000, 15.2474],
         [ 0.1000,  0.1000, 13.4454],
         ...,
         [ 0.1000,  0.1000,  7.6166],
         [ 0.1000,  0.1000,  8.1649],
         [ 0.1000,  0.1000,  7.6029]],
        [[ 0.1000,  0.1000,  9.8711],
         [ 0.1000,  0.1000, 15.5022],
         [ 0.1000,  0.1000, 13.8945],
         ...,
         [ 0.1000,  0.1000,  9.8605],
         [ 0.1000,  0.1000, 10.0229],
         [ 0.1000,  0.1000,  9.8542]],
        [[ 0.1000,  0.1000, 11.6422],
         [ 0.1000,  0.1000, 15.6685],
         [ 0.1000,  0.1000, 14.1916],
         ...,
         [ 0.1000,  0.1000, 11.6438],
         [ 0.1000,  0.1000, 11.4372],
         [ 0.1000,  0.1000, 11.6449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9436],
         [0.1000, 0.1000, 0.9187],
         [0.1000, 0.1000, 0.9004],
         ...,
         [0.1000, 0.1000, 0.9445],
         [0.1000, 0.1000, 0.9161],
         [0.1000, 0.1000, 0.9451]],
        [[0.1000, 0.1000, 0.8059],
         [0.1000, 0.1000, 0.9079],
         [0.1000, 0.1000, 0.8808],
         ...,
         [0.1000, 0.1000, 0.8057],
         [0.1000, 0.1000, 0.8105],
         [0.1000, 0.1000, 0.8056]],
        [[0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.9066],
         [0.1000, 0.1000, 0.8785],
         ...,
         [0.1000, 0.1000, 0.7941],
         [0.1000, 0.1000, 0.8009],
         [0.1000, 0.1000, 0.7939]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.9050],
         [0.1000, 0.1000, 0.8757],
         ...,
         [0.1000, 0.1000, 0.7808],
         [0.1000, 0.1000, 0.7898],
         [0.1000, 0.1000, 0.7806]],
        [[0.1000, 0.1000, 0.8175],
         [0.1000, 0.1000, 0.9091],
         [0.1000, 0.1000, 0.8830],
         ...,
         [0.1000, 0.1000, 0.8173],
         [0.1000, 0.1000, 0.8200],
         [0.1000, 0.1000, 0.8172]],
        [[0.1000, 0.1000, 0.8463],
         [0.1000, 0.1000, 0.9118],
         [0.1000, 0.1000, 0.8878],
         ...,
         [0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 0.8430],
         [0.1000, 0.1000, 0.8464]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3501],
         [ 0.1000,  0.1000, 15.9476],
         [ 0.1000,  0.1000, 16.3248],
         ...,
         [ 0.1000,  0.1000, 17.6690],
         [ 0.1000,  0.1000, 15.9129],
         [ 0.1000,  0.1000, 17.8490]],
        [[ 0.1000,  0.1000,  9.2359],
         [ 0.1000,  0.1000, 15.2324],
         [ 0.1000,  0.1000, 15.7297],
         ...,
         [ 0.1000,  0.1000,  9.1476],
         [ 0.1000,  0.1000,  9.4550],
         [ 0.1000,  0.1000,  9.1019]],
        [[ 0.1000,  0.1000,  8.5425],
         [ 0.1000,  0.1000, 15.1461],
         [ 0.1000,  0.1000, 15.6576],
         ...,
         [ 0.1000,  0.1000,  8.4317],
         [ 0.1000,  0.1000,  8.8649],
         [ 0.1000,  0.1000,  8.3738]],
        ...,
        [[ 0.1000,  0.1000,  7.7538],
         [ 0.1000,  0.1000, 15.0398],
         [ 0.1000,  0.1000, 15.5685],
         ...,
         [ 0.1000,  0.1000,  7.6206],
         [ 0.1000,  0.1000,  8.1835],
         [ 0.1000,  0.1000,  7.5507]],
        [[ 0.1000,  0.1000,  9.9260],
         [ 0.1000,  0.1000, 15.3125],
         [ 0.1000,  0.1000, 15.7966],
         ...,
         [ 0.1000,  0.1000,  9.8624],
         [ 0.1000,  0.1000, 10.0346],
         [ 0.1000,  0.1000,  9.8301]],
        [[ 0.1000,  0.1000, 11.6367],
         [ 0.1000,  0.1000, 15.4907],
         [ 0.1000,  0.1000, 15.9452],
         ...,
         [ 0.1000,  0.1000, 11.6435],
         [ 0.1000,  0.1000, 11.4424],
         [ 0.1000,  0.1000, 11.6498]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9373],
         [0.1000, 0.1000, 0.9145],
         [0.1000, 0.1000, 0.9206],
         ...,
         [0.1000, 0.1000, 0.9425],
         [0.1000, 0.1000, 0.9139],
         [0.1000, 0.1000, 0.9454]],
        [[0.1000, 0.1000, 0.8053],
         [0.1000, 0.1000, 0.9028],
         [0.1000, 0.1000, 0.9109],
         ...,
         [0.1000, 0.1000, 0.8039],
         [0.1000, 0.1000, 0.8089],
         [0.1000, 0.1000, 0.8031]],
        [[0.1000, 0.1000, 0.7940],
         [0.1000, 0.1000, 0.9014],
         [0.1000, 0.1000, 0.9097],
         ...,
         [0.1000, 0.1000, 0.7922],
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7913]],
        ...,
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.8997],
         [0.1000, 0.1000, 0.9083],
         ...,
         [0.1000, 0.1000, 0.7790],
         [0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7779]],
        [[0.1000, 0.1000, 0.8165],
         [0.1000, 0.1000, 0.9041],
         [0.1000, 0.1000, 0.9120],
         ...,
         [0.1000, 0.1000, 0.8155],
         [0.1000, 0.1000, 0.8183],
         [0.1000, 0.1000, 0.8150]],
        [[0.1000, 0.1000, 0.8443],
         [0.1000, 0.1000, 0.9070],
         [0.1000, 0.1000, 0.9144],
         ...,
         [0.1000, 0.1000, 0.8445],
         [0.1000, 0.1000, 0.8412],
         [0.1000, 0.1000, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.5269],
         [ 0.1000,  0.1000, 16.0050],
         [ 0.1000,  0.1000, 15.8921],
         ...,
         [ 0.1000,  0.1000, 17.6755],
         [ 0.1000,  0.1000, 15.9396],
         [ 0.1000,  0.1000, 17.7589]],
        [[ 0.1000,  0.1000,  9.1857],
         [ 0.1000,  0.1000, 15.3091],
         [ 0.1000,  0.1000, 15.1578],
         ...,
         [ 0.1000,  0.1000,  9.1459],
         [ 0.1000,  0.1000,  9.4395],
         [ 0.1000,  0.1000,  9.1244]],
        [[ 0.1000,  0.1000,  8.4797],
         [ 0.1000,  0.1000, 15.2251],
         [ 0.1000,  0.1000, 15.0693],
         ...,
         [ 0.1000,  0.1000,  8.4296],
         [ 0.1000,  0.1000,  8.8468],
         [ 0.1000,  0.1000,  8.4024]],
        ...,
        [[ 0.1000,  0.1000,  7.6783],
         [ 0.1000,  0.1000, 15.1215],
         [ 0.1000,  0.1000, 14.9602],
         ...,
         [ 0.1000,  0.1000,  7.6180],
         [ 0.1000,  0.1000,  8.1625],
         [ 0.1000,  0.1000,  7.5852]],
        [[ 0.1000,  0.1000,  9.8897],
         [ 0.1000,  0.1000, 15.3871],
         [ 0.1000,  0.1000, 15.2400],
         ...,
         [ 0.1000,  0.1000,  9.8612],
         [ 0.1000,  0.1000, 10.0220],
         [ 0.1000,  0.1000,  9.8459]],
        [[ 0.1000,  0.1000, 11.6398],
         [ 0.1000,  0.1000, 15.5606],
         [ 0.1000,  0.1000, 15.4229],
         ...,
         [ 0.1000,  0.1000, 11.6437],
         [ 0.1000,  0.1000, 11.4376],
         [ 0.1000,  0.1000, 11.6465]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9410],
         [0.1000, 0.1000, 0.9163],
         [0.1000, 0.1000, 0.9145],
         ...,
         [0.1000, 0.1000, 0.9435],
         [0.1000, 0.1000, 0.9152],
         [0.1000, 0.1000, 0.9448]],
        [[0.1000, 0.1000, 0.8054],
         [0.1000, 0.1000, 0.9050],
         [0.1000, 0.1000, 0.9025],
         ...,
         [0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.8095],
         [0.1000, 0.1000, 0.8044]],
        [[0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.9036],
         [0.1000, 0.1000, 0.9011],
         ...,
         [0.1000, 0.1000, 0.7931],
         [0.1000, 0.1000, 0.7999],
         [0.1000, 0.1000, 0.7926]],
        ...,
        [[0.1000, 0.1000, 0.7809],
         [0.1000, 0.1000, 0.9019],
         [0.1000, 0.1000, 0.8993],
         ...,
         [0.1000, 0.1000, 0.7799],
         [0.1000, 0.1000, 0.7887],
         [0.1000, 0.1000, 0.7793]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9062],
         [0.1000, 0.1000, 0.9038],
         ...,
         [0.1000, 0.1000, 0.8164],
         [0.1000, 0.1000, 0.8190],
         [0.1000, 0.1000, 0.8161]],
        [[0.1000, 0.1000, 0.8453],
         [0.1000, 0.1000, 0.9091],
         [0.1000, 0.1000, 0.9068],
         ...,
         [0.1000, 0.1000, 0.8454],
         [0.1000, 0.1000, 0.8420],
         [0.1000, 0.1000, 0.8454]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.8299],
         [ 0.1000,  0.1000, 16.0690],
         [ 0.1000,  0.1000, 15.4801],
         ...,
         [ 0.1000,  0.1000, 17.6861],
         [ 0.1000,  0.1000, 16.0099],
         [ 0.1000,  0.1000, 17.6118]],
        [[ 0.1000,  0.1000,  9.1066],
         [ 0.1000,  0.1000, 15.3943],
         [ 0.1000,  0.1000, 14.5829],
         ...,
         [ 0.1000,  0.1000,  9.1431],
         [ 0.1000,  0.1000,  9.4032],
         [ 0.1000,  0.1000,  9.1627]],
        [[ 0.1000,  0.1000,  8.3798],
         [ 0.1000,  0.1000, 15.3128],
         [ 0.1000,  0.1000, 14.4755],
         ...,
         [ 0.1000,  0.1000,  8.4261],
         [ 0.1000,  0.1000,  8.8037],
         [ 0.1000,  0.1000,  8.4508]],
        ...,
        [[ 0.1000,  0.1000,  7.5579],
         [ 0.1000,  0.1000, 15.2122],
         [ 0.1000,  0.1000, 14.3434],
         ...,
         [ 0.1000,  0.1000,  7.6138],
         [ 0.1000,  0.1000,  8.1125],
         [ 0.1000,  0.1000,  7.6435]],
        [[ 0.1000,  0.1000,  9.8334],
         [ 0.1000,  0.1000, 15.4700],
         [ 0.1000,  0.1000, 14.6828],
         ...,
         [ 0.1000,  0.1000,  9.8592],
         [ 0.1000,  0.1000,  9.9928],
         [ 0.1000,  0.1000,  9.8732]],
        [[ 0.1000,  0.1000, 11.6491],
         [ 0.1000,  0.1000, 15.6382],
         [ 0.1000,  0.1000, 14.9055],
         ...,
         [ 0.1000,  0.1000, 11.6441],
         [ 0.1000,  0.1000, 11.4281],
         [ 0.1000,  0.1000, 11.6419]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9469],
         [0.1000, 0.1000, 0.9182],
         [0.1000, 0.1000, 0.9087],
         ...,
         [0.1000, 0.1000, 0.9445],
         [0.1000, 0.1000, 0.9173],
         [0.1000, 0.1000, 0.9433]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8941],
         ...,
         [0.1000, 0.1000, 0.8056],
         [0.1000, 0.1000, 0.8098],
         [0.1000, 0.1000, 0.8059]],
        [[0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.9059],
         [0.1000, 0.1000, 0.8923],
         ...,
         [0.1000, 0.1000, 0.7939],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7943]],
        ...,
        [[0.1000, 0.1000, 0.7798],
         [0.1000, 0.1000, 0.9043],
         [0.1000, 0.1000, 0.8902],
         ...,
         [0.1000, 0.1000, 0.7807],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7812]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9085],
         [0.1000, 0.1000, 0.8957],
         ...,
         [0.1000, 0.1000, 0.8172],
         [0.1000, 0.1000, 0.8194],
         [0.1000, 0.1000, 0.8175]],
        [[0.1000, 0.1000, 0.8464],
         [0.1000, 0.1000, 0.9112],
         [0.1000, 0.1000, 0.8993],
         ...,
         [0.1000, 0.1000, 0.8463],
         [0.1000, 0.1000, 0.8428],
         [0.1000, 0.1000, 0.8462]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.9007],
         [ 0.1000,  0.1000, 16.0472],
         [ 0.1000,  0.1000, 15.4770],
         ...,
         [ 0.1000,  0.1000, 17.6884],
         [ 0.1000,  0.1000, 16.0730],
         [ 0.1000,  0.1000, 17.5792]],
        [[ 0.1000,  0.1000,  9.0892],
         [ 0.1000,  0.1000, 15.3653],
         [ 0.1000,  0.1000, 14.5785],
         ...,
         [ 0.1000,  0.1000,  9.1425],
         [ 0.1000,  0.1000,  9.3746],
         [ 0.1000,  0.1000,  9.1715]],
        [[ 0.1000,  0.1000,  8.3578],
         [ 0.1000,  0.1000, 15.2830],
         [ 0.1000,  0.1000, 14.4710],
         ...,
         [ 0.1000,  0.1000,  8.4253],
         [ 0.1000,  0.1000,  8.7694],
         [ 0.1000,  0.1000,  8.4618]],
        ...,
        [[ 0.1000,  0.1000,  7.5312],
         [ 0.1000,  0.1000, 15.1813],
         [ 0.1000,  0.1000, 14.3386],
         ...,
         [ 0.1000,  0.1000,  7.6129],
         [ 0.1000,  0.1000,  8.0722],
         [ 0.1000,  0.1000,  7.6568]],
        [[ 0.1000,  0.1000,  9.8212],
         [ 0.1000,  0.1000, 15.4418],
         [ 0.1000,  0.1000, 14.6785],
         ...,
         [ 0.1000,  0.1000,  9.8588],
         [ 0.1000,  0.1000,  9.9704],
         [ 0.1000,  0.1000,  9.8795]],
        [[ 0.1000,  0.1000, 11.6519],
         [ 0.1000,  0.1000, 15.6118],
         [ 0.1000,  0.1000, 14.9016],
         ...,
         [ 0.1000,  0.1000, 11.6441],
         [ 0.1000,  0.1000, 11.4225],
         [ 0.1000,  0.1000, 11.6410]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9494],
         [0.1000, 0.1000, 0.9193],
         [0.1000, 0.1000, 0.9100],
         ...,
         [0.1000, 0.1000, 0.9460],
         [0.1000, 0.1000, 0.9197],
         [0.1000, 0.1000, 0.9442]],
        [[0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.9082],
         [0.1000, 0.1000, 0.8954],
         ...,
         [0.1000, 0.1000, 0.8070],
         [0.1000, 0.1000, 0.8107],
         [0.1000, 0.1000, 0.8074]],
        [[0.1000, 0.1000, 0.7942],
         [0.1000, 0.1000, 0.9068],
         [0.1000, 0.1000, 0.8936],
         ...,
         [0.1000, 0.1000, 0.7953],
         [0.1000, 0.1000, 0.8009],
         [0.1000, 0.1000, 0.7959]],
        ...,
        [[0.1000, 0.1000, 0.7808],
         [0.1000, 0.1000, 0.9052],
         [0.1000, 0.1000, 0.8915],
         ...,
         [0.1000, 0.1000, 0.7821],
         [0.1000, 0.1000, 0.7896],
         [0.1000, 0.1000, 0.7828]],
        [[0.1000, 0.1000, 0.8180],
         [0.1000, 0.1000, 0.9094],
         [0.1000, 0.1000, 0.8970],
         ...,
         [0.1000, 0.1000, 0.8186],
         [0.1000, 0.1000, 0.8204],
         [0.1000, 0.1000, 0.8190]],
        [[0.1000, 0.1000, 0.8478],
         [0.1000, 0.1000, 0.9122],
         [0.1000, 0.1000, 0.9006],
         ...,
         [0.1000, 0.1000, 0.8477],
         [0.1000, 0.1000, 0.8441],
         [0.1000, 0.1000, 0.8476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0015],
         [ 0.1000,  0.1000, 16.0982],
         [ 0.1000,  0.1000, 15.2932],
         ...,
         [ 0.1000,  0.1000, 17.6919],
         [ 0.1000,  0.1000, 16.0586],
         [ 0.1000,  0.1000, 17.5328]],
        [[ 0.1000,  0.1000,  9.0652],
         [ 0.1000,  0.1000, 15.4329],
         [ 0.1000,  0.1000, 14.3038],
         ...,
         [ 0.1000,  0.1000,  9.1416],
         [ 0.1000,  0.1000,  9.3800],
         [ 0.1000,  0.1000,  9.1841]],
        [[ 0.1000,  0.1000,  8.3271],
         [ 0.1000,  0.1000, 15.3525],
         [ 0.1000,  0.1000, 14.1859],
         ...,
         [ 0.1000,  0.1000,  8.4242],
         [ 0.1000,  0.1000,  8.7761],
         [ 0.1000,  0.1000,  8.4777]],
        ...,
        [[ 0.1000,  0.1000,  7.4941],
         [ 0.1000,  0.1000, 15.2532],
         [ 0.1000,  0.1000, 14.0409],
         ...,
         [ 0.1000,  0.1000,  7.6115],
         [ 0.1000,  0.1000,  8.0802],
         [ 0.1000,  0.1000,  7.6759]],
        [[ 0.1000,  0.1000,  9.8045],
         [ 0.1000,  0.1000, 15.5075],
         [ 0.1000,  0.1000, 14.4136],
         ...,
         [ 0.1000,  0.1000,  9.8582],
         [ 0.1000,  0.1000,  9.9745],
         [ 0.1000,  0.1000,  9.8885]],
        [[ 0.1000,  0.1000, 11.6563],
         [ 0.1000,  0.1000, 15.6735],
         [ 0.1000,  0.1000, 14.6588],
         ...,
         [ 0.1000,  0.1000, 11.6442],
         [ 0.1000,  0.1000, 11.4229],
         [ 0.1000,  0.1000, 11.6399]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9503],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9063],
         ...,
         [0.1000, 0.1000, 0.9453],
         [0.1000, 0.1000, 0.9187],
         [0.1000, 0.1000, 0.9427]],
        [[0.1000, 0.1000, 0.8050],
         [0.1000, 0.1000, 0.9085],
         [0.1000, 0.1000, 0.8902],
         ...,
         [0.1000, 0.1000, 0.8062],
         [0.1000, 0.1000, 0.8101],
         [0.1000, 0.1000, 0.8069]],
        [[0.1000, 0.1000, 0.7930],
         [0.1000, 0.1000, 0.9072],
         [0.1000, 0.1000, 0.8883],
         ...,
         [0.1000, 0.1000, 0.7945],
         [0.1000, 0.1000, 0.8003],
         [0.1000, 0.1000, 0.7954]],
        ...,
        [[0.1000, 0.1000, 0.7794],
         [0.1000, 0.1000, 0.9056],
         [0.1000, 0.1000, 0.8859],
         ...,
         [0.1000, 0.1000, 0.7813],
         [0.1000, 0.1000, 0.7889],
         [0.1000, 0.1000, 0.7824]],
        [[0.1000, 0.1000, 0.8170],
         [0.1000, 0.1000, 0.9097],
         [0.1000, 0.1000, 0.8920],
         ...,
         [0.1000, 0.1000, 0.8179],
         [0.1000, 0.1000, 0.8198],
         [0.1000, 0.1000, 0.8184]],
        [[0.1000, 0.1000, 0.8471],
         [0.1000, 0.1000, 0.9124],
         [0.1000, 0.1000, 0.8959],
         ...,
         [0.1000, 0.1000, 0.8469],
         [0.1000, 0.1000, 0.8433],
         [0.1000, 0.1000, 0.8468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0188],
         [ 0.1000,  0.1000, 16.1069],
         [ 0.1000,  0.1000, 15.2636],
         ...,
         [ 0.1000,  0.1000, 17.6925],
         [ 0.1000,  0.1000, 16.0561],
         [ 0.1000,  0.1000, 17.5249]],
        [[ 0.1000,  0.1000,  9.0611],
         [ 0.1000,  0.1000, 15.4444],
         [ 0.1000,  0.1000, 14.2581],
         ...,
         [ 0.1000,  0.1000,  9.1415],
         [ 0.1000,  0.1000,  9.3810],
         [ 0.1000,  0.1000,  9.1863]],
        [[ 0.1000,  0.1000,  8.3220],
         [ 0.1000,  0.1000, 15.3643],
         [ 0.1000,  0.1000, 14.1383],
         ...,
         [ 0.1000,  0.1000,  8.4240],
         [ 0.1000,  0.1000,  8.7772],
         [ 0.1000,  0.1000,  8.4804]],
        ...,
        [[ 0.1000,  0.1000,  7.4878],
         [ 0.1000,  0.1000, 15.2655],
         [ 0.1000,  0.1000, 13.9910],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0816],
         [ 0.1000,  0.1000,  7.6792]],
        [[ 0.1000,  0.1000,  9.8017],
         [ 0.1000,  0.1000, 15.5187],
         [ 0.1000,  0.1000, 14.3696],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9752],
         [ 0.1000,  0.1000,  9.8901]],
        [[ 0.1000,  0.1000, 11.6571],
         [ 0.1000,  0.1000, 15.6840],
         [ 0.1000,  0.1000, 14.6187],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9057],
         ...,
         [0.1000, 0.1000, 0.9452],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8048],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8893],
         ...,
         [0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.8100],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8874],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8002],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7792],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8850],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8911],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8183]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8952],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0219],
         [ 0.1000,  0.1000, 16.1085],
         [ 0.1000,  0.1000, 15.2583],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0557],
         [ 0.1000,  0.1000, 17.5235]],
        [[ 0.1000,  0.1000,  9.0604],
         [ 0.1000,  0.1000, 15.4465],
         [ 0.1000,  0.1000, 14.2498],
         ...,
         [ 0.1000,  0.1000,  9.1415],
         [ 0.1000,  0.1000,  9.3811],
         [ 0.1000,  0.1000,  9.1867]],
        [[ 0.1000,  0.1000,  8.3211],
         [ 0.1000,  0.1000, 15.3665],
         [ 0.1000,  0.1000, 14.1297],
         ...,
         [ 0.1000,  0.1000,  8.4240],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4809]],
        ...,
        [[ 0.1000,  0.1000,  7.4867],
         [ 0.1000,  0.1000, 15.2677],
         [ 0.1000,  0.1000, 13.9820],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0818],
         [ 0.1000,  0.1000,  7.6798]],
        [[ 0.1000,  0.1000,  9.8012],
         [ 0.1000,  0.1000, 15.5208],
         [ 0.1000,  0.1000, 14.3616],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8903]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6859],
         [ 0.1000,  0.1000, 14.6115],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.8100],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8848],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8910],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0225],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2574],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0603],
         [ 0.1000,  0.1000, 15.4469],
         [ 0.1000,  0.1000, 14.2483],
         ...,
         [ 0.1000,  0.1000,  9.1415],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1867]],
        [[ 0.1000,  0.1000,  8.3209],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1281],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2681],
         [ 0.1000,  0.1000, 13.9804],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5211],
         [ 0.1000,  0.1000, 14.3602],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6862],
         [ 0.1000,  0.1000, 14.6101],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8848],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0603],
         [ 0.1000,  0.1000, 15.4469],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1279],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9801],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6099],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.7282],
         [ 0.1000,  0.1000, 15.9028],
         [ 0.1000,  0.1000, 16.2459],
         ...,
         [ 0.1000,  0.1000, 17.6821],
         [ 0.1000,  0.1000, 16.1536],
         [ 0.1000,  0.1000, 17.6599]],
        [[ 0.1000,  0.1000,  9.1322],
         [ 0.1000,  0.1000, 15.1721],
         [ 0.1000,  0.1000, 15.6270],
         ...,
         [ 0.1000,  0.1000,  9.1442],
         [ 0.1000,  0.1000,  9.3422],
         [ 0.1000,  0.1000,  9.1500]],
        [[ 0.1000,  0.1000,  8.4123],
         [ 0.1000,  0.1000, 15.0841],
         [ 0.1000,  0.1000, 15.5520],
         ...,
         [ 0.1000,  0.1000,  8.4274],
         [ 0.1000,  0.1000,  8.7300],
         [ 0.1000,  0.1000,  8.4347]],
        ...,
        [[ 0.1000,  0.1000,  7.5972],
         [ 0.1000,  0.1000, 14.9755],
         [ 0.1000,  0.1000, 15.4595],
         ...,
         [ 0.1000,  0.1000,  7.6154],
         [ 0.1000,  0.1000,  8.0255],
         [ 0.1000,  0.1000,  7.6242]],
        [[ 0.1000,  0.1000,  9.8515],
         [ 0.1000,  0.1000, 15.2539],
         [ 0.1000,  0.1000, 15.6965],
         ...,
         [ 0.1000,  0.1000,  9.8600],
         [ 0.1000,  0.1000,  9.9456],
         [ 0.1000,  0.1000,  9.8641]],
        [[ 0.1000,  0.1000, 11.6454],
         [ 0.1000,  0.1000, 15.4359],
         [ 0.1000,  0.1000, 15.8510],
         ...,
         [ 0.1000,  0.1000, 11.6439],
         [ 0.1000,  0.1000, 11.4184],
         [ 0.1000,  0.1000, 11.6433]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9498],
         [0.1000, 0.1000, 0.9201],
         [0.1000, 0.1000, 0.9256],
         ...,
         [0.1000, 0.1000, 0.9490],
         [0.1000, 0.1000, 0.9241],
         [0.1000, 0.1000, 0.9486]],
        [[0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.9082],
         [0.1000, 0.1000, 0.9156],
         ...,
         [0.1000, 0.1000, 0.8101],
         [0.1000, 0.1000, 0.8134],
         [0.1000, 0.1000, 0.8102]],
        [[0.1000, 0.1000, 0.7982],
         [0.1000, 0.1000, 0.9068],
         [0.1000, 0.1000, 0.9144],
         ...,
         [0.1000, 0.1000, 0.7985],
         [0.1000, 0.1000, 0.8034],
         [0.1000, 0.1000, 0.7986]],
        ...,
        [[0.1000, 0.1000, 0.7850],
         [0.1000, 0.1000, 0.9050],
         [0.1000, 0.1000, 0.9129],
         ...,
         [0.1000, 0.1000, 0.7853],
         [0.1000, 0.1000, 0.7919],
         [0.1000, 0.1000, 0.7854]],
        [[0.1000, 0.1000, 0.8216],
         [0.1000, 0.1000, 0.9095],
         [0.1000, 0.1000, 0.9167],
         ...,
         [0.1000, 0.1000, 0.8218],
         [0.1000, 0.1000, 0.8232],
         [0.1000, 0.1000, 0.8219]],
        [[0.1000, 0.1000, 0.8508],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.9192],
         ...,
         [0.1000, 0.1000, 0.8508],
         [0.1000, 0.1000, 0.8471],
         [0.1000, 0.1000, 0.8508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.9852],
         [ 0.1000,  0.1000, 16.0825],
         [ 0.1000,  0.1000, 15.3623],
         ...,
         [ 0.1000,  0.1000, 17.6913],
         [ 0.1000,  0.1000, 16.0676],
         [ 0.1000,  0.1000, 17.5401]],
        [[ 0.1000,  0.1000,  9.0690],
         [ 0.1000,  0.1000, 15.4122],
         [ 0.1000,  0.1000, 14.4089],
         ...,
         [ 0.1000,  0.1000,  9.1418],
         [ 0.1000,  0.1000,  9.3763],
         [ 0.1000,  0.1000,  9.1821]],
        [[ 0.1000,  0.1000,  8.3320],
         [ 0.1000,  0.1000, 15.3312],
         [ 0.1000,  0.1000, 14.2951],
         ...,
         [ 0.1000,  0.1000,  8.4244],
         [ 0.1000,  0.1000,  8.7715],
         [ 0.1000,  0.1000,  8.4751]],
        ...,
        [[ 0.1000,  0.1000,  7.5000],
         [ 0.1000,  0.1000, 15.2312],
         [ 0.1000,  0.1000, 14.1551],
         ...,
         [ 0.1000,  0.1000,  7.6117],
         [ 0.1000,  0.1000,  8.0748],
         [ 0.1000,  0.1000,  7.6729]],
        [[ 0.1000,  0.1000,  9.8072],
         [ 0.1000,  0.1000, 15.4874],
         [ 0.1000,  0.1000, 14.5148],
         ...,
         [ 0.1000,  0.1000,  9.8583],
         [ 0.1000,  0.1000,  9.9716],
         [ 0.1000,  0.1000,  9.8871]],
        [[ 0.1000,  0.1000, 11.6556],
         [ 0.1000,  0.1000, 15.6545],
         [ 0.1000,  0.1000, 14.7513],
         ...,
         [ 0.1000,  0.1000, 11.6442],
         [ 0.1000,  0.1000, 11.4224],
         [ 0.1000,  0.1000, 11.6401]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9504],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9077],
         ...,
         [0.1000, 0.1000, 0.9456],
         [0.1000, 0.1000, 0.9192],
         [0.1000, 0.1000, 0.9431]],
        [[0.1000, 0.1000, 0.8054],
         [0.1000, 0.1000, 0.9085],
         [0.1000, 0.1000, 0.8922],
         ...,
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8104],
         [0.1000, 0.1000, 0.8072]],
        [[0.1000, 0.1000, 0.7934],
         [0.1000, 0.1000, 0.9072],
         [0.1000, 0.1000, 0.8904],
         ...,
         [0.1000, 0.1000, 0.7949],
         [0.1000, 0.1000, 0.8005],
         [0.1000, 0.1000, 0.7957]],
        ...,
        [[0.1000, 0.1000, 0.7798],
         [0.1000, 0.1000, 0.9056],
         [0.1000, 0.1000, 0.8881],
         ...,
         [0.1000, 0.1000, 0.7817],
         [0.1000, 0.1000, 0.7892],
         [0.1000, 0.1000, 0.7827]],
        [[0.1000, 0.1000, 0.8174],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8939],
         ...,
         [0.1000, 0.1000, 0.8182],
         [0.1000, 0.1000, 0.8200],
         [0.1000, 0.1000, 0.8187]],
        [[0.1000, 0.1000, 0.8474],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8978],
         ...,
         [0.1000, 0.1000, 0.8472],
         [0.1000, 0.1000, 0.8436],
         [0.1000, 0.1000, 0.8472]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0170],
         [ 0.1000,  0.1000, 16.1049],
         [ 0.1000,  0.1000, 15.2724],
         ...,
         [ 0.1000,  0.1000, 17.6924],
         [ 0.1000,  0.1000, 16.0574],
         [ 0.1000,  0.1000, 17.5257]],
        [[ 0.1000,  0.1000,  9.0615],
         [ 0.1000,  0.1000, 15.4418],
         [ 0.1000,  0.1000, 14.2716],
         ...,
         [ 0.1000,  0.1000,  9.1415],
         [ 0.1000,  0.1000,  9.3804],
         [ 0.1000,  0.1000,  9.1861]],
        [[ 0.1000,  0.1000,  8.3225],
         [ 0.1000,  0.1000, 15.3616],
         [ 0.1000,  0.1000, 14.1524],
         ...,
         [ 0.1000,  0.1000,  8.4240],
         [ 0.1000,  0.1000,  8.7766],
         [ 0.1000,  0.1000,  8.4801]],
        ...,
        [[ 0.1000,  0.1000,  7.4885],
         [ 0.1000,  0.1000, 15.2627],
         [ 0.1000,  0.1000, 14.0058],
         ...,
         [ 0.1000,  0.1000,  7.6113],
         [ 0.1000,  0.1000,  8.0808],
         [ 0.1000,  0.1000,  7.6789]],
        [[ 0.1000,  0.1000,  9.8020],
         [ 0.1000,  0.1000, 15.5162],
         [ 0.1000,  0.1000, 14.3826],
         ...,
         [ 0.1000,  0.1000,  9.8581],
         [ 0.1000,  0.1000,  9.9748],
         [ 0.1000,  0.1000,  9.8899]],
        [[ 0.1000,  0.1000, 11.6571],
         [ 0.1000,  0.1000, 15.6816],
         [ 0.1000,  0.1000, 14.6305],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4229],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9058],
         ...,
         [0.1000, 0.1000, 0.9452],
         [0.1000, 0.1000, 0.9186],
         [0.1000, 0.1000, 0.9425]],
        [[0.1000, 0.1000, 0.8048],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8896],
         ...,
         [0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.8100],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7928],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8876],
         ...,
         [0.1000, 0.1000, 0.7945],
         [0.1000, 0.1000, 0.8002],
         [0.1000, 0.1000, 0.7954]],
        ...,
        [[0.1000, 0.1000, 0.7792],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8852],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7889],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8169],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8914],
         ...,
         [0.1000, 0.1000, 0.8178],
         [0.1000, 0.1000, 0.8197],
         [0.1000, 0.1000, 0.8183]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8954],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0218],
         [ 0.1000,  0.1000, 16.1082],
         [ 0.1000,  0.1000, 15.2594],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0558],
         [ 0.1000,  0.1000, 17.5236]],
        [[ 0.1000,  0.1000,  9.0604],
         [ 0.1000,  0.1000, 15.4462],
         [ 0.1000,  0.1000, 14.2516],
         ...,
         [ 0.1000,  0.1000,  9.1415],
         [ 0.1000,  0.1000,  9.3810],
         [ 0.1000,  0.1000,  9.1867]],
        [[ 0.1000,  0.1000,  8.3211],
         [ 0.1000,  0.1000, 15.3661],
         [ 0.1000,  0.1000, 14.1315],
         ...,
         [ 0.1000,  0.1000,  8.4240],
         [ 0.1000,  0.1000,  8.7773],
         [ 0.1000,  0.1000,  8.4808]],
        ...,
        [[ 0.1000,  0.1000,  7.4868],
         [ 0.1000,  0.1000, 15.2674],
         [ 0.1000,  0.1000, 13.9839],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0817],
         [ 0.1000,  0.1000,  7.6797]],
        [[ 0.1000,  0.1000,  9.8012],
         [ 0.1000,  0.1000, 15.5204],
         [ 0.1000,  0.1000, 14.3633],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8903]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6856],
         [ 0.1000,  0.1000, 14.6130],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9056],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8892],
         ...,
         [0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.8100],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8848],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8910],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8951],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0225],
         [ 0.1000,  0.1000, 16.1087],
         [ 0.1000,  0.1000, 15.2575],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0603],
         [ 0.1000,  0.1000, 15.4468],
         [ 0.1000,  0.1000, 14.2485],
         ...,
         [ 0.1000,  0.1000,  9.1415],
         [ 0.1000,  0.1000,  9.3811],
         [ 0.1000,  0.1000,  9.1867]],
        [[ 0.1000,  0.1000,  8.3209],
         [ 0.1000,  0.1000, 15.3668],
         [ 0.1000,  0.1000, 14.1284],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2681],
         [ 0.1000,  0.1000, 13.9806],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0818],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5211],
         [ 0.1000,  0.1000, 14.3604],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6862],
         [ 0.1000,  0.1000, 14.6103],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8061],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8848],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0603],
         [ 0.1000,  0.1000, 15.4469],
         [ 0.1000,  0.1000, 14.2481],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1279],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9801],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6099],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0226],
         [ 0.1000,  0.1000, 16.1088],
         [ 0.1000,  0.1000, 15.2572],
         ...,
         [ 0.1000,  0.1000, 17.6926],
         [ 0.1000,  0.1000, 16.0556],
         [ 0.1000,  0.1000, 17.5232]],
        [[ 0.1000,  0.1000,  9.0602],
         [ 0.1000,  0.1000, 15.4470],
         [ 0.1000,  0.1000, 14.2480],
         ...,
         [ 0.1000,  0.1000,  9.1414],
         [ 0.1000,  0.1000,  9.3812],
         [ 0.1000,  0.1000,  9.1868]],
        [[ 0.1000,  0.1000,  8.3208],
         [ 0.1000,  0.1000, 15.3669],
         [ 0.1000,  0.1000, 14.1278],
         ...,
         [ 0.1000,  0.1000,  8.4239],
         [ 0.1000,  0.1000,  8.7774],
         [ 0.1000,  0.1000,  8.4810]],
        ...,
        [[ 0.1000,  0.1000,  7.4865],
         [ 0.1000,  0.1000, 15.2682],
         [ 0.1000,  0.1000, 13.9800],
         ...,
         [ 0.1000,  0.1000,  7.6112],
         [ 0.1000,  0.1000,  8.0819],
         [ 0.1000,  0.1000,  7.6799]],
        [[ 0.1000,  0.1000,  9.8011],
         [ 0.1000,  0.1000, 15.5212],
         [ 0.1000,  0.1000, 14.3599],
         ...,
         [ 0.1000,  0.1000,  9.8580],
         [ 0.1000,  0.1000,  9.9753],
         [ 0.1000,  0.1000,  9.8904]],
        [[ 0.1000,  0.1000, 11.6573],
         [ 0.1000,  0.1000, 15.6863],
         [ 0.1000,  0.1000, 14.6098],
         ...,
         [ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.4230],
         [ 0.1000,  0.1000, 11.6397]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9505],
         [0.1000, 0.1000, 0.9194],
         [0.1000, 0.1000, 0.9055],
         ...,
         [0.1000, 0.1000, 0.9451],
         [0.1000, 0.1000, 0.9185],
         [0.1000, 0.1000, 0.9424]],
        [[0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.8891],
         ...,
         [0.1000, 0.1000, 0.8060],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8068]],
        [[0.1000, 0.1000, 0.7927],
         [0.1000, 0.1000, 0.9073],
         [0.1000, 0.1000, 0.8872],
         ...,
         [0.1000, 0.1000, 0.7944],
         [0.1000, 0.1000, 0.8001],
         [0.1000, 0.1000, 0.7953]],
        ...,
        [[0.1000, 0.1000, 0.7791],
         [0.1000, 0.1000, 0.9057],
         [0.1000, 0.1000, 0.8847],
         ...,
         [0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7888],
         [0.1000, 0.1000, 0.7823]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.9098],
         [0.1000, 0.1000, 0.8909],
         ...,
         [0.1000, 0.1000, 0.8177],
         [0.1000, 0.1000, 0.8196],
         [0.1000, 0.1000, 0.8182]],
        [[0.1000, 0.1000, 0.8470],
         [0.1000, 0.1000, 0.9125],
         [0.1000, 0.1000, 0.8950],
         ...,
         [0.1000, 0.1000, 0.8468],
         [0.1000, 0.1000, 0.8432],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 14.5433],
         [ 0.1000,  0.1000, 17.0211],
         [ 0.1000,  0.1000, 14.7573],
         ...,
         [ 0.1000,  0.1000, 14.9374],
         [ 0.1000,  0.1000, 15.0102],
         [ 0.1000,  0.1000, 18.7053]],
        [[ 0.1000,  0.1000, 11.9453],
         [ 0.1000,  0.1000, 11.6412],
         [ 0.1000,  0.1000, 10.4541],
         ...,
         [ 0.1000,  0.1000, 10.1897],
         [ 0.1000,  0.1000, 10.2808],
         [ 0.1000,  0.1000,  8.8316]],
        [[ 0.1000,  0.1000, 11.6578],
         [ 0.1000,  0.1000, 11.1064],
         [ 0.1000,  0.1000, 10.0173],
         ...,
         [ 0.1000,  0.1000,  9.7185],
         [ 0.1000,  0.1000,  9.8103],
         [ 0.1000,  0.1000,  8.0481]],
        ...,
        [[ 0.1000,  0.1000, 11.3106],
         [ 0.1000,  0.1000, 10.4767],
         [ 0.1000,  0.1000,  9.5005],
         ...,
         [ 0.1000,  0.1000,  9.1638],
         [ 0.1000,  0.1000,  9.2561],
         [ 0.1000,  0.1000,  7.1716]],
        [[ 0.1000,  0.1000, 12.2170],
         [ 0.1000,  0.1000, 12.1578],
         [ 0.1000,  0.1000, 10.8742],
         ...,
         [ 0.1000,  0.1000, 10.6450],
         [ 0.1000,  0.1000, 10.7352],
         [ 0.1000,  0.1000,  9.6225]],
        [[ 0.1000,  0.1000, 12.8386],
         [ 0.1000,  0.1000, 13.3802],
         [ 0.1000,  0.1000, 11.8619],
         ...,
         [ 0.1000,  0.1000, 11.7230],
         [ 0.1000,  0.1000, 11.8103],
         [ 0.1000,  0.1000, 11.6275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.8897],
         [0.1000, 0.1000, 0.9300],
         [0.1000, 0.1000, 0.8932],
         ...,
         [0.1000, 0.1000, 0.8961],
         [0.1000, 0.1000, 0.8973],
         [0.1000, 0.1000, 0.9574]],
        [[0.1000, 0.1000, 0.8475],
         [0.1000, 0.1000, 0.8425],
         [0.1000, 0.1000, 0.8232],
         ...,
         [0.1000, 0.1000, 0.8189],
         [0.1000, 0.1000, 0.8204],
         [0.1000, 0.1000, 0.7968]],
        [[0.1000, 0.1000, 0.8428],
         [0.1000, 0.1000, 0.8338],
         [0.1000, 0.1000, 0.8161],
         ...,
         [0.1000, 0.1000, 0.8113],
         [0.1000, 0.1000, 0.8128],
         [0.1000, 0.1000, 0.7841]],
        ...,
        [[0.1000, 0.1000, 0.8372],
         [0.1000, 0.1000, 0.8236],
         [0.1000, 0.1000, 0.8077],
         ...,
         [0.1000, 0.1000, 0.8022],
         [0.1000, 0.1000, 0.8037],
         [0.1000, 0.1000, 0.7698]],
        [[0.1000, 0.1000, 0.8519],
         [0.1000, 0.1000, 0.8509],
         [0.1000, 0.1000, 0.8301],
         ...,
         [0.1000, 0.1000, 0.8263],
         [0.1000, 0.1000, 0.8278],
         [0.1000, 0.1000, 0.8097]],
        [[0.1000, 0.1000, 0.8620],
         [0.1000, 0.1000, 0.8708],
         [0.1000, 0.1000, 0.8461],
         ...,
         [0.1000, 0.1000, 0.8439],
         [0.1000, 0.1000, 0.8453],
         [0.1000, 0.1000, 0.8423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.0474],
         [ 0.1000,  0.1000, 15.4231],
         [ 0.1000,  0.1000, 15.5941],
         ...,
         [ 0.1000,  0.1000, 15.5674],
         [ 0.1000,  0.1000, 18.0995],
         [ 0.1000,  0.1000, 18.5785]],
        [[ 0.1000,  0.1000,  9.5680],
         [ 0.1000,  0.1000, 10.4431],
         [ 0.1000,  0.1000,  9.6932],
         ...,
         [ 0.1000,  0.1000,  9.6871],
         [ 0.1000,  0.1000,  9.0425],
         [ 0.1000,  0.1000,  8.9415]],
        [[ 0.1000,  0.1000,  8.9747],
         [ 0.1000,  0.1000,  9.9510],
         [ 0.1000,  0.1000,  9.1392],
         ...,
         [ 0.1000,  0.1000,  9.1346],
         [ 0.1000,  0.1000,  8.2982],
         [ 0.1000,  0.1000,  8.1676]],
        ...,
        [[ 0.1000,  0.1000,  8.2892],
         [ 0.1000,  0.1000,  9.3723],
         [ 0.1000,  0.1000,  8.4953],
         ...,
         [ 0.1000,  0.1000,  8.4925],
         [ 0.1000,  0.1000,  7.4590],
         [ 0.1000,  0.1000,  7.2995]],
        [[ 0.1000,  0.1000, 10.1505],
         [ 0.1000,  0.1000, 10.9190],
         [ 0.1000,  0.1000, 10.2345],
         ...,
         [ 0.1000,  0.1000, 10.2268],
         [ 0.1000,  0.1000,  9.7889],
         [ 0.1000,  0.1000,  9.7209]],
        [[ 0.1000,  0.1000, 11.5645],
         [ 0.1000,  0.1000, 12.0473],
         [ 0.1000,  0.1000, 11.5383],
         ...,
         [ 0.1000,  0.1000, 11.5264],
         [ 0.1000,  0.1000, 11.6611],
         [ 0.1000,  0.1000, 11.6897]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9164],
         [0.1000, 0.1000, 0.9063],
         [0.1000, 0.1000, 0.9090],
         ...,
         [0.1000, 0.1000, 0.9086],
         [0.1000, 0.1000, 0.9498],
         [0.1000, 0.1000, 0.9576]],
        [[0.1000, 0.1000, 0.8110],
         [0.1000, 0.1000, 0.8253],
         [0.1000, 0.1000, 0.8131],
         ...,
         [0.1000, 0.1000, 0.8130],
         [0.1000, 0.1000, 0.8025],
         [0.1000, 0.1000, 0.8008]],
        [[0.1000, 0.1000, 0.8014],
         [0.1000, 0.1000, 0.8173],
         [0.1000, 0.1000, 0.8040],
         ...,
         [0.1000, 0.1000, 0.8040],
         [0.1000, 0.1000, 0.7904],
         [0.1000, 0.1000, 0.7882]],
        ...,
        [[0.1000, 0.1000, 0.7902],
         [0.1000, 0.1000, 0.8078],
         [0.1000, 0.1000, 0.7936],
         ...,
         [0.1000, 0.1000, 0.7935],
         [0.1000, 0.1000, 0.7767],
         [0.1000, 0.1000, 0.7741]],
        [[0.1000, 0.1000, 0.8205],
         [0.1000, 0.1000, 0.8330],
         [0.1000, 0.1000, 0.8219],
         ...,
         [0.1000, 0.1000, 0.8217],
         [0.1000, 0.1000, 0.8146],
         [0.1000, 0.1000, 0.8135]],
        [[0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8513],
         [0.1000, 0.1000, 0.8431],
         ...,
         [0.1000, 0.1000, 0.8429],
         [0.1000, 0.1000, 0.8451],
         [0.1000, 0.1000, 0.8455]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 16.0927],
         [ 0.1000,  0.1000, 15.3103],
         [ 0.1000,  0.1000, 15.6757],
         ...,
         [ 0.1000,  0.1000, 15.6529],
         [ 0.1000,  0.1000, 18.2477],
         [ 0.1000,  0.1000, 18.1392]],
        [[ 0.1000,  0.1000,  9.5129],
         [ 0.1000,  0.1000, 10.1586],
         [ 0.1000,  0.1000,  9.6279],
         ...,
         [ 0.1000,  0.1000,  9.6243],
         [ 0.1000,  0.1000,  9.0096],
         [ 0.1000,  0.1000,  9.0336]],
        [[ 0.1000,  0.1000,  8.9135],
         [ 0.1000,  0.1000,  9.6556],
         [ 0.1000,  0.1000,  9.0641],
         ...,
         [ 0.1000,  0.1000,  9.0619],
         [ 0.1000,  0.1000,  8.2559],
         [ 0.1000,  0.1000,  8.2867]],
        ...,
        [[ 0.1000,  0.1000,  8.2218],
         [ 0.1000,  0.1000,  9.0658],
         [ 0.1000,  0.1000,  8.4100],
         ...,
         [ 0.1000,  0.1000,  8.4094],
         [ 0.1000,  0.1000,  7.4075],
         [ 0.1000,  0.1000,  7.4450]],
        [[ 0.1000,  0.1000, 10.1020],
         [ 0.1000,  0.1000, 10.6462],
         [ 0.1000,  0.1000, 10.1794],
         ...,
         [ 0.1000,  0.1000, 10.1744],
         [ 0.1000,  0.1000,  9.7664],
         [ 0.1000,  0.1000,  9.7828]],
        [[ 0.1000,  0.1000, 11.5342],
         [ 0.1000,  0.1000, 11.8065],
         [ 0.1000,  0.1000, 11.5110],
         ...,
         [ 0.1000,  0.1000, 11.5021],
         [ 0.1000,  0.1000, 11.6690],
         [ 0.1000,  0.1000, 11.6631]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9195],
         [0.1000, 0.1000, 0.9067],
         [0.1000, 0.1000, 0.9127],
         ...,
         [0.1000, 0.1000, 0.9123],
         [0.1000, 0.1000, 0.9545],
         [0.1000, 0.1000, 0.9527]],
        [[0.1000, 0.1000, 0.8124],
         [0.1000, 0.1000, 0.8229],
         [0.1000, 0.1000, 0.8143],
         ...,
         [0.1000, 0.1000, 0.8142],
         [0.1000, 0.1000, 0.8042],
         [0.1000, 0.1000, 0.8046]],
        [[0.1000, 0.1000, 0.8027],
         [0.1000, 0.1000, 0.8148],
         [0.1000, 0.1000, 0.8051],
         ...,
         [0.1000, 0.1000, 0.8051],
         [0.1000, 0.1000, 0.7920],
         [0.1000, 0.1000, 0.7925]],
        ...,
        [[0.1000, 0.1000, 0.7914],
         [0.1000, 0.1000, 0.8052],
         [0.1000, 0.1000, 0.7945],
         ...,
         [0.1000, 0.1000, 0.7945],
         [0.1000, 0.1000, 0.7782],
         [0.1000, 0.1000, 0.7788]],
        [[0.1000, 0.1000, 0.8220],
         [0.1000, 0.1000, 0.8309],
         [0.1000, 0.1000, 0.8233],
         ...,
         [0.1000, 0.1000, 0.8232],
         [0.1000, 0.1000, 0.8166],
         [0.1000, 0.1000, 0.8168]],
        [[0.1000, 0.1000, 0.8453],
         [0.1000, 0.1000, 0.8497],
         [0.1000, 0.1000, 0.8449],
         ...,
         [0.1000, 0.1000, 0.8448],
         [0.1000, 0.1000, 0.8475],
         [0.1000, 0.1000, 0.8474]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 15.4959],
         [ 0.1000,  0.1000, 17.9194],
         [ 0.1000,  0.1000, 16.1694],
         ...,
         [ 0.1000,  0.1000, 16.2406],
         [ 0.1000,  0.1000, 18.0653],
         [ 0.1000,  0.1000, 16.2916]],
        [[ 0.1000,  0.1000,  9.5903],
         [ 0.1000,  0.1000,  8.8922],
         [ 0.1000,  0.1000,  9.3301],
         ...,
         [ 0.1000,  0.1000,  9.3091],
         [ 0.1000,  0.1000,  9.0504],
         [ 0.1000,  0.1000,  9.6193]],
        [[ 0.1000,  0.1000,  9.0373],
         [ 0.1000,  0.1000,  8.1534],
         [ 0.1000,  0.1000,  8.7162],
         ...,
         [ 0.1000,  0.1000,  8.6894],
         [ 0.1000,  0.1000,  8.3082],
         [ 0.1000,  0.1000,  9.0119]],
        ...,
        [[ 0.1000,  0.1000,  8.3950],
         [ 0.1000,  0.1000,  7.3211],
         [ 0.1000,  0.1000,  8.0100],
         ...,
         [ 0.1000,  0.1000,  7.9772],
         [ 0.1000,  0.1000,  7.4711],
         [ 0.1000,  0.1000,  8.3111]],
        [[ 0.1000,  0.1000, 10.1309],
         [ 0.1000,  0.1000,  9.6336],
         [ 0.1000,  0.1000,  9.9353],
         ...,
         [ 0.1000,  0.1000,  9.9204],
         [ 0.1000,  0.1000,  9.7943],
         [ 0.1000,  0.1000, 10.2163]],
        [[ 0.1000,  0.1000, 11.4341],
         [ 0.1000,  0.1000, 11.4956],
         [ 0.1000,  0.1000, 11.4131],
         ...,
         [ 0.1000,  0.1000, 11.4152],
         [ 0.1000,  0.1000, 11.6594],
         [ 0.1000,  0.1000, 11.6681]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9090],
         [0.1000, 0.1000, 0.9484],
         [0.1000, 0.1000, 0.9200],
         ...,
         [0.1000, 0.1000, 0.9211],
         [0.1000, 0.1000, 0.9508],
         [0.1000, 0.1000, 0.9219]],
        [[0.1000, 0.1000, 0.8129],
         [0.1000, 0.1000, 0.8016],
         [0.1000, 0.1000, 0.8087],
         ...,
         [0.1000, 0.1000, 0.8084],
         [0.1000, 0.1000, 0.8042],
         [0.1000, 0.1000, 0.8134]],
        [[0.1000, 0.1000, 0.8039],
         [0.1000, 0.1000, 0.7896],
         [0.1000, 0.1000, 0.7987],
         ...,
         [0.1000, 0.1000, 0.7983],
         [0.1000, 0.1000, 0.7921],
         [0.1000, 0.1000, 0.8035]],
        ...,
        [[0.1000, 0.1000, 0.7935],
         [0.1000, 0.1000, 0.7760],
         [0.1000, 0.1000, 0.7872],
         ...,
         [0.1000, 0.1000, 0.7867],
         [0.1000, 0.1000, 0.7785],
         [0.1000, 0.1000, 0.7921]],
        [[0.1000, 0.1000, 0.8217],
         [0.1000, 0.1000, 0.8136],
         [0.1000, 0.1000, 0.8186],
         ...,
         [0.1000, 0.1000, 0.8183],
         [0.1000, 0.1000, 0.8163],
         [0.1000, 0.1000, 0.8231]],
        [[0.1000, 0.1000, 0.8429],
         [0.1000, 0.1000, 0.8439],
         [0.1000, 0.1000, 0.8426],
         ...,
         [0.1000, 0.1000, 0.8426],
         [0.1000, 0.1000, 0.8466],
         [0.1000, 0.1000, 0.8467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 15.4176],
         [ 0.1000,  0.1000, 18.8695],
         [ 0.1000,  0.1000, 16.2791],
         ...,
         [ 0.1000,  0.1000, 16.3647],
         [ 0.1000,  0.1000, 18.0366],
         [ 0.1000,  0.1000, 16.0524]],
        [[ 0.1000,  0.1000,  9.6301],
         [ 0.1000,  0.1000,  8.7609],
         [ 0.1000,  0.1000,  9.2865],
         ...,
         [ 0.1000,  0.1000,  9.2625],
         [ 0.1000,  0.1000,  9.0570],
         [ 0.1000,  0.1000,  9.7333]],
        [[ 0.1000,  0.1000,  9.0851],
         [ 0.1000,  0.1000,  7.9672],
         [ 0.1000,  0.1000,  8.6631],
         ...,
         [ 0.1000,  0.1000,  8.6324],
         [ 0.1000,  0.1000,  8.3167],
         [ 0.1000,  0.1000,  9.1488]],
        ...,
        [[ 0.1000,  0.1000,  8.4514],
         [ 0.1000,  0.1000,  7.0812],
         [ 0.1000,  0.1000,  7.9472],
         ...,
         [ 0.1000,  0.1000,  7.9096],
         [ 0.1000,  0.1000,  7.4814],
         [ 0.1000,  0.1000,  8.4719]],
        [[ 0.1000,  0.1000, 10.1623],
         [ 0.1000,  0.1000,  9.5638],
         [ 0.1000,  0.1000,  9.9017],
         ...,
         [ 0.1000,  0.1000,  9.8850],
         [ 0.1000,  0.1000,  9.7989],
         [ 0.1000,  0.1000, 10.3061]],
        [[ 0.1000,  0.1000, 11.4429],
         [ 0.1000,  0.1000, 11.6055],
         [ 0.1000,  0.1000, 11.4075],
         ...,
         [ 0.1000,  0.1000, 11.4107],
         [ 0.1000,  0.1000, 11.6580],
         [ 0.1000,  0.1000, 11.6920]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9023],
         [0.1000, 0.1000, 0.9584],
         [0.1000, 0.1000, 0.9163],
         ...,
         [0.1000, 0.1000, 0.9177],
         [0.1000, 0.1000, 0.9449],
         [0.1000, 0.1000, 0.9126]],
        [[0.1000, 0.1000, 0.8081],
         [0.1000, 0.1000, 0.7940],
         [0.1000, 0.1000, 0.8026],
         ...,
         [0.1000, 0.1000, 0.8022],
         [0.1000, 0.1000, 0.7988],
         [0.1000, 0.1000, 0.8098]],
        [[0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7811],
         [0.1000, 0.1000, 0.7924],
         ...,
         [0.1000, 0.1000, 0.7919],
         [0.1000, 0.1000, 0.7868],
         [0.1000, 0.1000, 0.8003]],
        ...,
        [[0.1000, 0.1000, 0.7890],
         [0.1000, 0.1000, 0.7667],
         [0.1000, 0.1000, 0.7808],
         ...,
         [0.1000, 0.1000, 0.7802],
         [0.1000, 0.1000, 0.7732],
         [0.1000, 0.1000, 0.7893]],
        [[0.1000, 0.1000, 0.8168],
         [0.1000, 0.1000, 0.8071],
         [0.1000, 0.1000, 0.8126],
         ...,
         [0.1000, 0.1000, 0.8123],
         [0.1000, 0.1000, 0.8109],
         [0.1000, 0.1000, 0.8191]],
        [[0.1000, 0.1000, 0.8376],
         [0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8371],
         ...,
         [0.1000, 0.1000, 0.8371],
         [0.1000, 0.1000, 0.8411],
         [0.1000, 0.1000, 0.8417]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.2657],
         [ 0.1000,  0.1000, 20.0374],
         [ 0.1000,  0.1000, 17.7182],
         ...,
         [ 0.1000,  0.1000, 17.6698],
         [ 0.1000,  0.1000, 18.4521],
         [ 0.1000,  0.1000, 15.1121]],
        [[ 0.1000,  0.1000,  9.2312],
         [ 0.1000,  0.1000,  8.7087],
         [ 0.1000,  0.1000,  8.9234],
         ...,
         [ 0.1000,  0.1000,  8.9280],
         [ 0.1000,  0.1000,  8.9667],
         [ 0.1000,  0.1000, 10.3791]],
        [[ 0.1000,  0.1000,  8.5427],
         [ 0.1000,  0.1000,  7.8551],
         [ 0.1000,  0.1000,  8.1970],
         ...,
         [ 0.1000,  0.1000,  8.2045],
         [ 0.1000,  0.1000,  8.2004],
         [ 0.1000,  0.1000,  9.9075]],
        ...,
        [[ 0.1000,  0.1000,  7.7591],
         [ 0.1000,  0.1000,  6.9111],
         [ 0.1000,  0.1000,  7.3771],
         ...,
         [ 0.1000,  0.1000,  7.3875],
         [ 0.1000,  0.1000,  7.3397],
         [ 0.1000,  0.1000,  9.3517]],
        [[ 0.1000,  0.1000,  9.9159],
         [ 0.1000,  0.1000,  9.5788],
         [ 0.1000,  0.1000,  9.6511],
         ...,
         [ 0.1000,  0.1000,  9.6524],
         [ 0.1000,  0.1000,  9.7376],
         [ 0.1000,  0.1000, 10.8345]],
        [[ 0.1000,  0.1000, 11.6121],
         [ 0.1000,  0.1000, 11.8189],
         [ 0.1000,  0.1000, 11.4736],
         ...,
         [ 0.1000,  0.1000, 11.4658],
         [ 0.1000,  0.1000, 11.6813],
         [ 0.1000,  0.1000, 11.9112]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9279],
         [0.1000, 0.1000, 0.9730],
         [0.1000, 0.1000, 0.9353],
         ...,
         [0.1000, 0.1000, 0.9345],
         [0.1000, 0.1000, 0.9472],
         [0.1000, 0.1000, 0.8929]],
        [[0.1000, 0.1000, 0.7972],
         [0.1000, 0.1000, 0.7887],
         [0.1000, 0.1000, 0.7922],
         ...,
         [0.1000, 0.1000, 0.7923],
         [0.1000, 0.1000, 0.7929],
         [0.1000, 0.1000, 0.8159]],
        [[0.1000, 0.1000, 0.7860],
         [0.1000, 0.1000, 0.7749],
         [0.1000, 0.1000, 0.7804],
         ...,
         [0.1000, 0.1000, 0.7805],
         [0.1000, 0.1000, 0.7805],
         [0.1000, 0.1000, 0.8082]],
        ...,
        [[0.1000, 0.1000, 0.7733],
         [0.1000, 0.1000, 0.7595],
         [0.1000, 0.1000, 0.7671],
         ...,
         [0.1000, 0.1000, 0.7673],
         [0.1000, 0.1000, 0.7665],
         [0.1000, 0.1000, 0.7992]],
        [[0.1000, 0.1000, 0.8084],
         [0.1000, 0.1000, 0.8029],
         [0.1000, 0.1000, 0.8041],
         ...,
         [0.1000, 0.1000, 0.8041],
         [0.1000, 0.1000, 0.8055],
         [0.1000, 0.1000, 0.8233]],
        [[0.1000, 0.1000, 0.8360],
         [0.1000, 0.1000, 0.8393],
         [0.1000, 0.1000, 0.8337],
         ...,
         [0.1000, 0.1000, 0.8336],
         [0.1000, 0.1000, 0.8371],
         [0.1000, 0.1000, 0.8408]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.6950],
         [ 0.1000,  0.1000, 18.9925],
         [ 0.1000,  0.1000, 17.4354],
         ...,
         [ 0.1000,  0.1000, 17.3291],
         [ 0.1000,  0.1000, 18.0505],
         [ 0.1000,  0.1000, 15.9188]],
        [[ 0.1000,  0.1000,  9.1408],
         [ 0.1000,  0.1000,  8.8652],
         [ 0.1000,  0.1000,  8.9810],
         ...,
         [ 0.1000,  0.1000,  8.9987],
         [ 0.1000,  0.1000,  9.0538],
         [ 0.1000,  0.1000,  9.8034]],
        [[ 0.1000,  0.1000,  8.4232],
         [ 0.1000,  0.1000,  8.0673],
         [ 0.1000,  0.1000,  8.2730],
         ...,
         [ 0.1000,  0.1000,  8.2975],
         [ 0.1000,  0.1000,  8.3126],
         [ 0.1000,  0.1000,  9.2324]],
        ...,
        [[ 0.1000,  0.1000,  7.6102],
         [ 0.1000,  0.1000,  7.1760],
         [ 0.1000,  0.1000,  7.4713],
         ...,
         [ 0.1000,  0.1000,  7.5028],
         [ 0.1000,  0.1000,  7.4764],
         [ 0.1000,  0.1000,  8.5697]],
        [[ 0.1000,  0.1000,  9.8576],
         [ 0.1000,  0.1000,  9.6717],
         [ 0.1000,  0.1000,  9.6884],
         ...,
         [ 0.1000,  0.1000,  9.6985],
         [ 0.1000,  0.1000,  9.7966],
         [ 0.1000,  0.1000, 10.3619]],
        [[ 0.1000,  0.1000, 11.6443],
         [ 0.1000,  0.1000, 11.7207],
         [ 0.1000,  0.1000, 11.4527],
         ...,
         [ 0.1000,  0.1000, 11.4413],
         [ 0.1000,  0.1000, 11.6587],
         [ 0.1000,  0.1000, 11.7093]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
  warnings.warn(first_warn_msg, RuntimeWarning)
         [0.1000, 0.1000, 0.9490],
         ...,
         [0.1000, 0.1000, 0.9370],
         [0.1000, 0.1000, 0.9270],
         [0.1000, 0.1000, 0.9730]],
        [[0.1000, 0.1000, 0.7935],
         [0.1000, 0.1000, 0.8071],
         [0.1000, 0.1000, 0.7914],
         ...,
         [0.1000, 0.1000, 0.7926],
         [0.1000, 0.1000, 0.7980],
         [0.1000, 0.1000, 0.7887]],
        [[0.1000, 0.1000, 0.7812],
         [0.1000, 0.1000, 0.7979],
         [0.1000, 0.1000, 0.7788],
         ...,
         [0.1000, 0.1000, 0.7807],
         [0.1000, 0.1000, 0.7869],
         [0.1000, 0.1000, 0.7749]],
        ...,
        [[0.1000, 0.1000, 0.7674],
         [0.1000, 0.1000, 0.7873],
         [0.1000, 0.1000, 0.7646],
         ...,
         [0.1000, 0.1000, 0.7673],
         [0.1000, 0.1000, 0.7742],
         [0.1000, 0.1000, 0.7595]],
        [[0.1000, 0.1000, 0.8059],
         [0.1000, 0.1000, 0.8161],
         [0.1000, 0.1000, 0.8041],
         ...,
         [0.1000, 0.1000, 0.8046],
         [0.1000, 0.1000, 0.8091],
         [0.1000, 0.1000, 0.8029]],
        [[0.1000, 0.1000, 0.8369],
         [0.1000, 0.1000, 0.8377],
         [0.1000, 0.1000, 0.8362],
         ...,
         [0.1000, 0.1000, 0.8345],
         [0.1000, 0.1000, 0.8363],
         [0.1000, 0.1000, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.4082],
         [ 0.1000,  0.1000, 15.3573],
         [ 0.1000,  0.1000, 18.9187],
         ...,
         [ 0.1000,  0.1000, 18.3754],
         [ 0.1000,  0.1000, 16.9998],
         [ 0.1000,  0.1000, 20.0374]],
        [[ 0.1000,  0.1000,  8.9757],
         [ 0.1000,  0.1000, 10.1670],
         [ 0.1000,  0.1000,  8.8781],
         ...,
         [ 0.1000,  0.1000,  8.9204],
         [ 0.1000,  0.1000,  9.3453],
         [ 0.1000,  0.1000,  8.7087]],
        [[ 0.1000,  0.1000,  8.2121],
         [ 0.1000,  0.1000,  9.6610],
         [ 0.1000,  0.1000,  8.0844],
         ...,
         [ 0.1000,  0.1000,  8.1571],
         [ 0.1000,  0.1000,  8.6782],
         [ 0.1000,  0.1000,  7.8551]],
        ...,
        [[ 0.1000,  0.1000,  7.3540],
         [ 0.1000,  0.1000,  9.0677],
         [ 0.1000,  0.1000,  7.1972],
         ...,
         [ 0.1000,  0.1000,  7.2998],
         [ 0.1000,  0.1000,  7.9159],
         [ 0.1000,  0.1000,  6.9111]],
        [[ 0.1000,  0.1000,  9.7436],
         [ 0.1000,  0.1000, 10.6577],
         [ 0.1000,  0.1000,  9.6799],
         ...,
         [ 0.1000,  0.1000,  9.6884],
         [ 0.1000,  0.1000, 10.0067],
         [ 0.1000,  0.1000,  9.5788]],
        [[ 0.1000,  0.1000, 11.6785],
         [ 0.1000,  0.1000, 11.8260],
         [ 0.1000,  0.1000, 11.7148],
         ...,
         [ 0.1000,  0.1000, 11.6253],
         [ 0.1000,  0.1000, 11.6365],
         [ 0.1000,  0.1000, 11.8189]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9465],
         [0.1000, 0.1000, 0.8969],
         [0.1000, 0.1000, 0.9548],
         ...,
         [0.1000, 0.1000, 0.9460],
         [0.1000, 0.1000, 0.9236],
         [0.1000, 0.1000, 0.9730]],
        [[0.1000, 0.1000, 0.7931],
         [0.1000, 0.1000, 0.8125],
         [0.1000, 0.1000, 0.7915],
         ...,
         [0.1000, 0.1000, 0.7922],
         [0.1000, 0.1000, 0.7991],
         [0.1000, 0.1000, 0.7887]],
        [[0.1000, 0.1000, 0.7807],
         [0.1000, 0.1000, 0.8042],
         [0.1000, 0.1000, 0.7786],
         ...,
         [0.1000, 0.1000, 0.7798],
         [0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7749]],
        ...,
        [[0.1000, 0.1000, 0.7667],
         [0.1000, 0.1000, 0.7946],
         [0.1000, 0.1000, 0.7642],
         ...,
         [0.1000, 0.1000, 0.7658],
         [0.1000, 0.1000, 0.7759],
         [0.1000, 0.1000, 0.7595]],
        [[0.1000, 0.1000, 0.8056],
         [0.1000, 0.1000, 0.8204],
         [0.1000, 0.1000, 0.8045],
         ...,
         [0.1000, 0.1000, 0.8047],
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8029]],
        [[0.1000, 0.1000, 0.8370],
         [0.1000, 0.1000, 0.8394],
         [0.1000, 0.1000, 0.8376],
         ...,
         [0.1000, 0.1000, 0.8362],
         [0.1000, 0.1000, 0.8364],
         [0.1000, 0.1000, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 18.0591],
         [ 0.1000,  0.1000, 16.0373],
         [ 0.1000,  0.1000, 17.6985],
         ...,
         [ 0.1000,  0.1000, 18.1069],
         [ 0.1000,  0.1000, 17.1668],
         [ 0.1000,  0.1000, 16.9787]],
        [[ 0.1000,  0.1000,  9.0518],
         [ 0.1000,  0.1000,  9.7410],
         [ 0.1000,  0.1000,  9.1399],
         ...,
         [ 0.1000,  0.1000,  9.0409],
         [ 0.1000,  0.1000,  9.2914],
         [ 0.1000,  0.1000,  9.3524]],
        [[ 0.1000,  0.1000,  8.3100],
         [ 0.1000,  0.1000,  9.1580],
         [ 0.1000,  0.1000,  8.4220],
         ...,
         [ 0.1000,  0.1000,  8.2961],
         [ 0.1000,  0.1000,  8.6115],
         [ 0.1000,  0.1000,  8.6869]],
        ...,
        [[ 0.1000,  0.1000,  7.4733],
         [ 0.1000,  0.1000,  8.4827],
         [ 0.1000,  0.1000,  7.6089],
         ...,
         [ 0.1000,  0.1000,  7.4564],
         [ 0.1000,  0.1000,  7.8363],
         [ 0.1000,  0.1000,  7.9263]],
        [[ 0.1000,  0.1000,  9.7953],
         [ 0.1000,  0.1000, 10.3122],
         [ 0.1000,  0.1000,  9.8569],
         ...,
         [ 0.1000,  0.1000,  9.7878],
         [ 0.1000,  0.1000,  9.9667],
         [ 0.1000,  0.1000, 10.0120]],
        [[ 0.1000,  0.1000, 11.6591],
         [ 0.1000,  0.1000, 11.6938],
         [ 0.1000,  0.1000, 11.6445],
         ...,
         [ 0.1000,  0.1000, 11.6614],
         [ 0.1000,  0.1000, 11.6355],
         [ 0.1000,  0.1000, 11.6368]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9444],
         [0.1000, 0.1000, 0.9115],
         [0.1000, 0.1000, 0.9386],
         ...,
         [0.1000, 0.1000, 0.9452],
         [0.1000, 0.1000, 0.9299],
         [0.1000, 0.1000, 0.9268]],
        [[0.1000, 0.1000, 0.7979],
         [0.1000, 0.1000, 0.8091],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7977],
         [0.1000, 0.1000, 0.8018],
         [0.1000, 0.1000, 0.8028]],
        [[0.1000, 0.1000, 0.7859],
         [0.1000, 0.1000, 0.7996],
         [0.1000, 0.1000, 0.7877],
         ...,
         [0.1000, 0.1000, 0.7856],
         [0.1000, 0.1000, 0.7908],
         [0.1000, 0.1000, 0.7920]],
        ...,
        [[0.1000, 0.1000, 0.7722],
         [0.1000, 0.1000, 0.7887],
         [0.1000, 0.1000, 0.7744],
         ...,
         [0.1000, 0.1000, 0.7720],
         [0.1000, 0.1000, 0.7781],
         [0.1000, 0.1000, 0.7796]],
        [[0.1000, 0.1000, 0.8100],
         [0.1000, 0.1000, 0.8184],
         [0.1000, 0.1000, 0.8110],
         ...,
         [0.1000, 0.1000, 0.8099],
         [0.1000, 0.1000, 0.8128],
         [0.1000, 0.1000, 0.8135]],
        [[0.1000, 0.1000, 0.8403],
         [0.1000, 0.1000, 0.8409],
         [0.1000, 0.1000, 0.8401],
         ...,
         [0.1000, 0.1000, 0.8404],
         [0.1000, 0.1000, 0.8399],
         [0.1000, 0.1000, 0.8400]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.6805],
         [ 0.1000,  0.1000, 17.2225],
         [ 0.1000,  0.1000, 17.7012],
         ...,
         [ 0.1000,  0.1000, 17.8838],
         [ 0.1000,  0.1000, 17.4683],
         [ 0.1000,  0.1000, 17.7924]],
        [[ 0.1000,  0.1000,  9.1446],
         [ 0.1000,  0.1000,  9.2741],
         [ 0.1000,  0.1000,  9.1392],
         ...,
         [ 0.1000,  0.1000,  9.0933],
         [ 0.1000,  0.1000,  9.2020],
         [ 0.1000,  0.1000,  9.1159]],
        [[ 0.1000,  0.1000,  8.4279],
         [ 0.1000,  0.1000,  8.5901],
         [ 0.1000,  0.1000,  8.4211],
         ...,
         [ 0.1000,  0.1000,  8.3630],
         [ 0.1000,  0.1000,  8.5001],
         [ 0.1000,  0.1000,  8.3917]],
        ...,
        [[ 0.1000,  0.1000,  7.6160],
         [ 0.1000,  0.1000,  7.8107],
         [ 0.1000,  0.1000,  7.6078],
         ...,
         [ 0.1000,  0.1000,  7.5375],
         [ 0.1000,  0.1000,  7.7029],
         [ 0.1000,  0.1000,  7.5723]],
        [[ 0.1000,  0.1000,  9.8603],
         [ 0.1000,  0.1000,  9.9540],
         [ 0.1000,  0.1000,  9.8564],
         ...,
         [ 0.1000,  0.1000,  9.8241],
         [ 0.1000,  0.1000,  9.9014],
         [ 0.1000,  0.1000,  9.8400]],
        [[ 0.1000,  0.1000, 11.6439],
         [ 0.1000,  0.1000, 11.6357],
         [ 0.1000,  0.1000, 11.6445],
         ...,
         [ 0.1000,  0.1000, 11.6512],
         [ 0.1000,  0.1000, 11.6385],
         [ 0.1000,  0.1000, 11.6477]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9401],
         [0.1000, 0.1000, 0.9327],
         [0.1000, 0.1000, 0.9405],
         ...,
         [0.1000, 0.1000, 0.9434],
         [0.1000, 0.1000, 0.9367],
         [0.1000, 0.1000, 0.9420]],
        [[0.1000, 0.1000, 0.8013],
         [0.1000, 0.1000, 0.8034],
         [0.1000, 0.1000, 0.8012],
         ...,
         [0.1000, 0.1000, 0.8005],
         [0.1000, 0.1000, 0.8022],
         [0.1000, 0.1000, 0.8008]],
        [[0.1000, 0.1000, 0.7896],
         [0.1000, 0.1000, 0.7923],
         [0.1000, 0.1000, 0.7895],
         ...,
         [0.1000, 0.1000, 0.7886],
         [0.1000, 0.1000, 0.7908],
         [0.1000, 0.1000, 0.7891]],
        ...,
        [[0.1000, 0.1000, 0.7764],
         [0.1000, 0.1000, 0.7796],
         [0.1000, 0.1000, 0.7763],
         ...,
         [0.1000, 0.1000, 0.7752],
         [0.1000, 0.1000, 0.7778],
         [0.1000, 0.1000, 0.7757]],
        [[0.1000, 0.1000, 0.8129],
         [0.1000, 0.1000, 0.8145],
         [0.1000, 0.1000, 0.8129],
         ...,
         [0.1000, 0.1000, 0.8123],
         [0.1000, 0.1000, 0.8136],
         [0.1000, 0.1000, 0.8126]],
        [[0.1000, 0.1000, 0.8419],
         [0.1000, 0.1000, 0.8418],
         [0.1000, 0.1000, 0.8420],
         ...,
         [0.1000, 0.1000, 0.8421],
         [0.1000, 0.1000, 0.8419],
         [0.1000, 0.1000, 0.8420]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.5073],
         [ 0.1000,  0.1000, 18.1876],
         [ 0.1000,  0.1000, 17.6123],
         ...,
         [ 0.1000,  0.1000, 17.6962],
         [ 0.1000,  0.1000, 17.7175],
         [ 0.1000,  0.1000, 17.4922]],
        [[ 0.1000,  0.1000,  9.1911],
         [ 0.1000,  0.1000,  9.0228],
         [ 0.1000,  0.1000,  9.1626],
         ...,
         [ 0.1000,  0.1000,  9.1405],
         [ 0.1000,  0.1000,  9.1350],
         [ 0.1000,  0.1000,  9.1954]],
        [[ 0.1000,  0.1000,  8.4865],
         [ 0.1000,  0.1000,  8.2729],
         [ 0.1000,  0.1000,  8.4506],
         ...,
         [ 0.1000,  0.1000,  8.4228],
         [ 0.1000,  0.1000,  8.4158],
         [ 0.1000,  0.1000,  8.4918]],
        ...,
        [[ 0.1000,  0.1000,  7.6865],
         [ 0.1000,  0.1000,  7.4281],
         [ 0.1000,  0.1000,  7.6433],
         ...,
         [ 0.1000,  0.1000,  7.6098],
         [ 0.1000,  0.1000,  7.6014],
         [ 0.1000,  0.1000,  7.6928]],
        [[ 0.1000,  0.1000,  9.8936],
         [ 0.1000,  0.1000,  9.7754],
         [ 0.1000,  0.1000,  9.8731],
         ...,
         [ 0.1000,  0.1000,  9.8574],
         [ 0.1000,  0.1000,  9.8534],
         [ 0.1000,  0.1000,  9.8966]],
        [[ 0.1000,  0.1000, 11.6393],
         [ 0.1000,  0.1000, 11.6657],
         [ 0.1000,  0.1000, 11.6419],
         ...,
         [ 0.1000,  0.1000, 11.6444],
         [ 0.1000,  0.1000, 11.6451],
         [ 0.1000,  0.1000, 11.6390]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9356],
         [0.1000, 0.1000, 0.9467],
         [0.1000, 0.1000, 0.9373],
         ...,
         [0.1000, 0.1000, 0.9387],
         [0.1000, 0.1000, 0.9390],
         [0.1000, 0.1000, 0.9353]],
        [[0.1000, 0.1000, 0.8003],
         [0.1000, 0.1000, 0.7976],
         [0.1000, 0.1000, 0.7999],
         ...,
         [0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7994],
         [0.1000, 0.1000, 0.8004]],
        [[0.1000, 0.1000, 0.7889],
         [0.1000, 0.1000, 0.7854],
         [0.1000, 0.1000, 0.7883],
         ...,
         [0.1000, 0.1000, 0.7878],
         [0.1000, 0.1000, 0.7877],
         [0.1000, 0.1000, 0.7890]],
        ...,
        [[0.1000, 0.1000, 0.7759],
         [0.1000, 0.1000, 0.7717],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7746],
         [0.1000, 0.1000, 0.7745],
         [0.1000, 0.1000, 0.7760]],
        [[0.1000, 0.1000, 0.8118],
         [0.1000, 0.1000, 0.8098],
         [0.1000, 0.1000, 0.8114],
         ...,
         [0.1000, 0.1000, 0.8112],
         [0.1000, 0.1000, 0.8111],
         [0.1000, 0.1000, 0.8118]],
        [[0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8406],
         [0.1000, 0.1000, 0.8402],
         ...,
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8401]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.4253],
         [ 0.1000,  0.1000, 18.9741],
         [ 0.1000,  0.1000, 17.5279],
         ...,
         [ 0.1000,  0.1000, 17.5044],
         [ 0.1000,  0.1000, 17.9598],
         [ 0.1000,  0.1000, 17.0440]],
        [[ 0.1000,  0.1000,  9.2142],
         [ 0.1000,  0.1000,  8.8684],
         [ 0.1000,  0.1000,  9.1855],
         ...,
         [ 0.1000,  0.1000,  9.1920],
         [ 0.1000,  0.1000,  9.0750],
         [ 0.1000,  0.1000,  9.3307]],
        [[ 0.1000,  0.1000,  8.5153],
         [ 0.1000,  0.1000,  8.0715],
         [ 0.1000,  0.1000,  8.4793],
         ...,
         [ 0.1000,  0.1000,  8.4875],
         [ 0.1000,  0.1000,  8.3397],
         [ 0.1000,  0.1000,  8.6601]],
        ...,
        [[ 0.1000,  0.1000,  7.7212],
         [ 0.1000,  0.1000,  7.1813],
         [ 0.1000,  0.1000,  7.6779],
         ...,
         [ 0.1000,  0.1000,  7.6877],
         [ 0.1000,  0.1000,  7.5093],
         [ 0.1000,  0.1000,  7.8944]],
        [[ 0.1000,  0.1000,  9.9102],
         [ 0.1000,  0.1000,  9.6737],
         [ 0.1000,  0.1000,  9.8895],
         ...,
         [ 0.1000,  0.1000,  9.8941],
         [ 0.1000,  0.1000,  9.8114],
         [ 0.1000,  0.1000,  9.9958]],
        [[ 0.1000,  0.1000, 11.6378],
         [ 0.1000,  0.1000, 11.7192],
         [ 0.1000,  0.1000, 11.6398],
         ...,
         [ 0.1000,  0.1000, 11.6393],
         [ 0.1000,  0.1000, 11.6544],
         [ 0.1000,  0.1000, 11.6361]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9363],
         [0.1000, 0.1000, 0.9615],
         [0.1000, 0.1000, 0.9380],
         ...,
         [0.1000, 0.1000, 0.9376],
         [0.1000, 0.1000, 0.9450],
         [0.1000, 0.1000, 0.9301]],
        [[0.1000, 0.1000, 0.8027],
         [0.1000, 0.1000, 0.7971],
         [0.1000, 0.1000, 0.8023],
         ...,
         [0.1000, 0.1000, 0.8024],
         [0.1000, 0.1000, 0.8005],
         [0.1000, 0.1000, 0.8046]],
        [[0.1000, 0.1000, 0.7914],
         [0.1000, 0.1000, 0.7842],
         [0.1000, 0.1000, 0.7908],
         ...,
         [0.1000, 0.1000, 0.7909],
         [0.1000, 0.1000, 0.7885],
         [0.1000, 0.1000, 0.7937]],
        ...,
        [[0.1000, 0.1000, 0.7785],
         [0.1000, 0.1000, 0.7697],
         [0.1000, 0.1000, 0.7778],
         ...,
         [0.1000, 0.1000, 0.7779],
         [0.1000, 0.1000, 0.7750],
         [0.1000, 0.1000, 0.7813]],
        [[0.1000, 0.1000, 0.8141],
         [0.1000, 0.1000, 0.8102],
         [0.1000, 0.1000, 0.8137],
         ...,
         [0.1000, 0.1000, 0.8138],
         [0.1000, 0.1000, 0.8125],
         [0.1000, 0.1000, 0.8155]],
        [[0.1000, 0.1000, 0.8422],
         [0.1000, 0.1000, 0.8435],
         [0.1000, 0.1000, 0.8422],
         ...,
         [0.1000, 0.1000, 0.8422],
         [0.1000, 0.1000, 0.8424],
         [0.1000, 0.1000, 0.8421]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3705],
         [ 0.1000,  0.1000, 19.1066],
         [ 0.1000,  0.1000, 17.4081],
         ...,
         [ 0.1000,  0.1000, 17.4217],
         [ 0.1000,  0.1000, 17.9483],
         [ 0.1000,  0.1000, 16.8941]],
        [[ 0.1000,  0.1000,  9.2300],
         [ 0.1000,  0.1000,  8.8457],
         [ 0.1000,  0.1000,  9.2191],
         ...,
         [ 0.1000,  0.1000,  9.2152],
         [ 0.1000,  0.1000,  9.0778],
         [ 0.1000,  0.1000,  9.3813]],
        [[ 0.1000,  0.1000,  8.5351],
         [ 0.1000,  0.1000,  8.0414],
         [ 0.1000,  0.1000,  8.5215],
         ...,
         [ 0.1000,  0.1000,  8.5166],
         [ 0.1000,  0.1000,  8.3432],
         [ 0.1000,  0.1000,  8.7224]],
        ...,
        [[ 0.1000,  0.1000,  7.7449],
         [ 0.1000,  0.1000,  7.1441],
         [ 0.1000,  0.1000,  7.7286],
         ...,
         [ 0.1000,  0.1000,  7.7227],
         [ 0.1000,  0.1000,  7.5135],
         [ 0.1000,  0.1000,  7.9686]],
        [[ 0.1000,  0.1000,  9.9217],
         [ 0.1000,  0.1000,  9.6595],
         [ 0.1000,  0.1000,  9.9138],
         ...,
         [ 0.1000,  0.1000,  9.9110],
         [ 0.1000,  0.1000,  9.8132],
         [ 0.1000,  0.1000, 10.0337]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7301],
         [ 0.1000,  0.1000, 11.6375],
         ...,
         [ 0.1000,  0.1000, 11.6377],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6382]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9323],
         [0.1000, 0.1000, 0.9605],
         [0.1000, 0.1000, 0.9329],
         ...,
         [0.1000, 0.1000, 0.9331],
         [0.1000, 0.1000, 0.9417],
         [0.1000, 0.1000, 0.9246]],
        [[0.1000, 0.1000, 0.7999],
         [0.1000, 0.1000, 0.7936],
         [0.1000, 0.1000, 0.7997],
         ...,
         [0.1000, 0.1000, 0.7997],
         [0.1000, 0.1000, 0.7974],
         [0.1000, 0.1000, 0.8024]],
        [[0.1000, 0.1000, 0.7886],
         [0.1000, 0.1000, 0.7806],
         [0.1000, 0.1000, 0.7884],
         ...,
         [0.1000, 0.1000, 0.7883],
         [0.1000, 0.1000, 0.7855],
         [0.1000, 0.1000, 0.7916]],
        ...,
        [[0.1000, 0.1000, 0.7757],
         [0.1000, 0.1000, 0.7660],
         [0.1000, 0.1000, 0.7755],
         ...,
         [0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7720],
         [0.1000, 0.1000, 0.7794]],
        [[0.1000, 0.1000, 0.8111],
         [0.1000, 0.1000, 0.8069],
         [0.1000, 0.1000, 0.8110],
         ...,
         [0.1000, 0.1000, 0.8110],
         [0.1000, 0.1000, 0.8094],
         [0.1000, 0.1000, 0.8130]],
        [[0.1000, 0.1000, 0.8390],
         [0.1000, 0.1000, 0.8406],
         [0.1000, 0.1000, 0.8391],
         ...,
         [0.1000, 0.1000, 0.8391],
         [0.1000, 0.1000, 0.8393],
         [0.1000, 0.1000, 0.8391]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3652],
         [ 0.1000,  0.1000, 19.1194],
         [ 0.1000,  0.1000, 17.3967],
         ...,
         [ 0.1000,  0.1000, 17.4138],
         [ 0.1000,  0.1000, 17.9472],
         [ 0.1000,  0.1000, 16.8799]],
        [[ 0.1000,  0.1000,  9.2315],
         [ 0.1000,  0.1000,  8.8436],
         [ 0.1000,  0.1000,  9.2224],
         ...,
         [ 0.1000,  0.1000,  9.2175],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3862]],
        [[ 0.1000,  0.1000,  8.5370],
         [ 0.1000,  0.1000,  8.0386],
         [ 0.1000,  0.1000,  8.5256],
         ...,
         [ 0.1000,  0.1000,  8.5195],
         [ 0.1000,  0.1000,  8.3435],
         [ 0.1000,  0.1000,  8.7285]],
        ...,
        [[ 0.1000,  0.1000,  7.7471],
         [ 0.1000,  0.1000,  7.1405],
         [ 0.1000,  0.1000,  7.7335],
         ...,
         [ 0.1000,  0.1000,  7.7261],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9759]],
        [[ 0.1000,  0.1000,  9.9228],
         [ 0.1000,  0.1000,  9.6582],
         [ 0.1000,  0.1000,  9.9162],
         ...,
         [ 0.1000,  0.1000,  9.9126],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0374]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7312],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6385]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9319],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9324],
         ...,
         [0.1000, 0.1000, 0.9327],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9240]],
        [[0.1000, 0.1000, 0.7996],
         [0.1000, 0.1000, 0.7933],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7971],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7883],
         [0.1000, 0.1000, 0.7802],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7656],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7792]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8107],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8390],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1206],
         [ 0.1000,  0.1000, 17.3957],
         ...,
         [ 0.1000,  0.1000, 17.4131],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8787]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5259],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3435],
         [ 0.1000,  0.1000,  8.7290]],
        ...,
        [[ 0.1000,  0.1000,  7.7473],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7339],
         ...,
         [ 0.1000,  0.1000,  7.7264],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9765]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7971],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7883],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1206],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7264],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7883],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000,  0.1000, 17.3647],
         [ 0.1000,  0.1000, 19.1207],
         [ 0.1000,  0.1000, 17.3956],
         ...,
         [ 0.1000,  0.1000, 17.4130],
         [ 0.1000,  0.1000, 17.9471],
         [ 0.1000,  0.1000, 16.8786]],
        [[ 0.1000,  0.1000,  9.2316],
         [ 0.1000,  0.1000,  8.8434],
         [ 0.1000,  0.1000,  9.2227],
         ...,
         [ 0.1000,  0.1000,  9.2177],
         [ 0.1000,  0.1000,  9.0780],
         [ 0.1000,  0.1000,  9.3867]],
        [[ 0.1000,  0.1000,  8.5371],
         [ 0.1000,  0.1000,  8.0383],
         [ 0.1000,  0.1000,  8.5260],
         ...,
         [ 0.1000,  0.1000,  8.5197],
         [ 0.1000,  0.1000,  8.3436],
         [ 0.1000,  0.1000,  8.7291]],
        ...,
        [[ 0.1000,  0.1000,  7.7474],
         [ 0.1000,  0.1000,  7.1402],
         [ 0.1000,  0.1000,  7.7340],
         ...,
         [ 0.1000,  0.1000,  7.7265],
         [ 0.1000,  0.1000,  7.5140],
         [ 0.1000,  0.1000,  7.9766]],
        [[ 0.1000,  0.1000,  9.9229],
         [ 0.1000,  0.1000,  9.6581],
         [ 0.1000,  0.1000,  9.9164],
         ...,
         [ 0.1000,  0.1000,  9.9127],
         [ 0.1000,  0.1000,  9.8134],
         [ 0.1000,  0.1000, 10.0377]],
        [[ 0.1000,  0.1000, 11.6369],
         [ 0.1000,  0.1000, 11.7313],
         [ 0.1000,  0.1000, 11.6373],
         ...,
         [ 0.1000,  0.1000, 11.6376],
         [ 0.1000,  0.1000, 11.6539],
         [ 0.1000,  0.1000, 11.6386]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 0.1000, 0.9318],
         [0.1000, 0.1000, 0.9604],
         [0.1000, 0.1000, 0.9323],
         ...,
         [0.1000, 0.1000, 0.9326],
         [0.1000, 0.1000, 0.9413],
         [0.1000, 0.1000, 0.9239]],
        [[0.1000, 0.1000, 0.7995],
         [0.1000, 0.1000, 0.7932],
         [0.1000, 0.1000, 0.7994],
         ...,
         [0.1000, 0.1000, 0.7993],
         [0.1000, 0.1000, 0.7970],
         [0.1000, 0.1000, 0.8021]],
        [[0.1000, 0.1000, 0.7882],
         [0.1000, 0.1000, 0.7801],
         [0.1000, 0.1000, 0.7881],
         ...,
         [0.1000, 0.1000, 0.7880],
         [0.1000, 0.1000, 0.7851],
         [0.1000, 0.1000, 0.7914]],
        ...,
        [[0.1000, 0.1000, 0.7754],
         [0.1000, 0.1000, 0.7655],
         [0.1000, 0.1000, 0.7752],
         ...,
         [0.1000, 0.1000, 0.7751],
         [0.1000, 0.1000, 0.7716],
         [0.1000, 0.1000, 0.7791]],
        [[0.1000, 0.1000, 0.8108],
         [0.1000, 0.1000, 0.8065],
         [0.1000, 0.1000, 0.8107],
         ...,
         [0.1000, 0.1000, 0.8106],
         [0.1000, 0.1000, 0.8090],
         [0.1000, 0.1000, 0.8127]],
        [[0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8402],
         [0.1000, 0.1000, 0.8387],
         ...,
         [0.1000, 0.1000, 0.8387],
         [0.1000, 0.1000, 0.8389],
         [0.1000, 0.1000, 0.8387]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.3169],
         [ 0.1000, 10.8051, 28.5525],
         [ 0.1000, 10.8051, 21.7726],
         ...,
         [ 0.1000, 10.8051, 13.9307],
         [ 0.1000, 10.8051, 47.6695],
         [ 0.1000, 10.8051, 18.7053]],
        [[ 0.1000, 10.6368, 13.0142],
         [ 0.1000, 10.6368, 26.8976],
         [ 0.1000, 10.6368, 14.2352],
         ...,
         [ 0.1000, 10.6368, 11.4896],
         [ 0.1000, 10.6368, 24.7840],
         [ 0.1000, 10.6368,  8.8316]],
        [[ 0.1000, 10.6161, 12.6549],
         [ 0.1000, 10.6161, 26.6995],
         [ 0.1000, 10.6161, 13.5058],
         ...,
         [ 0.1000, 10.6161, 11.2189],
         [ 0.1000, 10.6161, 22.8564],
         [ 0.1000, 10.6161,  8.0481]],
        ...,
        [[ 0.1000, 10.5905, 12.2227],
         [ 0.1000, 10.5905, 26.4557],
         [ 0.1000, 10.5905, 12.6522],
         ...,
         [ 0.1000, 10.5905, 10.8917],
         [ 0.1000, 10.5905, 20.6710],
         [ 0.1000, 10.5905,  7.1716]],
        [[ 0.1000, 10.6559, 13.3549],
         [ 0.1000, 10.6559, 27.0818],
         [ 0.1000, 10.6559, 14.9436],
         ...,
         [ 0.1000, 10.6559, 11.7454],
         [ 0.1000, 10.6559, 26.7077],
         [ 0.1000, 10.6559,  9.6225]],
        [[ 0.1000, 10.6981, 14.1388],
         [ 0.1000, 10.6981, 27.4927],
         [ 0.1000, 10.6981, 16.6340],
         ...,
         [ 0.1000, 10.6981, 12.3301],
         [ 0.1000, 10.6981, 31.4975],
         [ 0.1000, 10.6981, 11.6275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9186],
         [0.1000, 1.0531, 1.1176],
         [0.1000, 1.0531, 1.0073],
         ...,
         [0.1000, 1.0531, 0.8798],
         [0.1000, 1.0531, 1.4285],
         [0.1000, 1.0531, 0.9574]],
        [[0.1000, 1.0495, 0.8649],
         [0.1000, 1.0495, 1.0907],
         [0.1000, 1.0495, 0.8847],
         ...,
         [0.1000, 1.0495, 0.8401],
         [0.1000, 1.0495, 1.0563],
         [0.1000, 1.0495, 0.7968]],
        [[0.1000, 1.0490, 0.8590],
         [0.1000, 1.0490, 1.0874],
         [0.1000, 1.0490, 0.8729],
         ...,
         [0.1000, 1.0490, 0.8357],
         [0.1000, 1.0490, 1.0249],
         [0.1000, 1.0490, 0.7841]],
        ...,
        [[0.1000, 1.0485, 0.8520],
         [0.1000, 1.0485, 1.0835],
         [0.1000, 1.0485, 0.8590],
         ...,
         [0.1000, 1.0485, 0.8303],
         [0.1000, 1.0485, 0.9894],
         [0.1000, 1.0485, 0.7698]],
        [[0.1000, 1.0499, 0.8704],
         [0.1000, 1.0499, 1.0937],
         [0.1000, 1.0499, 0.8962],
         ...,
         [0.1000, 1.0499, 0.8442],
         [0.1000, 1.0499, 1.0876],
         [0.1000, 1.0499, 0.8097]],
        [[0.1000, 1.0508, 0.8832],
         [0.1000, 1.0508, 1.1003],
         [0.1000, 1.0508, 0.9237],
         ...,
         [0.1000, 1.0508, 0.8537],
         [0.1000, 1.0508, 1.1655],
         [0.1000, 1.0508, 0.8423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.2217],
         [ 0.1000, 10.8051, 28.9291],
         [ 0.1000, 10.8051, 20.1670],
         ...,
         [ 0.1000, 10.8051, 15.0637],
         [ 0.1000, 10.8051, 45.9513],
         [ 0.1000, 10.8051, 18.6112]],
        [[ 0.1000, 10.6368, 10.8482],
         [ 0.1000, 10.6368, 25.7152],
         [ 0.1000, 10.6368, 13.0299],
         ...,
         [ 0.1000, 10.6368,  9.9550],
         [ 0.1000, 10.6368, 24.5120],
         [ 0.1000, 10.6368,  8.8902]],
        [[ 0.1000, 10.6161, 10.4027],
         [ 0.1000, 10.6161, 25.3430],
         [ 0.1000, 10.6161, 12.3440],
         ...,
         [ 0.1000, 10.6161,  9.4575],
         [ 0.1000, 10.6161, 22.6775],
         [ 0.1000, 10.6161,  8.1132]],
        ...,
        [[ 0.1000, 10.5905,  9.8752],
         [ 0.1000, 10.5905, 24.8886],
         [ 0.1000, 10.5905, 11.5428],
         ...,
         [ 0.1000, 10.5905,  8.8743],
         [ 0.1000, 10.5905, 20.5903],
         [ 0.1000, 10.5905,  7.2426]],
        [[ 0.1000, 10.6559, 11.2764],
         [ 0.1000, 10.6559, 26.0636],
         [ 0.1000, 10.6559, 13.6968],
         ...,
         [ 0.1000, 10.6559, 10.4376],
         [ 0.1000, 10.6559, 26.3372],
         [ 0.1000, 10.6559,  9.6735]],
        [[ 0.1000, 10.6981, 12.2820],
         [ 0.1000, 10.6981, 26.8493],
         [ 0.1000, 10.6981, 15.2919],
         ...,
         [ 0.1000, 10.6981, 11.5869],
         [ 0.1000, 10.6981, 30.8601],
         [ 0.1000, 10.6981, 11.6547]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9020],
         [0.1000, 1.0531, 1.1250],
         [0.1000, 1.0531, 0.9825],
         ...,
         [0.1000, 1.0531, 0.8995],
         [0.1000, 1.0531, 1.4018],
         [0.1000, 1.0531, 0.9572]],
        [[0.1000, 1.0495, 0.8309],
         [0.1000, 1.0495, 1.0727],
         [0.1000, 1.0495, 0.8664],
         ...,
         [0.1000, 1.0495, 0.8164],
         [0.1000, 1.0495, 1.0531],
         [0.1000, 1.0495, 0.7991]],
        [[0.1000, 1.0490, 0.8237],
         [0.1000, 1.0490, 1.0667],
         [0.1000, 1.0490, 0.8552],
         ...,
         [0.1000, 1.0490, 0.8083],
         [0.1000, 1.0490, 1.0233],
         [0.1000, 1.0490, 0.7864]],
        ...,
        [[0.1000, 1.0485, 0.8151],
         [0.1000, 1.0485, 1.0593],
         [0.1000, 1.0485, 0.8422],
         ...,
         [0.1000, 1.0485, 0.7988],
         [0.1000, 1.0485, 0.9893],
         [0.1000, 1.0485, 0.7723]],
        [[0.1000, 1.0499, 0.8379],
         [0.1000, 1.0499, 1.0784],
         [0.1000, 1.0499, 0.8772],
         ...,
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 1.0828],
         [0.1000, 1.0499, 0.8118]],
        [[0.1000, 1.0508, 0.8542],
         [0.1000, 1.0508, 1.0912],
         [0.1000, 1.0508, 0.9032],
         ...,
         [0.1000, 1.0508, 0.8429],
         [0.1000, 1.0508, 1.1564],
         [0.1000, 1.0508, 0.8440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.5216],
         [ 0.1000, 10.8051, 28.5455],
         [ 0.1000, 10.8051, 17.1742],
         ...,
         [ 0.1000, 10.8051, 16.1343],
         [ 0.1000, 10.8051, 42.9477],
         [ 0.1000, 10.8051, 18.1819]],
        [[ 0.1000, 10.6368,  9.8400],
         [ 0.1000, 10.6368, 22.2891],
         [ 0.1000, 10.6368, 11.5253],
         ...,
         [ 0.1000, 10.6368,  9.4184],
         [ 0.1000, 10.6368, 24.0278],
         [ 0.1000, 10.6368,  9.0241]],
        [[ 0.1000, 10.6161,  9.3002],
         [ 0.1000, 10.6161, 21.6168],
         [ 0.1000, 10.6161, 10.9700],
         ...,
         [ 0.1000, 10.6161,  8.8113],
         [ 0.1000, 10.6161, 22.3610],
         [ 0.1000, 10.6161,  8.2745]],
        ...,
        [[ 0.1000, 10.5905,  8.6712],
         [ 0.1000, 10.5905, 20.8105],
         [ 0.1000, 10.5905, 10.3179],
         ...,
         [ 0.1000, 10.5905,  8.1118],
         [ 0.1000, 10.5905, 20.4521],
         [ 0.1000, 10.5905,  7.4301]],
        [[ 0.1000, 10.6559, 10.3662],
         [ 0.1000, 10.6559, 22.9283],
         [ 0.1000, 10.6559, 12.0628],
         ...,
         [ 0.1000, 10.6559, 10.0160],
         [ 0.1000, 10.6559, 25.6768],
         [ 0.1000, 10.6559,  9.7763]],
        [[ 0.1000, 10.6981, 11.6288],
         [ 0.1000, 10.6981, 24.4044],
         [ 0.1000, 10.6981, 13.3393],
         ...,
         [ 0.1000, 10.6981, 11.4723],
         [ 0.1000, 10.6981, 29.7269],
         [ 0.1000, 10.6981, 11.6654]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9106],
         [0.1000, 1.0531, 1.1225],
         [0.1000, 1.0531, 0.9375],
         ...,
         [0.1000, 1.0531, 0.9206],
         [0.1000, 1.0531, 1.3567],
         [0.1000, 1.0531, 0.9539]],
        [[0.1000, 1.0495, 0.8182],
         [0.1000, 1.0495, 1.0207],
         [0.1000, 1.0495, 0.8456],
         ...,
         [0.1000, 1.0495, 0.8114],
         [0.1000, 1.0495, 1.0490],
         [0.1000, 1.0495, 0.8050]],
        [[0.1000, 1.0490, 0.8095],
         [0.1000, 1.0490, 1.0098],
         [0.1000, 1.0490, 0.8366],
         ...,
         [0.1000, 1.0490, 0.8015],
         [0.1000, 1.0490, 1.0219],
         [0.1000, 1.0490, 0.7928]],
        ...,
        [[0.1000, 1.0485, 0.7992],
         [0.1000, 1.0485, 0.9967],
         [0.1000, 1.0485, 0.8260],
         ...,
         [0.1000, 1.0485, 0.7901],
         [0.1000, 1.0485, 0.9908],
         [0.1000, 1.0485, 0.7790]],
        [[0.1000, 1.0499, 0.8268],
         [0.1000, 1.0499, 1.0311],
         [0.1000, 1.0499, 0.8544],
         ...,
         [0.1000, 1.0499, 0.8211],
         [0.1000, 1.0499, 1.0758],
         [0.1000, 1.0499, 0.8172]],
        [[0.1000, 1.0508, 0.8473],
         [0.1000, 1.0508, 1.0551],
         [0.1000, 1.0508, 0.8752],
         ...,
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 1.1417],
         [0.1000, 1.0508, 0.8479]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.1213],
         [ 0.1000, 10.8051, 26.5509],
         [ 0.1000, 10.8051, 15.7535],
         ...,
         [ 0.1000, 10.8051, 17.0795],
         [ 0.1000, 10.8051, 37.3039],
         [ 0.1000, 10.8051, 17.1383]],
        [[ 0.1000, 10.6368,  9.1458],
         [ 0.1000, 10.6368, 16.5416],
         [ 0.1000, 10.6368,  9.7419],
         ...,
         [ 0.1000, 10.6368,  9.1662],
         [ 0.1000, 10.6368, 23.0847],
         [ 0.1000, 10.6368,  9.3004]],
        [[ 0.1000, 10.6161,  8.4628],
         [ 0.1000, 10.6161, 15.6005],
         [ 0.1000, 10.6161,  9.1792],
         ...,
         [ 0.1000, 10.6161,  8.4865],
         [ 0.1000, 10.6161, 21.7532],
         [ 0.1000, 10.6161,  8.6226]],
        ...,
        [[ 0.1000, 10.5905,  7.6855],
         [ 0.1000, 10.5905, 14.5065],
         [ 0.1000, 10.5905,  8.5257],
         ...,
         [ 0.1000, 10.5905,  7.7126],
         [ 0.1000, 10.5905, 20.2068],
         [ 0.1000, 10.5905,  7.8496]],
        [[ 0.1000, 10.6559,  9.8253],
         [ 0.1000, 10.6559, 17.4608],
         [ 0.1000, 10.6559, 10.2920],
         ...,
         [ 0.1000, 10.6559,  9.8419],
         [ 0.1000, 10.6559, 24.3863],
         [ 0.1000, 10.6559,  9.9733]],
        [[ 0.1000, 10.6981, 11.5085],
         [ 0.1000, 10.6981, 19.6738],
         [ 0.1000, 10.6981, 11.6182],
         ...,
         [ 0.1000, 10.6981, 11.5144],
         [ 0.1000, 10.6981, 27.5239],
         [ 0.1000, 10.6981, 11.6356]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 1.0963],
         [0.1000, 1.0531, 0.9207],
         ...,
         [0.1000, 1.0531, 0.9423],
         [0.1000, 1.0531, 1.2712],
         [0.1000, 1.0531, 0.9432]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.9335],
         [0.1000, 1.0495, 0.8229],
         ...,
         [0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 1.0399],
         [0.1000, 1.0495, 0.8157]],
        [[0.1000, 1.0490, 0.8021],
         [0.1000, 1.0490, 0.9182],
         [0.1000, 1.0490, 0.8138],
         ...,
         [0.1000, 1.0490, 0.8025],
         [0.1000, 1.0490, 1.0183],
         [0.1000, 1.0490, 0.8047]],
        ...,
        [[0.1000, 1.0485, 0.7895],
         [0.1000, 1.0485, 0.9004],
         [0.1000, 1.0485, 0.8032],
         ...,
         [0.1000, 1.0485, 0.7899],
         [0.1000, 1.0485, 0.9931],
         [0.1000, 1.0485, 0.7922]],
        [[0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.9485],
         [0.1000, 1.0499, 0.8319],
         ...,
         [0.1000, 1.0499, 0.8246],
         [0.1000, 1.0499, 1.0611],
         [0.1000, 1.0499, 0.8267]],
        [[0.1000, 1.0508, 0.8517],
         [0.1000, 1.0508, 0.9845],
         [0.1000, 1.0508, 0.8534],
         ...,
         [0.1000, 1.0508, 0.8518],
         [0.1000, 1.0508, 1.1121],
         [0.1000, 1.0508, 0.8537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.4106],
         [ 0.1000, 10.8051, 25.6908],
         [ 0.1000, 10.8051, 16.1485],
         ...,
         [ 0.1000, 10.8051, 17.0616],
         [ 0.1000, 10.8051, 31.6265],
         [ 0.1000, 10.8051, 17.4862]],
        [[ 0.1000, 10.6368,  9.0237],
         [ 0.1000, 10.6368, 14.6769],
         [ 0.1000, 10.6368,  9.3767],
         ...,
         [ 0.1000, 10.6368,  9.1473],
         [ 0.1000, 10.6368, 22.1128],
         [ 0.1000, 10.6368,  9.1970]],
        [[ 0.1000, 10.6161,  8.3186],
         [ 0.1000, 10.6161, 13.6942],
         [ 0.1000, 10.6161,  8.7665],
         ...,
         [ 0.1000, 10.6161,  8.4680],
         [ 0.1000, 10.6161, 21.1547],
         [ 0.1000, 10.6161,  8.4938]],
        ...,
        [[ 0.1000, 10.5905,  7.5196],
         [ 0.1000, 10.5905, 12.5655],
         [ 0.1000, 10.5905,  8.0641],
         ...,
         [ 0.1000, 10.5905,  7.6946],
         [ 0.1000, 10.5905, 20.0230],
         [ 0.1000, 10.5905,  7.6954]],
        [[ 0.1000, 10.6559,  9.7276],
         [ 0.1000, 10.6559, 15.6467],
         [ 0.1000, 10.6559,  9.9777],
         ...,
         [ 0.1000, 10.6559,  9.8228],
         [ 0.1000, 10.6559, 23.0359],
         [ 0.1000, 10.6559,  9.8978]],
        [[ 0.1000, 10.6981, 11.4812],
         [ 0.1000, 10.6981, 18.0195],
         [ 0.1000, 10.6981, 11.4438],
         ...,
         [ 0.1000, 10.6981, 11.4950],
         [ 0.1000, 10.6981, 25.2114],
         [ 0.1000, 10.6981, 11.6389]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9424],
         [0.1000, 1.0531, 1.0771],
         [0.1000, 1.0531, 0.9219],
         ...,
         [0.1000, 1.0531, 0.9367],
         [0.1000, 1.0531, 1.1736],
         [0.1000, 1.0531, 0.9436]],
        [[0.1000, 1.0495, 0.8060],
         [0.1000, 1.0495, 0.8979],
         [0.1000, 1.0495, 0.8117],
         ...,
         [0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 1.0189],
         [0.1000, 1.0495, 0.8088]],
        [[0.1000, 1.0490, 0.7945],
         [0.1000, 1.0490, 0.8820],
         [0.1000, 1.0490, 0.8018],
         ...,
         [0.1000, 1.0490, 0.7970],
         [0.1000, 1.0490, 1.0033],
         [0.1000, 1.0490, 0.7974]],
        ...,
        [[0.1000, 1.0485, 0.7815],
         [0.1000, 1.0485, 0.8636],
         [0.1000, 1.0485, 0.7904],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.9849],
         [0.1000, 1.0485, 0.7844]],
        [[0.1000, 1.0499, 0.8174],
         [0.1000, 1.0499, 0.9137],
         [0.1000, 1.0499, 0.8215],
         ...,
         [0.1000, 1.0499, 0.8190],
         [0.1000, 1.0499, 1.0339],
         [0.1000, 1.0499, 0.8202]],
        [[0.1000, 1.0508, 0.8460],
         [0.1000, 1.0508, 0.9523],
         [0.1000, 1.0508, 0.8454],
         ...,
         [0.1000, 1.0508, 0.8462],
         [0.1000, 1.0508, 1.0693],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.2049],
         [ 0.1000, 10.8051, 18.6277],
         [ 0.1000, 10.8051, 20.0374],
         ...,
         [ 0.1000, 10.8051, 15.6870],
         [ 0.1000, 10.8051, 24.6655],
         [ 0.1000, 10.8051, 19.3753]],
        [[ 0.1000, 10.6368,  9.0190],
         [ 0.1000, 10.6368, 14.8638],
         [ 0.1000, 10.6368,  8.7087],
         ...,
         [ 0.1000, 10.6368,  9.5032],
         [ 0.1000, 10.6368, 16.4808],
         [ 0.1000, 10.6368,  8.8024]],
        [[ 0.1000, 10.6161,  8.2680],
         [ 0.1000, 10.6161, 14.4543],
         [ 0.1000, 10.6161,  7.8551],
         ...,
         [ 0.1000, 10.6161,  8.9315],
         [ 0.1000, 10.6161, 15.6784],
         [ 0.1000, 10.6161,  7.9833]],
        ...,
        [[ 0.1000, 10.5905,  7.4222],
         [ 0.1000, 10.5905, 13.9616],
         [ 0.1000, 10.5905,  6.9111],
         ...,
         [ 0.1000, 10.5905,  8.2695],
         [ 0.1000, 10.5905, 14.7366],
         [ 0.1000, 10.5905,  7.0719]],
        [[ 0.1000, 10.6559,  9.7728],
         [ 0.1000, 10.6559, 15.2523],
         [ 0.1000, 10.6559,  9.5788],
         ...,
         [ 0.1000, 10.6559, 10.0634],
         [ 0.1000, 10.6559, 17.2580],
         [ 0.1000, 10.6559,  9.6330]],
        [[ 0.1000, 10.6981, 11.6666],
         [ 0.1000, 10.6981, 16.1457],
         [ 0.1000, 10.6981, 11.8189],
         ...,
         [ 0.1000, 10.6981, 11.4193],
         [ 0.1000, 10.6981, 19.1053],
         [ 0.1000, 10.6981, 11.7537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9501],
         [0.1000, 1.0531, 0.9730],
         ...,
         [0.1000, 1.0531, 0.9022],
         [0.1000, 1.0531, 1.0483],
         [0.1000, 1.0531, 0.9622]],
        [[0.1000, 1.0495, 0.7938],
         [0.1000, 1.0495, 0.8889],
         [0.1000, 1.0495, 0.7887],
         ...,
         [0.1000, 1.0495, 0.8017],
         [0.1000, 1.0495, 0.9152],
         [0.1000, 1.0495, 0.7903]],
        [[0.1000, 1.0490, 0.7816],
         [0.1000, 1.0490, 0.8822],
         [0.1000, 1.0490, 0.7749],
         ...,
         [0.1000, 1.0490, 0.7924],
         [0.1000, 1.0490, 0.9021],
         [0.1000, 1.0490, 0.7769]],
        ...,
        [[0.1000, 1.0485, 0.7678],
         [0.1000, 1.0485, 0.8742],
         [0.1000, 1.0485, 0.7595],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.8868],
         [0.1000, 1.0485, 0.7621]],
        [[0.1000, 1.0499, 0.8061],
         [0.1000, 1.0499, 0.8952],
         [0.1000, 1.0499, 0.8029],
         ...,
         [0.1000, 1.0499, 0.8108],
         [0.1000, 1.0499, 0.9278],
         [0.1000, 1.0499, 0.8038]],
        [[0.1000, 1.0508, 0.8369],
         [0.1000, 1.0508, 0.9097],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8328],
         [0.1000, 1.0508, 0.9578],
         [0.1000, 1.0508, 0.8383]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.4568],
         [ 0.1000, 10.8051, 17.4883],
         [ 0.1000, 10.8051, 17.5722],
         ...,
         [ 0.1000, 10.8051, 16.0935],
         [ 0.1000, 10.8051, 26.1973],
         [ 0.1000, 10.8051, 18.8270]],
        [[ 0.1000, 10.6368,  9.5477],
         [ 0.1000, 10.6368, 14.4555],
         [ 0.1000, 10.6368,  9.1734],
         ...,
         [ 0.1000, 10.6368,  9.3702],
         [ 0.1000, 10.6368, 15.5033],
         [ 0.1000, 10.6368,  8.8945]],
        [[ 0.1000, 10.6161,  8.9254],
         [ 0.1000, 10.6161, 14.1187],
         [ 0.1000, 10.6161,  8.4642],
         ...,
         [ 0.1000, 10.6161,  8.7633],
         [ 0.1000, 10.6161, 14.5285],
         [ 0.1000, 10.6161,  8.1061]],
        ...,
        [[ 0.1000, 10.5905,  8.2091],
         [ 0.1000, 10.5905, 13.7115],
         [ 0.1000, 10.5905,  7.6597],
         ...,
         [ 0.1000, 10.5905,  8.0645],
         [ 0.1000, 10.5905, 13.4034],
         [ 0.1000, 10.5905,  7.2239]],
        [[ 0.1000, 10.6559, 10.1606],
         [ 0.1000, 10.6559, 14.7736],
         [ 0.1000, 10.6559,  9.8808],
         ...,
         [ 0.1000, 10.6559,  9.9677],
         [ 0.1000, 10.6559, 16.4612],
         [ 0.1000, 10.6559,  9.6904]],
        [[ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 15.5005],
         [ 0.1000, 10.6981, 11.6409],
         ...,
         [ 0.1000, 10.6981, 11.4244],
         [ 0.1000, 10.6981, 18.7897],
         [ 0.1000, 10.6981, 11.7077]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9215],
         [0.1000, 1.0531, 0.9382],
         [0.1000, 1.0531, 0.9396],
         ...,
         [0.1000, 1.0531, 0.9155],
         [0.1000, 1.0531, 1.0799],
         [0.1000, 1.0531, 0.9600]],
        [[0.1000, 1.0495, 0.8091],
         [0.1000, 1.0495, 0.8889],
         [0.1000, 1.0495, 0.8030],
         ...,
         [0.1000, 1.0495, 0.8062],
         [0.1000, 1.0495, 0.9059],
         [0.1000, 1.0495, 0.7985]],
        [[0.1000, 1.0490, 0.7990],
         [0.1000, 1.0490, 0.8834],
         [0.1000, 1.0490, 0.7915],
         ...,
         [0.1000, 1.0490, 0.7963],
         [0.1000, 1.0490, 0.8901],
         [0.1000, 1.0490, 0.7856]],
        ...,
        [[0.1000, 1.0485, 0.7873],
         [0.1000, 1.0485, 0.8768],
         [0.1000, 1.0485, 0.7784],
         ...,
         [0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.8718],
         [0.1000, 1.0485, 0.7713]],
        [[0.1000, 1.0499, 0.8190],
         [0.1000, 1.0499, 0.8941],
         [0.1000, 1.0499, 0.8145],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.9215],
         [0.1000, 1.0499, 0.8114]],
        [[0.1000, 1.0508, 0.8434],
         [0.1000, 1.0508, 0.9059],
         [0.1000, 1.0508, 0.8431],
         ...,
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.9594],
         [0.1000, 1.0508, 0.8442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9884],
         [ 0.1000, 10.8051, 15.3405],
         [ 0.1000, 10.8051, 16.2988],
         ...,
         [ 0.1000, 10.8051, 18.0493],
         [ 0.1000, 10.8051, 26.3159],
         [ 0.1000, 10.8051, 17.6765]],
        [[ 0.1000, 10.6368,  9.7663],
         [ 0.1000, 10.6368, 13.7670],
         [ 0.1000, 10.6368,  9.6160],
         ...,
         [ 0.1000, 10.6368,  8.9381],
         [ 0.1000, 10.6368, 14.7108],
         [ 0.1000, 10.6368,  9.1456]],
        [[ 0.1000, 10.6161,  9.1882],
         [ 0.1000, 10.6161, 13.5838],
         [ 0.1000, 10.6161,  9.0080],
         ...,
         [ 0.1000, 10.6161,  8.1933],
         [ 0.1000, 10.6161, 13.6889],
         [ 0.1000, 10.6161,  8.4292]],
        ...,
        [[ 0.1000, 10.5905,  8.5180],
         [ 0.1000, 10.5905, 13.3598],
         [ 0.1000, 10.5905,  8.3065],
         ...,
         [ 0.1000, 10.5905,  7.3547],
         [ 0.1000, 10.5905, 12.5188],
         [ 0.1000, 10.5905,  7.6176]],
        [[ 0.1000, 10.6559, 10.3323],
         [ 0.1000, 10.6559, 13.9383],
         [ 0.1000, 10.6559, 10.2137],
         ...,
         [ 0.1000, 10.6559,  9.6856],
         [ 0.1000, 10.6559, 15.7218],
         [ 0.1000, 10.6559,  9.8610]],
        [[ 0.1000, 10.6981, 11.6999],
         [ 0.1000, 10.6981, 14.3240],
         [ 0.1000, 10.6981, 11.6675],
         ...,
         [ 0.1000, 10.6981, 11.5638],
         [ 0.1000, 10.6981, 18.2055],
         [ 0.1000, 10.6981, 11.6438]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9126],
         [0.1000, 1.0531, 0.9021],
         [0.1000, 1.0531, 0.9177],
         ...,
         [0.1000, 1.0531, 0.9461],
         [0.1000, 1.0531, 1.0806],
         [0.1000, 1.0531, 0.9401]],
        [[0.1000, 1.0495, 0.8114],
         [0.1000, 1.0495, 0.8765],
         [0.1000, 1.0495, 0.8090],
         ...,
         [0.1000, 1.0495, 0.7980],
         [0.1000, 1.0495, 0.8918],
         [0.1000, 1.0495, 0.8013]],
        [[0.1000, 1.0490, 0.8020],
         [0.1000, 1.0490, 0.8735],
         [0.1000, 1.0490, 0.7991],
         ...,
         [0.1000, 1.0490, 0.7858],
         [0.1000, 1.0490, 0.8752],
         [0.1000, 1.0490, 0.7897]],
        ...,
        [[0.1000, 1.0485, 0.7911],
         [0.1000, 1.0485, 0.8699],
         [0.1000, 1.0485, 0.7877],
         ...,
         [0.1000, 1.0485, 0.7722],
         [0.1000, 1.0485, 0.8562],
         [0.1000, 1.0485, 0.7765]],
        [[0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8793],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8101],
         [0.1000, 1.0499, 0.9083],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8429],
         [0.1000, 1.0508, 0.8856],
         [0.1000, 1.0508, 0.8423],
         ...,
         [0.1000, 1.0508, 0.8407],
         [0.1000, 1.0508, 0.9487],
         [0.1000, 1.0508, 0.8420]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.3729],
         [ 0.1000, 10.8051, 15.1519],
         [ 0.1000, 10.8051, 16.1697],
         ...,
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 25.2051],
         [ 0.1000, 10.8051, 16.4663]],
        [[ 0.1000, 10.6368,  9.5834],
         [ 0.1000, 10.6368, 12.9820],
         [ 0.1000, 10.6368,  9.6757],
         ...,
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 14.0933],
         [ 0.1000, 10.6368,  9.5437]],
        [[ 0.1000, 10.6161,  8.9686],
         [ 0.1000, 10.6161, 12.7360],
         [ 0.1000, 10.6161,  9.0798],
         ...,
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 13.1147],
         [ 0.1000, 10.6161,  8.9206]],
        ...,
        [[ 0.1000, 10.5905,  8.2601],
         [ 0.1000, 10.5905, 12.4371],
         [ 0.1000, 10.5905,  8.3909],
         ...,
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 11.9941],
         [ 0.1000, 10.5905,  8.2035]],
        [[ 0.1000, 10.6559, 10.1883],
         [ 0.1000, 10.6559, 13.2134],
         [ 0.1000, 10.6559, 10.2606],
         ...,
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 15.0614],
         [ 0.1000, 10.6559, 10.1576]],
        [[ 0.1000, 10.6981, 11.6617],
         [ 0.1000, 10.6981, 13.7386],
         [ 0.1000, 10.6981, 11.6792],
         ...,
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 17.4397],
         [ 0.1000, 10.6981, 11.6554]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9134],
         [0.1000, 1.0531, 0.8935],
         [0.1000, 1.0531, 0.9101],
         ...,
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 1.0571],
         [0.1000, 1.0531, 0.9149]],
        [[0.1000, 1.0495, 0.8030],
         [0.1000, 1.0495, 0.8582],
         [0.1000, 1.0495, 0.8045],
         ...,
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8763],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7930],
         [0.1000, 1.0490, 0.8542],
         [0.1000, 1.0490, 0.7948],
         ...,
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8604],
         [0.1000, 1.0490, 0.7922]],
        ...,
        [[0.1000, 1.0485, 0.7814],
         [0.1000, 1.0485, 0.8494],
         [0.1000, 1.0485, 0.7836],
         ...,
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8422],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8128],
         [0.1000, 1.0499, 0.8620],
         [0.1000, 1.0499, 0.8140],
         ...,
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8921],
         [0.1000, 1.0499, 0.8123]],
        [[0.1000, 1.0508, 0.8368],
         [0.1000, 1.0508, 0.8706],
         [0.1000, 1.0508, 0.8371],
         ...,
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.9308],
         [0.1000, 1.0508, 0.8367]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.6203],
         [ 0.1000, 10.8051, 15.1404],
         [ 0.1000, 10.8051, 16.2912],
         ...,
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 24.9293],
         [ 0.1000, 10.8051, 16.4420]],
        [[ 0.1000, 10.6368,  9.4819],
         [ 0.1000, 10.6368, 12.7269],
         [ 0.1000, 10.6368,  9.6194],
         ...,
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 13.9883],
         [ 0.1000, 10.6368,  9.5539]],
        [[ 0.1000, 10.6161,  8.8455],
         [ 0.1000, 10.6161, 12.4562],
         [ 0.1000, 10.6161,  9.0121],
         ...,
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 13.0227],
         [ 0.1000, 10.6161,  8.9329]],
        ...,
        [[ 0.1000, 10.5905,  8.1147],
         [ 0.1000, 10.5905, 12.1283],
         [ 0.1000, 10.5905,  8.3113],
         ...,
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 11.9164],
         [ 0.1000, 10.5905,  8.2180]],
        [[ 0.1000, 10.6559, 10.1100],
         [ 0.1000, 10.6559, 12.9820],
         [ 0.1000, 10.6559, 10.2164],
         ...,
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 14.9433],
         [ 0.1000, 10.6559, 10.1654]],
        [[ 0.1000, 10.6981, 11.6472],
         [ 0.1000, 10.6981, 13.5631],
         [ 0.1000, 10.6981, 11.6681],
         ...,
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 17.2875],
         [ 0.1000, 10.6981, 11.6570]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9174],
         [0.1000, 1.0531, 0.8934],
         [0.1000, 1.0531, 0.9121],
         ...,
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 1.0526],
         [0.1000, 1.0531, 0.9145]],
        [[0.1000, 1.0495, 0.8013],
         [0.1000, 1.0495, 0.8541],
         [0.1000, 1.0495, 0.8036],
         ...,
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8746],
         [0.1000, 1.0495, 0.8025]],
        [[0.1000, 1.0490, 0.7910],
         [0.1000, 1.0490, 0.8497],
         [0.1000, 1.0490, 0.7937],
         ...,
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8589],
         [0.1000, 1.0490, 0.7924]],
        ...,
        [[0.1000, 1.0485, 0.7791],
         [0.1000, 1.0485, 0.8444],
         [0.1000, 1.0485, 0.7823],
         ...,
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8409],
         [0.1000, 1.0485, 0.7808]],
        [[0.1000, 1.0499, 0.8115],
         [0.1000, 1.0499, 0.8582],
         [0.1000, 1.0499, 0.8133],
         ...,
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8901],
         [0.1000, 1.0499, 0.8124]],
        [[0.1000, 1.0508, 0.8365],
         [0.1000, 1.0508, 0.8677],
         [0.1000, 1.0508, 0.8369],
         ...,
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.9283],
         [0.1000, 1.0508, 0.8367]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7504],
         [ 0.1000, 10.8051, 15.4643],
         [ 0.1000, 10.8051, 16.8160],
         ...,
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 23.6148],
         [ 0.1000, 10.8051, 16.3461]],
        [[ 0.1000, 10.6368,  9.1266],
         [ 0.1000, 10.6368, 11.8557],
         [ 0.1000, 10.6368,  9.4088],
         ...,
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 13.5351],
         [ 0.1000, 10.6368,  9.5950]],
        [[ 0.1000, 10.6161,  8.4052],
         [ 0.1000, 10.6161, 11.4721],
         [ 0.1000, 10.6161,  8.7563],
         ...,
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 12.6339],
         [ 0.1000, 10.6161,  8.9827]],
        ...,
        [[ 0.1000, 10.5905,  7.5885],
         [ 0.1000, 10.5905, 11.0132],
         [ 0.1000, 10.5905,  8.0089],
         ...,
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 11.5984],
         [ 0.1000, 10.5905,  8.2767]],
        [[ 0.1000, 10.6559,  9.8475],
         [ 0.1000, 10.6559, 12.2213],
         [ 0.1000, 10.6559, 10.0544],
         ...,
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 14.4240],
         [ 0.1000, 10.6559, 10.1974]],
        [[ 0.1000, 10.6981, 11.6462],
         [ 0.1000, 10.6981, 13.0684],
         [ 0.1000, 10.6981, 11.6401],
         ...,
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 16.5977],
         [ 0.1000, 10.6981, 11.6637]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9358],
         [0.1000, 1.0531, 0.8986],
         [0.1000, 1.0531, 0.9206],
         ...,
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 1.0312],
         [0.1000, 1.0531, 0.9130]],
        [[0.1000, 1.0495, 0.7955],
         [0.1000, 1.0495, 0.8399],
         [0.1000, 1.0495, 0.8001],
         ...,
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8672],
         [0.1000, 1.0495, 0.8032]],
        [[0.1000, 1.0490, 0.7838],
         [0.1000, 1.0490, 0.8337],
         [0.1000, 1.0490, 0.7895],
         ...,
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8526],
         [0.1000, 1.0490, 0.7932]],
        ...,
        [[0.1000, 1.0485, 0.7705],
         [0.1000, 1.0485, 0.8262],
         [0.1000, 1.0485, 0.7774],
         ...,
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8357],
         [0.1000, 1.0485, 0.7817]],
        [[0.1000, 1.0499, 0.8073],
         [0.1000, 1.0499, 0.8459],
         [0.1000, 1.0499, 0.8106],
         ...,
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8817],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8365],
         [0.1000, 1.0508, 0.8597],
         [0.1000, 1.0508, 0.8364],
         ...,
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.9171],
         [0.1000, 1.0508, 0.8368]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 14.5919],
         [ 0.1000, 10.8051, 19.5848],
         ...,
         [ 0.1000, 10.8051, 18.4291],
         [ 0.1000, 10.8051, 17.0048],
         [ 0.1000, 10.8051, 16.3839]],
        [[ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 12.9354],
         [ 0.1000, 10.6368,  8.7708],
         ...,
         [ 0.1000, 10.6368,  8.9714],
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.5786]],
        [[ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 12.7438],
         [ 0.1000, 10.6161,  7.9406],
         ...,
         [ 0.1000, 10.6161,  8.2065],
         [ 0.1000, 10.6161,  8.5308],
         [ 0.1000, 10.6161,  8.9628]],
        ...,
        [[ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 12.5101],
         [ 0.1000, 10.5905,  7.0186],
         ...,
         [ 0.1000, 10.5905,  7.3472],
         [ 0.1000, 10.5905,  7.7630],
         [ 0.1000, 10.5905,  8.2533]],
        [[ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 13.1147],
         [ 0.1000, 10.6559,  9.6142],
         ...,
         [ 0.1000, 10.6559,  9.7407],
         [ 0.1000, 10.6559,  9.8731],
         [ 0.1000, 10.6559, 10.1846]],
        [[ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 13.5194],
         [ 0.1000, 10.6981, 11.7733],
         ...,
         [ 0.1000, 10.6981, 11.6798],
         [ 0.1000, 10.6981, 11.5262],
         [ 0.1000, 10.6981, 11.6609]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.8844],
         [0.1000, 1.0531, 0.9656],
         ...,
         [0.1000, 1.0531, 0.9468],
         [0.1000, 1.0531, 0.9237],
         [0.1000, 1.0531, 0.9136]],
        [[0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8575],
         [0.1000, 1.0495, 0.7898],
         ...,
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.7968],
         [0.1000, 1.0495, 0.8029]],
        [[0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8544],
         [0.1000, 1.0490, 0.7763],
         ...,
         [0.1000, 1.0490, 0.7806],
         [0.1000, 1.0490, 0.7859],
         [0.1000, 1.0490, 0.7929]],
        ...,
        [[0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8506],
         [0.1000, 1.0485, 0.7613],
         ...,
         [0.1000, 1.0485, 0.7666],
         [0.1000, 1.0485, 0.7734],
         [0.1000, 1.0485, 0.7813]],
        [[0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8604],
         [0.1000, 1.0499, 0.8035],
         ...,
         [0.1000, 1.0499, 0.8055],
         [0.1000, 1.0499, 0.8077],
         [0.1000, 1.0499, 0.8127]],
        [[0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8670],
         [0.1000, 1.0508, 0.8386],
         ...,
         [0.1000, 1.0508, 0.8371],
         [0.1000, 1.0508, 0.8346],
         [0.1000, 1.0508, 0.8368]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.3862],
         [ 0.1000, 10.8051, 14.6367],
         [ 0.1000, 10.8051, 17.8426],
         ...,
         [ 0.1000, 10.8051, 17.8969],
         [ 0.1000, 10.8051, 15.9282],
         [ 0.1000, 10.8051, 16.9429]],
        [[ 0.1000, 10.6368,  8.9802],
         [ 0.1000, 10.6368, 13.0596],
         [ 0.1000, 10.6368,  9.1035],
         ...,
         [ 0.1000, 10.6368,  9.0901],
         [ 0.1000, 10.6368,  9.6090],
         [ 0.1000, 10.6368,  9.3645]],
        [[ 0.1000, 10.6161,  8.2180],
         [ 0.1000, 10.6161, 12.8766],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.3589],
         [ 0.1000, 10.6161,  9.0263],
         [ 0.1000, 10.6161,  8.7018]],
        ...,
        [[ 0.1000, 10.5905,  7.3612],
         [ 0.1000, 10.5905, 12.6530],
         [ 0.1000, 10.5905,  7.5531],
         ...,
         [ 0.1000, 10.5905,  7.5326],
         [ 0.1000, 10.5905,  8.3519],
         [ 0.1000, 10.5905,  7.9441]],
        [[ 0.1000, 10.6559,  9.7466],
         [ 0.1000, 10.6559, 13.2309],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.8219],
         [ 0.1000, 10.6559, 10.1803],
         [ 0.1000, 10.6559, 10.0211]],
        [[ 0.1000, 10.6981, 11.6772],
         [ 0.1000, 10.6981, 13.6168],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6517],
         [ 0.1000, 10.6981, 11.5642],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9513],
         [0.1000, 1.0531, 0.8903],
         [0.1000, 1.0531, 0.9425],
         ...,
         [0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9113],
         [0.1000, 1.0531, 0.9278]],
        [[0.1000, 1.0495, 0.7983],
         [0.1000, 1.0495, 0.8647],
         [0.1000, 1.0495, 0.8003],
         ...,
         [0.1000, 1.0495, 0.8001],
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8046]],
        [[0.1000, 1.0490, 0.7859],
         [0.1000, 1.0490, 0.8617],
         [0.1000, 1.0490, 0.7885],
         ...,
         [0.1000, 1.0490, 0.7882],
         [0.1000, 1.0490, 0.7991],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.8581],
         [0.1000, 1.0485, 0.7751],
         ...,
         [0.1000, 1.0485, 0.7748],
         [0.1000, 1.0485, 0.7881],
         [0.1000, 1.0485, 0.7815]],
        [[0.1000, 1.0499, 0.8108],
         [0.1000, 1.0499, 0.8675],
         [0.1000, 1.0499, 0.8122],
         ...,
         [0.1000, 1.0499, 0.8120],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8152]],
        [[0.1000, 1.0508, 0.8422],
         [0.1000, 1.0508, 0.8737],
         [0.1000, 1.0508, 0.8417],
         ...,
         [0.1000, 1.0508, 0.8418],
         [0.1000, 1.0508, 0.8403],
         [0.1000, 1.0508, 0.8415]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.3945],
         [ 0.1000, 10.8051, 15.5149],
         [ 0.1000, 10.8051, 16.8800],
         ...,
         [ 0.1000, 10.8051, 17.8919],
         [ 0.1000, 10.8051, 15.3171],
         [ 0.1000, 10.8051, 17.3085]],
        [[ 0.1000, 10.6368,  9.2230],
         [ 0.1000, 10.6368, 14.6334],
         [ 0.1000, 10.6368,  9.3862],
         ...,
         [ 0.1000, 10.6368,  9.0913],
         [ 0.1000, 10.6368,  9.9930],
         [ 0.1000, 10.6368,  9.2482]],
        [[ 0.1000, 10.6161,  8.5264],
         [ 0.1000, 10.6161, 14.5278],
         [ 0.1000, 10.6161,  8.7285],
         ...,
         [ 0.1000, 10.6161,  8.3605],
         [ 0.1000, 10.6161,  9.4784],
         [ 0.1000, 10.6161,  8.5578]],
        ...,
        [[ 0.1000, 10.5905,  7.7344],
         [ 0.1000, 10.5905, 14.3978],
         [ 0.1000, 10.5905,  7.9759],
         ...,
         [ 0.1000, 10.5905,  7.5345],
         [ 0.1000, 10.5905,  8.8764],
         [ 0.1000, 10.5905,  7.7721]],
        [[ 0.1000, 10.6559,  9.9166],
         [ 0.1000, 10.6559, 14.7316],
         [ 0.1000, 10.6559, 10.0374],
         ...,
         [ 0.1000, 10.6559,  9.8227],
         [ 0.1000, 10.6559, 10.4928],
         [ 0.1000, 10.6559,  9.9349]],
        [[ 0.1000, 10.6981, 11.6373],
         [ 0.1000, 10.6981, 14.9505],
         [ 0.1000, 10.6981, 11.6385],
         ...,
         [ 0.1000, 10.6981, 11.6515],
         [ 0.1000, 10.6981, 11.6861],
         [ 0.1000, 10.6981, 11.6362]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9128],
         [0.1000, 1.0531, 0.9350],
         ...,
         [0.1000, 1.0531, 0.9514],
         [0.1000, 1.0531, 0.9096],
         [0.1000, 1.0531, 0.9419]],
        [[0.1000, 1.0495, 0.8104],
         [0.1000, 1.0495, 0.8984],
         [0.1000, 1.0495, 0.8131],
         ...,
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8230],
         [0.1000, 1.0495, 0.8108]],
        [[0.1000, 1.0490, 0.7991],
         [0.1000, 1.0490, 0.8967],
         [0.1000, 1.0490, 0.8024],
         ...,
         [0.1000, 1.0490, 0.7964],
         [0.1000, 1.0490, 0.8146],
         [0.1000, 1.0490, 0.7996]],
        ...,
        [[0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.8946],
         [0.1000, 1.0485, 0.7901],
         ...,
         [0.1000, 1.0485, 0.7830],
         [0.1000, 1.0485, 0.8048],
         [0.1000, 1.0485, 0.7868]],
        [[0.1000, 1.0499, 0.8217],
         [0.1000, 1.0499, 0.9000],
         [0.1000, 1.0499, 0.8237],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8311],
         [0.1000, 1.0499, 0.8220]],
        [[0.1000, 1.0508, 0.8497],
         [0.1000, 1.0508, 0.9036],
         [0.1000, 1.0508, 0.8497],
         ...,
         [0.1000, 1.0508, 0.8499],
         [0.1000, 1.0508, 0.8505],
         [0.1000, 1.0508, 0.8497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.4464],
         [ 0.1000, 10.8051, 16.7577],
         [ 0.1000, 10.8051, 16.9698],
         ...,
         [ 0.1000, 10.8051, 18.0837],
         [ 0.1000, 10.8051, 15.2300],
         [ 0.1000, 10.8051, 17.2472]],
        [[ 0.1000, 10.6368,  9.2082],
         [ 0.1000, 10.6368, 16.2834],
         [ 0.1000, 10.6368,  9.3554],
         ...,
         [ 0.1000, 10.6368,  9.0461],
         [ 0.1000, 10.6368,  9.9604],
         [ 0.1000, 10.6368,  9.2666]],
        [[ 0.1000, 10.6161,  8.5078],
         [ 0.1000, 10.6161, 16.2256],
         [ 0.1000, 10.6161,  8.6905],
         ...,
         [ 0.1000, 10.6161,  8.3028],
         [ 0.1000, 10.6161,  9.4504],
         [ 0.1000, 10.6161,  8.5807]],
        ...,
        [[ 0.1000, 10.5905,  7.7122],
         [ 0.1000, 10.5905, 16.1542],
         [ 0.1000, 10.5905,  7.9307],
         ...,
         [ 0.1000, 10.5905,  7.4646],
         [ 0.1000, 10.5905,  8.8535],
         [ 0.1000, 10.5905,  7.7995]],
        [[ 0.1000, 10.6559,  9.9059],
         [ 0.1000, 10.6559, 16.3369],
         [ 0.1000, 10.6559, 10.0142],
         ...,
         [ 0.1000, 10.6559,  9.7914],
         [ 0.1000, 10.6559, 10.4558],
         [ 0.1000, 10.6559,  9.9484]],
        [[ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 16.4556],
         [ 0.1000, 10.6981, 11.6369],
         ...,
         [ 0.1000, 10.6981, 11.6603],
         [ 0.1000, 10.6981, 11.6376],
         [ 0.1000, 10.6981, 11.6358]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9315],
         [0.1000, 1.0531, 0.9349],
         ...,
         [0.1000, 1.0531, 0.9531],
         [0.1000, 1.0531, 0.9066],
         [0.1000, 1.0531, 0.9394]],
        [[0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.9238],
         [0.1000, 1.0495, 0.8111],
         ...,
         [0.1000, 1.0495, 0.8061],
         [0.1000, 1.0495, 0.8209],
         [0.1000, 1.0495, 0.8096]],
        [[0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.9228],
         [0.1000, 1.0490, 0.8003],
         ...,
         [0.1000, 1.0490, 0.7940],
         [0.1000, 1.0490, 0.8126],
         [0.1000, 1.0490, 0.7985]],
        ...,
        [[0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.9217],
         [0.1000, 1.0485, 0.7879],
         ...,
         [0.1000, 1.0485, 0.7803],
         [0.1000, 1.0485, 0.8029],
         [0.1000, 1.0485, 0.7858]],
        [[0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.9246],
         [0.1000, 1.0499, 0.8218],
         ...,
         [0.1000, 1.0499, 0.8182],
         [0.1000, 1.0499, 0.8290],
         [0.1000, 1.0499, 0.8207]],
        [[0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.9266],
         [0.1000, 1.0508, 0.8482],
         ...,
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7770],
         [ 0.1000, 10.8051, 16.2726],
         [ 0.1000, 10.8051, 17.5557],
         ...,
         [ 0.1000, 10.8051, 17.8633],
         [ 0.1000, 10.8051, 15.5362],
         [ 0.1000, 10.8051, 17.3901]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6619],
         [ 0.1000, 10.6368,  9.1779],
         ...,
         [ 0.1000, 10.6368,  9.0983],
         [ 0.1000, 10.6368,  9.6758],
         [ 0.1000, 10.6368,  9.2243]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5879],
         [ 0.1000, 10.6161,  8.4698],
         ...,
         [ 0.1000, 10.6161,  8.3694],
         [ 0.1000, 10.6161,  9.1249],
         [ 0.1000, 10.6161,  8.5280]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4965],
         [ 0.1000, 10.5905,  7.6664],
         ...,
         [ 0.1000, 10.5905,  7.5452],
         [ 0.1000, 10.5905,  8.4846],
         [ 0.1000, 10.5905,  7.7363]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.7305],
         [ 0.1000, 10.6559,  9.8840],
         ...,
         [ 0.1000, 10.6559,  9.8276],
         [ 0.1000, 10.6559, 10.2139],
         [ 0.1000, 10.6559,  9.9175]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8830],
         [ 0.1000, 10.6981, 11.6404],
         ...,
         [ 0.1000, 10.6981, 11.6504],
         [ 0.1000, 10.6981, 11.5095],
         [ 0.1000, 10.6981, 11.6372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9498],
         [0.1000, 1.0531, 0.9253],
         [0.1000, 1.0531, 0.9462],
         ...,
         [0.1000, 1.0531, 0.9512],
         [0.1000, 1.0531, 0.9133],
         [0.1000, 1.0531, 0.9435]],
        [[0.1000, 1.0495, 0.8090],
         [0.1000, 1.0495, 0.9154],
         [0.1000, 1.0495, 0.8099],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8180],
         [0.1000, 1.0495, 0.8107]],
        [[0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.9142],
         [0.1000, 1.0490, 0.7984],
         ...,
         [0.1000, 1.0490, 0.7968],
         [0.1000, 1.0490, 0.8091],
         [0.1000, 1.0490, 0.7994]],
        ...,
        [[0.1000, 1.0485, 0.7839],
         [0.1000, 1.0485, 0.9127],
         [0.1000, 1.0485, 0.7853],
         ...,
         [0.1000, 1.0485, 0.7834],
         [0.1000, 1.0485, 0.7987],
         [0.1000, 1.0485, 0.7865]],
        [[0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.9165],
         [0.1000, 1.0499, 0.8214],
         ...,
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8268],
         [0.1000, 1.0499, 0.8220]],
        [[0.1000, 1.0508, 0.8501],
         [0.1000, 1.0508, 0.9190],
         [0.1000, 1.0508, 0.8500],
         ...,
         [0.1000, 1.0508, 0.8501],
         [0.1000, 1.0508, 0.8479],
         [0.1000, 1.0508, 0.8499]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2466],
         [ 0.1000, 10.8051, 17.4462],
         ...,
         [ 0.1000, 10.8051, 17.9808],
         [ 0.1000, 10.8051, 15.4529],
         [ 0.1000, 10.8051, 17.2872]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6278],
         [ 0.1000, 10.6368,  9.2082],
         ...,
         [ 0.1000, 10.6368,  9.0700],
         [ 0.1000, 10.6368,  9.7510],
         [ 0.1000, 10.6368,  9.2545]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5529],
         [ 0.1000, 10.6161,  8.5079],
         ...,
         [ 0.1000, 10.6161,  8.3333],
         [ 0.1000, 10.6161,  9.2108],
         [ 0.1000, 10.6161,  8.5657]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4604],
         [ 0.1000, 10.5905,  7.7123],
         ...,
         [ 0.1000, 10.5905,  7.5016],
         [ 0.1000, 10.5905,  8.5817],
         [ 0.1000, 10.5905,  7.7816]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6973],
         [ 0.1000, 10.6559,  9.9059],
         ...,
         [ 0.1000, 10.6559,  9.8079],
         [ 0.1000, 10.6559, 10.2778],
         [ 0.1000, 10.6559,  9.9396]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8518],
         [ 0.1000, 10.6981, 11.6381],
         ...,
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.5433],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9489],
         [0.1000, 1.0531, 0.9240],
         [0.1000, 1.0531, 0.9435],
         ...,
         [0.1000, 1.0531, 0.9522],
         [0.1000, 1.0531, 0.9111],
         [0.1000, 1.0531, 0.9409]],
        [[0.1000, 1.0495, 0.8081],
         [0.1000, 1.0495, 0.9139],
         [0.1000, 1.0495, 0.8095],
         ...,
         [0.1000, 1.0495, 0.8072],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7963],
         [0.1000, 1.0490, 0.9127],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7953],
         [0.1000, 1.0490, 0.8095],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7830],
         [0.1000, 1.0485, 0.9112],
         [0.1000, 1.0485, 0.7852],
         ...,
         [0.1000, 1.0485, 0.7817],
         [0.1000, 1.0485, 0.7993],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8198],
         [0.1000, 1.0499, 0.9150],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8192],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8214]],
        [[0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.9175],
         [0.1000, 1.0508, 0.8490],
         ...,
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8475],
         [0.1000, 1.0508, 0.8490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2442],
         [ 0.1000, 10.8051, 17.4364],
         ...,
         [ 0.1000, 10.8051, 17.9916],
         [ 0.1000, 10.8051, 15.4461],
         [ 0.1000, 10.8051, 17.2780]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6248],
         [ 0.1000, 10.6368,  9.2110],
         ...,
         [ 0.1000, 10.6368,  9.0675],
         [ 0.1000, 10.6368,  9.7579],
         [ 0.1000, 10.6368,  9.2573]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5498],
         [ 0.1000, 10.6161,  8.5114],
         ...,
         [ 0.1000, 10.6161,  8.3301],
         [ 0.1000, 10.6161,  9.2186],
         [ 0.1000, 10.6161,  8.5691]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4572],
         [ 0.1000, 10.5905,  7.7164],
         ...,
         [ 0.1000, 10.5905,  7.4977],
         [ 0.1000, 10.5905,  8.5905],
         [ 0.1000, 10.5905,  7.7857]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6944],
         [ 0.1000, 10.6559,  9.9079],
         ...,
         [ 0.1000, 10.6559,  9.8061],
         [ 0.1000, 10.6559, 10.2837],
         [ 0.1000, 10.6559,  9.9416]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8490],
         [ 0.1000, 10.6981, 11.6380],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5466],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9109],
         [0.1000, 1.0531, 0.9407]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8095],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4355],
         ...,
         [ 0.1000, 10.8051, 17.9926],
         [ 0.1000, 10.8051, 15.4455],
         [ 0.1000, 10.8051, 17.2771]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0673],
         [ 0.1000, 10.6368,  9.7585],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5495],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2193],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7168],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5913],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6941],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8060],
         [ 0.1000, 10.6559, 10.2843],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5469],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0673],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8060],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.6838],
         [ 0.1000, 10.8051, 16.2621],
         [ 0.1000, 10.8051, 17.4896],
         ...,
         [ 0.1000, 10.8051, 17.8058],
         [ 0.1000, 10.8051, 15.4753],
         [ 0.1000, 10.8051, 17.3989]],
        [[ 0.1000, 10.6368,  9.1437],
         [ 0.1000, 10.6368, 15.6482],
         [ 0.1000, 10.6368,  9.1961],
         ...,
         [ 0.1000, 10.6368,  9.1126],
         [ 0.1000, 10.6368,  9.7258],
         [ 0.1000, 10.6368,  9.2217]],
        [[ 0.1000, 10.6161,  8.4268],
         [ 0.1000, 10.6161, 15.5738],
         [ 0.1000, 10.6161,  8.4926],
         ...,
         [ 0.1000, 10.6161,  8.3874],
         [ 0.1000, 10.6161,  9.1824],
         [ 0.1000, 10.6161,  8.5248]],
        ...,
        [[ 0.1000, 10.5905,  7.6147],
         [ 0.1000, 10.5905, 15.4820],
         [ 0.1000, 10.5905,  7.6939],
         ...,
         [ 0.1000, 10.5905,  7.5671],
         [ 0.1000, 10.5905,  8.5499],
         [ 0.1000, 10.5905,  7.7325]],
        [[ 0.1000, 10.6559,  9.8596],
         [ 0.1000, 10.6559, 15.7172],
         [ 0.1000, 10.6559,  9.8971],
         ...,
         [ 0.1000, 10.6559,  9.8376],
         [ 0.1000, 10.6559, 10.2560],
         [ 0.1000, 10.6559,  9.9157]],
        [[ 0.1000, 10.6981, 11.6440],
         [ 0.1000, 10.6981, 15.8705],
         [ 0.1000, 10.6981, 11.6390],
         ...,
         [ 0.1000, 10.6981, 11.6482],
         [ 0.1000, 10.6981, 11.5306],
         [ 0.1000, 10.6981, 11.6374]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9487],
         [0.1000, 1.0531, 0.9256],
         [0.1000, 1.0531, 0.9456],
         ...,
         [0.1000, 1.0531, 0.9507],
         [0.1000, 1.0531, 0.9128],
         [0.1000, 1.0531, 0.9441]],
        [[0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.9156],
         [0.1000, 1.0495, 0.8107],
         ...,
         [0.1000, 1.0495, 0.8093],
         [0.1000, 1.0495, 0.8193],
         [0.1000, 1.0495, 0.8111]],
        [[0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.9144],
         [0.1000, 1.0490, 0.7992],
         ...,
         [0.1000, 1.0490, 0.7975],
         [0.1000, 1.0490, 0.8105],
         [0.1000, 1.0490, 0.7998]],
        ...,
        [[0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.9129],
         [0.1000, 1.0485, 0.7863],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.8002],
         [0.1000, 1.0485, 0.7869]],
        [[0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.9168],
         [0.1000, 1.0499, 0.8221],
         ...,
         [0.1000, 1.0499, 0.8211],
         [0.1000, 1.0499, 0.8279],
         [0.1000, 1.0499, 0.8224]],
        [[0.1000, 1.0508, 0.8505],
         [0.1000, 1.0508, 0.9192],
         [0.1000, 1.0508, 0.8504],
         ...,
         [0.1000, 1.0508, 0.8506],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8504]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7725],
         [ 0.1000, 10.8051, 16.2448],
         [ 0.1000, 10.8051, 17.4380],
         ...,
         [ 0.1000, 10.8051, 17.9835],
         [ 0.1000, 10.8051, 15.4468],
         [ 0.1000, 10.8051, 17.2829]],
        [[ 0.1000, 10.6368,  9.1210],
         [ 0.1000, 10.6368, 15.6256],
         [ 0.1000, 10.6368,  9.2106],
         ...,
         [ 0.1000, 10.6368,  9.0694],
         [ 0.1000, 10.6368,  9.7570],
         [ 0.1000, 10.6368,  9.2558]],
        [[ 0.1000, 10.6161,  8.3980],
         [ 0.1000, 10.6161, 15.5506],
         [ 0.1000, 10.6161,  8.5108],
         ...,
         [ 0.1000, 10.6161,  8.3326],
         [ 0.1000, 10.6161,  9.2176],
         [ 0.1000, 10.6161,  8.5673]],
        ...,
        [[ 0.1000, 10.5905,  7.5799],
         [ 0.1000, 10.5905, 15.4580],
         [ 0.1000, 10.5905,  7.7158],
         ...,
         [ 0.1000, 10.5905,  7.5007],
         [ 0.1000, 10.5905,  8.5894],
         [ 0.1000, 10.5905,  7.7835]],
        [[ 0.1000, 10.6559,  9.8435],
         [ 0.1000, 10.6559, 15.6952],
         [ 0.1000, 10.6559,  9.9076],
         ...,
         [ 0.1000, 10.6559,  9.8075],
         [ 0.1000, 10.6559, 10.2830],
         [ 0.1000, 10.6559,  9.9405]],
        [[ 0.1000, 10.6981, 11.6470],
         [ 0.1000, 10.6981, 15.8498],
         [ 0.1000, 10.6981, 11.6380],
         ...,
         [ 0.1000, 10.6981, 11.6555],
         [ 0.1000, 10.6981, 11.5461],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9239],
         [0.1000, 1.0531, 0.9433],
         ...,
         [0.1000, 1.0531, 0.9522],
         [0.1000, 1.0531, 0.9109],
         [0.1000, 1.0531, 0.9408]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8095],
         ...,
         [0.1000, 1.0495, 0.8072],
         [0.1000, 1.0495, 0.8184],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7963],
         [0.1000, 1.0490, 0.9126],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7952],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7830],
         [0.1000, 1.0485, 0.9111],
         [0.1000, 1.0485, 0.7852],
         ...,
         [0.1000, 1.0485, 0.7817],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8198],
         [0.1000, 1.0499, 0.9150],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8192],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8214]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9175],
         [0.1000, 1.0508, 0.8490],
         ...,
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8475],
         [0.1000, 1.0508, 0.8490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7769],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4355],
         ...,
         [ 0.1000, 10.8051, 17.9922],
         [ 0.1000, 10.8051, 15.4455],
         [ 0.1000, 10.8051, 17.2773]],
        [[ 0.1000, 10.6368,  9.1199],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0674],
         [ 0.1000, 10.6368,  9.7585],
         [ 0.1000, 10.6368,  9.2575]],
        [[ 0.1000, 10.6161,  8.3967],
         [ 0.1000, 10.6161, 15.5495],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3299],
         [ 0.1000, 10.6161,  9.2193],
         [ 0.1000, 10.6161,  8.5694]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4569],
         [ 0.1000, 10.5905,  7.7168],
         ...,
         [ 0.1000, 10.5905,  7.4975],
         [ 0.1000, 10.5905,  8.5913],
         [ 0.1000, 10.5905,  7.7860]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6941],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8060],
         [ 0.1000, 10.6559, 10.2843],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5469],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0673],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8060],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7771],
         [ 0.1000, 10.8051, 16.2440],
         [ 0.1000, 10.8051, 17.4354],
         ...,
         [ 0.1000, 10.8051, 17.9927],
         [ 0.1000, 10.8051, 15.4454],
         [ 0.1000, 10.8051, 17.2770]],
        [[ 0.1000, 10.6368,  9.1198],
         [ 0.1000, 10.6368, 15.6245],
         [ 0.1000, 10.6368,  9.2113],
         ...,
         [ 0.1000, 10.6368,  9.0672],
         [ 0.1000, 10.6368,  9.7586],
         [ 0.1000, 10.6368,  9.2576]],
        [[ 0.1000, 10.6161,  8.3966],
         [ 0.1000, 10.6161, 15.5494],
         [ 0.1000, 10.6161,  8.5117],
         ...,
         [ 0.1000, 10.6161,  8.3298],
         [ 0.1000, 10.6161,  9.2194],
         [ 0.1000, 10.6161,  8.5695]],
        ...,
        [[ 0.1000, 10.5905,  7.5782],
         [ 0.1000, 10.5905, 15.4568],
         [ 0.1000, 10.5905,  7.7169],
         ...,
         [ 0.1000, 10.5905,  7.4973],
         [ 0.1000, 10.5905,  8.5914],
         [ 0.1000, 10.5905,  7.7861]],
        [[ 0.1000, 10.6559,  9.8427],
         [ 0.1000, 10.6559, 15.6940],
         [ 0.1000, 10.6559,  9.9081],
         ...,
         [ 0.1000, 10.6559,  9.8059],
         [ 0.1000, 10.6559, 10.2844],
         [ 0.1000, 10.6559,  9.9418]],
        [[ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 15.8487],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.5470],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9488],
         [0.1000, 1.0531, 0.9238],
         [0.1000, 1.0531, 0.9432],
         ...,
         [0.1000, 1.0531, 0.9523],
         [0.1000, 1.0531, 0.9108],
         [0.1000, 1.0531, 0.9406]],
        [[0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.9138],
         [0.1000, 1.0495, 0.8094],
         ...,
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8183],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.9125],
         [0.1000, 1.0490, 0.7981],
         ...,
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8096],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9110],
         [0.1000, 1.0485, 0.7851],
         ...,
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.7994],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8197],
         [0.1000, 1.0499, 0.9149],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8191],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8213]],
        [[0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.9174],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.3169],
         [ 0.1000, 10.8051, 14.6839],
         [ 0.1000, 10.8051, 20.2301],
         ...,
         [ 0.1000, 10.8051, 27.2341],
         [ 0.1000, 10.8051, 14.5315],
         [ 0.1000, 10.8051, 18.7053]],
        [[ 0.1000, 10.6368, 13.0142],
         [ 0.1000, 10.6368, 10.2132],
         [ 0.1000, 10.6368, 14.7611],
         ...,
         [ 0.1000, 10.6368, 17.6314],
         [ 0.1000, 10.6368, 11.0592],
         [ 0.1000, 10.6368,  8.8316]],
        [[ 0.1000, 10.6161, 12.6549],
         [ 0.1000, 10.6161,  9.7644],
         [ 0.1000, 10.6161, 14.1963],
         ...,
         [ 0.1000, 10.6161, 16.7076],
         [ 0.1000, 10.6161, 10.6916],
         [ 0.1000, 10.6161,  8.0481]],
        ...,
        [[ 0.1000, 10.5905, 12.2227],
         [ 0.1000, 10.5905,  9.2346],
         [ 0.1000, 10.5905, 13.5252],
         ...,
         [ 0.1000, 10.5905, 15.6279],
         [ 0.1000, 10.5905, 10.2523],
         [ 0.1000, 10.5905,  7.1716]],
        [[ 0.1000, 10.6559, 13.3549],
         [ 0.1000, 10.6559, 10.6459],
         [ 0.1000, 10.6559, 15.3025],
         ...,
         [ 0.1000, 10.6559, 18.5297],
         [ 0.1000, 10.6559, 11.4097],
         [ 0.1000, 10.6559,  9.6225]],
        [[ 0.1000, 10.6981, 14.1388],
         [ 0.1000, 10.6981, 11.6667],
         [ 0.1000, 10.6981, 16.5685],
         ...,
         [ 0.1000, 10.6981, 20.6770],
         [ 0.1000, 10.6981, 12.2231],
         [ 0.1000, 10.6981, 11.6275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9186],
         [0.1000, 1.0531, 0.8920],
         [0.1000, 1.0531, 0.9822],
         ...,
         [0.1000, 1.0531, 1.0961],
         [0.1000, 1.0531, 0.8895],
         [0.1000, 1.0531, 0.9574]],
        [[0.1000, 1.0495, 0.8649],
         [0.1000, 1.0495, 0.8193],
         [0.1000, 1.0495, 0.8933],
         ...,
         [0.1000, 1.0495, 0.9400],
         [0.1000, 1.0495, 0.8331],
         [0.1000, 1.0495, 0.7968]],
        [[0.1000, 1.0490, 0.8590],
         [0.1000, 1.0490, 0.8120],
         [0.1000, 1.0490, 0.8841],
         ...,
         [0.1000, 1.0490, 0.9249],
         [0.1000, 1.0490, 0.8271],
         [0.1000, 1.0490, 0.7841]],
        ...,
        [[0.1000, 1.0485, 0.8520],
         [0.1000, 1.0485, 0.8034],
         [0.1000, 1.0485, 0.8732],
         ...,
         [0.1000, 1.0485, 0.9074],
         [0.1000, 1.0485, 0.8199],
         [0.1000, 1.0485, 0.7698]],
        [[0.1000, 1.0499, 0.8704],
         [0.1000, 1.0499, 0.8263],
         [0.1000, 1.0499, 0.9021],
         ...,
         [0.1000, 1.0499, 0.9546],
         [0.1000, 1.0499, 0.8388],
         [0.1000, 1.0499, 0.8097]],
        [[0.1000, 1.0508, 0.8832],
         [0.1000, 1.0508, 0.8429],
         [0.1000, 1.0508, 0.9227],
         ...,
         [0.1000, 1.0508, 0.9895],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.2217],
         [ 0.1000, 10.8051, 16.9892],
         [ 0.1000, 10.8051, 19.9065],
         ...,
         [ 0.1000, 10.8051, 26.6895],
         [ 0.1000, 10.8051, 14.9946],
         [ 0.1000, 10.8051, 18.6112]],
        [[ 0.1000, 10.6368, 10.8482],
         [ 0.1000, 10.6368,  9.2347],
         [ 0.1000, 10.6368, 14.2769],
         ...,
         [ 0.1000, 10.6368, 16.8443],
         [ 0.1000, 10.6368, 10.6820],
         [ 0.1000, 10.6368,  8.8902]],
        [[ 0.1000, 10.6161, 10.4027],
         [ 0.1000, 10.6161,  8.5634],
         [ 0.1000, 10.6161, 13.7013],
         ...,
         [ 0.1000, 10.6161, 15.9115],
         [ 0.1000, 10.6161, 10.2428],
         [ 0.1000, 10.6161,  8.1132]],
        ...,
        [[ 0.1000, 10.5905,  9.8752],
         [ 0.1000, 10.5905,  7.7978],
         [ 0.1000, 10.5905, 13.0191],
         ...,
         [ 0.1000, 10.5905, 14.8251],
         [ 0.1000, 10.5905,  9.7227],
         [ 0.1000, 10.5905,  7.2426]],
        [[ 0.1000, 10.6559, 11.2764],
         [ 0.1000, 10.6559,  9.9010],
         [ 0.1000, 10.6559, 14.8297],
         ...,
         [ 0.1000, 10.6559, 17.7541],
         [ 0.1000, 10.6559, 11.1041],
         [ 0.1000, 10.6559,  9.6735]],
        [[ 0.1000, 10.6981, 12.2820],
         [ 0.1000, 10.6981, 11.5464],
         [ 0.1000, 10.6981, 16.1264],
         ...,
         [ 0.1000, 10.6981, 19.9392],
         [ 0.1000, 10.6981, 12.0956],
         [ 0.1000, 10.6981, 11.6547]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9020],
         [0.1000, 1.0531, 0.9308],
         [0.1000, 1.0531, 0.9782],
         ...,
         [0.1000, 1.0531, 1.0886],
         [0.1000, 1.0531, 0.8983],
         [0.1000, 1.0531, 0.9572]],
        [[0.1000, 1.0495, 0.8309],
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.8867],
         ...,
         [0.1000, 1.0495, 0.9284],
         [0.1000, 1.0495, 0.8282],
         [0.1000, 1.0495, 0.7991]],
        [[0.1000, 1.0490, 0.8237],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.8773],
         ...,
         [0.1000, 1.0490, 0.9133],
         [0.1000, 1.0490, 0.8211],
         [0.1000, 1.0490, 0.7864]],
        ...,
        [[0.1000, 1.0485, 0.8151],
         [0.1000, 1.0485, 0.7813],
         [0.1000, 1.0485, 0.8662],
         ...,
         [0.1000, 1.0485, 0.8956],
         [0.1000, 1.0485, 0.8126],
         [0.1000, 1.0485, 0.7723]],
        [[0.1000, 1.0499, 0.8379],
         [0.1000, 1.0499, 0.8155],
         [0.1000, 1.0499, 0.8957],
         ...,
         [0.1000, 1.0499, 0.9432],
         [0.1000, 1.0499, 0.8351],
         [0.1000, 1.0499, 0.8118]],
        [[0.1000, 1.0508, 0.8542],
         [0.1000, 1.0508, 0.8423],
         [0.1000, 1.0508, 0.9167],
         ...,
         [0.1000, 1.0508, 0.9788],
         [0.1000, 1.0508, 0.8512],
         [0.1000, 1.0508, 0.8440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.1537],
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 18.9826],
         ...,
         [ 0.1000, 10.8051, 25.6717],
         [ 0.1000, 10.8051, 15.5412],
         [ 0.1000, 10.8051, 17.9560]],
        [[ 0.1000, 10.6368,  9.4949],
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 13.2377],
         ...,
         [ 0.1000, 10.6368, 15.3437],
         [ 0.1000, 10.6368, 10.1981],
         [ 0.1000, 10.6368,  9.0759]],
        [[ 0.1000, 10.6161,  8.8904],
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 12.6600],
         ...,
         [ 0.1000, 10.6161, 14.3966],
         [ 0.1000, 10.6161,  9.6799],
         [ 0.1000, 10.6161,  8.3409]],
        ...,
        [[ 0.1000, 10.5905,  8.1934],
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 11.9779],
         ...,
         [ 0.1000, 10.5905, 13.3020],
         [ 0.1000, 10.5905,  9.0732],
         [ 0.1000, 10.5905,  7.5107]],
        [[ 0.1000, 10.6559, 10.0894],
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 13.7944],
         ...,
         [ 0.1000, 10.6559, 16.2733],
         [ 0.1000, 10.6559, 10.7011],
         [ 0.1000, 10.6559,  9.8120]],
        [[ 0.1000, 10.6981, 11.5363],
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 15.1072],
         ...,
         [ 0.1000, 10.6981, 18.5288],
         [ 0.1000, 10.6981, 11.9007],
         [ 0.1000, 10.6981, 11.6543]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9098],
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9558],
         ...,
         [0.1000, 1.0531, 1.0646],
         [0.1000, 1.0531, 0.8999],
         [0.1000, 1.0531, 0.9391]],
        [[0.1000, 1.0495, 0.8015],
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8624],
         ...,
         [0.1000, 1.0495, 0.8967],
         [0.1000, 1.0495, 0.8130],
         [0.1000, 1.0495, 0.7947]],
        [[0.1000, 1.0490, 0.7917],
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8530],
         ...,
         [0.1000, 1.0490, 0.8813],
         [0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.7828]],
        ...,
        [[0.1000, 1.0485, 0.7804],
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8419],
         ...,
         [0.1000, 1.0485, 0.8635],
         [0.1000, 1.0485, 0.7947],
         [0.1000, 1.0485, 0.7693]],
        [[0.1000, 1.0499, 0.8112],
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8715],
         ...,
         [0.1000, 1.0499, 0.9118],
         [0.1000, 1.0499, 0.8212],
         [0.1000, 1.0499, 0.8067]],
        [[0.1000, 1.0508, 0.8347],
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8928],
         ...,
         [0.1000, 1.0508, 0.9485],
         [0.1000, 1.0508, 0.8407],
         [0.1000, 1.0508, 0.8367]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.1211],
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 17.0394],
         ...,
         [ 0.1000, 10.8051, 22.0820],
         [ 0.1000, 10.8051, 14.2110],
         [ 0.1000, 10.8051, 16.5087]],
        [[ 0.1000, 10.6368,  9.1459],
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 11.4974],
         ...,
         [ 0.1000, 10.6368, 13.0364],
         [ 0.1000, 10.6368, 10.5459],
         [ 0.1000, 10.6368,  9.5263]],
        [[ 0.1000, 10.6161,  8.4628],
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 10.9509],
         ...,
         [ 0.1000, 10.6161, 12.2131],
         [ 0.1000, 10.6161, 10.1636],
         [ 0.1000, 10.6161,  8.8994]],
        ...,
        [[ 0.1000, 10.5905,  7.6856],
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 10.3086],
         ...,
         [ 0.1000, 10.5905, 11.2631],
         [ 0.1000, 10.5905,  9.7084],
         [ 0.1000, 10.5905,  8.1785]],
        [[ 0.1000, 10.6559,  9.8253],
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 12.0261],
         ...,
         [ 0.1000, 10.6559, 13.8458],
         [ 0.1000, 10.6559, 10.9116],
         [ 0.1000, 10.6559, 10.1441]],
        [[ 0.1000, 10.6981, 11.5085],
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 13.2805],
         ...,
         [ 0.1000, 10.6981, 15.8139],
         [ 0.1000, 10.6981, 11.7641],
         [ 0.1000, 10.6981, 11.6529]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9256],
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9242],
         ...,
         [0.1000, 1.0531, 1.0063],
         [0.1000, 1.0531, 0.8782],
         [0.1000, 1.0531, 0.9156]],
        [[0.1000, 1.0495, 0.7959],
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8341],
         ...,
         [0.1000, 1.0495, 0.8591],
         [0.1000, 1.0495, 0.8186],
         [0.1000, 1.0495, 0.8020]],
        [[0.1000, 1.0490, 0.7847],
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8252],
         ...,
         [0.1000, 1.0490, 0.8457],
         [0.1000, 1.0490, 0.8124],
         [0.1000, 1.0490, 0.7918]],
        ...,
        [[0.1000, 1.0485, 0.7721],
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8148],
         ...,
         [0.1000, 1.0485, 0.8303],
         [0.1000, 1.0485, 0.8050],
         [0.1000, 1.0485, 0.7801]],
        [[0.1000, 1.0499, 0.8069],
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8427],
         ...,
         [0.1000, 1.0499, 0.8723],
         [0.1000, 1.0499, 0.8246],
         [0.1000, 1.0499, 0.8121]],
        [[0.1000, 1.0508, 0.8343],
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8631],
         ...,
         [0.1000, 1.0508, 0.9043],
         [0.1000, 1.0508, 0.8384],
         [0.1000, 1.0508, 0.8366]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.5630],
         [ 0.1000, 10.8051, 18.7207],
         [ 0.1000, 10.8051, 15.7110],
         ...,
         [ 0.1000, 10.8051, 17.8152],
         [ 0.1000, 10.8051, 16.6860],
         [ 0.1000, 10.8051, 16.3458]],
        [[ 0.1000, 10.6368,  9.2404],
         [ 0.1000, 10.6368,  8.9142],
         [ 0.1000, 10.6368, 10.7982],
         ...,
         [ 0.1000, 10.6368, 11.9586],
         [ 0.1000, 10.6368,  9.4567],
         [ 0.1000, 10.6368,  9.5952]],
        [[ 0.1000, 10.6161,  8.5964],
         [ 0.1000, 10.6161,  8.1319],
         [ 0.1000, 10.6161, 10.3085],
         ...,
         [ 0.1000, 10.6161, 11.3829],
         [ 0.1000, 10.6161,  8.8148],
         [ 0.1000, 10.6161,  8.9828]],
        ...,
        [[ 0.1000, 10.5905,  7.8592],
         [ 0.1000, 10.5905,  7.2557],
         [ 0.1000, 10.5905,  9.7313],
         ...,
         [ 0.1000, 10.5905, 10.7067],
         [ 0.1000, 10.5905,  8.0783],
         [ 0.1000, 10.5905,  8.2769]],
        [[ 0.1000, 10.6559,  9.8777],
         [ 0.1000, 10.6559,  9.7031],
         [ 0.1000, 10.6559, 11.2711],
         ...,
         [ 0.1000, 10.6559, 12.5160],
         [ 0.1000, 10.6559, 10.0908],
         [ 0.1000, 10.6559, 10.1975]],
        [[ 0.1000, 10.6981, 11.4439],
         [ 0.1000, 10.6981, 11.6997],
         [ 0.1000, 10.6981, 12.3889],
         ...,
         [ 0.1000, 10.6981, 13.8396],
         [ 0.1000, 10.6981, 11.6444],
         [ 0.1000, 10.6981, 11.6638]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9239],
         [0.1000, 1.0531, 0.9590],
         [0.1000, 1.0531, 0.9100],
         ...,
         [0.1000, 1.0531, 0.9442],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9203]],
        [[0.1000, 1.0495, 0.8048],
         [0.1000, 1.0495, 0.7995],
         [0.1000, 1.0495, 0.8301],
         ...,
         [0.1000, 1.0495, 0.8490],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8105]],
        [[0.1000, 1.0490, 0.7943],
         [0.1000, 1.0490, 0.7867],
         [0.1000, 1.0490, 0.8221],
         ...,
         [0.1000, 1.0490, 0.8396],
         [0.1000, 1.0490, 0.7978],
         [0.1000, 1.0490, 0.8006]],
        ...,
        [[0.1000, 1.0485, 0.7823],
         [0.1000, 1.0485, 0.7725],
         [0.1000, 1.0485, 0.8127],
         ...,
         [0.1000, 1.0485, 0.8286],
         [0.1000, 1.0485, 0.7859],
         [0.1000, 1.0485, 0.7891]],
        [[0.1000, 1.0499, 0.8151],
         [0.1000, 1.0499, 0.8123],
         [0.1000, 1.0499, 0.8378],
         ...,
         [0.1000, 1.0499, 0.8580],
         [0.1000, 1.0499, 0.8186],
         [0.1000, 1.0499, 0.8203]],
        [[0.1000, 1.0508, 0.8406],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8560],
         ...,
         [0.1000, 1.0508, 0.8796],
         [0.1000, 1.0508, 0.8439],
         [0.1000, 1.0508, 0.8442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8705],
         [ 0.1000, 10.8051, 17.9573],
         [ 0.1000, 10.8051, 15.4255],
         ...,
         [ 0.1000, 10.8051, 17.1825],
         [ 0.1000, 10.8051, 17.2981],
         [ 0.1000, 10.8051, 16.6065]],
        [[ 0.1000, 10.6368,  9.4774],
         [ 0.1000, 10.6368,  9.0756],
         [ 0.1000, 10.6368, 10.6190],
         ...,
         [ 0.1000, 10.6368, 11.7072],
         [ 0.1000, 10.6368,  9.2513],
         [ 0.1000, 10.6368,  9.4872]],
        [[ 0.1000, 10.6161,  8.8914],
         [ 0.1000, 10.6161,  8.3405],
         [ 0.1000, 10.6161, 10.1393],
         ...,
         [ 0.1000, 10.6161, 11.1642],
         [ 0.1000, 10.6161,  8.5616],
         [ 0.1000, 10.6161,  8.8520]],
        ...,
        [[ 0.1000, 10.5905,  8.2143],
         [ 0.1000, 10.5905,  7.5103],
         [ 0.1000, 10.5905,  9.5740],
         ...,
         [ 0.1000, 10.5905, 10.5250],
         [ 0.1000, 10.5905,  7.7767],
         [ 0.1000, 10.5905,  8.1224]],
        [[ 0.1000, 10.6559, 10.0526],
         [ 0.1000, 10.6559,  9.8118],
         [ 0.1000, 10.6559, 11.0819],
         ...,
         [ 0.1000, 10.6559, 12.2320],
         [ 0.1000, 10.6559,  9.9372],
         [ 0.1000, 10.6559, 10.1141]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6543],
         [ 0.1000, 10.6981, 12.1761],
         ...,
         [ 0.1000, 10.6981, 13.4747],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6478]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9180],
         [0.1000, 1.0531, 0.9520],
         [0.1000, 1.0531, 0.9108],
         ...,
         [0.1000, 1.0531, 0.9394],
         [0.1000, 1.0531, 0.9413],
         [0.1000, 1.0531, 0.9300]],
        [[0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8075],
         [0.1000, 1.0495, 0.8326],
         ...,
         [0.1000, 1.0495, 0.8503],
         [0.1000, 1.0495, 0.8104],
         [0.1000, 1.0495, 0.8142]],
        [[0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.7956],
         [0.1000, 1.0490, 0.8248],
         ...,
         [0.1000, 1.0490, 0.8415],
         [0.1000, 1.0490, 0.7992],
         [0.1000, 1.0490, 0.8039]],
        ...,
        [[0.1000, 1.0485, 0.7935],
         [0.1000, 1.0485, 0.7821],
         [0.1000, 1.0485, 0.8156],
         ...,
         [0.1000, 1.0485, 0.8311],
         [0.1000, 1.0485, 0.7864],
         [0.1000, 1.0485, 0.7920]],
        [[0.1000, 1.0499, 0.8234],
         [0.1000, 1.0499, 0.8195],
         [0.1000, 1.0499, 0.8401],
         ...,
         [0.1000, 1.0499, 0.8589],
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8244]],
        [[0.1000, 1.0508, 0.8461],
         [0.1000, 1.0508, 0.8495],
         [0.1000, 1.0508, 0.8579],
         ...,
         [0.1000, 1.0508, 0.8791],
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 14.5804],
         [ 0.1000, 10.8051, 16.0657],
         [ 0.1000, 10.8051, 15.2422],
         ...,
         [ 0.1000, 10.8051, 15.5440],
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 17.8473]],
        [[ 0.1000, 10.6368, 10.3532],
         [ 0.1000, 10.6368,  9.7266],
         [ 0.1000, 10.6368,  9.7595],
         ...,
         [ 0.1000, 10.6368, 10.3373],
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368,  9.1023]],
        [[ 0.1000, 10.6161,  9.9235],
         [ 0.1000, 10.6161,  9.1408],
         [ 0.1000, 10.6161,  9.2355],
         ...,
         [ 0.1000, 10.6161,  9.8283],
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161,  8.3744]],
        ...,
        [[ 0.1000, 10.5905,  9.4150],
         [ 0.1000, 10.5905,  8.4625],
         [ 0.1000, 10.5905,  8.6241],
         ...,
         [ 0.1000, 10.5905,  9.2312],
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905,  7.5513]],
        [[ 0.1000, 10.6559, 10.7663],
         [ 0.1000, 10.6559, 10.3008],
         [ 0.1000, 10.6559, 10.2697],
         ...,
         [ 0.1000, 10.6559, 10.8306],
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559,  9.8304]],
        [[ 0.1000, 10.6981, 11.7373],
         [ 0.1000, 10.6981, 11.6905],
         [ 0.1000, 10.6981, 11.4917],
         ...,
         [ 0.1000, 10.6981, 12.0041],
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 11.6497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.8842],
         [0.1000, 1.0531, 0.9084],
         [0.1000, 1.0531, 0.8950],
         ...,
         [0.1000, 1.0531, 0.8999],
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9374]],
        [[0.1000, 1.0495, 0.8155],
         [0.1000, 1.0495, 0.8053],
         [0.1000, 1.0495, 0.8058],
         ...,
         [0.1000, 1.0495, 0.8152],
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.7951]],
        [[0.1000, 1.0490, 0.8085],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7973],
         ...,
         [0.1000, 1.0490, 0.8070],
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.7833]],
        ...,
        [[0.1000, 1.0485, 0.8002],
         [0.1000, 1.0485, 0.7847],
         [0.1000, 1.0485, 0.7874],
         ...,
         [0.1000, 1.0485, 0.7972],
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.7699]],
        [[0.1000, 1.0499, 0.8222],
         [0.1000, 1.0499, 0.8146],
         [0.1000, 1.0499, 0.8141],
         ...,
         [0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8070]],
        [[0.1000, 1.0508, 0.8380],
         [0.1000, 1.0508, 0.8372],
         [0.1000, 1.0508, 0.8340],
         ...,
         [0.1000, 1.0508, 0.8423],
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8366]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 14.5915],
         [ 0.1000, 10.8051, 15.5967],
         [ 0.1000, 10.8051, 17.2521],
         ...,
         [ 0.1000, 10.8051, 16.0203],
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 18.7570]],
        [[ 0.1000, 10.6368, 10.3628],
         [ 0.1000, 10.6368,  9.9958],
         [ 0.1000, 10.6368,  9.0413],
         ...,
         [ 0.1000, 10.6368,  9.4434],
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368,  8.9074]],
        [[ 0.1000, 10.6161,  9.9330],
         [ 0.1000, 10.6161,  9.4601],
         [ 0.1000, 10.6161,  8.3463],
         ...,
         [ 0.1000, 10.6161,  8.8453],
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161,  8.1230]],
        ...,
        [[ 0.1000, 10.5905,  9.4242],
         [ 0.1000, 10.5905,  8.8351],
         [ 0.1000, 10.5905,  7.5575],
         ...,
         [ 0.1000, 10.5905,  8.1554],
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905,  7.2448]],
        [[ 0.1000, 10.6559, 10.7761],
         [ 0.1000, 10.6559, 10.5171],
         [ 0.1000, 10.6559,  9.7342],
         ...,
         [ 0.1000, 10.6559, 10.0314],
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559,  9.6987]],
        [[ 0.1000, 10.6981, 11.7474],
         [ 0.1000, 10.6981, 11.7659],
         [ 0.1000, 10.6981, 11.4569],
         ...,
         [ 0.1000, 10.6981, 11.4617],
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 11.7024]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.8844],
         [0.1000, 1.0531, 0.9008],
         [0.1000, 1.0531, 0.9277],
         ...,
         [0.1000, 1.0531, 0.9077],
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9522]],
        [[0.1000, 1.0495, 0.8156],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.7942],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.7920]],
        [[0.1000, 1.0490, 0.8087],
         [0.1000, 1.0490, 0.8010],
         [0.1000, 1.0490, 0.7829],
         ...,
         [0.1000, 1.0490, 0.7910],
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.7792]],
        ...,
        [[0.1000, 1.0485, 0.8004],
         [0.1000, 1.0485, 0.7908],
         [0.1000, 1.0485, 0.7700],
         ...,
         [0.1000, 1.0485, 0.7797],
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.7649]],
        [[0.1000, 1.0499, 0.8224],
         [0.1000, 1.0499, 0.8182],
         [0.1000, 1.0499, 0.8054],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8048]],
        [[0.1000, 1.0508, 0.8382],
         [0.1000, 1.0508, 0.8385],
         [0.1000, 1.0508, 0.8334],
         ...,
         [0.1000, 1.0508, 0.8335],
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8374]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.5235],
         [ 0.1000, 10.8051, 14.7110],
         [ 0.1000, 10.8051, 20.0374],
         ...,
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 17.8172],
         [ 0.1000, 10.8051, 20.0374]],
        [[ 0.1000, 10.6368,  9.6760],
         [ 0.1000, 10.6368, 10.8781],
         [ 0.1000, 10.6368,  8.7087],
         ...,
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368,  9.1098],
         [ 0.1000, 10.6368,  8.7087]],
        [[ 0.1000, 10.6161,  9.1260],
         [ 0.1000, 10.6161, 10.4791],
         [ 0.1000, 10.6161,  7.8551],
         ...,
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161,  8.3838],
         [ 0.1000, 10.6161,  7.8551]],
        ...,
        [[ 0.1000, 10.5905,  8.4867],
         [ 0.1000, 10.5905, 10.0042],
         [ 0.1000, 10.5905,  6.9111],
         ...,
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905,  7.5628],
         [ 0.1000, 10.5905,  6.9111]],
        [[ 0.1000, 10.6559, 10.2131],
         [ 0.1000, 10.6559, 11.2599],
         [ 0.1000, 10.6559,  9.5788],
         ...,
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559,  9.8356],
         [ 0.1000, 10.6559,  9.5788]],
        [[ 0.1000, 10.6981, 11.5062],
         [ 0.1000, 10.6981, 12.1505],
         [ 0.1000, 10.6981, 11.8189],
         ...,
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 11.6486],
         [ 0.1000, 10.6981, 11.8189]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.8996],
         [0.1000, 1.0531, 0.8864],
         [0.1000, 1.0531, 0.9730],
         ...,
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9369],
         [0.1000, 1.0531, 0.9730]],
        [[0.1000, 1.0495, 0.8045],
         [0.1000, 1.0495, 0.8240],
         [0.1000, 1.0495, 0.7887],
         ...,
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.7953],
         [0.1000, 1.0495, 0.7887]],
        [[0.1000, 1.0490, 0.7955],
         [0.1000, 1.0490, 0.8175],
         [0.1000, 1.0490, 0.7749],
         ...,
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.7835],
         [0.1000, 1.0490, 0.7749]],
        ...,
        [[0.1000, 1.0485, 0.7851],
         [0.1000, 1.0485, 0.8098],
         [0.1000, 1.0485, 0.7595],
         ...,
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.7701],
         [0.1000, 1.0485, 0.7595]],
        [[0.1000, 1.0499, 0.8132],
         [0.1000, 1.0499, 0.8302],
         [0.1000, 1.0499, 0.8029],
         ...,
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8071],
         [0.1000, 1.0499, 0.8029]],
        [[0.1000, 1.0508, 0.8342],
         [0.1000, 1.0508, 0.8447],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8366],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.7593],
         [ 0.1000, 10.8051, 15.8170],
         [ 0.1000, 10.8051, 18.2110],
         ...,
         [ 0.1000, 10.8051, 17.7117],
         [ 0.1000, 10.8051, 17.2656],
         [ 0.1000, 10.8051, 18.4800]],
        [[ 0.1000, 10.6368,  9.5334],
         [ 0.1000, 10.6368,  9.8603],
         [ 0.1000, 10.6368,  9.0177],
         ...,
         [ 0.1000, 10.6368,  9.1365],
         [ 0.1000, 10.6368,  9.2610],
         [ 0.1000, 10.6368,  8.9610]],
        [[ 0.1000, 10.6161,  8.9583],
         [ 0.1000, 10.6161,  9.3000],
         [ 0.1000, 10.6161,  8.2662],
         ...,
         [ 0.1000, 10.6161,  8.4177],
         [ 0.1000, 10.6161,  8.5738],
         [ 0.1000, 10.6161,  8.1930]],
        ...,
        [[ 0.1000, 10.5905,  8.2925],
         [ 0.1000, 10.5905,  8.6487],
         [ 0.1000, 10.5905,  7.4201],
         ...,
         [ 0.1000, 10.5905,  7.6036],
         [ 0.1000, 10.5905,  7.7912],
         [ 0.1000, 10.5905,  7.3307]],
        [[ 0.1000, 10.6559, 10.0971],
         [ 0.1000, 10.6559, 10.4075],
         [ 0.1000, 10.6559,  9.7719],
         ...,
         [ 0.1000, 10.6559,  9.8545],
         [ 0.1000, 10.6559,  9.9443],
         [ 0.1000, 10.6559,  9.7338]],
        [[ 0.1000, 10.6981, 11.4616],
         [ 0.1000, 10.6981, 11.7247],
         [ 0.1000, 10.6981, 11.6669],
         ...,
         [ 0.1000, 10.6981, 11.6449],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6831]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9124],
         [0.1000, 1.0531, 0.9133],
         [0.1000, 1.0531, 0.9523],
         ...,
         [0.1000, 1.0531, 0.9441],
         [0.1000, 1.0531, 0.9369],
         [0.1000, 1.0531, 0.9566]],
        [[0.1000, 1.0495, 0.8111],
         [0.1000, 1.0495, 0.8164],
         [0.1000, 1.0495, 0.8027],
         ...,
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.8067],
         [0.1000, 1.0495, 0.8018]],
        [[0.1000, 1.0490, 0.8018],
         [0.1000, 1.0490, 0.8073],
         [0.1000, 1.0490, 0.7905],
         ...,
         [0.1000, 1.0490, 0.7930],
         [0.1000, 1.0490, 0.7955],
         [0.1000, 1.0490, 0.7893]],
        ...,
        [[0.1000, 1.0485, 0.7909],
         [0.1000, 1.0485, 0.7967],
         [0.1000, 1.0485, 0.7768],
         ...,
         [0.1000, 1.0485, 0.7797],
         [0.1000, 1.0485, 0.7828],
         [0.1000, 1.0485, 0.7753]],
        [[0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8253],
         [0.1000, 1.0499, 0.8150],
         ...,
         [0.1000, 1.0499, 0.8163],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8144]],
        [[0.1000, 1.0508, 0.8425],
         [0.1000, 1.0508, 0.8468],
         [0.1000, 1.0508, 0.8458],
         ...,
         [0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8461]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9299],
         [ 0.1000, 10.8051, 17.1562],
         [ 0.1000, 10.8051, 17.4301],
         ...,
         [ 0.1000, 10.8051, 17.0056],
         [ 0.1000, 10.8051, 17.1705],
         [ 0.1000, 10.8051, 17.6894]],
        [[ 0.1000, 10.6368,  9.4459],
         [ 0.1000, 10.6368,  9.2947],
         [ 0.1000, 10.6368,  9.2128],
         ...,
         [ 0.1000, 10.6368,  9.3434],
         [ 0.1000, 10.6368,  9.2902],
         [ 0.1000, 10.6368,  9.1423]],
        [[ 0.1000, 10.6161,  8.8542],
         [ 0.1000, 10.6161,  8.6156],
         [ 0.1000, 10.6161,  8.5136],
         ...,
         [ 0.1000, 10.6161,  8.6758],
         [ 0.1000, 10.6161,  8.6100],
         [ 0.1000, 10.6161,  8.4250]],
        ...,
        [[ 0.1000, 10.5905,  8.1710],
         [ 0.1000, 10.5905,  7.8413],
         [ 0.1000, 10.5905,  7.7191],
         ...,
         [ 0.1000, 10.5905,  7.9131],
         [ 0.1000, 10.5905,  7.8346],
         [ 0.1000, 10.5905,  7.6125]],
        [[ 0.1000, 10.6559, 10.0273],
         [ 0.1000, 10.6559,  9.9691],
         [ 0.1000, 10.6559,  9.9092],
         ...,
         [ 0.1000, 10.6559, 10.0053],
         [ 0.1000, 10.6559,  9.9658],
         [ 0.1000, 10.6559,  9.8586]],
        [[ 0.1000, 10.6981, 11.4399],
         [ 0.1000, 10.6981, 11.6355],
         [ 0.1000, 10.6981, 11.6379],
         ...,
         [ 0.1000, 10.6981, 11.6365],
         [ 0.1000, 10.6981, 11.6355],
         [ 0.1000, 10.6981, 11.6442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9212],
         [0.1000, 1.0531, 0.9411],
         [0.1000, 1.0531, 0.9456],
         ...,
         [0.1000, 1.0531, 0.9387],
         [0.1000, 1.0531, 0.9414],
         [0.1000, 1.0531, 0.9498]],
        [[0.1000, 1.0495, 0.8157],
         [0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8119],
         ...,
         [0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8108]],
        [[0.1000, 1.0490, 0.8061],
         [0.1000, 1.0490, 0.8022],
         [0.1000, 1.0490, 0.8006],
         ...,
         [0.1000, 1.0490, 0.8032],
         [0.1000, 1.0490, 0.8021],
         [0.1000, 1.0490, 0.7991]],
        ...,
        [[0.1000, 1.0485, 0.7950],
         [0.1000, 1.0485, 0.7896],
         [0.1000, 1.0485, 0.7876],
         ...,
         [0.1000, 1.0485, 0.7908],
         [0.1000, 1.0485, 0.7895],
         [0.1000, 1.0485, 0.7859]],
        [[0.1000, 1.0499, 0.8252],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8233],
         ...,
         [0.1000, 1.0499, 0.8248],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8224]],
        [[0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8513],
         [0.1000, 1.0508, 0.8514],
         ...,
         [0.1000, 1.0508, 0.8514],
         [0.1000, 1.0508, 0.8513],
         [0.1000, 1.0508, 0.8515]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8021],
         [ 0.1000, 10.8051, 16.1279],
         [ 0.1000, 10.8051, 17.9972],
         ...,
         [ 0.1000, 10.8051, 17.5181],
         [ 0.1000, 10.8051, 17.2405],
         [ 0.1000, 10.8051, 18.2641]],
        [[ 0.1000, 10.6368,  9.5101],
         [ 0.1000, 10.6368,  9.6959],
         [ 0.1000, 10.6368,  9.0662],
         ...,
         [ 0.1000, 10.6368,  9.1882],
         [ 0.1000, 10.6368,  9.2686],
         [ 0.1000, 10.6368,  9.0061]],
        [[ 0.1000, 10.6161,  8.9307],
         [ 0.1000, 10.6161,  9.1040],
         [ 0.1000, 10.6161,  8.3284],
         ...,
         [ 0.1000, 10.6161,  8.4827],
         [ 0.1000, 10.6161,  8.5832],
         [ 0.1000, 10.6161,  8.2514]],
        ...,
        [[ 0.1000, 10.5905,  8.2604],
         [ 0.1000, 10.5905,  8.4193],
         [ 0.1000, 10.5905,  7.4957],
         ...,
         [ 0.1000, 10.5905,  7.6820],
         [ 0.1000, 10.5905,  7.8026],
         [ 0.1000, 10.5905,  7.4020]],
        [[ 0.1000, 10.6559, 10.0783],
         [ 0.1000, 10.6559, 10.2764],
         [ 0.1000, 10.6559,  9.8052],
         ...,
         [ 0.1000, 10.6559,  9.8914],
         [ 0.1000, 10.6559,  9.9499],
         [ 0.1000, 10.6559,  9.7640]],
        [[ 0.1000, 10.6981, 11.4553],
         [ 0.1000, 10.6981, 11.6836],
         [ 0.1000, 10.6981, 11.6561],
         ...,
         [ 0.1000, 10.6981, 11.6396],
         [ 0.1000, 10.6981, 11.6357],
         [ 0.1000, 10.6981, 11.6699]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9146],
         [0.1000, 1.0531, 0.9199],
         [0.1000, 1.0531, 0.9503],
         ...,
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9380],
         [0.1000, 1.0531, 0.9546]],
        [[0.1000, 1.0495, 0.8123],
         [0.1000, 1.0495, 0.8153],
         [0.1000, 1.0495, 0.8050],
         ...,
         [0.1000, 1.0495, 0.8070],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8041]],
        [[0.1000, 1.0490, 0.8028],
         [0.1000, 1.0490, 0.8057],
         [0.1000, 1.0490, 0.7930],
         ...,
         [0.1000, 1.0490, 0.7956],
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7918]],
        ...,
        [[0.1000, 1.0485, 0.7919],
         [0.1000, 1.0485, 0.7945],
         [0.1000, 1.0485, 0.7795],
         ...,
         [0.1000, 1.0485, 0.7825],
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7780]],
        [[0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8247],
         [0.1000, 1.0499, 0.8171],
         ...,
         [0.1000, 1.0499, 0.8185],
         [0.1000, 1.0499, 0.8194],
         [0.1000, 1.0499, 0.8164]],
        [[0.1000, 1.0508, 0.8439],
         [0.1000, 1.0508, 0.8476],
         [0.1000, 1.0508, 0.8472],
         ...,
         [0.1000, 1.0508, 0.8469],
         [0.1000, 1.0508, 0.8468],
         [0.1000, 1.0508, 0.8474]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9266],
         [ 0.1000, 10.8051, 17.3135],
         [ 0.1000, 10.8051, 17.4839],
         ...,
         [ 0.1000, 10.8051, 17.2443],
         [ 0.1000, 10.8051, 17.3078],
         [ 0.1000, 10.8051, 17.6526]],
        [[ 0.1000, 10.6368,  9.4446],
         [ 0.1000, 10.6368,  9.2467],
         [ 0.1000, 10.6368,  9.1977],
         ...,
         [ 0.1000, 10.6368,  9.2675],
         [ 0.1000, 10.6368,  9.2484],
         [ 0.1000, 10.6368,  9.1519]],
        [[ 0.1000, 10.6161,  8.8530],
         [ 0.1000, 10.6161,  8.5559],
         [ 0.1000, 10.6161,  8.4946],
         ...,
         [ 0.1000, 10.6161,  8.5818],
         [ 0.1000, 10.6161,  8.5580],
         [ 0.1000, 10.6161,  8.4371]],
        ...,
        [[ 0.1000, 10.5905,  8.1700],
         [ 0.1000, 10.5905,  7.7699],
         [ 0.1000, 10.5905,  7.6963],
         ...,
         [ 0.1000, 10.5905,  7.8008],
         [ 0.1000, 10.5905,  7.7724],
         [ 0.1000, 10.5905,  7.6271]],
        [[ 0.1000, 10.6559, 10.0258],
         [ 0.1000, 10.6559,  9.9339],
         [ 0.1000, 10.6559,  9.8983],
         ...,
         [ 0.1000, 10.6559,  9.9491],
         [ 0.1000, 10.6559,  9.9351],
         [ 0.1000, 10.6559,  9.8655]],
        [[ 0.1000, 10.6981, 11.4380],
         [ 0.1000, 10.6981, 11.6363],
         [ 0.1000, 10.6981, 11.6389],
         ...,
         [ 0.1000, 10.6981, 11.6358],
         [ 0.1000, 10.6981, 11.6362],
         [ 0.1000, 10.6981, 11.6431]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9213],
         [0.1000, 1.0531, 0.9439],
         [0.1000, 1.0531, 0.9467],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9438],
         [0.1000, 1.0531, 0.9494]],
        [[0.1000, 1.0495, 0.8159],
         [0.1000, 1.0495, 0.8127],
         [0.1000, 1.0495, 0.8119],
         ...,
         [0.1000, 1.0495, 0.8130],
         [0.1000, 1.0495, 0.8127],
         [0.1000, 1.0495, 0.8111]],
        [[0.1000, 1.0490, 0.8063],
         [0.1000, 1.0490, 0.8014],
         [0.1000, 1.0490, 0.8005],
         ...,
         [0.1000, 1.0490, 0.8019],
         [0.1000, 1.0490, 0.8015],
         [0.1000, 1.0490, 0.7995]],
        ...,
        [[0.1000, 1.0485, 0.7952],
         [0.1000, 1.0485, 0.7887],
         [0.1000, 1.0485, 0.7875],
         ...,
         [0.1000, 1.0485, 0.7892],
         [0.1000, 1.0485, 0.7887],
         [0.1000, 1.0485, 0.7863]],
        [[0.1000, 1.0499, 0.8254],
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8233],
         ...,
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8227]],
        [[0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8515],
         [0.1000, 1.0508, 0.8516],
         ...,
         [0.1000, 1.0508, 0.8515],
         [0.1000, 1.0508, 0.8515],
         [0.1000, 1.0508, 0.8517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8272],
         [ 0.1000, 10.8051, 16.3527],
         [ 0.1000, 10.8051, 17.8859],
         ...,
         [ 0.1000, 10.8051, 17.4594],
         [ 0.1000, 10.8051, 17.2546],
         [ 0.1000, 10.8051, 18.1310]],
        [[ 0.1000, 10.6368,  9.4962],
         [ 0.1000, 10.6368,  9.5921],
         [ 0.1000, 10.6368,  9.0928],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2644],
         [ 0.1000, 10.6368,  9.0354]],
        [[ 0.1000, 10.6161,  8.9143],
         [ 0.1000, 10.6161,  8.9792],
         [ 0.1000, 10.6161,  8.3623],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5779],
         [ 0.1000, 10.6161,  8.2891]],
        ...,
        [[ 0.1000, 10.5905,  8.2413],
         [ 0.1000, 10.5905,  8.2726],
         [ 0.1000, 10.5905,  7.5367],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7962],
         [ 0.1000, 10.5905,  7.4479]],
        [[ 0.1000, 10.6559, 10.0671],
         [ 0.1000, 10.6559, 10.1951],
         [ 0.1000, 10.6559,  9.8237],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9468],
         [ 0.1000, 10.6559,  9.7840]],
        [[ 0.1000, 10.6981, 11.4513],
         [ 0.1000, 10.6981, 11.6632],
         [ 0.1000, 10.6981, 11.6513],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6358],
         [ 0.1000, 10.6981, 11.6627]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9160],
         [0.1000, 1.0531, 0.9245],
         [0.1000, 1.0531, 0.9495],
         ...,
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9392],
         [0.1000, 1.0531, 0.9535]],
        [[0.1000, 1.0495, 0.8130],
         [0.1000, 1.0495, 0.8146],
         [0.1000, 1.0495, 0.8065],
         ...,
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8093],
         [0.1000, 1.0495, 0.8055]],
        [[0.1000, 1.0490, 0.8036],
         [0.1000, 1.0490, 0.8046],
         [0.1000, 1.0490, 0.7946],
         ...,
         [0.1000, 1.0490, 0.7969],
         [0.1000, 1.0490, 0.7981],
         [0.1000, 1.0490, 0.7934]],
        ...,
        [[0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7931],
         [0.1000, 1.0485, 0.7812],
         ...,
         [0.1000, 1.0485, 0.7839],
         [0.1000, 1.0485, 0.7854],
         [0.1000, 1.0485, 0.7797]],
        [[0.1000, 1.0499, 0.8223],
         [0.1000, 1.0499, 0.8244],
         [0.1000, 1.0499, 0.8184],
         ...,
         [0.1000, 1.0499, 0.8196],
         [0.1000, 1.0499, 0.8204],
         [0.1000, 1.0499, 0.8177]],
        [[0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8481],
         ...,
         [0.1000, 1.0508, 0.8479],
         [0.1000, 1.0508, 0.8478],
         [0.1000, 1.0508, 0.8483]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9403],
         [ 0.1000, 10.8051, 17.5231],
         [ 0.1000, 10.8051, 17.4744],
         ...,
         [ 0.1000, 10.8051, 17.3700],
         [ 0.1000, 10.8051, 17.4080],
         [ 0.1000, 10.8051, 17.5759]],
        [[ 0.1000, 10.6368,  9.4360],
         [ 0.1000, 10.6368,  9.1868],
         [ 0.1000, 10.6368,  9.2003],
         ...,
         [ 0.1000, 10.6368,  9.2301],
         [ 0.1000, 10.6368,  9.2191],
         [ 0.1000, 10.6368,  9.1724]],
        [[ 0.1000, 10.6161,  8.8430],
         [ 0.1000, 10.6161,  8.4810],
         [ 0.1000, 10.6161,  8.4980],
         ...,
         [ 0.1000, 10.6161,  8.5352],
         [ 0.1000, 10.6161,  8.5215],
         [ 0.1000, 10.6161,  8.4629]],
        ...,
        [[ 0.1000, 10.5905,  8.1586],
         [ 0.1000, 10.5905,  7.6799],
         [ 0.1000, 10.5905,  7.7003],
         ...,
         [ 0.1000, 10.5905,  7.7450],
         [ 0.1000, 10.5905,  7.7286],
         [ 0.1000, 10.5905,  7.6582]],
        [[ 0.1000, 10.6559, 10.0187],
         [ 0.1000, 10.6559,  9.8904],
         [ 0.1000, 10.6559,  9.9002],
         ...,
         [ 0.1000, 10.6559,  9.9217],
         [ 0.1000, 10.6559,  9.9138],
         [ 0.1000, 10.6559,  9.8801]],
        [[ 0.1000, 10.6981, 11.4351],
         [ 0.1000, 10.6981, 11.6397],
         [ 0.1000, 10.6981, 11.6387],
         ...,
         [ 0.1000, 10.6981, 11.6369],
         [ 0.1000, 10.6981, 11.6375],
         [ 0.1000, 10.6981, 11.6409]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9219],
         [0.1000, 1.0531, 0.9477],
         [0.1000, 1.0531, 0.9469],
         ...,
         [0.1000, 1.0531, 0.9452],
         [0.1000, 1.0531, 0.9458],
         [0.1000, 1.0531, 0.9485]],
        [[0.1000, 1.0495, 0.8161],
         [0.1000, 1.0495, 0.8121],
         [0.1000, 1.0495, 0.8123],
         ...,
         [0.1000, 1.0495, 0.8128],
         [0.1000, 1.0495, 0.8126],
         [0.1000, 1.0495, 0.8119]],
        [[0.1000, 1.0490, 0.8065],
         [0.1000, 1.0490, 0.8006],
         [0.1000, 1.0490, 0.8009],
         ...,
         [0.1000, 1.0490, 0.8015],
         [0.1000, 1.0490, 0.8013],
         [0.1000, 1.0490, 0.8003]],
        ...,
        [[0.1000, 1.0485, 0.7954],
         [0.1000, 1.0485, 0.7876],
         [0.1000, 1.0485, 0.7879],
         ...,
         [0.1000, 1.0485, 0.7886],
         [0.1000, 1.0485, 0.7884],
         [0.1000, 1.0485, 0.7872]],
        [[0.1000, 1.0499, 0.8256],
         [0.1000, 1.0499, 0.8235],
         [0.1000, 1.0499, 0.8237],
         ...,
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8234]],
        [[0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520],
         ...,
         [0.1000, 1.0508, 0.8519],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8472],
         [ 0.1000, 10.8051, 16.5488],
         [ 0.1000, 10.8051, 17.8081],
         ...,
         [ 0.1000, 10.8051, 17.4429],
         [ 0.1000, 10.8051, 17.2826],
         [ 0.1000, 10.8051, 18.0253]],
        [[ 0.1000, 10.6368,  9.4850],
         [ 0.1000, 10.6368,  9.5101],
         [ 0.1000, 10.6368,  9.1120],
         ...,
         [ 0.1000, 10.6368,  9.2092],
         [ 0.1000, 10.6368,  9.2559],
         [ 0.1000, 10.6368,  9.0596]],
        [[ 0.1000, 10.6161,  8.9011],
         [ 0.1000, 10.6161,  8.8798],
         [ 0.1000, 10.6161,  8.3867],
         ...,
         [ 0.1000, 10.6161,  8.5091],
         [ 0.1000, 10.6161,  8.5674],
         [ 0.1000, 10.6161,  8.3201]],
        ...,
        [[ 0.1000, 10.5905,  8.2260],
         [ 0.1000, 10.5905,  8.1552],
         [ 0.1000, 10.5905,  7.5662],
         ...,
         [ 0.1000, 10.5905,  7.7137],
         [ 0.1000, 10.5905,  7.7836],
         [ 0.1000, 10.5905,  7.4855]],
        [[ 0.1000, 10.6559, 10.0580],
         [ 0.1000, 10.6559, 10.1316],
         [ 0.1000, 10.6559,  9.8372],
         ...,
         [ 0.1000, 10.6559,  9.9066],
         [ 0.1000, 10.6559,  9.9406],
         [ 0.1000, 10.6559,  9.8007]],
        [[ 0.1000, 10.6981, 11.4480],
         [ 0.1000, 10.6981, 11.6507],
         [ 0.1000, 10.6981, 11.6482],
         ...,
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6574]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9171],
         [0.1000, 1.0531, 0.9285],
         [0.1000, 1.0531, 0.9490],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9405],
         [0.1000, 1.0531, 0.9526]],
        [[0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8076],
         ...,
         [0.1000, 1.0495, 0.8092],
         [0.1000, 1.0495, 0.8099],
         [0.1000, 1.0495, 0.8067]],
        [[0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.7958],
         ...,
         [0.1000, 1.0490, 0.7978],
         [0.1000, 1.0490, 0.7987],
         [0.1000, 1.0490, 0.7947]],
        ...,
        [[0.1000, 1.0485, 0.7932],
         [0.1000, 1.0485, 0.7920],
         [0.1000, 1.0485, 0.7824],
         ...,
         [0.1000, 1.0485, 0.7848],
         [0.1000, 1.0485, 0.7860],
         [0.1000, 1.0485, 0.7811]],
        [[0.1000, 1.0499, 0.8230],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8194],
         ...,
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8211],
         [0.1000, 1.0499, 0.8188]],
        [[0.1000, 1.0508, 0.8456],
         [0.1000, 1.0508, 0.8489],
         [0.1000, 1.0508, 0.8488],
         ...,
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8314],
         [ 0.1000, 10.8051, 16.3932],
         [ 0.1000, 10.8051, 17.8695],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2604],
         [ 0.1000, 10.8051, 18.1087]],
        [[ 0.1000, 10.6368,  9.4938],
         [ 0.1000, 10.6368,  9.5746],
         [ 0.1000, 10.6368,  9.0968],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2626],
         [ 0.1000, 10.6368,  9.0405]],
        [[ 0.1000, 10.6161,  8.9115],
         [ 0.1000, 10.6161,  8.9580],
         [ 0.1000, 10.6161,  8.3674],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5757],
         [ 0.1000, 10.6161,  8.2955]],
        ...,
        [[ 0.1000, 10.5905,  8.2381],
         [ 0.1000, 10.5905,  8.2476],
         [ 0.1000, 10.5905,  7.5429],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7935],
         [ 0.1000, 10.5905,  7.4557]],
        [[ 0.1000, 10.6559, 10.0652],
         [ 0.1000, 10.6559, 10.1815],
         [ 0.1000, 10.6559,  9.8266],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9455],
         [ 0.1000, 10.6559,  9.7875]],
        [[ 0.1000, 10.6981, 11.4506],
         [ 0.1000, 10.6981, 11.6603],
         [ 0.1000, 10.6981, 11.6506],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6358],
         [ 0.1000, 10.6981, 11.6615]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9162],
         [0.1000, 1.0531, 0.9254],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9395],
         [0.1000, 1.0531, 0.9533]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8145],
         [0.1000, 1.0495, 0.8067],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8058]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7948],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7937]],
        ...,
        [[0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7814],
         ...,
         [0.1000, 1.0485, 0.7841],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7800]],
        [[0.1000, 1.0499, 0.8224],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8198],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8179]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8482],
         ...,
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8484]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8418],
         [ 0.1000, 10.8051, 16.4953],
         [ 0.1000, 10.8051, 17.8289],
         ...,
         [ 0.1000, 10.8051, 17.4473],
         [ 0.1000, 10.8051, 17.2751],
         [ 0.1000, 10.8051, 18.0535]],
        [[ 0.1000, 10.6368,  9.4880],
         [ 0.1000, 10.6368,  9.5318],
         [ 0.1000, 10.6368,  9.1068],
         ...,
         [ 0.1000, 10.6368,  9.2079],
         [ 0.1000, 10.6368,  9.2582],
         [ 0.1000, 10.6368,  9.0531]],
        [[ 0.1000, 10.6161,  8.9046],
         [ 0.1000, 10.6161,  8.9061],
         [ 0.1000, 10.6161,  8.3801],
         ...,
         [ 0.1000, 10.6161,  8.5075],
         [ 0.1000, 10.6161,  8.5702],
         [ 0.1000, 10.6161,  8.3117]],
        ...,
        [[ 0.1000, 10.5905,  8.2301],
         [ 0.1000, 10.5905,  8.1864],
         [ 0.1000, 10.5905,  7.5583],
         ...,
         [ 0.1000, 10.5905,  7.7118],
         [ 0.1000, 10.5905,  7.7870],
         [ 0.1000, 10.5905,  7.4753]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1483],
         [ 0.1000, 10.6559,  9.8336],
         ...,
         [ 0.1000, 10.6559,  9.9057],
         [ 0.1000, 10.6559,  9.9422],
         [ 0.1000, 10.6559,  9.7962]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6537],
         [ 0.1000, 10.6981, 11.6490],
         ...,
         [ 0.1000, 10.6981, 11.6382],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6588]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9274],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8073],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7955],
         ...,
         [0.1000, 1.0490, 0.7975],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7821],
         ...,
         [0.1000, 1.0485, 0.7846],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8335],
         [ 0.1000, 10.8051, 16.4139],
         [ 0.1000, 10.8051, 17.8612],
         ...,
         [ 0.1000, 10.8051, 17.4542],
         [ 0.1000, 10.8051, 17.2634],
         [ 0.1000, 10.8051, 18.0974]],
        [[ 0.1000, 10.6368,  9.4926],
         [ 0.1000, 10.6368,  9.5658],
         [ 0.1000, 10.6368,  9.0989],
         ...,
         [ 0.1000, 10.6368,  9.2060],
         [ 0.1000, 10.6368,  9.2617],
         [ 0.1000, 10.6368,  9.0430]],
        [[ 0.1000, 10.6161,  8.9101],
         [ 0.1000, 10.6161,  8.9473],
         [ 0.1000, 10.6161,  8.3700],
         ...,
         [ 0.1000, 10.6161,  8.5051],
         [ 0.1000, 10.6161,  8.5746],
         [ 0.1000, 10.6161,  8.2988]],
        ...,
        [[ 0.1000, 10.5905,  8.2365],
         [ 0.1000, 10.5905,  8.2350],
         [ 0.1000, 10.5905,  7.5461],
         ...,
         [ 0.1000, 10.5905,  7.7089],
         [ 0.1000, 10.5905,  7.7922],
         [ 0.1000, 10.5905,  7.4597]],
        [[ 0.1000, 10.6559, 10.0642],
         [ 0.1000, 10.6559, 10.1746],
         [ 0.1000, 10.6559,  9.8280],
         ...,
         [ 0.1000, 10.6559,  9.9043],
         [ 0.1000, 10.6559,  9.9448],
         [ 0.1000, 10.6559,  9.7892]],
        [[ 0.1000, 10.6981, 11.4502],
         [ 0.1000, 10.6981, 11.6588],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6610]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9258],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8318],
         [ 0.1000, 10.8051, 16.3975],
         [ 0.1000, 10.8051, 17.8677],
         ...,
         [ 0.1000, 10.8051, 17.4556],
         [ 0.1000, 10.8051, 17.2611],
         [ 0.1000, 10.8051, 18.1063]],
        [[ 0.1000, 10.6368,  9.4936],
         [ 0.1000, 10.6368,  9.5727],
         [ 0.1000, 10.6368,  9.0973],
         ...,
         [ 0.1000, 10.6368,  9.2056],
         [ 0.1000, 10.6368,  9.2624],
         [ 0.1000, 10.6368,  9.0410]],
        [[ 0.1000, 10.6161,  8.9112],
         [ 0.1000, 10.6161,  8.9558],
         [ 0.1000, 10.6161,  8.3680],
         ...,
         [ 0.1000, 10.6161,  8.5046],
         [ 0.1000, 10.6161,  8.5755],
         [ 0.1000, 10.6161,  8.2962]],
        ...,
        [[ 0.1000, 10.5905,  8.2378],
         [ 0.1000, 10.5905,  8.2450],
         [ 0.1000, 10.5905,  7.5436],
         ...,
         [ 0.1000, 10.5905,  7.7083],
         [ 0.1000, 10.5905,  7.7933],
         [ 0.1000, 10.5905,  7.4566]],
        [[ 0.1000, 10.6559, 10.0650],
         [ 0.1000, 10.6559, 10.1801],
         [ 0.1000, 10.6559,  9.8269],
         ...,
         [ 0.1000, 10.6559,  9.9040],
         [ 0.1000, 10.6559,  9.9453],
         [ 0.1000, 10.6559,  9.7878]],
        [[ 0.1000, 10.6981, 11.4505],
         [ 0.1000, 10.6981, 11.6600],
         [ 0.1000, 10.6981, 11.6506],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6614]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9255],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9395],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8145],
         [0.1000, 1.0495, 0.8067],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8058]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7937]],
        ...,
        [[0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7815],
         ...,
         [0.1000, 1.0485, 0.7841],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7800]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8198],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8482],
         ...,
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8484]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8314],
         [ 0.1000, 10.8051, 16.3932],
         [ 0.1000, 10.8051, 17.8695],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2604],
         [ 0.1000, 10.8051, 18.1087]],
        [[ 0.1000, 10.6368,  9.4938],
         [ 0.1000, 10.6368,  9.5746],
         [ 0.1000, 10.6368,  9.0968],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2626],
         [ 0.1000, 10.6368,  9.0405]],
        [[ 0.1000, 10.6161,  8.9115],
         [ 0.1000, 10.6161,  8.9580],
         [ 0.1000, 10.6161,  8.3674],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5757],
         [ 0.1000, 10.6161,  8.2955]],
        ...,
        [[ 0.1000, 10.5905,  8.2381],
         [ 0.1000, 10.5905,  8.2476],
         [ 0.1000, 10.5905,  7.5429],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7935],
         [ 0.1000, 10.5905,  7.4557]],
        [[ 0.1000, 10.6559, 10.0652],
         [ 0.1000, 10.6559, 10.1815],
         [ 0.1000, 10.6559,  9.8266],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9455],
         [ 0.1000, 10.6559,  9.7875]],
        [[ 0.1000, 10.6981, 11.4506],
         [ 0.1000, 10.6981, 11.6603],
         [ 0.1000, 10.6981, 11.6506],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6358],
         [ 0.1000, 10.6981, 11.6615]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9162],
         [0.1000, 1.0531, 0.9254],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9395],
         [0.1000, 1.0531, 0.9533]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8145],
         [0.1000, 1.0495, 0.8067],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8058]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7948],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7937]],
        ...,
        [[0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7814],
         ...,
         [0.1000, 1.0485, 0.7841],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7800]],
        [[0.1000, 1.0499, 0.8224],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8198],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8179]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8482],
         ...,
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8484]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9383],
         [ 0.1000, 10.8051, 17.5936],
         [ 0.1000, 10.8051, 17.4888],
         ...,
         [ 0.1000, 10.8051, 17.4555],
         [ 0.1000, 10.8051, 17.4637],
         [ 0.1000, 10.8051, 17.5468]],
        [[ 0.1000, 10.6368,  9.4351],
         [ 0.1000, 10.6368,  9.1676],
         [ 0.1000, 10.6368,  9.1963],
         ...,
         [ 0.1000, 10.6368,  9.2056],
         [ 0.1000, 10.6368,  9.2033],
         [ 0.1000, 10.6368,  9.1803]],
        [[ 0.1000, 10.6161,  8.8422],
         [ 0.1000, 10.6161,  8.4569],
         [ 0.1000, 10.6161,  8.4929],
         ...,
         [ 0.1000, 10.6161,  8.5046],
         [ 0.1000, 10.6161,  8.5017],
         [ 0.1000, 10.6161,  8.4729]],
        ...,
        [[ 0.1000, 10.5905,  8.1579],
         [ 0.1000, 10.5905,  7.6509],
         [ 0.1000, 10.5905,  7.6943],
         ...,
         [ 0.1000, 10.5905,  7.7083],
         [ 0.1000, 10.5905,  7.7048],
         [ 0.1000, 10.5905,  7.6701]],
        [[ 0.1000, 10.6559, 10.0178],
         [ 0.1000, 10.6559,  9.8767],
         [ 0.1000, 10.6559,  9.8973],
         ...,
         [ 0.1000, 10.6559,  9.9040],
         [ 0.1000, 10.6559,  9.9023],
         [ 0.1000, 10.6559,  9.8858]],
        [[ 0.1000, 10.6981, 11.4339],
         [ 0.1000, 10.6981, 11.6414],
         [ 0.1000, 10.6981, 11.6390],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6402]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9221],
         [0.1000, 1.0531, 0.9490],
         [0.1000, 1.0531, 0.9473],
         ...,
         [0.1000, 1.0531, 0.9468],
         [0.1000, 1.0531, 0.9469],
         [0.1000, 1.0531, 0.9483]],
        [[0.1000, 1.0495, 0.8163],
         [0.1000, 1.0495, 0.8120],
         [0.1000, 1.0495, 0.8125],
         ...,
         [0.1000, 1.0495, 0.8126],
         [0.1000, 1.0495, 0.8126],
         [0.1000, 1.0495, 0.8122]],
        [[0.1000, 1.0490, 0.8067],
         [0.1000, 1.0490, 0.8004],
         [0.1000, 1.0490, 0.8010],
         ...,
         [0.1000, 1.0490, 0.8012],
         [0.1000, 1.0490, 0.8012],
         [0.1000, 1.0490, 0.8007]],
        ...,
        [[0.1000, 1.0485, 0.7956],
         [0.1000, 1.0485, 0.7873],
         [0.1000, 1.0485, 0.7880],
         ...,
         [0.1000, 1.0485, 0.7883],
         [0.1000, 1.0485, 0.7882],
         [0.1000, 1.0485, 0.7876]],
        [[0.1000, 1.0499, 0.8258],
         [0.1000, 1.0499, 0.8235],
         [0.1000, 1.0499, 0.8239],
         ...,
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8237]],
        [[0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.8522],
         [0.1000, 1.0508, 0.8522],
         ...,
         [0.1000, 1.0508, 0.8522],
         [0.1000, 1.0508, 0.8522],
         [0.1000, 1.0508, 0.8522]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8498],
         [ 0.1000, 10.8051, 16.5899],
         [ 0.1000, 10.8051, 17.7991],
         ...,
         [ 0.1000, 10.8051, 17.4559],
         [ 0.1000, 10.8051, 17.2967],
         [ 0.1000, 10.8051, 18.0038]],
        [[ 0.1000, 10.6368,  9.4831],
         [ 0.1000, 10.6368,  9.4937],
         [ 0.1000, 10.6368,  9.1143],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2517],
         [ 0.1000, 10.6368,  9.0646]],
        [[ 0.1000, 10.6161,  8.8989],
         [ 0.1000, 10.6161,  8.8599],
         [ 0.1000, 10.6161,  8.3896],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5621],
         [ 0.1000, 10.6161,  8.3265]],
        ...,
        [[ 0.1000, 10.5905,  8.2236],
         [ 0.1000, 10.5905,  8.1318],
         [ 0.1000, 10.5905,  7.5697],
         ...,
         [ 0.1000, 10.5905,  7.7082],
         [ 0.1000, 10.5905,  7.7773],
         [ 0.1000, 10.5905,  7.4933]],
        [[ 0.1000, 10.6559, 10.0565],
         [ 0.1000, 10.6559, 10.1191],
         [ 0.1000, 10.6559,  9.8388],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9375],
         [ 0.1000, 10.6559,  9.8041]],
        [[ 0.1000, 10.6981, 11.4473],
         [ 0.1000, 10.6981, 11.6486],
         [ 0.1000, 10.6981, 11.6479],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6564]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9173],
         [0.1000, 1.0531, 0.9294],
         [0.1000, 1.0531, 0.9490],
         ...,
         [0.1000, 1.0531, 0.9435],
         [0.1000, 1.0531, 0.9409],
         [0.1000, 1.0531, 0.9524]],
        [[0.1000, 1.0495, 0.8138],
         [0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8078],
         ...,
         [0.1000, 1.0495, 0.8093],
         [0.1000, 1.0495, 0.8100],
         [0.1000, 1.0495, 0.8070]],
        [[0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.8036],
         [0.1000, 1.0490, 0.7960],
         ...,
         [0.1000, 1.0490, 0.7979],
         [0.1000, 1.0490, 0.7988],
         [0.1000, 1.0490, 0.7950]],
        ...,
        [[0.1000, 1.0485, 0.7933],
         [0.1000, 1.0485, 0.7918],
         [0.1000, 1.0485, 0.7827],
         ...,
         [0.1000, 1.0485, 0.7849],
         [0.1000, 1.0485, 0.7860],
         [0.1000, 1.0485, 0.7814]],
        [[0.1000, 1.0499, 0.8231],
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8196],
         ...,
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8212],
         [0.1000, 1.0499, 0.8190]],
        [[0.1000, 1.0508, 0.8457],
         [0.1000, 1.0508, 0.8490],
         [0.1000, 1.0508, 0.8490],
         ...,
         [0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.8491]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8351],
         [ 0.1000, 10.8051, 16.4325],
         [ 0.1000, 10.8051, 17.8551],
         ...,
         [ 0.1000, 10.8051, 17.4559],
         [ 0.1000, 10.8051, 17.2678],
         [ 0.1000, 10.8051, 18.0872]],
        [[ 0.1000, 10.6368,  9.4916],
         [ 0.1000, 10.6368,  9.5579],
         [ 0.1000, 10.6368,  9.1004],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2604],
         [ 0.1000, 10.6368,  9.0453]],
        [[ 0.1000, 10.6161,  8.9089],
         [ 0.1000, 10.6161,  8.9378],
         [ 0.1000, 10.6161,  8.3719],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5729],
         [ 0.1000, 10.6161,  8.3018]],
        ...,
        [[ 0.1000, 10.5905,  8.2352],
         [ 0.1000, 10.5905,  8.2237],
         [ 0.1000, 10.5905,  7.5483],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7902],
         [ 0.1000, 10.5905,  7.4633]],
        [[ 0.1000, 10.6559, 10.0634],
         [ 0.1000, 10.6559, 10.1685],
         [ 0.1000, 10.6559,  9.8290],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9439],
         [ 0.1000, 10.6559,  9.7908]],
        [[ 0.1000, 10.6981, 11.4499],
         [ 0.1000, 10.6981, 11.6576],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6605]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9262],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8322],
         [ 0.1000, 10.8051, 16.4015],
         [ 0.1000, 10.8051, 17.8664],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2620],
         [ 0.1000, 10.8051, 18.1041]],
        [[ 0.1000, 10.6368,  9.4934],
         [ 0.1000, 10.6368,  9.5710],
         [ 0.1000, 10.6368,  9.0976],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2621],
         [ 0.1000, 10.6368,  9.0415]],
        [[ 0.1000, 10.6161,  8.9109],
         [ 0.1000, 10.6161,  8.9537],
         [ 0.1000, 10.6161,  8.3684],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5751],
         [ 0.1000, 10.6161,  8.2969]],
        ...,
        [[ 0.1000, 10.5905,  8.2375],
         [ 0.1000, 10.5905,  8.2425],
         [ 0.1000, 10.5905,  7.5441],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7928],
         [ 0.1000, 10.5905,  7.4573]],
        [[ 0.1000, 10.6559, 10.0648],
         [ 0.1000, 10.6559, 10.1787],
         [ 0.1000, 10.6559,  9.8271],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9451],
         [ 0.1000, 10.6559,  9.7882]],
        [[ 0.1000, 10.6981, 11.4504],
         [ 0.1000, 10.6981, 11.6597],
         [ 0.1000, 10.6981, 11.6505],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6613]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9255],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9395],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8067],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8058]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7937]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7815],
         ...,
         [0.1000, 1.0485, 0.7841],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7801]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8484]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8341],
         [ 0.1000, 10.8051, 16.4219],
         [ 0.1000, 10.8051, 17.8590],
         ...,
         [ 0.1000, 10.8051, 17.4559],
         [ 0.1000, 10.8051, 17.2658],
         [ 0.1000, 10.8051, 18.0930]],
        [[ 0.1000, 10.6368,  9.4922],
         [ 0.1000, 10.6368,  9.5623],
         [ 0.1000, 10.6368,  9.0994],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2609],
         [ 0.1000, 10.6368,  9.0440]],
        [[ 0.1000, 10.6161,  8.9096],
         [ 0.1000, 10.6161,  8.9432],
         [ 0.1000, 10.6161,  8.3707],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5737],
         [ 0.1000, 10.6161,  8.3001]],
        ...,
        [[ 0.1000, 10.5905,  8.2360],
         [ 0.1000, 10.5905,  8.2301],
         [ 0.1000, 10.5905,  7.5469],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7911],
         [ 0.1000, 10.5905,  7.4613]],
        [[ 0.1000, 10.6559, 10.0639],
         [ 0.1000, 10.6559, 10.1720],
         [ 0.1000, 10.6559,  9.8284],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9443],
         [ 0.1000, 10.6559,  9.7899]],
        [[ 0.1000, 10.6981, 11.4501],
         [ 0.1000, 10.6981, 11.6583],
         [ 0.1000, 10.6981, 11.6502],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6607]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9260],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8326],
         [ 0.1000, 10.8051, 16.4058],
         [ 0.1000, 10.8051, 17.8648],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2628],
         [ 0.1000, 10.8051, 18.1017]],
        [[ 0.1000, 10.6368,  9.4931],
         [ 0.1000, 10.6368,  9.5692],
         [ 0.1000, 10.6368,  9.0980],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2619],
         [ 0.1000, 10.6368,  9.0420]],
        [[ 0.1000, 10.6161,  8.9107],
         [ 0.1000, 10.6161,  8.9514],
         [ 0.1000, 10.6161,  8.3689],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5748],
         [ 0.1000, 10.6161,  8.2976]],
        ...,
        [[ 0.1000, 10.5905,  8.2372],
         [ 0.1000, 10.5905,  8.2399],
         [ 0.1000, 10.5905,  7.5447],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7925],
         [ 0.1000, 10.5905,  7.4582]],
        [[ 0.1000, 10.6559, 10.0646],
         [ 0.1000, 10.6559, 10.1773],
         [ 0.1000, 10.6559,  9.8274],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9450],
         [ 0.1000, 10.6559,  9.7886]],
        [[ 0.1000, 10.6981, 11.4504],
         [ 0.1000, 10.6981, 11.6594],
         [ 0.1000, 10.6981, 11.6504],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6612]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9256],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7937]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7815],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7801]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8336],
         [ 0.1000, 10.8051, 16.4164],
         [ 0.1000, 10.8051, 17.8610],
         ...,
         [ 0.1000, 10.8051, 17.4559],
         [ 0.1000, 10.8051, 17.2648],
         [ 0.1000, 10.8051, 18.0960]],
        [[ 0.1000, 10.6368,  9.4925],
         [ 0.1000, 10.6368,  9.5647],
         [ 0.1000, 10.6368,  9.0989],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2613],
         [ 0.1000, 10.6368,  9.0434]],
        [[ 0.1000, 10.6161,  8.9100],
         [ 0.1000, 10.6161,  8.9460],
         [ 0.1000, 10.6161,  8.3701],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5741],
         [ 0.1000, 10.6161,  8.2992]],
        ...,
        [[ 0.1000, 10.5905,  8.2364],
         [ 0.1000, 10.5905,  8.2334],
         [ 0.1000, 10.5905,  7.5461],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7916],
         [ 0.1000, 10.5905,  7.4602]],
        [[ 0.1000, 10.6559, 10.0641],
         [ 0.1000, 10.6559, 10.1738],
         [ 0.1000, 10.6559,  9.8280],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9445],
         [ 0.1000, 10.6559,  9.7895]],
        [[ 0.1000, 10.6981, 11.4502],
         [ 0.1000, 10.6981, 11.6587],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6609]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9258],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8328],
         [ 0.1000, 10.8051, 16.4081],
         [ 0.1000, 10.8051, 17.8640],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2632],
         [ 0.1000, 10.8051, 18.1005]],
        [[ 0.1000, 10.6368,  9.4930],
         [ 0.1000, 10.6368,  9.5682],
         [ 0.1000, 10.6368,  9.0982],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2617],
         [ 0.1000, 10.6368,  9.0423]],
        [[ 0.1000, 10.6161,  8.9105],
         [ 0.1000, 10.6161,  8.9503],
         [ 0.1000, 10.6161,  8.3691],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5746],
         [ 0.1000, 10.6161,  8.2979]],
        ...,
        [[ 0.1000, 10.5905,  8.2370],
         [ 0.1000, 10.5905,  8.2385],
         [ 0.1000, 10.5905,  7.5450],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7923],
         [ 0.1000, 10.5905,  7.4586]],
        [[ 0.1000, 10.6559, 10.0645],
         [ 0.1000, 10.6559, 10.1765],
         [ 0.1000, 10.6559,  9.8275],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9449],
         [ 0.1000, 10.6559,  9.7887]],
        [[ 0.1000, 10.6981, 11.4503],
         [ 0.1000, 10.6981, 11.6592],
         [ 0.1000, 10.6981, 11.6504],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6611]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9257],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7815],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7801]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8333],
         [ 0.1000, 10.8051, 16.4136],
         [ 0.1000, 10.8051, 17.8620],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2643],
         [ 0.1000, 10.8051, 18.0975]],
        [[ 0.1000, 10.6368,  9.4927],
         [ 0.1000, 10.6368,  9.5659],
         [ 0.1000, 10.6368,  9.0987],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2614],
         [ 0.1000, 10.6368,  9.0430]],
        [[ 0.1000, 10.6161,  8.9102],
         [ 0.1000, 10.6161,  8.9474],
         [ 0.1000, 10.6161,  8.3698],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5743],
         [ 0.1000, 10.6161,  8.2988]],
        ...,
        [[ 0.1000, 10.5905,  8.2366],
         [ 0.1000, 10.5905,  8.2352],
         [ 0.1000, 10.5905,  7.5457],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7918],
         [ 0.1000, 10.5905,  7.4597]],
        [[ 0.1000, 10.6559, 10.0643],
         [ 0.1000, 10.6559, 10.1747],
         [ 0.1000, 10.6559,  9.8278],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9446],
         [ 0.1000, 10.6559,  9.7892]],
        [[ 0.1000, 10.6981, 11.4502],
         [ 0.1000, 10.6981, 11.6589],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6610]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9258],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8329],
         [ 0.1000, 10.8051, 16.4092],
         [ 0.1000, 10.8051, 17.8636],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2635],
         [ 0.1000, 10.8051, 18.0999]],
        [[ 0.1000, 10.6368,  9.4929],
         [ 0.1000, 10.6368,  9.5677],
         [ 0.1000, 10.6368,  9.0983],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2617],
         [ 0.1000, 10.6368,  9.0425]],
        [[ 0.1000, 10.6161,  8.9104],
         [ 0.1000, 10.6161,  8.9497],
         [ 0.1000, 10.6161,  8.3693],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5746],
         [ 0.1000, 10.6161,  8.2981]],
        ...,
        [[ 0.1000, 10.5905,  8.2369],
         [ 0.1000, 10.5905,  8.2378],
         [ 0.1000, 10.5905,  7.5451],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7922],
         [ 0.1000, 10.5905,  7.4588]],
        [[ 0.1000, 10.6559, 10.0645],
         [ 0.1000, 10.6559, 10.1762],
         [ 0.1000, 10.6559,  9.8276],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9448],
         [ 0.1000, 10.6559,  9.7888]],
        [[ 0.1000, 10.6981, 11.4503],
         [ 0.1000, 10.6981, 11.6592],
         [ 0.1000, 10.6981, 11.6504],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6611]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9257],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7815],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7801]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8328],
         [ 0.1000, 10.8051, 16.4081],
         [ 0.1000, 10.8051, 17.8640],
         ...,
         [ 0.1000, 10.8051, 17.4560],
         [ 0.1000, 10.8051, 17.2632],
         [ 0.1000, 10.8051, 18.1005]],
        [[ 0.1000, 10.6368,  9.4930],
         [ 0.1000, 10.6368,  9.5682],
         [ 0.1000, 10.6368,  9.0982],
         ...,
         [ 0.1000, 10.6368,  9.2055],
         [ 0.1000, 10.6368,  9.2617],
         [ 0.1000, 10.6368,  9.0423]],
        [[ 0.1000, 10.6161,  8.9105],
         [ 0.1000, 10.6161,  8.9503],
         [ 0.1000, 10.6161,  8.3691],
         ...,
         [ 0.1000, 10.6161,  8.5045],
         [ 0.1000, 10.6161,  8.5746],
         [ 0.1000, 10.6161,  8.2979]],
        ...,
        [[ 0.1000, 10.5905,  8.2370],
         [ 0.1000, 10.5905,  8.2385],
         [ 0.1000, 10.5905,  7.5450],
         ...,
         [ 0.1000, 10.5905,  7.7081],
         [ 0.1000, 10.5905,  7.7923],
         [ 0.1000, 10.5905,  7.4586]],
        [[ 0.1000, 10.6559, 10.0645],
         [ 0.1000, 10.6559, 10.1765],
         [ 0.1000, 10.6559,  9.8275],
         ...,
         [ 0.1000, 10.6559,  9.9039],
         [ 0.1000, 10.6559,  9.9449],
         [ 0.1000, 10.6559,  9.7887]],
        [[ 0.1000, 10.6981, 11.4503],
         [ 0.1000, 10.6981, 11.6592],
         [ 0.1000, 10.6981, 11.6504],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6611]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 0.9257],
         [0.1000, 1.0531, 0.9494],
         ...,
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7971],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7815],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7801]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8180]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9441],
         [ 0.1000, 10.8051, 17.6171],
         [ 0.1000, 10.8051, 17.5030],
         ...,
         [ 0.1000, 10.8051, 17.5057],
         [ 0.1000, 10.8051, 17.4964],
         [ 0.1000, 10.8051, 17.5365]],
        [[ 0.1000, 10.6368,  9.4316],
         [ 0.1000, 10.6368,  9.1613],
         [ 0.1000, 10.6368,  9.1923],
         ...,
         [ 0.1000, 10.6368,  9.1916],
         [ 0.1000, 10.6368,  9.1942],
         [ 0.1000, 10.6368,  9.1831]],
        [[ 0.1000, 10.6161,  8.8381],
         [ 0.1000, 10.6161,  8.4490],
         [ 0.1000, 10.6161,  8.4880],
         ...,
         [ 0.1000, 10.6161,  8.4870],
         [ 0.1000, 10.6161,  8.4903],
         [ 0.1000, 10.6161,  8.4764]],
        ...,
        [[ 0.1000, 10.5905,  8.1531],
         [ 0.1000, 10.5905,  7.6414],
         [ 0.1000, 10.5905,  7.6883],
         ...,
         [ 0.1000, 10.5905,  7.6872],
         [ 0.1000, 10.5905,  7.6911],
         [ 0.1000, 10.5905,  7.6744]],
        [[ 0.1000, 10.6559, 10.0148],
         [ 0.1000, 10.6559,  9.8722],
         [ 0.1000, 10.6559,  9.8944],
         ...,
         [ 0.1000, 10.6559,  9.8939],
         [ 0.1000, 10.6559,  9.8957],
         [ 0.1000, 10.6559,  9.8878]],
        [[ 0.1000, 10.6981, 11.4327],
         [ 0.1000, 10.6981, 11.6420],
         [ 0.1000, 10.6981, 11.6393],
         ...,
         [ 0.1000, 10.6981, 11.6393],
         [ 0.1000, 10.6981, 11.6391],
         [ 0.1000, 10.6981, 11.6400]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9220],
         [0.1000, 1.0531, 0.9492],
         [0.1000, 1.0531, 0.9474],
         ...,
         [0.1000, 1.0531, 0.9474],
         [0.1000, 1.0531, 0.9473],
         [0.1000, 1.0531, 0.9479]],
        [[0.1000, 1.0495, 0.8161],
         [0.1000, 1.0495, 0.8117],
         [0.1000, 1.0495, 0.8122],
         ...,
         [0.1000, 1.0495, 0.8122],
         [0.1000, 1.0495, 0.8122],
         [0.1000, 1.0495, 0.8121]],
        [[0.1000, 1.0490, 0.8065],
         [0.1000, 1.0490, 0.8001],
         [0.1000, 1.0490, 0.8008],
         ...,
         [0.1000, 1.0490, 0.8007],
         [0.1000, 1.0490, 0.8008],
         [0.1000, 1.0490, 0.8006]],
        ...,
        [[0.1000, 1.0485, 0.7953],
         [0.1000, 1.0485, 0.7870],
         [0.1000, 1.0485, 0.7878],
         ...,
         [0.1000, 1.0485, 0.7877],
         [0.1000, 1.0485, 0.7878],
         [0.1000, 1.0485, 0.7875]],
        [[0.1000, 1.0499, 0.8256],
         [0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8236],
         ...,
         [0.1000, 1.0499, 0.8236],
         [0.1000, 1.0499, 0.8237],
         [0.1000, 1.0499, 0.8235]],
        [[0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8521],
         [0.1000, 1.0508, 0.8520],
         ...,
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8531],
         [ 0.1000, 10.8051, 16.6182],
         [ 0.1000, 10.8051, 17.7934],
         ...,
         [ 0.1000, 10.8051, 17.4654],
         [ 0.1000, 10.8051, 17.3072],
         [ 0.1000, 10.8051, 17.9890]],
        [[ 0.1000, 10.6368,  9.4811],
         [ 0.1000, 10.6368,  9.4827],
         [ 0.1000, 10.6368,  9.1157],
         ...,
         [ 0.1000, 10.6368,  9.2028],
         [ 0.1000, 10.6368,  9.2486],
         [ 0.1000, 10.6368,  9.0681]],
        [[ 0.1000, 10.6161,  8.8966],
         [ 0.1000, 10.6161,  8.8465],
         [ 0.1000, 10.6161,  8.3914],
         ...,
         [ 0.1000, 10.6161,  8.5011],
         [ 0.1000, 10.6161,  8.5583],
         [ 0.1000, 10.6161,  8.3309]],
        ...,
        [[ 0.1000, 10.5905,  8.2209],
         [ 0.1000, 10.5905,  8.1158],
         [ 0.1000, 10.5905,  7.5719],
         ...,
         [ 0.1000, 10.5905,  7.7041],
         [ 0.1000, 10.5905,  7.7727],
         [ 0.1000, 10.5905,  7.4986]],
        [[ 0.1000, 10.6559, 10.0548],
         [ 0.1000, 10.6559, 10.1106],
         [ 0.1000, 10.6559,  9.8398],
         ...,
         [ 0.1000, 10.6559,  9.9020],
         [ 0.1000, 10.6559,  9.9352],
         [ 0.1000, 10.6559,  9.8065]],
        [[ 0.1000, 10.6981, 11.4466],
         [ 0.1000, 10.6981, 11.6473],
         [ 0.1000, 10.6981, 11.6477],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6362],
         [ 0.1000, 10.6981, 11.6558]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9175],
         [0.1000, 1.0531, 0.9299],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9437],
         [0.1000, 1.0531, 0.9412],
         [0.1000, 1.0531, 0.9522]],
        [[0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8079],
         ...,
         [0.1000, 1.0495, 0.8093],
         [0.1000, 1.0495, 0.8101],
         [0.1000, 1.0495, 0.8071]],
        [[0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.8035],
         [0.1000, 1.0490, 0.7961],
         ...,
         [0.1000, 1.0490, 0.7979],
         [0.1000, 1.0490, 0.7989],
         [0.1000, 1.0490, 0.7952]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7917],
         [0.1000, 1.0485, 0.7828],
         ...,
         [0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7816]],
        [[0.1000, 1.0499, 0.8232],
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8197],
         ...,
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8212],
         [0.1000, 1.0499, 0.8192]],
        [[0.1000, 1.0508, 0.8458],
         [0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.8491],
         ...,
         [0.1000, 1.0508, 0.8490],
         [0.1000, 1.0508, 0.8489],
         [0.1000, 1.0508, 0.8492]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8369],
         [ 0.1000, 10.8051, 16.4496],
         [ 0.1000, 10.8051, 17.8497],
         ...,
         [ 0.1000, 10.8051, 17.4579],
         [ 0.1000, 10.8051, 17.2721],
         [ 0.1000, 10.8051, 18.0779]],
        [[ 0.1000, 10.6368,  9.4906],
         [ 0.1000, 10.6368,  9.5507],
         [ 0.1000, 10.6368,  9.1017],
         ...,
         [ 0.1000, 10.6368,  9.2050],
         [ 0.1000, 10.6368,  9.2591],
         [ 0.1000, 10.6368,  9.0475]],
        [[ 0.1000, 10.6161,  8.9077],
         [ 0.1000, 10.6161,  8.9291],
         [ 0.1000, 10.6161,  8.3736],
         ...,
         [ 0.1000, 10.6161,  8.5038],
         [ 0.1000, 10.6161,  8.5713],
         [ 0.1000, 10.6161,  8.3045]],
        ...,
        [[ 0.1000, 10.5905,  8.2338],
         [ 0.1000, 10.5905,  8.2135],
         [ 0.1000, 10.5905,  7.5504],
         ...,
         [ 0.1000, 10.5905,  7.7073],
         [ 0.1000, 10.5905,  7.7883],
         [ 0.1000, 10.5905,  7.4666]],
        [[ 0.1000, 10.6559, 10.0625],
         [ 0.1000, 10.6559, 10.1630],
         [ 0.1000, 10.6559,  9.8300],
         ...,
         [ 0.1000, 10.6559,  9.9035],
         [ 0.1000, 10.6559,  9.9429],
         [ 0.1000, 10.6559,  9.7923]],
        [[ 0.1000, 10.6981, 11.4496],
         [ 0.1000, 10.6981, 11.6565],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8337],
         [ 0.1000, 10.8051, 16.4168],
         [ 0.1000, 10.8051, 17.8610],
         ...,
         [ 0.1000, 10.8051, 17.4564],
         [ 0.1000, 10.8051, 17.2651],
         [ 0.1000, 10.8051, 18.0957]],
        [[ 0.1000, 10.6368,  9.4925],
         [ 0.1000, 10.6368,  9.5645],
         [ 0.1000, 10.6368,  9.0989],
         ...,
         [ 0.1000, 10.6368,  9.2054],
         [ 0.1000, 10.6368,  9.2612],
         [ 0.1000, 10.6368,  9.0434]],
        [[ 0.1000, 10.6161,  8.9099],
         [ 0.1000, 10.6161,  8.9458],
         [ 0.1000, 10.6161,  8.3701],
         ...,
         [ 0.1000, 10.6161,  8.5043],
         [ 0.1000, 10.6161,  8.5739],
         [ 0.1000, 10.6161,  8.2993]],
        ...,
        [[ 0.1000, 10.5905,  8.2363],
         [ 0.1000, 10.5905,  8.2332],
         [ 0.1000, 10.5905,  7.5461],
         ...,
         [ 0.1000, 10.5905,  7.7080],
         [ 0.1000, 10.5905,  7.7914],
         [ 0.1000, 10.5905,  7.4603]],
        [[ 0.1000, 10.6559, 10.0641],
         [ 0.1000, 10.6559, 10.1737],
         [ 0.1000, 10.6559,  9.8280],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9444],
         [ 0.1000, 10.6559,  9.7895]],
        [[ 0.1000, 10.6981, 11.4502],
         [ 0.1000, 10.6981, 11.6586],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6609]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8358],
         [ 0.1000, 10.8051, 16.4384],
         [ 0.1000, 10.8051, 17.8536],
         ...,
         [ 0.1000, 10.8051, 17.4574],
         [ 0.1000, 10.8051, 17.2697],
         [ 0.1000, 10.8051, 18.0840]],
        [[ 0.1000, 10.6368,  9.4912],
         [ 0.1000, 10.6368,  9.5554],
         [ 0.1000, 10.6368,  9.1007],
         ...,
         [ 0.1000, 10.6368,  9.2051],
         [ 0.1000, 10.6368,  9.2598],
         [ 0.1000, 10.6368,  9.0461]],
        [[ 0.1000, 10.6161,  8.9085],
         [ 0.1000, 10.6161,  8.9347],
         [ 0.1000, 10.6161,  8.3724],
         ...,
         [ 0.1000, 10.6161,  8.5040],
         [ 0.1000, 10.6161,  8.5722],
         [ 0.1000, 10.6161,  8.3027]],
        ...,
        [[ 0.1000, 10.5905,  8.2346],
         [ 0.1000, 10.5905,  8.2202],
         [ 0.1000, 10.5905,  7.5489],
         ...,
         [ 0.1000, 10.5905,  7.7075],
         [ 0.1000, 10.5905,  7.7894],
         [ 0.1000, 10.5905,  7.4645]],
        [[ 0.1000, 10.6559, 10.0631],
         [ 0.1000, 10.6559, 10.1666],
         [ 0.1000, 10.6559,  9.8293],
         ...,
         [ 0.1000, 10.6559,  9.9036],
         [ 0.1000, 10.6559,  9.9434],
         [ 0.1000, 10.6559,  9.7913]],
        [[ 0.1000, 10.6981, 11.4498],
         [ 0.1000, 10.6981, 11.6572],
         [ 0.1000, 10.6981, 11.6500],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6603]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9263],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8341],
         [ 0.1000, 10.8051, 16.4214],
         [ 0.1000, 10.8051, 17.8594],
         ...,
         [ 0.1000, 10.8051, 17.4566],
         [ 0.1000, 10.8051, 17.2661],
         [ 0.1000, 10.8051, 18.0933]],
        [[ 0.1000, 10.6368,  9.4922],
         [ 0.1000, 10.6368,  9.5626],
         [ 0.1000, 10.6368,  9.0993],
         ...,
         [ 0.1000, 10.6368,  9.2053],
         [ 0.1000, 10.6368,  9.2609],
         [ 0.1000, 10.6368,  9.0440]],
        [[ 0.1000, 10.6161,  8.9096],
         [ 0.1000, 10.6161,  8.9435],
         [ 0.1000, 10.6161,  8.3706],
         ...,
         [ 0.1000, 10.6161,  8.5042],
         [ 0.1000, 10.6161,  8.5736],
         [ 0.1000, 10.6161,  8.3000]],
        ...,
        [[ 0.1000, 10.5905,  8.2360],
         [ 0.1000, 10.5905,  8.2305],
         [ 0.1000, 10.5905,  7.5467],
         ...,
         [ 0.1000, 10.5905,  7.7079],
         [ 0.1000, 10.5905,  7.7910],
         [ 0.1000, 10.5905,  7.4612]],
        [[ 0.1000, 10.6559, 10.0639],
         [ 0.1000, 10.6559, 10.1722],
         [ 0.1000, 10.6559,  9.8283],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9442],
         [ 0.1000, 10.6559,  9.7899]],
        [[ 0.1000, 10.6981, 11.4501],
         [ 0.1000, 10.6981, 11.6583],
         [ 0.1000, 10.6981, 11.6502],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6608]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8338],
         [ 0.1000, 10.8051, 16.4178],
         [ 0.1000, 10.8051, 17.8607],
         ...,
         [ 0.1000, 10.8051, 17.4564],
         [ 0.1000, 10.8051, 17.2653],
         [ 0.1000, 10.8051, 18.0952]],
        [[ 0.1000, 10.6368,  9.4924],
         [ 0.1000, 10.6368,  9.5641],
         [ 0.1000, 10.6368,  9.0990],
         ...,
         [ 0.1000, 10.6368,  9.2054],
         [ 0.1000, 10.6368,  9.2611],
         [ 0.1000, 10.6368,  9.0435]],
        [[ 0.1000, 10.6161,  8.9099],
         [ 0.1000, 10.6161,  8.9453],
         [ 0.1000, 10.6161,  8.3702],
         ...,
         [ 0.1000, 10.6161,  8.5043],
         [ 0.1000, 10.6161,  8.5739],
         [ 0.1000, 10.6161,  8.2995]],
        ...,
        [[ 0.1000, 10.5905,  8.2362],
         [ 0.1000, 10.5905,  8.2326],
         [ 0.1000, 10.5905,  7.5462],
         ...,
         [ 0.1000, 10.5905,  7.7079],
         [ 0.1000, 10.5905,  7.7914],
         [ 0.1000, 10.5905,  7.4605]],
        [[ 0.1000, 10.6559, 10.0640],
         [ 0.1000, 10.6559, 10.1733],
         [ 0.1000, 10.6559,  9.8281],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9444],
         [ 0.1000, 10.6559,  9.7896]],
        [[ 0.1000, 10.6981, 11.4502],
         [ 0.1000, 10.6981, 11.6586],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6609]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8340],
         [ 0.1000, 10.8051, 16.4202],
         [ 0.1000, 10.8051, 17.8598],
         ...,
         [ 0.1000, 10.8051, 17.4565],
         [ 0.1000, 10.8051, 17.2658],
         [ 0.1000, 10.8051, 18.0939]],
        [[ 0.1000, 10.6368,  9.4923],
         [ 0.1000, 10.6368,  9.5631],
         [ 0.1000, 10.6368,  9.0992],
         ...,
         [ 0.1000, 10.6368,  9.2053],
         [ 0.1000, 10.6368,  9.2610],
         [ 0.1000, 10.6368,  9.0438]],
        [[ 0.1000, 10.6161,  8.9097],
         [ 0.1000, 10.6161,  8.9441],
         [ 0.1000, 10.6161,  8.3704],
         ...,
         [ 0.1000, 10.6161,  8.5043],
         [ 0.1000, 10.6161,  8.5737],
         [ 0.1000, 10.6161,  8.2998]],
        ...,
        [[ 0.1000, 10.5905,  8.2361],
         [ 0.1000, 10.5905,  8.2312],
         [ 0.1000, 10.5905,  7.5466],
         ...,
         [ 0.1000, 10.5905,  7.7079],
         [ 0.1000, 10.5905,  7.7911],
         [ 0.1000, 10.5905,  7.4609]],
        [[ 0.1000, 10.6559, 10.0639],
         [ 0.1000, 10.6559, 10.1726],
         [ 0.1000, 10.6559,  9.8282],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9443],
         [ 0.1000, 10.6559,  9.7898]],
        [[ 0.1000, 10.6981, 11.4501],
         [ 0.1000, 10.6981, 11.6584],
         [ 0.1000, 10.6981, 11.6502],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6608]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8338],
         [ 0.1000, 10.8051, 16.4183],
         [ 0.1000, 10.8051, 17.8605],
         ...,
         [ 0.1000, 10.8051, 17.4564],
         [ 0.1000, 10.8051, 17.2654],
         [ 0.1000, 10.8051, 18.0949]],
        [[ 0.1000, 10.6368,  9.4924],
         [ 0.1000, 10.6368,  9.5639],
         [ 0.1000, 10.6368,  9.0990],
         ...,
         [ 0.1000, 10.6368,  9.2054],
         [ 0.1000, 10.6368,  9.2611],
         [ 0.1000, 10.6368,  9.0436]],
        [[ 0.1000, 10.6161,  8.9098],
         [ 0.1000, 10.6161,  8.9450],
         [ 0.1000, 10.6161,  8.3702],
         ...,
         [ 0.1000, 10.6161,  8.5043],
         [ 0.1000, 10.6161,  8.5738],
         [ 0.1000, 10.6161,  8.2995]],
        ...,
        [[ 0.1000, 10.5905,  8.2362],
         [ 0.1000, 10.5905,  8.2323],
         [ 0.1000, 10.5905,  7.5463],
         ...,
         [ 0.1000, 10.5905,  7.7079],
         [ 0.1000, 10.5905,  7.7913],
         [ 0.1000, 10.5905,  7.4606]],
        [[ 0.1000, 10.6559, 10.0640],
         [ 0.1000, 10.6559, 10.1732],
         [ 0.1000, 10.6559,  9.8281],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9444],
         [ 0.1000, 10.6559,  9.7896]],
        [[ 0.1000, 10.6981, 11.4501],
         [ 0.1000, 10.6981, 11.6585],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6608]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9532]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8339],
         [ 0.1000, 10.8051, 16.4195],
         [ 0.1000, 10.8051, 17.8601],
         ...,
         [ 0.1000, 10.8051, 17.4565],
         [ 0.1000, 10.8051, 17.2657],
         [ 0.1000, 10.8051, 18.0943]],
        [[ 0.1000, 10.6368,  9.4923],
         [ 0.1000, 10.6368,  9.5634],
         [ 0.1000, 10.6368,  9.0991],
         ...,
         [ 0.1000, 10.6368,  9.2053],
         [ 0.1000, 10.6368,  9.2610],
         [ 0.1000, 10.6368,  9.0437]],
        [[ 0.1000, 10.6161,  8.9097],
         [ 0.1000, 10.6161,  8.9444],
         [ 0.1000, 10.6161,  8.3704],
         ...,
         [ 0.1000, 10.6161,  8.5043],
         [ 0.1000, 10.6161,  8.5737],
         [ 0.1000, 10.6161,  8.2997]],
        ...,
        [[ 0.1000, 10.5905,  8.2361],
         [ 0.1000, 10.5905,  8.2316],
         [ 0.1000, 10.5905,  7.5465],
         ...,
         [ 0.1000, 10.5905,  7.7079],
         [ 0.1000, 10.5905,  7.7912],
         [ 0.1000, 10.5905,  7.4608]],
        [[ 0.1000, 10.6559, 10.0640],
         [ 0.1000, 10.6559, 10.1728],
         [ 0.1000, 10.6559,  9.8282],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9443],
         [ 0.1000, 10.6559,  9.7897]],
        [[ 0.1000, 10.6981, 11.4501],
         [ 0.1000, 10.6981, 11.6585],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6608]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8338],
         [ 0.1000, 10.8051, 16.4185],
         [ 0.1000, 10.8051, 17.8604],
         ...,
         [ 0.1000, 10.8051, 17.4564],
         [ 0.1000, 10.8051, 17.2655],
         [ 0.1000, 10.8051, 18.0948]],
        [[ 0.1000, 10.6368,  9.4924],
         [ 0.1000, 10.6368,  9.5638],
         [ 0.1000, 10.6368,  9.0991],
         ...,
         [ 0.1000, 10.6368,  9.2054],
         [ 0.1000, 10.6368,  9.2611],
         [ 0.1000, 10.6368,  9.0436]],
        [[ 0.1000, 10.6161,  8.9098],
         [ 0.1000, 10.6161,  8.9449],
         [ 0.1000, 10.6161,  8.3703],
         ...,
         [ 0.1000, 10.6161,  8.5043],
         [ 0.1000, 10.6161,  8.5738],
         [ 0.1000, 10.6161,  8.2996]],
        ...,
        [[ 0.1000, 10.5905,  8.2362],
         [ 0.1000, 10.5905,  8.2322],
         [ 0.1000, 10.5905,  7.5463],
         ...,
         [ 0.1000, 10.5905,  7.7079],
         [ 0.1000, 10.5905,  7.7913],
         [ 0.1000, 10.5905,  7.4606]],
        [[ 0.1000, 10.6559, 10.0640],
         [ 0.1000, 10.6559, 10.1731],
         [ 0.1000, 10.6559,  9.8281],
         ...,
         [ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.9444],
         [ 0.1000, 10.6559,  9.7896]],
        [[ 0.1000, 10.6981, 11.4501],
         [ 0.1000, 10.6981, 11.6585],
         [ 0.1000, 10.6981, 11.6503],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6608]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9259],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8132],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8068],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7802]],
        [[0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8483],
         ...,
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9528],
         [ 0.1000, 10.8051, 17.6250],
         [ 0.1000, 10.8051, 17.5145],
         ...,
         [ 0.1000, 10.8051, 17.5298],
         [ 0.1000, 10.8051, 17.5264],
         [ 0.1000, 10.8051, 17.5334]],
        [[ 0.1000, 10.6368,  9.4272],
         [ 0.1000, 10.6368,  9.1592],
         [ 0.1000, 10.6368,  9.1892],
         ...,
         [ 0.1000, 10.6368,  9.1849],
         [ 0.1000, 10.6368,  9.1859],
         [ 0.1000, 10.6368,  9.1840]],
        [[ 0.1000, 10.6161,  8.8329],
         [ 0.1000, 10.6161,  8.4464],
         [ 0.1000, 10.6161,  8.4840],
         ...,
         [ 0.1000, 10.6161,  8.4787],
         [ 0.1000, 10.6161,  8.4799],
         [ 0.1000, 10.6161,  8.4775]],
        ...,
        [[ 0.1000, 10.5905,  8.1470],
         [ 0.1000, 10.5905,  7.6382],
         [ 0.1000, 10.5905,  7.6835],
         ...,
         [ 0.1000, 10.5905,  7.6771],
         [ 0.1000, 10.5905,  7.6786],
         [ 0.1000, 10.5905,  7.6757]],
        [[ 0.1000, 10.6559, 10.0113],
         [ 0.1000, 10.6559,  9.8707],
         [ 0.1000, 10.6559,  9.8921],
         ...,
         [ 0.1000, 10.6559,  9.8891],
         [ 0.1000, 10.6559,  9.8898],
         [ 0.1000, 10.6559,  9.8884]],
        [[ 0.1000, 10.6981, 11.4316],
         [ 0.1000, 10.6981, 11.6423],
         [ 0.1000, 10.6981, 11.6395],
         ...,
         [ 0.1000, 10.6981, 11.6398],
         [ 0.1000, 10.6981, 11.6398],
         [ 0.1000, 10.6981, 11.6399]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9221],
         [0.1000, 1.0531, 0.9493],
         [0.1000, 1.0531, 0.9475],
         ...,
         [0.1000, 1.0531, 0.9478],
         [0.1000, 1.0531, 0.9477],
         [0.1000, 1.0531, 0.9478]],
        [[0.1000, 1.0495, 0.8160],
         [0.1000, 1.0495, 0.8116],
         [0.1000, 1.0495, 0.8121],
         ...,
         [0.1000, 1.0495, 0.8120],
         [0.1000, 1.0495, 0.8120],
         [0.1000, 1.0495, 0.8120]],
        [[0.1000, 1.0490, 0.8063],
         [0.1000, 1.0490, 0.8000],
         [0.1000, 1.0490, 0.8006],
         ...,
         [0.1000, 1.0490, 0.8005],
         [0.1000, 1.0490, 0.8006],
         [0.1000, 1.0490, 0.8005]],
        ...,
        [[0.1000, 1.0485, 0.7951],
         [0.1000, 1.0485, 0.7869],
         [0.1000, 1.0485, 0.7876],
         ...,
         [0.1000, 1.0485, 0.7875],
         [0.1000, 1.0485, 0.7875],
         [0.1000, 1.0485, 0.7875]],
        [[0.1000, 1.0499, 0.8255],
         [0.1000, 1.0499, 0.8232],
         [0.1000, 1.0499, 0.8235],
         ...,
         [0.1000, 1.0499, 0.8235],
         [0.1000, 1.0499, 0.8235],
         [0.1000, 1.0499, 0.8235]],
        [[0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520],
         ...,
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8560],
         [ 0.1000, 10.8051, 16.6338],
         [ 0.1000, 10.8051, 17.7911],
         ...,
         [ 0.1000, 10.8051, 17.4708],
         [ 0.1000, 10.8051, 17.3158],
         [ 0.1000, 10.8051, 17.9810]],
        [[ 0.1000, 10.6368,  9.4794],
         [ 0.1000, 10.6368,  9.4766],
         [ 0.1000, 10.6368,  9.1163],
         ...,
         [ 0.1000, 10.6368,  9.2013],
         [ 0.1000, 10.6368,  9.2460],
         [ 0.1000, 10.6368,  9.0700]],
        [[ 0.1000, 10.6161,  8.8946],
         [ 0.1000, 10.6161,  8.8391],
         [ 0.1000, 10.6161,  8.3921],
         ...,
         [ 0.1000, 10.6161,  8.4992],
         [ 0.1000, 10.6161,  8.5551],
         [ 0.1000, 10.6161,  8.3333]],
        ...,
        [[ 0.1000, 10.5905,  8.2187],
         [ 0.1000, 10.5905,  8.1071],
         [ 0.1000, 10.5905,  7.5728],
         ...,
         [ 0.1000, 10.5905,  7.7019],
         [ 0.1000, 10.5905,  7.7688],
         [ 0.1000, 10.5905,  7.5016]],
        [[ 0.1000, 10.6559, 10.0535],
         [ 0.1000, 10.6559, 10.1060],
         [ 0.1000, 10.6559,  9.8402],
         ...,
         [ 0.1000, 10.6559,  9.9009],
         [ 0.1000, 10.6559,  9.9334],
         [ 0.1000, 10.6559,  9.8079]],
        [[ 0.1000, 10.6981, 11.4461],
         [ 0.1000, 10.6981, 11.6466],
         [ 0.1000, 10.6981, 11.6476],
         ...,
         [ 0.1000, 10.6981, 11.6386],
         [ 0.1000, 10.6981, 11.6363],
         [ 0.1000, 10.6981, 11.6554]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9176],
         [0.1000, 1.0531, 0.9303],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9439],
         [0.1000, 1.0531, 0.9414],
         [0.1000, 1.0531, 0.9522]],
        [[0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8080],
         ...,
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8101],
         [0.1000, 1.0495, 0.8072]],
        [[0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.8035],
         [0.1000, 1.0490, 0.7962],
         ...,
         [0.1000, 1.0490, 0.7980],
         [0.1000, 1.0490, 0.7989],
         [0.1000, 1.0490, 0.7953]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7916],
         [0.1000, 1.0485, 0.7829],
         ...,
         [0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7817]],
        [[0.1000, 1.0499, 0.8232],
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8198],
         ...,
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8213],
         [0.1000, 1.0499, 0.8192]],
        [[0.1000, 1.0508, 0.8459],
         [0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.8492],
         ...,
         [0.1000, 1.0508, 0.8490],
         [0.1000, 1.0508, 0.8490],
         [0.1000, 1.0508, 0.8493]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8382],
         [ 0.1000, 10.8051, 16.4610],
         [ 0.1000, 10.8051, 17.8464],
         ...,
         [ 0.1000, 10.8051, 17.4593],
         [ 0.1000, 10.8051, 17.2756],
         [ 0.1000, 10.8051, 18.0718]],
        [[ 0.1000, 10.6368,  9.4898],
         [ 0.1000, 10.6368,  9.5459],
         [ 0.1000, 10.6368,  9.1025],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2580],
         [ 0.1000, 10.6368,  9.0489]],
        [[ 0.1000, 10.6161,  8.9067],
         [ 0.1000, 10.6161,  8.9233],
         [ 0.1000, 10.6161,  8.3746],
         ...,
         [ 0.1000, 10.6161,  8.5033],
         [ 0.1000, 10.6161,  8.5700],
         [ 0.1000, 10.6161,  8.3063]],
        ...,
        [[ 0.1000, 10.5905,  8.2327],
         [ 0.1000, 10.5905,  8.2067],
         [ 0.1000, 10.5905,  7.5516],
         ...,
         [ 0.1000, 10.5905,  7.7067],
         [ 0.1000, 10.5905,  7.7868],
         [ 0.1000, 10.5905,  7.4688]],
        [[ 0.1000, 10.6559, 10.0619],
         [ 0.1000, 10.6559, 10.1593],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7933]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6558],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8348],
         [ 0.1000, 10.8051, 16.4275],
         [ 0.1000, 10.8051, 17.8574],
         ...,
         [ 0.1000, 10.8051, 17.4570],
         [ 0.1000, 10.8051, 17.2676],
         [ 0.1000, 10.8051, 18.0899]],
        [[ 0.1000, 10.6368,  9.4918],
         [ 0.1000, 10.6368,  9.5600],
         [ 0.1000, 10.6368,  9.0998],
         ...,
         [ 0.1000, 10.6368,  9.2052],
         [ 0.1000, 10.6368,  9.2604],
         [ 0.1000, 10.6368,  9.0447]],
        [[ 0.1000, 10.6161,  8.9092],
         [ 0.1000, 10.6161,  8.9403],
         [ 0.1000, 10.6161,  8.3712],
         ...,
         [ 0.1000, 10.6161,  8.5041],
         [ 0.1000, 10.6161,  8.5730],
         [ 0.1000, 10.6161,  8.3010]],
        ...,
        [[ 0.1000, 10.5905,  8.2354],
         [ 0.1000, 10.5905,  8.2267],
         [ 0.1000, 10.5905,  7.5475],
         ...,
         [ 0.1000, 10.5905,  7.7077],
         [ 0.1000, 10.5905,  7.7903],
         [ 0.1000, 10.5905,  7.4624]],
        [[ 0.1000, 10.6559, 10.0636],
         [ 0.1000, 10.6559, 10.1702],
         [ 0.1000, 10.6559,  9.8286],
         ...,
         [ 0.1000, 10.6559,  9.9037],
         [ 0.1000, 10.6559,  9.9439],
         [ 0.1000, 10.6559,  9.7904]],
        [[ 0.1000, 10.6981, 11.4500],
         [ 0.1000, 10.6981, 11.6579],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8351],
         [ 0.1000, 10.8051, 16.4302],
         [ 0.1000, 10.8051, 17.8565],
         ...,
         [ 0.1000, 10.8051, 17.4572],
         [ 0.1000, 10.8051, 17.2683],
         [ 0.1000, 10.8051, 18.0884]],
        [[ 0.1000, 10.6368,  9.4917],
         [ 0.1000, 10.6368,  9.5588],
         [ 0.1000, 10.6368,  9.1000],
         ...,
         [ 0.1000, 10.6368,  9.2051],
         [ 0.1000, 10.6368,  9.2602],
         [ 0.1000, 10.6368,  9.0451]],
        [[ 0.1000, 10.6161,  8.9090],
         [ 0.1000, 10.6161,  8.9389],
         [ 0.1000, 10.6161,  8.3715],
         ...,
         [ 0.1000, 10.6161,  8.5040],
         [ 0.1000, 10.6161,  8.5728],
         [ 0.1000, 10.6161,  8.3014]],
        ...,
        [[ 0.1000, 10.5905,  8.2352],
         [ 0.1000, 10.5905,  8.2251],
         [ 0.1000, 10.5905,  7.5478],
         ...,
         [ 0.1000, 10.5905,  7.7076],
         [ 0.1000, 10.5905,  7.7900],
         [ 0.1000, 10.5905,  7.4629]],
        [[ 0.1000, 10.6559, 10.0634],
         [ 0.1000, 10.6559, 10.1693],
         [ 0.1000, 10.6559,  9.8288],
         ...,
         [ 0.1000, 10.6559,  9.9037],
         [ 0.1000, 10.6559,  9.9437],
         [ 0.1000, 10.6559,  9.7906]],
        [[ 0.1000, 10.6981, 11.4499],
         [ 0.1000, 10.6981, 11.6577],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6605]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9261],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8349],
         [ 0.1000, 10.8051, 16.4293],
         [ 0.1000, 10.8051, 17.8569],
         ...,
         [ 0.1000, 10.8051, 17.4572],
         [ 0.1000, 10.8051, 17.2680],
         [ 0.1000, 10.8051, 18.0890]],
        [[ 0.1000, 10.6368,  9.4917],
         [ 0.1000, 10.6368,  9.5592],
         [ 0.1000, 10.6368,  9.0999],
         ...,
         [ 0.1000, 10.6368,  9.2052],
         [ 0.1000, 10.6368,  9.2603],
         [ 0.1000, 10.6368,  9.0449]],
        [[ 0.1000, 10.6161,  8.9090],
         [ 0.1000, 10.6161,  8.9394],
         [ 0.1000, 10.6161,  8.3714],
         ...,
         [ 0.1000, 10.6161,  8.5040],
         [ 0.1000, 10.6161,  8.5728],
         [ 0.1000, 10.6161,  8.3013]],
        ...,
        [[ 0.1000, 10.5905,  8.2353],
         [ 0.1000, 10.5905,  8.2257],
         [ 0.1000, 10.5905,  7.5477],
         ...,
         [ 0.1000, 10.5905,  7.7076],
         [ 0.1000, 10.5905,  7.7901],
         [ 0.1000, 10.5905,  7.4627]],
        [[ 0.1000, 10.6559, 10.0635],
         [ 0.1000, 10.6559, 10.1696],
         [ 0.1000, 10.6559,  9.8287],
         ...,
         [ 0.1000, 10.6559,  9.9037],
         [ 0.1000, 10.6559,  9.9438],
         [ 0.1000, 10.6559,  9.7906]],
        [[ 0.1000, 10.6981, 11.4499],
         [ 0.1000, 10.6981, 11.6578],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6605]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9261],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9637],
         [ 0.1000, 10.8051, 17.6302],
         [ 0.1000, 10.8051, 17.5214],
         ...,
         [ 0.1000, 10.8051, 17.5431],
         [ 0.1000, 10.8051, 17.5424],
         [ 0.1000, 10.8051, 17.5310]],
        [[ 0.1000, 10.6368,  9.4220],
         [ 0.1000, 10.6368,  9.1578],
         [ 0.1000, 10.6368,  9.1873],
         ...,
         [ 0.1000, 10.6368,  9.1813],
         [ 0.1000, 10.6368,  9.1815],
         [ 0.1000, 10.6368,  9.1846]],
        [[ 0.1000, 10.6161,  8.8266],
         [ 0.1000, 10.6161,  8.4446],
         [ 0.1000, 10.6161,  8.4816],
         ...,
         [ 0.1000, 10.6161,  8.4741],
         [ 0.1000, 10.6161,  8.4744],
         [ 0.1000, 10.6161,  8.4783]],
        ...,
        [[ 0.1000, 10.5905,  8.1398],
         [ 0.1000, 10.5905,  7.6361],
         [ 0.1000, 10.5905,  7.6806],
         ...,
         [ 0.1000, 10.5905,  7.6717],
         [ 0.1000, 10.5905,  7.6719],
         [ 0.1000, 10.5905,  7.6766]],
        [[ 0.1000, 10.6559, 10.0072],
         [ 0.1000, 10.6559,  9.8697],
         [ 0.1000, 10.6559,  9.8908],
         ...,
         [ 0.1000, 10.6559,  9.8865],
         [ 0.1000, 10.6559,  9.8866],
         [ 0.1000, 10.6559,  9.8889]],
        [[ 0.1000, 10.6981, 11.4304],
         [ 0.1000, 10.6981, 11.6424],
         [ 0.1000, 10.6981, 11.6397],
         ...,
         [ 0.1000, 10.6981, 11.6401],
         [ 0.1000, 10.6981, 11.6401],
         [ 0.1000, 10.6981, 11.6399]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9222],
         [0.1000, 1.0531, 0.9493],
         [0.1000, 1.0531, 0.9476],
         ...,
         [0.1000, 1.0531, 0.9479],
         [0.1000, 1.0531, 0.9479],
         [0.1000, 1.0531, 0.9477]],
        [[0.1000, 1.0495, 0.8158],
         [0.1000, 1.0495, 0.8115],
         [0.1000, 1.0495, 0.8120],
         ...,
         [0.1000, 1.0495, 0.8119],
         [0.1000, 1.0495, 0.8119],
         [0.1000, 1.0495, 0.8120]],
        [[0.1000, 1.0490, 0.8062],
         [0.1000, 1.0490, 0.7999],
         [0.1000, 1.0490, 0.8005],
         ...,
         [0.1000, 1.0490, 0.8004],
         [0.1000, 1.0490, 0.8004],
         [0.1000, 1.0490, 0.8005]],
        ...,
        [[0.1000, 1.0485, 0.7950],
         [0.1000, 1.0485, 0.7868],
         [0.1000, 1.0485, 0.7875],
         ...,
         [0.1000, 1.0485, 0.7874],
         [0.1000, 1.0485, 0.7874],
         [0.1000, 1.0485, 0.7875]],
        [[0.1000, 1.0499, 0.8254],
         [0.1000, 1.0499, 0.8231],
         [0.1000, 1.0499, 0.8235],
         ...,
         [0.1000, 1.0499, 0.8234],
         [0.1000, 1.0499, 0.8234],
         [0.1000, 1.0499, 0.8234]],
        [[0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8520],
         [0.1000, 1.0508, 0.8519],
         ...,
         [0.1000, 1.0508, 0.8519],
         [0.1000, 1.0508, 0.8519],
         [0.1000, 1.0508, 0.8519]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8593],
         [ 0.1000, 10.8051, 16.6472],
         [ 0.1000, 10.8051, 17.7886],
         ...,
         [ 0.1000, 10.8051, 17.4742],
         [ 0.1000, 10.8051, 17.3218],
         [ 0.1000, 10.8051, 17.9741]],
        [[ 0.1000, 10.6368,  9.4777],
         [ 0.1000, 10.6368,  9.4715],
         [ 0.1000, 10.6368,  9.1169],
         ...,
         [ 0.1000, 10.6368,  9.2004],
         [ 0.1000, 10.6368,  9.2442],
         [ 0.1000, 10.6368,  9.0716]],
        [[ 0.1000, 10.6161,  8.8925],
         [ 0.1000, 10.6161,  8.8328],
         [ 0.1000, 10.6161,  8.3929],
         ...,
         [ 0.1000, 10.6161,  8.4980],
         [ 0.1000, 10.6161,  8.5529],
         [ 0.1000, 10.6161,  8.3354]],
        ...,
        [[ 0.1000, 10.5905,  8.2162],
         [ 0.1000, 10.5905,  8.0997],
         [ 0.1000, 10.5905,  7.5737],
         ...,
         [ 0.1000, 10.5905,  7.7004],
         [ 0.1000, 10.5905,  7.7662],
         [ 0.1000, 10.5905,  7.5041]],
        [[ 0.1000, 10.6559, 10.0520],
         [ 0.1000, 10.6559, 10.1020],
         [ 0.1000, 10.6559,  9.8407],
         ...,
         [ 0.1000, 10.6559,  9.9002],
         [ 0.1000, 10.6559,  9.9321],
         [ 0.1000, 10.6559,  9.8090]],
        [[ 0.1000, 10.6981, 11.4456],
         [ 0.1000, 10.6981, 11.6460],
         [ 0.1000, 10.6981, 11.6475],
         ...,
         [ 0.1000, 10.6981, 11.6387],
         [ 0.1000, 10.6981, 11.6364],
         [ 0.1000, 10.6981, 11.6551]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9177],
         [0.1000, 1.0531, 0.9305],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9440],
         [0.1000, 1.0531, 0.9415],
         [0.1000, 1.0531, 0.9521]],
        [[0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8138],
         [0.1000, 1.0495, 0.8081],
         ...,
         [0.1000, 1.0495, 0.8094],
         [0.1000, 1.0495, 0.8101],
         [0.1000, 1.0495, 0.8073]],
        [[0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.8034],
         [0.1000, 1.0490, 0.7963],
         ...,
         [0.1000, 1.0490, 0.7980],
         [0.1000, 1.0490, 0.7989],
         [0.1000, 1.0490, 0.7953]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7915],
         [0.1000, 1.0485, 0.7830],
         ...,
         [0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7818]],
        [[0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8198],
         ...,
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8213],
         [0.1000, 1.0499, 0.8193]],
        [[0.1000, 1.0508, 0.8459],
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8492],
         ...,
         [0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.8490],
         [0.1000, 1.0508, 0.8493]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8398],
         [ 0.1000, 10.8051, 16.4720],
         [ 0.1000, 10.8051, 17.8431],
         ...,
         [ 0.1000, 10.8051, 17.4606],
         [ 0.1000, 10.8051, 17.2787],
         [ 0.1000, 10.8051, 18.0658]],
        [[ 0.1000, 10.6368,  9.4889],
         [ 0.1000, 10.6368,  9.5413],
         [ 0.1000, 10.6368,  9.1033],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2571],
         [ 0.1000, 10.6368,  9.0502]],
        [[ 0.1000, 10.6161,  8.9057],
         [ 0.1000, 10.6161,  8.9177],
         [ 0.1000, 10.6161,  8.3757],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5688],
         [ 0.1000, 10.6161,  8.3081]],
        ...,
        [[ 0.1000, 10.5905,  8.2315],
         [ 0.1000, 10.5905,  8.2001],
         [ 0.1000, 10.5905,  7.5529],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7853],
         [ 0.1000, 10.5905,  7.4709]],
        [[ 0.1000, 10.6559, 10.0612],
         [ 0.1000, 10.6559, 10.1557],
         [ 0.1000, 10.6559,  9.8311],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9414],
         [ 0.1000, 10.6559,  9.7942]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6551],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8360],
         [ 0.1000, 10.8051, 16.4382],
         [ 0.1000, 10.8051, 17.8540],
         ...,
         [ 0.1000, 10.8051, 17.4579],
         [ 0.1000, 10.8051, 17.2703],
         [ 0.1000, 10.8051, 18.0841]],
        [[ 0.1000, 10.6368,  9.4911],
         [ 0.1000, 10.6368,  9.5555],
         [ 0.1000, 10.6368,  9.1006],
         ...,
         [ 0.1000, 10.6368,  9.2049],
         [ 0.1000, 10.6368,  9.2596],
         [ 0.1000, 10.6368,  9.0461]],
        [[ 0.1000, 10.6161,  8.9083],
         [ 0.1000, 10.6161,  8.9348],
         [ 0.1000, 10.6161,  8.3723],
         ...,
         [ 0.1000, 10.6161,  8.5038],
         [ 0.1000, 10.6161,  8.5720],
         [ 0.1000, 10.6161,  8.3027]],
        ...,
        [[ 0.1000, 10.5905,  8.2345],
         [ 0.1000, 10.5905,  8.2203],
         [ 0.1000, 10.5905,  7.5488],
         ...,
         [ 0.1000, 10.5905,  7.7073],
         [ 0.1000, 10.5905,  7.7891],
         [ 0.1000, 10.5905,  7.4644]],
        [[ 0.1000, 10.6559, 10.0630],
         [ 0.1000, 10.6559, 10.1667],
         [ 0.1000, 10.6559,  9.8292],
         ...,
         [ 0.1000, 10.6559,  9.9035],
         [ 0.1000, 10.6559,  9.9433],
         [ 0.1000, 10.6559,  9.7913]],
        [[ 0.1000, 10.6981, 11.4497],
         [ 0.1000, 10.6981, 11.6572],
         [ 0.1000, 10.6981, 11.6500],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6603]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9263],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8385],
         [ 0.1000, 10.8051, 16.4605],
         [ 0.1000, 10.8051, 17.8468],
         ...,
         [ 0.1000, 10.8051, 17.4597],
         [ 0.1000, 10.8051, 17.2759],
         [ 0.1000, 10.8051, 18.0720]],
        [[ 0.1000, 10.6368,  9.4897],
         [ 0.1000, 10.6368,  9.5461],
         [ 0.1000, 10.6368,  9.1024],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2579],
         [ 0.1000, 10.6368,  9.0488]],
        [[ 0.1000, 10.6161,  8.9066],
         [ 0.1000, 10.6161,  8.9235],
         [ 0.1000, 10.6161,  8.3745],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5699],
         [ 0.1000, 10.6161,  8.3062]],
        ...,
        [[ 0.1000, 10.5905,  8.2325],
         [ 0.1000, 10.5905,  8.2070],
         [ 0.1000, 10.5905,  7.5515],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7866],
         [ 0.1000, 10.5905,  7.4687]],
        [[ 0.1000, 10.6559, 10.0618],
         [ 0.1000, 10.6559, 10.1594],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7932]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6558],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8365],
         [ 0.1000, 10.8051, 16.4429],
         [ 0.1000, 10.8051, 17.8525],
         ...,
         [ 0.1000, 10.8051, 17.4583],
         [ 0.1000, 10.8051, 17.2715],
         [ 0.1000, 10.8051, 18.0816]],
        [[ 0.1000, 10.6368,  9.4908],
         [ 0.1000, 10.6368,  9.5535],
         [ 0.1000, 10.6368,  9.1010],
         ...,
         [ 0.1000, 10.6368,  9.2048],
         [ 0.1000, 10.6368,  9.2593],
         [ 0.1000, 10.6368,  9.0466]],
        [[ 0.1000, 10.6161,  8.9080],
         [ 0.1000, 10.6161,  8.9325],
         [ 0.1000, 10.6161,  8.3727],
         ...,
         [ 0.1000, 10.6161,  8.5036],
         [ 0.1000, 10.6161,  8.5716],
         [ 0.1000, 10.6161,  8.3034]],
        ...,
        [[ 0.1000, 10.5905,  8.2341],
         [ 0.1000, 10.5905,  8.2175],
         [ 0.1000, 10.5905,  7.5493],
         ...,
         [ 0.1000, 10.5905,  7.7071],
         [ 0.1000, 10.5905,  7.7886],
         [ 0.1000, 10.5905,  7.4653]],
        [[ 0.1000, 10.6559, 10.0627],
         [ 0.1000, 10.6559, 10.1651],
         [ 0.1000, 10.6559,  9.8295],
         ...,
         [ 0.1000, 10.6559,  9.9034],
         [ 0.1000, 10.6559,  9.9430],
         [ 0.1000, 10.6559,  9.7917]],
        [[ 0.1000, 10.6981, 11.4496],
         [ 0.1000, 10.6981, 11.6569],
         [ 0.1000, 10.6981, 11.6500],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6602]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9264],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8361],
         [ 0.1000, 10.8051, 16.4392],
         [ 0.1000, 10.8051, 17.8536],
         ...,
         [ 0.1000, 10.8051, 17.4580],
         [ 0.1000, 10.8051, 17.2705],
         [ 0.1000, 10.8051, 18.0835]],
        [[ 0.1000, 10.6368,  9.4911],
         [ 0.1000, 10.6368,  9.5550],
         [ 0.1000, 10.6368,  9.1007],
         ...,
         [ 0.1000, 10.6368,  9.2049],
         [ 0.1000, 10.6368,  9.2595],
         [ 0.1000, 10.6368,  9.0462]],
        [[ 0.1000, 10.6161,  8.9083],
         [ 0.1000, 10.6161,  8.9343],
         [ 0.1000, 10.6161,  8.3724],
         ...,
         [ 0.1000, 10.6161,  8.5038],
         [ 0.1000, 10.6161,  8.5719],
         [ 0.1000, 10.6161,  8.3029]],
        ...,
        [[ 0.1000, 10.5905,  8.2344],
         [ 0.1000, 10.5905,  8.2197],
         [ 0.1000, 10.5905,  7.5489],
         ...,
         [ 0.1000, 10.5905,  7.7073],
         [ 0.1000, 10.5905,  7.7890],
         [ 0.1000, 10.5905,  7.4646]],
        [[ 0.1000, 10.6559, 10.0629],
         [ 0.1000, 10.6559, 10.1663],
         [ 0.1000, 10.6559,  9.8293],
         ...,
         [ 0.1000, 10.6559,  9.9035],
         [ 0.1000, 10.6559,  9.9432],
         [ 0.1000, 10.6559,  9.7914]],
        [[ 0.1000, 10.6981, 11.4497],
         [ 0.1000, 10.6981, 11.6572],
         [ 0.1000, 10.6981, 11.6500],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6603]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9263],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8360],
         [ 0.1000, 10.8051, 16.4382],
         [ 0.1000, 10.8051, 17.8540],
         ...,
         [ 0.1000, 10.8051, 17.4579],
         [ 0.1000, 10.8051, 17.2703],
         [ 0.1000, 10.8051, 18.0841]],
        [[ 0.1000, 10.6368,  9.4911],
         [ 0.1000, 10.6368,  9.5555],
         [ 0.1000, 10.6368,  9.1006],
         ...,
         [ 0.1000, 10.6368,  9.2049],
         [ 0.1000, 10.6368,  9.2596],
         [ 0.1000, 10.6368,  9.0461]],
        [[ 0.1000, 10.6161,  8.9083],
         [ 0.1000, 10.6161,  8.9348],
         [ 0.1000, 10.6161,  8.3723],
         ...,
         [ 0.1000, 10.6161,  8.5038],
         [ 0.1000, 10.6161,  8.5720],
         [ 0.1000, 10.6161,  8.3027]],
        ...,
        [[ 0.1000, 10.5905,  8.2345],
         [ 0.1000, 10.5905,  8.2203],
         [ 0.1000, 10.5905,  7.5488],
         ...,
         [ 0.1000, 10.5905,  7.7073],
         [ 0.1000, 10.5905,  7.7891],
         [ 0.1000, 10.5905,  7.4644]],
        [[ 0.1000, 10.6559, 10.0630],
         [ 0.1000, 10.6559, 10.1667],
         [ 0.1000, 10.6559,  9.8292],
         ...,
         [ 0.1000, 10.6559,  9.9035],
         [ 0.1000, 10.6559,  9.9433],
         [ 0.1000, 10.6559,  9.7913]],
        [[ 0.1000, 10.6981, 11.4497],
         [ 0.1000, 10.6981, 11.6572],
         [ 0.1000, 10.6981, 11.6500],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6603]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9263],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9765],
         [ 0.1000, 10.8051, 17.6364],
         [ 0.1000, 10.8051, 17.5255],
         ...,
         [ 0.1000, 10.8051, 17.5506],
         [ 0.1000, 10.8051, 17.5501],
         [ 0.1000, 10.8051, 17.5287]],
        [[ 0.1000, 10.6368,  9.4161],
         [ 0.1000, 10.6368,  9.1562],
         [ 0.1000, 10.6368,  9.1861],
         ...,
         [ 0.1000, 10.6368,  9.1792],
         [ 0.1000, 10.6368,  9.1794],
         [ 0.1000, 10.6368,  9.1853]],
        [[ 0.1000, 10.6161,  8.8196],
         [ 0.1000, 10.6161,  8.4425],
         [ 0.1000, 10.6161,  8.4802],
         ...,
         [ 0.1000, 10.6161,  8.4715],
         [ 0.1000, 10.6161,  8.4717],
         [ 0.1000, 10.6161,  8.4791]],
        ...,
        [[ 0.1000, 10.5905,  8.1314],
         [ 0.1000, 10.5905,  7.6336],
         [ 0.1000, 10.5905,  7.6789],
         ...,
         [ 0.1000, 10.5905,  7.6685],
         [ 0.1000, 10.5905,  7.6687],
         [ 0.1000, 10.5905,  7.6776]],
        [[ 0.1000, 10.6559, 10.0026],
         [ 0.1000, 10.6559,  9.8685],
         [ 0.1000, 10.6559,  9.8899],
         ...,
         [ 0.1000, 10.6559,  9.8850],
         [ 0.1000, 10.6559,  9.8851],
         [ 0.1000, 10.6559,  9.8893]],
        [[ 0.1000, 10.6981, 11.4293],
         [ 0.1000, 10.6981, 11.6426],
         [ 0.1000, 10.6981, 11.6397],
         ...,
         [ 0.1000, 10.6981, 11.6403],
         [ 0.1000, 10.6981, 11.6403],
         [ 0.1000, 10.6981, 11.6398]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9224],
         [0.1000, 1.0531, 0.9494],
         [0.1000, 1.0531, 0.9476],
         ...,
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9476]],
        [[0.1000, 1.0495, 0.8157],
         [0.1000, 1.0495, 0.8115],
         [0.1000, 1.0495, 0.8120],
         ...,
         [0.1000, 1.0495, 0.8118],
         [0.1000, 1.0495, 0.8118],
         [0.1000, 1.0495, 0.8119]],
        [[0.1000, 1.0490, 0.8060],
         [0.1000, 1.0490, 0.7999],
         [0.1000, 1.0490, 0.8005],
         ...,
         [0.1000, 1.0490, 0.8003],
         [0.1000, 1.0490, 0.8003],
         [0.1000, 1.0490, 0.8005]],
        ...,
        [[0.1000, 1.0485, 0.7948],
         [0.1000, 1.0485, 0.7867],
         [0.1000, 1.0485, 0.7874],
         ...,
         [0.1000, 1.0485, 0.7873],
         [0.1000, 1.0485, 0.7873],
         [0.1000, 1.0485, 0.7874]],
        [[0.1000, 1.0499, 0.8252],
         [0.1000, 1.0499, 0.8230],
         [0.1000, 1.0499, 0.8234],
         ...,
         [0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8234]],
        [[0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8519],
         [0.1000, 1.0508, 0.8519],
         ...,
         [0.1000, 1.0508, 0.8519],
         [0.1000, 1.0508, 0.8519],
         [0.1000, 1.0508, 0.8519]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8629],
         [ 0.1000, 10.8051, 16.6602],
         [ 0.1000, 10.8051, 17.7859],
         ...,
         [ 0.1000, 10.8051, 17.4766],
         [ 0.1000, 10.8051, 17.3261],
         [ 0.1000, 10.8051, 17.9676]],
        [[ 0.1000, 10.6368,  9.4757],
         [ 0.1000, 10.6368,  9.4665],
         [ 0.1000, 10.6368,  9.1176],
         ...,
         [ 0.1000, 10.6368,  9.1997],
         [ 0.1000, 10.6368,  9.2429],
         [ 0.1000, 10.6368,  9.0732]],
        [[ 0.1000, 10.6161,  8.8902],
         [ 0.1000, 10.6161,  8.8268],
         [ 0.1000, 10.6161,  8.3938],
         ...,
         [ 0.1000, 10.6161,  8.4972],
         [ 0.1000, 10.6161,  8.5512],
         [ 0.1000, 10.6161,  8.3374]],
        ...,
        [[ 0.1000, 10.5905,  8.2135],
         [ 0.1000, 10.5905,  8.0925],
         [ 0.1000, 10.5905,  7.5748],
         ...,
         [ 0.1000, 10.5905,  7.6994],
         [ 0.1000, 10.5905,  7.7643],
         [ 0.1000, 10.5905,  7.5065]],
        [[ 0.1000, 10.6559, 10.0504],
         [ 0.1000, 10.6559, 10.0982],
         [ 0.1000, 10.6559,  9.8411],
         ...,
         [ 0.1000, 10.6559,  9.8997],
         [ 0.1000, 10.6559,  9.9311],
         [ 0.1000, 10.6559,  9.8101]],
        [[ 0.1000, 10.6981, 11.4451],
         [ 0.1000, 10.6981, 11.6454],
         [ 0.1000, 10.6981, 11.6474],
         ...,
         [ 0.1000, 10.6981, 11.6387],
         [ 0.1000, 10.6981, 11.6364],
         [ 0.1000, 10.6981, 11.6548]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9178],
         [0.1000, 1.0531, 0.9308],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9441],
         [0.1000, 1.0531, 0.9416],
         [0.1000, 1.0531, 0.9521]],
        [[0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8138],
         [0.1000, 1.0495, 0.8081],
         ...,
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8102],
         [0.1000, 1.0495, 0.8074]],
        [[0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.8034],
         [0.1000, 1.0490, 0.7963],
         ...,
         [0.1000, 1.0490, 0.7980],
         [0.1000, 1.0490, 0.7989],
         [0.1000, 1.0490, 0.7954]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7914],
         [0.1000, 1.0485, 0.7830],
         ...,
         [0.1000, 1.0485, 0.7851],
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7819]],
        [[0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8199],
         ...,
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8213],
         [0.1000, 1.0499, 0.8194]],
        [[0.1000, 1.0508, 0.8460],
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8493],
         ...,
         [0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.8494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8413],
         [ 0.1000, 10.8051, 16.4816],
         [ 0.1000, 10.8051, 17.8403],
         ...,
         [ 0.1000, 10.8051, 17.4616],
         [ 0.1000, 10.8051, 17.2814],
         [ 0.1000, 10.8051, 18.0607]],
        [[ 0.1000, 10.6368,  9.4880],
         [ 0.1000, 10.6368,  9.5374],
         [ 0.1000, 10.6368,  9.1040],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2563],
         [ 0.1000, 10.6368,  9.0514]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9129],
         [ 0.1000, 10.6161,  8.3765],
         ...,
         [ 0.1000, 10.6161,  8.5025],
         [ 0.1000, 10.6161,  8.5678],
         [ 0.1000, 10.6161,  8.3096]],
        ...,
        [[ 0.1000, 10.5905,  8.2303],
         [ 0.1000, 10.5905,  8.1944],
         [ 0.1000, 10.5905,  7.5539],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7841],
         [ 0.1000, 10.5905,  7.4728]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1527],
         [ 0.1000, 10.6559,  9.8316],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9409],
         [ 0.1000, 10.6559,  9.7950]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6545],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8371],
         [ 0.1000, 10.8051, 16.4473],
         [ 0.1000, 10.8051, 17.8511],
         ...,
         [ 0.1000, 10.8051, 17.4587],
         [ 0.1000, 10.8051, 17.2726],
         [ 0.1000, 10.8051, 18.0792]],
        [[ 0.1000, 10.6368,  9.4905],
         [ 0.1000, 10.6368,  9.5516],
         [ 0.1000, 10.6368,  9.1013],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2589],
         [ 0.1000, 10.6368,  9.0472]],
        [[ 0.1000, 10.6161,  8.9076],
         [ 0.1000, 10.6161,  8.9302],
         [ 0.1000, 10.6161,  8.3732],
         ...,
         [ 0.1000, 10.6161,  8.5035],
         [ 0.1000, 10.6161,  8.5711],
         [ 0.1000, 10.6161,  8.3041]],
        ...,
        [[ 0.1000, 10.5905,  8.2336],
         [ 0.1000, 10.5905,  8.2148],
         [ 0.1000, 10.5905,  7.5499],
         ...,
         [ 0.1000, 10.5905,  7.7070],
         [ 0.1000, 10.5905,  7.7881],
         [ 0.1000, 10.5905,  7.4662]],
        [[ 0.1000, 10.6559, 10.0625],
         [ 0.1000, 10.6559, 10.1637],
         [ 0.1000, 10.6559,  9.8297],
         ...,
         [ 0.1000, 10.6559,  9.9034],
         [ 0.1000, 10.6559,  9.9428],
         [ 0.1000, 10.6559,  9.7921]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6566],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6601]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8398],
         [ 0.1000, 10.8051, 16.4699],
         [ 0.1000, 10.8051, 17.8440],
         ...,
         [ 0.1000, 10.8051, 17.4606],
         [ 0.1000, 10.8051, 17.2784],
         [ 0.1000, 10.8051, 18.0670]],
        [[ 0.1000, 10.6368,  9.4889],
         [ 0.1000, 10.6368,  9.5422],
         [ 0.1000, 10.6368,  9.1031],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2572],
         [ 0.1000, 10.6368,  9.0500]],
        [[ 0.1000, 10.6161,  8.9057],
         [ 0.1000, 10.6161,  8.9188],
         [ 0.1000, 10.6161,  8.3754],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5690],
         [ 0.1000, 10.6161,  8.3077]],
        ...,
        [[ 0.1000, 10.5905,  8.2314],
         [ 0.1000, 10.5905,  8.2014],
         [ 0.1000, 10.5905,  7.5526],
         ...,
         [ 0.1000, 10.5905,  7.7061],
         [ 0.1000, 10.5905,  7.7855],
         [ 0.1000, 10.5905,  7.4705]],
        [[ 0.1000, 10.6559, 10.0611],
         [ 0.1000, 10.6559, 10.1564],
         [ 0.1000, 10.6559,  9.8309],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9415],
         [ 0.1000, 10.6559,  9.7940]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6552],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8377],
         [ 0.1000, 10.8051, 16.4520],
         [ 0.1000, 10.8051, 17.8496],
         ...,
         [ 0.1000, 10.8051, 17.4591],
         [ 0.1000, 10.8051, 17.2738],
         [ 0.1000, 10.8051, 18.0766]],
        [[ 0.1000, 10.6368,  9.4901],
         [ 0.1000, 10.6368,  9.5497],
         [ 0.1000, 10.6368,  9.1017],
         ...,
         [ 0.1000, 10.6368,  9.2046],
         [ 0.1000, 10.6368,  9.2585],
         [ 0.1000, 10.6368,  9.0478]],
        [[ 0.1000, 10.6161,  8.9072],
         [ 0.1000, 10.6161,  8.9278],
         [ 0.1000, 10.6161,  8.3736],
         ...,
         [ 0.1000, 10.6161,  8.5034],
         [ 0.1000, 10.6161,  8.5707],
         [ 0.1000, 10.6161,  8.3049]],
        ...,
        [[ 0.1000, 10.5905,  8.2331],
         [ 0.1000, 10.5905,  8.2120],
         [ 0.1000, 10.5905,  7.5504],
         ...,
         [ 0.1000, 10.5905,  7.7068],
         [ 0.1000, 10.5905,  7.7875],
         [ 0.1000, 10.5905,  7.4671]],
        [[ 0.1000, 10.6559, 10.0622],
         [ 0.1000, 10.6559, 10.1622],
         [ 0.1000, 10.6559,  9.8300],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9425],
         [ 0.1000, 10.6559,  9.7925]],
        [[ 0.1000, 10.6981, 11.4494],
         [ 0.1000, 10.6981, 11.6563],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8372],
         [ 0.1000, 10.8051, 16.4483],
         [ 0.1000, 10.8051, 17.8508],
         ...,
         [ 0.1000, 10.8051, 17.4588],
         [ 0.1000, 10.8051, 17.2729],
         [ 0.1000, 10.8051, 18.0786]],
        [[ 0.1000, 10.6368,  9.4904],
         [ 0.1000, 10.6368,  9.5512],
         [ 0.1000, 10.6368,  9.1014],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2588],
         [ 0.1000, 10.6368,  9.0473]],
        [[ 0.1000, 10.6161,  8.9075],
         [ 0.1000, 10.6161,  8.9297],
         [ 0.1000, 10.6161,  8.3733],
         ...,
         [ 0.1000, 10.6161,  8.5035],
         [ 0.1000, 10.6161,  8.5710],
         [ 0.1000, 10.6161,  8.3043]],
        ...,
        [[ 0.1000, 10.5905,  8.2335],
         [ 0.1000, 10.5905,  8.2142],
         [ 0.1000, 10.5905,  7.5500],
         ...,
         [ 0.1000, 10.5905,  7.7069],
         [ 0.1000, 10.5905,  7.7880],
         [ 0.1000, 10.5905,  7.4664]],
        [[ 0.1000, 10.6559, 10.0624],
         [ 0.1000, 10.6559, 10.1634],
         [ 0.1000, 10.6559,  9.8298],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9427],
         [ 0.1000, 10.6559,  9.7922]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6566],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8371],
         [ 0.1000, 10.8051, 16.4473],
         [ 0.1000, 10.8051, 17.8511],
         ...,
         [ 0.1000, 10.8051, 17.4587],
         [ 0.1000, 10.8051, 17.2726],
         [ 0.1000, 10.8051, 18.0792]],
        [[ 0.1000, 10.6368,  9.4905],
         [ 0.1000, 10.6368,  9.5516],
         [ 0.1000, 10.6368,  9.1013],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2589],
         [ 0.1000, 10.6368,  9.0472]],
        [[ 0.1000, 10.6161,  8.9076],
         [ 0.1000, 10.6161,  8.9302],
         [ 0.1000, 10.6161,  8.3732],
         ...,
         [ 0.1000, 10.6161,  8.5035],
         [ 0.1000, 10.6161,  8.5711],
         [ 0.1000, 10.6161,  8.3041]],
        ...,
        [[ 0.1000, 10.5905,  8.2336],
         [ 0.1000, 10.5905,  8.2148],
         [ 0.1000, 10.5905,  7.5499],
         ...,
         [ 0.1000, 10.5905,  7.7070],
         [ 0.1000, 10.5905,  7.7881],
         [ 0.1000, 10.5905,  7.4662]],
        [[ 0.1000, 10.6559, 10.0625],
         [ 0.1000, 10.6559, 10.1637],
         [ 0.1000, 10.6559,  9.8297],
         ...,
         [ 0.1000, 10.6559,  9.9034],
         [ 0.1000, 10.6559,  9.9428],
         [ 0.1000, 10.6559,  9.7921]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6566],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6601]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9165],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9877],
         [ 0.1000, 10.8051, 17.6441],
         [ 0.1000, 10.8051, 17.5290],
         ...,
         [ 0.1000, 10.8051, 17.5562],
         [ 0.1000, 10.8051, 17.5567],
         [ 0.1000, 10.8051, 17.5256]],
        [[ 0.1000, 10.6368,  9.4108],
         [ 0.1000, 10.6368,  9.1541],
         [ 0.1000, 10.6368,  9.1852],
         ...,
         [ 0.1000, 10.6368,  9.1777],
         [ 0.1000, 10.6368,  9.1776],
         [ 0.1000, 10.6368,  9.1861]],
        [[ 0.1000, 10.6161,  8.8133],
         [ 0.1000, 10.6161,  8.4400],
         [ 0.1000, 10.6161,  8.4790],
         ...,
         [ 0.1000, 10.6161,  8.4696],
         [ 0.1000, 10.6161,  8.4695],
         [ 0.1000, 10.6161,  8.4801]],
        ...,
        [[ 0.1000, 10.5905,  8.1241],
         [ 0.1000, 10.5905,  7.6305],
         [ 0.1000, 10.5905,  7.6775],
         ...,
         [ 0.1000, 10.5905,  7.6662],
         [ 0.1000, 10.5905,  7.6660],
         [ 0.1000, 10.5905,  7.6789]],
        [[ 0.1000, 10.6559,  9.9985],
         [ 0.1000, 10.6559,  9.8671],
         [ 0.1000, 10.6559,  9.8893],
         ...,
         [ 0.1000, 10.6559,  9.8839],
         [ 0.1000, 10.6559,  9.8838],
         [ 0.1000, 10.6559,  9.8899]],
        [[ 0.1000, 10.6981, 11.4282],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 11.6398],
         ...,
         [ 0.1000, 10.6981, 11.6405],
         [ 0.1000, 10.6981, 11.6405],
         [ 0.1000, 10.6981, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9225],
         [0.1000, 1.0531, 0.9495],
         [0.1000, 1.0531, 0.9476],
         ...,
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9475]],
        [[0.1000, 1.0495, 0.8155],
         [0.1000, 1.0495, 0.8114],
         [0.1000, 1.0495, 0.8119],
         ...,
         [0.1000, 1.0495, 0.8117],
         [0.1000, 1.0495, 0.8117],
         [0.1000, 1.0495, 0.8119]],
        [[0.1000, 1.0490, 0.8058],
         [0.1000, 1.0490, 0.7997],
         [0.1000, 1.0490, 0.8004],
         ...,
         [0.1000, 1.0490, 0.8002],
         [0.1000, 1.0490, 0.8002],
         [0.1000, 1.0490, 0.8004]],
        ...,
        [[0.1000, 1.0485, 0.7946],
         [0.1000, 1.0485, 0.7866],
         [0.1000, 1.0485, 0.7873],
         ...,
         [0.1000, 1.0485, 0.7872],
         [0.1000, 1.0485, 0.7872],
         [0.1000, 1.0485, 0.7874]],
        [[0.1000, 1.0499, 0.8251],
         [0.1000, 1.0499, 0.8230],
         [0.1000, 1.0499, 0.8233],
         ...,
         [0.1000, 1.0499, 0.8232],
         [0.1000, 1.0499, 0.8232],
         [0.1000, 1.0499, 0.8233]],
        [[0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8518],
         [0.1000, 1.0508, 0.8518],
         ...,
         [0.1000, 1.0508, 0.8518],
         [0.1000, 1.0508, 0.8518],
         [0.1000, 1.0508, 0.8518]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8666],
         [ 0.1000, 10.8051, 16.6746],
         [ 0.1000, 10.8051, 17.7828],
         ...,
         [ 0.1000, 10.8051, 17.4789],
         [ 0.1000, 10.8051, 17.3307],
         [ 0.1000, 10.8051, 17.9602]],
        [[ 0.1000, 10.6368,  9.4737],
         [ 0.1000, 10.6368,  9.4610],
         [ 0.1000, 10.6368,  9.1184],
         ...,
         [ 0.1000, 10.6368,  9.1991],
         [ 0.1000, 10.6368,  9.2416],
         [ 0.1000, 10.6368,  9.0749]],
        [[ 0.1000, 10.6161,  8.8878],
         [ 0.1000, 10.6161,  8.8200],
         [ 0.1000, 10.6161,  8.3948],
         ...,
         [ 0.1000, 10.6161,  8.4964],
         [ 0.1000, 10.6161,  8.5496],
         [ 0.1000, 10.6161,  8.3396]],
        ...,
        [[ 0.1000, 10.5905,  8.2107],
         [ 0.1000, 10.5905,  8.0845],
         [ 0.1000, 10.5905,  7.5760],
         ...,
         [ 0.1000, 10.5905,  7.6984],
         [ 0.1000, 10.5905,  7.7623],
         [ 0.1000, 10.5905,  7.5092]],
        [[ 0.1000, 10.6559, 10.0488],
         [ 0.1000, 10.6559, 10.0940],
         [ 0.1000, 10.6559,  9.8417],
         ...,
         [ 0.1000, 10.6559,  9.8993],
         [ 0.1000, 10.6559,  9.9301],
         [ 0.1000, 10.6559,  9.8113]],
        [[ 0.1000, 10.6981, 11.4445],
         [ 0.1000, 10.6981, 11.6449],
         [ 0.1000, 10.6981, 11.6473],
         ...,
         [ 0.1000, 10.6981, 11.6388],
         [ 0.1000, 10.6981, 11.6365],
         [ 0.1000, 10.6981, 11.6545]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9179],
         [0.1000, 1.0531, 0.9311],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9442],
         [0.1000, 1.0531, 0.9418],
         [0.1000, 1.0531, 0.9520]],
        [[0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8138],
         [0.1000, 1.0495, 0.8082],
         ...,
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8102],
         [0.1000, 1.0495, 0.8075]],
        [[0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.8033],
         [0.1000, 1.0490, 0.7964],
         ...,
         [0.1000, 1.0490, 0.7981],
         [0.1000, 1.0490, 0.7989],
         [0.1000, 1.0490, 0.7955]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7914],
         [0.1000, 1.0485, 0.7831],
         ...,
         [0.1000, 1.0485, 0.7851],
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7820]],
        [[0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8241],
         [0.1000, 1.0499, 0.8200],
         ...,
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8214],
         [0.1000, 1.0499, 0.8195]],
        [[0.1000, 1.0508, 0.8460],
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8493],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8491],
         [0.1000, 1.0508, 0.8494]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8429],
         [ 0.1000, 10.8051, 16.4915],
         [ 0.1000, 10.8051, 17.8375],
         ...,
         [ 0.1000, 10.8051, 17.4627],
         [ 0.1000, 10.8051, 17.2841],
         [ 0.1000, 10.8051, 18.0554]],
        [[ 0.1000, 10.6368,  9.4871],
         [ 0.1000, 10.6368,  9.5333],
         [ 0.1000, 10.6368,  9.1047],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2555],
         [ 0.1000, 10.6368,  9.0526]],
        [[ 0.1000, 10.6161,  8.9036],
         [ 0.1000, 10.6161,  8.9080],
         [ 0.1000, 10.6161,  8.3774],
         ...,
         [ 0.1000, 10.6161,  8.5021],
         [ 0.1000, 10.6161,  8.5668],
         [ 0.1000, 10.6161,  8.3111]],
        ...,
        [[ 0.1000, 10.5905,  8.2291],
         [ 0.1000, 10.5905,  8.1886],
         [ 0.1000, 10.5905,  7.5550],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7829],
         [ 0.1000, 10.5905,  7.4747]],
        [[ 0.1000, 10.6559, 10.0597],
         [ 0.1000, 10.6559, 10.1495],
         [ 0.1000, 10.6559,  9.8321],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9403],
         [ 0.1000, 10.6559,  9.7959]],
        [[ 0.1000, 10.6981, 11.4485],
         [ 0.1000, 10.6981, 11.6539],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9274],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8383],
         [ 0.1000, 10.8051, 16.4565],
         [ 0.1000, 10.8051, 17.8482],
         ...,
         [ 0.1000, 10.8051, 17.4595],
         [ 0.1000, 10.8051, 17.2750],
         [ 0.1000, 10.8051, 18.0742]],
        [[ 0.1000, 10.6368,  9.4898],
         [ 0.1000, 10.6368,  9.5478],
         [ 0.1000, 10.6368,  9.1020],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2582],
         [ 0.1000, 10.6368,  9.0483]],
        [[ 0.1000, 10.6161,  8.9068],
         [ 0.1000, 10.6161,  8.9256],
         [ 0.1000, 10.6161,  8.3741],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5702],
         [ 0.1000, 10.6161,  8.3056]],
        ...,
        [[ 0.1000, 10.5905,  8.2327],
         [ 0.1000, 10.5905,  8.2093],
         [ 0.1000, 10.5905,  7.5509],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7870],
         [ 0.1000, 10.5905,  7.4679]],
        [[ 0.1000, 10.6559, 10.0619],
         [ 0.1000, 10.6559, 10.1607],
         [ 0.1000, 10.6559,  9.8302],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9423],
         [ 0.1000, 10.6559,  9.7929]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6561],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8373],
         [ 0.1000, 10.8051, 16.4493],
         [ 0.1000, 10.8051, 17.8505],
         ...,
         [ 0.1000, 10.8051, 17.4588],
         [ 0.1000, 10.8051, 17.2731],
         [ 0.1000, 10.8051, 18.0781]],
        [[ 0.1000, 10.6368,  9.4903],
         [ 0.1000, 10.6368,  9.5508],
         [ 0.1000, 10.6368,  9.1015],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2587],
         [ 0.1000, 10.6368,  9.0474]],
        [[ 0.1000, 10.6161,  8.9074],
         [ 0.1000, 10.6161,  8.9292],
         [ 0.1000, 10.6161,  8.3734],
         ...,
         [ 0.1000, 10.6161,  8.5034],
         [ 0.1000, 10.6161,  8.5709],
         [ 0.1000, 10.6161,  8.3045]],
        ...,
        [[ 0.1000, 10.5905,  8.2334],
         [ 0.1000, 10.5905,  8.2137],
         [ 0.1000, 10.5905,  7.5501],
         ...,
         [ 0.1000, 10.5905,  7.7069],
         [ 0.1000, 10.5905,  7.7878],
         [ 0.1000, 10.5905,  7.4666]],
        [[ 0.1000, 10.6559, 10.0623],
         [ 0.1000, 10.6559, 10.1631],
         [ 0.1000, 10.6559,  9.8298],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9427],
         [ 0.1000, 10.6559,  9.7923]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6565],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8380],
         [ 0.1000, 10.8051, 16.4540],
         [ 0.1000, 10.8051, 17.8490],
         ...,
         [ 0.1000, 10.8051, 17.4593],
         [ 0.1000, 10.8051, 17.2744],
         [ 0.1000, 10.8051, 18.0755]],
        [[ 0.1000, 10.6368,  9.4900],
         [ 0.1000, 10.6368,  9.5488],
         [ 0.1000, 10.6368,  9.1019],
         ...,
         [ 0.1000, 10.6368,  9.2046],
         [ 0.1000, 10.6368,  9.2584],
         [ 0.1000, 10.6368,  9.0480]],
        [[ 0.1000, 10.6161,  8.9070],
         [ 0.1000, 10.6161,  8.9268],
         [ 0.1000, 10.6161,  8.3738],
         ...,
         [ 0.1000, 10.6161,  8.5033],
         [ 0.1000, 10.6161,  8.5705],
         [ 0.1000, 10.6161,  8.3052]],
        ...,
        [[ 0.1000, 10.5905,  8.2329],
         [ 0.1000, 10.5905,  8.2108],
         [ 0.1000, 10.5905,  7.5506],
         ...,
         [ 0.1000, 10.5905,  7.7067],
         [ 0.1000, 10.5905,  7.7873],
         [ 0.1000, 10.5905,  7.4675]],
        [[ 0.1000, 10.6559, 10.0620],
         [ 0.1000, 10.6559, 10.1615],
         [ 0.1000, 10.6559,  9.8301],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9424],
         [ 0.1000, 10.6559,  9.7927]],
        [[ 0.1000, 10.6981, 11.4494],
         [ 0.1000, 10.6981, 11.6562],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8375],
         [ 0.1000, 10.8051, 16.4503],
         [ 0.1000, 10.8051, 17.8502],
         ...,
         [ 0.1000, 10.8051, 17.4589],
         [ 0.1000, 10.8051, 17.2734],
         [ 0.1000, 10.8051, 18.0776]],
        [[ 0.1000, 10.6368,  9.4903],
         [ 0.1000, 10.6368,  9.5504],
         [ 0.1000, 10.6368,  9.1016],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2587],
         [ 0.1000, 10.6368,  9.0476]],
        [[ 0.1000, 10.6161,  8.9073],
         [ 0.1000, 10.6161,  8.9287],
         [ 0.1000, 10.6161,  8.3735],
         ...,
         [ 0.1000, 10.6161,  8.5034],
         [ 0.1000, 10.6161,  8.5708],
         [ 0.1000, 10.6161,  8.3046]],
        ...,
        [[ 0.1000, 10.5905,  8.2333],
         [ 0.1000, 10.5905,  8.2131],
         [ 0.1000, 10.5905,  7.5502],
         ...,
         [ 0.1000, 10.5905,  7.7069],
         [ 0.1000, 10.5905,  7.7877],
         [ 0.1000, 10.5905,  7.4667]],
        [[ 0.1000, 10.6559, 10.0623],
         [ 0.1000, 10.6559, 10.1627],
         [ 0.1000, 10.6559,  9.8299],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9426],
         [ 0.1000, 10.6559,  9.7923]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6564],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8378],
         [ 0.1000, 10.8051, 16.4528],
         [ 0.1000, 10.8051, 17.8494],
         ...,
         [ 0.1000, 10.8051, 17.4592],
         [ 0.1000, 10.8051, 17.2740],
         [ 0.1000, 10.8051, 18.0762]],
        [[ 0.1000, 10.6368,  9.4901],
         [ 0.1000, 10.6368,  9.5494],
         [ 0.1000, 10.6368,  9.1018],
         ...,
         [ 0.1000, 10.6368,  9.2046],
         [ 0.1000, 10.6368,  9.2585],
         [ 0.1000, 10.6368,  9.0479]],
        [[ 0.1000, 10.6161,  8.9071],
         [ 0.1000, 10.6161,  8.9275],
         [ 0.1000, 10.6161,  8.3737],
         ...,
         [ 0.1000, 10.6161,  8.5033],
         [ 0.1000, 10.6161,  8.5706],
         [ 0.1000, 10.6161,  8.3050]],
        ...,
        [[ 0.1000, 10.5905,  8.2330],
         [ 0.1000, 10.5905,  8.2116],
         [ 0.1000, 10.5905,  7.5505],
         ...,
         [ 0.1000, 10.5905,  7.7068],
         [ 0.1000, 10.5905,  7.7874],
         [ 0.1000, 10.5905,  7.4672]],
        [[ 0.1000, 10.6559, 10.0621],
         [ 0.1000, 10.6559, 10.1619],
         [ 0.1000, 10.6559,  9.8300],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9425],
         [ 0.1000, 10.6559,  9.7926]],
        [[ 0.1000, 10.6981, 11.4494],
         [ 0.1000, 10.6981, 11.6563],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8375],
         [ 0.1000, 10.8051, 16.4508],
         [ 0.1000, 10.8051, 17.8500],
         ...,
         [ 0.1000, 10.8051, 17.4590],
         [ 0.1000, 10.8051, 17.2735],
         [ 0.1000, 10.8051, 18.0773]],
        [[ 0.1000, 10.6368,  9.4902],
         [ 0.1000, 10.6368,  9.5502],
         [ 0.1000, 10.6368,  9.1016],
         ...,
         [ 0.1000, 10.6368,  9.2046],
         [ 0.1000, 10.6368,  9.2586],
         [ 0.1000, 10.6368,  9.0476]],
        [[ 0.1000, 10.6161,  8.9073],
         [ 0.1000, 10.6161,  8.9285],
         [ 0.1000, 10.6161,  8.3735],
         ...,
         [ 0.1000, 10.6161,  8.5034],
         [ 0.1000, 10.6161,  8.5708],
         [ 0.1000, 10.6161,  8.3047]],
        ...,
        [[ 0.1000, 10.5905,  8.2332],
         [ 0.1000, 10.5905,  8.2128],
         [ 0.1000, 10.5905,  7.5503],
         ...,
         [ 0.1000, 10.5905,  7.7068],
         [ 0.1000, 10.5905,  7.7877],
         [ 0.1000, 10.5905,  7.4668]],
        [[ 0.1000, 10.6559, 10.0622],
         [ 0.1000, 10.6559, 10.1626],
         [ 0.1000, 10.6559,  9.8299],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9426],
         [ 0.1000, 10.6559,  9.7924]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6564],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8375],
         [ 0.1000, 10.8051, 16.4504],
         [ 0.1000, 10.8051, 17.8501],
         ...,
         [ 0.1000, 10.8051, 17.4589],
         [ 0.1000, 10.8051, 17.2734],
         [ 0.1000, 10.8051, 18.0775]],
        [[ 0.1000, 10.6368,  9.4902],
         [ 0.1000, 10.6368,  9.5504],
         [ 0.1000, 10.6368,  9.1016],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2587],
         [ 0.1000, 10.6368,  9.0476]],
        [[ 0.1000, 10.6161,  8.9073],
         [ 0.1000, 10.6161,  8.9287],
         [ 0.1000, 10.6161,  8.3735],
         ...,
         [ 0.1000, 10.6161,  8.5034],
         [ 0.1000, 10.6161,  8.5708],
         [ 0.1000, 10.6161,  8.3046]],
        ...,
        [[ 0.1000, 10.5905,  8.2333],
         [ 0.1000, 10.5905,  8.2130],
         [ 0.1000, 10.5905,  7.5502],
         ...,
         [ 0.1000, 10.5905,  7.7069],
         [ 0.1000, 10.5905,  7.7877],
         [ 0.1000, 10.5905,  7.4668]],
        [[ 0.1000, 10.6559, 10.0623],
         [ 0.1000, 10.6559, 10.1627],
         [ 0.1000, 10.6559,  9.8299],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9426],
         [ 0.1000, 10.6559,  9.7924]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6564],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8375],
         [ 0.1000, 10.8051, 16.4503],
         [ 0.1000, 10.8051, 17.8502],
         ...,
         [ 0.1000, 10.8051, 17.4589],
         [ 0.1000, 10.8051, 17.2734],
         [ 0.1000, 10.8051, 18.0776]],
        [[ 0.1000, 10.6368,  9.4903],
         [ 0.1000, 10.6368,  9.5504],
         [ 0.1000, 10.6368,  9.1016],
         ...,
         [ 0.1000, 10.6368,  9.2047],
         [ 0.1000, 10.6368,  9.2587],
         [ 0.1000, 10.6368,  9.0476]],
        [[ 0.1000, 10.6161,  8.9073],
         [ 0.1000, 10.6161,  8.9287],
         [ 0.1000, 10.6161,  8.3735],
         ...,
         [ 0.1000, 10.6161,  8.5034],
         [ 0.1000, 10.6161,  8.5708],
         [ 0.1000, 10.6161,  8.3046]],
        ...,
        [[ 0.1000, 10.5905,  8.2333],
         [ 0.1000, 10.5905,  8.2131],
         [ 0.1000, 10.5905,  7.5502],
         ...,
         [ 0.1000, 10.5905,  7.7069],
         [ 0.1000, 10.5905,  7.7877],
         [ 0.1000, 10.5905,  7.4667]],
        [[ 0.1000, 10.6559, 10.0623],
         [ 0.1000, 10.6559, 10.1627],
         [ 0.1000, 10.6559,  9.8299],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9426],
         [ 0.1000, 10.6559,  9.7923]],
        [[ 0.1000, 10.6981, 11.4495],
         [ 0.1000, 10.6981, 11.6564],
         [ 0.1000, 10.6981, 11.6499],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6600]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9265],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8182]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9979],
         [ 0.1000, 10.8051, 17.6533],
         [ 0.1000, 10.8051, 17.5315],
         ...,
         [ 0.1000, 10.8051, 17.5599],
         [ 0.1000, 10.8051, 17.5641],
         [ 0.1000, 10.8051, 17.5223]],
        [[ 0.1000, 10.6368,  9.4061],
         [ 0.1000, 10.6368,  9.1517],
         [ 0.1000, 10.6368,  9.1845],
         ...,
         [ 0.1000, 10.6368,  9.1767],
         [ 0.1000, 10.6368,  9.1756],
         [ 0.1000, 10.6368,  9.1870]],
        [[ 0.1000, 10.6161,  8.8076],
         [ 0.1000, 10.6161,  8.4369],
         [ 0.1000, 10.6161,  8.4781],
         ...,
         [ 0.1000, 10.6161,  8.4684],
         [ 0.1000, 10.6161,  8.4669],
         [ 0.1000, 10.6161,  8.4813]],
        ...,
        [[ 0.1000, 10.5905,  8.1174],
         [ 0.1000, 10.5905,  7.6268],
         [ 0.1000, 10.5905,  7.6764],
         ...,
         [ 0.1000, 10.5905,  7.6647],
         [ 0.1000, 10.5905,  7.6630],
         [ 0.1000, 10.5905,  7.6803]],
        [[ 0.1000, 10.6559,  9.9947],
         [ 0.1000, 10.6559,  9.8653],
         [ 0.1000, 10.6559,  9.8888],
         ...,
         [ 0.1000, 10.6559,  9.8832],
         [ 0.1000, 10.6559,  9.8824],
         [ 0.1000, 10.6559,  9.8906]],
        [[ 0.1000, 10.6981, 11.4272],
         [ 0.1000, 10.6981, 11.6431],
         [ 0.1000, 10.6981, 11.6399],
         ...,
         [ 0.1000, 10.6981, 11.6406],
         [ 0.1000, 10.6981, 11.6407],
         [ 0.1000, 10.6981, 11.6397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9226],
         [0.1000, 1.0531, 0.9495],
         [0.1000, 1.0531, 0.9475],
         ...,
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9481],
         [0.1000, 1.0531, 0.9474]],
        [[0.1000, 1.0495, 0.8154],
         [0.1000, 1.0495, 0.8112],
         [0.1000, 1.0495, 0.8118],
         ...,
         [0.1000, 1.0495, 0.8117],
         [0.1000, 1.0495, 0.8116],
         [0.1000, 1.0495, 0.8118]],
        [[0.1000, 1.0490, 0.8056],
         [0.1000, 1.0490, 0.7996],
         [0.1000, 1.0490, 0.8003],
         ...,
         [0.1000, 1.0490, 0.8001],
         [0.1000, 1.0490, 0.8001],
         [0.1000, 1.0490, 0.8003]],
        ...,
        [[0.1000, 1.0485, 0.7944],
         [0.1000, 1.0485, 0.7864],
         [0.1000, 1.0485, 0.7873],
         ...,
         [0.1000, 1.0485, 0.7871],
         [0.1000, 1.0485, 0.7870],
         [0.1000, 1.0485, 0.7873]],
        [[0.1000, 1.0499, 0.8250],
         [0.1000, 1.0499, 0.8229],
         [0.1000, 1.0499, 0.8232],
         ...,
         [0.1000, 1.0499, 0.8231],
         [0.1000, 1.0499, 0.8231],
         [0.1000, 1.0499, 0.8233]],
        [[0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8518],
         [0.1000, 1.0508, 0.8517],
         ...,
         [0.1000, 1.0508, 0.8517],
         [0.1000, 1.0508, 0.8517],
         [0.1000, 1.0508, 0.8517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8699],
         [ 0.1000, 10.8051, 16.6861],
         [ 0.1000, 10.8051, 17.7804],
         ...,
         [ 0.1000, 10.8051, 17.4805],
         [ 0.1000, 10.8051, 17.3347],
         [ 0.1000, 10.8051, 17.9545]],
        [[ 0.1000, 10.6368,  9.4719],
         [ 0.1000, 10.6368,  9.4566],
         [ 0.1000, 10.6368,  9.1190],
         ...,
         [ 0.1000, 10.6368,  9.1986],
         [ 0.1000, 10.6368,  9.2404],
         [ 0.1000, 10.6368,  9.0763]],
        [[ 0.1000, 10.6161,  8.8857],
         [ 0.1000, 10.6161,  8.8147],
         [ 0.1000, 10.6161,  8.3955],
         ...,
         [ 0.1000, 10.6161,  8.4958],
         [ 0.1000, 10.6161,  8.5481],
         [ 0.1000, 10.6161,  8.3413]],
        ...,
        [[ 0.1000, 10.5905,  8.2083],
         [ 0.1000, 10.5905,  8.0782],
         [ 0.1000, 10.5905,  7.5769],
         ...,
         [ 0.1000, 10.5905,  7.6978],
         [ 0.1000, 10.5905,  7.7605],
         [ 0.1000, 10.5905,  7.5113]],
        [[ 0.1000, 10.6559, 10.0474],
         [ 0.1000, 10.6559, 10.0907],
         [ 0.1000, 10.6559,  9.8421],
         ...,
         [ 0.1000, 10.6559,  9.8989],
         [ 0.1000, 10.6559,  9.9293],
         [ 0.1000, 10.6559,  9.8122]],
        [[ 0.1000, 10.6981, 11.4440],
         [ 0.1000, 10.6981, 11.6444],
         [ 0.1000, 10.6981, 11.6472],
         ...,
         [ 0.1000, 10.6981, 11.6388],
         [ 0.1000, 10.6981, 11.6365],
         [ 0.1000, 10.6981, 11.6542]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9180],
         [0.1000, 1.0531, 0.9313],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9442],
         [0.1000, 1.0531, 0.9419],
         [0.1000, 1.0531, 0.9520]],
        [[0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8137],
         [0.1000, 1.0495, 0.8082],
         ...,
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8102],
         [0.1000, 1.0495, 0.8075]],
        [[0.1000, 1.0490, 0.8044],
         [0.1000, 1.0490, 0.8033],
         [0.1000, 1.0490, 0.7965],
         ...,
         [0.1000, 1.0490, 0.7981],
         [0.1000, 1.0490, 0.7990],
         [0.1000, 1.0490, 0.7956]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7913],
         [0.1000, 1.0485, 0.7832],
         ...,
         [0.1000, 1.0485, 0.7851],
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7821]],
        [[0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8200],
         ...,
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8214],
         [0.1000, 1.0499, 0.8195]],
        [[0.1000, 1.0508, 0.8461],
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8494],
         ...,
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8495]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8438],
         [ 0.1000, 10.8051, 16.4961],
         [ 0.1000, 10.8051, 17.8363],
         ...,
         [ 0.1000, 10.8051, 17.4632],
         [ 0.1000, 10.8051, 17.2855],
         [ 0.1000, 10.8051, 18.0530]],
        [[ 0.1000, 10.6368,  9.4866],
         [ 0.1000, 10.6368,  9.5314],
         [ 0.1000, 10.6368,  9.1050],
         ...,
         [ 0.1000, 10.6368,  9.2035],
         [ 0.1000, 10.6368,  9.2550],
         [ 0.1000, 10.6368,  9.0532]],
        [[ 0.1000, 10.6161,  8.9030],
         [ 0.1000, 10.6161,  8.9057],
         [ 0.1000, 10.6161,  8.3778],
         ...,
         [ 0.1000, 10.6161,  8.5019],
         [ 0.1000, 10.6161,  8.5663],
         [ 0.1000, 10.6161,  8.3118]],
        ...,
        [[ 0.1000, 10.5905,  8.2283],
         [ 0.1000, 10.5905,  8.1859],
         [ 0.1000, 10.5905,  7.5555],
         ...,
         [ 0.1000, 10.5905,  7.7050],
         [ 0.1000, 10.5905,  7.7823],
         [ 0.1000, 10.5905,  7.4755]],
        [[ 0.1000, 10.6559, 10.0593],
         [ 0.1000, 10.6559, 10.1481],
         [ 0.1000, 10.6559,  9.8323],
         ...,
         [ 0.1000, 10.6559,  9.9024],
         [ 0.1000, 10.6559,  9.9400],
         [ 0.1000, 10.6559,  9.7962]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6536],
         [ 0.1000, 10.6981, 11.6493],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6588]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9275],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8073],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7944]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8388],
         [ 0.1000, 10.8051, 16.4598],
         [ 0.1000, 10.8051, 17.8473],
         ...,
         [ 0.1000, 10.8051, 17.4598],
         [ 0.1000, 10.8051, 17.2759],
         [ 0.1000, 10.8051, 18.0724]],
        [[ 0.1000, 10.6368,  9.4895],
         [ 0.1000, 10.6368,  9.5464],
         [ 0.1000, 10.6368,  9.1023],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2579],
         [ 0.1000, 10.6368,  9.0487]],
        [[ 0.1000, 10.6161,  8.9064],
         [ 0.1000, 10.6161,  8.9239],
         [ 0.1000, 10.6161,  8.3744],
         ...,
         [ 0.1000, 10.6161,  8.5031],
         [ 0.1000, 10.6161,  8.5699],
         [ 0.1000, 10.6161,  8.3061]],
        ...,
        [[ 0.1000, 10.5905,  8.2323],
         [ 0.1000, 10.5905,  8.2074],
         [ 0.1000, 10.5905,  7.5513],
         ...,
         [ 0.1000, 10.5905,  7.7065],
         [ 0.1000, 10.5905,  7.7866],
         [ 0.1000, 10.5905,  7.4686]],
        [[ 0.1000, 10.6559, 10.0617],
         [ 0.1000, 10.6559, 10.1597],
         [ 0.1000, 10.6559,  9.8304],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7932]],
        [[ 0.1000, 10.6981, 11.4492],
         [ 0.1000, 10.6981, 11.6558],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8377],
         [ 0.1000, 10.8051, 16.4523],
         [ 0.1000, 10.8051, 17.8496],
         ...,
         [ 0.1000, 10.8051, 17.4591],
         [ 0.1000, 10.8051, 17.2739],
         [ 0.1000, 10.8051, 18.0765]],
        [[ 0.1000, 10.6368,  9.4901],
         [ 0.1000, 10.6368,  9.5496],
         [ 0.1000, 10.6368,  9.1017],
         ...,
         [ 0.1000, 10.6368,  9.2046],
         [ 0.1000, 10.6368,  9.2585],
         [ 0.1000, 10.6368,  9.0478]],
        [[ 0.1000, 10.6161,  8.9071],
         [ 0.1000, 10.6161,  8.9277],
         [ 0.1000, 10.6161,  8.3737],
         ...,
         [ 0.1000, 10.6161,  8.5033],
         [ 0.1000, 10.6161,  8.5706],
         [ 0.1000, 10.6161,  8.3049]],
        ...,
        [[ 0.1000, 10.5905,  8.2331],
         [ 0.1000, 10.5905,  8.2119],
         [ 0.1000, 10.5905,  7.5504],
         ...,
         [ 0.1000, 10.5905,  7.7068],
         [ 0.1000, 10.5905,  7.7875],
         [ 0.1000, 10.5905,  7.4671]],
        [[ 0.1000, 10.6559, 10.0621],
         [ 0.1000, 10.6559, 10.1621],
         [ 0.1000, 10.6559,  9.8300],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9425],
         [ 0.1000, 10.6559,  9.7925]],
        [[ 0.1000, 10.6981, 11.4494],
         [ 0.1000, 10.6981, 11.6563],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8384],
         [ 0.1000, 10.8051, 16.4573],
         [ 0.1000, 10.8051, 17.8480],
         ...,
         [ 0.1000, 10.8051, 17.4596],
         [ 0.1000, 10.8051, 17.2752],
         [ 0.1000, 10.8051, 18.0738]],
        [[ 0.1000, 10.6368,  9.4897],
         [ 0.1000, 10.6368,  9.5475],
         [ 0.1000, 10.6368,  9.1021],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2581],
         [ 0.1000, 10.6368,  9.0484]],
        [[ 0.1000, 10.6161,  8.9066],
         [ 0.1000, 10.6161,  8.9252],
         [ 0.1000, 10.6161,  8.3741],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5701],
         [ 0.1000, 10.6161,  8.3057]],
        ...,
        [[ 0.1000, 10.5905,  8.2325],
         [ 0.1000, 10.5905,  8.2089],
         [ 0.1000, 10.5905,  7.5510],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7869],
         [ 0.1000, 10.5905,  7.4681]],
        [[ 0.1000, 10.6559, 10.0618],
         [ 0.1000, 10.6559, 10.1605],
         [ 0.1000, 10.6559,  9.8302],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9422],
         [ 0.1000, 10.6559,  9.7929]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8379],
         [ 0.1000, 10.8051, 16.4533],
         [ 0.1000, 10.8051, 17.8492],
         ...,
         [ 0.1000, 10.8051, 17.4592],
         [ 0.1000, 10.8051, 17.2742],
         [ 0.1000, 10.8051, 18.0759]],
        [[ 0.1000, 10.6368,  9.4900],
         [ 0.1000, 10.6368,  9.5491],
         [ 0.1000, 10.6368,  9.1018],
         ...,
         [ 0.1000, 10.6368,  9.2046],
         [ 0.1000, 10.6368,  9.2584],
         [ 0.1000, 10.6368,  9.0479]],
        [[ 0.1000, 10.6161,  8.9070],
         [ 0.1000, 10.6161,  8.9272],
         [ 0.1000, 10.6161,  8.3738],
         ...,
         [ 0.1000, 10.6161,  8.5033],
         [ 0.1000, 10.6161,  8.5705],
         [ 0.1000, 10.6161,  8.3051]],
        ...,
        [[ 0.1000, 10.5905,  8.2330],
         [ 0.1000, 10.5905,  8.2112],
         [ 0.1000, 10.5905,  7.5506],
         ...,
         [ 0.1000, 10.5905,  7.7067],
         [ 0.1000, 10.5905,  7.7874],
         [ 0.1000, 10.5905,  7.4673]],
        [[ 0.1000, 10.6559, 10.0621],
         [ 0.1000, 10.6559, 10.1617],
         [ 0.1000, 10.6559,  9.8300],
         ...,
         [ 0.1000, 10.6559,  9.9033],
         [ 0.1000, 10.6559,  9.9424],
         [ 0.1000, 10.6559,  9.7926]],
        [[ 0.1000, 10.6981, 11.4494],
         [ 0.1000, 10.6981, 11.6563],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6599]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9399],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8061]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8382],
         [ 0.1000, 10.8051, 16.4559],
         [ 0.1000, 10.8051, 17.8485],
         ...,
         [ 0.1000, 10.8051, 17.4595],
         [ 0.1000, 10.8051, 17.2749],
         [ 0.1000, 10.8051, 18.0745]],
        [[ 0.1000, 10.6368,  9.4898],
         [ 0.1000, 10.6368,  9.5480],
         [ 0.1000, 10.6368,  9.1020],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2582],
         [ 0.1000, 10.6368,  9.0483]],
        [[ 0.1000, 10.6161,  8.9068],
         [ 0.1000, 10.6161,  8.9259],
         [ 0.1000, 10.6161,  8.3740],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5703],
         [ 0.1000, 10.6161,  8.3055]],
        ...,
        [[ 0.1000, 10.5905,  8.2327],
         [ 0.1000, 10.5905,  8.2097],
         [ 0.1000, 10.5905,  7.5509],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7871],
         [ 0.1000, 10.5905,  7.4678]],
        [[ 0.1000, 10.6559, 10.0619],
         [ 0.1000, 10.6559, 10.1609],
         [ 0.1000, 10.6559,  9.8302],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9423],
         [ 0.1000, 10.6559,  9.7928]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6561],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8384],
         [ 0.1000, 10.8051, 16.4568],
         [ 0.1000, 10.8051, 17.8482],
         ...,
         [ 0.1000, 10.8051, 17.4595],
         [ 0.1000, 10.8051, 17.2751],
         [ 0.1000, 10.8051, 18.0740]],
        [[ 0.1000, 10.6368,  9.4897],
         [ 0.1000, 10.6368,  9.5477],
         [ 0.1000, 10.6368,  9.1021],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2581],
         [ 0.1000, 10.6368,  9.0484]],
        [[ 0.1000, 10.6161,  8.9067],
         [ 0.1000, 10.6161,  8.9254],
         [ 0.1000, 10.6161,  8.3741],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5702],
         [ 0.1000, 10.6161,  8.3056]],
        ...,
        [[ 0.1000, 10.5905,  8.2326],
         [ 0.1000, 10.5905,  8.2092],
         [ 0.1000, 10.5905,  7.5510],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7870],
         [ 0.1000, 10.5905,  7.4680]],
        [[ 0.1000, 10.6559, 10.0618],
         [ 0.1000, 10.6559, 10.1606],
         [ 0.1000, 10.6559,  9.8302],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9422],
         [ 0.1000, 10.6559,  9.7929]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8383],
         [ 0.1000, 10.8051, 16.4561],
         [ 0.1000, 10.8051, 17.8484],
         ...,
         [ 0.1000, 10.8051, 17.4595],
         [ 0.1000, 10.8051, 17.2749],
         [ 0.1000, 10.8051, 18.0744]],
        [[ 0.1000, 10.6368,  9.4898],
         [ 0.1000, 10.6368,  9.5480],
         [ 0.1000, 10.6368,  9.1020],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2582],
         [ 0.1000, 10.6368,  9.0483]],
        [[ 0.1000, 10.6161,  8.9068],
         [ 0.1000, 10.6161,  8.9258],
         [ 0.1000, 10.6161,  8.3740],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5703],
         [ 0.1000, 10.6161,  8.3055]],
        ...,
        [[ 0.1000, 10.5905,  8.2327],
         [ 0.1000, 10.5905,  8.2096],
         [ 0.1000, 10.5905,  7.5509],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7870],
         [ 0.1000, 10.5905,  7.4679]],
        [[ 0.1000, 10.6559, 10.0619],
         [ 0.1000, 10.6559, 10.1609],
         [ 0.1000, 10.6559,  9.8302],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9423],
         [ 0.1000, 10.6559,  9.7928]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6561],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8382],
         [ 0.1000, 10.8051, 16.4559],
         [ 0.1000, 10.8051, 17.8485],
         ...,
         [ 0.1000, 10.8051, 17.4595],
         [ 0.1000, 10.8051, 17.2749],
         [ 0.1000, 10.8051, 18.0745]],
        [[ 0.1000, 10.6368,  9.4898],
         [ 0.1000, 10.6368,  9.5480],
         [ 0.1000, 10.6368,  9.1020],
         ...,
         [ 0.1000, 10.6368,  9.2045],
         [ 0.1000, 10.6368,  9.2582],
         [ 0.1000, 10.6368,  9.0483]],
        [[ 0.1000, 10.6161,  8.9068],
         [ 0.1000, 10.6161,  8.9259],
         [ 0.1000, 10.6161,  8.3740],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5703],
         [ 0.1000, 10.6161,  8.3055]],
        ...,
        [[ 0.1000, 10.5905,  8.2327],
         [ 0.1000, 10.5905,  8.2097],
         [ 0.1000, 10.5905,  7.5509],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7871],
         [ 0.1000, 10.5905,  7.4678]],
        [[ 0.1000, 10.6559, 10.0619],
         [ 0.1000, 10.6559, 10.1609],
         [ 0.1000, 10.6559,  9.8302],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9423],
         [ 0.1000, 10.6559,  9.7928]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6561],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9266],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0082],
         [ 0.1000, 10.8051, 17.6613],
         [ 0.1000, 10.8051, 17.5325],
         ...,
         [ 0.1000, 10.8051, 17.5618],
         [ 0.1000, 10.8051, 17.5692],
         [ 0.1000, 10.8051, 17.5192]],
        [[ 0.1000, 10.6368,  9.4013],
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.1842],
         ...,
         [ 0.1000, 10.6368,  9.1762],
         [ 0.1000, 10.6368,  9.1742],
         [ 0.1000, 10.6368,  9.1879]],
        [[ 0.1000, 10.6161,  8.8019],
         [ 0.1000, 10.6161,  8.4343],
         [ 0.1000, 10.6161,  8.4778],
         ...,
         [ 0.1000, 10.6161,  8.4677],
         [ 0.1000, 10.6161,  8.4652],
         [ 0.1000, 10.6161,  8.4824]],
        ...,
        [[ 0.1000, 10.5905,  8.1107],
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.6760],
         ...,
         [ 0.1000, 10.5905,  7.6639],
         [ 0.1000, 10.5905,  7.6609],
         [ 0.1000, 10.5905,  7.6816]],
        [[ 0.1000, 10.6559,  9.9910],
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.8886],
         ...,
         [ 0.1000, 10.6559,  9.8828],
         [ 0.1000, 10.6559,  9.8814],
         [ 0.1000, 10.6559,  9.8912]],
        [[ 0.1000, 10.6981, 11.4262],
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6399],
         ...,
         [ 0.1000, 10.6981, 11.6406],
         [ 0.1000, 10.6981, 11.6408],
         [ 0.1000, 10.6981, 11.6396]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9227],
         [0.1000, 1.0531, 0.9496],
         [0.1000, 1.0531, 0.9475],
         ...,
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9481],
         [0.1000, 1.0531, 0.9473]],
        [[0.1000, 1.0495, 0.8152],
         [0.1000, 1.0495, 0.8111],
         [0.1000, 1.0495, 0.8117],
         ...,
         [0.1000, 1.0495, 0.8116],
         [0.1000, 1.0495, 0.8115],
         [0.1000, 1.0495, 0.8118]],
        [[0.1000, 1.0490, 0.8055],
         [0.1000, 1.0490, 0.7995],
         [0.1000, 1.0490, 0.8002],
         ...,
         [0.1000, 1.0490, 0.8001],
         [0.1000, 1.0490, 0.8000],
         [0.1000, 1.0490, 0.8003]],
        ...,
        [[0.1000, 1.0485, 0.7942],
         [0.1000, 1.0485, 0.7863],
         [0.1000, 1.0485, 0.7872],
         ...,
         [0.1000, 1.0485, 0.7870],
         [0.1000, 1.0485, 0.7869],
         [0.1000, 1.0485, 0.7873]],
        [[0.1000, 1.0499, 0.8248],
         [0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8232],
         ...,
         [0.1000, 1.0499, 0.8231],
         [0.1000, 1.0499, 0.8230],
         [0.1000, 1.0499, 0.8232]],
        [[0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8517],
         [0.1000, 1.0508, 0.8516],
         ...,
         [0.1000, 1.0508, 0.8517],
         [0.1000, 1.0508, 0.8517],
         [0.1000, 1.0508, 0.8516]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8734],
         [ 0.1000, 10.8051, 16.6989],
         [ 0.1000, 10.8051, 17.7774],
         ...,
         [ 0.1000, 10.8051, 17.4819],
         [ 0.1000, 10.8051, 17.3386],
         [ 0.1000, 10.8051, 17.9481]],
        [[ 0.1000, 10.6368,  9.4700],
         [ 0.1000, 10.6368,  9.4518],
         [ 0.1000, 10.6368,  9.1197],
         ...,
         [ 0.1000, 10.6368,  9.1982],
         [ 0.1000, 10.6368,  9.2393],
         [ 0.1000, 10.6368,  9.0778]],
        [[ 0.1000, 10.6161,  8.8835],
         [ 0.1000, 10.6161,  8.8089],
         [ 0.1000, 10.6161,  8.3965],
         ...,
         [ 0.1000, 10.6161,  8.4953],
         [ 0.1000, 10.6161,  8.5467],
         [ 0.1000, 10.6161,  8.3433]],
        ...,
        [[ 0.1000, 10.5905,  8.2057],
         [ 0.1000, 10.5905,  8.0713],
         [ 0.1000, 10.5905,  7.5780],
         ...,
         [ 0.1000, 10.5905,  7.6972],
         [ 0.1000, 10.5905,  7.7588],
         [ 0.1000, 10.5905,  7.5136]],
        [[ 0.1000, 10.6559, 10.0459],
         [ 0.1000, 10.6559, 10.0871],
         [ 0.1000, 10.6559,  9.8426],
         ...,
         [ 0.1000, 10.6559,  9.8987],
         [ 0.1000, 10.6559,  9.9284],
         [ 0.1000, 10.6559,  9.8133]],
        [[ 0.1000, 10.6981, 11.4435],
         [ 0.1000, 10.6981, 11.6439],
         [ 0.1000, 10.6981, 11.6471],
         ...,
         [ 0.1000, 10.6981, 11.6388],
         [ 0.1000, 10.6981, 11.6365],
         [ 0.1000, 10.6981, 11.6539]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9182],
         [0.1000, 1.0531, 0.9316],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9443],
         [0.1000, 1.0531, 0.9420],
         [0.1000, 1.0531, 0.9519]],
        [[0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8137],
         [0.1000, 1.0495, 0.8083],
         ...,
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8102],
         [0.1000, 1.0495, 0.8076]],
        [[0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.8032],
         [0.1000, 1.0490, 0.7965],
         ...,
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7990],
         [0.1000, 1.0490, 0.7957]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7913],
         [0.1000, 1.0485, 0.7832],
         ...,
         [0.1000, 1.0485, 0.7852],
         [0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.7822]],
        [[0.1000, 1.0499, 0.8234],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8201],
         ...,
         [0.1000, 1.0499, 0.8210],
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8196]],
        [[0.1000, 1.0508, 0.8461],
         [0.1000, 1.0508, 0.8494],
         [0.1000, 1.0508, 0.8494],
         ...,
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8492],
         [0.1000, 1.0508, 0.8495]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8451],
         [ 0.1000, 10.8051, 16.5029],
         [ 0.1000, 10.8051, 17.8344],
         ...,
         [ 0.1000, 10.8051, 17.4639],
         [ 0.1000, 10.8051, 17.2874],
         [ 0.1000, 10.8051, 18.0493]],
        [[ 0.1000, 10.6368,  9.4859],
         [ 0.1000, 10.6368,  9.5286],
         [ 0.1000, 10.6368,  9.1055],
         ...,
         [ 0.1000, 10.6368,  9.2033],
         [ 0.1000, 10.6368,  9.2545],
         [ 0.1000, 10.6368,  9.0540]],
        [[ 0.1000, 10.6161,  8.9022],
         [ 0.1000, 10.6161,  8.9023],
         [ 0.1000, 10.6161,  8.3784],
         ...,
         [ 0.1000, 10.6161,  8.5017],
         [ 0.1000, 10.6161,  8.5656],
         [ 0.1000, 10.6161,  8.3129]],
        ...,
        [[ 0.1000, 10.5905,  8.2273],
         [ 0.1000, 10.5905,  8.1819],
         [ 0.1000, 10.5905,  7.5562],
         ...,
         [ 0.1000, 10.5905,  7.7048],
         [ 0.1000, 10.5905,  7.7814],
         [ 0.1000, 10.5905,  7.4768]],
        [[ 0.1000, 10.6559, 10.0587],
         [ 0.1000, 10.6559, 10.1459],
         [ 0.1000, 10.6559,  9.8326],
         ...,
         [ 0.1000, 10.6559,  9.9023],
         [ 0.1000, 10.6559,  9.9395],
         [ 0.1000, 10.6559,  9.7968]],
        [[ 0.1000, 10.6981, 11.4481],
         [ 0.1000, 10.6981, 11.6532],
         [ 0.1000, 10.6981, 11.6492],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6586]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9276],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9404],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8073],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8065]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7955],
         ...,
         [0.1000, 1.0490, 0.7975],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7944]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7821],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7808]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8487],
         ...,
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8397],
         [ 0.1000, 10.8051, 16.4657],
         [ 0.1000, 10.8051, 17.8455],
         ...,
         [ 0.1000, 10.8051, 17.4604],
         [ 0.1000, 10.8051, 17.2775],
         [ 0.1000, 10.8051, 18.0692]],
        [[ 0.1000, 10.6368,  9.4890],
         [ 0.1000, 10.6368,  9.5440],
         [ 0.1000, 10.6368,  9.1027],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2574],
         [ 0.1000, 10.6368,  9.0495]],
        [[ 0.1000, 10.6161,  8.9058],
         [ 0.1000, 10.6161,  8.9209],
         [ 0.1000, 10.6161,  8.3749],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5693],
         [ 0.1000, 10.6161,  8.3071]],
        ...,
        [[ 0.1000, 10.5905,  8.2316],
         [ 0.1000, 10.5905,  8.2039],
         [ 0.1000, 10.5905,  7.5520],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7859],
         [ 0.1000, 10.5905,  7.4697]],
        [[ 0.1000, 10.6559, 10.0612],
         [ 0.1000, 10.6559, 10.1578],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9417],
         [ 0.1000, 10.6559,  9.7937]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6555],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8385],
         [ 0.1000, 10.8051, 16.4580],
         [ 0.1000, 10.8051, 17.8478],
         ...,
         [ 0.1000, 10.8051, 17.4597],
         [ 0.1000, 10.8051, 17.2754],
         [ 0.1000, 10.8051, 18.0734]],
        [[ 0.1000, 10.6368,  9.4896],
         [ 0.1000, 10.6368,  9.5472],
         [ 0.1000, 10.6368,  9.1021],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2581],
         [ 0.1000, 10.6368,  9.0485]],
        [[ 0.1000, 10.6161,  8.9066],
         [ 0.1000, 10.6161,  8.9248],
         [ 0.1000, 10.6161,  8.3742],
         ...,
         [ 0.1000, 10.6161,  8.5032],
         [ 0.1000, 10.6161,  8.5701],
         [ 0.1000, 10.6161,  8.3058]],
        ...,
        [[ 0.1000, 10.5905,  8.2324],
         [ 0.1000, 10.5905,  8.2084],
         [ 0.1000, 10.5905,  7.5511],
         ...,
         [ 0.1000, 10.5905,  7.7066],
         [ 0.1000, 10.5905,  7.7868],
         [ 0.1000, 10.5905,  7.4682]],
        [[ 0.1000, 10.6559, 10.0618],
         [ 0.1000, 10.6559, 10.1602],
         [ 0.1000, 10.6559,  9.8303],
         ...,
         [ 0.1000, 10.6559,  9.9032],
         [ 0.1000, 10.6559,  9.9422],
         [ 0.1000, 10.6559,  9.7930]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6598]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8070],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8486]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8393],
         [ 0.1000, 10.8051, 16.4631],
         [ 0.1000, 10.8051, 17.8463],
         ...,
         [ 0.1000, 10.8051, 17.4601],
         [ 0.1000, 10.8051, 17.2768],
         [ 0.1000, 10.8051, 18.0706]],
        [[ 0.1000, 10.6368,  9.4892],
         [ 0.1000, 10.6368,  9.5451],
         [ 0.1000, 10.6368,  9.1025],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2576],
         [ 0.1000, 10.6368,  9.0491]],
        [[ 0.1000, 10.6161,  8.9061],
         [ 0.1000, 10.6161,  8.9222],
         [ 0.1000, 10.6161,  8.3747],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5696],
         [ 0.1000, 10.6161,  8.3066]],
        ...,
        [[ 0.1000, 10.5905,  8.2319],
         [ 0.1000, 10.5905,  8.2054],
         [ 0.1000, 10.5905,  7.5517],
         ...,
         [ 0.1000, 10.5905,  7.7063],
         [ 0.1000, 10.5905,  7.7862],
         [ 0.1000, 10.5905,  7.4692]],
        [[ 0.1000, 10.6559, 10.0614],
         [ 0.1000, 10.6559, 10.1586],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9419],
         [ 0.1000, 10.6559,  9.7934]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6556],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8387],
         [ 0.1000, 10.8051, 16.4591],
         [ 0.1000, 10.8051, 17.8475],
         ...,
         [ 0.1000, 10.8051, 17.4598],
         [ 0.1000, 10.8051, 17.2757],
         [ 0.1000, 10.8051, 18.0728]],
        [[ 0.1000, 10.6368,  9.4895],
         [ 0.1000, 10.6368,  9.5467],
         [ 0.1000, 10.6368,  9.1022],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2580],
         [ 0.1000, 10.6368,  9.0486]],
        [[ 0.1000, 10.6161,  8.9065],
         [ 0.1000, 10.6161,  8.9243],
         [ 0.1000, 10.6161,  8.3743],
         ...,
         [ 0.1000, 10.6161,  8.5031],
         [ 0.1000, 10.6161,  8.5700],
         [ 0.1000, 10.6161,  8.3060]],
        ...,
        [[ 0.1000, 10.5905,  8.2323],
         [ 0.1000, 10.5905,  8.2078],
         [ 0.1000, 10.5905,  7.5512],
         ...,
         [ 0.1000, 10.5905,  7.7065],
         [ 0.1000, 10.5905,  7.7867],
         [ 0.1000, 10.5905,  7.4684]],
        [[ 0.1000, 10.6559, 10.0617],
         [ 0.1000, 10.6559, 10.1599],
         [ 0.1000, 10.6559,  9.8303],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7931]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8391],
         [ 0.1000, 10.8051, 16.4617],
         [ 0.1000, 10.8051, 17.8467],
         ...,
         [ 0.1000, 10.8051, 17.4600],
         [ 0.1000, 10.8051, 17.2764],
         [ 0.1000, 10.8051, 18.0714]],
        [[ 0.1000, 10.6368,  9.4893],
         [ 0.1000, 10.6368,  9.5456],
         [ 0.1000, 10.6368,  9.1024],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2578],
         [ 0.1000, 10.6368,  9.0490]],
        [[ 0.1000, 10.6161,  8.9062],
         [ 0.1000, 10.6161,  8.9229],
         [ 0.1000, 10.6161,  8.3745],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5697],
         [ 0.1000, 10.6161,  8.3064]],
        ...,
        [[ 0.1000, 10.5905,  8.2320],
         [ 0.1000, 10.5905,  8.2062],
         [ 0.1000, 10.5905,  7.5515],
         ...,
         [ 0.1000, 10.5905,  7.7064],
         [ 0.1000, 10.5905,  7.7864],
         [ 0.1000, 10.5905,  7.4689]],
        [[ 0.1000, 10.6559, 10.0615],
         [ 0.1000, 10.6559, 10.1590],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9419],
         [ 0.1000, 10.6559,  9.7933]],
        [[ 0.1000, 10.6981, 11.4492],
         [ 0.1000, 10.6981, 11.6557],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8388],
         [ 0.1000, 10.8051, 16.4596],
         [ 0.1000, 10.8051, 17.8473],
         ...,
         [ 0.1000, 10.8051, 17.4598],
         [ 0.1000, 10.8051, 17.2759],
         [ 0.1000, 10.8051, 18.0725]],
        [[ 0.1000, 10.6368,  9.4895],
         [ 0.1000, 10.6368,  9.5465],
         [ 0.1000, 10.6368,  9.1023],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2579],
         [ 0.1000, 10.6368,  9.0487]],
        [[ 0.1000, 10.6161,  8.9064],
         [ 0.1000, 10.6161,  8.9240],
         [ 0.1000, 10.6161,  8.3743],
         ...,
         [ 0.1000, 10.6161,  8.5031],
         [ 0.1000, 10.6161,  8.5699],
         [ 0.1000, 10.6161,  8.3061]],
        ...,
        [[ 0.1000, 10.5905,  8.2323],
         [ 0.1000, 10.5905,  8.2075],
         [ 0.1000, 10.5905,  7.5513],
         ...,
         [ 0.1000, 10.5905,  7.7065],
         [ 0.1000, 10.5905,  7.7866],
         [ 0.1000, 10.5905,  7.4685]],
        [[ 0.1000, 10.6559, 10.0617],
         [ 0.1000, 10.6559, 10.1597],
         [ 0.1000, 10.6559,  9.8304],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7931]],
        [[ 0.1000, 10.6981, 11.4492],
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8387],
         [ 0.1000, 10.8051, 16.4592],
         [ 0.1000, 10.8051, 17.8475],
         ...,
         [ 0.1000, 10.8051, 17.4598],
         [ 0.1000, 10.8051, 17.2758],
         [ 0.1000, 10.8051, 18.0727]],
        [[ 0.1000, 10.6368,  9.4895],
         [ 0.1000, 10.6368,  9.5467],
         [ 0.1000, 10.6368,  9.1022],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2580],
         [ 0.1000, 10.6368,  9.0487]],
        [[ 0.1000, 10.6161,  8.9065],
         [ 0.1000, 10.6161,  8.9242],
         [ 0.1000, 10.6161,  8.3743],
         ...,
         [ 0.1000, 10.6161,  8.5031],
         [ 0.1000, 10.6161,  8.5699],
         [ 0.1000, 10.6161,  8.3060]],
        ...,
        [[ 0.1000, 10.5905,  8.2323],
         [ 0.1000, 10.5905,  8.2077],
         [ 0.1000, 10.5905,  7.5512],
         ...,
         [ 0.1000, 10.5905,  7.7065],
         [ 0.1000, 10.5905,  7.7867],
         [ 0.1000, 10.5905,  7.4685]],
        [[ 0.1000, 10.6559, 10.0617],
         [ 0.1000, 10.6559, 10.1599],
         [ 0.1000, 10.6559,  9.8303],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7931]],
        [[ 0.1000, 10.6981, 11.4492],
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8387],
         [ 0.1000, 10.8051, 16.4591],
         [ 0.1000, 10.8051, 17.8475],
         ...,
         [ 0.1000, 10.8051, 17.4598],
         [ 0.1000, 10.8051, 17.2757],
         [ 0.1000, 10.8051, 18.0728]],
        [[ 0.1000, 10.6368,  9.4895],
         [ 0.1000, 10.6368,  9.5467],
         [ 0.1000, 10.6368,  9.1022],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2580],
         [ 0.1000, 10.6368,  9.0486]],
        [[ 0.1000, 10.6161,  8.9065],
         [ 0.1000, 10.6161,  8.9243],
         [ 0.1000, 10.6161,  8.3743],
         ...,
         [ 0.1000, 10.6161,  8.5031],
         [ 0.1000, 10.6161,  8.5700],
         [ 0.1000, 10.6161,  8.3060]],
        ...,
        [[ 0.1000, 10.5905,  8.2323],
         [ 0.1000, 10.5905,  8.2078],
         [ 0.1000, 10.5905,  7.5512],
         ...,
         [ 0.1000, 10.5905,  7.7065],
         [ 0.1000, 10.5905,  7.7867],
         [ 0.1000, 10.5905,  7.4684]],
        [[ 0.1000, 10.6559, 10.0617],
         [ 0.1000, 10.6559, 10.1599],
         [ 0.1000, 10.6559,  9.8303],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9421],
         [ 0.1000, 10.6559,  9.7931]],
        [[ 0.1000, 10.6981, 11.4493],
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.6498],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9267],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9530]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0188],
         [ 0.1000, 10.8051, 17.6702],
         [ 0.1000, 10.8051, 17.5322],
         ...,
         [ 0.1000, 10.8051, 17.5632],
         [ 0.1000, 10.8051, 17.5732],
         [ 0.1000, 10.8051, 17.5156]],
        [[ 0.1000, 10.6368,  9.3965],
         [ 0.1000, 10.6368,  9.1473],
         [ 0.1000, 10.6368,  9.1843],
         ...,
         [ 0.1000, 10.6368,  9.1758],
         [ 0.1000, 10.6368,  9.1731],
         [ 0.1000, 10.6368,  9.1888]],
        [[ 0.1000, 10.6161,  8.7961],
         [ 0.1000, 10.6161,  8.4313],
         [ 0.1000, 10.6161,  8.4779],
         ...,
         [ 0.1000, 10.6161,  8.4672],
         [ 0.1000, 10.6161,  8.4638],
         [ 0.1000, 10.6161,  8.4836]],
        ...,
        [[ 0.1000, 10.5905,  8.1040],
         [ 0.1000, 10.5905,  7.6201],
         [ 0.1000, 10.5905,  7.6762],
         ...,
         [ 0.1000, 10.5905,  7.6634],
         [ 0.1000, 10.5905,  7.6592],
         [ 0.1000, 10.5905,  7.6830]],
        [[ 0.1000, 10.6559,  9.9872],
         [ 0.1000, 10.6559,  9.8622],
         [ 0.1000, 10.6559,  9.8886],
         ...,
         [ 0.1000, 10.6559,  9.8826],
         [ 0.1000, 10.6559,  9.8806],
         [ 0.1000, 10.6559,  9.8919]],
        [[ 0.1000, 10.6981, 11.4253],
         [ 0.1000, 10.6981, 11.6436],
         [ 0.1000, 10.6981, 11.6399],
         ...,
         [ 0.1000, 10.6981, 11.6406],
         [ 0.1000, 10.6981, 11.6409],
         [ 0.1000, 10.6981, 11.6395]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9228],
         [0.1000, 1.0531, 0.9497],
         [0.1000, 1.0531, 0.9474],
         ...,
         [0.1000, 1.0531, 0.9479],
         [0.1000, 1.0531, 0.9481],
         [0.1000, 1.0531, 0.9471]],
        [[0.1000, 1.0495, 0.8151],
         [0.1000, 1.0495, 0.8110],
         [0.1000, 1.0495, 0.8116],
         ...,
         [0.1000, 1.0495, 0.8115],
         [0.1000, 1.0495, 0.8114],
         [0.1000, 1.0495, 0.8117]],
        [[0.1000, 1.0490, 0.8053],
         [0.1000, 1.0490, 0.7994],
         [0.1000, 1.0490, 0.8001],
         ...,
         [0.1000, 1.0490, 0.8000],
         [0.1000, 1.0490, 0.7999],
         [0.1000, 1.0490, 0.8002]],
        ...,
        [[0.1000, 1.0485, 0.7941],
         [0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.7871],
         ...,
         [0.1000, 1.0485, 0.7869],
         [0.1000, 1.0485, 0.7868],
         [0.1000, 1.0485, 0.7872]],
        [[0.1000, 1.0499, 0.8247],
         [0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8231],
         ...,
         [0.1000, 1.0499, 0.8230],
         [0.1000, 1.0499, 0.8230],
         [0.1000, 1.0499, 0.8231]],
        [[0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8516],
         [0.1000, 1.0508, 0.8516],
         ...,
         [0.1000, 1.0508, 0.8516],
         [0.1000, 1.0508, 0.8516],
         [0.1000, 1.0508, 0.8516]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8771],
         [ 0.1000, 10.8051, 16.7113],
         [ 0.1000, 10.8051, 17.7743],
         ...,
         [ 0.1000, 10.8051, 17.4832],
         [ 0.1000, 10.8051, 17.3423],
         [ 0.1000, 10.8051, 17.9419]],
        [[ 0.1000, 10.6368,  9.4680],
         [ 0.1000, 10.6368,  9.4472],
         [ 0.1000, 10.6368,  9.1205],
         ...,
         [ 0.1000, 10.6368,  9.1979],
         [ 0.1000, 10.6368,  9.2382],
         [ 0.1000, 10.6368,  9.0793]],
        [[ 0.1000, 10.6161,  8.8811],
         [ 0.1000, 10.6161,  8.8032],
         [ 0.1000, 10.6161,  8.3975],
         ...,
         [ 0.1000, 10.6161,  8.4949],
         [ 0.1000, 10.6161,  8.5453],
         [ 0.1000, 10.6161,  8.3452]],
        ...,
        [[ 0.1000, 10.5905,  8.2030],
         [ 0.1000, 10.5905,  8.0645],
         [ 0.1000, 10.5905,  7.5792],
         ...,
         [ 0.1000, 10.5905,  7.6966],
         [ 0.1000, 10.5905,  7.7572],
         [ 0.1000, 10.5905,  7.5159]],
        [[ 0.1000, 10.6559, 10.0443],
         [ 0.1000, 10.6559, 10.0835],
         [ 0.1000, 10.6559,  9.8432],
         ...,
         [ 0.1000, 10.6559,  9.8984],
         [ 0.1000, 10.6559,  9.9277],
         [ 0.1000, 10.6559,  9.8143]],
        [[ 0.1000, 10.6981, 11.4430],
         [ 0.1000, 10.6981, 11.6434],
         [ 0.1000, 10.6981, 11.6470],
         ...,
         [ 0.1000, 10.6981, 11.6388],
         [ 0.1000, 10.6981, 11.6366],
         [ 0.1000, 10.6981, 11.6537]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9183],
         [0.1000, 1.0531, 0.9318],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9444],
         [0.1000, 1.0531, 0.9421],
         [0.1000, 1.0531, 0.9518]],
        [[0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8137],
         [0.1000, 1.0495, 0.8084],
         ...,
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8103],
         [0.1000, 1.0495, 0.8077]],
        [[0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.8032],
         [0.1000, 1.0490, 0.7966],
         ...,
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7990],
         [0.1000, 1.0490, 0.7958]],
        ...,
        [[0.1000, 1.0485, 0.7934],
         [0.1000, 1.0485, 0.7912],
         [0.1000, 1.0485, 0.7833],
         ...,
         [0.1000, 1.0485, 0.7852],
         [0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.7823]],
        [[0.1000, 1.0499, 0.8234],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8201],
         ...,
         [0.1000, 1.0499, 0.8210],
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8197]],
        [[0.1000, 1.0508, 0.8461],
         [0.1000, 1.0508, 0.8494],
         [0.1000, 1.0508, 0.8495],
         ...,
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8493],
         [0.1000, 1.0508, 0.8496]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8462],
         [ 0.1000, 10.8051, 16.5078],
         [ 0.1000, 10.8051, 17.8330],
         ...,
         [ 0.1000, 10.8051, 17.4644],
         [ 0.1000, 10.8051, 17.2888],
         [ 0.1000, 10.8051, 18.0468]],
        [[ 0.1000, 10.6368,  9.4853],
         [ 0.1000, 10.6368,  9.5267],
         [ 0.1000, 10.6368,  9.1058],
         ...,
         [ 0.1000, 10.6368,  9.2031],
         [ 0.1000, 10.6368,  9.2540],
         [ 0.1000, 10.6368,  9.0546]],
        [[ 0.1000, 10.6161,  8.9015],
         [ 0.1000, 10.6161,  8.8999],
         [ 0.1000, 10.6161,  8.3788],
         ...,
         [ 0.1000, 10.6161,  8.5015],
         [ 0.1000, 10.6161,  8.5651],
         [ 0.1000, 10.6161,  8.3137]],
        ...,
        [[ 0.1000, 10.5905,  8.2265],
         [ 0.1000, 10.5905,  8.1791],
         [ 0.1000, 10.5905,  7.5567],
         ...,
         [ 0.1000, 10.5905,  7.7046],
         [ 0.1000, 10.5905,  7.7808],
         [ 0.1000, 10.5905,  7.4778]],
        [[ 0.1000, 10.6559, 10.0582],
         [ 0.1000, 10.6559, 10.1444],
         [ 0.1000, 10.6559,  9.8329],
         ...,
         [ 0.1000, 10.6559,  9.9022],
         [ 0.1000, 10.6559,  9.9392],
         [ 0.1000, 10.6559,  9.7972]],
        [[ 0.1000, 10.6981, 11.4480],
         [ 0.1000, 10.6981, 11.6530],
         [ 0.1000, 10.6981, 11.6492],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6585]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9277],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9404],
         [0.1000, 1.0531, 0.9527]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8073],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8065]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7955],
         ...,
         [0.1000, 1.0490, 0.7975],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7944]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7922],
         [0.1000, 1.0485, 0.7821],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7808]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8186]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8487],
         ...,
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8403],
         [ 0.1000, 10.8051, 16.4692],
         [ 0.1000, 10.8051, 17.8445],
         ...,
         [ 0.1000, 10.8051, 17.4607],
         [ 0.1000, 10.8051, 17.2785],
         [ 0.1000, 10.8051, 18.0674]],
        [[ 0.1000, 10.6368,  9.4886],
         [ 0.1000, 10.6368,  9.5425],
         [ 0.1000, 10.6368,  9.1030],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2571],
         [ 0.1000, 10.6368,  9.0499]],
        [[ 0.1000, 10.6161,  8.9054],
         [ 0.1000, 10.6161,  8.9192],
         [ 0.1000, 10.6161,  8.3752],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5689],
         [ 0.1000, 10.6161,  8.3076]],
        ...,
        [[ 0.1000, 10.5905,  8.2311],
         [ 0.1000, 10.5905,  8.2018],
         [ 0.1000, 10.5905,  7.5524],
         ...,
         [ 0.1000, 10.5905,  7.7061],
         [ 0.1000, 10.5905,  7.7855],
         [ 0.1000, 10.5905,  7.4704]],
        [[ 0.1000, 10.6559, 10.0610],
         [ 0.1000, 10.6559, 10.1566],
         [ 0.1000, 10.6559,  9.8309],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9415],
         [ 0.1000, 10.6559,  9.7940]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6553],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8390],
         [ 0.1000, 10.8051, 16.4612],
         [ 0.1000, 10.8051, 17.8469],
         ...,
         [ 0.1000, 10.8051, 17.4600],
         [ 0.1000, 10.8051, 17.2763],
         [ 0.1000, 10.8051, 18.0717]],
        [[ 0.1000, 10.6368,  9.4893],
         [ 0.1000, 10.6368,  9.5458],
         [ 0.1000, 10.6368,  9.1024],
         ...,
         [ 0.1000, 10.6368,  9.2044],
         [ 0.1000, 10.6368,  9.2578],
         [ 0.1000, 10.6368,  9.0489]],
        [[ 0.1000, 10.6161,  8.9062],
         [ 0.1000, 10.6161,  8.9232],
         [ 0.1000, 10.6161,  8.3745],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5697],
         [ 0.1000, 10.6161,  8.3063]],
        ...,
        [[ 0.1000, 10.5905,  8.2321],
         [ 0.1000, 10.5905,  8.2065],
         [ 0.1000, 10.5905,  7.5515],
         ...,
         [ 0.1000, 10.5905,  7.7064],
         [ 0.1000, 10.5905,  7.7864],
         [ 0.1000, 10.5905,  7.4689]],
        [[ 0.1000, 10.6559, 10.0615],
         [ 0.1000, 10.6559, 10.1592],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9420],
         [ 0.1000, 10.6559,  9.7933]],
        [[ 0.1000, 10.6981, 11.4492],
         [ 0.1000, 10.6981, 11.6558],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8398],
         [ 0.1000, 10.8051, 16.4665],
         [ 0.1000, 10.8051, 17.8453],
         ...,
         [ 0.1000, 10.8051, 17.4605],
         [ 0.1000, 10.8051, 17.2777],
         [ 0.1000, 10.8051, 18.0688]],
        [[ 0.1000, 10.6368,  9.4889],
         [ 0.1000, 10.6368,  9.5436],
         [ 0.1000, 10.6368,  9.1028],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2574],
         [ 0.1000, 10.6368,  9.0496]],
        [[ 0.1000, 10.6161,  8.9057],
         [ 0.1000, 10.6161,  8.9205],
         [ 0.1000, 10.6161,  8.3750],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5692],
         [ 0.1000, 10.6161,  8.3072]],
        ...,
        [[ 0.1000, 10.5905,  8.2314],
         [ 0.1000, 10.5905,  8.2034],
         [ 0.1000, 10.5905,  7.5521],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7858],
         [ 0.1000, 10.5905,  7.4699]],
        [[ 0.1000, 10.6559, 10.0612],
         [ 0.1000, 10.6559, 10.1575],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9417],
         [ 0.1000, 10.6559,  9.7937]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8392],
         [ 0.1000, 10.8051, 16.4623],
         [ 0.1000, 10.8051, 17.8465],
         ...,
         [ 0.1000, 10.8051, 17.4601],
         [ 0.1000, 10.8051, 17.2766],
         [ 0.1000, 10.8051, 18.0711]],
        [[ 0.1000, 10.6368,  9.4893],
         [ 0.1000, 10.6368,  9.5454],
         [ 0.1000, 10.6368,  9.1025],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2577],
         [ 0.1000, 10.6368,  9.0490]],
        [[ 0.1000, 10.6161,  8.9061],
         [ 0.1000, 10.6161,  8.9226],
         [ 0.1000, 10.6161,  8.3746],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5696],
         [ 0.1000, 10.6161,  8.3065]],
        ...,
        [[ 0.1000, 10.5905,  8.2319],
         [ 0.1000, 10.5905,  8.2059],
         [ 0.1000, 10.5905,  7.5516],
         ...,
         [ 0.1000, 10.5905,  7.7064],
         [ 0.1000, 10.5905,  7.7863],
         [ 0.1000, 10.5905,  7.4691]],
        [[ 0.1000, 10.6559, 10.0615],
         [ 0.1000, 10.6559, 10.1589],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9419],
         [ 0.1000, 10.6559,  9.7934]],
        [[ 0.1000, 10.6981, 11.4492],
         [ 0.1000, 10.6981, 11.6557],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6597]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7818],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8396],
         [ 0.1000, 10.8051, 16.4651],
         [ 0.1000, 10.8051, 17.8457],
         ...,
         [ 0.1000, 10.8051, 17.4603],
         [ 0.1000, 10.8051, 17.2773],
         [ 0.1000, 10.8051, 18.0696]],
        [[ 0.1000, 10.6368,  9.4890],
         [ 0.1000, 10.6368,  9.5442],
         [ 0.1000, 10.6368,  9.1027],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2575],
         [ 0.1000, 10.6368,  9.0494]],
        [[ 0.1000, 10.6161,  8.9058],
         [ 0.1000, 10.6161,  8.9212],
         [ 0.1000, 10.6161,  8.3749],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5694],
         [ 0.1000, 10.6161,  8.3070]],
        ...,
        [[ 0.1000, 10.5905,  8.2316],
         [ 0.1000, 10.5905,  8.2042],
         [ 0.1000, 10.5905,  7.5519],
         ...,
         [ 0.1000, 10.5905,  7.7063],
         [ 0.1000, 10.5905,  7.7860],
         [ 0.1000, 10.5905,  7.4696]],
        [[ 0.1000, 10.6559, 10.0613],
         [ 0.1000, 10.6559, 10.1580],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9417],
         [ 0.1000, 10.6559,  9.7936]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6555],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8393],
         [ 0.1000, 10.8051, 16.4629],
         [ 0.1000, 10.8051, 17.8464],
         ...,
         [ 0.1000, 10.8051, 17.4601],
         [ 0.1000, 10.8051, 17.2768],
         [ 0.1000, 10.8051, 18.0707]],
        [[ 0.1000, 10.6368,  9.4892],
         [ 0.1000, 10.6368,  9.5451],
         [ 0.1000, 10.6368,  9.1025],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2577],
         [ 0.1000, 10.6368,  9.0491]],
        [[ 0.1000, 10.6161,  8.9061],
         [ 0.1000, 10.6161,  8.9223],
         [ 0.1000, 10.6161,  8.3747],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5696],
         [ 0.1000, 10.6161,  8.3066]],
        ...,
        [[ 0.1000, 10.5905,  8.2319],
         [ 0.1000, 10.5905,  8.2055],
         [ 0.1000, 10.5905,  7.5517],
         ...,
         [ 0.1000, 10.5905,  7.7064],
         [ 0.1000, 10.5905,  7.7862],
         [ 0.1000, 10.5905,  7.4692]],
        [[ 0.1000, 10.6559, 10.0614],
         [ 0.1000, 10.6559, 10.1587],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9419],
         [ 0.1000, 10.6559,  9.7934]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6556],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8395],
         [ 0.1000, 10.8051, 16.4643],
         [ 0.1000, 10.8051, 17.8459],
         ...,
         [ 0.1000, 10.8051, 17.4603],
         [ 0.1000, 10.8051, 17.2771],
         [ 0.1000, 10.8051, 18.0700]],
        [[ 0.1000, 10.6368,  9.4891],
         [ 0.1000, 10.6368,  9.5445],
         [ 0.1000, 10.6368,  9.1026],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2575],
         [ 0.1000, 10.6368,  9.0493]],
        [[ 0.1000, 10.6161,  8.9059],
         [ 0.1000, 10.6161,  8.9216],
         [ 0.1000, 10.6161,  8.3748],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5694],
         [ 0.1000, 10.6161,  8.3068]],
        ...,
        [[ 0.1000, 10.5905,  8.2317],
         [ 0.1000, 10.5905,  8.2047],
         [ 0.1000, 10.5905,  7.5518],
         ...,
         [ 0.1000, 10.5905,  7.7063],
         [ 0.1000, 10.5905,  7.7860],
         [ 0.1000, 10.5905,  7.4695]],
        [[ 0.1000, 10.6559, 10.0613],
         [ 0.1000, 10.6559, 10.1582],
         [ 0.1000, 10.6559,  9.8306],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9418],
         [ 0.1000, 10.6559,  9.7935]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6556],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8393],
         [ 0.1000, 10.8051, 16.4632],
         [ 0.1000, 10.8051, 17.8463],
         ...,
         [ 0.1000, 10.8051, 17.4602],
         [ 0.1000, 10.8051, 17.2768],
         [ 0.1000, 10.8051, 18.0706]],
        [[ 0.1000, 10.6368,  9.4892],
         [ 0.1000, 10.6368,  9.5450],
         [ 0.1000, 10.6368,  9.1025],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2576],
         [ 0.1000, 10.6368,  9.0492]],
        [[ 0.1000, 10.6161,  8.9060],
         [ 0.1000, 10.6161,  8.9222],
         [ 0.1000, 10.6161,  8.3747],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5695],
         [ 0.1000, 10.6161,  8.3067]],
        ...,
        [[ 0.1000, 10.5905,  8.2318],
         [ 0.1000, 10.5905,  8.2053],
         [ 0.1000, 10.5905,  7.5517],
         ...,
         [ 0.1000, 10.5905,  7.7063],
         [ 0.1000, 10.5905,  7.7862],
         [ 0.1000, 10.5905,  7.4692]],
        [[ 0.1000, 10.6559, 10.0614],
         [ 0.1000, 10.6559, 10.1586],
         [ 0.1000, 10.6559,  9.8306],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9419],
         [ 0.1000, 10.6559,  9.7934]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6556],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8393],
         [ 0.1000, 10.8051, 16.4629],
         [ 0.1000, 10.8051, 17.8464],
         ...,
         [ 0.1000, 10.8051, 17.4601],
         [ 0.1000, 10.8051, 17.2768],
         [ 0.1000, 10.8051, 18.0707]],
        [[ 0.1000, 10.6368,  9.4892],
         [ 0.1000, 10.6368,  9.5451],
         [ 0.1000, 10.6368,  9.1025],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2577],
         [ 0.1000, 10.6368,  9.0491]],
        [[ 0.1000, 10.6161,  8.9061],
         [ 0.1000, 10.6161,  8.9223],
         [ 0.1000, 10.6161,  8.3747],
         ...,
         [ 0.1000, 10.6161,  8.5030],
         [ 0.1000, 10.6161,  8.5696],
         [ 0.1000, 10.6161,  8.3066]],
        ...,
        [[ 0.1000, 10.5905,  8.2319],
         [ 0.1000, 10.5905,  8.2055],
         [ 0.1000, 10.5905,  7.5517],
         ...,
         [ 0.1000, 10.5905,  7.7064],
         [ 0.1000, 10.5905,  7.7862],
         [ 0.1000, 10.5905,  7.4692]],
        [[ 0.1000, 10.6559, 10.0614],
         [ 0.1000, 10.6559, 10.1587],
         [ 0.1000, 10.6559,  9.8305],
         ...,
         [ 0.1000, 10.6559,  9.9031],
         [ 0.1000, 10.6559,  9.9419],
         [ 0.1000, 10.6559,  9.7934]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6556],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9166],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0296],
         [ 0.1000, 10.8051, 17.6803],
         [ 0.1000, 10.8051, 17.5310],
         ...,
         [ 0.1000, 10.8051, 17.5645],
         [ 0.1000, 10.8051, 17.5769],
         [ 0.1000, 10.8051, 17.5116]],
        [[ 0.1000, 10.6368,  9.3917],
         [ 0.1000, 10.6368,  9.1447],
         [ 0.1000, 10.6368,  9.1846],
         ...,
         [ 0.1000, 10.6368,  9.1755],
         [ 0.1000, 10.6368,  9.1721],
         [ 0.1000, 10.6368,  9.1900]],
        [[ 0.1000, 10.6161,  8.7903],
         [ 0.1000, 10.6161,  8.4280],
         [ 0.1000, 10.6161,  8.4783],
         ...,
         [ 0.1000, 10.6161,  8.4668],
         [ 0.1000, 10.6161,  8.4626],
         [ 0.1000, 10.6161,  8.4850]],
        ...,
        [[ 0.1000, 10.5905,  8.0971],
         [ 0.1000, 10.5905,  7.6161],
         [ 0.1000, 10.5905,  7.6766],
         ...,
         [ 0.1000, 10.5905,  7.6628],
         [ 0.1000, 10.5905,  7.6577],
         [ 0.1000, 10.5905,  7.6847]],
        [[ 0.1000, 10.6559,  9.9834],
         [ 0.1000, 10.6559,  9.8603],
         [ 0.1000, 10.6559,  9.8889],
         ...,
         [ 0.1000, 10.6559,  9.8823],
         [ 0.1000, 10.6559,  9.8799],
         [ 0.1000, 10.6559,  9.8927]],
        [[ 0.1000, 10.6981, 11.4244],
         [ 0.1000, 10.6981, 11.6439],
         [ 0.1000, 10.6981, 11.6399],
         ...,
         [ 0.1000, 10.6981, 11.6407],
         [ 0.1000, 10.6981, 11.6410],
         [ 0.1000, 10.6981, 11.6394]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9229],
         [0.1000, 1.0531, 0.9497],
         [0.1000, 1.0531, 0.9473],
         ...,
         [0.1000, 1.0531, 0.9478],
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9470]],
        [[0.1000, 1.0495, 0.8149],
         [0.1000, 1.0495, 0.8109],
         [0.1000, 1.0495, 0.8116],
         ...,
         [0.1000, 1.0495, 0.8114],
         [0.1000, 1.0495, 0.8113],
         [0.1000, 1.0495, 0.8116]],
        [[0.1000, 1.0490, 0.8051],
         [0.1000, 1.0490, 0.7992],
         [0.1000, 1.0490, 0.8001],
         ...,
         [0.1000, 1.0490, 0.7999],
         [0.1000, 1.0490, 0.7998],
         [0.1000, 1.0490, 0.8002]],
        ...,
        [[0.1000, 1.0485, 0.7939],
         [0.1000, 1.0485, 0.7860],
         [0.1000, 1.0485, 0.7870],
         ...,
         [0.1000, 1.0485, 0.7868],
         [0.1000, 1.0485, 0.7867],
         [0.1000, 1.0485, 0.7872]],
        [[0.1000, 1.0499, 0.8245],
         [0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8230],
         ...,
         [0.1000, 1.0499, 0.8229],
         [0.1000, 1.0499, 0.8229],
         [0.1000, 1.0499, 0.8231]],
        [[0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8516],
         [0.1000, 1.0508, 0.8515],
         ...,
         [0.1000, 1.0508, 0.8515],
         [0.1000, 1.0508, 0.8515],
         [0.1000, 1.0508, 0.8515]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8813],
         [ 0.1000, 10.8051, 16.7261],
         [ 0.1000, 10.8051, 17.7705],
         ...,
         [ 0.1000, 10.8051, 17.4847],
         [ 0.1000, 10.8051, 17.3464],
         [ 0.1000, 10.8051, 17.9345]],
        [[ 0.1000, 10.6368,  9.4658],
         [ 0.1000, 10.6368,  9.4417],
         [ 0.1000, 10.6368,  9.1215],
         ...,
         [ 0.1000, 10.6368,  9.1974],
         [ 0.1000, 10.6368,  9.2370],
         [ 0.1000, 10.6368,  9.0811]],
        [[ 0.1000, 10.6161,  8.8785],
         [ 0.1000, 10.6161,  8.7964],
         [ 0.1000, 10.6161,  8.3987],
         ...,
         [ 0.1000, 10.6161,  8.4944],
         [ 0.1000, 10.6161,  8.5438],
         [ 0.1000, 10.6161,  8.3474]],
        ...,
        [[ 0.1000, 10.5905,  8.1999],
         [ 0.1000, 10.5905,  8.0565],
         [ 0.1000, 10.5905,  7.5807],
         ...,
         [ 0.1000, 10.5905,  7.6960],
         [ 0.1000, 10.5905,  7.7554],
         [ 0.1000, 10.5905,  7.5187]],
        [[ 0.1000, 10.6559, 10.0425],
         [ 0.1000, 10.6559, 10.0793],
         [ 0.1000, 10.6559,  9.8439],
         ...,
         [ 0.1000, 10.6559,  9.8981],
         [ 0.1000, 10.6559,  9.9268],
         [ 0.1000, 10.6559,  9.8156]],
        [[ 0.1000, 10.6981, 11.4424],
         [ 0.1000, 10.6981, 11.6429],
         [ 0.1000, 10.6981, 11.6469],
         ...,
         [ 0.1000, 10.6981, 11.6389],
         [ 0.1000, 10.6981, 11.6366],
         [ 0.1000, 10.6981, 11.6533]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9184],
         [0.1000, 1.0531, 0.9321],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9422],
         [0.1000, 1.0531, 0.9518]],
        [[0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 0.8084],
         ...,
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8103],
         [0.1000, 1.0495, 0.8078]],
        [[0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.8032],
         [0.1000, 1.0490, 0.7967],
         ...,
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7990],
         [0.1000, 1.0490, 0.7959]],
        ...,
        [[0.1000, 1.0485, 0.7935],
         [0.1000, 1.0485, 0.7911],
         [0.1000, 1.0485, 0.7834],
         ...,
         [0.1000, 1.0485, 0.7853],
         [0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.7824]],
        [[0.1000, 1.0499, 0.8234],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8202],
         ...,
         [0.1000, 1.0499, 0.8211],
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8197]],
        [[0.1000, 1.0508, 0.8462],
         [0.1000, 1.0508, 0.8495],
         [0.1000, 1.0508, 0.8495],
         ...,
         [0.1000, 1.0508, 0.8494],
         [0.1000, 1.0508, 0.8494],
         [0.1000, 1.0508, 0.8496]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8474],
         [ 0.1000, 10.8051, 16.5135],
         [ 0.1000, 10.8051, 17.8313],
         ...,
         [ 0.1000, 10.8051, 17.4650],
         [ 0.1000, 10.8051, 17.2904],
         [ 0.1000, 10.8051, 18.0437]],
        [[ 0.1000, 10.6368,  9.4846],
         [ 0.1000, 10.6368,  9.5243],
         [ 0.1000, 10.6368,  9.1062],
         ...,
         [ 0.1000, 10.6368,  9.2030],
         [ 0.1000, 10.6368,  9.2536],
         [ 0.1000, 10.6368,  9.0553]],
        [[ 0.1000, 10.6161,  8.9006],
         [ 0.1000, 10.6161,  8.8971],
         [ 0.1000, 10.6161,  8.3794],
         ...,
         [ 0.1000, 10.6161,  8.5013],
         [ 0.1000, 10.6161,  8.5645],
         [ 0.1000, 10.6161,  8.3146]],
        ...,
        [[ 0.1000, 10.5905,  8.2256],
         [ 0.1000, 10.5905,  8.1757],
         [ 0.1000, 10.5905,  7.5574],
         ...,
         [ 0.1000, 10.5905,  7.7043],
         [ 0.1000, 10.5905,  7.7801],
         [ 0.1000, 10.5905,  7.4789]],
        [[ 0.1000, 10.6559, 10.0577],
         [ 0.1000, 10.6559, 10.1426],
         [ 0.1000, 10.6559,  9.8331],
         ...,
         [ 0.1000, 10.6559,  9.9021],
         [ 0.1000, 10.6559,  9.9389],
         [ 0.1000, 10.6559,  9.7977]],
        [[ 0.1000, 10.6981, 11.4478],
         [ 0.1000, 10.6981, 11.6526],
         [ 0.1000, 10.6981, 11.6491],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6583]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9170],
         [0.1000, 1.0531, 0.9278],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9405],
         [0.1000, 1.0531, 0.9527]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8073],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8065]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.7955],
         ...,
         [0.1000, 1.0490, 0.7975],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7945]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7922],
         [0.1000, 1.0485, 0.7822],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7809]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8192],
         ...,
         [0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8186]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.8487],
         ...,
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8410],
         [ 0.1000, 10.8051, 16.4735],
         [ 0.1000, 10.8051, 17.8432],
         ...,
         [ 0.1000, 10.8051, 17.4611],
         [ 0.1000, 10.8051, 17.2796],
         [ 0.1000, 10.8051, 18.0651]],
        [[ 0.1000, 10.6368,  9.4882],
         [ 0.1000, 10.6368,  9.5408],
         [ 0.1000, 10.6368,  9.1033],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2568],
         [ 0.1000, 10.6368,  9.0504]],
        [[ 0.1000, 10.6161,  8.9049],
         [ 0.1000, 10.6161,  8.9170],
         [ 0.1000, 10.6161,  8.3756],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5685],
         [ 0.1000, 10.6161,  8.3083]],
        ...,
        [[ 0.1000, 10.5905,  8.2305],
         [ 0.1000, 10.5905,  8.1993],
         [ 0.1000, 10.5905,  7.5528],
         ...,
         [ 0.1000, 10.5905,  7.7059],
         [ 0.1000, 10.5905,  7.7849],
         [ 0.1000, 10.5905,  7.4712]],
        [[ 0.1000, 10.6559, 10.0606],
         [ 0.1000, 10.6559, 10.1553],
         [ 0.1000, 10.6559,  9.8311],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9412],
         [ 0.1000, 10.6559,  9.7943]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6550],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8397],
         [ 0.1000, 10.8051, 16.4651],
         [ 0.1000, 10.8051, 17.8457],
         ...,
         [ 0.1000, 10.8051, 17.4603],
         [ 0.1000, 10.8051, 17.2774],
         [ 0.1000, 10.8051, 18.0695]],
        [[ 0.1000, 10.6368,  9.4890],
         [ 0.1000, 10.6368,  9.5442],
         [ 0.1000, 10.6368,  9.1027],
         ...,
         [ 0.1000, 10.6368,  9.2043],
         [ 0.1000, 10.6368,  9.2575],
         [ 0.1000, 10.6368,  9.0494]],
        [[ 0.1000, 10.6161,  8.9058],
         [ 0.1000, 10.6161,  8.9212],
         [ 0.1000, 10.6161,  8.3749],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5693],
         [ 0.1000, 10.6161,  8.3070]],
        ...,
        [[ 0.1000, 10.5905,  8.2316],
         [ 0.1000, 10.5905,  8.2042],
         [ 0.1000, 10.5905,  7.5519],
         ...,
         [ 0.1000, 10.5905,  7.7063],
         [ 0.1000, 10.5905,  7.7859],
         [ 0.1000, 10.5905,  7.4696]],
        [[ 0.1000, 10.6559, 10.0612],
         [ 0.1000, 10.6559, 10.1579],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9417],
         [ 0.1000, 10.6559,  9.7936]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6555],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6596]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9268],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9400],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7941]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8405],
         [ 0.1000, 10.8051, 16.4706],
         [ 0.1000, 10.8051, 17.8441],
         ...,
         [ 0.1000, 10.8051, 17.4609],
         [ 0.1000, 10.8051, 17.2789],
         [ 0.1000, 10.8051, 18.0666]],
        [[ 0.1000, 10.6368,  9.4885],
         [ 0.1000, 10.6368,  9.5419],
         [ 0.1000, 10.6368,  9.1031],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2570],
         [ 0.1000, 10.6368,  9.0501]],
        [[ 0.1000, 10.6161,  8.9052],
         [ 0.1000, 10.6161,  8.9185],
         [ 0.1000, 10.6161,  8.3754],
         ...,
         [ 0.1000, 10.6161,  8.5027],
         [ 0.1000, 10.6161,  8.5688],
         [ 0.1000, 10.6161,  8.3078]],
        ...,
        [[ 0.1000, 10.5905,  8.2309],
         [ 0.1000, 10.5905,  8.2009],
         [ 0.1000, 10.5905,  7.5525],
         ...,
         [ 0.1000, 10.5905,  7.7060],
         [ 0.1000, 10.5905,  7.7853],
         [ 0.1000, 10.5905,  7.4707]],
        [[ 0.1000, 10.6559, 10.0608],
         [ 0.1000, 10.6559, 10.1562],
         [ 0.1000, 10.6559,  9.8309],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9414],
         [ 0.1000, 10.6559,  9.7941]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6552],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8398],
         [ 0.1000, 10.8051, 16.4663],
         [ 0.1000, 10.8051, 17.8453],
         ...,
         [ 0.1000, 10.8051, 17.4605],
         [ 0.1000, 10.8051, 17.2777],
         [ 0.1000, 10.8051, 18.0689]],
        [[ 0.1000, 10.6368,  9.4889],
         [ 0.1000, 10.6368,  9.5437],
         [ 0.1000, 10.6368,  9.1028],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2574],
         [ 0.1000, 10.6368,  9.0495]],
        [[ 0.1000, 10.6161,  8.9057],
         [ 0.1000, 10.6161,  8.9206],
         [ 0.1000, 10.6161,  8.3750],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5692],
         [ 0.1000, 10.6161,  8.3071]],
        ...,
        [[ 0.1000, 10.5905,  8.2314],
         [ 0.1000, 10.5905,  8.2035],
         [ 0.1000, 10.5905,  7.5520],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7858],
         [ 0.1000, 10.5905,  7.4698]],
        [[ 0.1000, 10.6559, 10.0612],
         [ 0.1000, 10.6559, 10.1576],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9417],
         [ 0.1000, 10.6559,  9.7937]],
        [[ 0.1000, 10.6981, 11.4491],
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8403],
         [ 0.1000, 10.8051, 16.4692],
         [ 0.1000, 10.8051, 17.8445],
         ...,
         [ 0.1000, 10.8051, 17.4607],
         [ 0.1000, 10.8051, 17.2785],
         [ 0.1000, 10.8051, 18.0674]],
        [[ 0.1000, 10.6368,  9.4886],
         [ 0.1000, 10.6368,  9.5425],
         [ 0.1000, 10.6368,  9.1030],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2571],
         [ 0.1000, 10.6368,  9.0499]],
        [[ 0.1000, 10.6161,  8.9054],
         [ 0.1000, 10.6161,  8.9192],
         [ 0.1000, 10.6161,  8.3752],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5689],
         [ 0.1000, 10.6161,  8.3076]],
        ...,
        [[ 0.1000, 10.5905,  8.2311],
         [ 0.1000, 10.5905,  8.2018],
         [ 0.1000, 10.5905,  7.5524],
         ...,
         [ 0.1000, 10.5905,  7.7061],
         [ 0.1000, 10.5905,  7.7855],
         [ 0.1000, 10.5905,  7.4704]],
        [[ 0.1000, 10.6559, 10.0609],
         [ 0.1000, 10.6559, 10.1567],
         [ 0.1000, 10.6559,  9.8309],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9415],
         [ 0.1000, 10.6559,  9.7940]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6553],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8399],
         [ 0.1000, 10.8051, 16.4669],
         [ 0.1000, 10.8051, 17.8452],
         ...,
         [ 0.1000, 10.8051, 17.4605],
         [ 0.1000, 10.8051, 17.2778],
         [ 0.1000, 10.8051, 18.0686]],
        [[ 0.1000, 10.6368,  9.4888],
         [ 0.1000, 10.6368,  9.5435],
         [ 0.1000, 10.6368,  9.1028],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2573],
         [ 0.1000, 10.6368,  9.0496]],
        [[ 0.1000, 10.6161,  8.9056],
         [ 0.1000, 10.6161,  8.9203],
         [ 0.1000, 10.6161,  8.3750],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5692],
         [ 0.1000, 10.6161,  8.3072]],
        ...,
        [[ 0.1000, 10.5905,  8.2314],
         [ 0.1000, 10.5905,  8.2031],
         [ 0.1000, 10.5905,  7.5521],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7857],
         [ 0.1000, 10.5905,  7.4699]],
        [[ 0.1000, 10.6559, 10.0611],
         [ 0.1000, 10.6559, 10.1574],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9416],
         [ 0.1000, 10.6559,  9.7938]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8402],
         [ 0.1000, 10.8051, 16.4684],
         [ 0.1000, 10.8051, 17.8447],
         ...,
         [ 0.1000, 10.8051, 17.4607],
         [ 0.1000, 10.8051, 17.2782],
         [ 0.1000, 10.8051, 18.0678]],
        [[ 0.1000, 10.6368,  9.4887],
         [ 0.1000, 10.6368,  9.5429],
         [ 0.1000, 10.6368,  9.1029],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2572],
         [ 0.1000, 10.6368,  9.0498]],
        [[ 0.1000, 10.6161,  8.9055],
         [ 0.1000, 10.6161,  8.9196],
         [ 0.1000, 10.6161,  8.3752],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5690],
         [ 0.1000, 10.6161,  8.3075]],
        ...,
        [[ 0.1000, 10.5905,  8.2312],
         [ 0.1000, 10.5905,  8.2023],
         [ 0.1000, 10.5905,  7.5523],
         ...,
         [ 0.1000, 10.5905,  7.7061],
         [ 0.1000, 10.5905,  7.7856],
         [ 0.1000, 10.5905,  7.4702]],
        [[ 0.1000, 10.6559, 10.0610],
         [ 0.1000, 10.6559, 10.1569],
         [ 0.1000, 10.6559,  9.8308],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9415],
         [ 0.1000, 10.6559,  9.7939]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6553],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8400],
         [ 0.1000, 10.8051, 16.4672],
         [ 0.1000, 10.8051, 17.8451],
         ...,
         [ 0.1000, 10.8051, 17.4605],
         [ 0.1000, 10.8051, 17.2779],
         [ 0.1000, 10.8051, 18.0684]],
        [[ 0.1000, 10.6368,  9.4888],
         [ 0.1000, 10.6368,  9.5433],
         [ 0.1000, 10.6368,  9.1028],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2573],
         [ 0.1000, 10.6368,  9.0496]],
        [[ 0.1000, 10.6161,  8.9056],
         [ 0.1000, 10.6161,  8.9202],
         [ 0.1000, 10.6161,  8.3751],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5691],
         [ 0.1000, 10.6161,  8.3073]],
        ...,
        [[ 0.1000, 10.5905,  8.2313],
         [ 0.1000, 10.5905,  8.2030],
         [ 0.1000, 10.5905,  7.5521],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7857],
         [ 0.1000, 10.5905,  7.4700]],
        [[ 0.1000, 10.6559, 10.0611],
         [ 0.1000, 10.6559, 10.1573],
         [ 0.1000, 10.6559,  9.8308],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9416],
         [ 0.1000, 10.6559,  9.7938]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8399],
         [ 0.1000, 10.8051, 16.4669],
         [ 0.1000, 10.8051, 17.8452],
         ...,
         [ 0.1000, 10.8051, 17.4605],
         [ 0.1000, 10.8051, 17.2778],
         [ 0.1000, 10.8051, 18.0686]],
        [[ 0.1000, 10.6368,  9.4888],
         [ 0.1000, 10.6368,  9.5435],
         [ 0.1000, 10.6368,  9.1028],
         ...,
         [ 0.1000, 10.6368,  9.2042],
         [ 0.1000, 10.6368,  9.2573],
         [ 0.1000, 10.6368,  9.0496]],
        [[ 0.1000, 10.6161,  8.9056],
         [ 0.1000, 10.6161,  8.9203],
         [ 0.1000, 10.6161,  8.3750],
         ...,
         [ 0.1000, 10.6161,  8.5029],
         [ 0.1000, 10.6161,  8.5692],
         [ 0.1000, 10.6161,  8.3072]],
        ...,
        [[ 0.1000, 10.5905,  8.2314],
         [ 0.1000, 10.5905,  8.2031],
         [ 0.1000, 10.5905,  7.5521],
         ...,
         [ 0.1000, 10.5905,  7.7062],
         [ 0.1000, 10.5905,  7.7857],
         [ 0.1000, 10.5905,  7.4699]],
        [[ 0.1000, 10.6559, 10.0611],
         [ 0.1000, 10.6559, 10.1574],
         [ 0.1000, 10.6559,  9.8307],
         ...,
         [ 0.1000, 10.6559,  9.9030],
         [ 0.1000, 10.6559,  9.9416],
         [ 0.1000, 10.6559,  9.7938]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0406],
         [ 0.1000, 10.8051, 17.6915],
         [ 0.1000, 10.8051, 17.5293],
         ...,
         [ 0.1000, 10.8051, 17.5661],
         [ 0.1000, 10.8051, 17.5805],
         [ 0.1000, 10.8051, 17.5071]],
        [[ 0.1000, 10.6368,  9.3868],
         [ 0.1000, 10.6368,  9.1417],
         [ 0.1000, 10.6368,  9.1851],
         ...,
         [ 0.1000, 10.6368,  9.1750],
         [ 0.1000, 10.6368,  9.1711],
         [ 0.1000, 10.6368,  9.1912]],
        [[ 0.1000, 10.6161,  8.7844],
         [ 0.1000, 10.6161,  8.4243],
         [ 0.1000, 10.6161,  8.4789],
         ...,
         [ 0.1000, 10.6161,  8.4663],
         [ 0.1000, 10.6161,  8.4613],
         [ 0.1000, 10.6161,  8.4866]],
        ...,
        [[ 0.1000, 10.5905,  8.0902],
         [ 0.1000, 10.5905,  7.6116],
         [ 0.1000, 10.5905,  7.6774],
         ...,
         [ 0.1000, 10.5905,  7.6622],
         [ 0.1000, 10.5905,  7.6563],
         [ 0.1000, 10.5905,  7.6866]],
        [[ 0.1000, 10.6559,  9.9796],
         [ 0.1000, 10.6559,  9.8582],
         [ 0.1000, 10.6559,  9.8892],
         ...,
         [ 0.1000, 10.6559,  9.8820],
         [ 0.1000, 10.6559,  9.8792],
         [ 0.1000, 10.6559,  9.8936]],
        [[ 0.1000, 10.6981, 11.4235],
         [ 0.1000, 10.6981, 11.6442],
         [ 0.1000, 10.6981, 11.6398],
         ...,
         [ 0.1000, 10.6981, 11.6407],
         [ 0.1000, 10.6981, 11.6411],
         [ 0.1000, 10.6981, 11.6393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9230],
         [0.1000, 1.0531, 0.9498],
         [0.1000, 1.0531, 0.9472],
         ...,
         [0.1000, 1.0531, 0.9478],
         [0.1000, 1.0531, 0.9480],
         [0.1000, 1.0531, 0.9468]],
        [[0.1000, 1.0495, 0.8147],
         [0.1000, 1.0495, 0.8108],
         [0.1000, 1.0495, 0.8115],
         ...,
         [0.1000, 1.0495, 0.8113],
         [0.1000, 1.0495, 0.8112],
         [0.1000, 1.0495, 0.8116]],
        [[0.1000, 1.0490, 0.8049],
         [0.1000, 1.0490, 0.7991],
         [0.1000, 1.0490, 0.8000],
         ...,
         [0.1000, 1.0490, 0.7998],
         [0.1000, 1.0490, 0.7997],
         [0.1000, 1.0490, 0.8001]],
        ...,
        [[0.1000, 1.0485, 0.7937],
         [0.1000, 1.0485, 0.7859],
         [0.1000, 1.0485, 0.7869],
         ...,
         [0.1000, 1.0485, 0.7867],
         [0.1000, 1.0485, 0.7866],
         [0.1000, 1.0485, 0.7871]],
        [[0.1000, 1.0499, 0.8244],
         [0.1000, 1.0499, 0.8224],
         [0.1000, 1.0499, 0.8229],
         ...,
         [0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8230]],
        [[0.1000, 1.0508, 0.8479],
         [0.1000, 1.0508, 0.8515],
         [0.1000, 1.0508, 0.8514],
         ...,
         [0.1000, 1.0508, 0.8514],
         [0.1000, 1.0508, 0.8514],
         [0.1000, 1.0508, 0.8514]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8861],
         [ 0.1000, 10.8051, 16.7432],
         [ 0.1000, 10.8051, 17.7659],
         ...,
         [ 0.1000, 10.8051, 17.4864],
         [ 0.1000, 10.8051, 17.3511],
         [ 0.1000, 10.8051, 17.9259]],
        [[ 0.1000, 10.6368,  9.4633],
         [ 0.1000, 10.6368,  9.4353],
         [ 0.1000, 10.6368,  9.1226],
         ...,
         [ 0.1000, 10.6368,  9.1970],
         [ 0.1000, 10.6368,  9.2356],
         [ 0.1000, 10.6368,  9.0831]],
        [[ 0.1000, 10.6161,  8.8755],
         [ 0.1000, 10.6161,  8.7887],
         [ 0.1000, 10.6161,  8.4002],
         ...,
         [ 0.1000, 10.6161,  8.4938],
         [ 0.1000, 10.6161,  8.5421],
         [ 0.1000, 10.6161,  8.3500]],
        ...,
        [[ 0.1000, 10.5905,  8.1965],
         [ 0.1000, 10.5905,  8.0474],
         [ 0.1000, 10.5905,  7.5825],
         ...,
         [ 0.1000, 10.5905,  7.6953],
         [ 0.1000, 10.5905,  7.7533],
         [ 0.1000, 10.5905,  7.5218]],
        [[ 0.1000, 10.6559, 10.0405],
         [ 0.1000, 10.6559, 10.0745],
         [ 0.1000, 10.6559,  9.8447],
         ...,
         [ 0.1000, 10.6559,  9.8978],
         [ 0.1000, 10.6559,  9.9258],
         [ 0.1000, 10.6559,  9.8170]],
        [[ 0.1000, 10.6981, 11.4417],
         [ 0.1000, 10.6981, 11.6423],
         [ 0.1000, 10.6981, 11.6467],
         ...,
         [ 0.1000, 10.6981, 11.6389],
         [ 0.1000, 10.6981, 11.6367],
         [ 0.1000, 10.6981, 11.6530]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9185],
         [0.1000, 1.0531, 0.9325],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9446],
         [0.1000, 1.0531, 0.9424],
         [0.1000, 1.0531, 0.9517]],
        [[0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 0.8085],
         ...,
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8104],
         [0.1000, 1.0495, 0.8079]],
        [[0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.8031],
         [0.1000, 1.0490, 0.7968],
         ...,
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7991],
         [0.1000, 1.0490, 0.7960]],
        ...,
        [[0.1000, 1.0485, 0.7935],
         [0.1000, 1.0485, 0.7910],
         [0.1000, 1.0485, 0.7835],
         ...,
         [0.1000, 1.0485, 0.7853],
         [0.1000, 1.0485, 0.7863],
         [0.1000, 1.0485, 0.7825]],
        [[0.1000, 1.0499, 0.8235],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8203],
         ...,
         [0.1000, 1.0499, 0.8211],
         [0.1000, 1.0499, 0.8216],
         [0.1000, 1.0499, 0.8198]],
        [[0.1000, 1.0508, 0.8462],
         [0.1000, 1.0508, 0.8495],
         [0.1000, 1.0508, 0.8496],
         ...,
         [0.1000, 1.0508, 0.8495],
         [0.1000, 1.0508, 0.8494],
         [0.1000, 1.0508, 0.8497]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8488],
         [ 0.1000, 10.8051, 16.5198],
         [ 0.1000, 10.8051, 17.8295],
         ...,
         [ 0.1000, 10.8051, 17.4656],
         [ 0.1000, 10.8051, 17.2922],
         [ 0.1000, 10.8051, 18.0404]],
        [[ 0.1000, 10.6368,  9.4838],
         [ 0.1000, 10.6368,  9.5218],
         [ 0.1000, 10.6368,  9.1067],
         ...,
         [ 0.1000, 10.6368,  9.2028],
         [ 0.1000, 10.6368,  9.2530],
         [ 0.1000, 10.6368,  9.0561]],
        [[ 0.1000, 10.6161,  8.8997],
         [ 0.1000, 10.6161,  8.8940],
         [ 0.1000, 10.6161,  8.3799],
         ...,
         [ 0.1000, 10.6161,  8.5011],
         [ 0.1000, 10.6161,  8.5638],
         [ 0.1000, 10.6161,  8.3156]],
        ...,
        [[ 0.1000, 10.5905,  8.2245],
         [ 0.1000, 10.5905,  8.1720],
         [ 0.1000, 10.5905,  7.5580],
         ...,
         [ 0.1000, 10.5905,  7.7040],
         [ 0.1000, 10.5905,  7.7793],
         [ 0.1000, 10.5905,  7.4801]],
        [[ 0.1000, 10.6559, 10.0570],
         [ 0.1000, 10.6559, 10.1406],
         [ 0.1000, 10.6559,  9.8335],
         ...,
         [ 0.1000, 10.6559,  9.9020],
         [ 0.1000, 10.6559,  9.9385],
         [ 0.1000, 10.6559,  9.7983]],
        [[ 0.1000, 10.6981, 11.4475],
         [ 0.1000, 10.6981, 11.6523],
         [ 0.1000, 10.6981, 11.6491],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6582]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9170],
         [0.1000, 1.0531, 0.9279],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9405],
         [0.1000, 1.0531, 0.9527]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8074],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.8066]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.7956],
         ...,
         [0.1000, 1.0490, 0.7975],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7945]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7922],
         [0.1000, 1.0485, 0.7822],
         ...,
         [0.1000, 1.0485, 0.7846],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7809]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8192],
         ...,
         [0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8186]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.8487],
         ...,
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8418],
         [ 0.1000, 10.8051, 16.4779],
         [ 0.1000, 10.8051, 17.8419],
         ...,
         [ 0.1000, 10.8051, 17.4616],
         [ 0.1000, 10.8051, 17.2808],
         [ 0.1000, 10.8051, 18.0627]],
        [[ 0.1000, 10.6368,  9.4878],
         [ 0.1000, 10.6368,  9.5389],
         [ 0.1000, 10.6368,  9.1036],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2564],
         [ 0.1000, 10.6368,  9.0510]],
        [[ 0.1000, 10.6161,  8.9044],
         [ 0.1000, 10.6161,  8.9148],
         [ 0.1000, 10.6161,  8.3761],
         ...,
         [ 0.1000, 10.6161,  8.5025],
         [ 0.1000, 10.6161,  8.5681],
         [ 0.1000, 10.6161,  8.3090]],
        ...,
        [[ 0.1000, 10.5905,  8.2299],
         [ 0.1000, 10.5905,  8.1966],
         [ 0.1000, 10.5905,  7.5533],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7844],
         [ 0.1000, 10.5905,  7.4721]],
        [[ 0.1000, 10.6559, 10.0603],
         [ 0.1000, 10.6559, 10.1539],
         [ 0.1000, 10.6559,  9.8313],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9410],
         [ 0.1000, 10.6559,  9.7947]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6547],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8403],
         [ 0.1000, 10.8051, 16.4692],
         [ 0.1000, 10.8051, 17.8445],
         ...,
         [ 0.1000, 10.8051, 17.4607],
         [ 0.1000, 10.8051, 17.2785],
         [ 0.1000, 10.8051, 18.0673]],
        [[ 0.1000, 10.6368,  9.4886],
         [ 0.1000, 10.6368,  9.5425],
         [ 0.1000, 10.6368,  9.1030],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2571],
         [ 0.1000, 10.6368,  9.0499]],
        [[ 0.1000, 10.6161,  8.9054],
         [ 0.1000, 10.6161,  8.9192],
         [ 0.1000, 10.6161,  8.3752],
         ...,
         [ 0.1000, 10.6161,  8.5028],
         [ 0.1000, 10.6161,  8.5689],
         [ 0.1000, 10.6161,  8.3076]],
        ...,
        [[ 0.1000, 10.5905,  8.2311],
         [ 0.1000, 10.5905,  8.2018],
         [ 0.1000, 10.5905,  7.5524],
         ...,
         [ 0.1000, 10.5905,  7.7061],
         [ 0.1000, 10.5905,  7.7854],
         [ 0.1000, 10.5905,  7.4704]],
        [[ 0.1000, 10.6559, 10.0609],
         [ 0.1000, 10.6559, 10.1566],
         [ 0.1000, 10.6559,  9.8309],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9415],
         [ 0.1000, 10.6559,  9.7940]],
        [[ 0.1000, 10.6981, 11.4490],
         [ 0.1000, 10.6981, 11.6553],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6595]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8062]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7925],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8189],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8183]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8413],
         [ 0.1000, 10.8051, 16.4750],
         [ 0.1000, 10.8051, 17.8428],
         ...,
         [ 0.1000, 10.8051, 17.4613],
         [ 0.1000, 10.8051, 17.2800],
         [ 0.1000, 10.8051, 18.0643]],
        [[ 0.1000, 10.6368,  9.4881],
         [ 0.1000, 10.6368,  9.5401],
         [ 0.1000, 10.6368,  9.1034],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2567],
         [ 0.1000, 10.6368,  9.0506]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9163],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5683],
         [ 0.1000, 10.6161,  8.3085]],
        ...,
        [[ 0.1000, 10.5905,  8.2303],
         [ 0.1000, 10.5905,  8.1984],
         [ 0.1000, 10.5905,  7.5530],
         ...,
         [ 0.1000, 10.5905,  7.7059],
         [ 0.1000, 10.5905,  7.7848],
         [ 0.1000, 10.5905,  7.4715]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1548],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9412],
         [ 0.1000, 10.6559,  9.7944]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6549],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8405],
         [ 0.1000, 10.8051, 16.4704],
         [ 0.1000, 10.8051, 17.8441],
         ...,
         [ 0.1000, 10.8051, 17.4609],
         [ 0.1000, 10.8051, 17.2788],
         [ 0.1000, 10.8051, 18.0667]],
        [[ 0.1000, 10.6368,  9.4885],
         [ 0.1000, 10.6368,  9.5420],
         [ 0.1000, 10.6368,  9.1031],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2570],
         [ 0.1000, 10.6368,  9.0500]],
        [[ 0.1000, 10.6161,  8.9052],
         [ 0.1000, 10.6161,  8.9185],
         [ 0.1000, 10.6161,  8.3754],
         ...,
         [ 0.1000, 10.6161,  8.5027],
         [ 0.1000, 10.6161,  8.5688],
         [ 0.1000, 10.6161,  8.3078]],
        ...,
        [[ 0.1000, 10.5905,  8.2309],
         [ 0.1000, 10.5905,  8.2010],
         [ 0.1000, 10.5905,  7.5525],
         ...,
         [ 0.1000, 10.5905,  7.7060],
         [ 0.1000, 10.5905,  7.7853],
         [ 0.1000, 10.5905,  7.4706]],
        [[ 0.1000, 10.6559, 10.0608],
         [ 0.1000, 10.6559, 10.1562],
         [ 0.1000, 10.6559,  9.8309],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9414],
         [ 0.1000, 10.6559,  9.7941]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6552],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9269],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8410],
         [ 0.1000, 10.8051, 16.4734],
         [ 0.1000, 10.8051, 17.8432],
         ...,
         [ 0.1000, 10.8051, 17.4611],
         [ 0.1000, 10.8051, 17.2796],
         [ 0.1000, 10.8051, 18.0651]],
        [[ 0.1000, 10.6368,  9.4882],
         [ 0.1000, 10.6368,  9.5408],
         [ 0.1000, 10.6368,  9.1033],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2568],
         [ 0.1000, 10.6368,  9.0504]],
        [[ 0.1000, 10.6161,  8.9049],
         [ 0.1000, 10.6161,  8.9170],
         [ 0.1000, 10.6161,  8.3756],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5685],
         [ 0.1000, 10.6161,  8.3083]],
        ...,
        [[ 0.1000, 10.5905,  8.2305],
         [ 0.1000, 10.5905,  8.1993],
         [ 0.1000, 10.5905,  7.5528],
         ...,
         [ 0.1000, 10.5905,  7.7059],
         [ 0.1000, 10.5905,  7.7849],
         [ 0.1000, 10.5905,  7.4712]],
        [[ 0.1000, 10.6559, 10.0606],
         [ 0.1000, 10.6559, 10.1553],
         [ 0.1000, 10.6559,  9.8311],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9412],
         [ 0.1000, 10.6559,  9.7943]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6550],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8406],
         [ 0.1000, 10.8051, 16.4711],
         [ 0.1000, 10.8051, 17.8439],
         ...,
         [ 0.1000, 10.8051, 17.4609],
         [ 0.1000, 10.8051, 17.2790],
         [ 0.1000, 10.8051, 18.0664]],
        [[ 0.1000, 10.6368,  9.4884],
         [ 0.1000, 10.6368,  9.5417],
         [ 0.1000, 10.6368,  9.1031],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2570],
         [ 0.1000, 10.6368,  9.0501]],
        [[ 0.1000, 10.6161,  8.9052],
         [ 0.1000, 10.6161,  8.9182],
         [ 0.1000, 10.6161,  8.3754],
         ...,
         [ 0.1000, 10.6161,  8.5027],
         [ 0.1000, 10.6161,  8.5687],
         [ 0.1000, 10.6161,  8.3079]],
        ...,
        [[ 0.1000, 10.5905,  8.2308],
         [ 0.1000, 10.5905,  8.2007],
         [ 0.1000, 10.5905,  7.5526],
         ...,
         [ 0.1000, 10.5905,  7.7060],
         [ 0.1000, 10.5905,  7.7852],
         [ 0.1000, 10.5905,  7.4707]],
        [[ 0.1000, 10.6559, 10.0608],
         [ 0.1000, 10.6559, 10.1560],
         [ 0.1000, 10.6559,  9.8310],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9414],
         [ 0.1000, 10.6559,  9.7941]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6551],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8409],
         [ 0.1000, 10.8051, 16.4726],
         [ 0.1000, 10.8051, 17.8435],
         ...,
         [ 0.1000, 10.8051, 17.4611],
         [ 0.1000, 10.8051, 17.2794],
         [ 0.1000, 10.8051, 18.0655]],
        [[ 0.1000, 10.6368,  9.4883],
         [ 0.1000, 10.6368,  9.5411],
         [ 0.1000, 10.6368,  9.1032],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2569],
         [ 0.1000, 10.6368,  9.0503]],
        [[ 0.1000, 10.6161,  8.9050],
         [ 0.1000, 10.6161,  8.9174],
         [ 0.1000, 10.6161,  8.3756],
         ...,
         [ 0.1000, 10.6161,  8.5027],
         [ 0.1000, 10.6161,  8.5686],
         [ 0.1000, 10.6161,  8.3081]],
        ...,
        [[ 0.1000, 10.5905,  8.2306],
         [ 0.1000, 10.5905,  8.1998],
         [ 0.1000, 10.5905,  7.5528],
         ...,
         [ 0.1000, 10.5905,  7.7060],
         [ 0.1000, 10.5905,  7.7850],
         [ 0.1000, 10.5905,  7.4710]],
        [[ 0.1000, 10.6559, 10.0607],
         [ 0.1000, 10.6559, 10.1555],
         [ 0.1000, 10.6559,  9.8310],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9413],
         [ 0.1000, 10.6559,  9.7942]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6550],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8485],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8407],
         [ 0.1000, 10.8051, 16.4714],
         [ 0.1000, 10.8051, 17.8438],
         ...,
         [ 0.1000, 10.8051, 17.4609],
         [ 0.1000, 10.8051, 17.2791],
         [ 0.1000, 10.8051, 18.0662]],
        [[ 0.1000, 10.6368,  9.4884],
         [ 0.1000, 10.6368,  9.5416],
         [ 0.1000, 10.6368,  9.1031],
         ...,
         [ 0.1000, 10.6368,  9.2041],
         [ 0.1000, 10.6368,  9.2570],
         [ 0.1000, 10.6368,  9.0502]],
        [[ 0.1000, 10.6161,  8.9051],
         [ 0.1000, 10.6161,  8.9181],
         [ 0.1000, 10.6161,  8.3754],
         ...,
         [ 0.1000, 10.6161,  8.5027],
         [ 0.1000, 10.6161,  8.5687],
         [ 0.1000, 10.6161,  8.3080]],
        ...,
        [[ 0.1000, 10.5905,  8.2308],
         [ 0.1000, 10.5905,  8.2005],
         [ 0.1000, 10.5905,  7.5526],
         ...,
         [ 0.1000, 10.5905,  7.7060],
         [ 0.1000, 10.5905,  7.7852],
         [ 0.1000, 10.5905,  7.4708]],
        [[ 0.1000, 10.6559, 10.0608],
         [ 0.1000, 10.6559, 10.1559],
         [ 0.1000, 10.6559,  9.8310],
         ...,
         [ 0.1000, 10.6559,  9.9029],
         [ 0.1000, 10.6559,  9.9414],
         [ 0.1000, 10.6559,  9.7941]],
        [[ 0.1000, 10.6981, 11.4489],
         [ 0.1000, 10.6981, 11.6551],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6594]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[ 0.1000, 10.6161,  8.9091],
         [ 0.1000, 10.6161,  8.9398],
         [ 0.1000, 10.6161,  8.3713],
         ...,
         [ 0.1000, 10.6161,  8.5041],
         [ 0.1000, 10.6161,  8.5729],
         [ 0.1000, 10.6161,  8.3012]],
        ...,
        [[ 0.1000, 10.5905,  8.2354],
         [ 0.1000, 10.5905,  8.2262],
         [ 0.1000, 10.5905,  7.5476],
         ...,
         [ 0.1000, 10.5905,  7.7076],
         [ 0.1000, 10.5905,  7.7902],
         [ 0.1000, 10.5905,  7.4625]],
        [[ 0.1000, 10.6559, 10.0635],
         [ 0.1000, 10.6559, 10.1698],
         [ 0.1000, 10.6559,  9.8287],
         ...,
         [ 0.1000, 10.6559,  9.9037],
         [ 0.1000, 10.6559,  9.9438],
         [ 0.1000, 10.6559,  9.7905]],
        [[ 0.1000, 10.6981, 11.4499],
         [ 0.1000, 10.6981, 11.6579],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6606]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9261],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7950],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7816],
         ...,
         [0.1000, 1.0485, 0.7842],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8187],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8351],
         [ 0.1000, 10.8051, 16.4309],
         [ 0.1000, 10.8051, 17.8563],
         ...,
         [ 0.1000, 10.8051, 17.4573],
         [ 0.1000, 10.8051, 17.2684],
         [ 0.1000, 10.8051, 18.0881]],
        [[ 0.1000, 10.6368,  9.4916],
         [ 0.1000, 10.6368,  9.5586],
         [ 0.1000, 10.6368,  9.1001],
         ...,
         [ 0.1000, 10.6368,  9.2051],
         [ 0.1000, 10.6368,  9.2602],
         [ 0.1000, 10.6368,  9.0452]],
        [[ 0.1000, 10.6161,  8.9089],
         [ 0.1000, 10.6161,  8.9386],
         [ 0.1000, 10.6161,  8.3715],
         ...,
         [ 0.1000, 10.6161,  8.5040],
         [ 0.1000, 10.6161,  8.5727],
         [ 0.1000, 10.6161,  8.3015]],
        ...,
        [[ 0.1000, 10.5905,  8.2352],
         [ 0.1000, 10.5905,  8.2247],
         [ 0.1000, 10.5905,  7.5479],
         ...,
         [ 0.1000, 10.5905,  7.7076],
         [ 0.1000, 10.5905,  7.7900],
         [ 0.1000, 10.5905,  7.4630]],
        [[ 0.1000, 10.6559, 10.0634],
         [ 0.1000, 10.6559, 10.1690],
         [ 0.1000, 10.6559,  9.8288],
         ...,
         [ 0.1000, 10.6559,  9.9036],
         [ 0.1000, 10.6559,  9.9437],
         [ 0.1000, 10.6559,  9.7907]],
        [[ 0.1000, 10.6981, 11.4499],
         [ 0.1000, 10.6981, 11.6577],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6605]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9261],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9398],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
        [[0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7951],
         ...,
         [0.1000, 1.0490, 0.7972],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7928],
         [0.1000, 1.0485, 0.7927],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8243],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8200],
         [0.1000, 1.0499, 0.8206],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8481],
         [0.1000, 1.0508, 0.8485]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8349],
         [ 0.1000, 10.8051, 16.4290],
         [ 0.1000, 10.8051, 17.8569],
         ...,
         [ 0.1000, 10.8051, 17.4571],
         [ 0.1000, 10.8051, 17.2680],
         [ 0.1000, 10.8051, 18.0891]],
        [[ 0.1000, 10.6368,  9.4917],
         [ 0.1000, 10.6368,  9.5594],
         [ 0.1000, 10.6368,  9.0999],
         ...,
         [ 0.1000, 10.6368,  9.2052],
         [ 0.1000, 10.6368,  9.2603],
         [ 0.1000, 10.6368,  9.0449]],
        [[ 0.1000, 10.6161,  8.9091],
         [ 0.1000, 10.6161,  8.9396],
         [ 0.1000, 10.6161,  8.3713],
         ...,
         [ 0.1000, 10.6161,  8.5040],
         [ 0.1000, 10.6161,  8.5729],
         [ 0.1000, 10.6161,  8.3012]],
        ...,
        [[ 0.1000, 10.5905,  8.2353],
         [ 0.1000, 10.5905,  8.2258],
         [ 0.1000, 10.5905,  7.5476],
         ...,
         [ 0.1000, 10.5905,  7.7076],
         [ 0.1000, 10.5905,  7.7902],
         [ 0.1000, 10.5905,  7.4626]],
        [[ 0.1000, 10.6559, 10.0635],
         [ 0.1000, 10.6559, 10.1697],
         [ 0.1000, 10.6559,  9.8287],
         ...,
         [ 0.1000, 10.6559,  9.9037],
         [ 0.1000, 10.6559,  9.9438],
         [ 0.1000, 10.6559,  9.7905]],
        [[ 0.1000, 10.6981, 11.4499],
         [ 0.1000, 10.6981, 11.6578],
         [ 0.1000, 10.6981, 11.6501],
         ...,
         [ 0.1000, 10.6981, 11.6383],
         [ 0.1000, 10.6981, 11.6359],
         [ 0.1000, 10.6981, 11.6605]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9164],
         [0.1000, 1.0531, 0.9261],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9397],
         [0.1000, 1.0531, 0.9531]],
        [[0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8144],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.8060]],
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:545: RuntimeWarning: Optimization failed on the second try, after generating a new set of initial conditions.
         [0.1000, 1.0485, 0.7924],,
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8413],
         [ 0.1000, 10.8051, 16.4748],
         [ 0.1000, 10.8051, 17.8428],
         ...,
         [ 0.1000, 10.8051, 17.4613],
         [ 0.1000, 10.8051, 17.2800],
         [ 0.1000, 10.8051, 18.0644]],
        [[ 0.1000, 10.6368,  9.4881],
         [ 0.1000, 10.6368,  9.5402],
         [ 0.1000, 10.6368,  9.1034],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2567],
         [ 0.1000, 10.6368,  9.0506]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9164],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5684],
         [ 0.1000, 10.6161,  8.3085]],
        ...,
        [[ 0.1000, 10.5905,  8.2303],
         [ 0.1000, 10.5905,  8.1985],
         [ 0.1000, 10.5905,  7.5530],
         ...,
         [ 0.1000, 10.5905,  7.7059],
         [ 0.1000, 10.5905,  7.7848],
         [ 0.1000, 10.5905,  7.4715]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1549],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9412],
         [ 0.1000, 10.6559,  9.7944]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6549],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8418],
         [ 0.1000, 10.8051, 16.4779],
         [ 0.1000, 10.8051, 17.8419],
         ...,
         [ 0.1000, 10.8051, 17.4616],
         [ 0.1000, 10.8051, 17.2808],
         [ 0.1000, 10.8051, 18.0627]],
        [[ 0.1000, 10.6368,  9.4878],
         [ 0.1000, 10.6368,  9.5389],
         [ 0.1000, 10.6368,  9.1036],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2564],
         [ 0.1000, 10.6368,  9.0510]],
        [[ 0.1000, 10.6161,  8.9044],
         [ 0.1000, 10.6161,  8.9148],
         [ 0.1000, 10.6161,  8.3761],
         ...,
         [ 0.1000, 10.6161,  8.5025],
         [ 0.1000, 10.6161,  8.5680],
         [ 0.1000, 10.6161,  8.3090]],
        ...,
        [[ 0.1000, 10.5905,  8.2299],
         [ 0.1000, 10.5905,  8.1966],
         [ 0.1000, 10.5905,  7.5533],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7844],
         [ 0.1000, 10.5905,  7.4721]],
        [[ 0.1000, 10.6559, 10.0602],
         [ 0.1000, 10.6559, 10.1539],
         [ 0.1000, 10.6559,  9.8313],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9410],
         [ 0.1000, 10.6559,  9.7947]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6547],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8414],
         [ 0.1000, 10.8051, 16.4755],
         [ 0.1000, 10.8051, 17.8426],
         ...,
         [ 0.1000, 10.8051, 17.4613],
         [ 0.1000, 10.8051, 17.2802],
         [ 0.1000, 10.8051, 18.0640]],
        [[ 0.1000, 10.6368,  9.4880],
         [ 0.1000, 10.6368,  9.5399],
         [ 0.1000, 10.6368,  9.1034],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2566],
         [ 0.1000, 10.6368,  9.0507]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9160],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5683],
         [ 0.1000, 10.6161,  8.3086]],
        ...,
        [[ 0.1000, 10.5905,  8.2302],
         [ 0.1000, 10.5905,  8.1981],
         [ 0.1000, 10.5905,  7.5531],
         ...,
         [ 0.1000, 10.5905,  7.7058],
         [ 0.1000, 10.5905,  7.7847],
         [ 0.1000, 10.5905,  7.4716]],
        [[ 0.1000, 10.6559, 10.0604],
         [ 0.1000, 10.6559, 10.1546],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9411],
         [ 0.1000, 10.6559,  9.7945]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6549],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8413],
         [ 0.1000, 10.8051, 16.4749],
         [ 0.1000, 10.8051, 17.8428],
         ...,
         [ 0.1000, 10.8051, 17.4613],
         [ 0.1000, 10.8051, 17.2800],
         [ 0.1000, 10.8051, 18.0643]],
        [[ 0.1000, 10.6368,  9.4880],
         [ 0.1000, 10.6368,  9.5401],
         [ 0.1000, 10.6368,  9.1034],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2567],
         [ 0.1000, 10.6368,  9.0506]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9163],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5684],
         [ 0.1000, 10.6161,  8.3085]],
        ...,
        [[ 0.1000, 10.5905,  8.2303],
         [ 0.1000, 10.5905,  8.1984],
         [ 0.1000, 10.5905,  7.5530],
         ...,
         [ 0.1000, 10.5905,  7.7059],
         [ 0.1000, 10.5905,  7.7848],
         [ 0.1000, 10.5905,  7.4715]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1548],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9412],
         [ 0.1000, 10.6559,  9.7944]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6549],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8414],
         [ 0.1000, 10.8051, 16.4753],
         [ 0.1000, 10.8051, 17.8427],
         ...,
         [ 0.1000, 10.8051, 17.4613],
         [ 0.1000, 10.8051, 17.2801],
         [ 0.1000, 10.8051, 18.0641]],
        [[ 0.1000, 10.6368,  9.4880],
         [ 0.1000, 10.6368,  9.5400],
         [ 0.1000, 10.6368,  9.1034],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2566],
         [ 0.1000, 10.6368,  9.0506]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9161],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5683],
         [ 0.1000, 10.6161,  8.3086]],
        ...,
        [[ 0.1000, 10.5905,  8.2303],
         [ 0.1000, 10.5905,  8.1982],
         [ 0.1000, 10.5905,  7.5530],
         ...,
         [ 0.1000, 10.5905,  7.7058],
         [ 0.1000, 10.5905,  7.7847],
         [ 0.1000, 10.5905,  7.4715]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1547],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9411],
         [ 0.1000, 10.6559,  9.7945]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6549],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8413],
         [ 0.1000, 10.8051, 16.4749],
         [ 0.1000, 10.8051, 17.8428],
         ...,
         [ 0.1000, 10.8051, 17.4613],
         [ 0.1000, 10.8051, 17.2800],
         [ 0.1000, 10.8051, 18.0643]],
        [[ 0.1000, 10.6368,  9.4880],
         [ 0.1000, 10.6368,  9.5401],
         [ 0.1000, 10.6368,  9.1034],
         ...,
         [ 0.1000, 10.6368,  9.2040],
         [ 0.1000, 10.6368,  9.2567],
         [ 0.1000, 10.6368,  9.0506]],
        [[ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.9163],
         [ 0.1000, 10.6161,  8.3758],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161,  8.5684],
         [ 0.1000, 10.6161,  8.3085]],
        ...,
        [[ 0.1000, 10.5905,  8.2303],
         [ 0.1000, 10.5905,  8.1984],
         [ 0.1000, 10.5905,  7.5530],
         ...,
         [ 0.1000, 10.5905,  7.7059],
         [ 0.1000, 10.5905,  7.7848],
         [ 0.1000, 10.5905,  7.4715]],
        [[ 0.1000, 10.6559, 10.0605],
         [ 0.1000, 10.6559, 10.1548],
         [ 0.1000, 10.6559,  9.8312],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9412],
         [ 0.1000, 10.6559,  9.7944]],
        [[ 0.1000, 10.6981, 11.4488],
         [ 0.1000, 10.6981, 11.6549],
         [ 0.1000, 10.6981, 11.6496],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9401],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8071],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0641],
         [ 0.1000, 10.8051, 17.7185],
         [ 0.1000, 10.8051, 17.5243],
         ...,
         [ 0.1000, 10.8051, 17.5695],
         [ 0.1000, 10.8051, 17.5884],
         [ 0.1000, 10.8051, 17.4961]],
        [[ 0.1000, 10.6368,  9.3765],
         [ 0.1000, 10.6368,  9.1347],
         [ 0.1000, 10.6368,  9.1865],
         ...,
         [ 0.1000, 10.6368,  9.1741],
         [ 0.1000, 10.6368,  9.1690],
         [ 0.1000, 10.6368,  9.1942]],
        [[ 0.1000, 10.6161,  8.7720],
         [ 0.1000, 10.6161,  8.4155],
         [ 0.1000, 10.6161,  8.4806],
         ...,
         [ 0.1000, 10.6161,  8.4651],
         [ 0.1000, 10.6161,  8.4587],
         [ 0.1000, 10.6161,  8.4904]],
        ...,
        [[ 0.1000, 10.5905,  8.0756],
         [ 0.1000, 10.5905,  7.6010],
         [ 0.1000, 10.5905,  7.6794],
         ...,
         [ 0.1000, 10.5905,  7.6608],
         [ 0.1000, 10.5905,  7.6531],
         [ 0.1000, 10.5905,  7.6912]],
        [[ 0.1000, 10.6559,  9.9716],
         [ 0.1000, 10.6559,  9.8533],
         [ 0.1000, 10.6559,  9.8902],
         ...,
         [ 0.1000, 10.6559,  9.8813],
         [ 0.1000, 10.6559,  9.8777],
         [ 0.1000, 10.6559,  9.8958]],
        [[ 0.1000, 10.6981, 11.4217],
         [ 0.1000, 10.6981, 11.6451],
         [ 0.1000, 10.6981, 11.6397],
         ...,
         [ 0.1000, 10.6981, 11.6408],
         [ 0.1000, 10.6981, 11.6413],
         [ 0.1000, 10.6981, 11.6391]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9231],
         [0.1000, 1.0531, 0.9500],
         [0.1000, 1.0531, 0.9469],
         ...,
         [0.1000, 1.0531, 0.9476],
         [0.1000, 1.0531, 0.9479],
         [0.1000, 1.0531, 0.9464]],
        [[0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8104],
         [0.1000, 1.0495, 0.8113],
         ...,
         [0.1000, 1.0495, 0.8111],
         [0.1000, 1.0495, 0.8110],
         [0.1000, 1.0495, 0.8114]],
        [[0.1000, 1.0490, 0.8045],
         [0.1000, 1.0490, 0.7987],
         [0.1000, 1.0490, 0.7998],
         ...,
         [0.1000, 1.0490, 0.7995],
         [0.1000, 1.0490, 0.7994],
         [0.1000, 1.0490, 0.7999]],
        ...,
        [[0.1000, 1.0485, 0.7932],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7867],
         ...,
         [0.1000, 1.0485, 0.7864],
         [0.1000, 1.0485, 0.7863],
         [0.1000, 1.0485, 0.7869]],
        [[0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8221],
         [0.1000, 1.0499, 0.8227],
         ...,
         [0.1000, 1.0499, 0.8226],
         [0.1000, 1.0499, 0.8225],
         [0.1000, 1.0499, 0.8228]],
        [[0.1000, 1.0508, 0.8476],
         [0.1000, 1.0508, 0.8512],
         [0.1000, 1.0508, 0.8512],
         ...,
         [0.1000, 1.0508, 0.8512],
         [0.1000, 1.0508, 0.8512],
         [0.1000, 1.0508, 0.8511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8981],
         [ 0.1000, 10.8051, 16.7877],
         [ 0.1000, 10.8051, 17.7540],
         ...,
         [ 0.1000, 10.8051, 17.4908],
         [ 0.1000, 10.8051, 17.3630],
         [ 0.1000, 10.8051, 17.9039]],
        [[ 0.1000, 10.6368,  9.4570],
         [ 0.1000, 10.6368,  9.4191],
         [ 0.1000, 10.6368,  9.1257],
         ...,
         [ 0.1000, 10.6368,  9.1957],
         [ 0.1000, 10.6368,  9.2321],
         [ 0.1000, 10.6368,  9.0884]],
        [[ 0.1000, 10.6161,  8.8680],
         [ 0.1000, 10.6161,  8.7688],
         [ 0.1000, 10.6161,  8.4040],
         ...,
         [ 0.1000, 10.6161,  8.4922],
         [ 0.1000, 10.6161,  8.5378],
         [ 0.1000, 10.6161,  8.3568]],
        ...,
        [[ 0.1000, 10.5905,  8.1878],
         [ 0.1000, 10.5905,  8.0237],
         [ 0.1000, 10.5905,  7.5871],
         ...,
         [ 0.1000, 10.5905,  7.6934],
         [ 0.1000, 10.5905,  7.7481],
         [ 0.1000, 10.5905,  7.5300]],
        [[ 0.1000, 10.6559, 10.0354],
         [ 0.1000, 10.6559, 10.0622],
         [ 0.1000, 10.6559,  9.8468],
         ...,
         [ 0.1000, 10.6559,  9.8969],
         [ 0.1000, 10.6559,  9.9232],
         [ 0.1000, 10.6559,  9.8207]],
        [[ 0.1000, 10.6981, 11.4400],
         [ 0.1000, 10.6981, 11.6409],
         [ 0.1000, 10.6981, 11.6463],
         ...,
         [ 0.1000, 10.6981, 11.6390],
         [ 0.1000, 10.6981, 11.6368],
         [ 0.1000, 10.6981, 11.6520]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9189],
         [0.1000, 1.0531, 0.9334],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9448],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9515]],
        [[0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8088],
         ...,
         [0.1000, 1.0495, 0.8099],
         [0.1000, 1.0495, 0.8105],
         [0.1000, 1.0495, 0.8081]],
        [[0.1000, 1.0490, 0.8046],
         [0.1000, 1.0490, 0.8029],
         [0.1000, 1.0490, 0.7970],
         ...,
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7992],
         [0.1000, 1.0490, 0.7962]],
        ...,
        [[0.1000, 1.0485, 0.7935],
         [0.1000, 1.0485, 0.7908],
         [0.1000, 1.0485, 0.7837],
         ...,
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7863],
         [0.1000, 1.0485, 0.7828]],
        [[0.1000, 1.0499, 0.8235],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8205],
         ...,
         [0.1000, 1.0499, 0.8213],
         [0.1000, 1.0499, 0.8217],
         [0.1000, 1.0499, 0.8201]],
        [[0.1000, 1.0508, 0.8464],
         [0.1000, 1.0508, 0.8497],
         [0.1000, 1.0508, 0.8497],
         ...,
         [0.1000, 1.0508, 0.8496],
         [0.1000, 1.0508, 0.8496],
         [0.1000, 1.0508, 0.8498]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8521],
         [ 0.1000, 10.8051, 16.5342],
         [ 0.1000, 10.8051, 17.8254],
         ...,
         [ 0.1000, 10.8051, 17.4670],
         [ 0.1000, 10.8051, 17.2961],
         [ 0.1000, 10.8051, 18.0328]],
        [[ 0.1000, 10.6368,  9.4820],
         [ 0.1000, 10.6368,  9.5159],
         [ 0.1000, 10.6368,  9.1077],
         ...,
         [ 0.1000, 10.6368,  9.2024],
         [ 0.1000, 10.6368,  9.2519],
         [ 0.1000, 10.6368,  9.0579]],
        [[ 0.1000, 10.6161,  8.8975],
         [ 0.1000, 10.6161,  8.8869],
         [ 0.1000, 10.6161,  8.3812],
         ...,
         [ 0.1000, 10.6161,  8.5006],
         [ 0.1000, 10.6161,  8.5624],
         [ 0.1000, 10.6161,  8.3178]],
        ...,
        [[ 0.1000, 10.5905,  8.2220],
         [ 0.1000, 10.5905,  8.1637],
         [ 0.1000, 10.5905,  7.5596],
         ...,
         [ 0.1000, 10.5905,  7.7034],
         [ 0.1000, 10.5905,  7.7776],
         [ 0.1000, 10.5905,  7.4828]],
        [[ 0.1000, 10.6559, 10.0556],
         [ 0.1000, 10.6559, 10.1361],
         [ 0.1000, 10.6559,  9.8342],
         ...,
         [ 0.1000, 10.6559,  9.9017],
         [ 0.1000, 10.6559,  9.9376],
         [ 0.1000, 10.6559,  9.7995]],
        [[ 0.1000, 10.6981, 11.4470],
         [ 0.1000, 10.6981, 11.6515],
         [ 0.1000, 10.6981, 11.6489],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6578]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9171],
         [0.1000, 1.0531, 0.9282],
         [0.1000, 1.0531, 0.9492],
         ...,
         [0.1000, 1.0531, 0.9434],
         [0.1000, 1.0531, 0.9406],
         [0.1000, 1.0531, 0.9526]],
        [[0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8075],
         ...,
         [0.1000, 1.0495, 0.8090],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.8066]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.7956],
         ...,
         [0.1000, 1.0490, 0.7976],
         [0.1000, 1.0490, 0.7986],
         [0.1000, 1.0490, 0.7946]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7921],
         [0.1000, 1.0485, 0.7823],
         ...,
         [0.1000, 1.0485, 0.7846],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7810]],
        [[0.1000, 1.0499, 0.8229],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8193],
         ...,
         [0.1000, 1.0499, 0.8204],
         [0.1000, 1.0499, 0.8209],
         [0.1000, 1.0499, 0.8187]],
        [[0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.8488],
         ...,
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8489]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8436],
         [ 0.1000, 10.8051, 16.4872],
         [ 0.1000, 10.8051, 17.8391],
         ...,
         [ 0.1000, 10.8051, 17.4625],
         [ 0.1000, 10.8051, 17.2834],
         [ 0.1000, 10.8051, 18.0577]],
        [[ 0.1000, 10.6368,  9.4868],
         [ 0.1000, 10.6368,  9.5351],
         [ 0.1000, 10.6368,  9.1043],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2557],
         [ 0.1000, 10.6368,  9.0521]],
        [[ 0.1000, 10.6161,  8.9032],
         [ 0.1000, 10.6161,  8.9101],
         [ 0.1000, 10.6161,  8.3769],
         ...,
         [ 0.1000, 10.6161,  8.5022],
         [ 0.1000, 10.6161,  8.5671],
         [ 0.1000, 10.6161,  8.3105]],
        ...,
        [[ 0.1000, 10.5905,  8.2286],
         [ 0.1000, 10.5905,  8.1911],
         [ 0.1000, 10.5905,  7.5544],
         ...,
         [ 0.1000, 10.5905,  7.7054],
         [ 0.1000, 10.5905,  7.7833],
         [ 0.1000, 10.5905,  7.4738]],
        [[ 0.1000, 10.6559, 10.0595],
         [ 0.1000, 10.6559, 10.1509],
         [ 0.1000, 10.6559,  9.8318],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9404],
         [ 0.1000, 10.6559,  9.7955]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6542],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8418],
         [ 0.1000, 10.8051, 16.4775],
         [ 0.1000, 10.8051, 17.8420],
         ...,
         [ 0.1000, 10.8051, 17.4615],
         [ 0.1000, 10.8051, 17.2807],
         [ 0.1000, 10.8051, 18.0629]],
        [[ 0.1000, 10.6368,  9.4878],
         [ 0.1000, 10.6368,  9.5391],
         [ 0.1000, 10.6368,  9.1036],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2565],
         [ 0.1000, 10.6368,  9.0509]],
        [[ 0.1000, 10.6161,  8.9044],
         [ 0.1000, 10.6161,  8.9150],
         [ 0.1000, 10.6161,  8.3760],
         ...,
         [ 0.1000, 10.6161,  8.5025],
         [ 0.1000, 10.6161,  8.5681],
         [ 0.1000, 10.6161,  8.3089]],
        ...,
        [[ 0.1000, 10.5905,  8.2299],
         [ 0.1000, 10.5905,  8.1968],
         [ 0.1000, 10.5905,  7.5533],
         ...,
         [ 0.1000, 10.5905,  7.7058],
         [ 0.1000, 10.5905,  7.7844],
         [ 0.1000, 10.5905,  7.4720]],
        [[ 0.1000, 10.6559, 10.0603],
         [ 0.1000, 10.6559, 10.1540],
         [ 0.1000, 10.6559,  9.8313],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9410],
         [ 0.1000, 10.6559,  9.7947]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6547],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6593]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9167],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8430],
         [ 0.1000, 10.8051, 16.4839],
         [ 0.1000, 10.8051, 17.8401],
         ...,
         [ 0.1000, 10.8051, 17.4622],
         [ 0.1000, 10.8051, 17.2825],
         [ 0.1000, 10.8051, 18.0595]],
        [[ 0.1000, 10.6368,  9.4871],
         [ 0.1000, 10.6368,  9.5364],
         [ 0.1000, 10.6368,  9.1041],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2559],
         [ 0.1000, 10.6368,  9.0517]],
        [[ 0.1000, 10.6161,  8.9036],
         [ 0.1000, 10.6161,  8.9118],
         [ 0.1000, 10.6161,  8.3766],
         ...,
         [ 0.1000, 10.6161,  8.5023],
         [ 0.1000, 10.6161,  8.5674],
         [ 0.1000, 10.6161,  8.3099]],
        ...,
        [[ 0.1000, 10.5905,  8.2290],
         [ 0.1000, 10.5905,  8.1931],
         [ 0.1000, 10.5905,  7.5540],
         ...,
         [ 0.1000, 10.5905,  7.7055],
         [ 0.1000, 10.5905,  7.7837],
         [ 0.1000, 10.5905,  7.4732]],
        [[ 0.1000, 10.6559, 10.0597],
         [ 0.1000, 10.6559, 10.1519],
         [ 0.1000, 10.6559,  9.8316],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9406],
         [ 0.1000, 10.6559,  9.7952]],
        [[ 0.1000, 10.6981, 11.4485],
         [ 0.1000, 10.6981, 11.6544],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8420],
         [ 0.1000, 10.8051, 16.4789],
         [ 0.1000, 10.8051, 17.8416],
         ...,
         [ 0.1000, 10.8051, 17.4617],
         [ 0.1000, 10.8051, 17.2811],
         [ 0.1000, 10.8051, 18.0622]],
        [[ 0.1000, 10.6368,  9.4876],
         [ 0.1000, 10.6368,  9.5385],
         [ 0.1000, 10.6368,  9.1037],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2563],
         [ 0.1000, 10.6368,  9.0511]],
        [[ 0.1000, 10.6161,  8.9042],
         [ 0.1000, 10.6161,  8.9143],
         [ 0.1000, 10.6161,  8.3761],
         ...,
         [ 0.1000, 10.6161,  8.5024],
         [ 0.1000, 10.6161,  8.5679],
         [ 0.1000, 10.6161,  8.3091]],
        ...,
        [[ 0.1000, 10.5905,  8.2297],
         [ 0.1000, 10.5905,  8.1960],
         [ 0.1000, 10.5905,  7.5535],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7843],
         [ 0.1000, 10.5905,  7.4722]],
        [[ 0.1000, 10.6559, 10.0601],
         [ 0.1000, 10.6559, 10.1535],
         [ 0.1000, 10.6559,  9.8314],
         ...,
         [ 0.1000, 10.6559,  9.9028],
         [ 0.1000, 10.6559,  9.9409],
         [ 0.1000, 10.6559,  9.7948]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6547],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8426],
         [ 0.1000, 10.8051, 16.4822],
         [ 0.1000, 10.8051, 17.8406],
         ...,
         [ 0.1000, 10.8051, 17.4620],
         [ 0.1000, 10.8051, 17.2820],
         [ 0.1000, 10.8051, 18.0604]],
        [[ 0.1000, 10.6368,  9.4873],
         [ 0.1000, 10.6368,  9.5371],
         [ 0.1000, 10.6368,  9.1039],
         ...,
         [ 0.1000, 10.6368,  9.2038],
         [ 0.1000, 10.6368,  9.2561],
         [ 0.1000, 10.6368,  9.0515]],
        [[ 0.1000, 10.6161,  8.9038],
         [ 0.1000, 10.6161,  8.9126],
         [ 0.1000, 10.6161,  8.3765],
         ...,
         [ 0.1000, 10.6161,  8.5023],
         [ 0.1000, 10.6161,  8.5676],
         [ 0.1000, 10.6161,  8.3097]],
        ...,
        [[ 0.1000, 10.5905,  8.2293],
         [ 0.1000, 10.5905,  8.1941],
         [ 0.1000, 10.5905,  7.5538],
         ...,
         [ 0.1000, 10.5905,  7.7056],
         [ 0.1000, 10.5905,  7.7839],
         [ 0.1000, 10.5905,  7.4729]],
        [[ 0.1000, 10.6559, 10.0599],
         [ 0.1000, 10.6559, 10.1525],
         [ 0.1000, 10.6559,  9.8315],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9407],
         [ 0.1000, 10.6559,  9.7951]],
        [[ 0.1000, 10.6981, 11.4486],
         [ 0.1000, 10.6981, 11.6545],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8422],
         [ 0.1000, 10.8051, 16.4796],
         [ 0.1000, 10.8051, 17.8414],
         ...,
         [ 0.1000, 10.8051, 17.4617],
         [ 0.1000, 10.8051, 17.2813],
         [ 0.1000, 10.8051, 18.0618]],
        [[ 0.1000, 10.6368,  9.4876],
         [ 0.1000, 10.6368,  9.5382],
         [ 0.1000, 10.6368,  9.1037],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2563],
         [ 0.1000, 10.6368,  9.0512]],
        [[ 0.1000, 10.6161,  8.9041],
         [ 0.1000, 10.6161,  8.9140],
         [ 0.1000, 10.6161,  8.3762],
         ...,
         [ 0.1000, 10.6161,  8.5024],
         [ 0.1000, 10.6161,  8.5679],
         [ 0.1000, 10.6161,  8.3092]],
        ...,
        [[ 0.1000, 10.5905,  8.2296],
         [ 0.1000, 10.5905,  8.1956],
         [ 0.1000, 10.5905,  7.5535],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7842],
         [ 0.1000, 10.5905,  7.4724]],
        [[ 0.1000, 10.6559, 10.0601],
         [ 0.1000, 10.6559, 10.1533],
         [ 0.1000, 10.6559,  9.8314],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9409],
         [ 0.1000, 10.6559,  9.7948]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6546],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8425],
         [ 0.1000, 10.8051, 16.4813],
         [ 0.1000, 10.8051, 17.8409],
         ...,
         [ 0.1000, 10.8051, 17.4619],
         [ 0.1000, 10.8051, 17.2818],
         [ 0.1000, 10.8051, 18.0609]],
        [[ 0.1000, 10.6368,  9.4874],
         [ 0.1000, 10.6368,  9.5375],
         [ 0.1000, 10.6368,  9.1039],
         ...,
         [ 0.1000, 10.6368,  9.2038],
         [ 0.1000, 10.6368,  9.2561],
         [ 0.1000, 10.6368,  9.0514]],
        [[ 0.1000, 10.6161,  8.9039],
         [ 0.1000, 10.6161,  8.9131],
         [ 0.1000, 10.6161,  8.3764],
         ...,
         [ 0.1000, 10.6161,  8.5024],
         [ 0.1000, 10.6161,  8.5677],
         [ 0.1000, 10.6161,  8.3095]],
        ...,
        [[ 0.1000, 10.5905,  8.2294],
         [ 0.1000, 10.5905,  8.1946],
         [ 0.1000, 10.5905,  7.5537],
         ...,
         [ 0.1000, 10.5905,  7.7056],
         [ 0.1000, 10.5905,  7.7840],
         [ 0.1000, 10.5905,  7.4727]],
        [[ 0.1000, 10.6559, 10.0599],
         [ 0.1000, 10.6559, 10.1528],
         [ 0.1000, 10.6559,  9.8315],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9408],
         [ 0.1000, 10.6559,  9.7950]],
        [[ 0.1000, 10.6981, 11.4486],
         [ 0.1000, 10.6981, 11.6545],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8422],
         [ 0.1000, 10.8051, 16.4800],
         [ 0.1000, 10.8051, 17.8413],
         ...,
         [ 0.1000, 10.8051, 17.4618],
         [ 0.1000, 10.8051, 17.2814],
         [ 0.1000, 10.8051, 18.0616]],
        [[ 0.1000, 10.6368,  9.4875],
         [ 0.1000, 10.6368,  9.5381],
         [ 0.1000, 10.6368,  9.1038],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2563],
         [ 0.1000, 10.6368,  9.0512]],
        [[ 0.1000, 10.6161,  8.9041],
         [ 0.1000, 10.6161,  8.9138],
         [ 0.1000, 10.6161,  8.3762],
         ...,
         [ 0.1000, 10.6161,  8.5024],
         [ 0.1000, 10.6161,  8.5678],
         [ 0.1000, 10.6161,  8.3093]],
        ...,
        [[ 0.1000, 10.5905,  8.2296],
         [ 0.1000, 10.5905,  8.1954],
         [ 0.1000, 10.5905,  7.5536],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7841],
         [ 0.1000, 10.5905,  7.4724]],
        [[ 0.1000, 10.6559, 10.0601],
         [ 0.1000, 10.6559, 10.1532],
         [ 0.1000, 10.6559,  9.8314],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9409],
         [ 0.1000, 10.6559,  9.7949]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6546],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8422],
         [ 0.1000, 10.8051, 16.4796],
         [ 0.1000, 10.8051, 17.8414],
         ...,
         [ 0.1000, 10.8051, 17.4617],
         [ 0.1000, 10.8051, 17.2813],
         [ 0.1000, 10.8051, 18.0618]],
        [[ 0.1000, 10.6368,  9.4876],
         [ 0.1000, 10.6368,  9.5382],
         [ 0.1000, 10.6368,  9.1037],
         ...,
         [ 0.1000, 10.6368,  9.2039],
         [ 0.1000, 10.6368,  9.2563],
         [ 0.1000, 10.6368,  9.0512]],
        [[ 0.1000, 10.6161,  8.9041],
         [ 0.1000, 10.6161,  8.9140],
         [ 0.1000, 10.6161,  8.3762],
         ...,
         [ 0.1000, 10.6161,  8.5024],
         [ 0.1000, 10.6161,  8.5679],
         [ 0.1000, 10.6161,  8.3092]],
        ...,
        [[ 0.1000, 10.5905,  8.2296],
         [ 0.1000, 10.5905,  8.1956],
         [ 0.1000, 10.5905,  7.5535],
         ...,
         [ 0.1000, 10.5905,  7.7057],
         [ 0.1000, 10.5905,  7.7842],
         [ 0.1000, 10.5905,  7.4724]],
        [[ 0.1000, 10.6559, 10.0601],
         [ 0.1000, 10.6559, 10.1533],
         [ 0.1000, 10.6559,  9.8314],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9409],
         [ 0.1000, 10.6559,  9.7948]],
        [[ 0.1000, 10.6981, 11.4487],
         [ 0.1000, 10.6981, 11.6546],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6592]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9271],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7984],
         [0.1000, 1.0490, 0.7942]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7806]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0768],
         [ 0.1000, 10.8051, 17.7350],
         [ 0.1000, 10.8051, 17.5209],
         ...,
         [ 0.1000, 10.8051, 17.5714],
         [ 0.1000, 10.8051, 17.5928],
         [ 0.1000, 10.8051, 17.4895]],
        [[ 0.1000, 10.6368,  9.3710],
         [ 0.1000, 10.6368,  9.1305],
         [ 0.1000, 10.6368,  9.1874],
         ...,
         [ 0.1000, 10.6368,  9.1736],
         [ 0.1000, 10.6368,  9.1678],
         [ 0.1000, 10.6368,  9.1961]],
        [[ 0.1000, 10.6161,  8.7654],
         [ 0.1000, 10.6161,  8.4101],
         [ 0.1000, 10.6161,  8.4818],
         ...,
         [ 0.1000, 10.6161,  8.4645],
         [ 0.1000, 10.6161,  8.4572],
         [ 0.1000, 10.6161,  8.4927]],
        ...,
        [[ 0.1000, 10.5905,  8.0678],
         [ 0.1000, 10.5905,  7.5945],
         [ 0.1000, 10.5905,  7.6808],
         ...,
         [ 0.1000, 10.5905,  7.6600],
         [ 0.1000, 10.5905,  7.6513],
         [ 0.1000, 10.5905,  7.6940]],
        [[ 0.1000, 10.6559,  9.9673],
         [ 0.1000, 10.6559,  9.8503],
         [ 0.1000, 10.6559,  9.8909],
         ...,
         [ 0.1000, 10.6559,  9.8810],
         [ 0.1000, 10.6559,  9.8768],
         [ 0.1000, 10.6559,  9.8971]],
        [[ 0.1000, 10.6981, 11.4207],
         [ 0.1000, 10.6981, 11.6457],
         [ 0.1000, 10.6981, 11.6396],
         ...,
         [ 0.1000, 10.6981, 11.6408],
         [ 0.1000, 10.6981, 11.6414],
         [ 0.1000, 10.6981, 11.6390]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9232],
         [0.1000, 1.0531, 0.9502],
         [0.1000, 1.0531, 0.9467],
         ...,
         [0.1000, 1.0531, 0.9475],
         [0.1000, 1.0531, 0.9478],
         [0.1000, 1.0531, 0.9462]],
        [[0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8102],
         [0.1000, 1.0495, 0.8111],
         ...,
         [0.1000, 1.0495, 0.8109],
         [0.1000, 1.0495, 0.8108],
         [0.1000, 1.0495, 0.8113]],
        [[0.1000, 1.0490, 0.8043],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7997],
         ...,
         [0.1000, 1.0490, 0.7994],
         [0.1000, 1.0490, 0.7993],
         [0.1000, 1.0490, 0.7998]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7852],
         [0.1000, 1.0485, 0.7866],
         ...,
         [0.1000, 1.0485, 0.7863],
         [0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.7868]],
        [[0.1000, 1.0499, 0.8238],
         [0.1000, 1.0499, 0.8219],
         [0.1000, 1.0499, 0.8226],
         ...,
         [0.1000, 1.0499, 0.8224],
         [0.1000, 1.0499, 0.8223],
         [0.1000, 1.0499, 0.8227]],
        [[0.1000, 1.0508, 0.8475],
         [0.1000, 1.0508, 0.8511],
         [0.1000, 1.0508, 0.8510],
         ...,
         [0.1000, 1.0508, 0.8510],
         [0.1000, 1.0508, 0.8510],
         [0.1000, 1.0508, 0.8510]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9061],
         [ 0.1000, 10.8051, 16.8182],
         [ 0.1000, 10.8051, 17.7458],
         ...,
         [ 0.1000, 10.8051, 17.4937],
         [ 0.1000, 10.8051, 17.3711],
         [ 0.1000, 10.8051, 17.8889]],
        [[ 0.1000, 10.6368,  9.4528],
         [ 0.1000, 10.6368,  9.4080],
         [ 0.1000, 10.6368,  9.1278],
         ...,
         [ 0.1000, 10.6368,  9.1949],
         [ 0.1000, 10.6368,  9.2298],
         [ 0.1000, 10.6368,  9.0921]],
        [[ 0.1000, 10.6161,  8.8631],
         [ 0.1000, 10.6161,  8.7553],
         [ 0.1000, 10.6161,  8.4066],
         ...,
         [ 0.1000, 10.6161,  8.4912],
         [ 0.1000, 10.6161,  8.5348],
         [ 0.1000, 10.6161,  8.3614]],
        ...,
        [[ 0.1000, 10.5905,  8.1820],
         [ 0.1000, 10.5905,  8.0077],
         [ 0.1000, 10.5905,  7.5903],
         ...,
         [ 0.1000, 10.5905,  7.6922],
         [ 0.1000, 10.5905,  7.7446],
         [ 0.1000, 10.5905,  7.5356]],
        [[ 0.1000, 10.6559, 10.0320],
         [ 0.1000, 10.6559, 10.0538],
         [ 0.1000, 10.6559,  9.8483],
         ...,
         [ 0.1000, 10.6559,  9.8963],
         [ 0.1000, 10.6559,  9.9215],
         [ 0.1000, 10.6559,  9.8232]],
        [[ 0.1000, 10.6981, 11.4389],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6460],
         ...,
         [ 0.1000, 10.6981, 11.6391],
         [ 0.1000, 10.6981, 11.6370],
         [ 0.1000, 10.6981, 11.6514]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9192],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9450],
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9514]],
        [[0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8135],
         [0.1000, 1.0495, 0.8089],
         ...,
         [0.1000, 1.0495, 0.8100],
         [0.1000, 1.0495, 0.8106],
         [0.1000, 1.0495, 0.8083]],
        [[0.1000, 1.0490, 0.8046],
         [0.1000, 1.0490, 0.8028],
         [0.1000, 1.0490, 0.7972],
         ...,
         [0.1000, 1.0490, 0.7986],
         [0.1000, 1.0490, 0.7993],
         [0.1000, 1.0490, 0.7964]],
        ...,
        [[0.1000, 1.0485, 0.7935],
         [0.1000, 1.0485, 0.7907],
         [0.1000, 1.0485, 0.7839],
         ...,
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7864],
         [0.1000, 1.0485, 0.7830]],
        [[0.1000, 1.0499, 0.8236],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8206],
         ...,
         [0.1000, 1.0499, 0.8214],
         [0.1000, 1.0499, 0.8218],
         [0.1000, 1.0499, 0.8202]],
        [[0.1000, 1.0508, 0.8465],
         [0.1000, 1.0508, 0.8498],
         [0.1000, 1.0508, 0.8499],
         ...,
         [0.1000, 1.0508, 0.8498],
         [0.1000, 1.0508, 0.8497],
         [0.1000, 1.0508, 0.8500]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8542],
         [ 0.1000, 10.8051, 16.5432],
         [ 0.1000, 10.8051, 17.8228],
         ...,
         [ 0.1000, 10.8051, 17.4679],
         [ 0.1000, 10.8051, 17.2986],
         [ 0.1000, 10.8051, 18.0280]],
        [[ 0.1000, 10.6368,  9.4808],
         [ 0.1000, 10.6368,  9.5123],
         [ 0.1000, 10.6368,  9.1084],
         ...,
         [ 0.1000, 10.6368,  9.2021],
         [ 0.1000, 10.6368,  9.2511],
         [ 0.1000, 10.6368,  9.0590]],
        [[ 0.1000, 10.6161,  8.8962],
         [ 0.1000, 10.6161,  8.8825],
         [ 0.1000, 10.6161,  8.3821],
         ...,
         [ 0.1000, 10.6161,  8.5002],
         [ 0.1000, 10.6161,  8.5614],
         [ 0.1000, 10.6161,  8.3192]],
        ...,
        [[ 0.1000, 10.5905,  8.2204],
         [ 0.1000, 10.5905,  8.1585],
         [ 0.1000, 10.5905,  7.5606],
         ...,
         [ 0.1000, 10.5905,  7.7031],
         [ 0.1000, 10.5905,  7.7765],
         [ 0.1000, 10.5905,  7.4845]],
        [[ 0.1000, 10.6559, 10.0546],
         [ 0.1000, 10.6559, 10.1333],
         [ 0.1000, 10.6559,  9.8346],
         ...,
         [ 0.1000, 10.6559,  9.9015],
         [ 0.1000, 10.6559,  9.9371],
         [ 0.1000, 10.6559,  9.8002]],
        [[ 0.1000, 10.6981, 11.4467],
         [ 0.1000, 10.6981, 11.6510],
         [ 0.1000, 10.6981, 11.6488],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6361],
         [ 0.1000, 10.6981, 11.6576]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9172],
         [0.1000, 1.0531, 0.9284],
         [0.1000, 1.0531, 0.9492],
         ...,
         [0.1000, 1.0531, 0.9435],
         [0.1000, 1.0531, 0.9407],
         [0.1000, 1.0531, 0.9526]],
        [[0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 0.8141],
         [0.1000, 1.0495, 0.8075],
         ...,
         [0.1000, 1.0495, 0.8090],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.8067]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.7957],
         ...,
         [0.1000, 1.0490, 0.7976],
         [0.1000, 1.0490, 0.7986],
         [0.1000, 1.0490, 0.7947]],
        ...,
        [[0.1000, 1.0485, 0.7931],
         [0.1000, 1.0485, 0.7920],
         [0.1000, 1.0485, 0.7823],
         ...,
         [0.1000, 1.0485, 0.7846],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7811]],
        [[0.1000, 1.0499, 0.8229],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8193],
         ...,
         [0.1000, 1.0499, 0.8204],
         [0.1000, 1.0499, 0.8210],
         [0.1000, 1.0499, 0.8188]],
        [[0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.8489],
         [0.1000, 1.0508, 0.8488],
         ...,
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8447],
         [ 0.1000, 10.8051, 16.4928],
         [ 0.1000, 10.8051, 17.8375],
         ...,
         [ 0.1000, 10.8051, 17.4630],
         [ 0.1000, 10.8051, 17.2849],
         [ 0.1000, 10.8051, 18.0547]],
        [[ 0.1000, 10.6368,  9.4862],
         [ 0.1000, 10.6368,  9.5328],
         [ 0.1000, 10.6368,  9.1047],
         ...,
         [ 0.1000, 10.6368,  9.2035],
         [ 0.1000, 10.6368,  9.2552],
         [ 0.1000, 10.6368,  9.0528]],
        [[ 0.1000, 10.6161,  8.9025],
         [ 0.1000, 10.6161,  8.9074],
         [ 0.1000, 10.6161,  8.3774],
         ...,
         [ 0.1000, 10.6161,  8.5020],
         [ 0.1000, 10.6161,  8.5665],
         [ 0.1000, 10.6161,  8.3113]],
        ...,
        [[ 0.1000, 10.5905,  8.2277],
         [ 0.1000, 10.5905,  8.1878],
         [ 0.1000, 10.5905,  7.5550],
         ...,
         [ 0.1000, 10.5905,  7.7051],
         [ 0.1000, 10.5905,  7.7826],
         [ 0.1000, 10.5905,  7.4749]],
        [[ 0.1000, 10.6559, 10.0589],
         [ 0.1000, 10.6559, 10.1491],
         [ 0.1000, 10.6559,  9.8321],
         ...,
         [ 0.1000, 10.6559,  9.9025],
         [ 0.1000, 10.6559,  9.9401],
         [ 0.1000, 10.6559,  9.7960]],
        [[ 0.1000, 10.6981, 11.4482],
         [ 0.1000, 10.6981, 11.6538],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9274],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8427],
         [ 0.1000, 10.8051, 16.4824],
         [ 0.1000, 10.8051, 17.8406],
         ...,
         [ 0.1000, 10.8051, 17.4620],
         [ 0.1000, 10.8051, 17.2821],
         [ 0.1000, 10.8051, 18.0603]],
        [[ 0.1000, 10.6368,  9.4873],
         [ 0.1000, 10.6368,  9.5371],
         [ 0.1000, 10.6368,  9.1039],
         ...,
         [ 0.1000, 10.6368,  9.2038],
         [ 0.1000, 10.6368,  9.2561],
         [ 0.1000, 10.6368,  9.0515]],
        [[ 0.1000, 10.6161,  8.9038],
         [ 0.1000, 10.6161,  8.9126],
         [ 0.1000, 10.6161,  8.3765],
         ...,
         [ 0.1000, 10.6161,  8.5023],
         [ 0.1000, 10.6161,  8.5676],
         [ 0.1000, 10.6161,  8.3097]],
        ...,
        [[ 0.1000, 10.5905,  8.2292],
         [ 0.1000, 10.5905,  8.1940],
         [ 0.1000, 10.5905,  7.5538],
         ...,
         [ 0.1000, 10.5905,  7.7056],
         [ 0.1000, 10.5905,  7.7838],
         [ 0.1000, 10.5905,  7.4729]],
        [[ 0.1000, 10.6559, 10.0598],
         [ 0.1000, 10.6559, 10.1524],
         [ 0.1000, 10.6559,  9.8315],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9407],
         [ 0.1000, 10.6559,  9.7951]],
        [[ 0.1000, 10.6981, 11.4486],
         [ 0.1000, 10.6981, 11.6545],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9529]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7953],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8440],
         [ 0.1000, 10.8051, 16.4892],
         [ 0.1000, 10.8051, 17.8386],
         ...,
         [ 0.1000, 10.8051, 17.4627],
         [ 0.1000, 10.8051, 17.2839],
         [ 0.1000, 10.8051, 18.0566]],
        [[ 0.1000, 10.6368,  9.4865],
         [ 0.1000, 10.6368,  9.5342],
         [ 0.1000, 10.6368,  9.1044],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2555],
         [ 0.1000, 10.6368,  9.0524]],
        [[ 0.1000, 10.6161,  8.9029],
         [ 0.1000, 10.6161,  8.9091],
         [ 0.1000, 10.6161,  8.3771],
         ...,
         [ 0.1000, 10.6161,  8.5021],
         [ 0.1000, 10.6161,  8.5669],
         [ 0.1000, 10.6161,  8.3108]],
        ...,
        [[ 0.1000, 10.5905,  8.2282],
         [ 0.1000, 10.5905,  8.1899],
         [ 0.1000, 10.5905,  7.5546],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7830],
         [ 0.1000, 10.5905,  7.4742]],
        [[ 0.1000, 10.6559, 10.0593],
         [ 0.1000, 10.6559, 10.1503],
         [ 0.1000, 10.6559,  9.8319],
         ...,
         [ 0.1000, 10.6559,  9.9025],
         [ 0.1000, 10.6559,  9.9403],
         [ 0.1000, 10.6559,  9.7957]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6540],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8430],
         [ 0.1000, 10.8051, 16.4838],
         [ 0.1000, 10.8051, 17.8402],
         ...,
         [ 0.1000, 10.8051, 17.4622],
         [ 0.1000, 10.8051, 17.2825],
         [ 0.1000, 10.8051, 18.0595]],
        [[ 0.1000, 10.6368,  9.4871],
         [ 0.1000, 10.6368,  9.5365],
         [ 0.1000, 10.6368,  9.1040],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2559],
         [ 0.1000, 10.6368,  9.0517]],
        [[ 0.1000, 10.6161,  8.9036],
         [ 0.1000, 10.6161,  8.9118],
         [ 0.1000, 10.6161,  8.3766],
         ...,
         [ 0.1000, 10.6161,  8.5023],
         [ 0.1000, 10.6161,  8.5674],
         [ 0.1000, 10.6161,  8.3099]],
        ...,
        [[ 0.1000, 10.5905,  8.2290],
         [ 0.1000, 10.5905,  8.1931],
         [ 0.1000, 10.5905,  7.5540],
         ...,
         [ 0.1000, 10.5905,  7.7055],
         [ 0.1000, 10.5905,  7.7837],
         [ 0.1000, 10.5905,  7.4732]],
        [[ 0.1000, 10.6559, 10.0597],
         [ 0.1000, 10.6559, 10.1520],
         [ 0.1000, 10.6559,  9.8316],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9406],
         [ 0.1000, 10.6559,  9.7952]],
        [[ 0.1000, 10.6981, 11.4485],
         [ 0.1000, 10.6981, 11.6544],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8436],
         [ 0.1000, 10.8051, 16.4874],
         [ 0.1000, 10.8051, 17.8391],
         ...,
         [ 0.1000, 10.8051, 17.4625],
         [ 0.1000, 10.8051, 17.2834],
         [ 0.1000, 10.8051, 18.0576]],
        [[ 0.1000, 10.6368,  9.4867],
         [ 0.1000, 10.6368,  9.5350],
         [ 0.1000, 10.6368,  9.1043],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2557],
         [ 0.1000, 10.6368,  9.0521]],
        [[ 0.1000, 10.6161,  8.9032],
         [ 0.1000, 10.6161,  8.9100],
         [ 0.1000, 10.6161,  8.3769],
         ...,
         [ 0.1000, 10.6161,  8.5022],
         [ 0.1000, 10.6161,  8.5671],
         [ 0.1000, 10.6161,  8.3105]],
        ...,
        [[ 0.1000, 10.5905,  8.2285],
         [ 0.1000, 10.5905,  8.1910],
         [ 0.1000, 10.5905,  7.5544],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7832],
         [ 0.1000, 10.5905,  7.4739]],
        [[ 0.1000, 10.6559, 10.0594],
         [ 0.1000, 10.6559, 10.1508],
         [ 0.1000, 10.6559,  9.8318],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9404],
         [ 0.1000, 10.6559,  9.7955]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6542],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8431],
         [ 0.1000, 10.8051, 16.4846],
         [ 0.1000, 10.8051, 17.8399],
         ...,
         [ 0.1000, 10.8051, 17.4622],
         [ 0.1000, 10.8051, 17.2827],
         [ 0.1000, 10.8051, 18.0591]],
        [[ 0.1000, 10.6368,  9.4870],
         [ 0.1000, 10.6368,  9.5362],
         [ 0.1000, 10.6368,  9.1041],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2559],
         [ 0.1000, 10.6368,  9.0518]],
        [[ 0.1000, 10.6161,  8.9035],
         [ 0.1000, 10.6161,  8.9115],
         [ 0.1000, 10.6161,  8.3767],
         ...,
         [ 0.1000, 10.6161,  8.5022],
         [ 0.1000, 10.6161,  8.5674],
         [ 0.1000, 10.6161,  8.3100]],
        ...,
        [[ 0.1000, 10.5905,  8.2289],
         [ 0.1000, 10.5905,  8.1927],
         [ 0.1000, 10.5905,  7.5541],
         ...,
         [ 0.1000, 10.5905,  7.7055],
         [ 0.1000, 10.5905,  7.7836],
         [ 0.1000, 10.5905,  7.4733]],
        [[ 0.1000, 10.6559, 10.0597],
         [ 0.1000, 10.6559, 10.1517],
         [ 0.1000, 10.6559,  9.8317],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9406],
         [ 0.1000, 10.6559,  9.7953]],
        [[ 0.1000, 10.6981, 11.4485],
         [ 0.1000, 10.6981, 11.6543],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8430],
         [ 0.1000, 10.8051, 16.4840],
         [ 0.1000, 10.8051, 17.8401],
         ...,
         [ 0.1000, 10.8051, 17.4622],
         [ 0.1000, 10.8051, 17.2825],
         [ 0.1000, 10.8051, 18.0594]],
        [[ 0.1000, 10.6368,  9.4871],
         [ 0.1000, 10.6368,  9.5364],
         [ 0.1000, 10.6368,  9.1041],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2559],
         [ 0.1000, 10.6368,  9.0517]],
        [[ 0.1000, 10.6161,  8.9036],
         [ 0.1000, 10.6161,  8.9118],
         [ 0.1000, 10.6161,  8.3766],
         ...,
         [ 0.1000, 10.6161,  8.5023],
         [ 0.1000, 10.6161,  8.5674],
         [ 0.1000, 10.6161,  8.3099]],
        ...,
        [[ 0.1000, 10.5905,  8.2290],
         [ 0.1000, 10.5905,  8.1930],
         [ 0.1000, 10.5905,  7.5540],
         ...,
         [ 0.1000, 10.5905,  7.7055],
         [ 0.1000, 10.5905,  7.7836],
         [ 0.1000, 10.5905,  7.4732]],
        [[ 0.1000, 10.6559, 10.0597],
         [ 0.1000, 10.6559, 10.1519],
         [ 0.1000, 10.6559,  9.8316],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9406],
         [ 0.1000, 10.6559,  9.7952]],
        [[ 0.1000, 10.6981, 11.4485],
         [ 0.1000, 10.6981, 11.6544],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8430],
         [ 0.1000, 10.8051, 16.4838],
         [ 0.1000, 10.8051, 17.8402],
         ...,
         [ 0.1000, 10.8051, 17.4622],
         [ 0.1000, 10.8051, 17.2825],
         [ 0.1000, 10.8051, 18.0595]],
        [[ 0.1000, 10.6368,  9.4871],
         [ 0.1000, 10.6368,  9.5365],
         [ 0.1000, 10.6368,  9.1040],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2559],
         [ 0.1000, 10.6368,  9.0517]],
        [[ 0.1000, 10.6161,  8.9036],
         [ 0.1000, 10.6161,  8.9118],
         [ 0.1000, 10.6161,  8.3766],
         ...,
         [ 0.1000, 10.6161,  8.5023],
         [ 0.1000, 10.6161,  8.5674],
         [ 0.1000, 10.6161,  8.3099]],
        ...,
        [[ 0.1000, 10.5905,  8.2290],
         [ 0.1000, 10.5905,  8.1931],
         [ 0.1000, 10.5905,  7.5540],
         ...,
         [ 0.1000, 10.5905,  7.7055],
         [ 0.1000, 10.5905,  7.7837],
         [ 0.1000, 10.5905,  7.4732]],
        [[ 0.1000, 10.6559, 10.0597],
         [ 0.1000, 10.6559, 10.1520],
         [ 0.1000, 10.6559,  9.8316],
         ...,
         [ 0.1000, 10.6559,  9.9027],
         [ 0.1000, 10.6559,  9.9406],
         [ 0.1000, 10.6559,  9.7952]],
        [[ 0.1000, 10.6981, 11.4485],
         [ 0.1000, 10.6981, 11.6544],
         [ 0.1000, 10.6981, 11.6495],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6591]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8063]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.0905],
         [ 0.1000, 10.8051, 17.7539],
         [ 0.1000, 10.8051, 17.5169],
         ...,
         [ 0.1000, 10.8051, 17.5733],
         [ 0.1000, 10.8051, 17.5977],
         [ 0.1000, 10.8051, 17.4819]],
        [[ 0.1000, 10.6368,  9.3652],
         [ 0.1000, 10.6368,  9.1257],
         [ 0.1000, 10.6368,  9.1885],
         ...,
         [ 0.1000, 10.6368,  9.1731],
         [ 0.1000, 10.6368,  9.1665],
         [ 0.1000, 10.6368,  9.1982]],
        [[ 0.1000, 10.6161,  8.7583],
         [ 0.1000, 10.6161,  8.4040],
         [ 0.1000, 10.6161,  8.4831],
         ...,
         [ 0.1000, 10.6161,  8.4638],
         [ 0.1000, 10.6161,  8.4555],
         [ 0.1000, 10.6161,  8.4953]],
        ...,
        [[ 0.1000, 10.5905,  8.0594],
         [ 0.1000, 10.5905,  7.5872],
         [ 0.1000, 10.5905,  7.6825],
         ...,
         [ 0.1000, 10.5905,  7.6592],
         [ 0.1000, 10.5905,  7.6493],
         [ 0.1000, 10.5905,  7.6972]],
        [[ 0.1000, 10.6559,  9.9628],
         [ 0.1000, 10.6559,  9.8469],
         [ 0.1000, 10.6559,  9.8916],
         ...,
         [ 0.1000, 10.6559,  9.8806],
         [ 0.1000, 10.6559,  9.8759],
         [ 0.1000, 10.6559,  9.8987]],
        [[ 0.1000, 10.6981, 11.4198],
         [ 0.1000, 10.6981, 11.6463],
         [ 0.1000, 10.6981, 11.6396],
         ...,
         [ 0.1000, 10.6981, 11.6409],
         [ 0.1000, 10.6981, 11.6415],
         [ 0.1000, 10.6981, 11.6388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9233],
         [0.1000, 1.0531, 0.9503],
         [0.1000, 1.0531, 0.9465],
         ...,
         [0.1000, 1.0531, 0.9474],
         [0.1000, 1.0531, 0.9478],
         [0.1000, 1.0531, 0.9459]],
        [[0.1000, 1.0495, 0.8139],
         [0.1000, 1.0495, 0.8100],
         [0.1000, 1.0495, 0.8110],
         ...,
         [0.1000, 1.0495, 0.8107],
         [0.1000, 1.0495, 0.8106],
         [0.1000, 1.0495, 0.8112]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7995],
         ...,
         [0.1000, 1.0490, 0.7992],
         [0.1000, 1.0490, 0.7991],
         [0.1000, 1.0490, 0.7997]],
        ...,
        [[0.1000, 1.0485, 0.7926],
         [0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.7865],
         ...,
         [0.1000, 1.0485, 0.7861],
         [0.1000, 1.0485, 0.7860],
         [0.1000, 1.0485, 0.7867]],
        [[0.1000, 1.0499, 0.8236],
         [0.1000, 1.0499, 0.8217],
         [0.1000, 1.0499, 0.8224],
         ...,
         [0.1000, 1.0499, 0.8223],
         [0.1000, 1.0499, 0.8222],
         [0.1000, 1.0499, 0.8225]],
        [[0.1000, 1.0508, 0.8473],
         [0.1000, 1.0508, 0.8510],
         [0.1000, 1.0508, 0.8509],
         ...,
         [0.1000, 1.0508, 0.8509],
         [0.1000, 1.0508, 0.8509],
         [0.1000, 1.0508, 0.8508]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.9163],
         [ 0.1000, 10.8051, 16.8571],
         [ 0.1000, 10.8051, 17.7354],
         ...,
         [ 0.1000, 10.8051, 17.4974],
         [ 0.1000, 10.8051, 17.3812],
         [ 0.1000, 10.8051, 17.8701]],
        [[ 0.1000, 10.6368,  9.4476],
         [ 0.1000, 10.6368,  9.3942],
         [ 0.1000, 10.6368,  9.1304],
         ...,
         [ 0.1000, 10.6368,  9.1939],
         [ 0.1000, 10.6368,  9.2268],
         [ 0.1000, 10.6368,  9.0967]],
        [[ 0.1000, 10.6161,  8.8568],
         [ 0.1000, 10.6161,  8.7384],
         [ 0.1000, 10.6161,  8.4100],
         ...,
         [ 0.1000, 10.6161,  8.4899],
         [ 0.1000, 10.6161,  8.5312],
         [ 0.1000, 10.6161,  8.3673]],
        ...,
        [[ 0.1000, 10.5905,  8.1748],
         [ 0.1000, 10.5905,  7.9876],
         [ 0.1000, 10.5905,  7.5944],
         ...,
         [ 0.1000, 10.5905,  7.6907],
         [ 0.1000, 10.5905,  7.7402],
         [ 0.1000, 10.5905,  7.5427]],
        [[ 0.1000, 10.6559, 10.0279],
         [ 0.1000, 10.6559, 10.0434],
         [ 0.1000, 10.6559,  9.8502],
         ...,
         [ 0.1000, 10.6559,  9.8955],
         [ 0.1000, 10.6559,  9.9194],
         [ 0.1000, 10.6559,  9.8265]],
        [[ 0.1000, 10.6981, 11.4376],
         [ 0.1000, 10.6981, 11.6391],
         [ 0.1000, 10.6981, 11.6457],
         ...,
         [ 0.1000, 10.6981, 11.6391],
         [ 0.1000, 10.6981, 11.6371],
         [ 0.1000, 10.6981, 11.6507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9195],
         [0.1000, 1.0531, 0.9348],
         [0.1000, 1.0531, 0.9491],
         ...,
         [0.1000, 1.0531, 0.9452],
         [0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9512]],
        [[0.1000, 1.0495, 0.8143],
         [0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8091],
         ...,
         [0.1000, 1.0495, 0.8101],
         [0.1000, 1.0495, 0.8107],
         [0.1000, 1.0495, 0.8086]],
        [[0.1000, 1.0490, 0.8047],
         [0.1000, 1.0490, 0.8027],
         [0.1000, 1.0490, 0.7974],
         ...,
         [0.1000, 1.0490, 0.7987],
         [0.1000, 1.0490, 0.7994],
         [0.1000, 1.0490, 0.7967]],
        ...,
        [[0.1000, 1.0485, 0.7936],
         [0.1000, 1.0485, 0.7905],
         [0.1000, 1.0485, 0.7841],
         ...,
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7865],
         [0.1000, 1.0485, 0.7833]],
        [[0.1000, 1.0499, 0.8237],
         [0.1000, 1.0499, 0.8240],
         [0.1000, 1.0499, 0.8208],
         ...,
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8219],
         [0.1000, 1.0499, 0.8204]],
        [[0.1000, 1.0508, 0.8466],
         [0.1000, 1.0508, 0.8499],
         [0.1000, 1.0508, 0.8500],
         ...,
         [0.1000, 1.0508, 0.8499],
         [0.1000, 1.0508, 0.8499],
         [0.1000, 1.0508, 0.8501]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8567],
         [ 0.1000, 10.8051, 16.5533],
         [ 0.1000, 10.8051, 17.8199],
         ...,
         [ 0.1000, 10.8051, 17.4689],
         [ 0.1000, 10.8051, 17.3013],
         [ 0.1000, 10.8051, 18.0227]],
        [[ 0.1000, 10.6368,  9.4795],
         [ 0.1000, 10.6368,  9.5083],
         [ 0.1000, 10.6368,  9.1091],
         ...,
         [ 0.1000, 10.6368,  9.2018],
         [ 0.1000, 10.6368,  9.2503],
         [ 0.1000, 10.6368,  9.0602]],
        [[ 0.1000, 10.6161,  8.8946],
         [ 0.1000, 10.6161,  8.8776],
         [ 0.1000, 10.6161,  8.3830],
         ...,
         [ 0.1000, 10.6161,  8.4999],
         [ 0.1000, 10.6161,  8.5604],
         [ 0.1000, 10.6161,  8.3208]],
        ...,
        [[ 0.1000, 10.5905,  8.2186],
         [ 0.1000, 10.5905,  8.1527],
         [ 0.1000, 10.5905,  7.5617],
         ...,
         [ 0.1000, 10.5905,  7.7026],
         [ 0.1000, 10.5905,  7.7753],
         [ 0.1000, 10.5905,  7.4864]],
        [[ 0.1000, 10.6559, 10.0535],
         [ 0.1000, 10.6559, 10.1302],
         [ 0.1000, 10.6559,  9.8351],
         ...,
         [ 0.1000, 10.6559,  9.9013],
         [ 0.1000, 10.6559,  9.9365],
         [ 0.1000, 10.6559,  9.8011]],
        [[ 0.1000, 10.6981, 11.4463],
         [ 0.1000, 10.6981, 11.6505],
         [ 0.1000, 10.6981, 11.6487],
         ...,
         [ 0.1000, 10.6981, 11.6386],
         [ 0.1000, 10.6981, 11.6362],
         [ 0.1000, 10.6981, 11.6573]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9173],
         [0.1000, 1.0531, 0.9286],
         [0.1000, 1.0531, 0.9492],
         ...,
         [0.1000, 1.0531, 0.9435],
         [0.1000, 1.0531, 0.9408],
         [0.1000, 1.0531, 0.9525]],
        [[0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 0.8140],
         [0.1000, 1.0495, 0.8076],
         ...,
         [0.1000, 1.0495, 0.8091],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.8068]],
        [[0.1000, 1.0490, 0.8041],
         [0.1000, 1.0490, 0.8038],
         [0.1000, 1.0490, 0.7957],
         ...,
         [0.1000, 1.0490, 0.7976],
         [0.1000, 1.0490, 0.7986],
         [0.1000, 1.0490, 0.7947]],
        ...,
        [[0.1000, 1.0485, 0.7931],
         [0.1000, 1.0485, 0.7920],
         [0.1000, 1.0485, 0.7824],
         ...,
         [0.1000, 1.0485, 0.7847],
         [0.1000, 1.0485, 0.7859],
         [0.1000, 1.0485, 0.7812]],
        [[0.1000, 1.0499, 0.8229],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8194],
         ...,
         [0.1000, 1.0499, 0.8204],
         [0.1000, 1.0499, 0.8210],
         [0.1000, 1.0499, 0.8188]],
        [[0.1000, 1.0508, 0.8456],
         [0.1000, 1.0508, 0.8489],
         [0.1000, 1.0508, 0.8489],
         ...,
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8490]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8458],
         [ 0.1000, 10.8051, 16.4982],
         [ 0.1000, 10.8051, 17.8359],
         ...,
         [ 0.1000, 10.8051, 17.4636],
         [ 0.1000, 10.8051, 17.2864],
         [ 0.1000, 10.8051, 18.0518]],
        [[ 0.1000, 10.6368,  9.4855],
         [ 0.1000, 10.6368,  9.5306],
         [ 0.1000, 10.6368,  9.1051],
         ...,
         [ 0.1000, 10.6368,  9.2034],
         [ 0.1000, 10.6368,  9.2548],
         [ 0.1000, 10.6368,  9.0535]],
        [[ 0.1000, 10.6161,  8.9017],
         [ 0.1000, 10.6161,  8.9047],
         [ 0.1000, 10.6161,  8.3779],
         ...,
         [ 0.1000, 10.6161,  8.5018],
         [ 0.1000, 10.6161,  8.5660],
         [ 0.1000, 10.6161,  8.3122]],
        ...,
        [[ 0.1000, 10.5905,  8.2268],
         [ 0.1000, 10.5905,  8.1847],
         [ 0.1000, 10.5905,  7.5556],
         ...,
         [ 0.1000, 10.5905,  7.7049],
         [ 0.1000, 10.5905,  7.7819],
         [ 0.1000, 10.5905,  7.4759]],
        [[ 0.1000, 10.6559, 10.0584],
         [ 0.1000, 10.6559, 10.1474],
         [ 0.1000, 10.6559,  9.8323],
         ...,
         [ 0.1000, 10.6559,  9.9024],
         [ 0.1000, 10.6559,  9.9398],
         [ 0.1000, 10.6559,  9.7964]],
        [[ 0.1000, 10.6981, 11.4481],
         [ 0.1000, 10.6981, 11.6535],
         [ 0.1000, 10.6981, 11.6493],
         ...,
         [ 0.1000, 10.6981, 11.6385],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6587]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9275],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8073],
         ...,
         [0.1000, 1.0495, 0.8089],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7944]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7821],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7808]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8436],
         [ 0.1000, 10.8051, 16.4869],
         [ 0.1000, 10.8051, 17.8393],
         ...,
         [ 0.1000, 10.8051, 17.4625],
         [ 0.1000, 10.8051, 17.2833],
         [ 0.1000, 10.8051, 18.0579]],
        [[ 0.1000, 10.6368,  9.4868],
         [ 0.1000, 10.6368,  9.5352],
         [ 0.1000, 10.6368,  9.1043],
         ...,
         [ 0.1000, 10.6368,  9.2037],
         [ 0.1000, 10.6368,  9.2557],
         [ 0.1000, 10.6368,  9.0521]],
        [[ 0.1000, 10.6161,  8.9032],
         [ 0.1000, 10.6161,  8.9103],
         [ 0.1000, 10.6161,  8.3769],
         ...,
         [ 0.1000, 10.6161,  8.5022],
         [ 0.1000, 10.6161,  8.5671],
         [ 0.1000, 10.6161,  8.3104]],
        ...,
        [[ 0.1000, 10.5905,  8.2286],
         [ 0.1000, 10.5905,  8.1913],
         [ 0.1000, 10.5905,  7.5543],
         ...,
         [ 0.1000, 10.5905,  7.7054],
         [ 0.1000, 10.5905,  7.7833],
         [ 0.1000, 10.5905,  7.4738]],
        [[ 0.1000, 10.6559, 10.0594],
         [ 0.1000, 10.6559, 10.1510],
         [ 0.1000, 10.6559,  9.8318],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9404],
         [ 0.1000, 10.6559,  9.7955]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6542],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9431],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7924],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8184]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8450],
         [ 0.1000, 10.8051, 16.4943],
         [ 0.1000, 10.8051, 17.8371],
         ...,
         [ 0.1000, 10.8051, 17.4632],
         [ 0.1000, 10.8051, 17.2853],
         [ 0.1000, 10.8051, 18.0539]],
        [[ 0.1000, 10.6368,  9.4859],
         [ 0.1000, 10.6368,  9.5321],
         [ 0.1000, 10.6368,  9.1048],
         ...,
         [ 0.1000, 10.6368,  9.2035],
         [ 0.1000, 10.6368,  9.2551],
         [ 0.1000, 10.6368,  9.0530]],
        [[ 0.1000, 10.6161,  8.9022],
         [ 0.1000, 10.6161,  8.9066],
         [ 0.1000, 10.6161,  8.3776],
         ...,
         [ 0.1000, 10.6161,  8.5019],
         [ 0.1000, 10.6161,  8.5664],
         [ 0.1000, 10.6161,  8.3116]],
        ...,
        [[ 0.1000, 10.5905,  8.2274],
         [ 0.1000, 10.5905,  8.1869],
         [ 0.1000, 10.5905,  7.5552],
         ...,
         [ 0.1000, 10.5905,  7.7051],
         [ 0.1000, 10.5905,  7.7824],
         [ 0.1000, 10.5905,  7.4752]],
        [[ 0.1000, 10.6559, 10.0588],
         [ 0.1000, 10.6559, 10.1486],
         [ 0.1000, 10.6559,  9.8322],
         ...,
         [ 0.1000, 10.6559,  9.9024],
         [ 0.1000, 10.6559,  9.9400],
         [ 0.1000, 10.6559,  9.7961]],
        [[ 0.1000, 10.6981, 11.4482],
         [ 0.1000, 10.6981, 11.6537],
         [ 0.1000, 10.6981, 11.6493],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6588]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9274],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8485],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8439],
         [ 0.1000, 10.8051, 16.4884],
         [ 0.1000, 10.8051, 17.8388],
         ...,
         [ 0.1000, 10.8051, 17.4626],
         [ 0.1000, 10.8051, 17.2837],
         [ 0.1000, 10.8051, 18.0570]],
        [[ 0.1000, 10.6368,  9.4866],
         [ 0.1000, 10.6368,  9.5346],
         [ 0.1000, 10.6368,  9.1044],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2556],
         [ 0.1000, 10.6368,  9.0523]],
        [[ 0.1000, 10.6161,  8.9030],
         [ 0.1000, 10.6161,  8.9095],
         [ 0.1000, 10.6161,  8.3770],
         ...,
         [ 0.1000, 10.6161,  8.5021],
         [ 0.1000, 10.6161,  8.5670],
         [ 0.1000, 10.6161,  8.3106]],
        ...,
        [[ 0.1000, 10.5905,  8.2283],
         [ 0.1000, 10.5905,  8.1904],
         [ 0.1000, 10.5905,  7.5545],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7831],
         [ 0.1000, 10.5905,  7.4741]],
        [[ 0.1000, 10.6559, 10.0593],
         [ 0.1000, 10.6559, 10.1505],
         [ 0.1000, 10.6559,  9.8319],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9403],
         [ 0.1000, 10.6559,  9.7956]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6541],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8446],
         [ 0.1000, 10.8051, 16.4923],
         [ 0.1000, 10.8051, 17.8377],
         ...,
         [ 0.1000, 10.8051, 17.4630],
         [ 0.1000, 10.8051, 17.2848],
         [ 0.1000, 10.8051, 18.0550]],
        [[ 0.1000, 10.6368,  9.4862],
         [ 0.1000, 10.6368,  9.5330],
         [ 0.1000, 10.6368,  9.1047],
         ...,
         [ 0.1000, 10.6368,  9.2035],
         [ 0.1000, 10.6368,  9.2552],
         [ 0.1000, 10.6368,  9.0527]],
        [[ 0.1000, 10.6161,  8.9025],
         [ 0.1000, 10.6161,  8.9076],
         [ 0.1000, 10.6161,  8.3774],
         ...,
         [ 0.1000, 10.6161,  8.5020],
         [ 0.1000, 10.6161,  8.5666],
         [ 0.1000, 10.6161,  8.3113]],
        ...,
        [[ 0.1000, 10.5905,  8.2277],
         [ 0.1000, 10.5905,  8.1881],
         [ 0.1000, 10.5905,  7.5550],
         ...,
         [ 0.1000, 10.5905,  7.7051],
         [ 0.1000, 10.5905,  7.7826],
         [ 0.1000, 10.5905,  7.4748]],
        [[ 0.1000, 10.6559, 10.0590],
         [ 0.1000, 10.6559, 10.1493],
         [ 0.1000, 10.6559,  9.8320],
         ...,
         [ 0.1000, 10.6559,  9.9025],
         [ 0.1000, 10.6559,  9.9401],
         [ 0.1000, 10.6559,  9.7959]],
        [[ 0.1000, 10.6981, 11.4482],
         [ 0.1000, 10.6981, 11.6539],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9169],
         [0.1000, 1.0531, 0.9274],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8191],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8440],
         [ 0.1000, 10.8051, 16.4893],
         [ 0.1000, 10.8051, 17.8386],
         ...,
         [ 0.1000, 10.8051, 17.4627],
         [ 0.1000, 10.8051, 17.2839],
         [ 0.1000, 10.8051, 18.0566]],
        [[ 0.1000, 10.6368,  9.4865],
         [ 0.1000, 10.6368,  9.5342],
         [ 0.1000, 10.6368,  9.1044],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2555],
         [ 0.1000, 10.6368,  9.0524]],
        [[ 0.1000, 10.6161,  8.9029],
         [ 0.1000, 10.6161,  8.9091],
         [ 0.1000, 10.6161,  8.3771],
         ...,
         [ 0.1000, 10.6161,  8.5021],
         [ 0.1000, 10.6161,  8.5669],
         [ 0.1000, 10.6161,  8.3108]],
        ...,
        [[ 0.1000, 10.5905,  8.2282],
         [ 0.1000, 10.5905,  8.1899],
         [ 0.1000, 10.5905,  7.5546],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7830],
         [ 0.1000, 10.5905,  7.4742]],
        [[ 0.1000, 10.6559, 10.0592],
         [ 0.1000, 10.6559, 10.1502],
         [ 0.1000, 10.6559,  9.8319],
         ...,
         [ 0.1000, 10.6559,  9.9025],
         [ 0.1000, 10.6559,  9.9403],
         [ 0.1000, 10.6559,  9.7957]],
        [[ 0.1000, 10.6981, 11.4483],
         [ 0.1000, 10.6981, 11.6540],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6589]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9403],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8439],
         [ 0.1000, 10.8051, 16.4886],
         [ 0.1000, 10.8051, 17.8387],
         ...,
         [ 0.1000, 10.8051, 17.4626],
         [ 0.1000, 10.8051, 17.2838],
         [ 0.1000, 10.8051, 18.0569]],
        [[ 0.1000, 10.6368,  9.4866],
         [ 0.1000, 10.6368,  9.5345],
         [ 0.1000, 10.6368,  9.1044],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2556],
         [ 0.1000, 10.6368,  9.0523]],
        [[ 0.1000, 10.6161,  8.9030],
         [ 0.1000, 10.6161,  8.9094],
         [ 0.1000, 10.6161,  8.3770],
         ...,
         [ 0.1000, 10.6161,  8.5021],
         [ 0.1000, 10.6161,  8.5670],
         [ 0.1000, 10.6161,  8.3107]],
        ...,
        [[ 0.1000, 10.5905,  8.2283],
         [ 0.1000, 10.5905,  8.1903],
         [ 0.1000, 10.5905,  7.5545],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7831],
         [ 0.1000, 10.5905,  7.4741]],
        [[ 0.1000, 10.6559, 10.0593],
         [ 0.1000, 10.6559, 10.1504],
         [ 0.1000, 10.6559,  9.8319],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9403],
         [ 0.1000, 10.6559,  9.7956]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6541],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8439],
         [ 0.1000, 10.8051, 16.4884],
         [ 0.1000, 10.8051, 17.8388],
         ...,
         [ 0.1000, 10.8051, 17.4626],
         [ 0.1000, 10.8051, 17.2837],
         [ 0.1000, 10.8051, 18.0570]],
        [[ 0.1000, 10.6368,  9.4866],
         [ 0.1000, 10.6368,  9.5346],
         [ 0.1000, 10.6368,  9.1044],
         ...,
         [ 0.1000, 10.6368,  9.2036],
         [ 0.1000, 10.6368,  9.2556],
         [ 0.1000, 10.6368,  9.0523]],
        [[ 0.1000, 10.6161,  8.9030],
         [ 0.1000, 10.6161,  8.9095],
         [ 0.1000, 10.6161,  8.3770],
         ...,
         [ 0.1000, 10.6161,  8.5021],
         [ 0.1000, 10.6161,  8.5670],
         [ 0.1000, 10.6161,  8.3106]],
        ...,
        [[ 0.1000, 10.5905,  8.2283],
         [ 0.1000, 10.5905,  8.1904],
         [ 0.1000, 10.5905,  7.5545],
         ...,
         [ 0.1000, 10.5905,  7.7053],
         [ 0.1000, 10.5905,  7.7831],
         [ 0.1000, 10.5905,  7.4741]],
        [[ 0.1000, 10.6559, 10.0593],
         [ 0.1000, 10.6559, 10.1505],
         [ 0.1000, 10.6559,  9.8319],
         ...,
         [ 0.1000, 10.6559,  9.9026],
         [ 0.1000, 10.6559,  9.9403],
         [ 0.1000, 10.6559,  9.7956]],
        [[ 0.1000, 10.6981, 11.4484],
         [ 0.1000, 10.6981, 11.6541],
         [ 0.1000, 10.6981, 11.6494],
         ...,
         [ 0.1000, 10.6981, 11.6384],
         [ 0.1000, 10.6981, 11.6360],
         [ 0.1000, 10.6981, 11.6590]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9168],
         [0.1000, 1.0531, 0.9273],
         [0.1000, 1.0531, 0.9493],
         ...,
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9528]],
        [[0.1000, 1.0495, 0.8134],
         [0.1000, 1.0495, 0.8142],
         [0.1000, 1.0495, 0.8072],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8064]],
        [[0.1000, 1.0490, 0.8039],
         [0.1000, 1.0490, 0.8040],
         [0.1000, 1.0490, 0.7954],
         ...,
         [0.1000, 1.0490, 0.7974],
         [0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7943]],
        ...,
        [[0.1000, 1.0485, 0.7930],
         [0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7820],
         ...,
         [0.1000, 1.0485, 0.7845],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7807]],
        [[0.1000, 1.0499, 0.8227],
         [0.1000, 1.0499, 0.8242],
         [0.1000, 1.0499, 0.8190],
         ...,
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8185]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8486],
         ...,
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8488]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.1054],
         [ 0.1000, 10.8051, 17.7758],
         [ 0.1000, 10.8051, 17.5122],
         ...,
         [ 0.1000, 10.8051, 17.5754],
         [ 0.1000, 10.8051, 17.6031],
         [ 0.1000, 10.8051, 17.4731]],
        [[ 0.1000, 10.6368,  9.3589],
         [ 0.1000, 10.6368,  9.1201],
         [ 0.1000, 10.6368,  9.1898],
         ...,
         [ 0.1000, 10.6368,  9.1725],
         [ 0.1000, 10.6368,  9.1651],
         [ 0.1000, 10.6368,  9.2007]],
        [[ 0.1000, 10.6161,  8.7507],
         [ 0.1000, 10.6161,  8.3970],
         [ 0.1000, 10.6161,  8.4848],
         ...,
         [ 0.1000, 10.6161,  8.4631],
         [ 0.1000, 10.6161,  8.4537],
         [ 0.1000, 10.6161,  8.4984]],
        ...,
        [[ 0.1000, 10.5905,  8.0505],
         [ 0.1000, 10.5905,  7.5786],
         [ 0.1000, 10.5905,  7.6845],
         ...,
         [ 0.1000, 10.5905,  7.6583],
         [ 0.1000, 10.5905,  7.6471],
         [ 0.1000, 10.5905,  7.7009]],
        [[ 0.1000, 10.6559,  9.9579],
         [ 0.1000, 10.6559,  9.8429],
         [ 0.1000, 10.6559,  9.8926],
         ...,
         [ 0.1000, 10.6559,  9.8802],
         [ 0.1000, 10.6559,  9.8748],
         [ 0.1000, 10.6559,  9.9004]],
        [[ 0.1000, 10.6981, 11.4188],
         [ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 11.6394],
         ...,
         [ 0.1000, 10.6981, 11.6409],
         [ 0.1000, 10.6981, 11.6417],
         [ 0.1000, 10.6981, 11.6386]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9233],
         [0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9462],
         ...,
         [0.1000, 1.0531, 0.9472],
         [0.1000, 1.0531, 0.9477],
         [0.1000, 1.0531, 0.9456]],
        [[0.1000, 1.0495, 0.8136],
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8108],
         ...,
         [0.1000, 1.0495, 0.8106],
         [0.1000, 1.0495, 0.8104],
         [0.1000, 1.0495, 0.8110]],
        [[0.1000, 1.0490, 0.8037],
         [0.1000, 1.0490, 0.7979],
         [0.1000, 1.0490, 0.7994],
         ...,
         [0.1000, 1.0490, 0.7990],
         [0.1000, 1.0490, 0.7989],
         [0.1000, 1.0490, 0.7996]],
        ...,
        [[0.1000, 1.0485, 0.7923],
         [0.1000, 1.0485, 0.7846],
         [0.1000, 1.0485, 0.7864],
         ...,
         [0.1000, 1.0485, 0.7859],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7866]],
        [[0.1000, 1.0499, 0.8233],
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.8223],
         ...,
         [0.1000, 1.0499, 0.8221],
         [0.1000, 1.0499, 0.8220],
         [0.1000, 1.0499, 0.8224]],
        [[0.1000, 1.0508, 0.8471],
         [0.1000, 1.0508, 0.8508],
         [0.1000, 1.0508, 0.8507],
         ...,
         [0.1000, 1.0508, 0.8507],
         [0.1000, 1.0508, 0.8507],
         [0.1000, 1.0508, 0.8507]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.1383],
         [ 0.1000, 10.8051, 17.8707],
         [ 0.1000, 10.8051, 17.4915],
         ...,
         [ 0.1000, 10.8051, 17.5837],
         [ 0.1000, 10.8051, 17.6269],
         [ 0.1000, 10.8051, 17.4382]],
        [[ 0.1000, 10.6368,  9.3447],
         [ 0.1000, 10.6368,  9.0965],
         [ 0.1000, 10.6368,  9.1955],
         ...,
         [ 0.1000, 10.6368,  9.1703],
         [ 0.1000, 10.6368,  9.1587],
         [ 0.1000, 10.6368,  9.2105]],
        [[ 0.1000, 10.6161,  8.7335],
         [ 0.1000, 10.6161,  8.3671],
         [ 0.1000, 10.6161,  8.4920],
         ...,
         [ 0.1000, 10.6161,  8.4603],
         [ 0.1000, 10.6161,  8.4457],
         [ 0.1000, 10.6161,  8.5107]],
        ...,
        [[ 0.1000, 10.5905,  8.0303],
         [ 0.1000, 10.5905,  7.5425],
         [ 0.1000, 10.5905,  7.6931],
         ...,
         [ 0.1000, 10.5905,  7.6550],
         [ 0.1000, 10.5905,  7.6374],
         [ 0.1000, 10.5905,  7.7157]],
        [[ 0.1000, 10.6559,  9.9468],
         [ 0.1000, 10.6559,  9.8263],
         [ 0.1000, 10.6559,  9.8967],
         ...,
         [ 0.1000, 10.6559,  9.8786],
         [ 0.1000, 10.6559,  9.8703],
         [ 0.1000, 10.6559,  9.9075]],
        [[ 0.1000, 10.6981, 11.4163],
         [ 0.1000, 10.6981, 11.6507],
         [ 0.1000, 10.6981, 11.6390],
         ...,
         [ 0.1000, 10.6981, 11.6411],
         [ 0.1000, 10.6981, 11.6423],
         [ 0.1000, 10.6981, 11.6380]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9231],
         [0.1000, 1.0531, 0.9513],
         [0.1000, 1.0531, 0.9451],
         ...,
         [0.1000, 1.0531, 0.9466],
         [0.1000, 1.0531, 0.9473],
         [0.1000, 1.0531, 0.9442]],
        [[0.1000, 1.0495, 0.8126],
         [0.1000, 1.0495, 0.8085],
         [0.1000, 1.0495, 0.8102],
         ...,
         [0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8096],
         [0.1000, 1.0495, 0.8104]],
        [[0.1000, 1.0490, 0.8026],
         [0.1000, 1.0490, 0.7967],
         [0.1000, 1.0490, 0.7987],
         ...,
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.7980],
         [0.1000, 1.0490, 0.7990]],
        ...,
        [[0.1000, 1.0485, 0.7912],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7857],
         ...,
         [0.1000, 1.0485, 0.7851],
         [0.1000, 1.0485, 0.7848],
         [0.1000, 1.0485, 0.7861]],
        [[0.1000, 1.0499, 0.8224],
         [0.1000, 1.0499, 0.8204],
         [0.1000, 1.0499, 0.8216],
         ...,
         [0.1000, 1.0499, 0.8213],
         [0.1000, 1.0499, 0.8211],
         [0.1000, 1.0499, 0.8217]],
        [[0.1000, 1.0508, 0.8463],
         [0.1000, 1.0508, 0.8501],
         [0.1000, 1.0508, 0.8499],
         ...,
         [0.1000, 1.0508, 0.8499],
         [0.1000, 1.0508, 0.8500],
         [0.1000, 1.0508, 0.8499]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.2779],
         [ 0.1000, 10.8051, 18.2632],
         [ 0.1000, 10.8051, 17.4091],
         ...,
         [ 0.1000, 10.8051, 17.6170],
         [ 0.1000, 10.8051, 17.7229],
         [ 0.1000, 10.8051, 17.3007]],
        [[ 0.1000, 10.6368,  9.2888],
         [ 0.1000, 10.6368,  9.0063],
         [ 0.1000, 10.6368,  9.2188],
         ...,
         [ 0.1000, 10.6368,  9.1613],
         [ 0.1000, 10.6368,  9.1336],
         [ 0.1000, 10.6368,  9.2505]],
        [[ 0.1000, 10.6161,  8.6656],
         [ 0.1000, 10.6161,  8.2516],
         [ 0.1000, 10.6161,  8.5211],
         ...,
         [ 0.1000, 10.6161,  8.4490],
         [ 0.1000, 10.6161,  8.4140],
         [ 0.1000, 10.6161,  8.5606]],
        ...,
        [[ 0.1000, 10.5905,  7.9500],
         [ 0.1000, 10.5905,  7.4023],
         [ 0.1000, 10.5905,  7.7281],
         ...,
         [ 0.1000, 10.5905,  7.6414],
         [ 0.1000, 10.5905,  7.5992],
         [ 0.1000, 10.5905,  7.7755]],
        [[ 0.1000, 10.6559,  9.9038],
         [ 0.1000, 10.6559,  9.7642],
         [ 0.1000, 10.6559,  9.9136],
         ...,
         [ 0.1000, 10.6559,  9.8722],
         [ 0.1000, 10.6559,  9.8525],
         [ 0.1000, 10.6559,  9.9366]],
        [[ 0.1000, 10.6981, 11.4090],
         [ 0.1000, 10.6981, 11.6699],
         [ 0.1000, 10.6981, 11.6375],
         ...,
         [ 0.1000, 10.6981, 11.6420],
         [ 0.1000, 10.6981, 11.6453],
         [ 0.1000, 10.6981, 11.6362]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9224],
         [0.1000, 1.0531, 0.9546],
         [0.1000, 1.0531, 0.9407],
         ...,
         [0.1000, 1.0531, 0.9441],
         [0.1000, 1.0531, 0.9459],
         [0.1000, 1.0531, 0.9390]],
        [[0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8041],
         [0.1000, 1.0495, 0.8075],
         ...,
         [0.1000, 1.0495, 0.8066],
         [0.1000, 1.0495, 0.8062],
         [0.1000, 1.0495, 0.8081]],
        [[0.1000, 1.0490, 0.7985],
         [0.1000, 1.0490, 0.7918],
         [0.1000, 1.0490, 0.7962],
         ...,
         [0.1000, 1.0490, 0.7950],
         [0.1000, 1.0490, 0.7944],
         [0.1000, 1.0490, 0.7968]],
        ...,
        [[0.1000, 1.0485, 0.7869],
         [0.1000, 1.0485, 0.7780],
         [0.1000, 1.0485, 0.7833],
         ...,
         [0.1000, 1.0485, 0.7819],
         [0.1000, 1.0485, 0.7812],
         [0.1000, 1.0485, 0.7841]],
        [[0.1000, 1.0499, 0.8187],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8188],
         ...,
         [0.1000, 1.0499, 0.8182],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8192]],
        [[0.1000, 1.0508, 0.8432],
         [0.1000, 1.0508, 0.8474],
         [0.1000, 1.0508, 0.8469],
         ...,
         [0.1000, 1.0508, 0.8470],
         [0.1000, 1.0508, 0.8470],
         [0.1000, 1.0508, 0.8469]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8560],
         [ 0.1000, 10.8051, 19.7648],
         [ 0.1000, 10.8051, 17.1353],
         ...,
         [ 0.1000, 10.8051, 17.7323],
         [ 0.1000, 10.8051, 18.0620],
         [ 0.1000, 10.8051, 16.8536]],
        [[ 0.1000, 10.6368,  9.1106],
         [ 0.1000, 10.6368,  8.7452],
         [ 0.1000, 10.6368,  9.3013],
         ...,
         [ 0.1000, 10.6368,  9.1312],
         [ 0.1000, 10.6368,  9.0511],
         [ 0.1000, 10.6368,  9.3955]],
        [[ 0.1000, 10.6161,  8.4424],
         [ 0.1000, 10.6161,  7.9055],
         [ 0.1000, 10.6161,  8.6238],
         ...,
         [ 0.1000, 10.6161,  8.4110],
         [ 0.1000, 10.6161,  8.3092],
         [ 0.1000, 10.6161,  8.7399]],
        ...,
        [[ 0.1000, 10.5905,  7.6809],
         [ 0.1000, 10.5905,  6.9746],
         [ 0.1000, 10.5905,  7.8510],
         ...,
         [ 0.1000, 10.5905,  7.5956],
         [ 0.1000, 10.5905,  7.4723],
         [ 0.1000, 10.5905,  7.9894]],
        [[ 0.1000, 10.6559,  9.7742],
         [ 0.1000, 10.6559,  9.5993],
         [ 0.1000, 10.6559,  9.9740],
         ...,
         [ 0.1000, 10.6559,  9.8508],
         [ 0.1000, 10.6559,  9.7948],
         [ 0.1000, 10.6559, 10.0444]],
        [[ 0.1000, 10.6981, 11.4149],
         [ 0.1000, 10.6981, 11.7909],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6456],
         [ 0.1000, 10.6981, 11.6592],
         [ 0.1000, 10.6981, 11.6391]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9225],
         [0.1000, 1.0531, 0.9698],
         [0.1000, 1.0531, 0.9270],
         ...,
         [0.1000, 1.0531, 0.9367],
         [0.1000, 1.0531, 0.9421],
         [0.1000, 1.0531, 0.9224]],
        [[0.1000, 1.0495, 0.7965],
         [0.1000, 1.0495, 0.7906],
         [0.1000, 1.0495, 0.7996],
         ...,
         [0.1000, 1.0495, 0.7968],
         [0.1000, 1.0495, 0.7955],
         [0.1000, 1.0495, 0.8011]],
        [[0.1000, 1.0490, 0.7856],
         [0.1000, 1.0490, 0.7769],
         [0.1000, 1.0490, 0.7886],
         ...,
         [0.1000, 1.0490, 0.7851],
         [0.1000, 1.0490, 0.7835],
         [0.1000, 1.0490, 0.7905]],
        ...,
        [[0.1000, 1.0485, 0.7732],
         [0.1000, 1.0485, 0.7618],
         [0.1000, 1.0485, 0.7760],
         ...,
         [0.1000, 1.0485, 0.7719],
         [0.1000, 1.0485, 0.7699],
         [0.1000, 1.0485, 0.7783]],
        [[0.1000, 1.0499, 0.8073],
         [0.1000, 1.0499, 0.8044],
         [0.1000, 1.0499, 0.8105],
         ...,
         [0.1000, 1.0499, 0.8085],
         [0.1000, 1.0499, 0.8076],
         [0.1000, 1.0499, 0.8117]],
        [[0.1000, 1.0508, 0.8340],
         [0.1000, 1.0508, 0.8401],
         [0.1000, 1.0508, 0.8376],
         ...,
         [0.1000, 1.0508, 0.8377],
         [0.1000, 1.0508, 0.8380],
         [0.1000, 1.0508, 0.8376]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.7077],
         [ 0.1000, 10.8051, 18.8918],
         [ 0.1000, 10.8051, 17.3015],
         ...,
         [ 0.1000, 10.8051, 17.6646],
         [ 0.1000, 10.8051, 17.8637],
         [ 0.1000, 10.8051, 17.1315]],
        [[ 0.1000, 10.6368,  9.1500],
         [ 0.1000, 10.6368,  8.8829],
         [ 0.1000, 10.6368,  9.2502],
         ...,
         [ 0.1000, 10.6368,  9.1488],
         [ 0.1000, 10.6368,  9.0983],
         [ 0.1000, 10.6368,  9.3025]],
        [[ 0.1000, 10.6161,  8.4928],
         [ 0.1000, 10.6161,  8.0907],
         [ 0.1000, 10.6161,  8.5603],
         ...,
         [ 0.1000, 10.6161,  8.4332],
         [ 0.1000, 10.6161,  8.3692],
         [ 0.1000, 10.6161,  8.6252]],
        ...,
        [[ 0.1000, 10.5905,  7.7424],
         [ 0.1000, 10.5905,  7.2049],
         [ 0.1000, 10.5905,  7.7752],
         ...,
         [ 0.1000, 10.5905,  7.6223],
         [ 0.1000, 10.5905,  7.5451],
         [ 0.1000, 10.5905,  7.8528]],
        [[ 0.1000, 10.6559,  9.8018],
         [ 0.1000, 10.6559,  9.6829],
         [ 0.1000, 10.6559,  9.9364],
         ...,
         [ 0.1000, 10.6559,  9.8632],
         [ 0.1000, 10.6559,  9.8276],
         [ 0.1000, 10.6559,  9.9749]],
        [[ 0.1000, 10.6981, 11.4092],
         [ 0.1000, 10.6981, 11.7127],
         [ 0.1000, 10.6981, 11.6362],
         ...,
         [ 0.1000, 10.6981, 11.6434],
         [ 0.1000, 10.6981, 11.6504],
         [ 0.1000, 10.6981, 11.6356]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9251],
         [0.1000, 1.0531, 0.9607],
         [0.1000, 1.0531, 0.9348],
         ...,
         [0.1000, 1.0531, 0.9407],
         [0.1000, 1.0531, 0.9439],
         [0.1000, 1.0531, 0.9320]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.7979],
         [0.1000, 1.0495, 0.8038],
         ...,
         [0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8014],
         [0.1000, 1.0495, 0.8047]],
        [[0.1000, 1.0490, 0.7915],
         [0.1000, 1.0490, 0.7850],
         [0.1000, 1.0490, 0.7926],
         ...,
         [0.1000, 1.0490, 0.7905],
         [0.1000, 1.0490, 0.7895],
         [0.1000, 1.0490, 0.7937]],
        ...,
        [[0.1000, 1.0485, 0.7793],
         [0.1000, 1.0485, 0.7706],
         [0.1000, 1.0485, 0.7798],
         ...,
         [0.1000, 1.0485, 0.7774],
         [0.1000, 1.0485, 0.7761],
         [0.1000, 1.0485, 0.7811]],
        [[0.1000, 1.0499, 0.8128],
         [0.1000, 1.0499, 0.8109],
         [0.1000, 1.0499, 0.8150],
         ...,
         [0.1000, 1.0499, 0.8138],
         [0.1000, 1.0499, 0.8132],
         [0.1000, 1.0499, 0.8156]],
        [[0.1000, 1.0508, 0.8389],
         [0.1000, 1.0508, 0.8439],
         [0.1000, 1.0508, 0.8426],
         ...,
         [0.1000, 1.0508, 0.8428],
         [0.1000, 1.0508, 0.8429],
         [0.1000, 1.0508, 0.8426]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8224],
         [ 0.1000, 10.8051, 19.5635],
         [ 0.1000, 10.8051, 17.1719],
         ...,
         [ 0.1000, 10.8051, 17.7171],
         [ 0.1000, 10.8051, 18.0173],
         [ 0.1000, 10.8051, 16.9142]],
        [[ 0.1000, 10.6368,  9.1193],
         [ 0.1000, 10.6368,  8.7740],
         [ 0.1000, 10.6368,  9.2898],
         ...,
         [ 0.1000, 10.6368,  9.1351],
         [ 0.1000, 10.6368,  9.0615],
         [ 0.1000, 10.6368,  9.3743]],
        [[ 0.1000, 10.6161,  8.4536],
         [ 0.1000, 10.6161,  7.9449],
         [ 0.1000, 10.6161,  8.6095],
         ...,
         [ 0.1000, 10.6161,  8.4159],
         [ 0.1000, 10.6161,  8.3224],
         [ 0.1000, 10.6161,  8.7139]],
        ...,
        [[ 0.1000, 10.5905,  7.6945],
         [ 0.1000, 10.5905,  7.0239],
         [ 0.1000, 10.5905,  7.8340],
         ...,
         [ 0.1000, 10.5905,  7.6015],
         [ 0.1000, 10.5905,  7.4884],
         [ 0.1000, 10.5905,  7.9585]],
        [[ 0.1000, 10.6559,  9.7803],
         [ 0.1000, 10.6559,  9.6160],
         [ 0.1000, 10.6559,  9.9655],
         ...,
         [ 0.1000, 10.6559,  9.8535],
         [ 0.1000, 10.6559,  9.8020],
         [ 0.1000, 10.6559, 10.0284]],
        [[ 0.1000, 10.6981, 11.4134],
         [ 0.1000, 10.6981, 11.7712],
         [ 0.1000, 10.6981, 11.6355],
         ...,
         [ 0.1000, 10.6981, 11.6451],
         [ 0.1000, 10.6981, 11.6571],
         [ 0.1000, 10.6981, 11.6378]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9231],
         [0.1000, 1.0531, 0.9677],
         [0.1000, 1.0531, 0.9288],
         ...,
         [0.1000, 1.0531, 0.9377],
         [0.1000, 1.0531, 0.9426],
         [0.1000, 1.0531, 0.9246]],
        [[0.1000, 1.0495, 0.7978],
         [0.1000, 1.0495, 0.7922],
         [0.1000, 1.0495, 0.8006],
         ...,
         [0.1000, 1.0495, 0.7981],
         [0.1000, 1.0495, 0.7969],
         [0.1000, 1.0495, 0.8020]],
        [[0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7787],
         [0.1000, 1.0490, 0.7895],
         ...,
         [0.1000, 1.0490, 0.7864],
         [0.1000, 1.0490, 0.7849],
         [0.1000, 1.0490, 0.7912]],
        ...,
        [[0.1000, 1.0485, 0.7747],
         [0.1000, 1.0485, 0.7638],
         [0.1000, 1.0485, 0.7769],
         ...,
         [0.1000, 1.0485, 0.7731],
         [0.1000, 1.0485, 0.7713],
         [0.1000, 1.0485, 0.7790]],
        [[0.1000, 1.0499, 0.8086],
         [0.1000, 1.0499, 0.8059],
         [0.1000, 1.0499, 0.8116],
         ...,
         [0.1000, 1.0499, 0.8098],
         [0.1000, 1.0499, 0.8089],
         [0.1000, 1.0499, 0.8126]],
        [[0.1000, 1.0508, 0.8351],
         [0.1000, 1.0508, 0.8410],
         [0.1000, 1.0508, 0.8388],
         ...,
         [0.1000, 1.0508, 0.8389],
         [0.1000, 1.0508, 0.8391],
         [0.1000, 1.0508, 0.8388]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.7463],
         [ 0.1000, 10.8051, 19.1149],
         [ 0.1000, 10.8051, 17.2572],
         ...,
         [ 0.1000, 10.8051, 17.6824],
         [ 0.1000, 10.8051, 17.9155],
         [ 0.1000, 10.8051, 17.0566]],
        [[ 0.1000, 10.6368,  9.1395],
         [ 0.1000, 10.6368,  8.8443],
         [ 0.1000, 10.6368,  9.2636],
         ...,
         [ 0.1000, 10.6368,  9.1441],
         [ 0.1000, 10.6368,  9.0856],
         [ 0.1000, 10.6368,  9.3266]],
        [[ 0.1000, 10.6161,  8.4794],
         [ 0.1000, 10.6161,  8.0396],
         [ 0.1000, 10.6161,  8.5769],
         ...,
         [ 0.1000, 10.6161,  8.4273],
         [ 0.1000, 10.6161,  8.3532],
         [ 0.1000, 10.6161,  8.6550]],
        ...,
        [[ 0.1000, 10.5905,  7.7260],
         [ 0.1000, 10.5905,  7.1418],
         [ 0.1000, 10.5905,  7.7950],
         ...,
         [ 0.1000, 10.5905,  7.6152],
         [ 0.1000, 10.5905,  7.5257],
         [ 0.1000, 10.5905,  7.8884]],
        [[ 0.1000, 10.6559,  9.7944],
         [ 0.1000, 10.6559,  9.6587],
         [ 0.1000, 10.6559,  9.9462],
         ...,
         [ 0.1000, 10.6559,  9.8599],
         [ 0.1000, 10.6559,  9.8187],
         [ 0.1000, 10.6559,  9.9927]],
        [[ 0.1000, 10.6981, 11.4105],
         [ 0.1000, 10.6981, 11.7308],
         [ 0.1000, 10.6981, 11.6358],
         ...,
         [ 0.1000, 10.6981, 11.6440],
         [ 0.1000, 10.6981, 11.6525],
         [ 0.1000, 10.6981, 11.6360]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9244],
         [0.1000, 1.0531, 0.9629],
         [0.1000, 1.0531, 0.9327],
         ...,
         [0.1000, 1.0531, 0.9396],
         [0.1000, 1.0531, 0.9434],
         [0.1000, 1.0531, 0.9295]],
        [[0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.7959],
         [0.1000, 1.0495, 0.8027],
         ...,
         [0.1000, 1.0495, 0.8008],
         [0.1000, 1.0495, 0.7998],
         [0.1000, 1.0495, 0.8037]],
        [[0.1000, 1.0490, 0.7899],
         [0.1000, 1.0490, 0.7828],
         [0.1000, 1.0490, 0.7915],
         ...,
         [0.1000, 1.0490, 0.7891],
         [0.1000, 1.0490, 0.7879],
         [0.1000, 1.0490, 0.7928]],
        ...,
        [[0.1000, 1.0485, 0.7777],
         [0.1000, 1.0485, 0.7682],
         [0.1000, 1.0485, 0.7788],
         ...,
         [0.1000, 1.0485, 0.7759],
         [0.1000, 1.0485, 0.7744],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8113],
         [0.1000, 1.0499, 0.8091],
         [0.1000, 1.0499, 0.8138],
         ...,
         [0.1000, 1.0499, 0.8124],
         [0.1000, 1.0499, 0.8117],
         [0.1000, 1.0499, 0.8146]],
        [[0.1000, 1.0508, 0.8376],
         [0.1000, 1.0508, 0.8428],
         [0.1000, 1.0508, 0.8413],
         ...,
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8416],
         [0.1000, 1.0508, 0.8413]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.6340],
         [ 0.1000, 10.8051, 17.5410],
         [ 0.1000, 10.8051, 17.5622],
         ...,
         [ 0.1000, 10.8051, 17.5607],
         [ 0.1000, 10.8051, 17.5603],
         [ 0.1000, 10.8051, 17.5714]],
        [[ 0.1000, 10.6368,  9.1710],
         [ 0.1000, 10.6368,  9.1819],
         [ 0.1000, 10.6368,  9.1761],
         ...,
         [ 0.1000, 10.6368,  9.1765],
         [ 0.1000, 10.6368,  9.1766],
         [ 0.1000, 10.6368,  9.1736]],
        [[ 0.1000, 10.6161,  8.5194],
         [ 0.1000, 10.6161,  8.4749],
         [ 0.1000, 10.6161,  8.4676],
         ...,
         [ 0.1000, 10.6161,  8.4681],
         [ 0.1000, 10.6161,  8.4682],
         [ 0.1000, 10.6161,  8.4644]],
        ...,
        [[ 0.1000, 10.5905,  7.7746],
         [ 0.1000, 10.5905,  7.6725],
         [ 0.1000, 10.5905,  7.6638],
         ...,
         [ 0.1000, 10.5905,  7.6644],
         [ 0.1000, 10.5905,  7.6645],
         [ 0.1000, 10.5905,  7.6600]],
        [[ 0.1000, 10.6559,  9.8168],
         [ 0.1000, 10.6559,  9.8869],
         [ 0.1000, 10.6559,  9.8827],
         ...,
         [ 0.1000, 10.6559,  9.8830],
         [ 0.1000, 10.6559,  9.8831],
         [ 0.1000, 10.6559,  9.8810]],
        [[ 0.1000, 10.6981, 11.4072],
         [ 0.1000, 10.6981, 11.6401],
         [ 0.1000, 10.6981, 11.6406],
         ...,
         [ 0.1000, 10.6981, 11.6406],
         [ 0.1000, 10.6981, 11.6406],
         [ 0.1000, 10.6981, 11.6408]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9337],
         [0.1000, 1.0531, 0.9484],
         [0.1000, 1.0531, 0.9487],
         ...,
         [0.1000, 1.0531, 0.9487],
         [0.1000, 1.0531, 0.9487],
         [0.1000, 1.0531, 0.9489]],
        [[0.1000, 1.0495, 0.8123],
         [0.1000, 1.0495, 0.8124],
         [0.1000, 1.0495, 0.8124],
         ...,
         [0.1000, 1.0495, 0.8124],
         [0.1000, 1.0495, 0.8124],
         [0.1000, 1.0495, 0.8123]],
        [[0.1000, 1.0490, 0.8017],
         [0.1000, 1.0490, 0.8009],
         [0.1000, 1.0490, 0.8008],
         ...,
         [0.1000, 1.0490, 0.8008],
         [0.1000, 1.0490, 0.8008],
         [0.1000, 1.0490, 0.8008]],
        ...,
        [[0.1000, 1.0485, 0.7896],
         [0.1000, 1.0485, 0.7879],
         [0.1000, 1.0485, 0.7878],
         ...,
         [0.1000, 1.0485, 0.7878],
         [0.1000, 1.0485, 0.7878],
         [0.1000, 1.0485, 0.7877]],
        [[0.1000, 1.0499, 0.8228],
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8238],
         ...,
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8238]],
        [[0.1000, 1.0508, 0.8486],
         [0.1000, 1.0508, 0.8524],
         [0.1000, 1.0508, 0.8524],
         ...,
         [0.1000, 1.0508, 0.8524],
         [0.1000, 1.0508, 0.8524],
         [0.1000, 1.0508, 0.8524]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.7795],
         [ 0.1000, 10.8051, 19.1502],
         [ 0.1000, 10.8051, 17.2440],
         ...,
         [ 0.1000, 10.8051, 17.6873],
         [ 0.1000, 10.8051, 17.9289],
         [ 0.1000, 10.8051, 17.0335]],
        [[ 0.1000, 10.6368,  9.1306],
         [ 0.1000, 10.6368,  8.8385],
         [ 0.1000, 10.6368,  9.2675],
         ...,
         [ 0.1000, 10.6368,  9.1428],
         [ 0.1000, 10.6368,  9.0824],
         [ 0.1000, 10.6368,  9.3341]],
        [[ 0.1000, 10.6161,  8.4680],
         [ 0.1000, 10.6161,  8.0317],
         [ 0.1000, 10.6161,  8.5819],
         ...,
         [ 0.1000, 10.6161,  8.4257],
         [ 0.1000, 10.6161,  8.3491],
         [ 0.1000, 10.6161,  8.6644]],
        ...,
        [[ 0.1000, 10.5905,  7.7122],
         [ 0.1000, 10.5905,  7.1320],
         [ 0.1000, 10.5905,  7.8009],
         ...,
         [ 0.1000, 10.5905,  7.6133],
         [ 0.1000, 10.5905,  7.5207],
         [ 0.1000, 10.5905,  7.8995]],
        [[ 0.1000, 10.6559,  9.7882],
         [ 0.1000, 10.6559,  9.6550],
         [ 0.1000, 10.6559,  9.9491],
         ...,
         [ 0.1000, 10.6559,  9.8590],
         [ 0.1000, 10.6559,  9.8165],
         [ 0.1000, 10.6559,  9.9984]],
        [[ 0.1000, 10.6981, 11.4117],
         [ 0.1000, 10.6981, 11.7338],
         [ 0.1000, 10.6981, 11.6358],
         ...,
         [ 0.1000, 10.6981, 11.6441],
         [ 0.1000, 10.6981, 11.6531],
         [ 0.1000, 10.6981, 11.6362]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9247],
         [0.1000, 1.0531, 0.9633],
         [0.1000, 1.0531, 0.9323],
         ...,
         [0.1000, 1.0531, 0.9395],
         [0.1000, 1.0531, 0.9434],
         [0.1000, 1.0531, 0.9289]],
        [[0.1000, 1.0495, 0.8003],
         [0.1000, 1.0495, 0.7956],
         [0.1000, 1.0495, 0.8026],
         ...,
         [0.1000, 1.0495, 0.8005],
         [0.1000, 1.0495, 0.7995],
         [0.1000, 1.0495, 0.8036]],
        [[0.1000, 1.0490, 0.7896],
         [0.1000, 1.0490, 0.7825],
         [0.1000, 1.0490, 0.7914],
         ...,
         [0.1000, 1.0490, 0.7889],
         [0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7927]],
        ...,
        [[0.1000, 1.0485, 0.7773],
         [0.1000, 1.0485, 0.7678],
         [0.1000, 1.0485, 0.7787],
         ...,
         [0.1000, 1.0485, 0.7757],
         [0.1000, 1.0485, 0.7741],
         [0.1000, 1.0485, 0.7803]],
        [[0.1000, 1.0499, 0.8110],
         [0.1000, 1.0499, 0.8089],
         [0.1000, 1.0499, 0.8136],
         ...,
         [0.1000, 1.0499, 0.8122],
         [0.1000, 1.0499, 0.8115],
         [0.1000, 1.0499, 0.8144]],
        [[0.1000, 1.0508, 0.8374],
         [0.1000, 1.0508, 0.8427],
         [0.1000, 1.0508, 0.8411],
         ...,
         [0.1000, 1.0508, 0.8412],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8411]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8006],
         [ 0.1000, 10.8051, 19.4021],
         [ 0.1000, 10.8051, 17.2008],
         ...,
         [ 0.1000, 10.8051, 17.7052],
         [ 0.1000, 10.8051, 17.9821],
         [ 0.1000, 10.8051, 16.9621]],
        [[ 0.1000, 10.6368,  9.1250],
         [ 0.1000, 10.6368,  8.7982],
         [ 0.1000, 10.6368,  9.2808],
         ...,
         [ 0.1000, 10.6368,  9.1382],
         [ 0.1000, 10.6368,  9.0697],
         [ 0.1000, 10.6368,  9.3580]],
        [[ 0.1000, 10.6161,  8.4609],
         [ 0.1000, 10.6161,  7.9778],
         [ 0.1000, 10.6161,  8.5984],
         ...,
         [ 0.1000, 10.6161,  8.4198],
         [ 0.1000, 10.6161,  8.3330],
         [ 0.1000, 10.6161,  8.6938]],
        ...,
        [[ 0.1000, 10.5905,  7.7035],
         [ 0.1000, 10.5905,  7.0650],
         [ 0.1000, 10.5905,  7.8207],
         ...,
         [ 0.1000, 10.5905,  7.6062],
         [ 0.1000, 10.5905,  7.5012],
         [ 0.1000, 10.5905,  7.9345]],
        [[ 0.1000, 10.6559,  9.7843],
         [ 0.1000, 10.6559,  9.6305],
         [ 0.1000, 10.6559,  9.9589],
         ...,
         [ 0.1000, 10.6559,  9.8557],
         [ 0.1000, 10.6559,  9.8077],
         [ 0.1000, 10.6559, 10.0162]],
        [[ 0.1000, 10.6981, 11.4125],
         [ 0.1000, 10.6981, 11.7561],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6447],
         [ 0.1000, 10.6981, 11.6554],
         [ 0.1000, 10.6981, 11.6370]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9236],
         [0.1000, 1.0531, 0.9660],
         [0.1000, 1.0531, 0.9302],
         ...,
         [0.1000, 1.0531, 0.9384],
         [0.1000, 1.0531, 0.9429],
         [0.1000, 1.0531, 0.9263]],
        [[0.1000, 1.0495, 0.7988],
         [0.1000, 1.0495, 0.7935],
         [0.1000, 1.0495, 0.8013],
         ...,
         [0.1000, 1.0495, 0.7990],
         [0.1000, 1.0495, 0.7979],
         [0.1000, 1.0495, 0.8026]],
        [[0.1000, 1.0490, 0.7880],
         [0.1000, 1.0490, 0.7801],
         [0.1000, 1.0490, 0.7902],
         ...,
         [0.1000, 1.0490, 0.7873],
         [0.1000, 1.0490, 0.7859],
         [0.1000, 1.0490, 0.7918]],
        ...,
        [[0.1000, 1.0485, 0.7757],
         [0.1000, 1.0485, 0.7653],
         [0.1000, 1.0485, 0.7776],
         ...,
         [0.1000, 1.0485, 0.7741],
         [0.1000, 1.0485, 0.7724],
         [0.1000, 1.0485, 0.7794]],
        [[0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8070],
         [0.1000, 1.0499, 0.8124],
         ...,
         [0.1000, 1.0499, 0.8107],
         [0.1000, 1.0499, 0.8099],
         [0.1000, 1.0499, 0.8133]],
        [[0.1000, 1.0508, 0.8360],
         [0.1000, 1.0508, 0.8416],
         [0.1000, 1.0508, 0.8396],
         ...,
         [0.1000, 1.0508, 0.8398],
         [0.1000, 1.0508, 0.8400],
         [0.1000, 1.0508, 0.8397]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8047],
         [ 0.1000, 10.8051, 19.4515],
         [ 0.1000, 10.8051, 17.1925],
         ...,
         [ 0.1000, 10.8051, 17.7087],
         [ 0.1000, 10.8051, 17.9924],
         [ 0.1000, 10.8051, 16.9484]],
        [[ 0.1000, 10.6368,  9.1239],
         [ 0.1000, 10.6368,  8.7907],
         [ 0.1000, 10.6368,  9.2834],
         ...,
         [ 0.1000, 10.6368,  9.1373],
         [ 0.1000, 10.6368,  9.0673],
         [ 0.1000, 10.6368,  9.3626]],
        [[ 0.1000, 10.6161,  8.4595],
         [ 0.1000, 10.6161,  7.9676],
         [ 0.1000, 10.6161,  8.6015],
         ...,
         [ 0.1000, 10.6161,  8.4187],
         [ 0.1000, 10.6161,  8.3299],
         [ 0.1000, 10.6161,  8.6995]],
        ...,
        [[ 0.1000, 10.5905,  7.7018],
         [ 0.1000, 10.5905,  7.0523],
         [ 0.1000, 10.5905,  7.8245],
         ...,
         [ 0.1000, 10.5905,  7.6048],
         [ 0.1000, 10.5905,  7.4974],
         [ 0.1000, 10.5905,  7.9413]],
        [[ 0.1000, 10.6559,  9.7835],
         [ 0.1000, 10.6559,  9.6260],
         [ 0.1000, 10.6559,  9.9608],
         ...,
         [ 0.1000, 10.6559,  9.8551],
         [ 0.1000, 10.6559,  9.8060],
         [ 0.1000, 10.6559, 10.0197]],
        [[ 0.1000, 10.6981, 11.4127],
         [ 0.1000, 10.6981, 11.7607],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6559],
         [ 0.1000, 10.6981, 11.6372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9665],
         [0.1000, 1.0531, 0.9297],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9258]],
        [[0.1000, 1.0495, 0.7985],
         [0.1000, 1.0495, 0.7931],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7976],
         [0.1000, 1.0495, 0.8024]],
        [[0.1000, 1.0490, 0.7877],
         [0.1000, 1.0490, 0.7797],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7856],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7754],
         [0.1000, 1.0485, 0.7648],
         [0.1000, 1.0485, 0.7774],
         ...,
         [0.1000, 1.0485, 0.7738],
         [0.1000, 1.0485, 0.7721],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8067],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8104],
         [0.1000, 1.0499, 0.8096],
         [0.1000, 1.0499, 0.8131]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8394],
         ...,
         [0.1000, 1.0508, 0.8395],
         [0.1000, 1.0508, 0.8397],
         [0.1000, 1.0508, 0.8394]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8055],
         [ 0.1000, 10.8051, 19.4616],
         [ 0.1000, 10.8051, 17.1908],
         ...,
         [ 0.1000, 10.8051, 17.7094],
         [ 0.1000, 10.8051, 17.9945],
         [ 0.1000, 10.8051, 16.9456]],
        [[ 0.1000, 10.6368,  9.1237],
         [ 0.1000, 10.6368,  8.7892],
         [ 0.1000, 10.6368,  9.2839],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0668],
         [ 0.1000, 10.6368,  9.3636]],
        [[ 0.1000, 10.6161,  8.4593],
         [ 0.1000, 10.6161,  7.9655],
         [ 0.1000, 10.6161,  8.6022],
         ...,
         [ 0.1000, 10.6161,  8.4185],
         [ 0.1000, 10.6161,  8.3292],
         [ 0.1000, 10.6161,  8.7007]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0497],
         [ 0.1000, 10.5905,  7.8253],
         ...,
         [ 0.1000, 10.5905,  7.6046],
         [ 0.1000, 10.5905,  7.4966],
         [ 0.1000, 10.5905,  7.9427]],
        [[ 0.1000, 10.6559,  9.7834],
         [ 0.1000, 10.6559,  9.6251],
         [ 0.1000, 10.6559,  9.9612],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0204]],
        [[ 0.1000, 10.6981, 11.4127],
         [ 0.1000, 10.6981, 11.7616],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9297],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7985],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8024]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8104],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8395],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4637],
         [ 0.1000, 10.8051, 17.1904],
         ...,
         [ 0.1000, 10.8051, 17.7095],
         [ 0.1000, 10.8051, 17.9950],
         [ 0.1000, 10.8051, 16.9450]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9651],
         [ 0.1000, 10.6161,  8.6023],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7009]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0491],
         [ 0.1000, 10.5905,  7.8254],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4965],
         [ 0.1000, 10.5905,  7.9430]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6249],
         [ 0.1000, 10.6559,  9.9612],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0205]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7618],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8024]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8395],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4642],
         [ 0.1000, 10.8051, 17.1904],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9650],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0205]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8842],
         [ 0.1000, 10.8051, 18.6444],
         [ 0.1000, 10.8051, 17.3500],
         ...,
         [ 0.1000, 10.8051, 17.6455],
         [ 0.1000, 10.8051, 17.8065],
         [ 0.1000, 10.8051, 17.2074]],
        [[ 0.1000, 10.6368,  9.1035],
         [ 0.1000, 10.6368,  8.9287],
         [ 0.1000, 10.6368,  9.2359],
         ...,
         [ 0.1000, 10.6368,  9.1538],
         [ 0.1000, 10.6368,  9.1124],
         [ 0.1000, 10.6368,  9.2788]],
        [[ 0.1000, 10.6161,  8.4333],
         [ 0.1000, 10.6161,  8.1509],
         [ 0.1000, 10.6161,  8.5425],
         ...,
         [ 0.1000, 10.6161,  8.4395],
         [ 0.1000, 10.6161,  8.3872],
         [ 0.1000, 10.6161,  8.5958]],
        ...,
        [[ 0.1000, 10.5905,  7.6697],
         [ 0.1000, 10.5905,  7.2790],
         [ 0.1000, 10.5905,  7.7538],
         ...,
         [ 0.1000, 10.5905,  7.6299],
         [ 0.1000, 10.5905,  7.5668],
         [ 0.1000, 10.5905,  7.8176]],
        [[ 0.1000, 10.6559,  9.7694],
         [ 0.1000, 10.6559,  9.7125],
         [ 0.1000, 10.6559,  9.9260],
         ...,
         [ 0.1000, 10.6559,  9.8668],
         [ 0.1000, 10.6559,  9.8375],
         [ 0.1000, 10.6559,  9.9574]],
        [[ 0.1000, 10.6981, 11.4162],
         [ 0.1000, 10.6981, 11.6942],
         [ 0.1000, 10.6981, 11.6367],
         ...,
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 11.6482],
         [ 0.1000, 10.6981, 11.6356]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9296],
         [0.1000, 1.0531, 0.9582],
         [0.1000, 1.0531, 0.9372],
         ...,
         [0.1000, 1.0531, 0.9420],
         [0.1000, 1.0531, 0.9446],
         [0.1000, 1.0531, 0.9348]],
        [[0.1000, 1.0495, 0.8030],
         [0.1000, 1.0495, 0.8002],
         [0.1000, 1.0495, 0.8052],
         ...,
         [0.1000, 1.0495, 0.8038],
         [0.1000, 1.0495, 0.8032],
         [0.1000, 1.0495, 0.8059]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7875],
         [0.1000, 1.0490, 0.7939],
         ...,
         [0.1000, 1.0490, 0.7922],
         [0.1000, 1.0490, 0.7914],
         [0.1000, 1.0490, 0.7948]],
        ...,
        [[0.1000, 1.0485, 0.7797],
         [0.1000, 1.0485, 0.7734],
         [0.1000, 1.0485, 0.7811],
         ...,
         [0.1000, 1.0485, 0.7791],
         [0.1000, 1.0485, 0.7780],
         [0.1000, 1.0485, 0.7821]],
        [[0.1000, 1.0499, 0.8139],
         [0.1000, 1.0499, 0.8129],
         [0.1000, 1.0499, 0.8164],
         ...,
         [0.1000, 1.0499, 0.8154],
         [0.1000, 1.0499, 0.8150],
         [0.1000, 1.0499, 0.8169]],
        [[0.1000, 1.0508, 0.8406],
         [0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8442],
         ...,
         [0.1000, 1.0508, 0.8443],
         [0.1000, 1.0508, 0.8444],
         [0.1000, 1.0508, 0.8442]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8194],
         [ 0.1000, 10.8051, 19.3142],
         [ 0.1000, 10.8051, 17.2182],
         ...,
         [ 0.1000, 10.8051, 17.6982],
         [ 0.1000, 10.8051, 17.9614],
         [ 0.1000, 10.8051, 16.9903]],
        [[ 0.1000, 10.6368,  9.1200],
         [ 0.1000, 10.6368,  8.8120],
         [ 0.1000, 10.6368,  9.2754],
         ...,
         [ 0.1000, 10.6368,  9.1400],
         [ 0.1000, 10.6368,  9.0746],
         [ 0.1000, 10.6368,  9.3485]],
        [[ 0.1000, 10.6161,  8.4546],
         [ 0.1000, 10.6161,  7.9962],
         [ 0.1000, 10.6161,  8.5917],
         ...,
         [ 0.1000, 10.6161,  8.4221],
         [ 0.1000, 10.6161,  8.3392],
         [ 0.1000, 10.6161,  8.6821]],
        ...,
        [[ 0.1000, 10.5905,  7.6957],
         [ 0.1000, 10.5905,  7.0880],
         [ 0.1000, 10.5905,  7.8127],
         ...,
         [ 0.1000, 10.5905,  7.6090],
         [ 0.1000, 10.5905,  7.5087],
         [ 0.1000, 10.5905,  7.9206]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.6388],
         [ 0.1000, 10.6559,  9.9549],
         ...,
         [ 0.1000, 10.6559,  9.8570],
         [ 0.1000, 10.6559,  9.8111],
         [ 0.1000, 10.6559, 10.0091]],
        [[ 0.1000, 10.6981, 11.4133],
         [ 0.1000, 10.6981, 11.7482],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6444],
         [ 0.1000, 10.6981, 11.6545],
         [ 0.1000, 10.6981, 11.6366]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9244],
         [0.1000, 1.0531, 0.9650],
         [0.1000, 1.0531, 0.9309],
         ...,
         [0.1000, 1.0531, 0.9387],
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9272]],
        [[0.1000, 1.0495, 0.7992],
         [0.1000, 1.0495, 0.7942],
         [0.1000, 1.0495, 0.8017],
         ...,
         [0.1000, 1.0495, 0.7995],
         [0.1000, 1.0495, 0.7985],
         [0.1000, 1.0495, 0.8029]],
        [[0.1000, 1.0490, 0.7884],
         [0.1000, 1.0490, 0.7809],
         [0.1000, 1.0490, 0.7906],
         ...,
         [0.1000, 1.0490, 0.7879],
         [0.1000, 1.0490, 0.7865],
         [0.1000, 1.0490, 0.7921]],
        ...,
        [[0.1000, 1.0485, 0.7761],
         [0.1000, 1.0485, 0.7662],
         [0.1000, 1.0485, 0.7780],
         ...,
         [0.1000, 1.0485, 0.7746],
         [0.1000, 1.0485, 0.7730],
         [0.1000, 1.0485, 0.7797]],
        [[0.1000, 1.0499, 0.8100],
         [0.1000, 1.0499, 0.8077],
         [0.1000, 1.0499, 0.8128],
         ...,
         [0.1000, 1.0499, 0.8112],
         [0.1000, 1.0499, 0.8105],
         [0.1000, 1.0499, 0.8137]],
        [[0.1000, 1.0508, 0.8365],
         [0.1000, 1.0508, 0.8420],
         [0.1000, 1.0508, 0.8401],
         ...,
         [0.1000, 1.0508, 0.8403],
         [0.1000, 1.0508, 0.8404],
         [0.1000, 1.0508, 0.8401]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8085],
         [ 0.1000, 10.8051, 19.4341],
         [ 0.1000, 10.8051, 17.1959],
         ...,
         [ 0.1000, 10.8051, 17.7073],
         [ 0.1000, 10.8051, 17.9883],
         [ 0.1000, 10.8051, 16.9539]],
        [[ 0.1000, 10.6368,  9.1229],
         [ 0.1000, 10.6368,  8.7934],
         [ 0.1000, 10.6368,  9.2823],
         ...,
         [ 0.1000, 10.6368,  9.1376],
         [ 0.1000, 10.6368,  9.0683],
         [ 0.1000, 10.6368,  9.3607]],
        [[ 0.1000, 10.6161,  8.4583],
         [ 0.1000, 10.6161,  7.9711],
         [ 0.1000, 10.6161,  8.6002],
         ...,
         [ 0.1000, 10.6161,  8.4191],
         [ 0.1000, 10.6161,  8.3311],
         [ 0.1000, 10.6161,  8.6972]],
        ...,
        [[ 0.1000, 10.5905,  7.7002],
         [ 0.1000, 10.5905,  7.0567],
         [ 0.1000, 10.5905,  7.8229],
         ...,
         [ 0.1000, 10.5905,  7.6054],
         [ 0.1000, 10.5905,  7.4989],
         [ 0.1000, 10.5905,  7.9386]],
        [[ 0.1000, 10.6559,  9.7828],
         [ 0.1000, 10.6559,  9.6276],
         [ 0.1000, 10.6559,  9.9600],
         ...,
         [ 0.1000, 10.6559,  9.8553],
         [ 0.1000, 10.6559,  9.8067],
         [ 0.1000, 10.6559, 10.0183]],
        [[ 0.1000, 10.6981, 11.4129],
         [ 0.1000, 10.6981, 11.7591],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6447],
         [ 0.1000, 10.6981, 11.6557],
         [ 0.1000, 10.6981, 11.6372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9236],
         [0.1000, 1.0531, 0.9663],
         [0.1000, 1.0531, 0.9299],
         ...,
         [0.1000, 1.0531, 0.9382],
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9260]],
        [[0.1000, 1.0495, 0.7986],
         [0.1000, 1.0495, 0.7932],
         [0.1000, 1.0495, 0.8012],
         ...,
         [0.1000, 1.0495, 0.7988],
         [0.1000, 1.0495, 0.7977],
         [0.1000, 1.0495, 0.8025]],
        [[0.1000, 1.0490, 0.7878],
         [0.1000, 1.0490, 0.7799],
         [0.1000, 1.0490, 0.7901],
         ...,
         [0.1000, 1.0490, 0.7871],
         [0.1000, 1.0490, 0.7857],
         [0.1000, 1.0490, 0.7917]],
        ...,
        [[0.1000, 1.0485, 0.7755],
         [0.1000, 1.0485, 0.7650],
         [0.1000, 1.0485, 0.7775],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7722],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8093],
         [0.1000, 1.0499, 0.8068],
         [0.1000, 1.0499, 0.8122],
         ...,
         [0.1000, 1.0499, 0.8105],
         [0.1000, 1.0499, 0.8097],
         [0.1000, 1.0499, 0.8132]],
        [[0.1000, 1.0508, 0.8358],
         [0.1000, 1.0508, 0.8415],
         [0.1000, 1.0508, 0.8395],
         ...,
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8398],
         [0.1000, 1.0508, 0.8395]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8063],
         [ 0.1000, 10.8051, 19.4581],
         [ 0.1000, 10.8051, 17.1915],
         ...,
         [ 0.1000, 10.8051, 17.7091],
         [ 0.1000, 10.8051, 17.9937],
         [ 0.1000, 10.8051, 16.9467]],
        [[ 0.1000, 10.6368,  9.1235],
         [ 0.1000, 10.6368,  8.7897],
         [ 0.1000, 10.6368,  9.2837],
         ...,
         [ 0.1000, 10.6368,  9.1372],
         [ 0.1000, 10.6368,  9.0670],
         [ 0.1000, 10.6368,  9.3632]],
        [[ 0.1000, 10.6161,  8.4590],
         [ 0.1000, 10.6161,  7.9662],
         [ 0.1000, 10.6161,  8.6019],
         ...,
         [ 0.1000, 10.6161,  8.4185],
         [ 0.1000, 10.6161,  8.3295],
         [ 0.1000, 10.6161,  8.7002]],
        ...,
        [[ 0.1000, 10.5905,  7.7011],
         [ 0.1000, 10.5905,  7.0506],
         [ 0.1000, 10.5905,  7.8249],
         ...,
         [ 0.1000, 10.5905,  7.6047],
         [ 0.1000, 10.5905,  7.4969],
         [ 0.1000, 10.5905,  7.9422]],
        [[ 0.1000, 10.6559,  9.7832],
         [ 0.1000, 10.6559,  9.6254],
         [ 0.1000, 10.6559,  9.9610],
         ...,
         [ 0.1000, 10.6559,  9.8550],
         [ 0.1000, 10.6559,  9.8058],
         [ 0.1000, 10.6559, 10.0201]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7613],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9297],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7985],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7976],
         [0.1000, 1.0495, 0.8024]],
        [[0.1000, 1.0490, 0.7877],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7856],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7648],
         [0.1000, 1.0485, 0.7774],
         ...,
         [0.1000, 1.0485, 0.7738],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8104],
         [0.1000, 1.0499, 0.8096],
         [0.1000, 1.0499, 0.8131]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8395],
         [0.1000, 1.0508, 0.8397],
         [0.1000, 1.0508, 0.8394]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8058],
         [ 0.1000, 10.8051, 19.4630],
         [ 0.1000, 10.8051, 17.1906],
         ...,
         [ 0.1000, 10.8051, 17.7095],
         [ 0.1000, 10.8051, 17.9948],
         [ 0.1000, 10.8051, 16.9452]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7890],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0668],
         [ 0.1000, 10.6368,  9.3637]],
        [[ 0.1000, 10.6161,  8.4591],
         [ 0.1000, 10.6161,  7.9652],
         [ 0.1000, 10.6161,  8.6023],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3292],
         [ 0.1000, 10.6161,  8.7008]],
        ...,
        [[ 0.1000, 10.5905,  7.7013],
         [ 0.1000, 10.5905,  7.0493],
         [ 0.1000, 10.5905,  7.8254],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4965],
         [ 0.1000, 10.5905,  7.9429]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6249],
         [ 0.1000, 10.6559,  9.9612],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0205]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7618],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9297],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8024]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8395],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4640],
         [ 0.1000, 10.8051, 17.1904],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9950],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9650],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7009]],
        ...,
        [[ 0.1000, 10.5905,  7.7013],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8254],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4965],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9612],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0205]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7618],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4642],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9650],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8057],
         [ 0.1000, 10.8051, 19.4643],
         [ 0.1000, 10.8051, 17.1903],
         ...,
         [ 0.1000, 10.8051, 17.7096],
         [ 0.1000, 10.8051, 17.9951],
         [ 0.1000, 10.8051, 16.9449]],
        [[ 0.1000, 10.6368,  9.1236],
         [ 0.1000, 10.6368,  8.7888],
         [ 0.1000, 10.6368,  9.2840],
         ...,
         [ 0.1000, 10.6368,  9.1371],
         [ 0.1000, 10.6368,  9.0667],
         [ 0.1000, 10.6368,  9.3638]],
        [[ 0.1000, 10.6161,  8.4592],
         [ 0.1000, 10.6161,  7.9649],
         [ 0.1000, 10.6161,  8.6024],
         ...,
         [ 0.1000, 10.6161,  8.4184],
         [ 0.1000, 10.6161,  8.3291],
         [ 0.1000, 10.6161,  8.7010]],
        ...,
        [[ 0.1000, 10.5905,  7.7014],
         [ 0.1000, 10.5905,  7.0490],
         [ 0.1000, 10.5905,  7.8255],
         ...,
         [ 0.1000, 10.5905,  7.6045],
         [ 0.1000, 10.5905,  7.4964],
         [ 0.1000, 10.5905,  7.9431]],
        [[ 0.1000, 10.6559,  9.7833],
         [ 0.1000, 10.6559,  9.6248],
         [ 0.1000, 10.6559,  9.9613],
         ...,
         [ 0.1000, 10.6559,  9.8549],
         [ 0.1000, 10.6559,  9.8056],
         [ 0.1000, 10.6559, 10.0206]],
        [[ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.7619],
         [ 0.1000, 10.6981, 11.6356],
         ...,
         [ 0.1000, 10.6981, 11.6448],
         [ 0.1000, 10.6981, 11.6560],
         [ 0.1000, 10.6981, 11.6373]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9234],
         [0.1000, 1.0531, 0.9666],
         [0.1000, 1.0531, 0.9296],
         ...,
         [0.1000, 1.0531, 0.9381],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9257]],
        [[0.1000, 1.0495, 0.7984],
         [0.1000, 1.0495, 0.7930],
         [0.1000, 1.0495, 0.8011],
         ...,
         [0.1000, 1.0495, 0.7987],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8023]],
        [[0.1000, 1.0490, 0.7876],
         [0.1000, 1.0490, 0.7796],
         [0.1000, 1.0490, 0.7900],
         ...,
         [0.1000, 1.0490, 0.7870],
         [0.1000, 1.0490, 0.7855],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7647],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7737],
         [0.1000, 1.0485, 0.7720],
         [0.1000, 1.0485, 0.7792]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8121],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8095],
         [0.1000, 1.0499, 0.8130]],
        [[0.1000, 1.0508, 0.8357],
         [0.1000, 1.0508, 0.8414],
         [0.1000, 1.0508, 0.8393],
         ...,
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8393]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 23.2544],
         [ 0.1000, 10.8051, 24.4542],
         [ 0.1000, 10.8051, 19.7462],
         ...,
         [ 0.1000, 10.8051, 16.1753],
         [ 0.1000, 10.8051, 26.6285],
         [ 0.1000, 10.8051, 18.7053]],
        [[ 0.1000, 10.6368, 14.1101],
         [ 0.1000, 10.6368, 14.9121],
         [ 0.1000, 10.6368, 13.0037],
         ...,
         [ 0.1000, 10.6368,  9.3234],
         [ 0.1000, 10.6368, 16.3088],
         [ 0.1000, 10.6368,  8.8316]],
        [[ 0.1000, 10.6161, 13.2639],
         [ 0.1000, 10.6161, 14.0264],
         [ 0.1000, 10.6161, 12.3484],
         ...,
         [ 0.1000, 10.6161,  8.7087],
         [ 0.1000, 10.6161, 15.3485],
         [ 0.1000, 10.6161,  8.0481]],
        ...,
        [[ 0.1000, 10.5905, 12.2838],
         [ 0.1000, 10.5905, 12.9999],
         [ 0.1000, 10.5905, 11.5807],
         ...,
         [ 0.1000, 10.5905,  8.0018],
         [ 0.1000, 10.5905, 14.2348],
         [ 0.1000, 10.5905,  7.1716]],
        [[ 0.1000, 10.6559, 14.9392],
         [ 0.1000, 10.6559, 15.7793],
         [ 0.1000, 10.6559, 13.6396],
         ...,
         [ 0.1000, 10.6559,  9.9293],
         [ 0.1000, 10.6559, 17.2487],
         [ 0.1000, 10.6559,  9.6225]],
        [[ 0.1000, 10.6981, 16.9452],
         [ 0.1000, 10.6981, 17.8757],
         [ 0.1000, 10.6981, 15.1549],
         ...,
         [ 0.1000, 10.6981, 11.4094],
         [ 0.1000, 10.6981, 19.5189],
         [ 0.1000, 10.6981, 11.6275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 1.0314],
         [0.1000, 1.0531, 1.0509],
         [0.1000, 1.0531, 0.9744],
         ...,
         [0.1000, 1.0531, 0.9163],
         [0.1000, 1.0531, 1.0863],
         [0.1000, 1.0531, 0.9574]],
        [[0.1000, 1.0495, 0.8827],
         [0.1000, 1.0495, 0.8957],
         [0.1000, 1.0495, 0.8647],
         ...,
         [0.1000, 1.0495, 0.8048],
         [0.1000, 1.0495, 0.9184],
         [0.1000, 1.0495, 0.7968]],
        [[0.1000, 1.0490, 0.8689],
         [0.1000, 1.0490, 0.8813],
         [0.1000, 1.0490, 0.8540],
         ...,
         [0.1000, 1.0490, 0.7948],
         [0.1000, 1.0490, 0.9028],
         [0.1000, 1.0490, 0.7841]],
        ...,
        [[0.1000, 1.0485, 0.8530],
         [0.1000, 1.0485, 0.8646],
         [0.1000, 1.0485, 0.8415],
         ...,
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.8847],
         [0.1000, 1.0485, 0.7698]],
        [[0.1000, 1.0499, 0.8962],
         [0.1000, 1.0499, 0.9098],
         [0.1000, 1.0499, 0.8750],
         ...,
         [0.1000, 1.0499, 0.8147],
         [0.1000, 1.0499, 0.9337],
         [0.1000, 1.0499, 0.8097]],
        [[0.1000, 1.0508, 0.9288],
         [0.1000, 1.0508, 0.9439],
         [0.1000, 1.0508, 0.8997],
         ...,
         [0.1000, 1.0508, 0.8388],
         [0.1000, 1.0508, 0.9707],
         [0.1000, 1.0508, 0.8423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 22.1097],
         [ 0.1000, 10.8051, 23.6124],
         [ 0.1000, 10.8051, 19.1234],
         ...,
         [ 0.1000, 10.8051, 16.2512],
         [ 0.1000, 10.8051, 26.2889],
         [ 0.1000, 10.8051, 18.6112]],
        [[ 0.1000, 10.6368, 13.4825],
         [ 0.1000, 10.6368, 14.2547],
         [ 0.1000, 10.6368, 12.6269],
         ...,
         [ 0.1000, 10.6368,  9.2973],
         [ 0.1000, 10.6368, 15.8347],
         [ 0.1000, 10.6368,  8.8902]],
        [[ 0.1000, 10.6161, 12.6817],
         [ 0.1000, 10.6161, 13.3914],
         [ 0.1000, 10.6161, 11.9945],
         ...,
         [ 0.1000, 10.6161,  8.6763],
         [ 0.1000, 10.6161, 14.8716],
         [ 0.1000, 10.6161,  8.1132]],
        ...,
        [[ 0.1000, 10.5905, 11.7536],
         [ 0.1000, 10.5905, 12.3922],
         [ 0.1000, 10.5905, 11.2534],
         ...,
         [ 0.1000, 10.5905,  7.9629],
         [ 0.1000, 10.5905, 13.7572],
         [ 0.1000, 10.5905,  7.2426]],
        [[ 0.1000, 10.6559, 14.2666],
         [ 0.1000, 10.6559, 15.1010],
         [ 0.1000, 10.6559, 13.2404],
         ...,
         [ 0.1000, 10.6559,  9.9101],
         [ 0.1000, 10.6559, 16.7792],
         [ 0.1000, 10.6559,  9.6735]],
        [[ 0.1000, 10.6981, 16.1620],
         [ 0.1000, 10.6981, 17.1507],
         [ 0.1000, 10.6981, 14.7015],
         ...,
         [ 0.1000, 10.6981, 11.4088],
         [ 0.1000, 10.6981, 19.0675],
         [ 0.1000, 10.6981, 11.6547]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 1.0141],
         [0.1000, 1.0531, 1.0385],
         [0.1000, 1.0531, 0.9655],
         ...,
         [0.1000, 1.0531, 0.9188],
         [0.1000, 1.0531, 1.0820],
         [0.1000, 1.0531, 0.9572]],
        [[0.1000, 1.0495, 0.8737],
         [0.1000, 1.0495, 0.8863],
         [0.1000, 1.0495, 0.8598],
         ...,
         [0.1000, 1.0495, 0.8057],
         [0.1000, 1.0495, 0.9120],
         [0.1000, 1.0495, 0.7991]],
        [[0.1000, 1.0490, 0.8607],
         [0.1000, 1.0490, 0.8723],
         [0.1000, 1.0490, 0.8495],
         ...,
         [0.1000, 1.0490, 0.7956],
         [0.1000, 1.0490, 0.8963],
         [0.1000, 1.0490, 0.7864]],
        ...,
        [[0.1000, 1.0485, 0.8456],
         [0.1000, 1.0485, 0.8560],
         [0.1000, 1.0485, 0.8375],
         ...,
         [0.1000, 1.0485, 0.7840],
         [0.1000, 1.0485, 0.8782],
         [0.1000, 1.0485, 0.7723]],
        [[0.1000, 1.0499, 0.8865],
         [0.1000, 1.0499, 0.9001],
         [0.1000, 1.0499, 0.8698],
         ...,
         [0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.9274],
         [0.1000, 1.0499, 0.8118]],
        [[0.1000, 1.0508, 0.9173],
         [0.1000, 1.0508, 0.9334],
         [0.1000, 1.0508, 0.8936],
         ...,
         [0.1000, 1.0508, 0.8400],
         [0.1000, 1.0508, 0.9646],
         [0.1000, 1.0508, 0.8440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1724],
         [ 0.1000, 10.8051, 20.3553],
         [ 0.1000, 10.8051, 17.4890],
         ...,
         [ 0.1000, 10.8051, 16.4127],
         [ 0.1000, 10.8051, 25.1514],
         [ 0.1000, 10.8051, 17.7728]],
        [[ 0.1000, 10.6368, 11.8555],
         [ 0.1000, 10.6368, 12.6220],
         [ 0.1000, 10.6368, 11.7149],
         ...,
         [ 0.1000, 10.6368,  9.2441],
         [ 0.1000, 10.6368, 14.6434],
         [ 0.1000, 10.6368,  9.1209]],
        [[ 0.1000, 10.6161, 11.2449],
         [ 0.1000, 10.6161, 11.8969],
         [ 0.1000, 10.6161, 11.1480],
         ...,
         [ 0.1000, 10.6161,  8.6100],
         [ 0.1000, 10.6161, 13.6950],
         [ 0.1000, 10.6161,  8.3980]],
        ...,
        [[ 0.1000, 10.5905, 10.5307],
         [ 0.1000, 10.5905, 11.0547],
         [ 0.1000, 10.5905, 10.4824],
         ...,
         [ 0.1000, 10.5905,  7.8831],
         [ 0.1000, 10.5905, 12.6028],
         [ 0.1000, 10.5905,  7.5798]],
        [[ 0.1000, 10.6559, 12.4485],
         [ 0.1000, 10.6559, 13.3305],
         [ 0.1000, 10.6559, 12.2639],
         ...,
         [ 0.1000, 10.6559,  9.8710],
         [ 0.1000, 10.6559, 15.5773],
         [ 0.1000, 10.6559,  9.8435]],
        [[ 0.1000, 10.6981, 13.8643],
         [ 0.1000, 10.6981, 15.0380],
         [ 0.1000, 10.6981, 13.5680],
         ...,
         [ 0.1000, 10.6981, 11.4087],
         [ 0.1000, 10.6981, 17.8540],
         [ 0.1000, 10.6981, 11.6470]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9475],
         [0.1000, 1.0531, 0.9830],
         [0.1000, 1.0531, 0.9364],
         ...,
         [0.1000, 1.0531, 0.9189],
         [0.1000, 1.0531, 1.0611],
         [0.1000, 1.0531, 0.9410]],
        [[0.1000, 1.0495, 0.8448],
         [0.1000, 1.0495, 0.8573],
         [0.1000, 1.0495, 0.8425],
         ...,
         [0.1000, 1.0495, 0.8023],
         [0.1000, 1.0495, 0.8901],
         [0.1000, 1.0495, 0.8003]],
        [[0.1000, 1.0490, 0.8349],
         [0.1000, 1.0490, 0.8455],
         [0.1000, 1.0490, 0.8333],
         ...,
         [0.1000, 1.0490, 0.7920],
         [0.1000, 1.0490, 0.8747],
         [0.1000, 1.0490, 0.7886]],
        ...,
        [[0.1000, 1.0485, 0.8232],
         [0.1000, 1.0485, 0.8318],
         [0.1000, 1.0485, 0.8225],
         ...,
         [0.1000, 1.0485, 0.7802],
         [0.1000, 1.0485, 0.8570],
         [0.1000, 1.0485, 0.7753]],
        [[0.1000, 1.0499, 0.8544],
         [0.1000, 1.0499, 0.8688],
         [0.1000, 1.0499, 0.8514],
         ...,
         [0.1000, 1.0499, 0.8125],
         [0.1000, 1.0499, 0.9053],
         [0.1000, 1.0499, 0.8121]],
        [[0.1000, 1.0508, 0.8775],
         [0.1000, 1.0508, 0.8966],
         [0.1000, 1.0508, 0.8727],
         ...,
         [0.1000, 1.0508, 0.8375],
         [0.1000, 1.0508, 0.9424],
         [0.1000, 1.0508, 0.8414]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.9219],
         [ 0.1000, 10.8051, 16.0761],
         [ 0.1000, 10.8051, 14.9428],
         ...,
         [ 0.1000, 10.8051, 16.7005],
         [ 0.1000, 10.8051, 19.7542],
         [ 0.1000, 10.8051, 16.1148]],
        [[ 0.1000, 10.6368,  9.2487],
         [ 0.1000, 10.6368,  9.7870],
         [ 0.1000, 10.6368, 10.2519],
         ...,
         [ 0.1000, 10.6368,  9.1567],
         [ 0.1000, 10.6368, 12.3624],
         [ 0.1000, 10.6368,  9.7023]],
        [[ 0.1000, 10.6161,  8.5823],
         [ 0.1000, 10.6161,  9.2038],
         [ 0.1000, 10.6161,  9.7848],
         ...,
         [ 0.1000, 10.6161,  8.5003],
         [ 0.1000, 10.6161, 11.6656],
         [ 0.1000, 10.6161,  9.1116]],
        ...,
        [[ 0.1000, 10.5905,  7.8215],
         [ 0.1000, 10.5905,  8.5281],
         [ 0.1000, 10.5905,  9.2344],
         ...,
         [ 0.1000, 10.5905,  7.7505],
         [ 0.1000, 10.5905, 10.8550],
         [ 0.1000, 10.5905,  8.4283]],
        [[ 0.1000, 10.6559,  9.9099],
         [ 0.1000, 10.6559, 10.3581],
         [ 0.1000, 10.6559, 10.7030],
         ...,
         [ 0.1000, 10.6559,  9.8077],
         [ 0.1000, 10.6559, 13.0427],
         [ 0.1000, 10.6559, 10.2815]],
        [[ 0.1000, 10.6981, 11.5407],
         [ 0.1000, 10.6981, 11.7391],
         [ 0.1000, 10.6981, 11.7698],
         ...,
         [ 0.1000, 10.6981, 11.4126],
         [ 0.1000, 10.6981, 14.6792],
         [ 0.1000, 10.6981, 11.6850]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9223],
         [0.1000, 1.0531, 0.9086],
         [0.1000, 1.0531, 0.8901],
         ...,
         [0.1000, 1.0531, 0.9187],
         [0.1000, 1.0531, 0.9684],
         [0.1000, 1.0531, 0.9092]],
        [[0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8063],
         [0.1000, 1.0495, 0.8138],
         ...,
         [0.1000, 1.0495, 0.7960],
         [0.1000, 1.0495, 0.8482],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7867],
         [0.1000, 1.0490, 0.7968],
         [0.1000, 1.0490, 0.8062],
         ...,
         [0.1000, 1.0490, 0.7854],
         [0.1000, 1.0490, 0.8368],
         [0.1000, 1.0490, 0.7953]],
        ...,
        [[0.1000, 1.0485, 0.7743],
         [0.1000, 1.0485, 0.7858],
         [0.1000, 1.0485, 0.7973],
         ...,
         [0.1000, 1.0485, 0.7732],
         [0.1000, 1.0485, 0.8237],
         [0.1000, 1.0485, 0.7842]],
        [[0.1000, 1.0499, 0.8083],
         [0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8212],
         ...,
         [0.1000, 1.0499, 0.8066],
         [0.1000, 1.0499, 0.8592],
         [0.1000, 1.0499, 0.8143]],
        [[0.1000, 1.0508, 0.8348],
         [0.1000, 1.0508, 0.8380],
         [0.1000, 1.0508, 0.8385],
         ...,
         [0.1000, 1.0508, 0.8327],
         [0.1000, 1.0508, 0.8859],
         [0.1000, 1.0508, 0.8372]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.3128],
         [ 0.1000, 10.8051, 16.5776],
         [ 0.1000, 10.8051, 15.1235],
         ...,
         [ 0.1000, 10.8051, 16.6893],
         [ 0.1000, 10.8051, 17.6836],
         [ 0.1000, 10.8051, 16.3362]],
        [[ 0.1000, 10.6368,  9.0612],
         [ 0.1000, 10.6368,  9.4535],
         [ 0.1000, 10.6368,  9.8443],
         ...,
         [ 0.1000, 10.6368,  9.1583],
         [ 0.1000, 10.6368, 11.7493],
         [ 0.1000, 10.6368,  9.5994]],
        [[ 0.1000, 10.6161,  8.3634],
         [ 0.1000, 10.6161,  8.8185],
         [ 0.1000, 10.6161,  9.3348],
         ...,
         [ 0.1000, 10.6161,  8.5026],
         [ 0.1000, 10.6161, 11.1695],
         [ 0.1000, 10.6161,  8.9879]],
        ...,
        [[ 0.1000, 10.5905,  7.5714],
         [ 0.1000, 10.5905,  8.0894],
         [ 0.1000, 10.5905,  8.7388],
         ...,
         [ 0.1000, 10.5905,  7.7537],
         [ 0.1000, 10.5905, 10.4895],
         [ 0.1000, 10.5905,  8.2829]],
        [[ 0.1000, 10.6559,  9.7571],
         [ 0.1000, 10.6559, 10.0802],
         [ 0.1000, 10.6559, 10.3394],
         ...,
         [ 0.1000, 10.6559,  9.8084],
         [ 0.1000, 10.6559, 12.3114],
         [ 0.1000, 10.6559, 10.2008]],
        [[ 0.1000, 10.6981, 11.4877],
         [ 0.1000, 10.6981, 11.6142],
         [ 0.1000, 10.6981, 11.5218],
         ...,
         [ 0.1000, 10.6981, 11.4111],
         [ 0.1000, 10.6981, 13.6485],
         [ 0.1000, 10.6981, 11.6645]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9333],
         [0.1000, 1.0531, 0.9213],
         [0.1000, 1.0531, 0.8977],
         ...,
         [0.1000, 1.0531, 0.9232],
         [0.1000, 1.0531, 0.9393],
         [0.1000, 1.0531, 0.9174]],
        [[0.1000, 1.0495, 0.7991],
         [0.1000, 1.0495, 0.8055],
         [0.1000, 1.0495, 0.8118],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8428],
         [0.1000, 1.0495, 0.8078]],
        [[0.1000, 1.0490, 0.7877],
         [0.1000, 1.0490, 0.7951],
         [0.1000, 1.0490, 0.8035],
         ...,
         [0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.8334],
         [0.1000, 1.0490, 0.7979]],
        ...,
        [[0.1000, 1.0485, 0.7749],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7938],
         ...,
         [0.1000, 1.0485, 0.7778],
         [0.1000, 1.0485, 0.8223],
         [0.1000, 1.0485, 0.7864]],
        [[0.1000, 1.0499, 0.8104],
         [0.1000, 1.0499, 0.8157],
         [0.1000, 1.0499, 0.8199],
         ...,
         [0.1000, 1.0499, 0.8112],
         [0.1000, 1.0499, 0.8520],
         [0.1000, 1.0499, 0.8176]],
        [[0.1000, 1.0508, 0.8386],
         [0.1000, 1.0508, 0.8406],
         [0.1000, 1.0508, 0.8391],
         ...,
         [0.1000, 1.0508, 0.8373],
         [0.1000, 1.0508, 0.8737],
         [0.1000, 1.0508, 0.8414]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8919],
         [ 0.1000, 10.8051, 14.9998],
         [ 0.1000, 10.8051, 17.3692],
         ...,
         [ 0.1000, 10.8051, 16.5778],
         [ 0.1000, 10.8051, 15.5392],
         [ 0.1000, 10.8051, 17.9180]],
        [[ 0.1000, 10.6368,  9.4223],
         [ 0.1000, 10.6368,  9.9137],
         [ 0.1000, 10.6368,  8.9906],
         ...,
         [ 0.1000, 10.6368,  9.1871],
         [ 0.1000, 10.6368, 10.2731],
         [ 0.1000, 10.6368,  9.0850]],
        [[ 0.1000, 10.6161,  8.8319],
         [ 0.1000, 10.6161,  9.4183],
         [ 0.1000, 10.6161,  8.2868],
         ...,
         [ 0.1000, 10.6161,  8.5398],
         [ 0.1000, 10.6161,  9.7600],
         [ 0.1000, 10.6161,  8.3525]],
        ...,
        [[ 0.1000, 10.5905,  8.1503],
         [ 0.1000, 10.5905,  8.8377],
         [ 0.1000, 10.5905,  7.4893],
         ...,
         [ 0.1000, 10.5905,  7.7994],
         [ 0.1000, 10.5905,  9.1588],
         [ 0.1000, 10.5905,  7.5248]],
        [[ 0.1000, 10.6559, 10.0024],
         [ 0.1000, 10.6559, 10.3942],
         [ 0.1000, 10.6559,  9.6933],
         ...,
         [ 0.1000, 10.6559,  9.8283],
         [ 0.1000, 10.6559, 10.7706],
         [ 0.1000, 10.6559,  9.8183]],
        [[ 0.1000, 10.6981, 11.4118],
         [ 0.1000, 10.6981, 11.5384],
         [ 0.1000, 10.6981, 11.4445],
         ...,
         [ 0.1000, 10.6981, 11.4058],
         [ 0.1000, 10.6981, 11.9555],
         [ 0.1000, 10.6981, 11.6526]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9102],
         [0.1000, 1.0531, 0.8957],
         [0.1000, 1.0531, 0.9342],
         ...,
         [0.1000, 1.0531, 0.9214],
         [0.1000, 1.0531, 0.9045],
         [0.1000, 1.0531, 0.9432]],
        [[0.1000, 1.0495, 0.8050],
         [0.1000, 1.0495, 0.8130],
         [0.1000, 1.0495, 0.7980],
         ...,
         [0.1000, 1.0495, 0.8012],
         [0.1000, 1.0495, 0.8188],
         [0.1000, 1.0495, 0.7995]],
        [[0.1000, 1.0490, 0.7954],
         [0.1000, 1.0490, 0.8049],
         [0.1000, 1.0490, 0.7865],
         ...,
         [0.1000, 1.0490, 0.7906],
         [0.1000, 1.0490, 0.8105],
         [0.1000, 1.0490, 0.7876]],
        ...,
        [[0.1000, 1.0485, 0.7843],
         [0.1000, 1.0485, 0.7955],
         [0.1000, 1.0485, 0.7735],
         ...,
         [0.1000, 1.0485, 0.7786],
         [0.1000, 1.0485, 0.8007],
         [0.1000, 1.0485, 0.7741]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8208],
         [0.1000, 1.0499, 0.8094],
         ...,
         [0.1000, 1.0499, 0.8116],
         [0.1000, 1.0499, 0.8269],
         [0.1000, 1.0499, 0.8114]],
        [[0.1000, 1.0508, 0.8373],
         [0.1000, 1.0508, 0.8394],
         [0.1000, 1.0508, 0.8379],
         ...,
         [0.1000, 1.0508, 0.8372],
         [0.1000, 1.0508, 0.8462],
         [0.1000, 1.0508, 0.8413]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.0727],
         [ 0.1000, 10.8051, 15.8106],
         [ 0.1000, 10.8051, 17.8938],
         ...,
         [ 0.1000, 10.8051, 16.6676],
         [ 0.1000, 10.8051, 15.6552],
         [ 0.1000, 10.8051, 17.8968]],
        [[ 0.1000, 10.6368,  9.0789],
         [ 0.1000, 10.6368,  9.4535],
         [ 0.1000, 10.6368,  8.8875],
         ...,
         [ 0.1000, 10.6368,  9.1612],
         [ 0.1000, 10.6368,  9.8240],
         [ 0.1000, 10.6368,  9.0902]],
        [[ 0.1000, 10.6161,  8.3962],
         [ 0.1000, 10.6161,  8.8704],
         [ 0.1000, 10.6161,  8.1500],
         ...,
         [ 0.1000, 10.6161,  8.5070],
         [ 0.1000, 10.6161,  9.2734],
         [ 0.1000, 10.6161,  8.3590]],
        ...,
        [[ 0.1000, 10.5905,  7.6197],
         [ 0.1000, 10.5905,  8.1965],
         [ 0.1000, 10.5905,  7.3191],
         ...,
         [ 0.1000, 10.5905,  7.7596],
         [ 0.1000, 10.5905,  8.6327],
         [ 0.1000, 10.5905,  7.5327]],
        [[ 0.1000, 10.6559,  9.7584],
         [ 0.1000, 10.6559, 10.0258],
         [ 0.1000, 10.6559,  9.6275],
         ...,
         [ 0.1000, 10.6559,  9.8097],
         [ 0.1000, 10.6559, 10.3614],
         [ 0.1000, 10.6559,  9.8219]],
        [[ 0.1000, 10.6981, 11.4432],
         [ 0.1000, 10.6981, 11.4143],
         [ 0.1000, 10.6981, 11.4858],
         ...,
         [ 0.1000, 10.6981, 11.4079],
         [ 0.1000, 10.6981, 11.6534],
         [ 0.1000, 10.6981, 11.6517]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9290],
         [0.1000, 1.0531, 0.9085],
         [0.1000, 1.0531, 0.9424],
         ...,
         [0.1000, 1.0531, 0.9225],
         [0.1000, 1.0531, 0.9060],
         [0.1000, 1.0531, 0.9425]],
        [[0.1000, 1.0495, 0.7990],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.7959],
         ...,
         [0.1000, 1.0495, 0.8004],
         [0.1000, 1.0495, 0.8112],
         [0.1000, 1.0495, 0.7992]],
        [[0.1000, 1.0490, 0.7879],
         [0.1000, 1.0490, 0.7956],
         [0.1000, 1.0490, 0.7839],
         ...,
         [0.1000, 1.0490, 0.7897],
         [0.1000, 1.0490, 0.8022],
         [0.1000, 1.0490, 0.7873]],
        ...,
        [[0.1000, 1.0485, 0.7753],
         [0.1000, 1.0485, 0.7847],
         [0.1000, 1.0485, 0.7704],
         ...,
         [0.1000, 1.0485, 0.7776],
         [0.1000, 1.0485, 0.7918],
         [0.1000, 1.0485, 0.7739]],
        [[0.1000, 1.0499, 0.8101],
         [0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8080],
         ...,
         [0.1000, 1.0499, 0.8109],
         [0.1000, 1.0499, 0.8199],
         [0.1000, 1.0499, 0.8111]],
        [[0.1000, 1.0508, 0.8375],
         [0.1000, 1.0508, 0.8370],
         [0.1000, 1.0508, 0.8382],
         ...,
         [0.1000, 1.0508, 0.8369],
         [0.1000, 1.0508, 0.8409],
         [0.1000, 1.0508, 0.8409]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.6423],
         [ 0.1000, 10.8051, 17.2499],
         [ 0.1000, 10.8051, 18.2439],
         ...,
         [ 0.1000, 10.8051, 16.8366],
         [ 0.1000, 10.8051, 15.8303],
         [ 0.1000, 10.8051, 17.7098]],
        [[ 0.1000, 10.6368,  8.8165],
         [ 0.1000, 10.6368,  9.0151],
         [ 0.1000, 10.6368,  8.8533],
         ...,
         [ 0.1000, 10.6368,  9.1155],
         [ 0.1000, 10.6368,  9.5332],
         [ 0.1000, 10.6368,  9.1370]],
        [[ 0.1000, 10.6161,  8.0360],
         [ 0.1000, 10.6161,  8.3193],
         [ 0.1000, 10.6161,  8.0954],
         ...,
         [ 0.1000, 10.6161,  8.4488],
         [ 0.1000, 10.6161,  8.9531],
         [ 0.1000, 10.6161,  8.4183]],
        ...,
        [[ 0.1000, 10.5905,  7.1626],
         [ 0.1000, 10.5905,  7.5298],
         [ 0.1000, 10.5905,  7.2442],
         ...,
         [ 0.1000, 10.5905,  7.6887],
         [ 0.1000, 10.5905,  8.2820],
         [ 0.1000, 10.5905,  7.6044]],
        [[ 0.1000, 10.6559,  9.6042],
         [ 0.1000, 10.6559,  9.7091],
         [ 0.1000, 10.6559,  9.6160],
         ...,
         [ 0.1000, 10.6559,  9.7777],
         [ 0.1000, 10.6559, 10.1021],
         [ 0.1000, 10.6559,  9.8549]],
        [[ 0.1000, 10.6981, 11.6005],
         [ 0.1000, 10.6981, 11.4354],
         [ 0.1000, 10.6981, 11.5394],
         ...,
         [ 0.1000, 10.6981, 11.4140],
         [ 0.1000, 10.6981, 11.4804],
         [ 0.1000, 10.6981, 11.6448]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9564],
         [0.1000, 1.0531, 0.9337],
         [0.1000, 1.0531, 0.9499],
         ...,
         [0.1000, 1.0531, 0.9270],
         [0.1000, 1.0531, 0.9106],
         [0.1000, 1.0531, 0.9412]],
        [[0.1000, 1.0495, 0.7966],
         [0.1000, 1.0495, 0.7998],
         [0.1000, 1.0495, 0.7972],
         ...,
         [0.1000, 1.0495, 0.8014],
         [0.1000, 1.0495, 0.8082],
         [0.1000, 1.0495, 0.8018]],
        [[0.1000, 1.0490, 0.7839],
         [0.1000, 1.0490, 0.7885],
         [0.1000, 1.0490, 0.7848],
         ...,
         [0.1000, 1.0490, 0.7906],
         [0.1000, 1.0490, 0.7988],
         [0.1000, 1.0490, 0.7901]],
        ...,
        [[0.1000, 1.0485, 0.7697],
         [0.1000, 1.0485, 0.7756],
         [0.1000, 1.0485, 0.7710],
         ...,
         [0.1000, 1.0485, 0.7782],
         [0.1000, 1.0485, 0.7879],
         [0.1000, 1.0485, 0.7768]],
        [[0.1000, 1.0499, 0.8094],
         [0.1000, 1.0499, 0.8111],
         [0.1000, 1.0499, 0.8096],
         ...,
         [0.1000, 1.0499, 0.8122],
         [0.1000, 1.0499, 0.8175],
         [0.1000, 1.0499, 0.8134]],
        [[0.1000, 1.0508, 0.8418],
         [0.1000, 1.0508, 0.8392],
         [0.1000, 1.0508, 0.8408],
         ...,
         [0.1000, 1.0508, 0.8388],
         [0.1000, 1.0508, 0.8399],
         [0.1000, 1.0508, 0.8426]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 18.5458],
         [ 0.1000, 10.8051, 19.3506],
         ...,
         [ 0.1000, 10.8051, 17.0936],
         [ 0.1000, 10.8051, 16.7694],
         [ 0.1000, 10.8051, 17.6081]],
        [[ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368,  8.7899],
         [ 0.1000, 10.6368,  8.8017],
         ...,
         [ 0.1000, 10.6368,  9.0534],
         [ 0.1000, 10.6368,  9.1351],
         [ 0.1000, 10.6368,  9.1637]],
        [[ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161,  8.0140],
         [ 0.1000, 10.6161,  7.9839],
         ...,
         [ 0.1000, 10.6161,  8.3684],
         [ 0.1000, 10.6161,  8.4734],
         [ 0.1000, 10.6161,  8.4520]],
        ...,
        [[ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905,  7.1454],
         [ 0.1000, 10.5905,  7.0737],
         ...,
         [ 0.1000, 10.5905,  7.5898],
         [ 0.1000, 10.5905,  7.7184],
         [ 0.1000, 10.5905,  7.6450]],
        [[ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559,  9.5729],
         [ 0.1000, 10.6559,  9.6309],
         ...,
         [ 0.1000, 10.6559,  9.7355],
         [ 0.1000, 10.6559,  9.7918],
         [ 0.1000, 10.6559,  9.8739]],
        [[ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 11.5563],
         [ 0.1000, 10.6981, 11.7476],
         ...,
         [ 0.1000, 10.6981, 11.4279],
         [ 0.1000, 10.6981, 11.4128],
         [ 0.1000, 10.6981, 11.6418]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9487],
         [0.1000, 1.0531, 0.9618],
         ...,
         [0.1000, 1.0531, 0.9251],
         [0.1000, 1.0531, 0.9198],
         [0.1000, 1.0531, 0.9335]],
        [[0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.7901],
         [0.1000, 1.0495, 0.7903],
         ...,
         [0.1000, 1.0495, 0.7944],
         [0.1000, 1.0495, 0.7957],
         [0.1000, 1.0495, 0.7961]],
        [[0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.7774],
         [0.1000, 1.0490, 0.7770],
         ...,
         [0.1000, 1.0490, 0.7832],
         [0.1000, 1.0490, 0.7849],
         [0.1000, 1.0490, 0.7846]],
        ...,
        [[0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.7633],
         [0.1000, 1.0485, 0.7622],
         ...,
         [0.1000, 1.0485, 0.7705],
         [0.1000, 1.0485, 0.7726],
         [0.1000, 1.0485, 0.7714]],
        [[0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8028],
         [0.1000, 1.0499, 0.8037],
         ...,
         [0.1000, 1.0499, 0.8054],
         [0.1000, 1.0499, 0.8064],
         [0.1000, 1.0499, 0.8077]],
        [[0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8351],
         [0.1000, 1.0508, 0.8382],
         ...,
         [0.1000, 1.0508, 0.8330],
         [0.1000, 1.0508, 0.8327],
         [0.1000, 1.0508, 0.8365]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 19.1106],
         [ 0.1000, 10.8051, 18.2516],
         [ 0.1000, 10.8051, 18.7455],
         ...,
         [ 0.1000, 10.8051, 17.1514],
         [ 0.1000, 10.8051, 17.1291],
         [ 0.1000, 10.8051, 17.6594]],
        [[ 0.1000, 10.6368,  8.8450],
         [ 0.1000, 10.6368,  8.8488],
         [ 0.1000, 10.6368,  8.9095],
         ...,
         [ 0.1000, 10.6368,  9.0416],
         [ 0.1000, 10.6368,  9.0514],
         [ 0.1000, 10.6368,  9.1501]],
        [[ 0.1000, 10.6161,  8.0405],
         [ 0.1000, 10.6161,  8.0903],
         [ 0.1000, 10.6161,  8.1258],
         ...,
         [ 0.1000, 10.6161,  8.3527],
         [ 0.1000, 10.6161,  8.3642],
         [ 0.1000, 10.6161,  8.4349]],
        ...,
        [[ 0.1000, 10.5905,  7.1429],
         [ 0.1000, 10.5905,  7.2386],
         [ 0.1000, 10.5905,  7.2482],
         ...,
         [ 0.1000, 10.5905,  7.5701],
         [ 0.1000, 10.5905,  7.5833],
         [ 0.1000, 10.5905,  7.6244]],
        [[ 0.1000, 10.6559,  9.6591],
         [ 0.1000, 10.6559,  9.6121],
         [ 0.1000, 10.6559,  9.7001],
         ...,
         [ 0.1000, 10.6559,  9.7280],
         [ 0.1000, 10.6559,  9.7359],
         [ 0.1000, 10.6559,  9.8642]],
        [[ 0.1000, 10.6981, 11.7304],
         [ 0.1000, 10.6981, 11.5375],
         [ 0.1000, 10.6981, 11.7015],
         ...,
         [ 0.1000, 10.6981, 11.4326],
         [ 0.1000, 10.6981, 11.4350],
         [ 0.1000, 10.6981, 11.6433]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9629],
         [0.1000, 1.0531, 0.9489],
         [0.1000, 1.0531, 0.9569],
         ...,
         [0.1000, 1.0531, 0.9310],
         [0.1000, 1.0531, 0.9307],
         [0.1000, 1.0531, 0.9393]],
        [[0.1000, 1.0495, 0.7959],
         [0.1000, 1.0495, 0.7960],
         [0.1000, 1.0495, 0.7970],
         ...,
         [0.1000, 1.0495, 0.7991],
         [0.1000, 1.0495, 0.7993],
         [0.1000, 1.0495, 0.8009]],
        [[0.1000, 1.0490, 0.7828],
         [0.1000, 1.0490, 0.7836],
         [0.1000, 1.0490, 0.7842],
         ...,
         [0.1000, 1.0490, 0.7879],
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7892]],
        ...,
        [[0.1000, 1.0485, 0.7682],
         [0.1000, 1.0485, 0.7698],
         [0.1000, 1.0485, 0.7699],
         ...,
         [0.1000, 1.0485, 0.7752],
         [0.1000, 1.0485, 0.7754],
         [0.1000, 1.0485, 0.7761]],
        [[0.1000, 1.0499, 0.8092],
         [0.1000, 1.0499, 0.8084],
         [0.1000, 1.0499, 0.8098],
         ...,
         [0.1000, 1.0499, 0.8103],
         [0.1000, 1.0499, 0.8104],
         [0.1000, 1.0499, 0.8125]],
        [[0.1000, 1.0508, 0.8428],
         [0.1000, 1.0508, 0.8397],
         [0.1000, 1.0508, 0.8424],
         ...,
         [0.1000, 1.0508, 0.8380],
         [0.1000, 1.0508, 0.8380],
         [0.1000, 1.0508, 0.8414]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.8853],
         [ 0.1000, 10.8051, 17.6937],
         [ 0.1000, 10.8051, 16.3501],
         ...,
         [ 0.1000, 10.8051, 17.7137],
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 17.8589]],
        [[ 0.1000, 10.6368,  9.8217],
         [ 0.1000, 10.6368,  9.1412],
         [ 0.1000, 10.6368,  9.5933],
         ...,
         [ 0.1000, 10.6368,  8.9494],
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368,  9.0994]],
        [[ 0.1000, 10.6161,  9.2542],
         [ 0.1000, 10.6161,  8.4236],
         [ 0.1000, 10.6161,  8.9806],
         ...,
         [ 0.1000, 10.6161,  8.2241],
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161,  8.3707]],
        ...,
        [[ 0.1000, 10.5905,  8.5952],
         [ 0.1000, 10.5905,  7.6107],
         [ 0.1000, 10.5905,  8.2742],
         ...,
         [ 0.1000, 10.5905,  7.4050],
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905,  7.5469]],
        [[ 0.1000, 10.6559, 10.3765],
         [ 0.1000, 10.6559,  9.8578],
         [ 0.1000, 10.6559, 10.1960],
         ...,
         [ 0.1000, 10.6559,  9.6756],
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559,  9.8284]],
        [[ 0.1000, 10.6981, 11.7142],
         [ 0.1000, 10.6981, 11.6443],
         [ 0.1000, 10.6981, 11.6634],
         ...,
         [ 0.1000, 10.6981, 11.4937],
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 11.6502]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9055],
         [0.1000, 1.0531, 0.9349],
         [0.1000, 1.0531, 0.9130],
         ...,
         [0.1000, 1.0531, 0.9352],
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.9376]],
        [[0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.7958],
         [0.1000, 1.0495, 0.8031],
         ...,
         [0.1000, 1.0495, 0.7927],
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.7951]],
        [[0.1000, 1.0490, 0.7976],
         [0.1000, 1.0490, 0.7841],
         [0.1000, 1.0490, 0.7932],
         ...,
         [0.1000, 1.0490, 0.7809],
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.7832]],
        ...,
        [[0.1000, 1.0485, 0.7869],
         [0.1000, 1.0485, 0.7709],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7675],
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.7698]],
        [[0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8074],
         [0.1000, 1.0499, 0.8129],
         ...,
         [0.1000, 1.0499, 0.8045],
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8070]],
        [[0.1000, 1.0508, 0.8376],
         [0.1000, 1.0508, 0.8365],
         [0.1000, 1.0508, 0.8368],
         ...,
         [0.1000, 1.0508, 0.8340],
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8366]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.2908],
         [ 0.1000, 10.8051, 17.7780],
         [ 0.1000, 10.8051, 16.6741],
         ...,
         [ 0.1000, 10.8051, 17.7211],
         [ 0.1000, 10.8051, 19.5136],
         [ 0.1000, 10.8051, 17.8191]],
        [[ 0.1000, 10.6368,  9.6196],
         [ 0.1000, 10.6368,  9.1196],
         [ 0.1000, 10.6368,  9.4612],
         ...,
         [ 0.1000, 10.6368,  8.9498],
         [ 0.1000, 10.6368,  8.7814],
         [ 0.1000, 10.6368,  9.1093]],
        [[ 0.1000, 10.6161,  9.0123],
         [ 0.1000, 10.6161,  8.3963],
         [ 0.1000, 10.6161,  8.8203],
         ...,
         [ 0.1000, 10.6161,  8.2241],
         [ 0.1000, 10.6161,  7.9549],
         [ 0.1000, 10.6161,  8.3832]],
        ...,
        [[ 0.1000, 10.5905,  8.3116],
         [ 0.1000, 10.5905,  7.5778],
         [ 0.1000, 10.5905,  8.0848],
         ...,
         [ 0.1000, 10.5905,  7.4047],
         [ 0.1000, 10.5905,  7.0364],
         [ 0.1000, 10.5905,  7.5620]],
        [[ 0.1000, 10.6559, 10.2166],
         [ 0.1000, 10.6559,  9.8425],
         [ 0.1000, 10.6559, 10.0942],
         ...,
         [ 0.1000, 10.6559,  9.6766],
         [ 0.1000, 10.6559,  9.6204],
         [ 0.1000, 10.6559,  9.8353]],
        [[ 0.1000, 10.6981, 11.6681],
         [ 0.1000, 10.6981, 11.6471],
         [ 0.1000, 10.6981, 11.6449],
         ...,
         [ 0.1000, 10.6981, 11.4958],
         [ 0.1000, 10.6981, 11.7665],
         [ 0.1000, 10.6981, 11.6487]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9147],
         [0.1000, 1.0531, 0.9389],
         [0.1000, 1.0531, 0.9210],
         ...,
         [0.1000, 1.0531, 0.9380],
         [0.1000, 1.0531, 0.9672],
         [0.1000, 1.0531, 0.9396]],
        [[0.1000, 1.0495, 0.8062],
         [0.1000, 1.0495, 0.7981],
         [0.1000, 1.0495, 0.8037],
         ...,
         [0.1000, 1.0495, 0.7953],
         [0.1000, 1.0495, 0.7926],
         [0.1000, 1.0495, 0.7979]],
        [[0.1000, 1.0490, 0.7964],
         [0.1000, 1.0490, 0.7863],
         [0.1000, 1.0490, 0.7932],
         ...,
         [0.1000, 1.0490, 0.7835],
         [0.1000, 1.0490, 0.7792],
         [0.1000, 1.0490, 0.7861]],
        ...,
        [[0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.7730],
         [0.1000, 1.0485, 0.7813],
         ...,
         [0.1000, 1.0485, 0.7702],
         [0.1000, 1.0485, 0.7642],
         [0.1000, 1.0485, 0.7728]],
        [[0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8099],
         [0.1000, 1.0499, 0.8140],
         ...,
         [0.1000, 1.0499, 0.8072],
         [0.1000, 1.0499, 0.8063],
         [0.1000, 1.0499, 0.8097]],
        [[0.1000, 1.0508, 0.8396],
         [0.1000, 1.0508, 0.8392],
         [0.1000, 1.0508, 0.8392],
         ...,
         [0.1000, 1.0508, 0.8368],
         [0.1000, 1.0508, 0.8412],
         [0.1000, 1.0508, 0.8392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.6985],
         [ 0.1000, 10.8051, 17.8097],
         [ 0.1000, 10.8051, 17.6347],
         ...,
         [ 0.1000, 10.8051, 17.9437],
         [ 0.1000, 10.8051, 17.7550],
         [ 0.1000, 10.8051, 17.6348]],
        [[ 0.1000, 10.6368,  9.1399],
         [ 0.1000, 10.6368,  9.1116],
         [ 0.1000, 10.6368,  9.1567],
         ...,
         [ 0.1000, 10.6368,  8.9325],
         [ 0.1000, 10.6368,  9.1254],
         [ 0.1000, 10.6368,  9.1566]],
        [[ 0.1000, 10.6161,  8.4220],
         [ 0.1000, 10.6161,  8.3862],
         [ 0.1000, 10.6161,  8.4431],
         ...,
         [ 0.1000, 10.6161,  8.1935],
         [ 0.1000, 10.6161,  8.4037],
         [ 0.1000, 10.6161,  8.4431]],
        ...,
        [[ 0.1000, 10.5905,  7.6089],
         [ 0.1000, 10.5905,  7.5656],
         [ 0.1000, 10.5905,  7.6343],
         ...,
         [ 0.1000, 10.5905,  7.3608],
         [ 0.1000, 10.5905,  7.5867],
         [ 0.1000, 10.5905,  7.6343]],
        [[ 0.1000, 10.6559,  9.8569],
         [ 0.1000, 10.6559,  9.8369],
         [ 0.1000, 10.6559,  9.8688],
         ...,
         [ 0.1000, 10.6559,  9.6737],
         [ 0.1000, 10.6559,  9.8466],
         [ 0.1000, 10.6559,  9.8688]],
        [[ 0.1000, 10.6981, 11.6445],
         [ 0.1000, 10.6981, 11.6483],
         [ 0.1000, 10.6981, 11.6425],
         ...,
         [ 0.1000, 10.6981, 11.5343],
         [ 0.1000, 10.6981, 11.6463],
         [ 0.1000, 10.6981, 11.6425]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9454],
         [0.1000, 1.0531, 0.9472],
         [0.1000, 1.0531, 0.9444],
         ...,
         [0.1000, 1.0531, 0.9494],
         [0.1000, 1.0531, 0.9463],
         [0.1000, 1.0531, 0.9444]],
        [[0.1000, 1.0495, 0.8062],
         [0.1000, 1.0495, 0.8057],
         [0.1000, 1.0495, 0.8065],
         ...,
         [0.1000, 1.0495, 0.8028],
         [0.1000, 1.0495, 0.8060],
         [0.1000, 1.0495, 0.8065]],
        [[0.1000, 1.0490, 0.7945],
         [0.1000, 1.0490, 0.7939],
         [0.1000, 1.0490, 0.7949],
         ...,
         [0.1000, 1.0490, 0.7908],
         [0.1000, 1.0490, 0.7942],
         [0.1000, 1.0490, 0.7949]],
        ...,
        [[0.1000, 1.0485, 0.7813],
         [0.1000, 1.0485, 0.7806],
         [0.1000, 1.0485, 0.7817],
         ...,
         [0.1000, 1.0485, 0.7773],
         [0.1000, 1.0485, 0.7809],
         [0.1000, 1.0485, 0.7817]],
        [[0.1000, 1.0499, 0.8179],
         [0.1000, 1.0499, 0.8175],
         [0.1000, 1.0499, 0.8181],
         ...,
         [0.1000, 1.0499, 0.8149],
         [0.1000, 1.0499, 0.8177],
         [0.1000, 1.0499, 0.8181]],
        [[0.1000, 1.0508, 0.8469],
         [0.1000, 1.0508, 0.8470],
         [0.1000, 1.0508, 0.8469],
         ...,
         [0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8470],
         [0.1000, 1.0508, 0.8469]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.6440],
         [ 0.1000, 10.8051, 17.7868],
         [ 0.1000, 10.8051, 16.9244],
         ...,
         [ 0.1000, 10.8051, 17.7799],
         [ 0.1000, 10.8051, 18.9881],
         [ 0.1000, 10.8051, 17.7674]],
        [[ 0.1000, 10.6368,  9.4727],
         [ 0.1000, 10.6368,  9.1174],
         [ 0.1000, 10.6368,  9.3708],
         ...,
         [ 0.1000, 10.6368,  8.9447],
         [ 0.1000, 10.6368,  8.8659],
         [ 0.1000, 10.6368,  9.1223]],
        [[ 0.1000, 10.6161,  8.8343],
         [ 0.1000, 10.6161,  8.3935],
         [ 0.1000, 10.6161,  8.7096],
         ...,
         [ 0.1000, 10.6161,  8.2154],
         [ 0.1000, 10.6161,  8.0683],
         [ 0.1000, 10.6161,  8.3997]],
        ...,
        [[ 0.1000, 10.5905,  8.1014],
         [ 0.1000, 10.5905,  7.5744],
         [ 0.1000, 10.5905,  7.9533],
         ...,
         [ 0.1000, 10.5905,  7.3924],
         [ 0.1000, 10.5905,  7.1773],
         [ 0.1000, 10.5905,  7.5819]],
        [[ 0.1000, 10.6559, 10.1030],
         [ 0.1000, 10.6559,  9.8410],
         [ 0.1000, 10.6559, 10.0258],
         ...,
         [ 0.1000, 10.6559,  9.6753],
         [ 0.1000, 10.6559,  9.6722],
         [ 0.1000, 10.6559,  9.8444]],
        [[ 0.1000, 10.6981, 11.6461],
         [ 0.1000, 10.6981, 11.6475],
         [ 0.1000, 10.6981, 11.6377],
         ...,
         [ 0.1000, 10.6981, 11.5056],
         [ 0.1000, 10.6981, 11.7203],
         [ 0.1000, 10.6981, 11.6468]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9235],
         [0.1000, 1.0531, 0.9421],
         [0.1000, 1.0531, 0.9281],
         ...,
         [0.1000, 1.0531, 0.9420],
         [0.1000, 1.0531, 0.9616],
         [0.1000, 1.0531, 0.9418]],
        [[0.1000, 1.0495, 0.8069],
         [0.1000, 1.0495, 0.8011],
         [0.1000, 1.0495, 0.8052],
         ...,
         [0.1000, 1.0495, 0.7983],
         [0.1000, 1.0495, 0.7970],
         [0.1000, 1.0495, 0.8012]],
        [[0.1000, 1.0490, 0.7965],
         [0.1000, 1.0490, 0.7893],
         [0.1000, 1.0490, 0.7944],
         ...,
         [0.1000, 1.0490, 0.7864],
         [0.1000, 1.0490, 0.7840],
         [0.1000, 1.0490, 0.7894]],
        ...,
        [[0.1000, 1.0485, 0.7846],
         [0.1000, 1.0485, 0.7760],
         [0.1000, 1.0485, 0.7821],
         ...,
         [0.1000, 1.0485, 0.7730],
         [0.1000, 1.0485, 0.7695],
         [0.1000, 1.0485, 0.7761]],
        [[0.1000, 1.0499, 0.8171],
         [0.1000, 1.0499, 0.8129],
         [0.1000, 1.0499, 0.8159],
         ...,
         [0.1000, 1.0499, 0.8102],
         [0.1000, 1.0499, 0.8101],
         [0.1000, 1.0499, 0.8129]],
        [[0.1000, 1.0508, 0.8422],
         [0.1000, 1.0508, 0.8422],
         [0.1000, 1.0508, 0.8421],
         ...,
         [0.1000, 1.0508, 0.8399],
         [0.1000, 1.0508, 0.8434],
         [0.1000, 1.0508, 0.8422]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.8594],
         [ 0.1000, 10.8051, 17.6468],
         [ 0.1000, 10.8051, 17.6964],
         ...,
         [ 0.1000, 10.8051, 18.2449],
         [ 0.1000, 10.8051, 17.3017],
         [ 0.1000, 10.8051, 17.5596]],
        [[ 0.1000, 10.6368,  9.0993],
         [ 0.1000, 10.6368,  9.1534],
         [ 0.1000, 10.6368,  9.1405],
         ...,
         [ 0.1000, 10.6368,  8.9166],
         [ 0.1000, 10.6368,  9.2502],
         [ 0.1000, 10.6368,  9.1768]],
        [[ 0.1000, 10.6161,  8.3706],
         [ 0.1000, 10.6161,  8.4391],
         [ 0.1000, 10.6161,  8.4227],
         ...,
         [ 0.1000, 10.6161,  8.1603],
         [ 0.1000, 10.6161,  8.5603],
         [ 0.1000, 10.6161,  8.4685]],
        ...,
        [[ 0.1000, 10.5905,  7.5467],
         [ 0.1000, 10.5905,  7.6294],
         [ 0.1000, 10.5905,  7.6097],
         ...,
         [ 0.1000, 10.5905,  7.3102],
         [ 0.1000, 10.5905,  7.7751],
         [ 0.1000, 10.5905,  7.6648]],
        [[ 0.1000, 10.6559,  9.8283],
         [ 0.1000, 10.6559,  9.8665],
         [ 0.1000, 10.6559,  9.8573],
         ...,
         [ 0.1000, 10.6559,  9.6769],
         [ 0.1000, 10.6559,  9.9364],
         [ 0.1000, 10.6559,  9.8833]],
        [[ 0.1000, 10.6981, 11.6502],
         [ 0.1000, 10.6981, 11.6429],
         [ 0.1000, 10.6981, 11.6444],
         ...,
         [ 0.1000, 10.6981, 11.5918],
         [ 0.1000, 10.6981, 11.6362],
         [ 0.1000, 10.6981, 11.6405]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9467],
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9440],
         ...,
         [0.1000, 1.0531, 0.9529],
         [0.1000, 1.0531, 0.9376],
         [0.1000, 1.0531, 0.9418]],
        [[0.1000, 1.0495, 0.8042],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8048],
         ...,
         [0.1000, 1.0495, 0.8012],
         [0.1000, 1.0495, 0.8066],
         [0.1000, 1.0495, 0.8054]],
        [[0.1000, 1.0490, 0.7923],
         [0.1000, 1.0490, 0.7934],
         [0.1000, 1.0490, 0.7932],
         ...,
         [0.1000, 1.0490, 0.7889],
         [0.1000, 1.0490, 0.7954],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7789],
         [0.1000, 1.0485, 0.7803],
         [0.1000, 1.0485, 0.7799],
         ...,
         [0.1000, 1.0485, 0.7751],
         [0.1000, 1.0485, 0.7826],
         [0.1000, 1.0485, 0.7808]],
        [[0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.8167],
         [0.1000, 1.0499, 0.8165],
         ...,
         [0.1000, 1.0499, 0.8136],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8169]],
        [[0.1000, 1.0508, 0.8457],
         [0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.8456],
         ...,
         [0.1000, 1.0508, 0.8447],
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8455]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.2800],
         [ 0.1000, 10.8051, 17.4787],
         [ 0.1000, 10.8051, 17.9451],
         ...,
         [ 0.1000, 10.8051, 18.6284],
         [ 0.1000, 10.8051, 16.7341],
         [ 0.1000, 10.8051, 17.4599]],
        [[ 0.1000, 10.6368,  9.0027],
         [ 0.1000, 10.6368,  9.1991],
         [ 0.1000, 10.6368,  9.0785],
         ...,
         [ 0.1000, 10.6368,  8.9318],
         [ 0.1000, 10.6368,  9.4387],
         [ 0.1000, 10.6368,  9.2044]],
        [[ 0.1000, 10.6161,  8.2469],
         [ 0.1000, 10.6161,  8.4964],
         [ 0.1000, 10.6161,  8.3442],
         ...,
         [ 0.1000, 10.6161,  8.1549],
         [ 0.1000, 10.6161,  8.7928],
         [ 0.1000, 10.6161,  8.5031]],
        ...,
        [[ 0.1000, 10.5905,  7.3966],
         [ 0.1000, 10.5905,  7.6985],
         [ 0.1000, 10.5905,  7.5147],
         ...,
         [ 0.1000, 10.5905,  7.2840],
         [ 0.1000, 10.5905,  8.0522],
         [ 0.1000, 10.5905,  7.7065]],
        [[ 0.1000, 10.6559,  9.7617],
         [ 0.1000, 10.6559,  9.8993],
         [ 0.1000, 10.6559,  9.8138],
         ...,
         [ 0.1000, 10.6559,  9.7145],
         [ 0.1000, 10.6559, 10.0770],
         [ 0.1000, 10.6559,  9.9031]],
        [[ 0.1000, 10.6981, 11.6708],
         [ 0.1000, 10.6981, 11.6388],
         [ 0.1000, 10.6981, 11.6538],
         ...,
         [ 0.1000, 10.6981, 11.6931],
         [ 0.1000, 10.6981, 11.6426],
         [ 0.1000, 10.6981, 11.6384]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9524],
         [0.1000, 1.0531, 0.9394],
         [0.1000, 1.0531, 0.9469],
         ...,
         [0.1000, 1.0531, 0.9581],
         [0.1000, 1.0531, 0.9272],
         [0.1000, 1.0531, 0.9390]],
        [[0.1000, 1.0495, 0.8015],
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.8027],
         ...,
         [0.1000, 1.0495, 0.8003],
         [0.1000, 1.0495, 0.8086],
         [0.1000, 1.0495, 0.8048]],
        [[0.1000, 1.0490, 0.7892],
         [0.1000, 1.0490, 0.7933],
         [0.1000, 1.0490, 0.7908],
         ...,
         [0.1000, 1.0490, 0.7877],
         [0.1000, 1.0490, 0.7981],
         [0.1000, 1.0490, 0.7934]],
        ...,
        [[0.1000, 1.0485, 0.7754],
         [0.1000, 1.0485, 0.7803],
         [0.1000, 1.0485, 0.7773],
         ...,
         [0.1000, 1.0485, 0.7735],
         [0.1000, 1.0485, 0.7860],
         [0.1000, 1.0485, 0.7804]],
        [[0.1000, 1.0499, 0.8138],
         [0.1000, 1.0499, 0.8161],
         [0.1000, 1.0499, 0.8147],
         ...,
         [0.1000, 1.0499, 0.8131],
         [0.1000, 1.0499, 0.8190],
         [0.1000, 1.0499, 0.8161]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8444],
         [0.1000, 1.0508, 0.8446],
         ...,
         [0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8444],
         [0.1000, 1.0508, 0.8444]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.4704],
         [ 0.1000, 10.8051, 17.3433],
         [ 0.1000, 10.8051, 17.5789],
         ...,
         [ 0.1000, 10.8051, 18.0633],
         [ 0.1000, 10.8051, 17.4237],
         [ 0.1000, 10.8051, 17.5539]],
        [[ 0.1000, 10.6368,  9.2014],
         [ 0.1000, 10.6368,  9.2379],
         [ 0.1000, 10.6368,  9.1716],
         ...,
         [ 0.1000, 10.6368,  9.0508],
         [ 0.1000, 10.6368,  9.2146],
         [ 0.1000, 10.6368,  9.1783]],
        [[ 0.1000, 10.6161,  8.4994],
         [ 0.1000, 10.6161,  8.5449],
         [ 0.1000, 10.6161,  8.4619],
         ...,
         [ 0.1000, 10.6161,  8.3088],
         [ 0.1000, 10.6161,  8.5159],
         [ 0.1000, 10.6161,  8.4704]],
        ...,
        [[ 0.1000, 10.5905,  7.7020],
         [ 0.1000, 10.5905,  7.7567],
         [ 0.1000, 10.5905,  7.6569],
         ...,
         [ 0.1000, 10.5905,  7.4718],
         [ 0.1000, 10.5905,  7.7219],
         [ 0.1000, 10.5905,  7.6672]],
        [[ 0.1000, 10.6559,  9.9010],
         [ 0.1000, 10.6559,  9.9274],
         [ 0.1000, 10.6559,  9.8795],
         ...,
         [ 0.1000, 10.6559,  9.7946],
         [ 0.1000, 10.6559,  9.9105],
         [ 0.1000, 10.6559,  9.8844]],
        [[ 0.1000, 10.6981, 11.6386],
         [ 0.1000, 10.6981, 11.6366],
         [ 0.1000, 10.6981, 11.6410],
         ...,
         [ 0.1000, 10.6981, 11.6593],
         [ 0.1000, 10.6981, 11.6377],
         [ 0.1000, 10.6981, 11.6404]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9412],
         [0.1000, 1.0531, 0.9450],
         ...,
         [0.1000, 1.0531, 0.9529],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9446]],
        [[0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8093],
         [0.1000, 1.0495, 0.8083],
         ...,
         [0.1000, 1.0495, 0.8063],
         [0.1000, 1.0495, 0.8090],
         [0.1000, 1.0495, 0.8084]],
        [[0.1000, 1.0490, 0.7973],
         [0.1000, 1.0490, 0.7981],
         [0.1000, 1.0490, 0.7967],
         ...,
         [0.1000, 1.0490, 0.7942],
         [0.1000, 1.0490, 0.7976],
         [0.1000, 1.0490, 0.7969]],
        ...,
        [[0.1000, 1.0485, 0.7844],
         [0.1000, 1.0485, 0.7852],
         [0.1000, 1.0485, 0.7836],
         ...,
         [0.1000, 1.0485, 0.7806],
         [0.1000, 1.0485, 0.7847],
         [0.1000, 1.0485, 0.7838]],
        [[0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8205],
         [0.1000, 1.0499, 0.8198],
         ...,
         [0.1000, 1.0499, 0.8184],
         [0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8198]],
        [[0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8483],
         [0.1000, 1.0508, 0.8484],
         ...,
         [0.1000, 1.0508, 0.8487],
         [0.1000, 1.0508, 0.8484],
         [0.1000, 1.0508, 0.8484]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.0564],
         [ 0.1000, 10.8051, 17.4290],
         [ 0.1000, 10.8051, 17.8471],
         ...,
         [ 0.1000, 10.8051, 18.5223],
         [ 0.1000, 10.8051, 16.8966],
         [ 0.1000, 10.8051, 17.4853]],
        [[ 0.1000, 10.6368,  9.0524],
         [ 0.1000, 10.6368,  9.2131],
         [ 0.1000, 10.6368,  9.1023],
         ...,
         [ 0.1000, 10.6368,  8.9526],
         [ 0.1000, 10.6368,  9.3804],
         [ 0.1000, 10.6368,  9.1973]],
        [[ 0.1000, 10.6161,  8.3108],
         [ 0.1000, 10.6161,  8.5140],
         [ 0.1000, 10.6161,  8.3744],
         ...,
         [ 0.1000, 10.6161,  8.1820],
         [ 0.1000, 10.6161,  8.7214],
         [ 0.1000, 10.6161,  8.4941]],
        ...,
        [[ 0.1000, 10.5905,  7.4743],
         [ 0.1000, 10.5905,  7.7196],
         [ 0.1000, 10.5905,  7.5514],
         ...,
         [ 0.1000, 10.5905,  7.3172],
         [ 0.1000, 10.5905,  7.9674],
         [ 0.1000, 10.5905,  7.6957]],
        [[ 0.1000, 10.6559,  9.7957],
         [ 0.1000, 10.6559,  9.9094],
         [ 0.1000, 10.6559,  9.8304],
         ...,
         [ 0.1000, 10.6559,  9.7282],
         [ 0.1000, 10.6559, 10.0330],
         [ 0.1000, 10.6559,  9.8980]],
        [[ 0.1000, 10.6981, 11.6589],
         [ 0.1000, 10.6981, 11.6378],
         [ 0.1000, 10.6981, 11.6497],
         ...,
         [ 0.1000, 10.6981, 11.6859],
         [ 0.1000, 10.6981, 11.6382],
         [ 0.1000, 10.6981, 11.6389]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9495],
         [0.1000, 1.0531, 0.9393],
         [0.1000, 1.0531, 0.9461],
         ...,
         [0.1000, 1.0531, 0.9570],
         [0.1000, 1.0531, 0.9306],
         [0.1000, 1.0531, 0.9402]],
        [[0.1000, 1.0495, 0.8030],
         [0.1000, 1.0495, 0.8056],
         [0.1000, 1.0495, 0.8038],
         ...,
         [0.1000, 1.0495, 0.8014],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8054]],
        [[0.1000, 1.0490, 0.7910],
         [0.1000, 1.0490, 0.7943],
         [0.1000, 1.0490, 0.7920],
         ...,
         [0.1000, 1.0490, 0.7889],
         [0.1000, 1.0490, 0.7976],
         [0.1000, 1.0490, 0.7939]],
        ...,
        [[0.1000, 1.0485, 0.7773],
         [0.1000, 1.0485, 0.7813],
         [0.1000, 1.0485, 0.7786],
         ...,
         [0.1000, 1.0485, 0.7748],
         [0.1000, 1.0485, 0.7854],
         [0.1000, 1.0485, 0.7809]],
        [[0.1000, 1.0499, 0.8151],
         [0.1000, 1.0499, 0.8170],
         [0.1000, 1.0499, 0.8157],
         ...,
         [0.1000, 1.0499, 0.8140],
         [0.1000, 1.0499, 0.8190],
         [0.1000, 1.0499, 0.8168]],
        [[0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8453],
         ...,
         [0.1000, 1.0508, 0.8458],
         [0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8451]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
         [0.1000, 1.0485, 0.7924],,
/home/abdelmajid/workdir/cost-aware-bo/optimizer/optimize_acqf_funcs.py:518: RuntimeWarning: Optimization failed in `gen_candidates_scipy` with the following warning(s):
[OptimizationWarning('Optimization failed within `scipy.optimize.minimize` with status 2 and message ABNORMAL_TERMINATION_IN_LNSRCH.')]
Trying again with a new set of initial conditions.
  warnings.warn(first_warn_msg, RuntimeWarning)
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.8956],
         [ 0.1000, 10.8051, 17.4939],
         [ 0.1000, 10.8051, 17.7475],
         ...,
         [ 0.1000, 10.8051, 18.1470],
         [ 0.1000, 10.8051, 17.1320],
         [ 0.1000, 10.8051, 17.5123]],
        [[ 0.1000, 10.6368,  9.0905],
         [ 0.1000, 10.6368,  9.1949],
         [ 0.1000, 10.6368,  9.1273],
         ...,
         [ 0.1000, 10.6368,  9.0318],
         [ 0.1000, 10.6368,  9.3023],
         [ 0.1000, 10.6368,  9.1898]],
        [[ 0.1000, 10.6161,  8.3593],
         [ 0.1000, 10.6161,  8.4911],
         [ 0.1000, 10.6161,  8.4061],
         ...,
         [ 0.1000, 10.6161,  8.2845],
         [ 0.1000, 10.6161,  8.6251],
         [ 0.1000, 10.6161,  8.4848]],
        ...,
        [[ 0.1000, 10.5905,  7.5331],
         [ 0.1000, 10.5905,  7.6921],
         [ 0.1000, 10.5905,  7.5896],
         ...,
         [ 0.1000, 10.5905,  7.4423],
         [ 0.1000, 10.5905,  7.8526],
         [ 0.1000, 10.5905,  7.6844]],
        [[ 0.1000, 10.6559,  9.8221],
         [ 0.1000, 10.6559,  9.8962],
         [ 0.1000, 10.6559,  9.8480],
         ...,
         [ 0.1000, 10.6559,  9.7816],
         [ 0.1000, 10.6559,  9.9748],
         [ 0.1000, 10.6559,  9.8926]],
        [[ 0.1000, 10.6981, 11.6517],
         [ 0.1000, 10.6981, 11.6391],
         [ 0.1000, 10.6981, 11.6461],
         ...,
         [ 0.1000, 10.6981, 11.6635],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6394]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9495],
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9471],
         ...,
         [0.1000, 1.0531, 0.9536],
         [0.1000, 1.0531, 0.9371],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8063],
         [0.1000, 1.0495, 0.8080],
         [0.1000, 1.0495, 0.8069],
         ...,
         [0.1000, 1.0495, 0.8054],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.8079]],
        [[0.1000, 1.0490, 0.7944],
         [0.1000, 1.0490, 0.7966],
         [0.1000, 1.0490, 0.7952],
         ...,
         [0.1000, 1.0490, 0.7932],
         [0.1000, 1.0490, 0.7987],
         [0.1000, 1.0490, 0.7965]],
        ...,
        [[0.1000, 1.0485, 0.7810],
         [0.1000, 1.0485, 0.7836],
         [0.1000, 1.0485, 0.7819],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7862],
         [0.1000, 1.0485, 0.7834]],
        [[0.1000, 1.0499, 0.8182],
         [0.1000, 1.0499, 0.8194],
         [0.1000, 1.0499, 0.8186],
         ...,
         [0.1000, 1.0499, 0.8175],
         [0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8194]],
        [[0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8478],
         [0.1000, 1.0508, 0.8479],
         ...,
         [0.1000, 1.0508, 0.8482],
         [0.1000, 1.0508, 0.8477],
         [0.1000, 1.0508, 0.8478]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1279],
         [ 0.1000, 10.8051, 17.4472],
         [ 0.1000, 10.8051, 17.8765],
         ...,
         [ 0.1000, 10.8051, 18.5533],
         [ 0.1000, 10.8051, 16.8473],
         [ 0.1000, 10.8051, 17.4782]],
        [[ 0.1000, 10.6368,  9.0361],
         [ 0.1000, 10.6368,  9.2080],
         [ 0.1000, 10.6368,  9.0951],
         ...,
         [ 0.1000, 10.6368,  8.9464],
         [ 0.1000, 10.6368,  9.3977],
         [ 0.1000, 10.6368,  9.1992]],
        [[ 0.1000, 10.6161,  8.2900],
         [ 0.1000, 10.6161,  8.5076],
         [ 0.1000, 10.6161,  8.3653],
         ...,
         [ 0.1000, 10.6161,  8.1740],
         [ 0.1000, 10.6161,  8.7426],
         [ 0.1000, 10.6161,  8.4966]],
        ...,
        [[ 0.1000, 10.5905,  7.4489],
         [ 0.1000, 10.5905,  7.7118],
         [ 0.1000, 10.5905,  7.5403],
         ...,
         [ 0.1000, 10.5905,  7.3074],
         [ 0.1000, 10.5905,  7.9926],
         [ 0.1000, 10.5905,  7.6987]],
        [[ 0.1000, 10.6559,  9.7845],
         [ 0.1000, 10.6559,  9.9057],
         [ 0.1000, 10.6559,  9.8254],
         ...,
         [ 0.1000, 10.6559,  9.7241],
         [ 0.1000, 10.6559, 10.0460],
         [ 0.1000, 10.6559,  9.8994]],
        [[ 0.1000, 10.6981, 11.6625],
         [ 0.1000, 10.6981, 11.6382],
         [ 0.1000, 10.6981, 11.6509],
         ...,
         [ 0.1000, 10.6981, 11.6880],
         [ 0.1000, 10.6981, 11.6393],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9504],
         [0.1000, 1.0531, 0.9393],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9573],
         [0.1000, 1.0531, 0.9296],
         [0.1000, 1.0531, 0.9398]],
        [[0.1000, 1.0495, 0.8025],
         [0.1000, 1.0495, 0.8053],
         [0.1000, 1.0495, 0.8035],
         ...,
         [0.1000, 1.0495, 0.8011],
         [0.1000, 1.0495, 0.8084],
         [0.1000, 1.0495, 0.8052]],
        [[0.1000, 1.0490, 0.7904],
         [0.1000, 1.0490, 0.7939],
         [0.1000, 1.0490, 0.7916],
         ...,
         [0.1000, 1.0490, 0.7885],
         [0.1000, 1.0490, 0.7978],
         [0.1000, 1.0490, 0.7938]],
        ...,
        [[0.1000, 1.0485, 0.7767],
         [0.1000, 1.0485, 0.7810],
         [0.1000, 1.0485, 0.7782],
         ...,
         [0.1000, 1.0485, 0.7744],
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7808]],
        [[0.1000, 1.0499, 0.8147],
         [0.1000, 1.0499, 0.8167],
         [0.1000, 1.0499, 0.8154],
         ...,
         [0.1000, 1.0499, 0.8137],
         [0.1000, 1.0499, 0.8190],
         [0.1000, 1.0499, 0.8166]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8451],
         ...,
         [0.1000, 1.0508, 0.8457],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1498],
         [ 0.1000, 10.8051, 17.4429],
         [ 0.1000, 10.8051, 17.8886],
         ...,
         [ 0.1000, 10.8051, 18.5919],
         [ 0.1000, 10.8051, 16.8217],
         [ 0.1000, 10.8051, 17.4751]],
        [[ 0.1000, 10.6368,  9.0312],
         [ 0.1000, 10.6368,  9.2092],
         [ 0.1000, 10.6368,  9.0922],
         ...,
         [ 0.1000, 10.6368,  8.9388],
         [ 0.1000, 10.6368,  9.4068],
         [ 0.1000, 10.6368,  9.2001]],
        [[ 0.1000, 10.6161,  8.2837],
         [ 0.1000, 10.6161,  8.5091],
         [ 0.1000, 10.6161,  8.3615],
         ...,
         [ 0.1000, 10.6161,  8.1641],
         [ 0.1000, 10.6161,  8.7538],
         [ 0.1000, 10.6161,  8.4977]],
        ...,
        [[ 0.1000, 10.5905,  7.4413],
         [ 0.1000, 10.5905,  7.7137],
         [ 0.1000, 10.5905,  7.5358],
         ...,
         [ 0.1000, 10.5905,  7.2953],
         [ 0.1000, 10.5905,  8.0059],
         [ 0.1000, 10.5905,  7.7000]],
        [[ 0.1000, 10.6559,  9.7811],
         [ 0.1000, 10.6559,  9.9066],
         [ 0.1000, 10.6559,  9.8233],
         ...,
         [ 0.1000, 10.6559,  9.7192],
         [ 0.1000, 10.6559, 10.0529],
         [ 0.1000, 10.6559,  9.9000]],
        [[ 0.1000, 10.6981, 11.6637],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6514],
         ...,
         [ 0.1000, 10.6981, 11.6906],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9289],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7808],
         [0.1000, 1.0485, 0.7779],
         ...,
         [0.1000, 1.0485, 0.7740],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1520],
         [ 0.1000, 10.8051, 17.4425],
         [ 0.1000, 10.8051, 17.8898],
         ...,
         [ 0.1000, 10.8051, 18.5958],
         [ 0.1000, 10.8051, 16.8192],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0919],
         ...,
         [ 0.1000, 10.6368,  8.9381],
         [ 0.1000, 10.6368,  9.4077],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1632],
         [ 0.1000, 10.6161,  8.7549],
         [ 0.1000, 10.6161,  8.4978]],
        ...,
        [[ 0.1000, 10.5905,  7.4405],
         [ 0.1000, 10.5905,  7.7138],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2941],
         [ 0.1000, 10.5905,  8.0072],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7187],
         [ 0.1000, 10.6559, 10.0536],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1522],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1631],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0073],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1522],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.1523],
         [ 0.1000, 10.8051, 17.4424],
         [ 0.1000, 10.8051, 17.8899],
         ...,
         [ 0.1000, 10.8051, 18.5962],
         [ 0.1000, 10.8051, 16.8189],
         [ 0.1000, 10.8051, 17.4747]],
        [[ 0.1000, 10.6368,  9.0307],
         [ 0.1000, 10.6368,  9.2093],
         [ 0.1000, 10.6368,  9.0918],
         ...,
         [ 0.1000, 10.6368,  8.9380],
         [ 0.1000, 10.6368,  9.4078],
         [ 0.1000, 10.6368,  9.2002]],
        [[ 0.1000, 10.6161,  8.2830],
         [ 0.1000, 10.6161,  8.5092],
         [ 0.1000, 10.6161,  8.3611],
         ...,
         [ 0.1000, 10.6161,  8.1630],
         [ 0.1000, 10.6161,  8.7550],
         [ 0.1000, 10.6161,  8.4979]],
        ...,
        [[ 0.1000, 10.5905,  7.4404],
         [ 0.1000, 10.5905,  7.7139],
         [ 0.1000, 10.5905,  7.5353],
         ...,
         [ 0.1000, 10.5905,  7.2940],
         [ 0.1000, 10.5905,  8.0074],
         [ 0.1000, 10.5905,  7.7002]],
        [[ 0.1000, 10.6559,  9.7808],
         [ 0.1000, 10.6559,  9.9067],
         [ 0.1000, 10.6559,  9.8231],
         ...,
         [ 0.1000, 10.6559,  9.7186],
         [ 0.1000, 10.6559, 10.0537],
         [ 0.1000, 10.6559,  9.9001]],
        [[ 0.1000, 10.6981, 11.6638],
         [ 0.1000, 10.6981, 11.6381],
         [ 0.1000, 10.6981, 11.6515],
         ...,
         [ 0.1000, 10.6981, 11.6909],
         [ 0.1000, 10.6981, 11.6400],
         [ 0.1000, 10.6981, 11.6387]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9390],
         [0.1000, 1.0531, 0.9463],
         ...,
         [0.1000, 1.0531, 0.9577],
         [0.1000, 1.0531, 0.9288],
         [0.1000, 1.0531, 0.9395]],
        [[0.1000, 1.0495, 0.8022],
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8032],
         ...,
         [0.1000, 1.0495, 0.8007],
         [0.1000, 1.0495, 0.8083],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7900],
         [0.1000, 1.0490, 0.7937],
         [0.1000, 1.0490, 0.7913],
         ...,
         [0.1000, 1.0490, 0.7881],
         [0.1000, 1.0490, 0.7977],
         [0.1000, 1.0490, 0.7935]],
        ...,
        [[0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.7807],
         [0.1000, 1.0485, 0.7778],
         ...,
         [0.1000, 1.0485, 0.7739],
         [0.1000, 1.0485, 0.7855],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8144],
         [0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8151],
         ...,
         [0.1000, 1.0499, 0.8134],
         [0.1000, 1.0499, 0.8188],
         [0.1000, 1.0499, 0.8163]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8448],
         ...,
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8446],
         [0.1000, 1.0508, 0.8446]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 19.2532],
         [ 0.1000, 10.8051, 22.5814],
         [ 0.1000, 10.8051, 21.6991],
         ...,
         [ 0.1000, 10.8051, 16.1627],
         [ 0.1000, 10.8051, 27.8330],
         [ 0.1000, 10.8051, 18.7053]],
        [[ 0.1000, 10.6368, 14.6488],
         [ 0.1000, 10.6368, 18.4589],
         [ 0.1000, 10.6368, 20.8575],
         ...,
         [ 0.1000, 10.6368, 11.5822],
         [ 0.1000, 10.6368, 18.0528],
         [ 0.1000, 10.6368,  8.8316]],
        [[ 0.1000, 10.6161, 14.1615],
         [ 0.1000, 10.6161, 18.0040],
         [ 0.1000, 10.6161, 20.7556],
         ...,
         [ 0.1000, 10.6161, 11.1141],
         [ 0.1000, 10.6161, 17.1108],
         [ 0.1000, 10.6161,  8.0481]],
        ...,
        [[ 0.1000, 10.5905, 13.5791],
         [ 0.1000, 10.5905, 17.4550],
         [ 0.1000, 10.5905, 20.6299],
         ...,
         [ 0.1000, 10.5905, 10.5594],
         [ 0.1000, 10.5905, 16.0097],
         [ 0.1000, 10.5905,  7.1716]],
        [[ 0.1000, 10.6559, 15.1136],
         [ 0.1000, 10.6559, 18.8891],
         [ 0.1000, 10.6559, 20.9520],
         ...,
         [ 0.1000, 10.6559, 12.0318],
         [ 0.1000, 10.6559, 18.9685],
         [ 0.1000, 10.6559,  9.6225]],
        [[ 0.1000, 10.6981, 16.1921],
         [ 0.1000, 10.6981, 19.8742],
         [ 0.1000, 10.6981, 21.1621],
         ...,
         [ 0.1000, 10.6981, 13.0866],
         [ 0.1000, 10.6981, 21.1567],
         [ 0.1000, 10.6981, 11.6275]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9663],
         [0.1000, 1.0531, 1.0205],
         [0.1000, 1.0531, 1.0061],
         ...,
         [0.1000, 1.0531, 0.9161],
         [0.1000, 1.0531, 1.1059],
         [0.1000, 1.0531, 0.9574]],
        [[0.1000, 1.0495, 0.8914],
         [0.1000, 1.0495, 0.9534],
         [0.1000, 1.0495, 0.9924],
         ...,
         [0.1000, 1.0495, 0.8416],
         [0.1000, 1.0495, 0.9468],
         [0.1000, 1.0495, 0.7968]],
        [[0.1000, 1.0490, 0.8835],
         [0.1000, 1.0490, 0.9460],
         [0.1000, 1.0490, 0.9908],
         ...,
         [0.1000, 1.0490, 0.8340],
         [0.1000, 1.0490, 0.9315],
         [0.1000, 1.0490, 0.7841]],
        ...,
        [[0.1000, 1.0485, 0.8740],
         [0.1000, 1.0485, 0.9371],
         [0.1000, 1.0485, 0.9887],
         ...,
         [0.1000, 1.0485, 0.8249],
         [0.1000, 1.0485, 0.9136],
         [0.1000, 1.0485, 0.7698]],
        [[0.1000, 1.0499, 0.8990],
         [0.1000, 1.0499, 0.9604],
         [0.1000, 1.0499, 0.9940],
         ...,
         [0.1000, 1.0499, 0.8489],
         [0.1000, 1.0499, 0.9617],
         [0.1000, 1.0499, 0.8097]],
        [[0.1000, 1.0508, 0.9165],
         [0.1000, 1.0508, 0.9764],
         [0.1000, 1.0508, 0.9974],
         ...,
         [0.1000, 1.0508, 0.8660],
         [0.1000, 1.0508, 0.9973],
         [0.1000, 1.0508, 0.8423]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.8119],
         [ 0.1000, 10.8051, 21.9316],
         [ 0.1000, 10.8051, 19.5538],
         ...,
         [ 0.1000, 10.8051, 15.4103],
         [ 0.1000, 10.8051, 27.4456],
         [ 0.1000, 10.8051, 18.6112]],
        [[ 0.1000, 10.6368, 11.8475],
         [ 0.1000, 10.6368, 18.0839],
         [ 0.1000, 10.6368, 18.8343],
         ...,
         [ 0.1000, 10.6368, 10.8070],
         [ 0.1000, 10.6368, 17.4804],
         [ 0.1000, 10.6368,  8.8902]],
        [[ 0.1000, 10.6161, 11.3452],
         [ 0.1000, 10.6161, 17.6571],
         [ 0.1000, 10.6161, 18.7471],
         ...,
         [ 0.1000, 10.6161, 10.3426],
         [ 0.1000, 10.6161, 16.5310],
         [ 0.1000, 10.6161,  8.1132]],
        ...,
        [[ 0.1000, 10.5905, 10.7512],
         [ 0.1000, 10.5905, 17.1415],
         [ 0.1000, 10.5905, 18.6394],
         ...,
         [ 0.1000, 10.5905,  9.7938],
         [ 0.1000, 10.5905, 15.4240],
         [ 0.1000, 10.5905,  7.2426]],
        [[ 0.1000, 10.6559, 12.3309],
         [ 0.1000, 10.6559, 18.4870],
         [ 0.1000, 10.6559, 18.9152],
         ...,
         [ 0.1000, 10.6559, 11.2543],
         [ 0.1000, 10.6559, 18.4053],
         [ 0.1000, 10.6559,  9.6735]],
        [[ 0.1000, 10.6981, 13.4687],
         [ 0.1000, 10.6981, 19.4086],
         [ 0.1000, 10.6981, 19.0949],
         ...,
         [ 0.1000, 10.6981, 12.3078],
         [ 0.1000, 10.6981, 20.6230],
         [ 0.1000, 10.6981, 11.6547]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9279],
         [0.1000, 1.0531, 1.0112],
         [0.1000, 1.0531, 0.9725],
         ...,
         [0.1000, 1.0531, 0.9051],
         [0.1000, 1.0531, 1.1008],
         [0.1000, 1.0531, 0.9572]],
        [[0.1000, 1.0495, 0.8472],
         [0.1000, 1.0495, 0.9486],
         [0.1000, 1.0495, 0.9608],
         ...,
         [0.1000, 1.0495, 0.8302],
         [0.1000, 1.0495, 0.9388],
         [0.1000, 1.0495, 0.7991]],
        [[0.1000, 1.0490, 0.8390],
         [0.1000, 1.0490, 0.9416],
         [0.1000, 1.0490, 0.9594],
         ...,
         [0.1000, 1.0490, 0.8227],
         [0.1000, 1.0490, 0.9233],
         [0.1000, 1.0490, 0.7864]],
        ...,
        [[0.1000, 1.0485, 0.8293],
         [0.1000, 1.0485, 0.9333],
         [0.1000, 1.0485, 0.9576],
         ...,
         [0.1000, 1.0485, 0.8137],
         [0.1000, 1.0485, 0.9053],
         [0.1000, 1.0485, 0.7723]],
        [[0.1000, 1.0499, 0.8550],
         [0.1000, 1.0499, 0.9551],
         [0.1000, 1.0499, 0.9621],
         ...,
         [0.1000, 1.0499, 0.8375],
         [0.1000, 1.0499, 0.9538],
         [0.1000, 1.0499, 0.8118]],
        [[0.1000, 1.0508, 0.8735],
         [0.1000, 1.0508, 0.9701],
         [0.1000, 1.0508, 0.9650],
         ...,
         [0.1000, 1.0508, 0.8546],
         [0.1000, 1.0508, 0.9899],
         [0.1000, 1.0508, 0.8440]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.4655],
         [ 0.1000, 10.8051, 21.1107],
         [ 0.1000, 10.8051, 15.4148],
         ...,
         [ 0.1000, 10.8051, 15.2700],
         [ 0.1000, 10.8051, 26.9435],
         [ 0.1000, 10.8051, 18.2375]],
        [[ 0.1000, 10.6368, 10.2444],
         [ 0.1000, 10.6368, 17.4014],
         [ 0.1000, 10.6368, 14.4872],
         ...,
         [ 0.1000, 10.6368, 10.0877],
         [ 0.1000, 10.6368, 16.6416],
         [ 0.1000, 10.6368,  9.0119]],
        [[ 0.1000, 10.6161,  9.7352],
         [ 0.1000, 10.6161, 16.9901],
         [ 0.1000, 10.6161, 14.3763],
         ...,
         [ 0.1000, 10.6161,  9.5831],
         [ 0.1000, 10.6161, 15.6780],
         [ 0.1000, 10.6161,  8.2588]],
        ...,
        [[ 0.1000, 10.5905,  9.1382],
         [ 0.1000, 10.5905, 16.4930],
         [ 0.1000, 10.5905, 14.2399],
         ...,
         [ 0.1000, 10.5905,  8.9917],
         [ 0.1000, 10.5905, 14.5592],
         [ 0.1000, 10.5905,  7.4110]],
        [[ 0.1000, 10.6559, 10.7381],
         [ 0.1000, 10.6559, 17.7899],
         [ 0.1000, 10.6559, 14.5903],
         ...,
         [ 0.1000, 10.6559, 10.5772],
         [ 0.1000, 10.6559, 17.5837],
         [ 0.1000, 10.6559,  9.7679]],
        [[ 0.1000, 10.6981, 11.9135],
         [ 0.1000, 10.6981, 18.6783],
         [ 0.1000, 10.6981, 14.8205],
         ...,
         [ 0.1000, 10.6981, 11.7429],
         [ 0.1000, 10.6981, 19.8556],
         [ 0.1000, 10.6981, 11.6684]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9093],
         [0.1000, 1.0531, 1.0011],
         [0.1000, 1.0531, 0.9085],
         ...,
         [0.1000, 1.0531, 0.9061],
         [0.1000, 1.0531, 1.0960],
         [0.1000, 1.0531, 0.9544]],
        [[0.1000, 1.0495, 0.8244],
         [0.1000, 1.0495, 0.9408],
         [0.1000, 1.0495, 0.8934],
         ...,
         [0.1000, 1.0495, 0.8219],
         [0.1000, 1.0495, 0.9285],
         [0.1000, 1.0495, 0.8044]],
        [[0.1000, 1.0490, 0.8161],
         [0.1000, 1.0490, 0.9341],
         [0.1000, 1.0490, 0.8916],
         ...,
         [0.1000, 1.0490, 0.8136],
         [0.1000, 1.0490, 0.9128],
         [0.1000, 1.0490, 0.7921]],
        ...,
        [[0.1000, 1.0485, 0.8064],
         [0.1000, 1.0485, 0.9260],
         [0.1000, 1.0485, 0.8894],
         ...,
         [0.1000, 1.0485, 0.8040],
         [0.1000, 1.0485, 0.8946],
         [0.1000, 1.0485, 0.7783]],
        [[0.1000, 1.0499, 0.8324],
         [0.1000, 1.0499, 0.9471],
         [0.1000, 1.0499, 0.8951],
         ...,
         [0.1000, 1.0499, 0.8298],
         [0.1000, 1.0499, 0.9438],
         [0.1000, 1.0499, 0.8167]],
        [[0.1000, 1.0508, 0.8516],
         [0.1000, 1.0508, 0.9616],
         [0.1000, 1.0508, 0.8988],
         ...,
         [0.1000, 1.0508, 0.8488],
         [0.1000, 1.0508, 0.9807],
         [0.1000, 1.0508, 0.8476]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.6431],
         [ 0.1000, 10.8051, 20.5400],
         [ 0.1000, 10.8051, 15.5643],
         ...,
         [ 0.1000, 10.8051, 15.4382],
         [ 0.1000, 10.8051, 26.5416],
         [ 0.1000, 10.8051, 17.7352]],
        [[ 0.1000, 10.6368,  9.7935],
         [ 0.1000, 10.6368, 16.6869],
         [ 0.1000, 10.6368, 14.7042],
         ...,
         [ 0.1000, 10.6368,  9.8066],
         [ 0.1000, 10.6368, 15.9604],
         [ 0.1000, 10.6368,  9.1305]],
        [[ 0.1000, 10.6161,  9.2419],
         [ 0.1000, 10.6161, 16.2632],
         [ 0.1000, 10.6161, 14.6011],
         ...,
         [ 0.1000, 10.6161,  9.2710],
         [ 0.1000, 10.6161, 14.9866],
         [ 0.1000, 10.6161,  8.4101]],
        ...,
        [[ 0.1000, 10.5905,  8.6002],
         [ 0.1000, 10.5905, 15.7523],
         [ 0.1000, 10.5905, 14.4741],
         ...,
         [ 0.1000, 10.5905,  8.6466],
         [ 0.1000, 10.5905, 13.8600],
         [ 0.1000, 10.5905,  7.5944]],
        [[ 0.1000, 10.6559, 10.3319],
         [ 0.1000, 10.6559, 17.0878],
         [ 0.1000, 10.6559, 14.8000],
         ...,
         [ 0.1000, 10.6559, 10.3286],
         [ 0.1000, 10.6559, 16.9156],
         [ 0.1000, 10.6559,  9.8502]],
        [[ 0.1000, 10.6981, 11.6271],
         [ 0.1000, 10.6981, 18.0070],
         [ 0.1000, 10.6981, 15.0137],
         ...,
         [ 0.1000, 10.6981, 11.5809],
         [ 0.1000, 10.6981, 19.2306],
         [ 0.1000, 10.6981, 11.6457]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9161],
         [0.1000, 1.0531, 0.9958],
         [0.1000, 1.0531, 0.9149],
         ...,
         [0.1000, 1.0531, 0.9128],
         [0.1000, 1.0531, 1.0934],
         [0.1000, 1.0531, 0.9502]],
        [[0.1000, 1.0495, 0.8210],
         [0.1000, 1.0495, 0.9331],
         [0.1000, 1.0495, 0.9009],
         ...,
         [0.1000, 1.0495, 0.8212],
         [0.1000, 1.0495, 0.9213],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.8120],
         [0.1000, 1.0490, 0.9262],
         [0.1000, 1.0490, 0.8992],
         ...,
         [0.1000, 1.0490, 0.8125],
         [0.1000, 1.0490, 0.9055],
         [0.1000, 1.0490, 0.7985]],
        ...,
        [[0.1000, 1.0485, 0.8016],
         [0.1000, 1.0485, 0.9179],
         [0.1000, 1.0485, 0.8971],
         ...,
         [0.1000, 1.0485, 0.8023],
         [0.1000, 1.0485, 0.8871],
         [0.1000, 1.0485, 0.7852]],
        [[0.1000, 1.0499, 0.8297],
         [0.1000, 1.0499, 0.9396],
         [0.1000, 1.0499, 0.9024],
         ...,
         [0.1000, 1.0499, 0.8297],
         [0.1000, 1.0499, 0.9368],
         [0.1000, 1.0499, 0.8219]],
        [[0.1000, 1.0508, 0.8508],
         [0.1000, 1.0508, 0.9546],
         [0.1000, 1.0508, 0.9059],
         ...,
         [0.1000, 1.0508, 0.8501],
         [0.1000, 1.0508, 0.9745],
         [0.1000, 1.0508, 0.8511]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.0986],
         [ 0.1000, 10.8051, 18.4434],
         [ 0.1000, 10.8051, 16.7577],
         ...,
         [ 0.1000, 10.8051, 17.5626],
         [ 0.1000, 10.8051, 23.1925],
         [ 0.1000, 10.8051, 16.5350]],
        [[ 0.1000, 10.6368,  8.8495],
         [ 0.1000, 10.6368, 13.3771],
         [ 0.1000, 10.6368, 16.2834],
         ...,
         [ 0.1000, 10.6368,  8.9506],
         [ 0.1000, 10.6368, 13.3983],
         [ 0.1000, 10.6368,  9.5156]],
        [[ 0.1000, 10.6161,  8.0995],
         [ 0.1000, 10.6161, 12.8557],
         [ 0.1000, 10.6161, 16.2256],
         ...,
         [ 0.1000, 10.6161,  8.2341],
         [ 0.1000, 10.6161, 12.5185],
         [ 0.1000, 10.6161,  8.8865]],
        ...,
        [[ 0.1000, 10.5905,  7.2563],
         [ 0.1000, 10.5905, 12.2367],
         [ 0.1000, 10.5905, 16.1542],
         ...,
         [ 0.1000, 10.5905,  7.4240],
         [ 0.1000, 10.5905, 11.5063],
         [ 0.1000, 10.5905,  8.1632]],
        [[ 0.1000, 10.6559,  9.6036],
         [ 0.1000, 10.6559, 13.8772],
         [ 0.1000, 10.6559, 16.3369],
         ...,
         [ 0.1000, 10.6559,  9.6674],
         [ 0.1000, 10.6559, 14.2654],
         [ 0.1000, 10.6559, 10.1359]],
        [[ 0.1000, 10.6981, 11.5025],
         [ 0.1000, 10.6981, 15.0480],
         [ 0.1000, 10.6981, 16.4556],
         ...,
         [ 0.1000, 10.6981, 11.4587],
         [ 0.1000, 10.6981, 16.3825],
         [ 0.1000, 10.6981, 11.6514]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9500],
         [0.1000, 1.0531, 0.9556],
         [0.1000, 1.0531, 0.9282],
         ...,
         [0.1000, 1.0531, 0.9412],
         [0.1000, 1.0531, 1.0328],
         [0.1000, 1.0531, 0.9245]],
        [[0.1000, 1.0495, 0.7995],
         [0.1000, 1.0495, 0.8732],
         [0.1000, 1.0495, 0.9204],
         ...,
         [0.1000, 1.0495, 0.8012],
         [0.1000, 1.0495, 0.8735],
         [0.1000, 1.0495, 0.8104]],
        [[0.1000, 1.0490, 0.7873],
         [0.1000, 1.0490, 0.8647],
         [0.1000, 1.0490, 0.9195],
         ...,
         [0.1000, 1.0490, 0.7895],
         [0.1000, 1.0490, 0.8592],
         [0.1000, 1.0490, 0.8001]],
        ...,
        [[0.1000, 1.0485, 0.7736],
         [0.1000, 1.0485, 0.8546],
         [0.1000, 1.0485, 0.9183],
         ...,
         [0.1000, 1.0485, 0.7763],
         [0.1000, 1.0485, 0.8427],
         [0.1000, 1.0485, 0.7884]],
        [[0.1000, 1.0499, 0.8118],
         [0.1000, 1.0499, 0.8813],
         [0.1000, 1.0499, 0.9213],
         ...,
         [0.1000, 1.0499, 0.8128],
         [0.1000, 1.0499, 0.8876],
         [0.1000, 1.0499, 0.8205]],
        [[0.1000, 1.0508, 0.8427],
         [0.1000, 1.0508, 0.9003],
         [0.1000, 1.0508, 0.9232],
         ...,
         [0.1000, 1.0508, 0.8420],
         [0.1000, 1.0508, 0.9221],
         [0.1000, 1.0508, 0.8451]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 15.5076],
         [ 0.1000, 10.8051, 18.5646],
         ...,
         [ 0.1000, 10.8051, 20.0374],
         [ 0.1000, 10.8051, 14.8010],
         [ 0.1000, 10.8051, 15.4450]],
        [[ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 11.3559],
         [ 0.1000, 10.6368, 18.1067],
         ...,
         [ 0.1000, 10.6368,  8.7087],
         [ 0.1000, 10.6368, 10.7797],
         [ 0.1000, 10.6368, 10.1008]],
        [[ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 10.9263],
         [ 0.1000, 10.6161, 18.0508],
         ...,
         [ 0.1000, 10.6161,  7.8551],
         [ 0.1000, 10.6161, 10.3648],
         [ 0.1000, 10.6161,  9.5835]],
        ...,
        [[ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905, 10.4155],
         [ 0.1000, 10.5905, 17.9817],
         ...,
         [ 0.1000, 10.5905,  6.9111],
         [ 0.1000, 10.5905,  9.8720],
         [ 0.1000, 10.5905,  8.9782]],
        [[ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 11.7676],
         [ 0.1000, 10.6559, 18.1585],
         ...,
         [ 0.1000, 10.6559,  9.5788],
         [ 0.1000, 10.6559, 11.1774],
         [ 0.1000, 10.6559, 10.6031]],
        [[ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 12.7296],
         [ 0.1000, 10.6981, 18.2732],
         ...,
         [ 0.1000, 10.6981, 11.8189],
         [ 0.1000, 10.6981, 12.1078],
         [ 0.1000, 10.6981, 11.8018]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.8993],
         [0.1000, 1.0531, 0.9490],
         ...,
         [0.1000, 1.0531, 0.9730],
         [0.1000, 1.0531, 0.8878],
         [0.1000, 1.0531, 0.8983]],
        [[0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8318],
         [0.1000, 1.0495, 0.9416],
         ...,
         [0.1000, 1.0495, 0.7887],
         [0.1000, 1.0495, 0.8224],
         [0.1000, 1.0495, 0.8114]],
        [[0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8248],
         [0.1000, 1.0490, 0.9407],
         ...,
         [0.1000, 1.0490, 0.7749],
         [0.1000, 1.0490, 0.8157],
         [0.1000, 1.0490, 0.8030]],
        ...,
        [[0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8165],
         [0.1000, 1.0485, 0.9396],
         ...,
         [0.1000, 1.0485, 0.7595],
         [0.1000, 1.0485, 0.8077],
         [0.1000, 1.0485, 0.7931]],
        [[0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8385],
         [0.1000, 1.0499, 0.9424],
         ...,
         [0.1000, 1.0499, 0.8029],
         [0.1000, 1.0499, 0.8289],
         [0.1000, 1.0499, 0.8196]],
        [[0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8541],
         [0.1000, 1.0508, 0.9443],
         ...,
         [0.1000, 1.0508, 0.8393],
         [0.1000, 1.0508, 0.8440],
         [0.1000, 1.0508, 0.8391]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.1107],
         [ 0.1000, 10.8051, 13.9157],
         [ 0.1000, 10.8051, 18.1659],
         ...,
         [ 0.1000, 10.8051, 17.4290],
         [ 0.1000, 10.8051, 15.8383],
         [ 0.1000, 10.8051, 15.6348]],
        [[ 0.1000, 10.6368,  9.3091],
         [ 0.1000, 10.6368, 10.9972],
         [ 0.1000, 10.6368, 17.7833],
         ...,
         [ 0.1000, 10.6368,  9.2131],
         [ 0.1000, 10.6368,  9.9548],
         [ 0.1000, 10.6368,  9.9710]],
        [[ 0.1000, 10.6161,  8.6334],
         [ 0.1000, 10.6161, 10.6814],
         [ 0.1000, 10.6161, 17.7365],
         ...,
         [ 0.1000, 10.6161,  8.5140],
         [ 0.1000, 10.6161,  9.3987],
         [ 0.1000, 10.6161,  9.4309]],
        ...,
        [[ 0.1000, 10.5905,  7.8626],
         [ 0.1000, 10.5905, 10.3019],
         [ 0.1000, 10.5905, 17.6786],
         ...,
         [ 0.1000, 10.5905,  7.7196],
         [ 0.1000, 10.5905,  8.7515],
         [ 0.1000, 10.5905,  8.8011]],
        [[ 0.1000, 10.6559,  9.9798],
         [ 0.1000, 10.6559, 11.2970],
         [ 0.1000, 10.6559, 17.8266],
         ...,
         [ 0.1000, 10.6559,  9.9094],
         [ 0.1000, 10.6559, 10.4974],
         [ 0.1000, 10.6559, 10.4970]],
        [[ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.9879],
         [ 0.1000, 10.6981, 17.9226],
         ...,
         [ 0.1000, 10.6981, 11.6378],
         [ 0.1000, 10.6981, 11.8017],
         [ 0.1000, 10.6981, 11.7579]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9296],
         [0.1000, 1.0531, 0.8777],
         [0.1000, 1.0531, 0.9468],
         ...,
         [0.1000, 1.0531, 0.9348],
         [0.1000, 1.0531, 0.9089],
         [0.1000, 1.0531, 0.9056]],
        [[0.1000, 1.0495, 0.8028],
         [0.1000, 1.0495, 0.8302],
         [0.1000, 1.0495, 0.9406],
         ...,
         [0.1000, 1.0495, 0.8012],
         [0.1000, 1.0495, 0.8133],
         [0.1000, 1.0495, 0.8135]],
        [[0.1000, 1.0490, 0.7918],
         [0.1000, 1.0490, 0.8251],
         [0.1000, 1.0490, 0.9398],
         ...,
         [0.1000, 1.0490, 0.7898],
         [0.1000, 1.0490, 0.8042],
         [0.1000, 1.0490, 0.8047]],
        ...,
        [[0.1000, 1.0485, 0.7792],
         [0.1000, 1.0485, 0.8189],
         [0.1000, 1.0485, 0.9389],
         ...,
         [0.1000, 1.0485, 0.7769],
         [0.1000, 1.0485, 0.7937],
         [0.1000, 1.0485, 0.7945]],
        [[0.1000, 1.0499, 0.8137],
         [0.1000, 1.0499, 0.8351],
         [0.1000, 1.0499, 0.9413],
         ...,
         [0.1000, 1.0499, 0.8125],
         [0.1000, 1.0499, 0.8221],
         [0.1000, 1.0499, 0.8221]],
        [[0.1000, 1.0508, 0.8406],
         [0.1000, 1.0508, 0.8463],
         [0.1000, 1.0508, 0.9428],
         ...,
         [0.1000, 1.0508, 0.8406],
         [0.1000, 1.0508, 0.8433],
         [0.1000, 1.0508, 0.8426]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 14.6515],
         [ 0.1000, 10.8051, 18.8825],
         [ 0.1000, 10.8051, 15.9102],
         ...,
         [ 0.1000, 10.8051, 14.8691],
         [ 0.1000, 10.8051, 15.9324],
         [ 0.1000, 10.8051, 16.7804]],
        [[ 0.1000, 10.6368, 10.9844],
         [ 0.1000, 10.6368,  8.8845],
         [ 0.1000, 10.6368, 15.1821],
         ...,
         [ 0.1000, 10.6368, 10.6479],
         [ 0.1000, 10.6368,  9.4087],
         [ 0.1000, 10.6368,  9.4217]],
        [[ 0.1000, 10.6161, 10.5996],
         [ 0.1000, 10.6161,  8.0929],
         [ 0.1000, 10.6161, 15.0944],
         ...,
         [ 0.1000, 10.6161, 10.2167],
         [ 0.1000, 10.6161,  8.8148],
         [ 0.1000, 10.6161,  8.7720]],
        ...,
        [[ 0.1000, 10.5905, 10.1407],
         [ 0.1000, 10.5905,  7.2077],
         [ 0.1000, 10.5905, 14.9861],
         ...,
         [ 0.1000, 10.5905,  9.7058],
         [ 0.1000, 10.5905,  8.1295],
         [ 0.1000, 10.5905,  8.0275]],
        [[ 0.1000, 10.6559, 11.3521],
         [ 0.1000, 10.6559,  9.6840],
         [ 0.1000, 10.6559, 15.2636],
         ...,
         [ 0.1000, 10.6559, 11.0621],
         [ 0.1000, 10.6559,  9.9925],
         [ 0.1000, 10.6559, 10.0642]],
        [[ 0.1000, 10.6981, 12.2074],
         [ 0.1000, 10.6981, 11.7119],
         [ 0.1000, 10.6981, 15.4450],
         ...,
         [ 0.1000, 10.6981, 12.0340],
         [ 0.1000, 10.6981, 11.4120],
         [ 0.1000, 10.6981, 11.6411]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.8854],
         [0.1000, 1.0531, 0.9542],
         [0.1000, 1.0531, 0.9059],
         ...,
         [0.1000, 1.0531, 0.8889],
         [0.1000, 1.0531, 0.9062],
         [0.1000, 1.0531, 0.9200]],
        [[0.1000, 1.0495, 0.8258],
         [0.1000, 1.0495, 0.7916],
         [0.1000, 1.0495, 0.8940],
         ...,
         [0.1000, 1.0495, 0.8203],
         [0.1000, 1.0495, 0.8001],
         [0.1000, 1.0495, 0.8003]],
        [[0.1000, 1.0490, 0.8195],
         [0.1000, 1.0490, 0.7787],
         [0.1000, 1.0490, 0.8926],
         ...,
         [0.1000, 1.0490, 0.8133],
         [0.1000, 1.0490, 0.7905],
         [0.1000, 1.0490, 0.7898]],
        ...,
        [[0.1000, 1.0485, 0.8120],
         [0.1000, 1.0485, 0.7643],
         [0.1000, 1.0485, 0.8908],
         ...,
         [0.1000, 1.0485, 0.8050],
         [0.1000, 1.0485, 0.7793],
         [0.1000, 1.0485, 0.7777]],
        [[0.1000, 1.0499, 0.8317],
         [0.1000, 1.0499, 0.8046],
         [0.1000, 1.0499, 0.8954],
         ...,
         [0.1000, 1.0499, 0.8270],
         [0.1000, 1.0499, 0.8096],
         [0.1000, 1.0499, 0.8108]],
        [[0.1000, 1.0508, 0.8457],
         [0.1000, 1.0508, 0.8376],
         [0.1000, 1.0508, 0.8983],
         ...,
         [0.1000, 1.0508, 0.8428],
         [0.1000, 1.0508, 0.8327],
         [0.1000, 1.0508, 0.8364]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.5970],
         [ 0.1000, 10.8051, 15.5522],
         [ 0.1000, 10.8051, 16.8932],
         ...,
         [ 0.1000, 10.8051, 15.9146],
         [ 0.1000, 10.8051, 16.1794],
         [ 0.1000, 10.8051, 16.1484]],
        [[ 0.1000, 10.6368,  9.9955],
         [ 0.1000, 10.6368,  9.7149],
         [ 0.1000, 10.6368, 16.4522],
         ...,
         [ 0.1000, 10.6368,  9.8057],
         [ 0.1000, 10.6368,  9.5070],
         [ 0.1000, 10.6368,  9.6859]],
        [[ 0.1000, 10.6161,  9.4599],
         [ 0.1000, 10.6161,  9.1652],
         [ 0.1000, 10.6161, 16.3985],
         ...,
         [ 0.1000, 10.6161,  9.2351],
         [ 0.1000, 10.6161,  8.9014],
         [ 0.1000, 10.6161,  9.0920]],
        ...,
        [[ 0.1000, 10.5905,  8.8347],
         [ 0.1000, 10.5905,  8.5260],
         [ 0.1000, 10.5905, 16.3320],
         ...,
         [ 0.1000, 10.5905,  8.5729],
         [ 0.1000, 10.5905,  8.2031],
         [ 0.1000, 10.5905,  8.4053]],
        [[ 0.1000, 10.6559, 10.5169],
         [ 0.1000, 10.6559, 10.2516],
         [ 0.1000, 10.6559, 16.5021],
         ...,
         [ 0.1000, 10.6559, 10.3637],
         [ 0.1000, 10.6559, 10.1026],
         [ 0.1000, 10.6559, 10.2686]],
        [[ 0.1000, 10.6981, 11.7658],
         [ 0.1000, 10.6981, 11.5433],
         [ 0.1000, 10.6981, 16.6125],
         ...,
         [ 0.1000, 10.6981, 11.7099],
         [ 0.1000, 10.6981, 11.5523],
         [ 0.1000, 10.6981, 11.6814]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9029],
         [0.1000, 1.0531, 0.9022],
         [0.1000, 1.0531, 0.9240],
         ...,
         [0.1000, 1.0531, 0.9081],
         [0.1000, 1.0531, 0.9124],
         [0.1000, 1.0531, 0.9119]],
        [[0.1000, 1.0495, 0.8118],
         [0.1000, 1.0495, 0.8072],
         [0.1000, 1.0495, 0.9168],
         ...,
         [0.1000, 1.0495, 0.8087],
         [0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8068]],
        [[0.1000, 1.0490, 0.8031],
         [0.1000, 1.0490, 0.7983],
         [0.1000, 1.0490, 0.9159],
         ...,
         [0.1000, 1.0490, 0.7994],
         [0.1000, 1.0490, 0.7940],
         [0.1000, 1.0490, 0.7971]],
        ...,
        [[0.1000, 1.0485, 0.7929],
         [0.1000, 1.0485, 0.7879],
         [0.1000, 1.0485, 0.9149],
         ...,
         [0.1000, 1.0485, 0.7887],
         [0.1000, 1.0485, 0.7826],
         [0.1000, 1.0485, 0.7859]],
        [[0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9176],
         ...,
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8135],
         [0.1000, 1.0499, 0.8162]],
        [[0.1000, 1.0508, 0.8406],
         [0.1000, 1.0508, 0.8370],
         [0.1000, 1.0508, 0.9194],
         ...,
         [0.1000, 1.0508, 0.8397],
         [0.1000, 1.0508, 0.8371],
         [0.1000, 1.0508, 0.8392]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 15.2578],
         [ 0.1000, 10.8051, 18.6381],
         [ 0.1000, 10.8051, 15.4145],
         ...,
         [ 0.1000, 10.8051, 15.5356],
         [ 0.1000, 10.8051, 17.5938],
         [ 0.1000, 10.8051, 16.9170]],
        [[ 0.1000, 10.6368, 10.2477],
         [ 0.1000, 10.6368,  8.9299],
         [ 0.1000, 10.6368, 14.4868],
         ...,
         [ 0.1000, 10.6368, 10.0367],
         [ 0.1000, 10.6368,  8.9430],
         [ 0.1000, 10.6368,  9.3734]],
        [[ 0.1000, 10.6161,  9.7550],
         [ 0.1000, 10.6161,  8.1524],
         [ 0.1000, 10.6161, 14.3759],
         ...,
         [ 0.1000, 10.6161,  9.5084],
         [ 0.1000, 10.6161,  8.2244],
         [ 0.1000, 10.6161,  8.7127]],
        ...,
        [[ 0.1000, 10.5905,  9.1763],
         [ 0.1000, 10.5905,  7.2810],
         [ 0.1000, 10.5905, 14.2395],
         ...,
         [ 0.1000, 10.5905,  8.8910],
         [ 0.1000, 10.5905,  7.4122],
         [ 0.1000, 10.5905,  7.9571]],
        [[ 0.1000, 10.6559, 10.7246],
         [ 0.1000, 10.6559,  9.7133],
         [ 0.1000, 10.6559, 14.5899],
         ...,
         [ 0.1000, 10.6559, 10.5506],
         [ 0.1000, 10.6559,  9.6620],
         [ 0.1000, 10.6559, 10.0277]],
        [[ 0.1000, 10.6981, 11.8571],
         [ 0.1000, 10.6981, 11.6938],
         [ 0.1000, 10.6981, 14.8201],
         ...,
         [ 0.1000, 10.6981, 11.7795],
         [ 0.1000, 10.6981, 11.4599],
         [ 0.1000, 10.6981, 11.6378]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9004],
         [0.1000, 1.0531, 0.9554],
         [0.1000, 1.0531, 0.9030],
         ...,
         [0.1000, 1.0531, 0.9049],
         [0.1000, 1.0531, 0.9384],
         [0.1000, 1.0531, 0.9274]],
        [[0.1000, 1.0495, 0.8189],
         [0.1000, 1.0495, 0.7975],
         [0.1000, 1.0495, 0.8879],
         ...,
         [0.1000, 1.0495, 0.8155],
         [0.1000, 1.0495, 0.7977],
         [0.1000, 1.0495, 0.8047]],
        [[0.1000, 1.0490, 0.8109],
         [0.1000, 1.0490, 0.7849],
         [0.1000, 1.0490, 0.8861],
         ...,
         [0.1000, 1.0490, 0.8069],
         [0.1000, 1.0490, 0.7860],
         [0.1000, 1.0490, 0.7940]],
        ...,
        [[0.1000, 1.0485, 0.8015],
         [0.1000, 1.0485, 0.7707],
         [0.1000, 1.0485, 0.8839],
         ...,
         [0.1000, 1.0485, 0.7969],
         [0.1000, 1.0485, 0.7728],
         [0.1000, 1.0485, 0.7817]],
        [[0.1000, 1.0499, 0.8267],
         [0.1000, 1.0499, 0.8102],
         [0.1000, 1.0499, 0.8896],
         ...,
         [0.1000, 1.0499, 0.8239],
         [0.1000, 1.0499, 0.8094],
         [0.1000, 1.0499, 0.8154]],
        [[0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8425],
         [0.1000, 1.0508, 0.8933],
         ...,
         [0.1000, 1.0508, 0.8438],
         [0.1000, 1.0508, 0.8386],
         [0.1000, 1.0508, 0.8415]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.2536],
         [ 0.1000, 10.8051, 18.6429],
         [ 0.1000, 10.8051, 15.3103],
         ...,
         [ 0.1000, 10.8051, 16.4767],
         [ 0.1000, 10.8051, 18.3159],
         [ 0.1000, 10.8051, 17.4192]],
        [[ 0.1000, 10.6368,  9.6365],
         [ 0.1000, 10.6368,  8.9290],
         [ 0.1000, 10.6368, 14.3301],
         ...,
         [ 0.1000, 10.6368,  9.5394],
         [ 0.1000, 10.6368,  8.8171],
         [ 0.1000, 10.6368,  9.2159]],
        [[ 0.1000, 10.6161,  9.0327],
         [ 0.1000, 10.6161,  8.1512],
         [ 0.1000, 10.6161, 14.2132],
         ...,
         [ 0.1000, 10.6161,  8.9154],
         [ 0.1000, 10.6161,  8.0542],
         [ 0.1000, 10.6161,  8.5175]],
        ...,
        [[ 0.1000, 10.5905,  8.3355],
         [ 0.1000, 10.5905,  7.2795],
         [ 0.1000, 10.5905, 14.0694],
         ...,
         [ 0.1000, 10.5905,  8.1974],
         [ 0.1000, 10.5905,  7.1984],
         [ 0.1000, 10.5905,  7.7238]],
        [[ 0.1000, 10.6559, 10.2298],
         [ 0.1000, 10.6559,  9.7127],
         [ 0.1000, 10.6559, 14.4388],
         ...,
         [ 0.1000, 10.6559, 10.1543],
         [ 0.1000, 10.6559,  9.5854],
         [ 0.1000, 10.6559,  9.9115]],
        [[ 0.1000, 10.6981, 11.6713],
         [ 0.1000, 10.6981, 11.6941],
         [ 0.1000, 10.6981, 14.6818],
         ...,
         [ 0.1000, 10.6981, 11.6548],
         [ 0.1000, 10.6981, 11.5261],
         [ 0.1000, 10.6981, 11.6377]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9187],
         [0.1000, 1.0531, 0.9575],
         [0.1000, 1.0531, 0.9033],
         ...,
         [0.1000, 1.0531, 0.9223],
         [0.1000, 1.0531, 0.9522],
         [0.1000, 1.0531, 0.9376]],
        [[0.1000, 1.0495, 0.8110],
         [0.1000, 1.0495, 0.7995],
         [0.1000, 1.0495, 0.8874],
         ...,
         [0.1000, 1.0495, 0.8095],
         [0.1000, 1.0495, 0.7977],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.8012],
         [0.1000, 1.0490, 0.7869],
         [0.1000, 1.0490, 0.8855],
         ...,
         [0.1000, 1.0490, 0.7993],
         [0.1000, 1.0490, 0.7853],
         [0.1000, 1.0490, 0.7928]],
        ...,
        [[0.1000, 1.0485, 0.7899],
         [0.1000, 1.0485, 0.7727],
         [0.1000, 1.0485, 0.8831],
         ...,
         [0.1000, 1.0485, 0.7876],
         [0.1000, 1.0485, 0.7714],
         [0.1000, 1.0485, 0.7799]],
        [[0.1000, 1.0499, 0.8207],
         [0.1000, 1.0499, 0.8123],
         [0.1000, 1.0499, 0.8891],
         ...,
         [0.1000, 1.0499, 0.8195],
         [0.1000, 1.0499, 0.8102],
         [0.1000, 1.0499, 0.8155]],
        [[0.1000, 1.0508, 0.8441],
         [0.1000, 1.0508, 0.8445],
         [0.1000, 1.0508, 0.8931],
         ...,
         [0.1000, 1.0508, 0.8439],
         [0.1000, 1.0508, 0.8418],
         [0.1000, 1.0508, 0.8436]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 16.7733],
         [ 0.1000, 10.8051, 18.3820],
         [ 0.1000, 10.8051, 15.6461],
         ...,
         [ 0.1000, 10.8051, 16.9242],
         [ 0.1000, 10.8051, 18.0153],
         [ 0.1000, 10.8051, 17.6486]],
        [[ 0.1000, 10.6368,  9.4243],
         [ 0.1000, 10.6368,  8.9811],
         [ 0.1000, 10.6368, 14.8198],
         ...,
         [ 0.1000, 10.6368,  9.3709],
         [ 0.1000, 10.6368,  8.8783],
         [ 0.1000, 10.6368,  9.1530]],
        [[ 0.1000, 10.6161,  8.7752],
         [ 0.1000, 10.6161,  8.2191],
         [ 0.1000, 10.6161, 14.7206],
         ...,
         [ 0.1000, 10.6161,  8.7097],
         [ 0.1000, 10.6161,  8.1337],
         [ 0.1000, 10.6161,  8.4385]],
        ...,
        [[ 0.1000, 10.5905,  8.0313],
         [ 0.1000, 10.5905,  7.3626],
         [ 0.1000, 10.5905, 14.5983],
         ...,
         [ 0.1000, 10.5905,  7.9535],
         [ 0.1000, 10.5905,  7.2958],
         [ 0.1000, 10.5905,  7.6287]],
        [[ 0.1000, 10.6559, 10.0661],
         [ 0.1000, 10.6559,  9.7472],
         [ 0.1000, 10.6559, 14.9119],
         ...,
         [ 0.1000, 10.6559, 10.0259],
         [ 0.1000, 10.6559,  9.6262],
         [ 0.1000, 10.6559,  9.8662]],
        [[ 0.1000, 10.6981, 11.6414],
         [ 0.1000, 10.6981, 11.6769],
         [ 0.1000, 10.6981, 15.1174],
         ...,
         [ 0.1000, 10.6981, 11.6377],
         [ 0.1000, 10.6981, 11.5068],
         [ 0.1000, 10.6981, 11.6429]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9292],
         [0.1000, 1.0531, 0.9554],
         [0.1000, 1.0531, 0.9109],
         ...,
         [0.1000, 1.0531, 0.9316],
         [0.1000, 1.0531, 0.9494],
         [0.1000, 1.0531, 0.9434]],
        [[0.1000, 1.0495, 0.8097],
         [0.1000, 1.0495, 0.8025],
         [0.1000, 1.0495, 0.8974],
         ...,
         [0.1000, 1.0495, 0.8088],
         [0.1000, 1.0495, 0.8008],
         [0.1000, 1.0495, 0.8052]],
        [[0.1000, 1.0490, 0.7991],
         [0.1000, 1.0490, 0.7901],
         [0.1000, 1.0490, 0.8958],
         ...,
         [0.1000, 1.0490, 0.7980],
         [0.1000, 1.0490, 0.7887],
         [0.1000, 1.0490, 0.7936]],
        ...,
        [[0.1000, 1.0485, 0.7870],
         [0.1000, 1.0485, 0.7761],
         [0.1000, 1.0485, 0.8938],
         ...,
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7750],
         [0.1000, 1.0485, 0.7805]],
        [[0.1000, 1.0499, 0.8201],
         [0.1000, 1.0499, 0.8149],
         [0.1000, 1.0499, 0.8989],
         ...,
         [0.1000, 1.0499, 0.8194],
         [0.1000, 1.0499, 0.8129],
         [0.1000, 1.0499, 0.8168]],
        [[0.1000, 1.0508, 0.8457],
         [0.1000, 1.0508, 0.8463],
         [0.1000, 1.0508, 0.9023],
         ...,
         [0.1000, 1.0508, 0.8457],
         [0.1000, 1.0508, 0.8435],
         [0.1000, 1.0508, 0.8457]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.0135],
         [ 0.1000, 10.8051, 17.9184],
         [ 0.1000, 10.8051, 16.7562],
         ...,
         [ 0.1000, 10.8051, 17.9759],
         [ 0.1000, 10.8051, 18.2266],
         [ 0.1000, 10.8051, 18.1165]],
        [[ 0.1000, 10.6368,  9.0624],
         [ 0.1000, 10.6368,  9.0850],
         [ 0.1000, 10.6368, 16.2815],
         ...,
         [ 0.1000, 10.6368,  9.0712],
         [ 0.1000, 10.6368,  8.9602],
         [ 0.1000, 10.6368,  9.0387]],
        [[ 0.1000, 10.6161,  8.3236],
         [ 0.1000, 10.6161,  8.3523],
         [ 0.1000, 10.6161, 16.2237],
         ...,
         [ 0.1000, 10.6161,  8.3348],
         [ 0.1000, 10.6161,  8.2062],
         [ 0.1000, 10.6161,  8.2933]],
        ...,
        [[ 0.1000, 10.5905,  7.4898],
         [ 0.1000, 10.5905,  7.5246],
         [ 0.1000, 10.5905, 16.1523],
         ...,
         [ 0.1000, 10.5905,  7.5034],
         [ 0.1000, 10.5905,  7.3580],
         [ 0.1000, 10.5905,  7.4530]],
        [[ 0.1000, 10.6559,  9.8026],
         [ 0.1000, 10.6559,  9.8183],
         [ 0.1000, 10.6559, 16.3351],
         ...,
         [ 0.1000, 10.6559,  9.8087],
         [ 0.1000, 10.6559,  9.7177],
         [ 0.1000, 10.6559,  9.7863]],
        [[ 0.1000, 10.6981, 11.6569],
         [ 0.1000, 10.6981, 11.6526],
         [ 0.1000, 10.6981, 16.4539],
         ...,
         [ 0.1000, 10.6981, 11.6552],
         [ 0.1000, 10.6981, 11.6234],
         [ 0.1000, 10.6981, 11.6619]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9499],
         [0.1000, 1.0531, 0.9484],
         [0.1000, 1.0531, 0.9295],
         ...,
         [0.1000, 1.0531, 0.9493],
         [0.1000, 1.0531, 0.9534],
         [0.1000, 1.0531, 0.9516]],
        [[0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.9218],
         ...,
         [0.1000, 1.0495, 0.8045],
         [0.1000, 1.0495, 0.8027],
         [0.1000, 1.0495, 0.8040]],
        [[0.1000, 1.0490, 0.7923],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9208],
         ...,
         [0.1000, 1.0490, 0.7925],
         [0.1000, 1.0490, 0.7904],
         [0.1000, 1.0490, 0.7919]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7794],
         [0.1000, 1.0485, 0.9197],
         ...,
         [0.1000, 1.0485, 0.7790],
         [0.1000, 1.0485, 0.7766],
         [0.1000, 1.0485, 0.7782]],
        [[0.1000, 1.0499, 0.8164],
         [0.1000, 1.0499, 0.8167],
         [0.1000, 1.0499, 0.9227],
         ...,
         [0.1000, 1.0499, 0.8165],
         [0.1000, 1.0499, 0.8150],
         [0.1000, 1.0499, 0.8161]],
        [[0.1000, 1.0508, 0.8466],
         [0.1000, 1.0508, 0.8465],
         [0.1000, 1.0508, 0.9246],
         ...,
         [0.1000, 1.0508, 0.8465],
         [0.1000, 1.0508, 0.8460],
         [0.1000, 1.0508, 0.8466]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 18.0708],
         [ 0.1000, 10.8051, 17.8510],
         [ 0.1000, 10.8051, 16.6515],
         ...,
         [ 0.1000, 10.8051, 18.0164],
         [ 0.1000, 10.8051, 18.4041],
         [ 0.1000, 10.8051, 18.0887]],
        [[ 0.1000, 10.6368,  9.0491],
         [ 0.1000, 10.6368,  9.1014],
         [ 0.1000, 10.6368, 16.1495],
         ...,
         [ 0.1000, 10.6368,  9.0617],
         [ 0.1000, 10.6368,  8.9765],
         [ 0.1000, 10.6368,  9.0450]],
        [[ 0.1000, 10.6161,  8.3066],
         [ 0.1000, 10.6161,  8.3732],
         [ 0.1000, 10.6161, 16.0884],
         ...,
         [ 0.1000, 10.6161,  8.3227],
         [ 0.1000, 10.6161,  8.2132],
         [ 0.1000, 10.6161,  8.3013]],
        ...,
        [[ 0.1000, 10.5905,  7.4691],
         [ 0.1000, 10.5905,  7.5499],
         [ 0.1000, 10.5905, 16.0129],
         ...,
         [ 0.1000, 10.5905,  7.4887],
         [ 0.1000, 10.5905,  7.3553],
         [ 0.1000, 10.5905,  7.4628]],
        [[ 0.1000, 10.6559,  9.7934],
         [ 0.1000, 10.6559,  9.8297],
         [ 0.1000, 10.6559, 16.2061],
         ...,
         [ 0.1000, 10.6559,  9.8021],
         [ 0.1000, 10.6559,  9.7441],
         [ 0.1000, 10.6559,  9.7906]],
        [[ 0.1000, 10.6981, 11.6596],
         [ 0.1000, 10.6981, 11.6499],
         [ 0.1000, 10.6981, 16.3317],
         ...,
         [ 0.1000, 10.6981, 11.6570],
         [ 0.1000, 10.6981, 11.6783],
         [ 0.1000, 10.6981, 11.6605]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9505],
         [0.1000, 1.0531, 0.9469],
         [0.1000, 1.0531, 0.9274],
         ...,
         [0.1000, 1.0531, 0.9496],
         [0.1000, 1.0531, 0.9559],
         [0.1000, 1.0531, 0.9508]],
        [[0.1000, 1.0495, 0.8038],
         [0.1000, 1.0495, 0.8046],
         [0.1000, 1.0495, 0.9193],
         ...,
         [0.1000, 1.0495, 0.8040],
         [0.1000, 1.0495, 0.8026],
         [0.1000, 1.0495, 0.8037]],
        [[0.1000, 1.0490, 0.7917],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9183],
         ...,
         [0.1000, 1.0490, 0.7920],
         [0.1000, 1.0490, 0.7902],
         [0.1000, 1.0490, 0.7916]],
        ...,
        [[0.1000, 1.0485, 0.7781],
         [0.1000, 1.0485, 0.7794],
         [0.1000, 1.0485, 0.9170],
         ...,
         [0.1000, 1.0485, 0.7784],
         [0.1000, 1.0485, 0.7762],
         [0.1000, 1.0485, 0.7780]],
        [[0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8165],
         [0.1000, 1.0499, 0.9202],
         ...,
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.8151],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8462],
         [0.1000, 1.0508, 0.8461],
         [0.1000, 1.0508, 0.9222],
         ...,
         [0.1000, 1.0508, 0.8462],
         [0.1000, 1.0508, 0.8465],
         [0.1000, 1.0508, 0.8462]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.9990],
         [ 0.1000, 10.8051, 17.7912],
         [ 0.1000, 10.8051, 16.6372],
         ...,
         [ 0.1000, 10.8051, 17.9330],
         [ 0.1000, 10.8051, 18.0706],
         [ 0.1000, 10.8051, 18.0287]],
        [[ 0.1000, 10.6368,  9.0658],
         [ 0.1000, 10.6368,  9.1163],
         [ 0.1000, 10.6368, 16.1312],
         ...,
         [ 0.1000, 10.6368,  9.0814],
         [ 0.1000, 10.6368,  9.0491],
         [ 0.1000, 10.6368,  9.0588]],
        [[ 0.1000, 10.6161,  8.3279],
         [ 0.1000, 10.6161,  8.3921],
         [ 0.1000, 10.6161, 16.0697],
         ...,
         [ 0.1000, 10.6161,  8.3478],
         [ 0.1000, 10.6161,  8.3066],
         [ 0.1000, 10.6161,  8.3190]],
        ...,
        [[ 0.1000, 10.5905,  7.4950],
         [ 0.1000, 10.5905,  7.5727],
         [ 0.1000, 10.5905, 15.9936],
         ...,
         [ 0.1000, 10.5905,  7.5192],
         [ 0.1000, 10.5905,  7.4692],
         [ 0.1000, 10.5905,  7.4843]],
        [[ 0.1000, 10.6559,  9.8049],
         [ 0.1000, 10.6559,  9.8402],
         [ 0.1000, 10.6559, 16.1882],
         ...,
         [ 0.1000, 10.6559,  9.8158],
         [ 0.1000, 10.6559,  9.7934],
         [ 0.1000, 10.6559,  9.8001]],
        [[ 0.1000, 10.6981, 11.6562],
         [ 0.1000, 10.6981, 11.6476],
         [ 0.1000, 10.6981, 16.3148],
         ...,
         [ 0.1000, 10.6981, 11.6533],
         [ 0.1000, 10.6981, 11.6596],
         [ 0.1000, 10.6981, 11.6576]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9497],
         [0.1000, 1.0531, 0.9463],
         [0.1000, 1.0531, 0.9276],
         ...,
         [0.1000, 1.0531, 0.9487],
         [0.1000, 1.0531, 0.9509],
         [0.1000, 1.0531, 0.9502]],
        [[0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.8053],
         [0.1000, 1.0495, 0.9193],
         ...,
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.8042],
         [0.1000, 1.0495, 0.8043]],
        [[0.1000, 1.0490, 0.7924],
         [0.1000, 1.0490, 0.7935],
         [0.1000, 1.0490, 0.9183],
         ...,
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7923]],
        ...,
        [[0.1000, 1.0485, 0.7789],
         [0.1000, 1.0485, 0.7801],
         [0.1000, 1.0485, 0.9171],
         ...,
         [0.1000, 1.0485, 0.7793],
         [0.1000, 1.0485, 0.7785],
         [0.1000, 1.0485, 0.7787]],
        [[0.1000, 1.0499, 0.8165],
         [0.1000, 1.0499, 0.8170],
         [0.1000, 1.0499, 0.9203],
         ...,
         [0.1000, 1.0499, 0.8166],
         [0.1000, 1.0499, 0.8163],
         [0.1000, 1.0499, 0.8164]],
        [[0.1000, 1.0508, 0.8466],
         [0.1000, 1.0508, 0.8464],
         [0.1000, 1.0508, 0.9223],
         ...,
         [0.1000, 1.0508, 0.8465],
         [0.1000, 1.0508, 0.8466],
         [0.1000, 1.0508, 0.8466]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7116],
         [ 0.1000, 10.8051, 17.2594],
         [ 0.1000, 10.8051, 16.3658],
         ...,
         [ 0.1000, 10.8051, 17.5268],
         [ 0.1000, 10.8051, 15.8225],
         [ 0.1000, 10.8051, 17.5261]],
        [[ 0.1000, 10.6368,  9.1365],
         [ 0.1000, 10.6368,  9.2629],
         [ 0.1000, 10.6368, 15.7830],
         ...,
         [ 0.1000, 10.6368,  9.1858],
         [ 0.1000, 10.6368,  9.8571],
         [ 0.1000, 10.6368,  9.1860]],
        [[ 0.1000, 10.6161,  8.4177],
         [ 0.1000, 10.6161,  8.5761],
         [ 0.1000, 10.6161, 15.7123],
         ...,
         [ 0.1000, 10.6161,  8.4797],
         [ 0.1000, 10.6161,  9.2963],
         [ 0.1000, 10.6161,  8.4800]],
        ...,
        [[ 0.1000, 10.5905,  7.6037],
         [ 0.1000, 10.5905,  7.7940],
         [ 0.1000, 10.5905, 15.6250],
         ...,
         [ 0.1000, 10.5905,  7.6784],
         [ 0.1000, 10.5905,  8.6443],
         [ 0.1000, 10.5905,  7.6787]],
        [[ 0.1000, 10.6559,  9.8545],
         [ 0.1000, 10.6559,  9.9457],
         [ 0.1000, 10.6559, 15.8485],
         ...,
         [ 0.1000, 10.6559,  9.8897],
         [ 0.1000, 10.6559, 10.4049],
         [ 0.1000, 10.6559,  9.8898]],
        [[ 0.1000, 10.6981, 11.6449],
         [ 0.1000, 10.6981, 11.6358],
         [ 0.1000, 10.6981, 15.9941],
         ...,
         [ 0.1000, 10.6981, 11.6398],
         [ 0.1000, 10.6981, 11.7239],
         [ 0.1000, 10.6981, 11.6398]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9391],
         [0.1000, 1.0531, 0.9318],
         [0.1000, 1.0531, 0.9172],
         ...,
         [0.1000, 1.0531, 0.9361],
         [0.1000, 1.0531, 0.9084],
         [0.1000, 1.0531, 0.9361]],
        [[0.1000, 1.0495, 0.7997],
         [0.1000, 1.0495, 0.8017],
         [0.1000, 1.0495, 0.9078],
         ...,
         [0.1000, 1.0495, 0.8005],
         [0.1000, 1.0495, 0.8114],
         [0.1000, 1.0495, 0.8005]],
        [[0.1000, 1.0490, 0.7880],
         [0.1000, 1.0490, 0.7905],
         [0.1000, 1.0490, 0.9066],
         ...,
         [0.1000, 1.0490, 0.7890],
         [0.1000, 1.0490, 0.8023],
         [0.1000, 1.0490, 0.7890]],
        ...,
        [[0.1000, 1.0485, 0.7747],
         [0.1000, 1.0485, 0.7778],
         [0.1000, 1.0485, 0.9052],
         ...,
         [0.1000, 1.0485, 0.7759],
         [0.1000, 1.0485, 0.7917],
         [0.1000, 1.0485, 0.7759]],
        [[0.1000, 1.0499, 0.8113],
         [0.1000, 1.0499, 0.8128],
         [0.1000, 1.0499, 0.9088],
         ...,
         [0.1000, 1.0499, 0.8119],
         [0.1000, 1.0499, 0.8203],
         [0.1000, 1.0499, 0.8119]],
        [[0.1000, 1.0508, 0.8405],
         [0.1000, 1.0508, 0.8403],
         [0.1000, 1.0508, 0.9112],
         ...,
         [0.1000, 1.0508, 0.8404],
         [0.1000, 1.0508, 0.8417],
         [0.1000, 1.0508, 0.8404]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.8502],
         [ 0.1000, 10.8051, 17.5131],
         [ 0.1000, 10.8051, 16.4963],
         ...,
         [ 0.1000, 10.8051, 17.7218],
         [ 0.1000, 10.8051, 16.7920],
         [ 0.1000, 10.8051, 17.7665]],
        [[ 0.1000, 10.6368,  9.1016],
         [ 0.1000, 10.6368,  9.1895],
         [ 0.1000, 10.6368, 15.9513],
         ...,
         [ 0.1000, 10.6368,  9.1339],
         [ 0.1000, 10.6368,  9.4175],
         [ 0.1000, 10.6368,  9.1225]],
        [[ 0.1000, 10.6161,  8.3734],
         [ 0.1000, 10.6161,  8.4845],
         [ 0.1000, 10.6161, 15.8851],
         ...,
         [ 0.1000, 10.6161,  8.4144],
         [ 0.1000, 10.6161,  8.7668],
         [ 0.1000, 10.6161,  8.4000]],
        ...,
        [[ 0.1000, 10.5905,  7.5502],
         [ 0.1000, 10.5905,  7.6841],
         [ 0.1000, 10.5905, 15.8033],
         ...,
         [ 0.1000, 10.5905,  7.5997],
         [ 0.1000, 10.5905,  8.0214],
         [ 0.1000, 10.5905,  7.5823]],
        [[ 0.1000, 10.6559,  9.8299],
         [ 0.1000, 10.6559,  9.8924],
         [ 0.1000, 10.6559, 16.0126],
         ...,
         [ 0.1000, 10.6559,  9.8527],
         [ 0.1000, 10.6559, 10.0610],
         [ 0.1000, 10.6559,  9.8446]],
        [[ 0.1000, 10.6981, 11.6499],
         [ 0.1000, 10.6981, 11.6395],
         [ 0.1000, 10.6981, 16.1489],
         ...,
         [ 0.1000, 10.6981, 11.6452],
         [ 0.1000, 10.6981, 11.6408],
         [ 0.1000, 10.6981, 11.6467]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9469],
         [0.1000, 1.0531, 0.9414],
         [0.1000, 1.0531, 0.9249],
         ...,
         [0.1000, 1.0531, 0.9448],
         [0.1000, 1.0531, 0.9297],
         [0.1000, 1.0531, 0.9455]],
        [[0.1000, 1.0495, 0.8046],
         [0.1000, 1.0495, 0.8060],
         [0.1000, 1.0495, 0.9160],
         ...,
         [0.1000, 1.0495, 0.8051],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.8050]],
        [[0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.7946],
         [0.1000, 1.0490, 0.9149],
         ...,
         [0.1000, 1.0490, 0.7934],
         [0.1000, 1.0490, 0.7992],
         [0.1000, 1.0490, 0.7932]],
        ...,
        [[0.1000, 1.0485, 0.7794],
         [0.1000, 1.0485, 0.7816],
         [0.1000, 1.0485, 0.9136],
         ...,
         [0.1000, 1.0485, 0.7802],
         [0.1000, 1.0485, 0.7870],
         [0.1000, 1.0485, 0.7799]],
        [[0.1000, 1.0499, 0.8165],
         [0.1000, 1.0499, 0.8175],
         [0.1000, 1.0499, 0.9170],
         ...,
         [0.1000, 1.0499, 0.8168],
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8167]],
        [[0.1000, 1.0508, 0.8461],
         [0.1000, 1.0508, 0.8459],
         [0.1000, 1.0508, 0.9192],
         ...,
         [0.1000, 1.0508, 0.8460],
         [0.1000, 1.0508, 0.8459],
         [0.1000, 1.0508, 0.8460]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.8054],
         [ 0.1000, 10.8051, 17.5549],
         [ 0.1000, 10.8051, 16.3025],
         ...,
         [ 0.1000, 10.8051, 17.6606],
         [ 0.1000, 10.8051, 16.7757],
         [ 0.1000, 10.8051, 17.6855]],
        [[ 0.1000, 10.6368,  9.1127],
         [ 0.1000, 10.6368,  9.1781],
         [ 0.1000, 10.6368, 15.7008],
         ...,
         [ 0.1000, 10.6368,  9.1498],
         [ 0.1000, 10.6368,  9.4234],
         [ 0.1000, 10.6368,  9.1433]],
        [[ 0.1000, 10.6161,  8.3876],
         [ 0.1000, 10.6161,  8.4701],
         [ 0.1000, 10.6161, 15.6279],
         ...,
         [ 0.1000, 10.6161,  8.4345],
         [ 0.1000, 10.6161,  8.7741],
         [ 0.1000, 10.6161,  8.4263]],
        ...,
        [[ 0.1000, 10.5905,  7.5673],
         [ 0.1000, 10.5905,  7.6668],
         [ 0.1000, 10.5905, 15.5379],
         ...,
         [ 0.1000, 10.5905,  7.6239],
         [ 0.1000, 10.5905,  8.0301],
         [ 0.1000, 10.5905,  7.6140]],
        [[ 0.1000, 10.6559,  9.8377],
         [ 0.1000, 10.6559,  9.8842],
         [ 0.1000, 10.6559, 15.7684],
         ...,
         [ 0.1000, 10.6559,  9.8640],
         [ 0.1000, 10.6559, 10.0655],
         [ 0.1000, 10.6559,  9.8593]],
        [[ 0.1000, 10.6981, 11.6481],
         [ 0.1000, 10.6981, 11.6404],
         [ 0.1000, 10.6981, 15.9187],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6413],
         [ 0.1000, 10.6981, 11.6441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9387],
         [0.1000, 1.0531, 0.9183],
         ...,
         [0.1000, 1.0531, 0.9404],
         [0.1000, 1.0531, 0.9260],
         [0.1000, 1.0531, 0.9408]],
        [[0.1000, 1.0495, 0.8014],
         [0.1000, 1.0495, 0.8024],
         [0.1000, 1.0495, 0.9085],
         ...,
         [0.1000, 1.0495, 0.8020],
         [0.1000, 1.0495, 0.8064],
         [0.1000, 1.0495, 0.8018]],
        [[0.1000, 1.0490, 0.7896],
         [0.1000, 1.0490, 0.7909],
         [0.1000, 1.0490, 0.9073],
         ...,
         [0.1000, 1.0490, 0.7903],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7902]],
        ...,
        [[0.1000, 1.0485, 0.7762],
         [0.1000, 1.0485, 0.7778],
         [0.1000, 1.0485, 0.9059],
         ...,
         [0.1000, 1.0485, 0.7771],
         [0.1000, 1.0485, 0.7837],
         [0.1000, 1.0485, 0.7770]],
        [[0.1000, 1.0499, 0.8131],
         [0.1000, 1.0499, 0.8139],
         [0.1000, 1.0499, 0.9096],
         ...,
         [0.1000, 1.0499, 0.8136],
         [0.1000, 1.0499, 0.8168],
         [0.1000, 1.0499, 0.8135]],
        [[0.1000, 1.0508, 0.8426],
         [0.1000, 1.0508, 0.8425],
         [0.1000, 1.0508, 0.9120],
         ...,
         [0.1000, 1.0508, 0.8425],
         [0.1000, 1.0508, 0.8425],
         [0.1000, 1.0508, 0.8425]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.6225],
         [ 0.1000, 10.8051, 17.7032],
         [ 0.1000, 10.8051, 16.2198],
         ...,
         [ 0.1000, 10.8051, 17.5999],
         [ 0.1000, 10.8051, 17.5840],
         [ 0.1000, 10.8051, 17.6291]],
        [[ 0.1000, 10.6368,  9.1599],
         [ 0.1000, 10.6368,  9.1387],
         [ 0.1000, 10.6368, 15.5929],
         ...,
         [ 0.1000, 10.6368,  9.1659],
         [ 0.1000, 10.6368,  9.1702],
         [ 0.1000, 10.6368,  9.1581]],
        [[ 0.1000, 10.6161,  8.4472],
         [ 0.1000, 10.6161,  8.4205],
         [ 0.1000, 10.6161, 15.5170],
         ...,
         [ 0.1000, 10.6161,  8.4548],
         [ 0.1000, 10.6161,  8.4602],
         [ 0.1000, 10.6161,  8.4450]],
        ...,
        [[ 0.1000, 10.5905,  7.6392],
         [ 0.1000, 10.5905,  7.6070],
         [ 0.1000, 10.5905, 15.4233],
         ...,
         [ 0.1000, 10.5905,  7.6484],
         [ 0.1000, 10.5905,  7.6548],
         [ 0.1000, 10.5905,  7.6365]],
        [[ 0.1000, 10.6559,  9.8711],
         [ 0.1000, 10.6559,  9.8561],
         [ 0.1000, 10.6559, 15.6633],
         ...,
         [ 0.1000, 10.6559,  9.8755],
         [ 0.1000, 10.6559,  9.8785],
         [ 0.1000, 10.6559,  9.8699]],
        [[ 0.1000, 10.6981, 11.6422],
         [ 0.1000, 10.6981, 11.6446],
         [ 0.1000, 10.6981, 15.8198],
         ...,
         [ 0.1000, 10.6981, 11.6416],
         [ 0.1000, 10.6981, 11.6412],
         [ 0.1000, 10.6981, 11.6424]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9478],
         [0.1000, 1.0531, 0.9491],
         [0.1000, 1.0531, 0.9250],
         ...,
         [0.1000, 1.0531, 0.9475],
         [0.1000, 1.0531, 0.9472],
         [0.1000, 1.0531, 0.9479]],
        [[0.1000, 1.0495, 0.8102],
         [0.1000, 1.0495, 0.8098],
         [0.1000, 1.0495, 0.9148],
         ...,
         [0.1000, 1.0495, 0.8103],
         [0.1000, 1.0495, 0.8103],
         [0.1000, 1.0495, 0.8102]],
        [[0.1000, 1.0490, 0.7986],
         [0.1000, 1.0490, 0.7982],
         [0.1000, 1.0490, 0.9136],
         ...,
         [0.1000, 1.0490, 0.7987],
         [0.1000, 1.0490, 0.7988],
         [0.1000, 1.0490, 0.7986]],
        ...,
        [[0.1000, 1.0485, 0.7854],
         [0.1000, 1.0485, 0.7849],
         [0.1000, 1.0485, 0.9121],
         ...,
         [0.1000, 1.0485, 0.7856],
         [0.1000, 1.0485, 0.7857],
         [0.1000, 1.0485, 0.7854]],
        [[0.1000, 1.0499, 0.8217],
         [0.1000, 1.0499, 0.8215],
         [0.1000, 1.0499, 0.9160],
         ...,
         [0.1000, 1.0499, 0.8218],
         [0.1000, 1.0499, 0.8219],
         [0.1000, 1.0499, 0.8217]],
        [[0.1000, 1.0508, 0.8506],
         [0.1000, 1.0508, 0.8506],
         [0.1000, 1.0508, 0.9185],
         ...,
         [0.1000, 1.0508, 0.8505],
         [0.1000, 1.0508, 0.8505],
         [0.1000, 1.0508, 0.8506]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7537],
         [ 0.1000, 10.8051, 17.6497],
         [ 0.1000, 10.8051, 16.2571],
         ...,
         [ 0.1000, 10.8051, 17.6550],
         [ 0.1000, 10.8051, 17.1715],
         [ 0.1000, 10.8051, 17.6874]],
        [[ 0.1000, 10.6368,  9.1257],
         [ 0.1000, 10.6368,  9.1527],
         [ 0.1000, 10.6368, 15.6417],
         ...,
         [ 0.1000, 10.6368,  9.1513],
         [ 0.1000, 10.6368,  9.2899],
         [ 0.1000, 10.6368,  9.1428]],
        [[ 0.1000, 10.6161,  8.4041],
         [ 0.1000, 10.6161,  8.4381],
         [ 0.1000, 10.6161, 15.5671],
         ...,
         [ 0.1000, 10.6161,  8.4363],
         [ 0.1000, 10.6161,  8.6097],
         [ 0.1000, 10.6161,  8.4256]],
        ...,
        [[ 0.1000, 10.5905,  7.5872],
         [ 0.1000, 10.5905,  7.6283],
         [ 0.1000, 10.5905, 15.4751],
         ...,
         [ 0.1000, 10.5905,  7.6261],
         [ 0.1000, 10.5905,  7.8342],
         [ 0.1000, 10.5905,  7.6132]],
        [[ 0.1000, 10.6559,  9.8469],
         [ 0.1000, 10.6559,  9.8660],
         [ 0.1000, 10.6559, 15.7108],
         ...,
         [ 0.1000, 10.6559,  9.8650],
         [ 0.1000, 10.6559,  9.9656],
         [ 0.1000, 10.6559,  9.8590]],
        [[ 0.1000, 10.6981, 11.6463],
         [ 0.1000, 10.6981, 11.6430],
         [ 0.1000, 10.6981, 15.8645],
         ...,
         [ 0.1000, 10.6981, 11.6431],
         [ 0.1000, 10.6981, 11.6355],
         [ 0.1000, 10.6981, 11.6441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9449],
         [0.1000, 1.0531, 0.9432],
         [0.1000, 1.0531, 0.9206],
         ...,
         [0.1000, 1.0531, 0.9433],
         [0.1000, 1.0531, 0.9354],
         [0.1000, 1.0531, 0.9438]],
        [[0.1000, 1.0495, 0.8046],
         [0.1000, 1.0495, 0.8050],
         [0.1000, 1.0495, 0.9106],
         ...,
         [0.1000, 1.0495, 0.8050],
         [0.1000, 1.0495, 0.8073],
         [0.1000, 1.0495, 0.8049]],
        [[0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.7934],
         [0.1000, 1.0490, 0.9093],
         ...,
         [0.1000, 1.0490, 0.7934],
         [0.1000, 1.0490, 0.7962],
         [0.1000, 1.0490, 0.7932]],
        ...,
        [[0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.7802],
         [0.1000, 1.0485, 0.9079],
         ...,
         [0.1000, 1.0485, 0.7802],
         [0.1000, 1.0485, 0.7836],
         [0.1000, 1.0485, 0.7800]],
        [[0.1000, 1.0499, 0.8163],
         [0.1000, 1.0499, 0.8166],
         [0.1000, 1.0499, 0.9117],
         ...,
         [0.1000, 1.0499, 0.8166],
         [0.1000, 1.0499, 0.8182],
         [0.1000, 1.0499, 0.8165]],
        [[0.1000, 1.0508, 0.8456],
         [0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.9142],
         ...,
         [0.1000, 1.0508, 0.8455],
         [0.1000, 1.0508, 0.8454],
         [0.1000, 1.0508, 0.8455]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7676],
         [ 0.1000, 10.8051, 17.6441],
         [ 0.1000, 10.8051, 16.2610],
         ...,
         [ 0.1000, 10.8051, 17.6608],
         [ 0.1000, 10.8051, 17.1299],
         [ 0.1000, 10.8051, 17.6936]],
        [[ 0.1000, 10.6368,  9.1222],
         [ 0.1000, 10.6368,  9.1542],
         [ 0.1000, 10.6368, 15.6468],
         ...,
         [ 0.1000, 10.6368,  9.1498],
         [ 0.1000, 10.6368,  9.3030],
         [ 0.1000, 10.6368,  9.1412]],
        [[ 0.1000, 10.6161,  8.3996],
         [ 0.1000, 10.6161,  8.4400],
         [ 0.1000, 10.6161, 15.5724],
         ...,
         [ 0.1000, 10.6161,  8.4344],
         [ 0.1000, 10.6161,  8.6259],
         [ 0.1000, 10.6161,  8.4236]],
        ...,
        [[ 0.1000, 10.5905,  7.5818],
         [ 0.1000, 10.5905,  7.6305],
         [ 0.1000, 10.5905, 15.4805],
         ...,
         [ 0.1000, 10.5905,  7.6238],
         [ 0.1000, 10.5905,  7.8536],
         [ 0.1000, 10.5905,  7.6108]],
        [[ 0.1000, 10.6559,  9.8444],
         [ 0.1000, 10.6559,  9.8671],
         [ 0.1000, 10.6559, 15.7158],
         ...,
         [ 0.1000, 10.6559,  9.8639],
         [ 0.1000, 10.6559,  9.9753],
         [ 0.1000, 10.6559,  9.8578]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8691],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9446],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9201],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9342],
         [0.1000, 1.0531, 0.9434]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8045],
         [0.1000, 1.0495, 0.9101],
         ...,
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.8069],
         [0.1000, 1.0495, 0.8043]],
        [[0.1000, 1.0490, 0.7922],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9089],
         ...,
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.7959],
         [0.1000, 1.0490, 0.7926]],
        ...,
        [[0.1000, 1.0485, 0.7789],
         [0.1000, 1.0485, 0.7797],
         [0.1000, 1.0485, 0.9074],
         ...,
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7794]],
        [[0.1000, 1.0499, 0.8157],
         [0.1000, 1.0499, 0.8161],
         [0.1000, 1.0499, 0.9112],
         ...,
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8159]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9137],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8450]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7690],
         [ 0.1000, 10.8051, 17.6435],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6614],
         [ 0.1000, 10.8051, 17.1256],
         [ 0.1000, 10.8051, 17.6942]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6473],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3044],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3992],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5729],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6276],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5813],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8556],
         [ 0.1000, 10.5905,  7.6106]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7163],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9763],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8696],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9341],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1251],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.6793],
         [ 0.1000, 10.8051, 17.6081],
         [ 0.1000, 10.8051, 16.2604],
         ...,
         [ 0.1000, 10.8051, 17.6183],
         [ 0.1000, 10.8051, 17.3116],
         [ 0.1000, 10.8051, 17.6369]],
        [[ 0.1000, 10.6368,  9.1449],
         [ 0.1000, 10.6368,  9.1637],
         [ 0.1000, 10.6368, 15.6459],
         ...,
         [ 0.1000, 10.6368,  9.1610],
         [ 0.1000, 10.6368,  9.2472],
         [ 0.1000, 10.6368,  9.1561]],
        [[ 0.1000, 10.6161,  8.4283],
         [ 0.1000, 10.6161,  8.4520],
         [ 0.1000, 10.6161, 15.5715],
         ...,
         [ 0.1000, 10.6161,  8.4486],
         [ 0.1000, 10.6161,  8.5566],
         [ 0.1000, 10.6161,  8.4424]],
        ...,
        [[ 0.1000, 10.5905,  7.6165],
         [ 0.1000, 10.5905,  7.6450],
         [ 0.1000, 10.5905, 15.4796],
         ...,
         [ 0.1000, 10.5905,  7.6409],
         [ 0.1000, 10.5905,  7.7707],
         [ 0.1000, 10.5905,  7.6334]],
        [[ 0.1000, 10.6559,  9.8605],
         [ 0.1000, 10.6559,  9.8739],
         [ 0.1000, 10.6559, 15.7150],
         ...,
         [ 0.1000, 10.6559,  9.8719],
         [ 0.1000, 10.6559,  9.9343],
         [ 0.1000, 10.6559,  9.8684]],
        [[ 0.1000, 10.6981, 11.6439],
         [ 0.1000, 10.6981, 11.6418],
         [ 0.1000, 10.6981, 15.8684],
         ...,
         [ 0.1000, 10.6981, 11.6421],
         [ 0.1000, 10.6981, 11.6363],
         [ 0.1000, 10.6981, 11.6426]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9461],
         [0.1000, 1.0531, 0.9450],
         [0.1000, 1.0531, 0.9231],
         ...,
         [0.1000, 1.0531, 0.9451],
         [0.1000, 1.0531, 0.9402],
         [0.1000, 1.0531, 0.9455]],
        [[0.1000, 1.0495, 0.8073],
         [0.1000, 1.0495, 0.8076],
         [0.1000, 1.0495, 0.9131],
         ...,
         [0.1000, 1.0495, 0.8076],
         [0.1000, 1.0495, 0.8090],
         [0.1000, 1.0495, 0.8075]],
        [[0.1000, 1.0490, 0.7957],
         [0.1000, 1.0490, 0.7961],
         [0.1000, 1.0490, 0.9119],
         ...,
         [0.1000, 1.0490, 0.7960],
         [0.1000, 1.0490, 0.7978],
         [0.1000, 1.0490, 0.7959]],
        ...,
        [[0.1000, 1.0485, 0.7825],
         [0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.9104],
         ...,
         [0.1000, 1.0485, 0.7829],
         [0.1000, 1.0485, 0.7850],
         [0.1000, 1.0485, 0.7827]],
        [[0.1000, 1.0499, 0.8190],
         [0.1000, 1.0499, 0.8192],
         [0.1000, 1.0499, 0.9142],
         ...,
         [0.1000, 1.0499, 0.8192],
         [0.1000, 1.0499, 0.8202],
         [0.1000, 1.0499, 0.8191]],
        [[0.1000, 1.0508, 0.8480],
         [0.1000, 1.0508, 0.8479],
         [0.1000, 1.0508, 0.9167],
         ...,
         [0.1000, 1.0508, 0.8479],
         [0.1000, 1.0508, 0.8479],
         [0.1000, 1.0508, 0.8480]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7592],
         [ 0.1000, 10.8051, 17.6395],
         [ 0.1000, 10.8051, 16.2614],
         ...,
         [ 0.1000, 10.8051, 17.6567],
         [ 0.1000, 10.8051, 17.1453],
         [ 0.1000, 10.8051, 17.6879]],
        [[ 0.1000, 10.6368,  9.1243],
         [ 0.1000, 10.6368,  9.1554],
         [ 0.1000, 10.6368, 15.6472],
         ...,
         [ 0.1000, 10.6368,  9.1508],
         [ 0.1000, 10.6368,  9.2981],
         [ 0.1000, 10.6368,  9.1427]],
        [[ 0.1000, 10.6161,  8.4023],
         [ 0.1000, 10.6161,  8.4415],
         [ 0.1000, 10.6161, 15.5728],
         ...,
         [ 0.1000, 10.6161,  8.4358],
         [ 0.1000, 10.6161,  8.6198],
         [ 0.1000, 10.6161,  8.4255]],
        ...,
        [[ 0.1000, 10.5905,  7.5851],
         [ 0.1000, 10.5905,  7.6324],
         [ 0.1000, 10.5905, 15.4810],
         ...,
         [ 0.1000, 10.5905,  7.6255],
         [ 0.1000, 10.5905,  7.8463],
         [ 0.1000, 10.5905,  7.6130]],
        [[ 0.1000, 10.6559,  9.8459],
         [ 0.1000, 10.6559,  9.8679],
         [ 0.1000, 10.6559, 15.7162],
         ...,
         [ 0.1000, 10.6559,  9.8647],
         [ 0.1000, 10.6559,  9.9716],
         [ 0.1000, 10.6559,  9.8589]],
        [[ 0.1000, 10.6981, 11.6465],
         [ 0.1000, 10.6981, 11.6427],
         [ 0.1000, 10.6981, 15.8695],
         ...,
         [ 0.1000, 10.6981, 11.6432],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6441]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9447],
         [0.1000, 1.0531, 0.9427],
         [0.1000, 1.0531, 0.9203],
         ...,
         [0.1000, 1.0531, 0.9430],
         [0.1000, 1.0531, 0.9347],
         [0.1000, 1.0531, 0.9435]],
        [[0.1000, 1.0495, 0.8042],
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.9103],
         ...,
         [0.1000, 1.0495, 0.8047],
         [0.1000, 1.0495, 0.8071],
         [0.1000, 1.0495, 0.8045]],
        [[0.1000, 1.0490, 0.7925],
         [0.1000, 1.0490, 0.7931],
         [0.1000, 1.0490, 0.9091],
         ...,
         [0.1000, 1.0490, 0.7930],
         [0.1000, 1.0490, 0.7960],
         [0.1000, 1.0490, 0.7929]],
        ...,
        [[0.1000, 1.0485, 0.7792],
         [0.1000, 1.0485, 0.7800],
         [0.1000, 1.0485, 0.9076],
         ...,
         [0.1000, 1.0485, 0.7799],
         [0.1000, 1.0485, 0.7835],
         [0.1000, 1.0485, 0.7797]],
        [[0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.8163],
         [0.1000, 1.0499, 0.9115],
         ...,
         [0.1000, 1.0499, 0.8163],
         [0.1000, 1.0499, 0.8180],
         [0.1000, 1.0499, 0.8162]],
        [[0.1000, 1.0508, 0.8453],
         [0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.9140],
         ...,
         [0.1000, 1.0508, 0.8452],
         [0.1000, 1.0508, 0.8451],
         [0.1000, 1.0508, 0.8452]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7680],
         [ 0.1000, 10.8051, 17.6430],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6609],
         [ 0.1000, 10.8051, 17.1275],
         [ 0.1000, 10.8051, 17.6935]],
        [[ 0.1000, 10.6368,  9.1221],
         [ 0.1000, 10.6368,  9.1545],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1497],
         [ 0.1000, 10.6368,  9.3038],
         [ 0.1000, 10.6368,  9.1412]],
        [[ 0.1000, 10.6161,  8.3995],
         [ 0.1000, 10.6161,  8.4403],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4344],
         [ 0.1000, 10.6161,  8.6268],
         [ 0.1000, 10.6161,  8.4236]],
        ...,
        [[ 0.1000, 10.5905,  7.5817],
         [ 0.1000, 10.5905,  7.6310],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6238],
         [ 0.1000, 10.5905,  7.8547],
         [ 0.1000, 10.5905,  7.6108]],
        [[ 0.1000, 10.6559,  9.8443],
         [ 0.1000, 10.6559,  9.8673],
         [ 0.1000, 10.6559, 15.7163],
         ...,
         [ 0.1000, 10.6559,  9.8639],
         [ 0.1000, 10.6559,  9.9758],
         [ 0.1000, 10.6559,  9.8578]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9341],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.8069],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7922],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7959],
         [0.1000, 1.0490, 0.7926]],
        ...,
        [[0.1000, 1.0485, 0.7789],
         [0.1000, 1.0485, 0.7797],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8157],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9112],
         ...,
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8159]],
        [[0.1000, 1.0508, 0.8450],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9137],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7690],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6614],
         [ 0.1000, 10.8051, 17.1253],
         [ 0.1000, 10.8051, 17.6942]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3992],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6277],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5813],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8557],
         [ 0.1000, 10.5905,  7.6106]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9763],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1251],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3045],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
COST SHAPE IS  torch.Size([1000, 10, 3])
BEFORE NORMALIZATION:
tensor([[[ 0.1000, 10.8051, 17.7692],
         [ 0.1000, 10.8051, 17.6434],
         [ 0.1000, 10.8051, 16.2615],
         ...,
         [ 0.1000, 10.8051, 17.6615],
         [ 0.1000, 10.8051, 17.1250],
         [ 0.1000, 10.8051, 17.6943]],
        [[ 0.1000, 10.6368,  9.1218],
         [ 0.1000, 10.6368,  9.1543],
         [ 0.1000, 10.6368, 15.6474],
         ...,
         [ 0.1000, 10.6368,  9.1496],
         [ 0.1000, 10.6368,  9.3046],
         [ 0.1000, 10.6368,  9.1410]],
        [[ 0.1000, 10.6161,  8.3991],
         [ 0.1000, 10.6161,  8.4402],
         [ 0.1000, 10.6161, 15.5730],
         ...,
         [ 0.1000, 10.6161,  8.4342],
         [ 0.1000, 10.6161,  8.6278],
         [ 0.1000, 10.6161,  8.4234]],
        ...,
        [[ 0.1000, 10.5905,  7.5812],
         [ 0.1000, 10.5905,  7.6308],
         [ 0.1000, 10.5905, 15.4811],
         ...,
         [ 0.1000, 10.5905,  7.6236],
         [ 0.1000, 10.5905,  7.8558],
         [ 0.1000, 10.5905,  7.6105]],
        [[ 0.1000, 10.6559,  9.8441],
         [ 0.1000, 10.6559,  9.8672],
         [ 0.1000, 10.6559, 15.7164],
         ...,
         [ 0.1000, 10.6559,  9.8638],
         [ 0.1000, 10.6559,  9.9764],
         [ 0.1000, 10.6559,  9.8577]],
        [[ 0.1000, 10.6981, 11.6468],
         [ 0.1000, 10.6981, 11.6428],
         [ 0.1000, 10.6981, 15.8697],
         ...,
         [ 0.1000, 10.6981, 11.6433],
         [ 0.1000, 10.6981, 11.6356],
         [ 0.1000, 10.6981, 11.6443]]], device='cuda:0', dtype=torch.float64)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 10, 3])
tensor([[[0.1000, 1.0531, 0.9445],
         [0.1000, 1.0531, 0.9425],
         [0.1000, 1.0531, 0.9200],
         ...,
         [0.1000, 1.0531, 0.9428],
         [0.1000, 1.0531, 0.9340],
         [0.1000, 1.0531, 0.9433]],
        [[0.1000, 1.0495, 0.8039],
         [0.1000, 1.0495, 0.8044],
         [0.1000, 1.0495, 0.9100],
         ...,
         [0.1000, 1.0495, 0.8043],
         [0.1000, 1.0495, 0.8068],
         [0.1000, 1.0495, 0.8042]],
        [[0.1000, 1.0490, 0.7921],
         [0.1000, 1.0490, 0.7928],
         [0.1000, 1.0490, 0.9088],
         ...,
         [0.1000, 1.0490, 0.7927],
         [0.1000, 1.0490, 0.7958],
         [0.1000, 1.0490, 0.7925]],
        ...,
        [[0.1000, 1.0485, 0.7788],
         [0.1000, 1.0485, 0.7796],
         [0.1000, 1.0485, 0.9073],
         ...,
         [0.1000, 1.0485, 0.7795],
         [0.1000, 1.0485, 0.7833],
         [0.1000, 1.0485, 0.7793]],
        [[0.1000, 1.0499, 0.8156],
         [0.1000, 1.0499, 0.8160],
         [0.1000, 1.0499, 0.9111],
         ...,
         [0.1000, 1.0499, 0.8159],
         [0.1000, 1.0499, 0.8178],
         [0.1000, 1.0499, 0.8158]],
        [[0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.9136],
         ...,
         [0.1000, 1.0508, 0.8449],
         [0.1000, 1.0508, 0.8448],
         [0.1000, 1.0508, 0.8449]]], device='cuda:0', dtype=torch.float64)
COST SHAPE IS  torch.Size([1000, 1, 3])
BEFORE NORMALIZATION:
tensor([[[11.1712, 10.8051, 17.9059]],
        [[10.9957, 10.6368,  9.0880]],
        [[10.9741, 10.6161,  8.3562]],
        ...,
        [[10.9475, 10.5905,  7.5293]],
        [[11.0156, 10.6559,  9.8204]],
        [[11.0597, 10.6981, 11.6521]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CatBackward0>)
AFTER NORMALIZATION:
COST SHAPE IS  torch.Size([1000, 1, 3])
tensor([[[1.0038, 1.0531, 0.9515]],
        [[1.0015, 1.0495, 0.8081]],
        [[1.0012, 1.0490, 0.7962]],
        ...,
        [[1.0009, 1.0485, 0.7828]],
        [[1.0018, 1.0499, 0.8200]],
        [[1.0024, 1.0508, 0.8498]]], device='cuda:0', dtype=torch.float64,
       grad_fn=<CopySlices>)
         [0.1000, 1.0485, 0.7924],,